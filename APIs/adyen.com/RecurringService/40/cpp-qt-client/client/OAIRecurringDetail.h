/**
 * Adyen Recurring API
 * The Recurring APIs allow you to manage and remove your tokens or saved payment details. Tokens should be created with validation during a payment request.  For more information, refer to our [Tokenization documentation](https://docs.adyen.com/online-payments/tokenization). ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Recurring API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Recurring/v40/disable ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Recurring/v40/disable ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 40
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecurringDetail.h
 *
 * 
 */

#ifndef OAIRecurringDetail_H
#define OAIRecurringDetail_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIBankAccount.h"
#include "OAICard.h"
#include "OAIName.h"
#include "OAITokenDetails.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBankAccount;
class OAIAddress;
class OAICard;
class OAIName;
class OAITokenDetails;

class OAIRecurringDetail : public OAIObject {
public:
    OAIRecurringDetail();
    OAIRecurringDetail(QString json);
    ~OAIRecurringDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAdditionalData() const;
    void setAdditionalData(const QMap<QString, QString> &additional_data);
    bool is_additional_data_Set() const;
    bool is_additional_data_Valid() const;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    QString getAliasType() const;
    void setAliasType(const QString &alias_type);
    bool is_alias_type_Set() const;
    bool is_alias_type_Valid() const;

    OAIBankAccount getBank() const;
    void setBank(const OAIBankAccount &bank);
    bool is_bank_Set() const;
    bool is_bank_Valid() const;

    OAIAddress getBillingAddress() const;
    void setBillingAddress(const OAIAddress &billing_address);
    bool is_billing_address_Set() const;
    bool is_billing_address_Valid() const;

    OAICard getCard() const;
    void setCard(const OAICard &card);
    bool is_card_Set() const;
    bool is_card_Valid() const;

    QList<QString> getContractTypes() const;
    void setContractTypes(const QList<QString> &contract_types);
    bool is_contract_types_Set() const;
    bool is_contract_types_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getFirstPspReference() const;
    void setFirstPspReference(const QString &first_psp_reference);
    bool is_first_psp_reference_Set() const;
    bool is_first_psp_reference_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPaymentMethodVariant() const;
    void setPaymentMethodVariant(const QString &payment_method_variant);
    bool is_payment_method_variant_Set() const;
    bool is_payment_method_variant_Valid() const;

    QString getRecurringDetailReference() const;
    void setRecurringDetailReference(const QString &recurring_detail_reference);
    bool is_recurring_detail_reference_Set() const;
    bool is_recurring_detail_reference_Valid() const;

    OAIName getShopperName() const;
    void setShopperName(const OAIName &shopper_name);
    bool is_shopper_name_Set() const;
    bool is_shopper_name_Valid() const;

    QString getSocialSecurityNumber() const;
    void setSocialSecurityNumber(const QString &social_security_number);
    bool is_social_security_number_Set() const;
    bool is_social_security_number_Valid() const;

    OAITokenDetails getTokenDetails() const;
    void setTokenDetails(const OAITokenDetails &token_details);
    bool is_token_details_Set() const;
    bool is_token_details_Valid() const;

    QString getVariant() const;
    void setVariant(const QString &variant);
    bool is_variant_Set() const;
    bool is_variant_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_additional_data;
    bool m_additional_data_isSet;
    bool m_additional_data_isValid;

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    QString m_alias_type;
    bool m_alias_type_isSet;
    bool m_alias_type_isValid;

    OAIBankAccount m_bank;
    bool m_bank_isSet;
    bool m_bank_isValid;

    OAIAddress m_billing_address;
    bool m_billing_address_isSet;
    bool m_billing_address_isValid;

    OAICard m_card;
    bool m_card_isSet;
    bool m_card_isValid;

    QList<QString> m_contract_types;
    bool m_contract_types_isSet;
    bool m_contract_types_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_first_psp_reference;
    bool m_first_psp_reference_isSet;
    bool m_first_psp_reference_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_payment_method_variant;
    bool m_payment_method_variant_isSet;
    bool m_payment_method_variant_isValid;

    QString m_recurring_detail_reference;
    bool m_recurring_detail_reference_isSet;
    bool m_recurring_detail_reference_isValid;

    OAIName m_shopper_name;
    bool m_shopper_name_isSet;
    bool m_shopper_name_isValid;

    QString m_social_security_number;
    bool m_social_security_number_isSet;
    bool m_social_security_number_isValid;

    OAITokenDetails m_token_details;
    bool m_token_details_isSet;
    bool m_token_details_isValid;

    QString m_variant;
    bool m_variant_isSet;
    bool m_variant_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecurringDetail)

#endif // OAIRecurringDetail_H
