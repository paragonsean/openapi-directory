/**
 * Adyen Recurring API
 * The Recurring APIs allow you to manage and remove your tokens or saved payment details. Tokens should be created with validation during a payment request.  For more information, refer to our [Tokenization documentation](https://docs.adyen.com/online-payments/tokenization). ## Authentication You need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication, for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ```  ## Versioning Recurring API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Recurring/v25/disable ```  ## Going live  To authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account: ```  https://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Recurring/v25/disable ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.
 *
 * The version of the OpenAPI document: 25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DisableRequest from '../model/DisableRequest';
import DisableResult from '../model/DisableResult';
import NotifyShopperRequest from '../model/NotifyShopperRequest';
import NotifyShopperResult from '../model/NotifyShopperResult';
import RecurringDetailsRequest from '../model/RecurringDetailsRequest';
import RecurringDetailsResult from '../model/RecurringDetailsResult';
import ScheduleAccountUpdaterRequest from '../model/ScheduleAccountUpdaterRequest';
import ScheduleAccountUpdaterResult from '../model/ScheduleAccountUpdaterResult';
import ServiceError from '../model/ServiceError';

/**
* General service.
* @module api/GeneralApi
* @version 25
*/
export default class GeneralApi {

    /**
    * Constructs a new GeneralApi. 
    * @alias module:api/GeneralApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postDisable operation.
     * @callback module:api/GeneralApi~postDisableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DisableResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disable stored payment details
     * Disables stored payment details to stop charging a shopper with this particular recurring detail ID.  For more information, refer to [Disable stored details](https://docs.adyen.com/classic-integration/recurring-payments/disable-stored-details/).
     * @param {Object} opts Optional parameters
     * @param {module:model/DisableRequest} [disableRequest] 
     * @param {module:api/GeneralApi~postDisableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DisableResult}
     */
    postDisable(opts, callback) {
      opts = opts || {};
      let postBody = opts['disableRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DisableResult;
      return this.apiClient.callApi(
        '/disable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postListRecurringDetails operation.
     * @callback module:api/GeneralApi~postListRecurringDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RecurringDetailsResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get stored payment details
     * Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.  For more information, refer to [Retrieve stored details](https://docs.adyen.com/classic-integration/recurring-payments/retrieve-stored-details/).
     * @param {Object} opts Optional parameters
     * @param {module:model/RecurringDetailsRequest} [recurringDetailsRequest] 
     * @param {module:api/GeneralApi~postListRecurringDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RecurringDetailsResult}
     */
    postListRecurringDetails(opts, callback) {
      opts = opts || {};
      let postBody = opts['recurringDetailsRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RecurringDetailsResult;
      return this.apiClient.callApi(
        '/listRecurringDetails', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postNotifyShopper operation.
     * @callback module:api/GeneralApi~postNotifyShopperCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NotifyShopperResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Ask issuer to notify the shopper
     * Sends a request to the issuer so they can inform the shopper about the upcoming recurring payment. This endpoint is used only for local acquiring in India. For more information, refer to [Recurring card payments in India](https://docs.adyen.com/payment-methods/cards/cards-recurring-india).
     * @param {Object} opts Optional parameters
     * @param {module:model/NotifyShopperRequest} [notifyShopperRequest] 
     * @param {module:api/GeneralApi~postNotifyShopperCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NotifyShopperResult}
     */
    postNotifyShopper(opts, callback) {
      opts = opts || {};
      let postBody = opts['notifyShopperRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NotifyShopperResult;
      return this.apiClient.callApi(
        '/notifyShopper', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postScheduleAccountUpdater operation.
     * @callback module:api/GeneralApi~postScheduleAccountUpdaterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScheduleAccountUpdaterResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Schedule running the Account Updater
     * When making the API call, you can submit either the credit card information, or the recurring detail reference and the shopper reference: * If the card information is provided, all the sub-fields for `card` are mandatory. * If the recurring detail reference is provided, the fields for `shopperReference` and `selectedRecurringDetailReference` are mandatory.
     * @param {Object} opts Optional parameters
     * @param {module:model/ScheduleAccountUpdaterRequest} [scheduleAccountUpdaterRequest] 
     * @param {module:api/GeneralApi~postScheduleAccountUpdaterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScheduleAccountUpdaterResult}
     */
    postScheduleAccountUpdater(opts, callback) {
      opts = opts || {};
      let postBody = opts['scheduleAccountUpdaterRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth', 'ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ScheduleAccountUpdaterResult;
      return this.apiClient.callApi(
        '/scheduleAccountUpdater', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
