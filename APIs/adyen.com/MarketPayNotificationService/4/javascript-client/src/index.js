/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccountCloseNotification from './model/AccountCloseNotification';
import AccountCreateNotification from './model/AccountCreateNotification';
import AccountEvent from './model/AccountEvent';
import AccountEventWrapper from './model/AccountEventWrapper';
import AccountFundsBelowThresholdNotification from './model/AccountFundsBelowThresholdNotification';
import AccountFundsBelowThresholdNotificationContent from './model/AccountFundsBelowThresholdNotificationContent';
import AccountHolderCreateNotification from './model/AccountHolderCreateNotification';
import AccountHolderDetails from './model/AccountHolderDetails';
import AccountHolderPayoutNotification from './model/AccountHolderPayoutNotification';
import AccountHolderPayoutNotificationContent from './model/AccountHolderPayoutNotificationContent';
import AccountHolderStatus from './model/AccountHolderStatus';
import AccountHolderStatusChangeNotification from './model/AccountHolderStatusChangeNotification';
import AccountHolderStatusChangeNotificationContent from './model/AccountHolderStatusChangeNotificationContent';
import AccountHolderStoreStatusChangeNotification from './model/AccountHolderStoreStatusChangeNotification';
import AccountHolderUpcomingDeadlineNotification from './model/AccountHolderUpcomingDeadlineNotification';
import AccountHolderUpcomingDeadlineNotificationContent from './model/AccountHolderUpcomingDeadlineNotificationContent';
import AccountHolderUpdateNotification from './model/AccountHolderUpdateNotification';
import AccountHolderVerificationNotification from './model/AccountHolderVerificationNotification';
import AccountHolderVerificationNotificationContent from './model/AccountHolderVerificationNotificationContent';
import AccountPayoutState from './model/AccountPayoutState';
import AccountProcessingState from './model/AccountProcessingState';
import AccountUpdateNotification from './model/AccountUpdateNotification';
import Amount from './model/Amount';
import AmountWrapper from './model/AmountWrapper';
import BankAccountDetail from './model/BankAccountDetail';
import BankAccountDetailWrapper from './model/BankAccountDetailWrapper';
import BeneficiarySetupNotification from './model/BeneficiarySetupNotification';
import BeneficiarySetupNotificationContent from './model/BeneficiarySetupNotificationContent';
import BusinessDetails from './model/BusinessDetails';
import CloseAccountResponse from './model/CloseAccountResponse';
import CompensateNegativeBalanceNotification from './model/CompensateNegativeBalanceNotification';
import CompensateNegativeBalanceNotificationContent from './model/CompensateNegativeBalanceNotificationContent';
import CompensateNegativeBalanceNotificationRecord from './model/CompensateNegativeBalanceNotificationRecord';
import CompensateNegativeBalanceNotificationRecordWrapper from './model/CompensateNegativeBalanceNotificationRecordWrapper';
import CreateAccountHolderResponse from './model/CreateAccountHolderResponse';
import CreateAccountResponse from './model/CreateAccountResponse';
import DirectDebitInitiatedNotification from './model/DirectDebitInitiatedNotification';
import DirectDebitInitiatedNotificationContent from './model/DirectDebitInitiatedNotificationContent';
import ErrorFieldType from './model/ErrorFieldType';
import ErrorFieldTypeWrapper from './model/ErrorFieldTypeWrapper';
import FieldType from './model/FieldType';
import FieldTypeWrapper from './model/FieldTypeWrapper';
import IndividualDetails from './model/IndividualDetails';
import KYCBankAccountCheckResult from './model/KYCBankAccountCheckResult';
import KYCCheckResult from './model/KYCCheckResult';
import KYCCheckStatusData from './model/KYCCheckStatusData';
import KYCCheckSummary from './model/KYCCheckSummary';
import KYCShareholderCheckResult from './model/KYCShareholderCheckResult';
import KYCSignatoryCheckResult from './model/KYCSignatoryCheckResult';
import KYCVerificationResult from './model/KYCVerificationResult';
import LocalDate from './model/LocalDate';
import Message from './model/Message';
import NotificationResponse from './model/NotificationResponse';
import OperationStatus from './model/OperationStatus';
import PaymentFailureNotification from './model/PaymentFailureNotification';
import PaymentFailureNotificationContent from './model/PaymentFailureNotificationContent';
import PayoutScheduleResponse from './model/PayoutScheduleResponse';
import PersonalDocumentData from './model/PersonalDocumentData';
import PersonalDocumentDataWrapper from './model/PersonalDocumentDataWrapper';
import RefundFundsTransferNotification from './model/RefundFundsTransferNotification';
import RefundFundsTransferNotificationContent from './model/RefundFundsTransferNotificationContent';
import RefundResult from './model/RefundResult';
import RefundResultWrapper from './model/RefundResultWrapper';
import ReportAvailableNotification from './model/ReportAvailableNotification';
import ReportAvailableNotificationContent from './model/ReportAvailableNotificationContent';
import ScheduledRefundsNotification from './model/ScheduledRefundsNotification';
import ScheduledRefundsNotificationContent from './model/ScheduledRefundsNotificationContent';
import ShareholderContact from './model/ShareholderContact';
import ShareholderContactWrapper from './model/ShareholderContactWrapper';
import SignatoryContact from './model/SignatoryContact';
import SignatoryContactWrapper from './model/SignatoryContactWrapper';
import Split from './model/Split';
import SplitAmount from './model/SplitAmount';
import Transaction from './model/Transaction';
import TransferFundsNotification from './model/TransferFundsNotification';
import TransferFundsNotificationContent from './model/TransferFundsNotificationContent';
import UltimateParentCompany from './model/UltimateParentCompany';
import UltimateParentCompanyBusinessDetails from './model/UltimateParentCompanyBusinessDetails';
import UltimateParentCompanyWrapper from './model/UltimateParentCompanyWrapper';
import UpdateAccountHolderResponse from './model/UpdateAccountHolderResponse';
import UpdateAccountResponse from './model/UpdateAccountResponse';
import ViasAddress from './model/ViasAddress';
import ViasName from './model/ViasName';
import ViasPersonalData from './model/ViasPersonalData';
import ViasPhoneNumber from './model/ViasPhoneNumber';


/**
* This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ClassicPlatformsNotifications = require('index'); // See note below*.
* var xxxSvc = new ClassicPlatformsNotifications.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ClassicPlatformsNotifications.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ClassicPlatformsNotifications.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ClassicPlatformsNotifications.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 4
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccountCloseNotification model constructor.
     * @property {module:model/AccountCloseNotification}
     */
    AccountCloseNotification,

    /**
     * The AccountCreateNotification model constructor.
     * @property {module:model/AccountCreateNotification}
     */
    AccountCreateNotification,

    /**
     * The AccountEvent model constructor.
     * @property {module:model/AccountEvent}
     */
    AccountEvent,

    /**
     * The AccountEventWrapper model constructor.
     * @property {module:model/AccountEventWrapper}
     */
    AccountEventWrapper,

    /**
     * The AccountFundsBelowThresholdNotification model constructor.
     * @property {module:model/AccountFundsBelowThresholdNotification}
     */
    AccountFundsBelowThresholdNotification,

    /**
     * The AccountFundsBelowThresholdNotificationContent model constructor.
     * @property {module:model/AccountFundsBelowThresholdNotificationContent}
     */
    AccountFundsBelowThresholdNotificationContent,

    /**
     * The AccountHolderCreateNotification model constructor.
     * @property {module:model/AccountHolderCreateNotification}
     */
    AccountHolderCreateNotification,

    /**
     * The AccountHolderDetails model constructor.
     * @property {module:model/AccountHolderDetails}
     */
    AccountHolderDetails,

    /**
     * The AccountHolderPayoutNotification model constructor.
     * @property {module:model/AccountHolderPayoutNotification}
     */
    AccountHolderPayoutNotification,

    /**
     * The AccountHolderPayoutNotificationContent model constructor.
     * @property {module:model/AccountHolderPayoutNotificationContent}
     */
    AccountHolderPayoutNotificationContent,

    /**
     * The AccountHolderStatus model constructor.
     * @property {module:model/AccountHolderStatus}
     */
    AccountHolderStatus,

    /**
     * The AccountHolderStatusChangeNotification model constructor.
     * @property {module:model/AccountHolderStatusChangeNotification}
     */
    AccountHolderStatusChangeNotification,

    /**
     * The AccountHolderStatusChangeNotificationContent model constructor.
     * @property {module:model/AccountHolderStatusChangeNotificationContent}
     */
    AccountHolderStatusChangeNotificationContent,

    /**
     * The AccountHolderStoreStatusChangeNotification model constructor.
     * @property {module:model/AccountHolderStoreStatusChangeNotification}
     */
    AccountHolderStoreStatusChangeNotification,

    /**
     * The AccountHolderUpcomingDeadlineNotification model constructor.
     * @property {module:model/AccountHolderUpcomingDeadlineNotification}
     */
    AccountHolderUpcomingDeadlineNotification,

    /**
     * The AccountHolderUpcomingDeadlineNotificationContent model constructor.
     * @property {module:model/AccountHolderUpcomingDeadlineNotificationContent}
     */
    AccountHolderUpcomingDeadlineNotificationContent,

    /**
     * The AccountHolderUpdateNotification model constructor.
     * @property {module:model/AccountHolderUpdateNotification}
     */
    AccountHolderUpdateNotification,

    /**
     * The AccountHolderVerificationNotification model constructor.
     * @property {module:model/AccountHolderVerificationNotification}
     */
    AccountHolderVerificationNotification,

    /**
     * The AccountHolderVerificationNotificationContent model constructor.
     * @property {module:model/AccountHolderVerificationNotificationContent}
     */
    AccountHolderVerificationNotificationContent,

    /**
     * The AccountPayoutState model constructor.
     * @property {module:model/AccountPayoutState}
     */
    AccountPayoutState,

    /**
     * The AccountProcessingState model constructor.
     * @property {module:model/AccountProcessingState}
     */
    AccountProcessingState,

    /**
     * The AccountUpdateNotification model constructor.
     * @property {module:model/AccountUpdateNotification}
     */
    AccountUpdateNotification,

    /**
     * The Amount model constructor.
     * @property {module:model/Amount}
     */
    Amount,

    /**
     * The AmountWrapper model constructor.
     * @property {module:model/AmountWrapper}
     */
    AmountWrapper,

    /**
     * The BankAccountDetail model constructor.
     * @property {module:model/BankAccountDetail}
     */
    BankAccountDetail,

    /**
     * The BankAccountDetailWrapper model constructor.
     * @property {module:model/BankAccountDetailWrapper}
     */
    BankAccountDetailWrapper,

    /**
     * The BeneficiarySetupNotification model constructor.
     * @property {module:model/BeneficiarySetupNotification}
     */
    BeneficiarySetupNotification,

    /**
     * The BeneficiarySetupNotificationContent model constructor.
     * @property {module:model/BeneficiarySetupNotificationContent}
     */
    BeneficiarySetupNotificationContent,

    /**
     * The BusinessDetails model constructor.
     * @property {module:model/BusinessDetails}
     */
    BusinessDetails,

    /**
     * The CloseAccountResponse model constructor.
     * @property {module:model/CloseAccountResponse}
     */
    CloseAccountResponse,

    /**
     * The CompensateNegativeBalanceNotification model constructor.
     * @property {module:model/CompensateNegativeBalanceNotification}
     */
    CompensateNegativeBalanceNotification,

    /**
     * The CompensateNegativeBalanceNotificationContent model constructor.
     * @property {module:model/CompensateNegativeBalanceNotificationContent}
     */
    CompensateNegativeBalanceNotificationContent,

    /**
     * The CompensateNegativeBalanceNotificationRecord model constructor.
     * @property {module:model/CompensateNegativeBalanceNotificationRecord}
     */
    CompensateNegativeBalanceNotificationRecord,

    /**
     * The CompensateNegativeBalanceNotificationRecordWrapper model constructor.
     * @property {module:model/CompensateNegativeBalanceNotificationRecordWrapper}
     */
    CompensateNegativeBalanceNotificationRecordWrapper,

    /**
     * The CreateAccountHolderResponse model constructor.
     * @property {module:model/CreateAccountHolderResponse}
     */
    CreateAccountHolderResponse,

    /**
     * The CreateAccountResponse model constructor.
     * @property {module:model/CreateAccountResponse}
     */
    CreateAccountResponse,

    /**
     * The DirectDebitInitiatedNotification model constructor.
     * @property {module:model/DirectDebitInitiatedNotification}
     */
    DirectDebitInitiatedNotification,

    /**
     * The DirectDebitInitiatedNotificationContent model constructor.
     * @property {module:model/DirectDebitInitiatedNotificationContent}
     */
    DirectDebitInitiatedNotificationContent,

    /**
     * The ErrorFieldType model constructor.
     * @property {module:model/ErrorFieldType}
     */
    ErrorFieldType,

    /**
     * The ErrorFieldTypeWrapper model constructor.
     * @property {module:model/ErrorFieldTypeWrapper}
     */
    ErrorFieldTypeWrapper,

    /**
     * The FieldType model constructor.
     * @property {module:model/FieldType}
     */
    FieldType,

    /**
     * The FieldTypeWrapper model constructor.
     * @property {module:model/FieldTypeWrapper}
     */
    FieldTypeWrapper,

    /**
     * The IndividualDetails model constructor.
     * @property {module:model/IndividualDetails}
     */
    IndividualDetails,

    /**
     * The KYCBankAccountCheckResult model constructor.
     * @property {module:model/KYCBankAccountCheckResult}
     */
    KYCBankAccountCheckResult,

    /**
     * The KYCCheckResult model constructor.
     * @property {module:model/KYCCheckResult}
     */
    KYCCheckResult,

    /**
     * The KYCCheckStatusData model constructor.
     * @property {module:model/KYCCheckStatusData}
     */
    KYCCheckStatusData,

    /**
     * The KYCCheckSummary model constructor.
     * @property {module:model/KYCCheckSummary}
     */
    KYCCheckSummary,

    /**
     * The KYCShareholderCheckResult model constructor.
     * @property {module:model/KYCShareholderCheckResult}
     */
    KYCShareholderCheckResult,

    /**
     * The KYCSignatoryCheckResult model constructor.
     * @property {module:model/KYCSignatoryCheckResult}
     */
    KYCSignatoryCheckResult,

    /**
     * The KYCVerificationResult model constructor.
     * @property {module:model/KYCVerificationResult}
     */
    KYCVerificationResult,

    /**
     * The LocalDate model constructor.
     * @property {module:model/LocalDate}
     */
    LocalDate,

    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message,

    /**
     * The NotificationResponse model constructor.
     * @property {module:model/NotificationResponse}
     */
    NotificationResponse,

    /**
     * The OperationStatus model constructor.
     * @property {module:model/OperationStatus}
     */
    OperationStatus,

    /**
     * The PaymentFailureNotification model constructor.
     * @property {module:model/PaymentFailureNotification}
     */
    PaymentFailureNotification,

    /**
     * The PaymentFailureNotificationContent model constructor.
     * @property {module:model/PaymentFailureNotificationContent}
     */
    PaymentFailureNotificationContent,

    /**
     * The PayoutScheduleResponse model constructor.
     * @property {module:model/PayoutScheduleResponse}
     */
    PayoutScheduleResponse,

    /**
     * The PersonalDocumentData model constructor.
     * @property {module:model/PersonalDocumentData}
     */
    PersonalDocumentData,

    /**
     * The PersonalDocumentDataWrapper model constructor.
     * @property {module:model/PersonalDocumentDataWrapper}
     */
    PersonalDocumentDataWrapper,

    /**
     * The RefundFundsTransferNotification model constructor.
     * @property {module:model/RefundFundsTransferNotification}
     */
    RefundFundsTransferNotification,

    /**
     * The RefundFundsTransferNotificationContent model constructor.
     * @property {module:model/RefundFundsTransferNotificationContent}
     */
    RefundFundsTransferNotificationContent,

    /**
     * The RefundResult model constructor.
     * @property {module:model/RefundResult}
     */
    RefundResult,

    /**
     * The RefundResultWrapper model constructor.
     * @property {module:model/RefundResultWrapper}
     */
    RefundResultWrapper,

    /**
     * The ReportAvailableNotification model constructor.
     * @property {module:model/ReportAvailableNotification}
     */
    ReportAvailableNotification,

    /**
     * The ReportAvailableNotificationContent model constructor.
     * @property {module:model/ReportAvailableNotificationContent}
     */
    ReportAvailableNotificationContent,

    /**
     * The ScheduledRefundsNotification model constructor.
     * @property {module:model/ScheduledRefundsNotification}
     */
    ScheduledRefundsNotification,

    /**
     * The ScheduledRefundsNotificationContent model constructor.
     * @property {module:model/ScheduledRefundsNotificationContent}
     */
    ScheduledRefundsNotificationContent,

    /**
     * The ShareholderContact model constructor.
     * @property {module:model/ShareholderContact}
     */
    ShareholderContact,

    /**
     * The ShareholderContactWrapper model constructor.
     * @property {module:model/ShareholderContactWrapper}
     */
    ShareholderContactWrapper,

    /**
     * The SignatoryContact model constructor.
     * @property {module:model/SignatoryContact}
     */
    SignatoryContact,

    /**
     * The SignatoryContactWrapper model constructor.
     * @property {module:model/SignatoryContactWrapper}
     */
    SignatoryContactWrapper,

    /**
     * The Split model constructor.
     * @property {module:model/Split}
     */
    Split,

    /**
     * The SplitAmount model constructor.
     * @property {module:model/SplitAmount}
     */
    SplitAmount,

    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction,

    /**
     * The TransferFundsNotification model constructor.
     * @property {module:model/TransferFundsNotification}
     */
    TransferFundsNotification,

    /**
     * The TransferFundsNotificationContent model constructor.
     * @property {module:model/TransferFundsNotificationContent}
     */
    TransferFundsNotificationContent,

    /**
     * The UltimateParentCompany model constructor.
     * @property {module:model/UltimateParentCompany}
     */
    UltimateParentCompany,

    /**
     * The UltimateParentCompanyBusinessDetails model constructor.
     * @property {module:model/UltimateParentCompanyBusinessDetails}
     */
    UltimateParentCompanyBusinessDetails,

    /**
     * The UltimateParentCompanyWrapper model constructor.
     * @property {module:model/UltimateParentCompanyWrapper}
     */
    UltimateParentCompanyWrapper,

    /**
     * The UpdateAccountHolderResponse model constructor.
     * @property {module:model/UpdateAccountHolderResponse}
     */
    UpdateAccountHolderResponse,

    /**
     * The UpdateAccountResponse model constructor.
     * @property {module:model/UpdateAccountResponse}
     */
    UpdateAccountResponse,

    /**
     * The ViasAddress model constructor.
     * @property {module:model/ViasAddress}
     */
    ViasAddress,

    /**
     * The ViasName model constructor.
     * @property {module:model/ViasName}
     */
    ViasName,

    /**
     * The ViasPersonalData model constructor.
     * @property {module:model/ViasPersonalData}
     */
    ViasPersonalData,

    /**
     * The ViasPhoneNumber model constructor.
     * @property {module:model/ViasPhoneNumber}
     */
    ViasPhoneNumber
};
