# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_holder_details import AccountHolderDetails
from openapi_server.models.account_holder_status import AccountHolderStatus
from openapi_server.models.error_field_type_wrapper import ErrorFieldTypeWrapper
from openapi_server.models.field_type_wrapper import FieldTypeWrapper
from openapi_server.models.kyc_verification_result import KYCVerificationResult
from openapi_server import util


class UpdateAccountHolderResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder_code: str=None, account_holder_details: AccountHolderDetails=None, account_holder_status: AccountHolderStatus=None, description: str=None, invalid_fields: List[ErrorFieldTypeWrapper]=None, legal_entity: str=None, psp_reference: str=None, result_code: str=None, submitted_async: bool=None, updated_fields: List[FieldTypeWrapper]=None, verification: KYCVerificationResult=None):
        """UpdateAccountHolderResponse - a model defined in OpenAPI

        :param account_holder_code: The account_holder_code of this UpdateAccountHolderResponse.
        :param account_holder_details: The account_holder_details of this UpdateAccountHolderResponse.
        :param account_holder_status: The account_holder_status of this UpdateAccountHolderResponse.
        :param description: The description of this UpdateAccountHolderResponse.
        :param invalid_fields: The invalid_fields of this UpdateAccountHolderResponse.
        :param legal_entity: The legal_entity of this UpdateAccountHolderResponse.
        :param psp_reference: The psp_reference of this UpdateAccountHolderResponse.
        :param result_code: The result_code of this UpdateAccountHolderResponse.
        :param submitted_async: The submitted_async of this UpdateAccountHolderResponse.
        :param updated_fields: The updated_fields of this UpdateAccountHolderResponse.
        :param verification: The verification of this UpdateAccountHolderResponse.
        """
        self.openapi_types = {
            'account_holder_code': str,
            'account_holder_details': AccountHolderDetails,
            'account_holder_status': AccountHolderStatus,
            'description': str,
            'invalid_fields': List[ErrorFieldTypeWrapper],
            'legal_entity': str,
            'psp_reference': str,
            'result_code': str,
            'submitted_async': bool,
            'updated_fields': List[FieldTypeWrapper],
            'verification': KYCVerificationResult
        }

        self.attribute_map = {
            'account_holder_code': 'accountHolderCode',
            'account_holder_details': 'accountHolderDetails',
            'account_holder_status': 'accountHolderStatus',
            'description': 'description',
            'invalid_fields': 'invalidFields',
            'legal_entity': 'legalEntity',
            'psp_reference': 'pspReference',
            'result_code': 'resultCode',
            'submitted_async': 'submittedAsync',
            'updated_fields': 'updatedFields',
            'verification': 'verification'
        }

        self._account_holder_code = account_holder_code
        self._account_holder_details = account_holder_details
        self._account_holder_status = account_holder_status
        self._description = description
        self._invalid_fields = invalid_fields
        self._legal_entity = legal_entity
        self._psp_reference = psp_reference
        self._result_code = result_code
        self._submitted_async = submitted_async
        self._updated_fields = updated_fields
        self._verification = verification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateAccountHolderResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateAccountHolderResponse of this UpdateAccountHolderResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder_code(self):
        """Gets the account_holder_code of this UpdateAccountHolderResponse.

        The code of the account holder.

        :return: The account_holder_code of this UpdateAccountHolderResponse.
        :rtype: str
        """
        return self._account_holder_code

    @account_holder_code.setter
    def account_holder_code(self, account_holder_code):
        """Sets the account_holder_code of this UpdateAccountHolderResponse.

        The code of the account holder.

        :param account_holder_code: The account_holder_code of this UpdateAccountHolderResponse.
        :type account_holder_code: str
        """

        self._account_holder_code = account_holder_code

    @property
    def account_holder_details(self):
        """Gets the account_holder_details of this UpdateAccountHolderResponse.

        Details of the account holder.

        :return: The account_holder_details of this UpdateAccountHolderResponse.
        :rtype: AccountHolderDetails
        """
        return self._account_holder_details

    @account_holder_details.setter
    def account_holder_details(self, account_holder_details):
        """Sets the account_holder_details of this UpdateAccountHolderResponse.

        Details of the account holder.

        :param account_holder_details: The account_holder_details of this UpdateAccountHolderResponse.
        :type account_holder_details: AccountHolderDetails
        """

        self._account_holder_details = account_holder_details

    @property
    def account_holder_status(self):
        """Gets the account_holder_status of this UpdateAccountHolderResponse.

        The new status of the account holder.

        :return: The account_holder_status of this UpdateAccountHolderResponse.
        :rtype: AccountHolderStatus
        """
        return self._account_holder_status

    @account_holder_status.setter
    def account_holder_status(self, account_holder_status):
        """Sets the account_holder_status of this UpdateAccountHolderResponse.

        The new status of the account holder.

        :param account_holder_status: The account_holder_status of this UpdateAccountHolderResponse.
        :type account_holder_status: AccountHolderStatus
        """

        self._account_holder_status = account_holder_status

    @property
    def description(self):
        """Gets the description of this UpdateAccountHolderResponse.

        The description of the account holder.

        :return: The description of this UpdateAccountHolderResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateAccountHolderResponse.

        The description of the account holder.

        :param description: The description of this UpdateAccountHolderResponse.
        :type description: str
        """

        self._description = description

    @property
    def invalid_fields(self):
        """Gets the invalid_fields of this UpdateAccountHolderResponse.

        in case the account holder has not been updated, contains account holder fields, that did not pass the validation.

        :return: The invalid_fields of this UpdateAccountHolderResponse.
        :rtype: List[ErrorFieldTypeWrapper]
        """
        return self._invalid_fields

    @invalid_fields.setter
    def invalid_fields(self, invalid_fields):
        """Sets the invalid_fields of this UpdateAccountHolderResponse.

        in case the account holder has not been updated, contains account holder fields, that did not pass the validation.

        :param invalid_fields: The invalid_fields of this UpdateAccountHolderResponse.
        :type invalid_fields: List[ErrorFieldTypeWrapper]
        """

        self._invalid_fields = invalid_fields

    @property
    def legal_entity(self):
        """Gets the legal_entity of this UpdateAccountHolderResponse.

        The legal entity of the account holder.

        :return: The legal_entity of this UpdateAccountHolderResponse.
        :rtype: str
        """
        return self._legal_entity

    @legal_entity.setter
    def legal_entity(self, legal_entity):
        """Sets the legal_entity of this UpdateAccountHolderResponse.

        The legal entity of the account holder.

        :param legal_entity: The legal_entity of this UpdateAccountHolderResponse.
        :type legal_entity: str
        """
        allowed_values = ["Business", "Individual", "NonProfit"]  # noqa: E501
        if legal_entity not in allowed_values:
            raise ValueError(
                "Invalid value for `legal_entity` ({0}), must be one of {1}"
                .format(legal_entity, allowed_values)
            )

        self._legal_entity = legal_entity

    @property
    def psp_reference(self):
        """Gets the psp_reference of this UpdateAccountHolderResponse.

        The reference of a request. Can be used to uniquely identify the request.

        :return: The psp_reference of this UpdateAccountHolderResponse.
        :rtype: str
        """
        return self._psp_reference

    @psp_reference.setter
    def psp_reference(self, psp_reference):
        """Sets the psp_reference of this UpdateAccountHolderResponse.

        The reference of a request. Can be used to uniquely identify the request.

        :param psp_reference: The psp_reference of this UpdateAccountHolderResponse.
        :type psp_reference: str
        """

        self._psp_reference = psp_reference

    @property
    def result_code(self):
        """Gets the result_code of this UpdateAccountHolderResponse.

        The result code.

        :return: The result_code of this UpdateAccountHolderResponse.
        :rtype: str
        """
        return self._result_code

    @result_code.setter
    def result_code(self, result_code):
        """Sets the result_code of this UpdateAccountHolderResponse.

        The result code.

        :param result_code: The result_code of this UpdateAccountHolderResponse.
        :type result_code: str
        """

        self._result_code = result_code

    @property
    def submitted_async(self):
        """Gets the submitted_async of this UpdateAccountHolderResponse.

        Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied: * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received. * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.

        :return: The submitted_async of this UpdateAccountHolderResponse.
        :rtype: bool
        """
        return self._submitted_async

    @submitted_async.setter
    def submitted_async(self, submitted_async):
        """Sets the submitted_async of this UpdateAccountHolderResponse.

        Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied: * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received. * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.

        :param submitted_async: The submitted_async of this UpdateAccountHolderResponse.
        :type submitted_async: bool
        """

        self._submitted_async = submitted_async

    @property
    def updated_fields(self):
        """Gets the updated_fields of this UpdateAccountHolderResponse.

        A list of the fields updated through the request.

        :return: The updated_fields of this UpdateAccountHolderResponse.
        :rtype: List[FieldTypeWrapper]
        """
        return self._updated_fields

    @updated_fields.setter
    def updated_fields(self, updated_fields):
        """Sets the updated_fields of this UpdateAccountHolderResponse.

        A list of the fields updated through the request.

        :param updated_fields: The updated_fields of this UpdateAccountHolderResponse.
        :type updated_fields: List[FieldTypeWrapper]
        """

        self._updated_fields = updated_fields

    @property
    def verification(self):
        """Gets the verification of this UpdateAccountHolderResponse.

        The details of KYC Verification of the account holder.

        :return: The verification of this UpdateAccountHolderResponse.
        :rtype: KYCVerificationResult
        """
        return self._verification

    @verification.setter
    def verification(self, verification):
        """Sets the verification of this UpdateAccountHolderResponse.

        The details of KYC Verification of the account holder.

        :param verification: The verification of this UpdateAccountHolderResponse.
        :type verification: KYCVerificationResult
        """

        self._verification = verification
