# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bank_account_detail import BankAccountDetail
from openapi_server import util


class BankAccountDetailWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bank_account_detail: BankAccountDetail=None):
        """BankAccountDetailWrapper - a model defined in OpenAPI

        :param bank_account_detail: The bank_account_detail of this BankAccountDetailWrapper.
        """
        self.openapi_types = {
            'bank_account_detail': BankAccountDetail
        }

        self.attribute_map = {
            'bank_account_detail': 'BankAccountDetail'
        }

        self._bank_account_detail = bank_account_detail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BankAccountDetailWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BankAccountDetailWrapper of this BankAccountDetailWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bank_account_detail(self):
        """Gets the bank_account_detail of this BankAccountDetailWrapper.


        :return: The bank_account_detail of this BankAccountDetailWrapper.
        :rtype: BankAccountDetail
        """
        return self._bank_account_detail

    @bank_account_detail.setter
    def bank_account_detail(self, bank_account_detail):
        """Sets the bank_account_detail of this BankAccountDetailWrapper.


        :param bank_account_detail: The bank_account_detail of this BankAccountDetailWrapper.
        :type bank_account_detail: BankAccountDetail
        """

        self._bank_account_detail = bank_account_detail
