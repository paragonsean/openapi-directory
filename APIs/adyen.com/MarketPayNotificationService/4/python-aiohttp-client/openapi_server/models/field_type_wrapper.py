# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_type import FieldType
from openapi_server import util


class FieldTypeWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_type: FieldType=None):
        """FieldTypeWrapper - a model defined in OpenAPI

        :param field_type: The field_type of this FieldTypeWrapper.
        """
        self.openapi_types = {
            'field_type': FieldType
        }

        self.attribute_map = {
            'field_type': 'FieldType'
        }

        self._field_type = field_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldTypeWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldTypeWrapper of this FieldTypeWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_type(self):
        """Gets the field_type of this FieldTypeWrapper.


        :return: The field_type of this FieldTypeWrapper.
        :rtype: FieldType
        """
        return self._field_type

    @field_type.setter
    def field_type(self, field_type):
        """Sets the field_type of this FieldTypeWrapper.


        :param field_type: The field_type of this FieldTypeWrapper.
        :type field_type: FieldType
        """

        self._field_type = field_type
