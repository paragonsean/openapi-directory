# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ultimate_parent_company_business_details import UltimateParentCompanyBusinessDetails
from openapi_server.models.vias_address import ViasAddress
from openapi_server import util


class UltimateParentCompany(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: ViasAddress=None, business_details: UltimateParentCompanyBusinessDetails=None, ultimate_parent_company_code: str=None):
        """UltimateParentCompany - a model defined in OpenAPI

        :param address: The address of this UltimateParentCompany.
        :param business_details: The business_details of this UltimateParentCompany.
        :param ultimate_parent_company_code: The ultimate_parent_company_code of this UltimateParentCompany.
        """
        self.openapi_types = {
            'address': ViasAddress,
            'business_details': UltimateParentCompanyBusinessDetails,
            'ultimate_parent_company_code': str
        }

        self.attribute_map = {
            'address': 'address',
            'business_details': 'businessDetails',
            'ultimate_parent_company_code': 'ultimateParentCompanyCode'
        }

        self._address = address
        self._business_details = business_details
        self._ultimate_parent_company_code = ultimate_parent_company_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UltimateParentCompany':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UltimateParentCompany of this UltimateParentCompany.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this UltimateParentCompany.

        Address of the ultimate parent company.

        :return: The address of this UltimateParentCompany.
        :rtype: ViasAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this UltimateParentCompany.

        Address of the ultimate parent company.

        :param address: The address of this UltimateParentCompany.
        :type address: ViasAddress
        """

        self._address = address

    @property
    def business_details(self):
        """Gets the business_details of this UltimateParentCompany.

        Details about the ultimate parent company's business.

        :return: The business_details of this UltimateParentCompany.
        :rtype: UltimateParentCompanyBusinessDetails
        """
        return self._business_details

    @business_details.setter
    def business_details(self, business_details):
        """Sets the business_details of this UltimateParentCompany.

        Details about the ultimate parent company's business.

        :param business_details: The business_details of this UltimateParentCompany.
        :type business_details: UltimateParentCompanyBusinessDetails
        """

        self._business_details = business_details

    @property
    def ultimate_parent_company_code(self):
        """Gets the ultimate_parent_company_code of this UltimateParentCompany.

        Adyen-generated unique alphanumeric identifier (UUID) for the entry, returned in the response when you create an ultimate parent company. Required when updating an existing entry in an `/updateAccountHolder` request.

        :return: The ultimate_parent_company_code of this UltimateParentCompany.
        :rtype: str
        """
        return self._ultimate_parent_company_code

    @ultimate_parent_company_code.setter
    def ultimate_parent_company_code(self, ultimate_parent_company_code):
        """Sets the ultimate_parent_company_code of this UltimateParentCompany.

        Adyen-generated unique alphanumeric identifier (UUID) for the entry, returned in the response when you create an ultimate parent company. Required when updating an existing entry in an `/updateAccountHolder` request.

        :param ultimate_parent_company_code: The ultimate_parent_company_code of this UltimateParentCompany.
        :type ultimate_parent_company_code: str
        """

        self._ultimate_parent_company_code = ultimate_parent_company_code
