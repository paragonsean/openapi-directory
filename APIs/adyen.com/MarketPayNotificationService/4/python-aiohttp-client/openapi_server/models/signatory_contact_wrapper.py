# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.signatory_contact import SignatoryContact
from openapi_server import util


class SignatoryContactWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, signatory_contact: SignatoryContact=None):
        """SignatoryContactWrapper - a model defined in OpenAPI

        :param signatory_contact: The signatory_contact of this SignatoryContactWrapper.
        """
        self.openapi_types = {
            'signatory_contact': SignatoryContact
        }

        self.attribute_map = {
            'signatory_contact': 'SignatoryContact'
        }

        self._signatory_contact = signatory_contact

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SignatoryContactWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SignatoryContactWrapper of this SignatoryContactWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def signatory_contact(self):
        """Gets the signatory_contact of this SignatoryContactWrapper.


        :return: The signatory_contact of this SignatoryContactWrapper.
        :rtype: SignatoryContact
        """
        return self._signatory_contact

    @signatory_contact.setter
    def signatory_contact(self, signatory_contact):
        """Sets the signatory_contact of this SignatoryContactWrapper.


        :param signatory_contact: The signatory_contact of this SignatoryContactWrapper.
        :type signatory_contact: SignatoryContact
        """

        self._signatory_contact = signatory_contact
