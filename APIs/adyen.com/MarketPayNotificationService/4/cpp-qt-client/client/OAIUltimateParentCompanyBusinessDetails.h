/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUltimateParentCompanyBusinessDetails.h
 *
 * 
 */

#ifndef OAIUltimateParentCompanyBusinessDetails_H
#define OAIUltimateParentCompanyBusinessDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUltimateParentCompanyBusinessDetails : public OAIObject {
public:
    OAIUltimateParentCompanyBusinessDetails();
    OAIUltimateParentCompanyBusinessDetails(QString json);
    ~OAIUltimateParentCompanyBusinessDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLegalBusinessName() const;
    void setLegalBusinessName(const QString &legal_business_name);
    bool is_legal_business_name_Set() const;
    bool is_legal_business_name_Valid() const;

    QString getRegistrationNumber() const;
    void setRegistrationNumber(const QString &registration_number);
    bool is_registration_number_Set() const;
    bool is_registration_number_Valid() const;

    QString getStockExchange() const;
    void setStockExchange(const QString &stock_exchange);
    bool is_stock_exchange_Set() const;
    bool is_stock_exchange_Valid() const;

    QString getStockNumber() const;
    void setStockNumber(const QString &stock_number);
    bool is_stock_number_Set() const;
    bool is_stock_number_Valid() const;

    QString getStockTicker() const;
    void setStockTicker(const QString &stock_ticker);
    bool is_stock_ticker_Set() const;
    bool is_stock_ticker_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_legal_business_name;
    bool m_legal_business_name_isSet;
    bool m_legal_business_name_isValid;

    QString m_registration_number;
    bool m_registration_number_isSet;
    bool m_registration_number_isValid;

    QString m_stock_exchange;
    bool m_stock_exchange_isSet;
    bool m_stock_exchange_isValid;

    QString m_stock_number;
    bool m_stock_number_isSet;
    bool m_stock_number_isValid;

    QString m_stock_ticker;
    bool m_stock_ticker_isSet;
    bool m_stock_ticker_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUltimateParentCompanyBusinessDetails)

#endif // OAIUltimateParentCompanyBusinessDetails_H
