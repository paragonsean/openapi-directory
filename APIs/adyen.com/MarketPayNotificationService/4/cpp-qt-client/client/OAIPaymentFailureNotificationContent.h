/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaymentFailureNotificationContent.h
 *
 * 
 */

#ifndef OAIPaymentFailureNotificationContent_H
#define OAIPaymentFailureNotificationContent_H

#include <QJsonObject>

#include "OAIErrorFieldTypeWrapper.h"
#include "OAIMessage.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErrorFieldTypeWrapper;
class OAIMessage;

class OAIPaymentFailureNotificationContent : public OAIObject {
public:
    OAIPaymentFailureNotificationContent();
    OAIPaymentFailureNotificationContent(QString json);
    ~OAIPaymentFailureNotificationContent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIErrorFieldTypeWrapper> getErrorFields() const;
    void setErrorFields(const QList<OAIErrorFieldTypeWrapper> &error_fields);
    bool is_error_fields_Set() const;
    bool is_error_fields_Valid() const;

    OAIMessage getErrorMessage() const;
    void setErrorMessage(const OAIMessage &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getModificationMerchantReference() const;
    void setModificationMerchantReference(const QString &modification_merchant_reference);
    bool is_modification_merchant_reference_Set() const;
    bool is_modification_merchant_reference_Valid() const;

    QString getModificationPspReference() const;
    void setModificationPspReference(const QString &modification_psp_reference);
    bool is_modification_psp_reference_Set() const;
    bool is_modification_psp_reference_Valid() const;

    QString getPaymentMerchantReference() const;
    void setPaymentMerchantReference(const QString &payment_merchant_reference);
    bool is_payment_merchant_reference_Set() const;
    bool is_payment_merchant_reference_Valid() const;

    QString getPaymentPspReference() const;
    void setPaymentPspReference(const QString &payment_psp_reference);
    bool is_payment_psp_reference_Set() const;
    bool is_payment_psp_reference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIErrorFieldTypeWrapper> m_error_fields;
    bool m_error_fields_isSet;
    bool m_error_fields_isValid;

    OAIMessage m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_modification_merchant_reference;
    bool m_modification_merchant_reference_isSet;
    bool m_modification_merchant_reference_isValid;

    QString m_modification_psp_reference;
    bool m_modification_psp_reference_isSet;
    bool m_modification_psp_reference_isValid;

    QString m_payment_merchant_reference;
    bool m_payment_merchant_reference_isSet;
    bool m_payment_merchant_reference_isValid;

    QString m_payment_psp_reference;
    bool m_payment_psp_reference_isSet;
    bool m_payment_psp_reference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaymentFailureNotificationContent)

#endif // OAIPaymentFailureNotificationContent_H
