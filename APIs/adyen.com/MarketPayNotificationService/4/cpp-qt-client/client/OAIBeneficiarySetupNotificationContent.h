/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBeneficiarySetupNotificationContent.h
 *
 * 
 */

#ifndef OAIBeneficiarySetupNotificationContent_H
#define OAIBeneficiarySetupNotificationContent_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBeneficiarySetupNotificationContent : public OAIObject {
public:
    OAIBeneficiarySetupNotificationContent();
    OAIBeneficiarySetupNotificationContent(QString json);
    ~OAIBeneficiarySetupNotificationContent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDestinationAccountCode() const;
    void setDestinationAccountCode(const QString &destination_account_code);
    bool is_destination_account_code_Set() const;
    bool is_destination_account_code_Valid() const;

    QString getDestinationAccountHolderCode() const;
    void setDestinationAccountHolderCode(const QString &destination_account_holder_code);
    bool is_destination_account_holder_code_Set() const;
    bool is_destination_account_holder_code_Valid() const;

    QString getMerchantReference() const;
    void setMerchantReference(const QString &merchant_reference);
    bool is_merchant_reference_Set() const;
    bool is_merchant_reference_Valid() const;

    QString getSourceAccountCode() const;
    void setSourceAccountCode(const QString &source_account_code);
    bool is_source_account_code_Set() const;
    bool is_source_account_code_Valid() const;

    QString getSourceAccountHolderCode() const;
    void setSourceAccountHolderCode(const QString &source_account_holder_code);
    bool is_source_account_holder_code_Set() const;
    bool is_source_account_holder_code_Valid() const;

    QDateTime getTransferDate() const;
    void setTransferDate(const QDateTime &transfer_date);
    bool is_transfer_date_Set() const;
    bool is_transfer_date_Valid() const;

    qint32 getTransferredTransactionCount() const;
    void setTransferredTransactionCount(const qint32 &transferred_transaction_count);
    bool is_transferred_transaction_count_Set() const;
    bool is_transferred_transaction_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_destination_account_code;
    bool m_destination_account_code_isSet;
    bool m_destination_account_code_isValid;

    QString m_destination_account_holder_code;
    bool m_destination_account_holder_code_isSet;
    bool m_destination_account_holder_code_isValid;

    QString m_merchant_reference;
    bool m_merchant_reference_isSet;
    bool m_merchant_reference_isValid;

    QString m_source_account_code;
    bool m_source_account_code_isSet;
    bool m_source_account_code_isValid;

    QString m_source_account_holder_code;
    bool m_source_account_holder_code_isSet;
    bool m_source_account_holder_code_isValid;

    QDateTime m_transfer_date;
    bool m_transfer_date_isSet;
    bool m_transfer_date_isValid;

    qint32 m_transferred_transaction_count;
    bool m_transferred_transaction_count_isSet;
    bool m_transferred_transaction_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBeneficiarySetupNotificationContent)

#endif // OAIBeneficiarySetupNotificationContent_H
