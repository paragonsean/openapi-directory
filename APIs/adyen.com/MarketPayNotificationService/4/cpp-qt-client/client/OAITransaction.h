/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransaction.h
 *
 * 
 */

#ifndef OAITransaction_H
#define OAITransaction_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIBankAccountDetail.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;
class OAIBankAccountDetail;

class OAITransaction : public OAIObject {
public:
    OAITransaction();
    OAITransaction(QString json);
    ~OAITransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAmount getAmount() const;
    void setAmount(const OAIAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAIBankAccountDetail getBankAccountDetail() const;
    void setBankAccountDetail(const OAIBankAccountDetail &bank_account_detail);
    bool is_bank_account_detail_Set() const;
    bool is_bank_account_detail_Valid() const;

    QString getCaptureMerchantReference() const;
    void setCaptureMerchantReference(const QString &capture_merchant_reference);
    bool is_capture_merchant_reference_Set() const;
    bool is_capture_merchant_reference_Valid() const;

    QString getCapturePspReference() const;
    void setCapturePspReference(const QString &capture_psp_reference);
    bool is_capture_psp_reference_Set() const;
    bool is_capture_psp_reference_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDestinationAccountCode() const;
    void setDestinationAccountCode(const QString &destination_account_code);
    bool is_destination_account_code_Set() const;
    bool is_destination_account_code_Valid() const;

    QString getDisputePspReference() const;
    void setDisputePspReference(const QString &dispute_psp_reference);
    bool is_dispute_psp_reference_Set() const;
    bool is_dispute_psp_reference_Valid() const;

    QString getDisputeReasonCode() const;
    void setDisputeReasonCode(const QString &dispute_reason_code);
    bool is_dispute_reason_code_Set() const;
    bool is_dispute_reason_code_Valid() const;

    QString getMerchantReference() const;
    void setMerchantReference(const QString &merchant_reference);
    bool is_merchant_reference_Set() const;
    bool is_merchant_reference_Valid() const;

    QString getPaymentPspReference() const;
    void setPaymentPspReference(const QString &payment_psp_reference);
    bool is_payment_psp_reference_Set() const;
    bool is_payment_psp_reference_Valid() const;

    QString getPayoutPspReference() const;
    void setPayoutPspReference(const QString &payout_psp_reference);
    bool is_payout_psp_reference_Set() const;
    bool is_payout_psp_reference_Valid() const;

    QString getPspReference() const;
    void setPspReference(const QString &psp_reference);
    bool is_psp_reference_Set() const;
    bool is_psp_reference_Valid() const;

    QString getSourceAccountCode() const;
    void setSourceAccountCode(const QString &source_account_code);
    bool is_source_account_code_Set() const;
    bool is_source_account_code_Valid() const;

    QString getTransactionStatus() const;
    void setTransactionStatus(const QString &transaction_status);
    bool is_transaction_status_Set() const;
    bool is_transaction_status_Valid() const;

    QString getTransferCode() const;
    void setTransferCode(const QString &transfer_code);
    bool is_transfer_code_Set() const;
    bool is_transfer_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAIBankAccountDetail m_bank_account_detail;
    bool m_bank_account_detail_isSet;
    bool m_bank_account_detail_isValid;

    QString m_capture_merchant_reference;
    bool m_capture_merchant_reference_isSet;
    bool m_capture_merchant_reference_isValid;

    QString m_capture_psp_reference;
    bool m_capture_psp_reference_isSet;
    bool m_capture_psp_reference_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_destination_account_code;
    bool m_destination_account_code_isSet;
    bool m_destination_account_code_isValid;

    QString m_dispute_psp_reference;
    bool m_dispute_psp_reference_isSet;
    bool m_dispute_psp_reference_isValid;

    QString m_dispute_reason_code;
    bool m_dispute_reason_code_isSet;
    bool m_dispute_reason_code_isValid;

    QString m_merchant_reference;
    bool m_merchant_reference_isSet;
    bool m_merchant_reference_isValid;

    QString m_payment_psp_reference;
    bool m_payment_psp_reference_isSet;
    bool m_payment_psp_reference_isValid;

    QString m_payout_psp_reference;
    bool m_payout_psp_reference_isSet;
    bool m_payout_psp_reference_isValid;

    QString m_psp_reference;
    bool m_psp_reference_isSet;
    bool m_psp_reference_isValid;

    QString m_source_account_code;
    bool m_source_account_code_isSet;
    bool m_source_account_code_isValid;

    QString m_transaction_status;
    bool m_transaction_status_isSet;
    bool m_transaction_status_isValid;

    QString m_transfer_code;
    bool m_transfer_code_isSet;
    bool m_transfer_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransaction)

#endif // OAITransaction_H
