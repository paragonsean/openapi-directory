/*
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NotificationResponse;
import org.openapitools.client.model.PaymentFailureNotification;
import org.openapitools.client.model.ReportAvailableNotification;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OtherApi
 */
@Disabled
public class OtherApiTest {

    private final OtherApi api = new OtherApi();

    /**
     * Booking for a capture or refund failed
     *
     * Adyen sends this notification when a [split payment](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information) booking for a capture or refund fails. When a booking fails due to an invalid account status or an unknown &#x60;accountCode&#x60;, the funds are credited or debited to or fromyour platform&#39;s liable account instead of the account specified in the split data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postPAYMENTFAILURETest() throws ApiException {
        PaymentFailureNotification paymentFailureNotification = null;
        NotificationResponse response = api.postPAYMENTFAILURE(paymentFailureNotification);
        // TODO: test validations
    }

    /**
     * Report available
     *
     * Adyen sends this notification when a report has been generated and it is available for download.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postREPORTAVAILABLETest() throws ApiException {
        ReportAvailableNotification reportAvailableNotification = null;
        NotificationResponse response = api.postREPORTAVAILABLE(reportAvailableNotification);
        // TODO: test validations
    }

}
