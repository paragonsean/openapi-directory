/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';
import ErrorFieldTypeWrapper from './ErrorFieldTypeWrapper';
import LocalDate from './LocalDate';
import OperationStatus from './OperationStatus';
import Split from './Split';

/**
 * The DirectDebitInitiatedNotificationContent model module.
 * @module model/DirectDebitInitiatedNotificationContent
 * @version 3
 */
class DirectDebitInitiatedNotificationContent {
    /**
     * Constructs a new <code>DirectDebitInitiatedNotificationContent</code>.
     * @alias module:model/DirectDebitInitiatedNotificationContent
     * @param accountCode {String} The code of the account.
     * @param amount {module:model/Amount} The amount to be debited from the funding account.
     * @param merchantAccountCode {String} The code of the merchant account.
     */
    constructor(accountCode, amount, merchantAccountCode) { 
        
        DirectDebitInitiatedNotificationContent.initialize(this, accountCode, amount, merchantAccountCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountCode, amount, merchantAccountCode) { 
        obj['accountCode'] = accountCode;
        obj['amount'] = amount;
        obj['merchantAccountCode'] = merchantAccountCode;
    }

    /**
     * Constructs a <code>DirectDebitInitiatedNotificationContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectDebitInitiatedNotificationContent} obj Optional instance to populate.
     * @return {module:model/DirectDebitInitiatedNotificationContent} The populated <code>DirectDebitInitiatedNotificationContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectDebitInitiatedNotificationContent();

            if (data.hasOwnProperty('accountCode')) {
                obj['accountCode'] = ApiClient.convertToType(data['accountCode'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = Amount.constructFromObject(data['amount']);
            }
            if (data.hasOwnProperty('debitInitiationDate')) {
                obj['debitInitiationDate'] = LocalDate.constructFromObject(data['debitInitiationDate']);
            }
            if (data.hasOwnProperty('invalidFields')) {
                obj['invalidFields'] = ApiClient.convertToType(data['invalidFields'], [ErrorFieldTypeWrapper]);
            }
            if (data.hasOwnProperty('merchantAccountCode')) {
                obj['merchantAccountCode'] = ApiClient.convertToType(data['merchantAccountCode'], 'String');
            }
            if (data.hasOwnProperty('splits')) {
                obj['splits'] = ApiClient.convertToType(data['splits'], [Split]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = OperationStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectDebitInitiatedNotificationContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectDebitInitiatedNotificationContent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DirectDebitInitiatedNotificationContent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accountCode'] && !(typeof data['accountCode'] === 'string' || data['accountCode'] instanceof String)) {
            throw new Error("Expected the field `accountCode` to be a primitive type in the JSON string but got " + data['accountCode']);
        }
        // validate the optional field `amount`
        if (data['amount']) { // data not null
          Amount.validateJSON(data['amount']);
        }
        // validate the optional field `debitInitiationDate`
        if (data['debitInitiationDate']) { // data not null
          LocalDate.validateJSON(data['debitInitiationDate']);
        }
        if (data['invalidFields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['invalidFields'])) {
                throw new Error("Expected the field `invalidFields` to be an array in the JSON data but got " + data['invalidFields']);
            }
            // validate the optional field `invalidFields` (array)
            for (const item of data['invalidFields']) {
                ErrorFieldTypeWrapper.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['merchantAccountCode'] && !(typeof data['merchantAccountCode'] === 'string' || data['merchantAccountCode'] instanceof String)) {
            throw new Error("Expected the field `merchantAccountCode` to be a primitive type in the JSON string but got " + data['merchantAccountCode']);
        }
        if (data['splits']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['splits'])) {
                throw new Error("Expected the field `splits` to be an array in the JSON data but got " + data['splits']);
            }
            // validate the optional field `splits` (array)
            for (const item of data['splits']) {
                Split.validateJSON(item);
            };
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          OperationStatus.validateJSON(data['status']);
        }

        return true;
    }


}

DirectDebitInitiatedNotificationContent.RequiredProperties = ["accountCode", "amount", "merchantAccountCode"];

/**
 * The code of the account.
 * @member {String} accountCode
 */
DirectDebitInitiatedNotificationContent.prototype['accountCode'] = undefined;

/**
 * The amount to be debited from the funding account.
 * @member {module:model/Amount} amount
 */
DirectDebitInitiatedNotificationContent.prototype['amount'] = undefined;

/**
 * The date of the debit initiation.
 * @member {module:model/LocalDate} debitInitiationDate
 */
DirectDebitInitiatedNotificationContent.prototype['debitInitiationDate'] = undefined;

/**
 * Invalid fields list.
 * @member {Array.<module:model/ErrorFieldTypeWrapper>} invalidFields
 */
DirectDebitInitiatedNotificationContent.prototype['invalidFields'] = undefined;

/**
 * The code of the merchant account.
 * @member {String} merchantAccountCode
 */
DirectDebitInitiatedNotificationContent.prototype['merchantAccountCode'] = undefined;

/**
 * The split data for the debit request.
 * @member {Array.<module:model/Split>} splits
 */
DirectDebitInitiatedNotificationContent.prototype['splits'] = undefined;

/**
 * Direct debit status.
 * @member {module:model/OperationStatus} status
 */
DirectDebitInitiatedNotificationContent.prototype['status'] = undefined;






export default DirectDebitInitiatedNotificationContent;

