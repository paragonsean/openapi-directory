/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountHolderDetails from './AccountHolderDetails';
import AccountHolderStatus from './AccountHolderStatus';
import ErrorFieldTypeWrapper from './ErrorFieldTypeWrapper';
import KYCVerificationResult from './KYCVerificationResult';

/**
 * The CreateAccountHolderResponse model module.
 * @module model/CreateAccountHolderResponse
 * @version 3
 */
class CreateAccountHolderResponse {
    /**
     * Constructs a new <code>CreateAccountHolderResponse</code>.
     * @alias module:model/CreateAccountHolderResponse
     */
    constructor() { 
        
        CreateAccountHolderResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateAccountHolderResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAccountHolderResponse} obj Optional instance to populate.
     * @return {module:model/CreateAccountHolderResponse} The populated <code>CreateAccountHolderResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAccountHolderResponse();

            if (data.hasOwnProperty('accountCode')) {
                obj['accountCode'] = ApiClient.convertToType(data['accountCode'], 'String');
            }
            if (data.hasOwnProperty('accountHolderCode')) {
                obj['accountHolderCode'] = ApiClient.convertToType(data['accountHolderCode'], 'String');
            }
            if (data.hasOwnProperty('accountHolderDetails')) {
                obj['accountHolderDetails'] = AccountHolderDetails.constructFromObject(data['accountHolderDetails']);
            }
            if (data.hasOwnProperty('accountHolderStatus')) {
                obj['accountHolderStatus'] = AccountHolderStatus.constructFromObject(data['accountHolderStatus']);
            }
            if (data.hasOwnProperty('invalidFields')) {
                obj['invalidFields'] = ApiClient.convertToType(data['invalidFields'], [ErrorFieldTypeWrapper]);
            }
            if (data.hasOwnProperty('pspReference')) {
                obj['pspReference'] = ApiClient.convertToType(data['pspReference'], 'String');
            }
            if (data.hasOwnProperty('resultCode')) {
                obj['resultCode'] = ApiClient.convertToType(data['resultCode'], 'String');
            }
            if (data.hasOwnProperty('submittedAsync')) {
                obj['submittedAsync'] = ApiClient.convertToType(data['submittedAsync'], 'Boolean');
            }
            if (data.hasOwnProperty('verification')) {
                obj['verification'] = KYCVerificationResult.constructFromObject(data['verification']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAccountHolderResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAccountHolderResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountCode'] && !(typeof data['accountCode'] === 'string' || data['accountCode'] instanceof String)) {
            throw new Error("Expected the field `accountCode` to be a primitive type in the JSON string but got " + data['accountCode']);
        }
        // ensure the json data is a string
        if (data['accountHolderCode'] && !(typeof data['accountHolderCode'] === 'string' || data['accountHolderCode'] instanceof String)) {
            throw new Error("Expected the field `accountHolderCode` to be a primitive type in the JSON string but got " + data['accountHolderCode']);
        }
        // validate the optional field `accountHolderDetails`
        if (data['accountHolderDetails']) { // data not null
          AccountHolderDetails.validateJSON(data['accountHolderDetails']);
        }
        // validate the optional field `accountHolderStatus`
        if (data['accountHolderStatus']) { // data not null
          AccountHolderStatus.validateJSON(data['accountHolderStatus']);
        }
        if (data['invalidFields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['invalidFields'])) {
                throw new Error("Expected the field `invalidFields` to be an array in the JSON data but got " + data['invalidFields']);
            }
            // validate the optional field `invalidFields` (array)
            for (const item of data['invalidFields']) {
                ErrorFieldTypeWrapper.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['pspReference'] && !(typeof data['pspReference'] === 'string' || data['pspReference'] instanceof String)) {
            throw new Error("Expected the field `pspReference` to be a primitive type in the JSON string but got " + data['pspReference']);
        }
        // ensure the json data is a string
        if (data['resultCode'] && !(typeof data['resultCode'] === 'string' || data['resultCode'] instanceof String)) {
            throw new Error("Expected the field `resultCode` to be a primitive type in the JSON string but got " + data['resultCode']);
        }
        // validate the optional field `verification`
        if (data['verification']) { // data not null
          KYCVerificationResult.validateJSON(data['verification']);
        }

        return true;
    }


}



/**
 * The code of a new account created for the account holder.
 * @member {String} accountCode
 */
CreateAccountHolderResponse.prototype['accountCode'] = undefined;

/**
 * The code of the new account holder.
 * @member {String} accountHolderCode
 */
CreateAccountHolderResponse.prototype['accountHolderCode'] = undefined;

/**
 * Details of the new account holder.
 * @member {module:model/AccountHolderDetails} accountHolderDetails
 */
CreateAccountHolderResponse.prototype['accountHolderDetails'] = undefined;

/**
 * The status of the new account holder.
 * @member {module:model/AccountHolderStatus} accountHolderStatus
 */
CreateAccountHolderResponse.prototype['accountHolderStatus'] = undefined;

/**
 * A list of fields that caused the `/createAccountHolder` request to fail.
 * @member {Array.<module:model/ErrorFieldTypeWrapper>} invalidFields
 */
CreateAccountHolderResponse.prototype['invalidFields'] = undefined;

/**
 * The reference of a request. Can be used to uniquely identify the request.
 * @member {String} pspReference
 */
CreateAccountHolderResponse.prototype['pspReference'] = undefined;

/**
 * The result code.
 * @member {String} resultCode
 */
CreateAccountHolderResponse.prototype['resultCode'] = undefined;

/**
 * Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied: * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received. * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
 * @member {Boolean} submittedAsync
 */
CreateAccountHolderResponse.prototype['submittedAsync'] = undefined;

/**
 * The details of KYC Verification of the account holder.
 * @member {module:model/KYCVerificationResult} verification
 */
CreateAccountHolderResponse.prototype['verification'] = undefined;






export default CreateAccountHolderResponse;

