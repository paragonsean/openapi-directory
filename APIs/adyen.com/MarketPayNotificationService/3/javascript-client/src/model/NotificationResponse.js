/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NotificationResponse model module.
 * @module model/NotificationResponse
 * @version 3
 */
class NotificationResponse {
    /**
     * Constructs a new <code>NotificationResponse</code>.
     * @alias module:model/NotificationResponse
     */
    constructor() { 
        
        NotificationResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NotificationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationResponse} obj Optional instance to populate.
     * @return {module:model/NotificationResponse} The populated <code>NotificationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationResponse();

            if (data.hasOwnProperty('notificationResponse')) {
                obj['notificationResponse'] = ApiClient.convertToType(data['notificationResponse'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['notificationResponse'] && !(typeof data['notificationResponse'] === 'string' || data['notificationResponse'] instanceof String)) {
            throw new Error("Expected the field `notificationResponse` to be a primitive type in the JSON string but got " + data['notificationResponse']);
        }

        return true;
    }


}



/**
 * Set this parameter to **[accepted]** to acknowledge that you received a notification from Adyen.
 * @member {String} notificationResponse
 */
NotificationResponse.prototype['notificationResponse'] = undefined;






export default NotificationResponse;

