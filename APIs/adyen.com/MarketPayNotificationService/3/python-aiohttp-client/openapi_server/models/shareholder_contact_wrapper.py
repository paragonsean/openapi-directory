# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shareholder_contact import ShareholderContact
from openapi_server import util


class ShareholderContactWrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shareholder_contact: ShareholderContact=None):
        """ShareholderContactWrapper - a model defined in OpenAPI

        :param shareholder_contact: The shareholder_contact of this ShareholderContactWrapper.
        """
        self.openapi_types = {
            'shareholder_contact': ShareholderContact
        }

        self.attribute_map = {
            'shareholder_contact': 'ShareholderContact'
        }

        self._shareholder_contact = shareholder_contact

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShareholderContactWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShareholderContactWrapper of this ShareholderContactWrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shareholder_contact(self):
        """Gets the shareholder_contact of this ShareholderContactWrapper.


        :return: The shareholder_contact of this ShareholderContactWrapper.
        :rtype: ShareholderContact
        """
        return self._shareholder_contact

    @shareholder_contact.setter
    def shareholder_contact(self, shareholder_contact):
        """Sets the shareholder_contact of this ShareholderContactWrapper.


        :param shareholder_contact: The shareholder_contact of this ShareholderContactWrapper.
        :type shareholder_contact: ShareholderContact
        """

        self._shareholder_contact = shareholder_contact
