/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDirectDebitInitiatedNotificationContent.h
 *
 * 
 */

#ifndef OAIDirectDebitInitiatedNotificationContent_H
#define OAIDirectDebitInitiatedNotificationContent_H

#include <QJsonObject>

#include "OAIAmount.h"
#include "OAIErrorFieldTypeWrapper.h"
#include "OAILocalDate.h"
#include "OAIOperationStatus.h"
#include "OAISplit.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;
class OAILocalDate;
class OAIErrorFieldTypeWrapper;
class OAISplit;
class OAIOperationStatus;

class OAIDirectDebitInitiatedNotificationContent : public OAIObject {
public:
    OAIDirectDebitInitiatedNotificationContent();
    OAIDirectDebitInitiatedNotificationContent(QString json);
    ~OAIDirectDebitInitiatedNotificationContent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountCode() const;
    void setAccountCode(const QString &account_code);
    bool is_account_code_Set() const;
    bool is_account_code_Valid() const;

    OAIAmount getAmount() const;
    void setAmount(const OAIAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAILocalDate getDebitInitiationDate() const;
    void setDebitInitiationDate(const OAILocalDate &debit_initiation_date);
    bool is_debit_initiation_date_Set() const;
    bool is_debit_initiation_date_Valid() const;

    QList<OAIErrorFieldTypeWrapper> getInvalidFields() const;
    void setInvalidFields(const QList<OAIErrorFieldTypeWrapper> &invalid_fields);
    bool is_invalid_fields_Set() const;
    bool is_invalid_fields_Valid() const;

    QString getMerchantAccountCode() const;
    void setMerchantAccountCode(const QString &merchant_account_code);
    bool is_merchant_account_code_Set() const;
    bool is_merchant_account_code_Valid() const;

    QList<OAISplit> getSplits() const;
    void setSplits(const QList<OAISplit> &splits);
    bool is_splits_Set() const;
    bool is_splits_Valid() const;

    OAIOperationStatus getStatus() const;
    void setStatus(const OAIOperationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_code;
    bool m_account_code_isSet;
    bool m_account_code_isValid;

    OAIAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAILocalDate m_debit_initiation_date;
    bool m_debit_initiation_date_isSet;
    bool m_debit_initiation_date_isValid;

    QList<OAIErrorFieldTypeWrapper> m_invalid_fields;
    bool m_invalid_fields_isSet;
    bool m_invalid_fields_isValid;

    QString m_merchant_account_code;
    bool m_merchant_account_code_isSet;
    bool m_merchant_account_code_isValid;

    QList<OAISplit> m_splits;
    bool m_splits_isSet;
    bool m_splits_isValid;

    OAIOperationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDirectDebitInitiatedNotificationContent)

#endif // OAIDirectDebitInitiatedNotificationContent_H
