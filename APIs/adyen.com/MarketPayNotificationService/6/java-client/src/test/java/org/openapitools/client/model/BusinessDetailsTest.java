/*
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ShareholderContact;
import org.openapitools.client.model.SignatoryContact;
import org.openapitools.client.model.UltimateParentCompany;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for BusinessDetails
 */
public class BusinessDetailsTest {
    private final BusinessDetails model = new BusinessDetails();

    /**
     * Model tests for BusinessDetails
     */
    @Test
    public void testBusinessDetails() {
        // TODO: test BusinessDetails
    }

    /**
     * Test the property 'doingBusinessAs'
     */
    @Test
    public void doingBusinessAsTest() {
        // TODO: test doingBusinessAs
    }

    /**
     * Test the property 'legalBusinessName'
     */
    @Test
    public void legalBusinessNameTest() {
        // TODO: test legalBusinessName
    }

    /**
     * Test the property 'listedUltimateParentCompany'
     */
    @Test
    public void listedUltimateParentCompanyTest() {
        // TODO: test listedUltimateParentCompany
    }

    /**
     * Test the property 'registrationNumber'
     */
    @Test
    public void registrationNumberTest() {
        // TODO: test registrationNumber
    }

    /**
     * Test the property 'shareholders'
     */
    @Test
    public void shareholdersTest() {
        // TODO: test shareholders
    }

    /**
     * Test the property 'signatories'
     */
    @Test
    public void signatoriesTest() {
        // TODO: test signatories
    }

    /**
     * Test the property 'stockExchange'
     */
    @Test
    public void stockExchangeTest() {
        // TODO: test stockExchange
    }

    /**
     * Test the property 'stockNumber'
     */
    @Test
    public void stockNumberTest() {
        // TODO: test stockNumber
    }

    /**
     * Test the property 'stockTicker'
     */
    @Test
    public void stockTickerTest() {
        // TODO: test stockTicker
    }

    /**
     * Test the property 'taxId'
     */
    @Test
    public void taxIdTest() {
        // TODO: test taxId
    }

}
