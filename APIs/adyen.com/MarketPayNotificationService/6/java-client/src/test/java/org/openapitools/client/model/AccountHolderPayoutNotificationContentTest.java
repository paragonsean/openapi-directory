/*
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Amount;
import org.openapitools.client.model.BankAccountDetail;
import org.openapitools.client.model.ErrorFieldType;
import org.openapitools.client.model.ModelLocalDate;
import org.openapitools.client.model.OperationStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AccountHolderPayoutNotificationContent
 */
public class AccountHolderPayoutNotificationContentTest {
    private final AccountHolderPayoutNotificationContent model = new AccountHolderPayoutNotificationContent();

    /**
     * Model tests for AccountHolderPayoutNotificationContent
     */
    @Test
    public void testAccountHolderPayoutNotificationContent() {
        // TODO: test AccountHolderPayoutNotificationContent
    }

    /**
     * Test the property 'accountCode'
     */
    @Test
    public void accountCodeTest() {
        // TODO: test accountCode
    }

    /**
     * Test the property 'accountHolderCode'
     */
    @Test
    public void accountHolderCodeTest() {
        // TODO: test accountHolderCode
    }

    /**
     * Test the property 'amounts'
     */
    @Test
    public void amountsTest() {
        // TODO: test amounts
    }

    /**
     * Test the property 'bankAccountDetail'
     */
    @Test
    public void bankAccountDetailTest() {
        // TODO: test bankAccountDetail
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'estimatedArrivalDate'
     */
    @Test
    public void estimatedArrivalDateTest() {
        // TODO: test estimatedArrivalDate
    }

    /**
     * Test the property 'invalidFields'
     */
    @Test
    public void invalidFieldsTest() {
        // TODO: test invalidFields
    }

    /**
     * Test the property 'merchantReference'
     */
    @Test
    public void merchantReferenceTest() {
        // TODO: test merchantReference
    }

    /**
     * Test the property 'originalPspReference'
     */
    @Test
    public void originalPspReferenceTest() {
        // TODO: test originalPspReference
    }

    /**
     * Test the property 'payoutAccountCountry'
     */
    @Test
    public void payoutAccountCountryTest() {
        // TODO: test payoutAccountCountry
    }

    /**
     * Test the property 'payoutAccountNumber'
     */
    @Test
    public void payoutAccountNumberTest() {
        // TODO: test payoutAccountNumber
    }

    /**
     * Test the property 'payoutBalanceAccountId'
     */
    @Test
    public void payoutBalanceAccountIdTest() {
        // TODO: test payoutBalanceAccountId
    }

    /**
     * Test the property 'payoutBankName'
     */
    @Test
    public void payoutBankNameTest() {
        // TODO: test payoutBankName
    }

    /**
     * Test the property 'payoutBranchCode'
     */
    @Test
    public void payoutBranchCodeTest() {
        // TODO: test payoutBranchCode
    }

    /**
     * Test the property 'payoutReference'
     */
    @Test
    public void payoutReferenceTest() {
        // TODO: test payoutReference
    }

    /**
     * Test the property 'payoutSpeed'
     */
    @Test
    public void payoutSpeedTest() {
        // TODO: test payoutSpeed
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

}
