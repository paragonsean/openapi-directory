/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccountHolderUpcomingDeadlineNotificationContent model module.
 * @module model/AccountHolderUpcomingDeadlineNotificationContent
 * @version 6
 */
class AccountHolderUpcomingDeadlineNotificationContent {
    /**
     * Constructs a new <code>AccountHolderUpcomingDeadlineNotificationContent</code>.
     * @alias module:model/AccountHolderUpcomingDeadlineNotificationContent
     */
    constructor() { 
        
        AccountHolderUpcomingDeadlineNotificationContent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountHolderUpcomingDeadlineNotificationContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountHolderUpcomingDeadlineNotificationContent} obj Optional instance to populate.
     * @return {module:model/AccountHolderUpcomingDeadlineNotificationContent} The populated <code>AccountHolderUpcomingDeadlineNotificationContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountHolderUpcomingDeadlineNotificationContent();

            if (data.hasOwnProperty('accountHolderCode')) {
                obj['accountHolderCode'] = ApiClient.convertToType(data['accountHolderCode'], 'String');
            }
            if (data.hasOwnProperty('event')) {
                obj['event'] = ApiClient.convertToType(data['event'], 'String');
            }
            if (data.hasOwnProperty('executionDate')) {
                obj['executionDate'] = ApiClient.convertToType(data['executionDate'], 'Date');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountHolderUpcomingDeadlineNotificationContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountHolderUpcomingDeadlineNotificationContent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountHolderCode'] && !(typeof data['accountHolderCode'] === 'string' || data['accountHolderCode'] instanceof String)) {
            throw new Error("Expected the field `accountHolderCode` to be a primitive type in the JSON string but got " + data['accountHolderCode']);
        }
        // ensure the json data is a string
        if (data['event'] && !(typeof data['event'] === 'string' || data['event'] instanceof String)) {
            throw new Error("Expected the field `event` to be a primitive type in the JSON string but got " + data['event']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }

        return true;
    }


}



/**
 * The code of the account holder whom the event refers to.
 * @member {String} accountHolderCode
 */
AccountHolderUpcomingDeadlineNotificationContent.prototype['accountHolderCode'] = undefined;

/**
 * The event name that will be trigger if no action is taken.
 * @member {module:model/AccountHolderUpcomingDeadlineNotificationContent.EventEnum} event
 */
AccountHolderUpcomingDeadlineNotificationContent.prototype['event'] = undefined;

/**
 * The execution date scheduled for the event.
 * @member {Date} executionDate
 */
AccountHolderUpcomingDeadlineNotificationContent.prototype['executionDate'] = undefined;

/**
 * The reason that leads to scheduling of the event.
 * @member {String} reason
 */
AccountHolderUpcomingDeadlineNotificationContent.prototype['reason'] = undefined;





/**
 * Allowed values for the <code>event</code> property.
 * @enum {String}
 * @readonly
 */
AccountHolderUpcomingDeadlineNotificationContent['EventEnum'] = {

    /**
     * value: "AccessPii"
     * @const
     */
    "AccessPii": "AccessPii",

    /**
     * value: "ApiTierUpdate"
     * @const
     */
    "ApiTierUpdate": "ApiTierUpdate",

    /**
     * value: "CloseAccount"
     * @const
     */
    "CloseAccount": "CloseAccount",

    /**
     * value: "CloseStores"
     * @const
     */
    "CloseStores": "CloseStores",

    /**
     * value: "DeleteBalanceAccounts"
     * @const
     */
    "DeleteBalanceAccounts": "DeleteBalanceAccounts",

    /**
     * value: "DeleteBankAccounts"
     * @const
     */
    "DeleteBankAccounts": "DeleteBankAccounts",

    /**
     * value: "DeleteLegalArrangements"
     * @const
     */
    "DeleteLegalArrangements": "DeleteLegalArrangements",

    /**
     * value: "DeleteLiableBankAccount"
     * @const
     */
    "DeleteLiableBankAccount": "DeleteLiableBankAccount",

    /**
     * value: "DeletePayoutMethods"
     * @const
     */
    "DeletePayoutMethods": "DeletePayoutMethods",

    /**
     * value: "DeleteShareholders"
     * @const
     */
    "DeleteShareholders": "DeleteShareholders",

    /**
     * value: "DeleteSignatories"
     * @const
     */
    "DeleteSignatories": "DeleteSignatories",

    /**
     * value: "InactivateAccount"
     * @const
     */
    "InactivateAccount": "InactivateAccount",

    /**
     * value: "KYCDeadlineExtension"
     * @const
     */
    "KYCDeadlineExtension": "KYCDeadlineExtension",

    /**
     * value: "MigrateAccountToBP"
     * @const
     */
    "MigrateAccountToBP": "MigrateAccountToBP",

    /**
     * value: "RecalculateAccountStatusAndProcessingTier"
     * @const
     */
    "RecalculateAccountStatusAndProcessingTier": "RecalculateAccountStatusAndProcessingTier",

    /**
     * value: "RefundNotPaidOutTransfers"
     * @const
     */
    "RefundNotPaidOutTransfers": "RefundNotPaidOutTransfers",

    /**
     * value: "ResolveEvents"
     * @const
     */
    "ResolveEvents": "ResolveEvents",

    /**
     * value: "SaveAccountHolder"
     * @const
     */
    "SaveAccountHolder": "SaveAccountHolder",

    /**
     * value: "SaveKYCCheckStatus"
     * @const
     */
    "SaveKYCCheckStatus": "SaveKYCCheckStatus",

    /**
     * value: "SavePEPChecks"
     * @const
     */
    "SavePEPChecks": "SavePEPChecks",

    /**
     * value: "SuspendAccount"
     * @const
     */
    "SuspendAccount": "SuspendAccount",

    /**
     * value: "UnSuspendAccount"
     * @const
     */
    "UnSuspendAccount": "UnSuspendAccount",

    /**
     * value: "UpdateAccountHolderState"
     * @const
     */
    "UpdateAccountHolderState": "UpdateAccountHolderState",

    /**
     * value: "Verification"
     * @const
     */
    "Verification": "Verification"
};



export default AccountHolderUpcomingDeadlineNotificationContent;

