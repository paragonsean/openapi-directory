/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KYCCheckStatusData from './KYCCheckStatusData';

/**
 * The KYCPayoutMethodCheckResult model module.
 * @module model/KYCPayoutMethodCheckResult
 * @version 6
 */
class KYCPayoutMethodCheckResult {
    /**
     * Constructs a new <code>KYCPayoutMethodCheckResult</code>.
     * @alias module:model/KYCPayoutMethodCheckResult
     */
    constructor() { 
        
        KYCPayoutMethodCheckResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KYCPayoutMethodCheckResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KYCPayoutMethodCheckResult} obj Optional instance to populate.
     * @return {module:model/KYCPayoutMethodCheckResult} The populated <code>KYCPayoutMethodCheckResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KYCPayoutMethodCheckResult();

            if (data.hasOwnProperty('checks')) {
                obj['checks'] = ApiClient.convertToType(data['checks'], [KYCCheckStatusData]);
            }
            if (data.hasOwnProperty('payoutMethodCode')) {
                obj['payoutMethodCode'] = ApiClient.convertToType(data['payoutMethodCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KYCPayoutMethodCheckResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KYCPayoutMethodCheckResult</code>.
     */
    static validateJSON(data) {
        if (data['checks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['checks'])) {
                throw new Error("Expected the field `checks` to be an array in the JSON data but got " + data['checks']);
            }
            // validate the optional field `checks` (array)
            for (const item of data['checks']) {
                KYCCheckStatusData.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['payoutMethodCode'] && !(typeof data['payoutMethodCode'] === 'string' || data['payoutMethodCode'] instanceof String)) {
            throw new Error("Expected the field `payoutMethodCode` to be a primitive type in the JSON string but got " + data['payoutMethodCode']);
        }

        return true;
    }


}



/**
 * A list of the checks and their statuses.
 * @member {Array.<module:model/KYCCheckStatusData>} checks
 */
KYCPayoutMethodCheckResult.prototype['checks'] = undefined;

/**
 * The unique ID of the payoput method to which the check applies.
 * @member {String} payoutMethodCode
 */
KYCPayoutMethodCheckResult.prototype['payoutMethodCode'] = undefined;






export default KYCPayoutMethodCheckResult;

