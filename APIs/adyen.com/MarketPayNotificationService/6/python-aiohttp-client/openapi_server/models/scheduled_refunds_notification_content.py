# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_field_type import ErrorFieldType
from openapi_server.models.refund_result import RefundResult
from openapi_server.models.transaction import Transaction
from openapi_server import util


class ScheduledRefundsNotificationContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_code: str=None, account_holder_code: str=None, invalid_fields: List[ErrorFieldType]=None, last_payout: Transaction=None, refund_results: List[RefundResult]=None):
        """ScheduledRefundsNotificationContent - a model defined in OpenAPI

        :param account_code: The account_code of this ScheduledRefundsNotificationContent.
        :param account_holder_code: The account_holder_code of this ScheduledRefundsNotificationContent.
        :param invalid_fields: The invalid_fields of this ScheduledRefundsNotificationContent.
        :param last_payout: The last_payout of this ScheduledRefundsNotificationContent.
        :param refund_results: The refund_results of this ScheduledRefundsNotificationContent.
        """
        self.openapi_types = {
            'account_code': str,
            'account_holder_code': str,
            'invalid_fields': List[ErrorFieldType],
            'last_payout': Transaction,
            'refund_results': List[RefundResult]
        }

        self.attribute_map = {
            'account_code': 'accountCode',
            'account_holder_code': 'accountHolderCode',
            'invalid_fields': 'invalidFields',
            'last_payout': 'lastPayout',
            'refund_results': 'refundResults'
        }

        self._account_code = account_code
        self._account_holder_code = account_holder_code
        self._invalid_fields = invalid_fields
        self._last_payout = last_payout
        self._refund_results = refund_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduledRefundsNotificationContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduledRefundsNotificationContent of this ScheduledRefundsNotificationContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_code(self):
        """Gets the account_code of this ScheduledRefundsNotificationContent.

        The code of the account.

        :return: The account_code of this ScheduledRefundsNotificationContent.
        :rtype: str
        """
        return self._account_code

    @account_code.setter
    def account_code(self, account_code):
        """Sets the account_code of this ScheduledRefundsNotificationContent.

        The code of the account.

        :param account_code: The account_code of this ScheduledRefundsNotificationContent.
        :type account_code: str
        """

        self._account_code = account_code

    @property
    def account_holder_code(self):
        """Gets the account_holder_code of this ScheduledRefundsNotificationContent.

        The code of the Account Holder.

        :return: The account_holder_code of this ScheduledRefundsNotificationContent.
        :rtype: str
        """
        return self._account_holder_code

    @account_holder_code.setter
    def account_holder_code(self, account_holder_code):
        """Sets the account_holder_code of this ScheduledRefundsNotificationContent.

        The code of the Account Holder.

        :param account_holder_code: The account_holder_code of this ScheduledRefundsNotificationContent.
        :type account_holder_code: str
        """

        self._account_holder_code = account_holder_code

    @property
    def invalid_fields(self):
        """Gets the invalid_fields of this ScheduledRefundsNotificationContent.

        Invalid fields list.

        :return: The invalid_fields of this ScheduledRefundsNotificationContent.
        :rtype: List[ErrorFieldType]
        """
        return self._invalid_fields

    @invalid_fields.setter
    def invalid_fields(self, invalid_fields):
        """Sets the invalid_fields of this ScheduledRefundsNotificationContent.

        Invalid fields list.

        :param invalid_fields: The invalid_fields of this ScheduledRefundsNotificationContent.
        :type invalid_fields: List[ErrorFieldType]
        """

        self._invalid_fields = invalid_fields

    @property
    def last_payout(self):
        """Gets the last_payout of this ScheduledRefundsNotificationContent.

        The most recent payout (after which all transactions were scheduled to be refunded).

        :return: The last_payout of this ScheduledRefundsNotificationContent.
        :rtype: Transaction
        """
        return self._last_payout

    @last_payout.setter
    def last_payout(self, last_payout):
        """Sets the last_payout of this ScheduledRefundsNotificationContent.

        The most recent payout (after which all transactions were scheduled to be refunded).

        :param last_payout: The last_payout of this ScheduledRefundsNotificationContent.
        :type last_payout: Transaction
        """

        self._last_payout = last_payout

    @property
    def refund_results(self):
        """Gets the refund_results of this ScheduledRefundsNotificationContent.

        A list of the refunds that have been scheduled and their results.

        :return: The refund_results of this ScheduledRefundsNotificationContent.
        :rtype: List[RefundResult]
        """
        return self._refund_results

    @refund_results.setter
    def refund_results(self, refund_results):
        """Sets the refund_results of this ScheduledRefundsNotificationContent.

        A list of the refunds that have been scheduled and their results.

        :param refund_results: The refund_results of this ScheduledRefundsNotificationContent.
        :type refund_results: List[RefundResult]
        """

        self._refund_results = refund_results
