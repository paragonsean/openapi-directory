# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.kyc_check_result import KYCCheckResult
from openapi_server.models.kyc_legal_arrangement_check_result import KYCLegalArrangementCheckResult
from openapi_server.models.kyc_legal_arrangement_entity_check_result import KYCLegalArrangementEntityCheckResult
from openapi_server.models.kyc_payout_method_check_result import KYCPayoutMethodCheckResult
from openapi_server.models.kyc_shareholder_check_result import KYCShareholderCheckResult
from openapi_server.models.kyc_signatory_check_result import KYCSignatoryCheckResult
from openapi_server.models.kyc_ultimate_parent_company_check_result import KYCUltimateParentCompanyCheckResult
from openapi_server import util


class KYCVerificationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_holder: KYCCheckResult=None, legal_arrangements: List[KYCLegalArrangementCheckResult]=None, legal_arrangements_entities: List[KYCLegalArrangementEntityCheckResult]=None, payout_methods: List[KYCPayoutMethodCheckResult]=None, shareholders: List[KYCShareholderCheckResult]=None, signatories: List[KYCSignatoryCheckResult]=None, ultimate_parent_company: List[KYCUltimateParentCompanyCheckResult]=None):
        """KYCVerificationResult - a model defined in OpenAPI

        :param account_holder: The account_holder of this KYCVerificationResult.
        :param legal_arrangements: The legal_arrangements of this KYCVerificationResult.
        :param legal_arrangements_entities: The legal_arrangements_entities of this KYCVerificationResult.
        :param payout_methods: The payout_methods of this KYCVerificationResult.
        :param shareholders: The shareholders of this KYCVerificationResult.
        :param signatories: The signatories of this KYCVerificationResult.
        :param ultimate_parent_company: The ultimate_parent_company of this KYCVerificationResult.
        """
        self.openapi_types = {
            'account_holder': KYCCheckResult,
            'legal_arrangements': List[KYCLegalArrangementCheckResult],
            'legal_arrangements_entities': List[KYCLegalArrangementEntityCheckResult],
            'payout_methods': List[KYCPayoutMethodCheckResult],
            'shareholders': List[KYCShareholderCheckResult],
            'signatories': List[KYCSignatoryCheckResult],
            'ultimate_parent_company': List[KYCUltimateParentCompanyCheckResult]
        }

        self.attribute_map = {
            'account_holder': 'accountHolder',
            'legal_arrangements': 'legalArrangements',
            'legal_arrangements_entities': 'legalArrangementsEntities',
            'payout_methods': 'payoutMethods',
            'shareholders': 'shareholders',
            'signatories': 'signatories',
            'ultimate_parent_company': 'ultimateParentCompany'
        }

        self._account_holder = account_holder
        self._legal_arrangements = legal_arrangements
        self._legal_arrangements_entities = legal_arrangements_entities
        self._payout_methods = payout_methods
        self._shareholders = shareholders
        self._signatories = signatories
        self._ultimate_parent_company = ultimate_parent_company

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KYCVerificationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KYCVerificationResult of this KYCVerificationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_holder(self):
        """Gets the account_holder of this KYCVerificationResult.

        The results of the checks on the account holder.

        :return: The account_holder of this KYCVerificationResult.
        :rtype: KYCCheckResult
        """
        return self._account_holder

    @account_holder.setter
    def account_holder(self, account_holder):
        """Sets the account_holder of this KYCVerificationResult.

        The results of the checks on the account holder.

        :param account_holder: The account_holder of this KYCVerificationResult.
        :type account_holder: KYCCheckResult
        """

        self._account_holder = account_holder

    @property
    def legal_arrangements(self):
        """Gets the legal_arrangements of this KYCVerificationResult.

        The results of the checks on the legal arrangements.

        :return: The legal_arrangements of this KYCVerificationResult.
        :rtype: List[KYCLegalArrangementCheckResult]
        """
        return self._legal_arrangements

    @legal_arrangements.setter
    def legal_arrangements(self, legal_arrangements):
        """Sets the legal_arrangements of this KYCVerificationResult.

        The results of the checks on the legal arrangements.

        :param legal_arrangements: The legal_arrangements of this KYCVerificationResult.
        :type legal_arrangements: List[KYCLegalArrangementCheckResult]
        """

        self._legal_arrangements = legal_arrangements

    @property
    def legal_arrangements_entities(self):
        """Gets the legal_arrangements_entities of this KYCVerificationResult.

        The results of the checks on the legal arrangement entities.

        :return: The legal_arrangements_entities of this KYCVerificationResult.
        :rtype: List[KYCLegalArrangementEntityCheckResult]
        """
        return self._legal_arrangements_entities

    @legal_arrangements_entities.setter
    def legal_arrangements_entities(self, legal_arrangements_entities):
        """Sets the legal_arrangements_entities of this KYCVerificationResult.

        The results of the checks on the legal arrangement entities.

        :param legal_arrangements_entities: The legal_arrangements_entities of this KYCVerificationResult.
        :type legal_arrangements_entities: List[KYCLegalArrangementEntityCheckResult]
        """

        self._legal_arrangements_entities = legal_arrangements_entities

    @property
    def payout_methods(self):
        """Gets the payout_methods of this KYCVerificationResult.

        The results of the checks on the payout methods.

        :return: The payout_methods of this KYCVerificationResult.
        :rtype: List[KYCPayoutMethodCheckResult]
        """
        return self._payout_methods

    @payout_methods.setter
    def payout_methods(self, payout_methods):
        """Sets the payout_methods of this KYCVerificationResult.

        The results of the checks on the payout methods.

        :param payout_methods: The payout_methods of this KYCVerificationResult.
        :type payout_methods: List[KYCPayoutMethodCheckResult]
        """

        self._payout_methods = payout_methods

    @property
    def shareholders(self):
        """Gets the shareholders of this KYCVerificationResult.

        The results of the checks on the shareholders.

        :return: The shareholders of this KYCVerificationResult.
        :rtype: List[KYCShareholderCheckResult]
        """
        return self._shareholders

    @shareholders.setter
    def shareholders(self, shareholders):
        """Sets the shareholders of this KYCVerificationResult.

        The results of the checks on the shareholders.

        :param shareholders: The shareholders of this KYCVerificationResult.
        :type shareholders: List[KYCShareholderCheckResult]
        """

        self._shareholders = shareholders

    @property
    def signatories(self):
        """Gets the signatories of this KYCVerificationResult.

        The results of the checks on the signatories.

        :return: The signatories of this KYCVerificationResult.
        :rtype: List[KYCSignatoryCheckResult]
        """
        return self._signatories

    @signatories.setter
    def signatories(self, signatories):
        """Sets the signatories of this KYCVerificationResult.

        The results of the checks on the signatories.

        :param signatories: The signatories of this KYCVerificationResult.
        :type signatories: List[KYCSignatoryCheckResult]
        """

        self._signatories = signatories

    @property
    def ultimate_parent_company(self):
        """Gets the ultimate_parent_company of this KYCVerificationResult.

        The result of the check on the Ultimate Parent Company.

        :return: The ultimate_parent_company of this KYCVerificationResult.
        :rtype: List[KYCUltimateParentCompanyCheckResult]
        """
        return self._ultimate_parent_company

    @ultimate_parent_company.setter
    def ultimate_parent_company(self, ultimate_parent_company):
        """Sets the ultimate_parent_company of this KYCVerificationResult.

        The result of the check on the Ultimate Parent Company.

        :param ultimate_parent_company: The ultimate_parent_company of this KYCVerificationResult.
        :type ultimate_parent_company: List[KYCUltimateParentCompanyCheckResult]
        """

        self._ultimate_parent_company = ultimate_parent_company
