/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAccountResponse.h
 *
 * 
 */

#ifndef OAICreateAccountResponse_H
#define OAICreateAccountResponse_H

#include <QJsonObject>

#include "OAIErrorFieldType.h"
#include "OAIPayoutScheduleResponse.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErrorFieldType;
class OAIPayoutScheduleResponse;

class OAICreateAccountResponse : public OAIObject {
public:
    OAICreateAccountResponse();
    OAICreateAccountResponse(QString json);
    ~OAICreateAccountResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountCode() const;
    void setAccountCode(const QString &account_code);
    bool is_account_code_Set() const;
    bool is_account_code_Valid() const;

    QString getAccountHolderCode() const;
    void setAccountHolderCode(const QString &account_holder_code);
    bool is_account_holder_code_Set() const;
    bool is_account_holder_code_Valid() const;

    QString getBankAccountUuid() const;
    void setBankAccountUuid(const QString &bank_account_uuid);
    bool is_bank_account_uuid_Set() const;
    bool is_bank_account_uuid_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIErrorFieldType> getInvalidFields() const;
    void setInvalidFields(const QList<OAIErrorFieldType> &invalid_fields);
    bool is_invalid_fields_Set() const;
    bool is_invalid_fields_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getPayoutMethodCode() const;
    void setPayoutMethodCode(const QString &payout_method_code);
    bool is_payout_method_code_Set() const;
    bool is_payout_method_code_Valid() const;

    OAIPayoutScheduleResponse getPayoutSchedule() const;
    void setPayoutSchedule(const OAIPayoutScheduleResponse &payout_schedule);
    bool is_payout_schedule_Set() const;
    bool is_payout_schedule_Valid() const;

    QString getPayoutSpeed() const;
    void setPayoutSpeed(const QString &payout_speed);
    bool is_payout_speed_Set() const;
    bool is_payout_speed_Valid() const;

    QString getPspReference() const;
    void setPspReference(const QString &psp_reference);
    bool is_psp_reference_Set() const;
    bool is_psp_reference_Valid() const;

    QString getResultCode() const;
    void setResultCode(const QString &result_code);
    bool is_result_code_Set() const;
    bool is_result_code_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_code;
    bool m_account_code_isSet;
    bool m_account_code_isValid;

    QString m_account_holder_code;
    bool m_account_holder_code_isSet;
    bool m_account_holder_code_isValid;

    QString m_bank_account_uuid;
    bool m_bank_account_uuid_isSet;
    bool m_bank_account_uuid_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIErrorFieldType> m_invalid_fields;
    bool m_invalid_fields_isSet;
    bool m_invalid_fields_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_payout_method_code;
    bool m_payout_method_code_isSet;
    bool m_payout_method_code_isValid;

    OAIPayoutScheduleResponse m_payout_schedule;
    bool m_payout_schedule_isSet;
    bool m_payout_schedule_isValid;

    QString m_payout_speed;
    bool m_payout_speed_isSet;
    bool m_payout_speed_isValid;

    QString m_psp_reference;
    bool m_psp_reference_isSet;
    bool m_psp_reference_isValid;

    QString m_result_code;
    bool m_result_code_isSet;
    bool m_result_code_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAccountResponse)

#endif // OAICreateAccountResponse_H
