/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStoreDetail.h
 *
 * 
 */

#ifndef OAIStoreDetail_H
#define OAIStoreDetail_H

#include <QJsonObject>

#include "OAIViasAddress.h"
#include "OAIViasPhoneNumber.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIViasAddress;
class OAIViasPhoneNumber;

class OAIStoreDetail : public OAIObject {
public:
    OAIStoreDetail();
    OAIStoreDetail(QString json);
    ~OAIStoreDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIViasAddress getAddress() const;
    void setAddress(const OAIViasAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getFullPhoneNumber() const;
    void setFullPhoneNumber(const QString &full_phone_number);
    bool is_full_phone_number_Set() const;
    bool is_full_phone_number_Valid() const;

    QString getLogo() const;
    void setLogo(const QString &logo);
    bool is_logo_Set() const;
    bool is_logo_Valid() const;

    QString getMerchantAccount() const;
    void setMerchantAccount(const QString &merchant_account);
    bool is_merchant_account_Set() const;
    bool is_merchant_account_Valid() const;

    QString getMerchantCategoryCode() const;
    void setMerchantCategoryCode(const QString &merchant_category_code);
    bool is_merchant_category_code_Set() const;
    bool is_merchant_category_code_Valid() const;

    QString getMerchantHouseNumber() const;
    void setMerchantHouseNumber(const QString &merchant_house_number);
    bool is_merchant_house_number_Set() const;
    bool is_merchant_house_number_Valid() const;

    OAIViasPhoneNumber getPhoneNumber() const;
    void setPhoneNumber(const OAIViasPhoneNumber &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QString getShopperInteraction() const;
    void setShopperInteraction(const QString &shopper_interaction);
    bool is_shopper_interaction_Set() const;
    bool is_shopper_interaction_Valid() const;

    QString getSplitConfigurationUuid() const;
    void setSplitConfigurationUuid(const QString &split_configuration_uuid);
    bool is_split_configuration_uuid_Set() const;
    bool is_split_configuration_uuid_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStore() const;
    void setStore(const QString &store);
    bool is_store_Set() const;
    bool is_store_Valid() const;

    QString getStoreName() const;
    void setStoreName(const QString &store_name);
    bool is_store_name_Set() const;
    bool is_store_name_Valid() const;

    QString getStoreReference() const;
    void setStoreReference(const QString &store_reference);
    bool is_store_reference_Set() const;
    bool is_store_reference_Valid() const;

    QString getVirtualAccount() const;
    void setVirtualAccount(const QString &virtual_account);
    bool is_virtual_account_Set() const;
    bool is_virtual_account_Valid() const;

    QString getWebAddress() const;
    void setWebAddress(const QString &web_address);
    bool is_web_address_Set() const;
    bool is_web_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIViasAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_full_phone_number;
    bool m_full_phone_number_isSet;
    bool m_full_phone_number_isValid;

    QString m_logo;
    bool m_logo_isSet;
    bool m_logo_isValid;

    QString m_merchant_account;
    bool m_merchant_account_isSet;
    bool m_merchant_account_isValid;

    QString m_merchant_category_code;
    bool m_merchant_category_code_isSet;
    bool m_merchant_category_code_isValid;

    QString m_merchant_house_number;
    bool m_merchant_house_number_isSet;
    bool m_merchant_house_number_isValid;

    OAIViasPhoneNumber m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QString m_shopper_interaction;
    bool m_shopper_interaction_isSet;
    bool m_shopper_interaction_isValid;

    QString m_split_configuration_uuid;
    bool m_split_configuration_uuid_isSet;
    bool m_split_configuration_uuid_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_store;
    bool m_store_isSet;
    bool m_store_isValid;

    QString m_store_name;
    bool m_store_name_isSet;
    bool m_store_name_isValid;

    QString m_store_reference;
    bool m_store_reference_isSet;
    bool m_store_reference_isValid;

    QString m_virtual_account;
    bool m_virtual_account_isSet;
    bool m_virtual_account_isValid;

    QString m_web_address;
    bool m_web_address_isSet;
    bool m_web_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStoreDetail)

#endif // OAIStoreDetail_H
