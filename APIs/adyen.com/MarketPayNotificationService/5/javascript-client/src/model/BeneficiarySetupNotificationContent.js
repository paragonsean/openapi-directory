/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorFieldType from './ErrorFieldType';

/**
 * The BeneficiarySetupNotificationContent model module.
 * @module model/BeneficiarySetupNotificationContent
 * @version 5
 */
class BeneficiarySetupNotificationContent {
    /**
     * Constructs a new <code>BeneficiarySetupNotificationContent</code>.
     * @alias module:model/BeneficiarySetupNotificationContent
     */
    constructor() { 
        
        BeneficiarySetupNotificationContent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BeneficiarySetupNotificationContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BeneficiarySetupNotificationContent} obj Optional instance to populate.
     * @return {module:model/BeneficiarySetupNotificationContent} The populated <code>BeneficiarySetupNotificationContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BeneficiarySetupNotificationContent();

            if (data.hasOwnProperty('destinationAccountCode')) {
                obj['destinationAccountCode'] = ApiClient.convertToType(data['destinationAccountCode'], 'String');
            }
            if (data.hasOwnProperty('destinationAccountHolderCode')) {
                obj['destinationAccountHolderCode'] = ApiClient.convertToType(data['destinationAccountHolderCode'], 'String');
            }
            if (data.hasOwnProperty('invalidFields')) {
                obj['invalidFields'] = ApiClient.convertToType(data['invalidFields'], [ErrorFieldType]);
            }
            if (data.hasOwnProperty('merchantReference')) {
                obj['merchantReference'] = ApiClient.convertToType(data['merchantReference'], 'String');
            }
            if (data.hasOwnProperty('sourceAccountCode')) {
                obj['sourceAccountCode'] = ApiClient.convertToType(data['sourceAccountCode'], 'String');
            }
            if (data.hasOwnProperty('sourceAccountHolderCode')) {
                obj['sourceAccountHolderCode'] = ApiClient.convertToType(data['sourceAccountHolderCode'], 'String');
            }
            if (data.hasOwnProperty('transferDate')) {
                obj['transferDate'] = ApiClient.convertToType(data['transferDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BeneficiarySetupNotificationContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BeneficiarySetupNotificationContent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['destinationAccountCode'] && !(typeof data['destinationAccountCode'] === 'string' || data['destinationAccountCode'] instanceof String)) {
            throw new Error("Expected the field `destinationAccountCode` to be a primitive type in the JSON string but got " + data['destinationAccountCode']);
        }
        // ensure the json data is a string
        if (data['destinationAccountHolderCode'] && !(typeof data['destinationAccountHolderCode'] === 'string' || data['destinationAccountHolderCode'] instanceof String)) {
            throw new Error("Expected the field `destinationAccountHolderCode` to be a primitive type in the JSON string but got " + data['destinationAccountHolderCode']);
        }
        if (data['invalidFields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['invalidFields'])) {
                throw new Error("Expected the field `invalidFields` to be an array in the JSON data but got " + data['invalidFields']);
            }
            // validate the optional field `invalidFields` (array)
            for (const item of data['invalidFields']) {
                ErrorFieldType.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['merchantReference'] && !(typeof data['merchantReference'] === 'string' || data['merchantReference'] instanceof String)) {
            throw new Error("Expected the field `merchantReference` to be a primitive type in the JSON string but got " + data['merchantReference']);
        }
        // ensure the json data is a string
        if (data['sourceAccountCode'] && !(typeof data['sourceAccountCode'] === 'string' || data['sourceAccountCode'] instanceof String)) {
            throw new Error("Expected the field `sourceAccountCode` to be a primitive type in the JSON string but got " + data['sourceAccountCode']);
        }
        // ensure the json data is a string
        if (data['sourceAccountHolderCode'] && !(typeof data['sourceAccountHolderCode'] === 'string' || data['sourceAccountHolderCode'] instanceof String)) {
            throw new Error("Expected the field `sourceAccountHolderCode` to be a primitive type in the JSON string but got " + data['sourceAccountHolderCode']);
        }

        return true;
    }


}



/**
 * The code of the beneficiary account.
 * @member {String} destinationAccountCode
 */
BeneficiarySetupNotificationContent.prototype['destinationAccountCode'] = undefined;

/**
 * The code of the beneficiary Account Holder.
 * @member {String} destinationAccountHolderCode
 */
BeneficiarySetupNotificationContent.prototype['destinationAccountHolderCode'] = undefined;

/**
 * A listing of the invalid fields which have caused the Setup Beneficiary request to fail. If this is empty, the Setup Beneficiary request has succeeded.
 * @member {Array.<module:model/ErrorFieldType>} invalidFields
 */
BeneficiarySetupNotificationContent.prototype['invalidFields'] = undefined;

/**
 * The reference provided by the merchant.
 * @member {String} merchantReference
 */
BeneficiarySetupNotificationContent.prototype['merchantReference'] = undefined;

/**
 * The code of the benefactor account.
 * @member {String} sourceAccountCode
 */
BeneficiarySetupNotificationContent.prototype['sourceAccountCode'] = undefined;

/**
 * The code of the benefactor Account Holder.
 * @member {String} sourceAccountHolderCode
 */
BeneficiarySetupNotificationContent.prototype['sourceAccountHolderCode'] = undefined;

/**
 * The date on which the beneficiary was set up and funds transferred from benefactor to beneficiary.
 * @member {Date} transferDate
 */
BeneficiarySetupNotificationContent.prototype['transferDate'] = undefined;






export default BeneficiarySetupNotificationContent;

