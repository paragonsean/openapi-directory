/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorFieldType from './ErrorFieldType';
import Message from './Message';

/**
 * The PaymentFailureNotificationContent model module.
 * @module model/PaymentFailureNotificationContent
 * @version 5
 */
class PaymentFailureNotificationContent {
    /**
     * Constructs a new <code>PaymentFailureNotificationContent</code>.
     * @alias module:model/PaymentFailureNotificationContent
     */
    constructor() { 
        
        PaymentFailureNotificationContent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentFailureNotificationContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentFailureNotificationContent} obj Optional instance to populate.
     * @return {module:model/PaymentFailureNotificationContent} The populated <code>PaymentFailureNotificationContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentFailureNotificationContent();

            if (data.hasOwnProperty('errorFields')) {
                obj['errorFields'] = ApiClient.convertToType(data['errorFields'], [ErrorFieldType]);
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = Message.constructFromObject(data['errorMessage']);
            }
            if (data.hasOwnProperty('modificationMerchantReference')) {
                obj['modificationMerchantReference'] = ApiClient.convertToType(data['modificationMerchantReference'], 'String');
            }
            if (data.hasOwnProperty('modificationPspReference')) {
                obj['modificationPspReference'] = ApiClient.convertToType(data['modificationPspReference'], 'String');
            }
            if (data.hasOwnProperty('paymentMerchantReference')) {
                obj['paymentMerchantReference'] = ApiClient.convertToType(data['paymentMerchantReference'], 'String');
            }
            if (data.hasOwnProperty('paymentPspReference')) {
                obj['paymentPspReference'] = ApiClient.convertToType(data['paymentPspReference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentFailureNotificationContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentFailureNotificationContent</code>.
     */
    static validateJSON(data) {
        if (data['errorFields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errorFields'])) {
                throw new Error("Expected the field `errorFields` to be an array in the JSON data but got " + data['errorFields']);
            }
            // validate the optional field `errorFields` (array)
            for (const item of data['errorFields']) {
                ErrorFieldType.validateJSON(item);
            };
        }
        // validate the optional field `errorMessage`
        if (data['errorMessage']) { // data not null
          Message.validateJSON(data['errorMessage']);
        }
        // ensure the json data is a string
        if (data['modificationMerchantReference'] && !(typeof data['modificationMerchantReference'] === 'string' || data['modificationMerchantReference'] instanceof String)) {
            throw new Error("Expected the field `modificationMerchantReference` to be a primitive type in the JSON string but got " + data['modificationMerchantReference']);
        }
        // ensure the json data is a string
        if (data['modificationPspReference'] && !(typeof data['modificationPspReference'] === 'string' || data['modificationPspReference'] instanceof String)) {
            throw new Error("Expected the field `modificationPspReference` to be a primitive type in the JSON string but got " + data['modificationPspReference']);
        }
        // ensure the json data is a string
        if (data['paymentMerchantReference'] && !(typeof data['paymentMerchantReference'] === 'string' || data['paymentMerchantReference'] instanceof String)) {
            throw new Error("Expected the field `paymentMerchantReference` to be a primitive type in the JSON string but got " + data['paymentMerchantReference']);
        }
        // ensure the json data is a string
        if (data['paymentPspReference'] && !(typeof data['paymentPspReference'] === 'string' || data['paymentPspReference'] instanceof String)) {
            throw new Error("Expected the field `paymentPspReference` to be a primitive type in the JSON string but got " + data['paymentPspReference']);
        }

        return true;
    }


}



/**
 * Missing or invalid fields that caused the payment error.
 * @member {Array.<module:model/ErrorFieldType>} errorFields
 */
PaymentFailureNotificationContent.prototype['errorFields'] = undefined;

/**
 * The error message.
 * @member {module:model/Message} errorMessage
 */
PaymentFailureNotificationContent.prototype['errorMessage'] = undefined;

/**
 * The `reference` of the capture or refund.
 * @member {String} modificationMerchantReference
 */
PaymentFailureNotificationContent.prototype['modificationMerchantReference'] = undefined;

/**
 * The `pspReference` of the capture or refund.
 * @member {String} modificationPspReference
 */
PaymentFailureNotificationContent.prototype['modificationPspReference'] = undefined;

/**
 * The `reference` of the payment.
 * @member {String} paymentMerchantReference
 */
PaymentFailureNotificationContent.prototype['paymentMerchantReference'] = undefined;

/**
 * The `pspReference` of the payment.
 * @member {String} paymentPspReference
 */
PaymentFailureNotificationContent.prototype['paymentPspReference'] = undefined;






export default PaymentFailureNotificationContent;

