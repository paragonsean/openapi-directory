/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccountHolderCreateNotification from '../model/AccountHolderCreateNotification';
import AccountHolderStatusChangeNotification from '../model/AccountHolderStatusChangeNotification';
import AccountHolderStoreStatusChangeNotification from '../model/AccountHolderStoreStatusChangeNotification';
import AccountHolderUpcomingDeadlineNotification from '../model/AccountHolderUpcomingDeadlineNotification';
import AccountHolderUpdateNotification from '../model/AccountHolderUpdateNotification';
import AccountHolderVerificationNotification from '../model/AccountHolderVerificationNotification';
import NotificationResponse from '../model/NotificationResponse';

/**
* AccountHolders service.
* @module api/AccountHoldersApi
* @version 5
*/
export default class AccountHoldersApi {

    /**
    * Constructs a new AccountHoldersApi. 
    * @alias module:api/AccountHoldersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postACCOUNTHOLDERCREATED operation.
     * @callback module:api/AccountHoldersApi~postACCOUNTHOLDERCREATEDCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Account holder created
     * Adyen sends this webhook when [an account holder is created](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder).
     * @param {Object} opts Optional parameters
     * @param {} [accountHolderCreateNotification] 
     * @param {module:api/AccountHoldersApi~postACCOUNTHOLDERCREATEDCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link }
     */
    postACCOUNTHOLDERCREATED() {
      let postBody = opts['accountHolderCreateNotification'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/ACCOUNT_HOLDER_CREATED', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postACCOUNTHOLDERSTATUSCHANGE operation.
     * @callback module:api/AccountHoldersApi~postACCOUNTHOLDERSTATUSCHANGECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Account holder status changed
     * Adyen sends this webhook when [the status of an account holder is changed](https://docs.adyen.com/api-explorer/#/Account/latest/post/updateAccountHolderState).
     * @param {Object} opts Optional parameters
     * @param {} [accountHolderStatusChangeNotification] 
     * @param {module:api/AccountHoldersApi~postACCOUNTHOLDERSTATUSCHANGECallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link }
     */
    postACCOUNTHOLDERSTATUSCHANGE() {
      let postBody = opts['accountHolderStatusChangeNotification'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/ACCOUNT_HOLDER_STATUS_CHANGE', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postACCOUNTHOLDERSTORESTATUSCHANGE operation.
     * @callback module:api/AccountHoldersApi~postACCOUNTHOLDERSTORESTATUSCHANGECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Store status changed
     * Adyen sends this webhook when [the status of a store](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__reqParam_accountHolderDetails-storeDetails-status) associated with an account holder is changed.
     * @param {Object} opts Optional parameters
     * @param {} [accountHolderStoreStatusChangeNotification] 
     * @param {module:api/AccountHoldersApi~postACCOUNTHOLDERSTORESTATUSCHANGECallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link }
     */
    postACCOUNTHOLDERSTORESTATUSCHANGE() {
      let postBody = opts['accountHolderStoreStatusChangeNotification'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/ACCOUNT_HOLDER_STORE_STATUS_CHANGE', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postACCOUNTHOLDERUPCOMINGDEADLINE operation.
     * @callback module:api/AccountHoldersApi~postACCOUNTHOLDERUPCOMINGDEADLINECallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upcoming deadline
     * Adyen sends this notification when an account holder's deadline to fulfill the requirements of a specific event is coming up.
     * @param {Object} opts Optional parameters
     * @param {} [accountHolderUpcomingDeadlineNotification] 
     * @param {module:api/AccountHoldersApi~postACCOUNTHOLDERUPCOMINGDEADLINECallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link }
     */
    postACCOUNTHOLDERUPCOMINGDEADLINE() {
      let postBody = opts['accountHolderUpcomingDeadlineNotification'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/ACCOUNT_HOLDER_UPCOMING_DEADLINE', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postACCOUNTHOLDERUPDATED operation.
     * @callback module:api/AccountHoldersApi~postACCOUNTHOLDERUPDATEDCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Account holder updated
     * Adyen sends this webhook when [an account holder is updated](https://docs.adyen.com/api-explorer/#/Account/latest/post/updateAccountHolder).
     * @param {Object} opts Optional parameters
     * @param {} [accountHolderUpdateNotification] 
     * @param {module:api/AccountHoldersApi~postACCOUNTHOLDERUPDATEDCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link }
     */
    postACCOUNTHOLDERUPDATED() {
      let postBody = opts['accountHolderUpdateNotification'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/ACCOUNT_HOLDER_UPDATED', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postACCOUNTHOLDERVERIFICATION operation.
     * @callback module:api/AccountHoldersApi~postACCOUNTHOLDERVERIFICATIONCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verification results received
     * Adyen sends this webhook when verification results are available.
     * @param {Object} opts Optional parameters
     * @param {} [accountHolderVerificationNotification] 
     * @param {module:api/AccountHoldersApi~postACCOUNTHOLDERVERIFICATIONCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link }
     */
    postACCOUNTHOLDERVERIFICATION() {
      let postBody = opts['accountHolderVerificationNotification'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/ACCOUNT_HOLDER_VERIFICATION', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
