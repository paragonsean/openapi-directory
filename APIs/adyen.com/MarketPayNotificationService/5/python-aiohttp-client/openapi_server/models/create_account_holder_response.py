# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_holder_details import AccountHolderDetails
from openapi_server.models.account_holder_status import AccountHolderStatus
from openapi_server.models.error_field_type import ErrorFieldType
from openapi_server.models.kyc_verification_result import KYCVerificationResult
from openapi_server import util


class CreateAccountHolderResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_code: str=None, account_holder_code: str=None, account_holder_details: AccountHolderDetails=None, account_holder_status: AccountHolderStatus=None, description: str=None, invalid_fields: List[ErrorFieldType]=None, legal_entity: str=None, primary_currency: str=None, psp_reference: str=None, result_code: str=None, verification: KYCVerificationResult=None):
        """CreateAccountHolderResponse - a model defined in OpenAPI

        :param account_code: The account_code of this CreateAccountHolderResponse.
        :param account_holder_code: The account_holder_code of this CreateAccountHolderResponse.
        :param account_holder_details: The account_holder_details of this CreateAccountHolderResponse.
        :param account_holder_status: The account_holder_status of this CreateAccountHolderResponse.
        :param description: The description of this CreateAccountHolderResponse.
        :param invalid_fields: The invalid_fields of this CreateAccountHolderResponse.
        :param legal_entity: The legal_entity of this CreateAccountHolderResponse.
        :param primary_currency: The primary_currency of this CreateAccountHolderResponse.
        :param psp_reference: The psp_reference of this CreateAccountHolderResponse.
        :param result_code: The result_code of this CreateAccountHolderResponse.
        :param verification: The verification of this CreateAccountHolderResponse.
        """
        self.openapi_types = {
            'account_code': str,
            'account_holder_code': str,
            'account_holder_details': AccountHolderDetails,
            'account_holder_status': AccountHolderStatus,
            'description': str,
            'invalid_fields': List[ErrorFieldType],
            'legal_entity': str,
            'primary_currency': str,
            'psp_reference': str,
            'result_code': str,
            'verification': KYCVerificationResult
        }

        self.attribute_map = {
            'account_code': 'accountCode',
            'account_holder_code': 'accountHolderCode',
            'account_holder_details': 'accountHolderDetails',
            'account_holder_status': 'accountHolderStatus',
            'description': 'description',
            'invalid_fields': 'invalidFields',
            'legal_entity': 'legalEntity',
            'primary_currency': 'primaryCurrency',
            'psp_reference': 'pspReference',
            'result_code': 'resultCode',
            'verification': 'verification'
        }

        self._account_code = account_code
        self._account_holder_code = account_holder_code
        self._account_holder_details = account_holder_details
        self._account_holder_status = account_holder_status
        self._description = description
        self._invalid_fields = invalid_fields
        self._legal_entity = legal_entity
        self._primary_currency = primary_currency
        self._psp_reference = psp_reference
        self._result_code = result_code
        self._verification = verification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAccountHolderResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAccountHolderResponse of this CreateAccountHolderResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_code(self):
        """Gets the account_code of this CreateAccountHolderResponse.

        The code of a new account created for the account holder.

        :return: The account_code of this CreateAccountHolderResponse.
        :rtype: str
        """
        return self._account_code

    @account_code.setter
    def account_code(self, account_code):
        """Sets the account_code of this CreateAccountHolderResponse.

        The code of a new account created for the account holder.

        :param account_code: The account_code of this CreateAccountHolderResponse.
        :type account_code: str
        """

        self._account_code = account_code

    @property
    def account_holder_code(self):
        """Gets the account_holder_code of this CreateAccountHolderResponse.

        The code of the new account holder.

        :return: The account_holder_code of this CreateAccountHolderResponse.
        :rtype: str
        """
        return self._account_holder_code

    @account_holder_code.setter
    def account_holder_code(self, account_holder_code):
        """Sets the account_holder_code of this CreateAccountHolderResponse.

        The code of the new account holder.

        :param account_holder_code: The account_holder_code of this CreateAccountHolderResponse.
        :type account_holder_code: str
        """

        self._account_holder_code = account_holder_code

    @property
    def account_holder_details(self):
        """Gets the account_holder_details of this CreateAccountHolderResponse.

        Details of the new account holder.

        :return: The account_holder_details of this CreateAccountHolderResponse.
        :rtype: AccountHolderDetails
        """
        return self._account_holder_details

    @account_holder_details.setter
    def account_holder_details(self, account_holder_details):
        """Sets the account_holder_details of this CreateAccountHolderResponse.

        Details of the new account holder.

        :param account_holder_details: The account_holder_details of this CreateAccountHolderResponse.
        :type account_holder_details: AccountHolderDetails
        """

        self._account_holder_details = account_holder_details

    @property
    def account_holder_status(self):
        """Gets the account_holder_status of this CreateAccountHolderResponse.

        The status of the new account holder.

        :return: The account_holder_status of this CreateAccountHolderResponse.
        :rtype: AccountHolderStatus
        """
        return self._account_holder_status

    @account_holder_status.setter
    def account_holder_status(self, account_holder_status):
        """Sets the account_holder_status of this CreateAccountHolderResponse.

        The status of the new account holder.

        :param account_holder_status: The account_holder_status of this CreateAccountHolderResponse.
        :type account_holder_status: AccountHolderStatus
        """

        self._account_holder_status = account_holder_status

    @property
    def description(self):
        """Gets the description of this CreateAccountHolderResponse.

        The description of the new account holder.

        :return: The description of this CreateAccountHolderResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateAccountHolderResponse.

        The description of the new account holder.

        :param description: The description of this CreateAccountHolderResponse.
        :type description: str
        """

        self._description = description

    @property
    def invalid_fields(self):
        """Gets the invalid_fields of this CreateAccountHolderResponse.

        A list of fields that caused the `/createAccountHolder` request to fail.

        :return: The invalid_fields of this CreateAccountHolderResponse.
        :rtype: List[ErrorFieldType]
        """
        return self._invalid_fields

    @invalid_fields.setter
    def invalid_fields(self, invalid_fields):
        """Sets the invalid_fields of this CreateAccountHolderResponse.

        A list of fields that caused the `/createAccountHolder` request to fail.

        :param invalid_fields: The invalid_fields of this CreateAccountHolderResponse.
        :type invalid_fields: List[ErrorFieldType]
        """

        self._invalid_fields = invalid_fields

    @property
    def legal_entity(self):
        """Gets the legal_entity of this CreateAccountHolderResponse.

        The type of legal entity of the new account holder.

        :return: The legal_entity of this CreateAccountHolderResponse.
        :rtype: str
        """
        return self._legal_entity

    @legal_entity.setter
    def legal_entity(self, legal_entity):
        """Sets the legal_entity of this CreateAccountHolderResponse.

        The type of legal entity of the new account holder.

        :param legal_entity: The legal_entity of this CreateAccountHolderResponse.
        :type legal_entity: str
        """
        allowed_values = ["Business", "Individual", "NonProfit"]  # noqa: E501
        if legal_entity not in allowed_values:
            raise ValueError(
                "Invalid value for `legal_entity` ({0}), must be one of {1}"
                .format(legal_entity, allowed_values)
            )

        self._legal_entity = legal_entity

    @property
    def primary_currency(self):
        """Gets the primary_currency of this CreateAccountHolderResponse.

        The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), with which the prospective account holder primarily deals.

        :return: The primary_currency of this CreateAccountHolderResponse.
        :rtype: str
        """
        return self._primary_currency

    @primary_currency.setter
    def primary_currency(self, primary_currency):
        """Sets the primary_currency of this CreateAccountHolderResponse.

        The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), with which the prospective account holder primarily deals.

        :param primary_currency: The primary_currency of this CreateAccountHolderResponse.
        :type primary_currency: str
        """

        self._primary_currency = primary_currency

    @property
    def psp_reference(self):
        """Gets the psp_reference of this CreateAccountHolderResponse.

        The reference of a request. Can be used to uniquely identify the request.

        :return: The psp_reference of this CreateAccountHolderResponse.
        :rtype: str
        """
        return self._psp_reference

    @psp_reference.setter
    def psp_reference(self, psp_reference):
        """Sets the psp_reference of this CreateAccountHolderResponse.

        The reference of a request. Can be used to uniquely identify the request.

        :param psp_reference: The psp_reference of this CreateAccountHolderResponse.
        :type psp_reference: str
        """

        self._psp_reference = psp_reference

    @property
    def result_code(self):
        """Gets the result_code of this CreateAccountHolderResponse.

        The result code.

        :return: The result_code of this CreateAccountHolderResponse.
        :rtype: str
        """
        return self._result_code

    @result_code.setter
    def result_code(self, result_code):
        """Sets the result_code of this CreateAccountHolderResponse.

        The result code.

        :param result_code: The result_code of this CreateAccountHolderResponse.
        :type result_code: str
        """

        self._result_code = result_code

    @property
    def verification(self):
        """Gets the verification of this CreateAccountHolderResponse.

        The details of KYC Verification of the account holder.

        :return: The verification of this CreateAccountHolderResponse.
        :rtype: KYCVerificationResult
        """
        return self._verification

    @verification.setter
    def verification(self, verification):
        """Sets the verification of this CreateAccountHolderResponse.

        The details of KYC Verification of the account holder.

        :param verification: The verification of this CreateAccountHolderResponse.
        :type verification: KYCVerificationResult
        """

        self._verification = verification
