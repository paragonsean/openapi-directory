# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vias_name import ViasName
from openapi_server.models.vias_personal_data import ViasPersonalData
from openapi_server import util


class IndividualDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: ViasName=None, personal_data: ViasPersonalData=None):
        """IndividualDetails - a model defined in OpenAPI

        :param name: The name of this IndividualDetails.
        :param personal_data: The personal_data of this IndividualDetails.
        """
        self.openapi_types = {
            'name': ViasName,
            'personal_data': ViasPersonalData
        }

        self.attribute_map = {
            'name': 'name',
            'personal_data': 'personalData'
        }

        self._name = name
        self._personal_data = personal_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IndividualDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IndividualDetails of this IndividualDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this IndividualDetails.

        The name of the individual. >Make sure your account holder registers using the name shown on their Photo ID.

        :return: The name of this IndividualDetails.
        :rtype: ViasName
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IndividualDetails.

        The name of the individual. >Make sure your account holder registers using the name shown on their Photo ID.

        :param name: The name of this IndividualDetails.
        :type name: ViasName
        """

        self._name = name

    @property
    def personal_data(self):
        """Gets the personal_data of this IndividualDetails.

        Personal information of the individual.

        :return: The personal_data of this IndividualDetails.
        :rtype: ViasPersonalData
        """
        return self._personal_data

    @personal_data.setter
    def personal_data(self, personal_data):
        """Sets the personal_data of this IndividualDetails.

        Personal information of the individual.

        :param personal_data: The personal_data of this IndividualDetails.
        :type personal_data: ViasPersonalData
        """

        self._personal_data = personal_data
