/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountHolderDetails.h
 *
 * 
 */

#ifndef OAIAccountHolderDetails_H
#define OAIAccountHolderDetails_H

#include <QJsonObject>

#include "OAIBankAccountDetail.h"
#include "OAIBusinessDetails.h"
#include "OAIIndividualDetails.h"
#include "OAIPayoutMethod.h"
#include "OAIStoreDetail.h"
#include "OAIViasAddress.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIViasAddress;
class OAIBankAccountDetail;
class OAIBusinessDetails;
class OAIIndividualDetails;
class OAIPayoutMethod;
class OAIStoreDetail;

class OAIAccountHolderDetails : public OAIObject {
public:
    OAIAccountHolderDetails();
    OAIAccountHolderDetails(QString json);
    ~OAIAccountHolderDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIViasAddress getAddress() const;
    void setAddress(const OAIViasAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QList<OAIBankAccountDetail> getBankAccountDetails() const;
    void setBankAccountDetails(const QList<OAIBankAccountDetail> &bank_account_details);
    bool is_bank_account_details_Set() const;
    bool is_bank_account_details_Valid() const;

    QString getBankAggregatorDataReference() const;
    void setBankAggregatorDataReference(const QString &bank_aggregator_data_reference);
    bool is_bank_aggregator_data_reference_Set() const;
    bool is_bank_aggregator_data_reference_Valid() const;

    OAIBusinessDetails getBusinessDetails() const;
    void setBusinessDetails(const OAIBusinessDetails &business_details);
    bool is_business_details_Set() const;
    bool is_business_details_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFullPhoneNumber() const;
    void setFullPhoneNumber(const QString &full_phone_number);
    bool is_full_phone_number_Set() const;
    bool is_full_phone_number_Valid() const;

    OAIIndividualDetails getIndividualDetails() const;
    void setIndividualDetails(const OAIIndividualDetails &individual_details);
    bool is_individual_details_Set() const;
    bool is_individual_details_Valid() const;

    QString getLastReviewDate() const;
    void setLastReviewDate(const QString &last_review_date);
    bool is_last_review_date_Set() const;
    bool is_last_review_date_Valid() const;

    QString getMerchantCategoryCode() const;
    void setMerchantCategoryCode(const QString &merchant_category_code);
    bool is_merchant_category_code_Set() const;
    bool is_merchant_category_code_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QList<OAIPayoutMethod> getPayoutMethods() const;
    void setPayoutMethods(const QList<OAIPayoutMethod> &payout_methods);
    bool is_payout_methods_Set() const;
    bool is_payout_methods_Valid() const;

    OAIViasAddress getPrincipalBusinessAddress() const;
    void setPrincipalBusinessAddress(const OAIViasAddress &principal_business_address);
    bool is_principal_business_address_Set() const;
    bool is_principal_business_address_Valid() const;

    QList<OAIStoreDetail> getStoreDetails() const;
    void setStoreDetails(const QList<OAIStoreDetail> &store_details);
    bool is_store_details_Set() const;
    bool is_store_details_Valid() const;

    QString getWebAddress() const;
    void setWebAddress(const QString &web_address);
    bool is_web_address_Set() const;
    bool is_web_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIViasAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QList<OAIBankAccountDetail> m_bank_account_details;
    bool m_bank_account_details_isSet;
    bool m_bank_account_details_isValid;

    QString m_bank_aggregator_data_reference;
    bool m_bank_aggregator_data_reference_isSet;
    bool m_bank_aggregator_data_reference_isValid;

    OAIBusinessDetails m_business_details;
    bool m_business_details_isSet;
    bool m_business_details_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_full_phone_number;
    bool m_full_phone_number_isSet;
    bool m_full_phone_number_isValid;

    OAIIndividualDetails m_individual_details;
    bool m_individual_details_isSet;
    bool m_individual_details_isValid;

    QString m_last_review_date;
    bool m_last_review_date_isSet;
    bool m_last_review_date_isValid;

    QString m_merchant_category_code;
    bool m_merchant_category_code_isSet;
    bool m_merchant_category_code_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QList<OAIPayoutMethod> m_payout_methods;
    bool m_payout_methods_isSet;
    bool m_payout_methods_isValid;

    OAIViasAddress m_principal_business_address;
    bool m_principal_business_address_isSet;
    bool m_principal_business_address_isValid;

    QList<OAIStoreDetail> m_store_details;
    bool m_store_details_isSet;
    bool m_store_details_isValid;

    QString m_web_address;
    bool m_web_address_isSet;
    bool m_web_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountHolderDetails)

#endif // OAIAccountHolderDetails_H
