/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountHolderStatusChangeNotificationContent.h
 *
 * 
 */

#ifndef OAIAccountHolderStatusChangeNotificationContent_H
#define OAIAccountHolderStatusChangeNotificationContent_H

#include <QJsonObject>

#include "OAIAccountHolderStatus.h"
#include "OAIErrorFieldType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErrorFieldType;
class OAIAccountHolderStatus;

class OAIAccountHolderStatusChangeNotificationContent : public OAIObject {
public:
    OAIAccountHolderStatusChangeNotificationContent();
    OAIAccountHolderStatusChangeNotificationContent(QString json);
    ~OAIAccountHolderStatusChangeNotificationContent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountHolderCode() const;
    void setAccountHolderCode(const QString &account_holder_code);
    bool is_account_holder_code_Set() const;
    bool is_account_holder_code_Valid() const;

    QList<OAIErrorFieldType> getInvalidFields() const;
    void setInvalidFields(const QList<OAIErrorFieldType> &invalid_fields);
    bool is_invalid_fields_Set() const;
    bool is_invalid_fields_Valid() const;

    OAIAccountHolderStatus getNewStatus() const;
    void setNewStatus(const OAIAccountHolderStatus &new_status);
    bool is_new_status_Set() const;
    bool is_new_status_Valid() const;

    OAIAccountHolderStatus getOldStatus() const;
    void setOldStatus(const OAIAccountHolderStatus &old_status);
    bool is_old_status_Set() const;
    bool is_old_status_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_holder_code;
    bool m_account_holder_code_isSet;
    bool m_account_holder_code_isValid;

    QList<OAIErrorFieldType> m_invalid_fields;
    bool m_invalid_fields_isSet;
    bool m_invalid_fields_isValid;

    OAIAccountHolderStatus m_new_status;
    bool m_new_status_isSet;
    bool m_new_status_isValid;

    OAIAccountHolderStatus m_old_status;
    bool m_old_status_isSet;
    bool m_old_status_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountHolderStatusChangeNotificationContent)

#endif // OAIAccountHolderStatusChangeNotificationContent_H
