/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountPayoutState.h
 *
 * 
 */

#ifndef OAIAccountPayoutState_H
#define OAIAccountPayoutState_H

#include <QJsonObject>

#include "OAIAmount.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmount;

class OAIAccountPayoutState : public OAIObject {
public:
    OAIAccountPayoutState();
    OAIAccountPayoutState(QString json);
    ~OAIAccountPayoutState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowPayout() const;
    void setAllowPayout(const bool &allow_payout);
    bool is_allow_payout_Set() const;
    bool is_allow_payout_Valid() const;

    QString getDisableReason() const;
    void setDisableReason(const QString &disable_reason);
    bool is_disable_reason_Set() const;
    bool is_disable_reason_Valid() const;

    bool isDisabled() const;
    void setDisabled(const bool &disabled);
    bool is_disabled_Set() const;
    bool is_disabled_Valid() const;

    QString getNotAllowedReason() const;
    void setNotAllowedReason(const QString &not_allowed_reason);
    bool is_not_allowed_reason_Set() const;
    bool is_not_allowed_reason_Valid() const;

    OAIAmount getPayoutLimit() const;
    void setPayoutLimit(const OAIAmount &payout_limit);
    bool is_payout_limit_Set() const;
    bool is_payout_limit_Valid() const;

    qint32 getTierNumber() const;
    void setTierNumber(const qint32 &tier_number);
    bool is_tier_number_Set() const;
    bool is_tier_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_payout;
    bool m_allow_payout_isSet;
    bool m_allow_payout_isValid;

    QString m_disable_reason;
    bool m_disable_reason_isSet;
    bool m_disable_reason_isValid;

    bool m_disabled;
    bool m_disabled_isSet;
    bool m_disabled_isValid;

    QString m_not_allowed_reason;
    bool m_not_allowed_reason_isSet;
    bool m_not_allowed_reason_isValid;

    OAIAmount m_payout_limit;
    bool m_payout_limit_isSet;
    bool m_payout_limit_isValid;

    qint32 m_tier_number;
    bool m_tier_number_isSet;
    bool m_tier_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountPayoutState)

#endif // OAIAccountPayoutState_H
