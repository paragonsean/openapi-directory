/**
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKYCVerificationResult.h
 *
 * 
 */

#ifndef OAIKYCVerificationResult_H
#define OAIKYCVerificationResult_H

#include <QJsonObject>

#include "OAIKYCBankAccountCheckResult.h"
#include "OAIKYCCardCheckResult.h"
#include "OAIKYCCheckResult.h"
#include "OAIKYCShareholderCheckResult.h"
#include "OAIKYCSignatoryCheckResult.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKYCCheckResult;
class OAIKYCBankAccountCheckResult;
class OAIKYCCardCheckResult;
class OAIKYCShareholderCheckResult;
class OAIKYCSignatoryCheckResult;

class OAIKYCVerificationResult : public OAIObject {
public:
    OAIKYCVerificationResult();
    OAIKYCVerificationResult(QString json);
    ~OAIKYCVerificationResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIKYCCheckResult getAccountHolder() const;
    void setAccountHolder(const OAIKYCCheckResult &account_holder);
    bool is_account_holder_Set() const;
    bool is_account_holder_Valid() const;

    QList<OAIKYCBankAccountCheckResult> getBankAccounts() const;
    void setBankAccounts(const QList<OAIKYCBankAccountCheckResult> &bank_accounts);
    bool is_bank_accounts_Set() const;
    bool is_bank_accounts_Valid() const;

    QList<OAIKYCCardCheckResult> getCards() const;
    void setCards(const QList<OAIKYCCardCheckResult> &cards);
    bool is_cards_Set() const;
    bool is_cards_Valid() const;

    QList<OAIKYCShareholderCheckResult> getShareholders() const;
    void setShareholders(const QList<OAIKYCShareholderCheckResult> &shareholders);
    bool is_shareholders_Set() const;
    bool is_shareholders_Valid() const;

    QList<OAIKYCSignatoryCheckResult> getSignatories() const;
    void setSignatories(const QList<OAIKYCSignatoryCheckResult> &signatories);
    bool is_signatories_Set() const;
    bool is_signatories_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIKYCCheckResult m_account_holder;
    bool m_account_holder_isSet;
    bool m_account_holder_isValid;

    QList<OAIKYCBankAccountCheckResult> m_bank_accounts;
    bool m_bank_accounts_isSet;
    bool m_bank_accounts_isValid;

    QList<OAIKYCCardCheckResult> m_cards;
    bool m_cards_isSet;
    bool m_cards_isValid;

    QList<OAIKYCShareholderCheckResult> m_shareholders;
    bool m_shareholders_isSet;
    bool m_shareholders_isValid;

    QList<OAIKYCSignatoryCheckResult> m_signatories;
    bool m_signatories_isSet;
    bool m_signatories_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKYCVerificationResult)

#endif // OAIKYCVerificationResult_H
