/*
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountHolderCreateNotification;
import org.openapitools.client.model.AccountHolderStatusChangeNotification;
import org.openapitools.client.model.AccountHolderStoreStatusChangeNotification;
import org.openapitools.client.model.AccountHolderUpcomingDeadlineNotification;
import org.openapitools.client.model.AccountHolderUpdateNotification;
import org.openapitools.client.model.AccountHolderVerificationNotification;
import org.openapitools.client.model.NotificationResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountHoldersApi
 */
@Disabled
public class AccountHoldersApiTest {

    private final AccountHoldersApi api = new AccountHoldersApi();

    /**
     * Account holder created
     *
     * Adyen sends this webhook when [an account holder is created](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postACCOUNTHOLDERCREATEDTest() throws ApiException {
        AccountHolderCreateNotification accountHolderCreateNotification = null;
        NotificationResponse response = api.postACCOUNTHOLDERCREATED(accountHolderCreateNotification);
        // TODO: test validations
    }

    /**
     * Account holder status changed
     *
     * Adyen sends this webhook when [the status of an account holder is changed](https://docs.adyen.com/api-explorer/#/Account/latest/post/updateAccountHolderState).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postACCOUNTHOLDERSTATUSCHANGETest() throws ApiException {
        AccountHolderStatusChangeNotification accountHolderStatusChangeNotification = null;
        NotificationResponse response = api.postACCOUNTHOLDERSTATUSCHANGE(accountHolderStatusChangeNotification);
        // TODO: test validations
    }

    /**
     * Store status changed
     *
     * Adyen sends this webhook when [the status of a store](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__reqParam_accountHolderDetails-storeDetails-status) associated with an account holder is changed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postACCOUNTHOLDERSTORESTATUSCHANGETest() throws ApiException {
        AccountHolderStoreStatusChangeNotification accountHolderStoreStatusChangeNotification = null;
        NotificationResponse response = api.postACCOUNTHOLDERSTORESTATUSCHANGE(accountHolderStoreStatusChangeNotification);
        // TODO: test validations
    }

    /**
     * Upcoming deadline
     *
     * Adyen sends this notification when an account holder&#39;s deadline to fulfill the requirements of a specific event is coming up.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postACCOUNTHOLDERUPCOMINGDEADLINETest() throws ApiException {
        AccountHolderUpcomingDeadlineNotification accountHolderUpcomingDeadlineNotification = null;
        NotificationResponse response = api.postACCOUNTHOLDERUPCOMINGDEADLINE(accountHolderUpcomingDeadlineNotification);
        // TODO: test validations
    }

    /**
     * Account holder updated
     *
     * Adyen sends this webhook when [an account holder is updated](https://docs.adyen.com/api-explorer/#/Account/latest/post/updateAccountHolder).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postACCOUNTHOLDERUPDATEDTest() throws ApiException {
        AccountHolderUpdateNotification accountHolderUpdateNotification = null;
        NotificationResponse response = api.postACCOUNTHOLDERUPDATED(accountHolderUpdateNotification);
        // TODO: test validations
    }

    /**
     * Verification results received
     *
     * Adyen sends this webhook when verification results are available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postACCOUNTHOLDERVERIFICATIONTest() throws ApiException {
        AccountHolderVerificationNotification accountHolderVerificationNotification = null;
        NotificationResponse response = api.postACCOUNTHOLDERVERIFICATION(accountHolderVerificationNotification);
        // TODO: test validations
    }

}
