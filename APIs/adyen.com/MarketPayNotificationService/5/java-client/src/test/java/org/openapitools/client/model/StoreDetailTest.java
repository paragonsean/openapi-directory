/*
 * Classic Platforms - Notifications
 * This API is used for the classic integration. If you are just starting your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Notification API sends notifications to the endpoints specified in a given subscription.  Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications).
 *
 * The version of the OpenAPI document: 5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ViasAddress;
import org.openapitools.client.model.ViasPhoneNumber;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for StoreDetail
 */
public class StoreDetailTest {
    private final StoreDetail model = new StoreDetail();

    /**
     * Model tests for StoreDetail
     */
    @Test
    public void testStoreDetail() {
        // TODO: test StoreDetail
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'fullPhoneNumber'
     */
    @Test
    public void fullPhoneNumberTest() {
        // TODO: test fullPhoneNumber
    }

    /**
     * Test the property 'logo'
     */
    @Test
    public void logoTest() {
        // TODO: test logo
    }

    /**
     * Test the property 'merchantAccount'
     */
    @Test
    public void merchantAccountTest() {
        // TODO: test merchantAccount
    }

    /**
     * Test the property 'merchantCategoryCode'
     */
    @Test
    public void merchantCategoryCodeTest() {
        // TODO: test merchantCategoryCode
    }

    /**
     * Test the property 'merchantHouseNumber'
     */
    @Test
    public void merchantHouseNumberTest() {
        // TODO: test merchantHouseNumber
    }

    /**
     * Test the property 'phoneNumber'
     */
    @Test
    public void phoneNumberTest() {
        // TODO: test phoneNumber
    }

    /**
     * Test the property 'shopperInteraction'
     */
    @Test
    public void shopperInteractionTest() {
        // TODO: test shopperInteraction
    }

    /**
     * Test the property 'splitConfigurationUUID'
     */
    @Test
    public void splitConfigurationUUIDTest() {
        // TODO: test splitConfigurationUUID
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'store'
     */
    @Test
    public void storeTest() {
        // TODO: test store
    }

    /**
     * Test the property 'storeName'
     */
    @Test
    public void storeNameTest() {
        // TODO: test storeName
    }

    /**
     * Test the property 'storeReference'
     */
    @Test
    public void storeReferenceTest() {
        // TODO: test storeReference
    }

    /**
     * Test the property 'virtualAccount'
     */
    @Test
    public void virtualAccountTest() {
        // TODO: test virtualAccount
    }

    /**
     * Test the property 'webAddress'
     */
    @Test
    public void webAddressTest() {
        // TODO: test webAddress
    }

}
