/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICheckData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICheckData::OAICheckData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICheckData::OAICheckData() {
    this->initializeModel();
}

OAICheckData::~OAICheckData() {}

void OAICheckData::initializeModel() {

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_bank_id_isSet = false;
    m_bank_id_isValid = false;

    m_check_card_number_isSet = false;
    m_check_card_number_isValid = false;

    m_check_number_isSet = false;
    m_check_number_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_track_data_isSet = false;
    m_track_data_isValid = false;

    m_type_code_isSet = false;
    m_type_code_isValid = false;
}

void OAICheckData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICheckData::fromJsonObject(QJsonObject json) {

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("AccountNumber")]);
    m_account_number_isSet = !json[QString("AccountNumber")].isNull() && m_account_number_isValid;

    m_bank_id_isValid = ::OpenAPI::fromJsonValue(m_bank_id, json[QString("BankID")]);
    m_bank_id_isSet = !json[QString("BankID")].isNull() && m_bank_id_isValid;

    m_check_card_number_isValid = ::OpenAPI::fromJsonValue(m_check_card_number, json[QString("CheckCardNumber")]);
    m_check_card_number_isSet = !json[QString("CheckCardNumber")].isNull() && m_check_card_number_isValid;

    m_check_number_isValid = ::OpenAPI::fromJsonValue(m_check_number, json[QString("CheckNumber")]);
    m_check_number_isSet = !json[QString("CheckNumber")].isNull() && m_check_number_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("Country")]);
    m_country_isSet = !json[QString("Country")].isNull() && m_country_isValid;

    m_track_data_isValid = ::OpenAPI::fromJsonValue(m_track_data, json[QString("TrackData")]);
    m_track_data_isSet = !json[QString("TrackData")].isNull() && m_track_data_isValid;

    m_type_code_isValid = ::OpenAPI::fromJsonValue(m_type_code, json[QString("TypeCode")]);
    m_type_code_isSet = !json[QString("TypeCode")].isNull() && m_type_code_isValid;
}

QString OAICheckData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICheckData::asJsonObject() const {
    QJsonObject obj;
    if (m_account_number_isSet) {
        obj.insert(QString("AccountNumber"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_bank_id_isSet) {
        obj.insert(QString("BankID"), ::OpenAPI::toJsonValue(m_bank_id));
    }
    if (m_check_card_number_isSet) {
        obj.insert(QString("CheckCardNumber"), ::OpenAPI::toJsonValue(m_check_card_number));
    }
    if (m_check_number_isSet) {
        obj.insert(QString("CheckNumber"), ::OpenAPI::toJsonValue(m_check_number));
    }
    if (m_country_isSet) {
        obj.insert(QString("Country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_track_data.isSet()) {
        obj.insert(QString("TrackData"), ::OpenAPI::toJsonValue(m_track_data));
    }
    if (m_type_code.isSet()) {
        obj.insert(QString("TypeCode"), ::OpenAPI::toJsonValue(m_type_code));
    }
    return obj;
}

QString OAICheckData::getAccountNumber() const {
    return m_account_number;
}
void OAICheckData::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAICheckData::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAICheckData::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QString OAICheckData::getBankId() const {
    return m_bank_id;
}
void OAICheckData::setBankId(const QString &bank_id) {
    m_bank_id = bank_id;
    m_bank_id_isSet = true;
}

bool OAICheckData::is_bank_id_Set() const{
    return m_bank_id_isSet;
}

bool OAICheckData::is_bank_id_Valid() const{
    return m_bank_id_isValid;
}

QString OAICheckData::getCheckCardNumber() const {
    return m_check_card_number;
}
void OAICheckData::setCheckCardNumber(const QString &check_card_number) {
    m_check_card_number = check_card_number;
    m_check_card_number_isSet = true;
}

bool OAICheckData::is_check_card_number_Set() const{
    return m_check_card_number_isSet;
}

bool OAICheckData::is_check_card_number_Valid() const{
    return m_check_card_number_isValid;
}

QString OAICheckData::getCheckNumber() const {
    return m_check_number;
}
void OAICheckData::setCheckNumber(const QString &check_number) {
    m_check_number = check_number;
    m_check_number_isSet = true;
}

bool OAICheckData::is_check_number_Set() const{
    return m_check_number_isSet;
}

bool OAICheckData::is_check_number_Valid() const{
    return m_check_number_isValid;
}

QString OAICheckData::getCountry() const {
    return m_country;
}
void OAICheckData::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAICheckData::is_country_Set() const{
    return m_country_isSet;
}

bool OAICheckData::is_country_Valid() const{
    return m_country_isValid;
}

OAITrackData OAICheckData::getTrackData() const {
    return m_track_data;
}
void OAICheckData::setTrackData(const OAITrackData &track_data) {
    m_track_data = track_data;
    m_track_data_isSet = true;
}

bool OAICheckData::is_track_data_Set() const{
    return m_track_data_isSet;
}

bool OAICheckData::is_track_data_Valid() const{
    return m_track_data_isValid;
}

OAITypeCode OAICheckData::getTypeCode() const {
    return m_type_code;
}
void OAICheckData::setTypeCode(const OAITypeCode &type_code) {
    m_type_code = type_code;
    m_type_code_isSet = true;
}

bool OAICheckData::is_type_code_Set() const{
    return m_type_code_isSet;
}

bool OAICheckData::is_type_code_Valid() const{
    return m_type_code_isValid;
}

bool OAICheckData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_check_card_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_check_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_track_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_code.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICheckData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
