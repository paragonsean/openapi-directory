/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoyaltyResult.h
 *
 * In the Message Response, the result of each loyalty brand transaction. Data related to the result of a processed loyalty transaction.
 */

#ifndef OAILoyaltyResult_H
#define OAILoyaltyResult_H

#include <QJsonObject>

#include "OAILoyaltyAccount.h"
#include "OAILoyaltyAcquirerData.h"
#include "OAILoyaltyAmount.h"
#include "OAIRebates.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILoyaltyAccount;
class OAILoyaltyAcquirerData;
class OAILoyaltyAmount;
class OAIRebates;

class OAILoyaltyResult : public OAIObject {
public:
    OAILoyaltyResult();
    OAILoyaltyResult(QString json);
    ~OAILoyaltyResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCurrentBalance() const;
    void setCurrentBalance(const double &current_balance);
    bool is_current_balance_Set() const;
    bool is_current_balance_Valid() const;

    OAILoyaltyAccount getLoyaltyAccount() const;
    void setLoyaltyAccount(const OAILoyaltyAccount &loyalty_account);
    bool is_loyalty_account_Set() const;
    bool is_loyalty_account_Valid() const;

    OAILoyaltyAcquirerData getLoyaltyAcquirerData() const;
    void setLoyaltyAcquirerData(const OAILoyaltyAcquirerData &loyalty_acquirer_data);
    bool is_loyalty_acquirer_data_Set() const;
    bool is_loyalty_acquirer_data_Valid() const;

    OAILoyaltyAmount getLoyaltyAmount() const;
    void setLoyaltyAmount(const OAILoyaltyAmount &loyalty_amount);
    bool is_loyalty_amount_Set() const;
    bool is_loyalty_amount_Valid() const;

    OAIRebates getRebates() const;
    void setRebates(const OAIRebates &rebates);
    bool is_rebates_Set() const;
    bool is_rebates_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_current_balance;
    bool m_current_balance_isSet;
    bool m_current_balance_isValid;

    OAILoyaltyAccount m_loyalty_account;
    bool m_loyalty_account_isSet;
    bool m_loyalty_account_isValid;

    OAILoyaltyAcquirerData m_loyalty_acquirer_data;
    bool m_loyalty_acquirer_data_isSet;
    bool m_loyalty_acquirer_data_isValid;

    OAILoyaltyAmount m_loyalty_amount;
    bool m_loyalty_amount_isSet;
    bool m_loyalty_amount_isValid;

    OAIRebates m_rebates;
    bool m_rebates_isSet;
    bool m_rebates_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoyaltyResult)

#endif // OAILoyaltyResult_H
