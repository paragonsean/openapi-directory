/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutputFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutputFormat::OAIOutputFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutputFormat::OAIOutputFormat() {
    this->initializeModel();
}

OAIOutputFormat::~OAIOutputFormat() {}

void OAIOutputFormat::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOutputFormat::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOutputFormat::fromJson(QString jsonString) {
    
    if ( jsonString.compare("BarCode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOutputFormat::BARCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MessageRef", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOutputFormat::MESSAGEREF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Text", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOutputFormat::TEXT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XHTML", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOutputFormat::XHTML;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOutputFormat::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOutputFormat::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOutputFormat::BARCODE:
            val = "BarCode";
            break;
        case eOAIOutputFormat::MESSAGEREF:
            val = "MessageRef";
            break;
        case eOAIOutputFormat::TEXT:
            val = "Text";
            break;
        case eOAIOutputFormat::XHTML:
            val = "XHTML";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOutputFormat::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOutputFormat::eOAIOutputFormat OAIOutputFormat::getValue() const {
    return m_value;
}

void OAIOutputFormat::setValue(const OAIOutputFormat::eOAIOutputFormat& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOutputFormat::isSet() const {
    
    return m_value_isSet;
}

bool OAIOutputFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
