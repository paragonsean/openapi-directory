/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputUpdate.h
 *
 * Definition: Content of the Input Update message. : It conveys     update of the display of an Input request in progress.
 */

#ifndef OAIInputUpdate_H
#define OAIInputUpdate_H

#include <QJsonObject>

#include "OAIMenuEntry.h"
#include "OAIMessageReference.h"
#include "OAIOutputContent.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMenuEntry;
class OAIMessageReference;
class OAIOutputContent;

class OAIInputUpdate : public OAIObject {
public:
    OAIInputUpdate();
    OAIInputUpdate(QString json);
    ~OAIInputUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxDecimalLength() const;
    void setMaxDecimalLength(const qint32 &max_decimal_length);
    bool is_max_decimal_length_Set() const;
    bool is_max_decimal_length_Valid() const;

    qint32 getMaxLength() const;
    void setMaxLength(const qint32 &max_length);
    bool is_max_length_Set() const;
    bool is_max_length_Valid() const;

    QList<OAIMenuEntry> getMenuEntry() const;
    void setMenuEntry(const QList<OAIMenuEntry> &menu_entry);
    bool is_menu_entry_Set() const;
    bool is_menu_entry_Valid() const;

    OAIMessageReference getMessageReference() const;
    void setMessageReference(const OAIMessageReference &message_reference);
    bool is_message_reference_Set() const;
    bool is_message_reference_Valid() const;

    qint32 getMinLength() const;
    void setMinLength(const qint32 &min_length);
    bool is_min_length_Set() const;
    bool is_min_length_Valid() const;

    OAIOutputContent getOutputContent() const;
    void setOutputContent(const OAIOutputContent &output_content);
    bool is_output_content_Set() const;
    bool is_output_content_Valid() const;

    QString getOutputSignature() const;
    void setOutputSignature(const QString &output_signature);
    bool is_output_signature_Set() const;
    bool is_output_signature_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_decimal_length;
    bool m_max_decimal_length_isSet;
    bool m_max_decimal_length_isValid;

    qint32 m_max_length;
    bool m_max_length_isSet;
    bool m_max_length_isValid;

    QList<OAIMenuEntry> m_menu_entry;
    bool m_menu_entry_isSet;
    bool m_menu_entry_isValid;

    OAIMessageReference m_message_reference;
    bool m_message_reference_isSet;
    bool m_message_reference_isValid;

    qint32 m_min_length;
    bool m_min_length_isSet;
    bool m_min_length_isValid;

    OAIOutputContent m_output_content;
    bool m_output_content_isSet;
    bool m_output_content_isValid;

    QString m_output_signature;
    bool m_output_signature_isSet;
    bool m_output_signature_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputUpdate)

#endif // OAIInputUpdate_H
