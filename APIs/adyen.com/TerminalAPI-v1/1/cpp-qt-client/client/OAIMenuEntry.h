/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMenuEntry.h
 *
 * It conveys message text and parameters of the menu entry. This output data could be only provided for an input command, in order to choose an entryof the menu. An entryof the menu to present to the Cashier.
 */

#ifndef OAIMenuEntry_H
#define OAIMenuEntry_H

#include <QJsonObject>

#include "OAIMenuEntryTag.h"
#include "OAIOutputFormat.h"
#include "OAIOutputText.h"
#include "OAIPredefinedContent.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOutputText;
class OAIPredefinedContent;

class OAIMenuEntry : public OAIObject {
public:
    OAIMenuEntry();
    OAIMenuEntry(QString json);
    ~OAIMenuEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDefaultSelectedFlag() const;
    void setDefaultSelectedFlag(const bool &default_selected_flag);
    bool is_default_selected_flag_Set() const;
    bool is_default_selected_flag_Valid() const;

    OAIMenuEntryTag getMenuEntryTag() const;
    void setMenuEntryTag(const OAIMenuEntryTag &menu_entry_tag);
    bool is_menu_entry_tag_Set() const;
    bool is_menu_entry_tag_Valid() const;

    OAIOutputFormat getOutputFormat() const;
    void setOutputFormat(const OAIOutputFormat &output_format);
    bool is_output_format_Set() const;
    bool is_output_format_Valid() const;

    QList<OAIOutputText> getOutputText() const;
    void setOutputText(const QList<OAIOutputText> &output_text);
    bool is_output_text_Set() const;
    bool is_output_text_Valid() const;

    QString getOutputXhtml() const;
    void setOutputXhtml(const QString &output_xhtml);
    bool is_output_xhtml_Set() const;
    bool is_output_xhtml_Valid() const;

    OAIPredefinedContent getPredefinedContent() const;
    void setPredefinedContent(const OAIPredefinedContent &predefined_content);
    bool is_predefined_content_Set() const;
    bool is_predefined_content_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_default_selected_flag;
    bool m_default_selected_flag_isSet;
    bool m_default_selected_flag_isValid;

    OAIMenuEntryTag m_menu_entry_tag;
    bool m_menu_entry_tag_isSet;
    bool m_menu_entry_tag_isValid;

    OAIOutputFormat m_output_format;
    bool m_output_format_isSet;
    bool m_output_format_isValid;

    QList<OAIOutputText> m_output_text;
    bool m_output_text_isSet;
    bool m_output_text_isValid;

    QString m_output_xhtml;
    bool m_output_xhtml_isSet;
    bool m_output_xhtml_isValid;

    OAIPredefinedContent m_predefined_content;
    bool m_predefined_content_isSet;
    bool m_predefined_content_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMenuEntry)

#endif // OAIMenuEntry_H
