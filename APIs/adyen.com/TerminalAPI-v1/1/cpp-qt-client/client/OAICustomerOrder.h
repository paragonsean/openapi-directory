/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomerOrder.h
 *
 * Customer order attached to a customer, recorded in the POI system.  Allows the management of customer orders by the POI, for instance in a multi-channel or a click and collect sale transaction.
 */

#ifndef OAICustomerOrder_H
#define OAICustomerOrder_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICustomerOrder : public OAIObject {
public:
    OAICustomerOrder();
    OAICustomerOrder(QString json);
    ~OAICustomerOrder() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessedBy() const;
    void setAccessedBy(const QString &accessed_by);
    bool is_accessed_by_Set() const;
    bool is_accessed_by_Valid() const;

    QString getAdditionalInformation() const;
    void setAdditionalInformation(const QString &additional_information);
    bool is_additional_information_Set() const;
    bool is_additional_information_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    double getCurrentAmount() const;
    void setCurrentAmount(const double &current_amount);
    bool is_current_amount_Set() const;
    bool is_current_amount_Valid() const;

    QString getCustomerOrderId() const;
    void setCustomerOrderId(const QString &customer_order_id);
    bool is_customer_order_id_Set() const;
    bool is_customer_order_id_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    double getForecastedAmount() const;
    void setForecastedAmount(const double &forecasted_amount);
    bool is_forecasted_amount_Set() const;
    bool is_forecasted_amount_Valid() const;

    bool isOpenOrderState() const;
    void setOpenOrderState(const bool &open_order_state);
    bool is_open_order_state_Set() const;
    bool is_open_order_state_Valid() const;

    QString getSaleReferenceId() const;
    void setSaleReferenceId(const QString &sale_reference_id);
    bool is_sale_reference_id_Set() const;
    bool is_sale_reference_id_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accessed_by;
    bool m_accessed_by_isSet;
    bool m_accessed_by_isValid;

    QString m_additional_information;
    bool m_additional_information_isSet;
    bool m_additional_information_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    double m_current_amount;
    bool m_current_amount_isSet;
    bool m_current_amount_isValid;

    QString m_customer_order_id;
    bool m_customer_order_id_isSet;
    bool m_customer_order_id_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    double m_forecasted_amount;
    bool m_forecasted_amount_isSet;
    bool m_forecasted_amount_isValid;

    bool m_open_order_state;
    bool m_open_order_state_isSet;
    bool m_open_order_state_isValid;

    QString m_sale_reference_id;
    bool m_sale_reference_id_isSet;
    bool m_sale_reference_id_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomerOrder)

#endif // OAICustomerOrder_H
