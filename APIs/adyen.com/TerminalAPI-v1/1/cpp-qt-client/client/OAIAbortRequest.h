/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAbortRequest.h
 *
 * It conveys Information requested for identification of the message request carrying the transaction to abort. A message to display on the CustomerError Device could be sent by the Sale System (DisplayOutput). Body of the Abort Request message.
 */

#ifndef OAIAbortRequest_H
#define OAIAbortRequest_H

#include <QJsonObject>

#include "OAIDisplayOutput.h"
#include "OAIMessageReference.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDisplayOutput;
class OAIMessageReference;

class OAIAbortRequest : public OAIObject {
public:
    OAIAbortRequest();
    OAIAbortRequest(QString json);
    ~OAIAbortRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAbortReason() const;
    void setAbortReason(const QString &abort_reason);
    bool is_abort_reason_Set() const;
    bool is_abort_reason_Valid() const;

    OAIDisplayOutput getDisplayOutput() const;
    void setDisplayOutput(const OAIDisplayOutput &display_output);
    bool is_display_output_Set() const;
    bool is_display_output_Valid() const;

    OAIMessageReference getMessageReference() const;
    void setMessageReference(const OAIMessageReference &message_reference);
    bool is_message_reference_Set() const;
    bool is_message_reference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_abort_reason;
    bool m_abort_reason_isSet;
    bool m_abort_reason_isValid;

    OAIDisplayOutput m_display_output;
    bool m_display_output_isSet;
    bool m_display_output_isValid;

    OAIMessageReference m_message_reference;
    bool m_message_reference_isSet;
    bool m_message_reference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAbortRequest)

#endif // OAIAbortRequest_H
