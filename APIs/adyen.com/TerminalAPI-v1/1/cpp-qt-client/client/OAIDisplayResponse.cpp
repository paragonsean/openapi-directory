/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDisplayResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDisplayResponse::OAIDisplayResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDisplayResponse::OAIDisplayResponse() {
    this->initializeModel();
}

OAIDisplayResponse::~OAIDisplayResponse() {}

void OAIDisplayResponse::initializeModel() {

    m_output_result_isSet = false;
    m_output_result_isValid = false;
}

void OAIDisplayResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDisplayResponse::fromJsonObject(QJsonObject json) {

    m_output_result_isValid = ::OpenAPI::fromJsonValue(m_output_result, json[QString("OutputResult")]);
    m_output_result_isSet = !json[QString("OutputResult")].isNull() && m_output_result_isValid;
}

QString OAIDisplayResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDisplayResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_output_result.size() > 0) {
        obj.insert(QString("OutputResult"), ::OpenAPI::toJsonValue(m_output_result));
    }
    return obj;
}

QList<OAIOutputResult> OAIDisplayResponse::getOutputResult() const {
    return m_output_result;
}
void OAIDisplayResponse::setOutputResult(const QList<OAIOutputResult> &output_result) {
    m_output_result = output_result;
    m_output_result_isSet = true;
}

bool OAIDisplayResponse::is_output_result_Set() const{
    return m_output_result_isSet;
}

bool OAIDisplayResponse::is_output_result_Valid() const{
    return m_output_result_isValid;
}

bool OAIDisplayResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_result.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDisplayResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_output_result_isValid && true;
}

} // namespace OpenAPI
