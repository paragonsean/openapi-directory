/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColor::OAIColor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColor::OAIColor() {
    this->initializeModel();
}

OAIColor::~OAIColor() {}

void OAIColor::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIColor::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIColor::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Black", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColor::BLACK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Blue", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColor::BLUE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Cyan", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColor::CYAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Green", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColor::GREEN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Magenta", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColor::MAGENTA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Red", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColor::RED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("White", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColor::WHITE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Yellow", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColor::YELLOW;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIColor::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIColor::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIColor::BLACK:
            val = "Black";
            break;
        case eOAIColor::BLUE:
            val = "Blue";
            break;
        case eOAIColor::CYAN:
            val = "Cyan";
            break;
        case eOAIColor::GREEN:
            val = "Green";
            break;
        case eOAIColor::MAGENTA:
            val = "Magenta";
            break;
        case eOAIColor::RED:
            val = "Red";
            break;
        case eOAIColor::WHITE:
            val = "White";
            break;
        case eOAIColor::YELLOW:
            val = "Yellow";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIColor::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIColor::eOAIColor OAIColor::getValue() const {
    return m_value;
}

void OAIColor::setValue(const OAIColor::eOAIColor& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIColor::isSet() const {
    
    return m_value_isSet;
}

bool OAIColor::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
