/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIICCResetData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIICCResetData::OAIICCResetData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIICCResetData::OAIICCResetData() {
    this->initializeModel();
}

OAIICCResetData::~OAIICCResetData() {}

void OAIICCResetData::initializeModel() {

    m_atr_value_isSet = false;
    m_atr_value_isValid = false;

    m_card_status_words_isSet = false;
    m_card_status_words_isValid = false;
}

void OAIICCResetData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIICCResetData::fromJsonObject(QJsonObject json) {

    m_atr_value_isValid = ::OpenAPI::fromJsonValue(m_atr_value, json[QString("ATRValue")]);
    m_atr_value_isSet = !json[QString("ATRValue")].isNull() && m_atr_value_isValid;

    m_card_status_words_isValid = ::OpenAPI::fromJsonValue(m_card_status_words, json[QString("CardStatusWords")]);
    m_card_status_words_isSet = !json[QString("CardStatusWords")].isNull() && m_card_status_words_isValid;
}

QString OAIICCResetData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIICCResetData::asJsonObject() const {
    QJsonObject obj;
    if (m_atr_value_isSet) {
        obj.insert(QString("ATRValue"), ::OpenAPI::toJsonValue(m_atr_value));
    }
    if (m_card_status_words_isSet) {
        obj.insert(QString("CardStatusWords"), ::OpenAPI::toJsonValue(m_card_status_words));
    }
    return obj;
}

QString OAIICCResetData::getAtrValue() const {
    return m_atr_value;
}
void OAIICCResetData::setAtrValue(const QString &atr_value) {
    m_atr_value = atr_value;
    m_atr_value_isSet = true;
}

bool OAIICCResetData::is_atr_value_Set() const{
    return m_atr_value_isSet;
}

bool OAIICCResetData::is_atr_value_Valid() const{
    return m_atr_value_isValid;
}

QString OAIICCResetData::getCardStatusWords() const {
    return m_card_status_words;
}
void OAIICCResetData::setCardStatusWords(const QString &card_status_words) {
    m_card_status_words = card_status_words;
    m_card_status_words_isSet = true;
}

bool OAIICCResetData::is_card_status_words_Set() const{
    return m_card_status_words_isSet;
}

bool OAIICCResetData::is_card_status_words_Valid() const{
    return m_card_status_words_isValid;
}

bool OAIICCResetData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_atr_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_status_words_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIICCResetData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
