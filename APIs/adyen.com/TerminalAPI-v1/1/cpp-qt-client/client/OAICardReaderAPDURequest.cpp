/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardReaderAPDURequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardReaderAPDURequest::OAICardReaderAPDURequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardReaderAPDURequest::OAICardReaderAPDURequest() {
    this->initializeModel();
}

OAICardReaderAPDURequest::~OAICardReaderAPDURequest() {}

void OAICardReaderAPDURequest::initializeModel() {

    m_apdu_class_isSet = false;
    m_apdu_class_isValid = false;

    m_apdu_data_isSet = false;
    m_apdu_data_isValid = false;

    m_apdu_expected_length_isSet = false;
    m_apdu_expected_length_isValid = false;

    m_apdu_instruction_isSet = false;
    m_apdu_instruction_isValid = false;

    m_apdu_par1_isSet = false;
    m_apdu_par1_isValid = false;

    m_apdu_par2_isSet = false;
    m_apdu_par2_isValid = false;
}

void OAICardReaderAPDURequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardReaderAPDURequest::fromJsonObject(QJsonObject json) {

    m_apdu_class_isValid = ::OpenAPI::fromJsonValue(m_apdu_class, json[QString("APDUClass")]);
    m_apdu_class_isSet = !json[QString("APDUClass")].isNull() && m_apdu_class_isValid;

    m_apdu_data_isValid = ::OpenAPI::fromJsonValue(m_apdu_data, json[QString("APDUData")]);
    m_apdu_data_isSet = !json[QString("APDUData")].isNull() && m_apdu_data_isValid;

    m_apdu_expected_length_isValid = ::OpenAPI::fromJsonValue(m_apdu_expected_length, json[QString("APDUExpectedLength")]);
    m_apdu_expected_length_isSet = !json[QString("APDUExpectedLength")].isNull() && m_apdu_expected_length_isValid;

    m_apdu_instruction_isValid = ::OpenAPI::fromJsonValue(m_apdu_instruction, json[QString("APDUInstruction")]);
    m_apdu_instruction_isSet = !json[QString("APDUInstruction")].isNull() && m_apdu_instruction_isValid;

    m_apdu_par1_isValid = ::OpenAPI::fromJsonValue(m_apdu_par1, json[QString("APDUPar1")]);
    m_apdu_par1_isSet = !json[QString("APDUPar1")].isNull() && m_apdu_par1_isValid;

    m_apdu_par2_isValid = ::OpenAPI::fromJsonValue(m_apdu_par2, json[QString("APDUPar2")]);
    m_apdu_par2_isSet = !json[QString("APDUPar2")].isNull() && m_apdu_par2_isValid;
}

QString OAICardReaderAPDURequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardReaderAPDURequest::asJsonObject() const {
    QJsonObject obj;
    if (m_apdu_class_isSet) {
        obj.insert(QString("APDUClass"), ::OpenAPI::toJsonValue(m_apdu_class));
    }
    if (m_apdu_data_isSet) {
        obj.insert(QString("APDUData"), ::OpenAPI::toJsonValue(m_apdu_data));
    }
    if (m_apdu_expected_length_isSet) {
        obj.insert(QString("APDUExpectedLength"), ::OpenAPI::toJsonValue(m_apdu_expected_length));
    }
    if (m_apdu_instruction_isSet) {
        obj.insert(QString("APDUInstruction"), ::OpenAPI::toJsonValue(m_apdu_instruction));
    }
    if (m_apdu_par1_isSet) {
        obj.insert(QString("APDUPar1"), ::OpenAPI::toJsonValue(m_apdu_par1));
    }
    if (m_apdu_par2_isSet) {
        obj.insert(QString("APDUPar2"), ::OpenAPI::toJsonValue(m_apdu_par2));
    }
    return obj;
}

QString OAICardReaderAPDURequest::getApduClass() const {
    return m_apdu_class;
}
void OAICardReaderAPDURequest::setApduClass(const QString &apdu_class) {
    m_apdu_class = apdu_class;
    m_apdu_class_isSet = true;
}

bool OAICardReaderAPDURequest::is_apdu_class_Set() const{
    return m_apdu_class_isSet;
}

bool OAICardReaderAPDURequest::is_apdu_class_Valid() const{
    return m_apdu_class_isValid;
}

QString OAICardReaderAPDURequest::getApduData() const {
    return m_apdu_data;
}
void OAICardReaderAPDURequest::setApduData(const QString &apdu_data) {
    m_apdu_data = apdu_data;
    m_apdu_data_isSet = true;
}

bool OAICardReaderAPDURequest::is_apdu_data_Set() const{
    return m_apdu_data_isSet;
}

bool OAICardReaderAPDURequest::is_apdu_data_Valid() const{
    return m_apdu_data_isValid;
}

QString OAICardReaderAPDURequest::getApduExpectedLength() const {
    return m_apdu_expected_length;
}
void OAICardReaderAPDURequest::setApduExpectedLength(const QString &apdu_expected_length) {
    m_apdu_expected_length = apdu_expected_length;
    m_apdu_expected_length_isSet = true;
}

bool OAICardReaderAPDURequest::is_apdu_expected_length_Set() const{
    return m_apdu_expected_length_isSet;
}

bool OAICardReaderAPDURequest::is_apdu_expected_length_Valid() const{
    return m_apdu_expected_length_isValid;
}

QString OAICardReaderAPDURequest::getApduInstruction() const {
    return m_apdu_instruction;
}
void OAICardReaderAPDURequest::setApduInstruction(const QString &apdu_instruction) {
    m_apdu_instruction = apdu_instruction;
    m_apdu_instruction_isSet = true;
}

bool OAICardReaderAPDURequest::is_apdu_instruction_Set() const{
    return m_apdu_instruction_isSet;
}

bool OAICardReaderAPDURequest::is_apdu_instruction_Valid() const{
    return m_apdu_instruction_isValid;
}

QString OAICardReaderAPDURequest::getApduPar1() const {
    return m_apdu_par1;
}
void OAICardReaderAPDURequest::setApduPar1(const QString &apdu_par1) {
    m_apdu_par1 = apdu_par1;
    m_apdu_par1_isSet = true;
}

bool OAICardReaderAPDURequest::is_apdu_par1_Set() const{
    return m_apdu_par1_isSet;
}

bool OAICardReaderAPDURequest::is_apdu_par1_Valid() const{
    return m_apdu_par1_isValid;
}

QString OAICardReaderAPDURequest::getApduPar2() const {
    return m_apdu_par2;
}
void OAICardReaderAPDURequest::setApduPar2(const QString &apdu_par2) {
    m_apdu_par2 = apdu_par2;
    m_apdu_par2_isSet = true;
}

bool OAICardReaderAPDURequest::is_apdu_par2_Set() const{
    return m_apdu_par2_isSet;
}

bool OAICardReaderAPDURequest::is_apdu_par2_Valid() const{
    return m_apdu_par2_isValid;
}

bool OAICardReaderAPDURequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apdu_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apdu_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apdu_expected_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apdu_instruction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apdu_par1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apdu_par2_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardReaderAPDURequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_apdu_class_isValid && m_apdu_instruction_isValid && m_apdu_par1_isValid && m_apdu_par2_isValid && true;
}

} // namespace OpenAPI
