/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPOIStatus.h
 *
 * Indicate the availability of the POI Terminal components. The data element is absent if the component is not part of the POI Terminal. State of a POI Terminal.
 */

#ifndef OAIPOIStatus_H
#define OAIPOIStatus_H

#include <QJsonObject>

#include "OAICashHandlingDevice.h"
#include "OAIGlobalStatus.h"
#include "OAIPrinterStatus.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICashHandlingDevice;

class OAIPOIStatus : public OAIObject {
public:
    OAIPOIStatus();
    OAIPOIStatus(QString json);
    ~OAIPOIStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCardReaderOkFlag() const;
    void setCardReaderOkFlag(const bool &card_reader_ok_flag);
    bool is_card_reader_ok_flag_Set() const;
    bool is_card_reader_ok_flag_Valid() const;

    QList<OAICashHandlingDevice> getCashHandlingDevice() const;
    void setCashHandlingDevice(const QList<OAICashHandlingDevice> &cash_handling_device);
    bool is_cash_handling_device_Set() const;
    bool is_cash_handling_device_Valid() const;

    bool isCommunicationOkFlag() const;
    void setCommunicationOkFlag(const bool &communication_ok_flag);
    bool is_communication_ok_flag_Set() const;
    bool is_communication_ok_flag_Valid() const;

    bool isFraudPreventionFlag() const;
    void setFraudPreventionFlag(const bool &fraud_prevention_flag);
    bool is_fraud_prevention_flag_Set() const;
    bool is_fraud_prevention_flag_Valid() const;

    OAIGlobalStatus getGlobalStatus() const;
    void setGlobalStatus(const OAIGlobalStatus &global_status);
    bool is_global_status_Set() const;
    bool is_global_status_Valid() const;

    bool isPedokFlag() const;
    void setPedokFlag(const bool &pedok_flag);
    bool is_pedok_flag_Set() const;
    bool is_pedok_flag_Valid() const;

    OAIPrinterStatus getPrinterStatus() const;
    void setPrinterStatus(const OAIPrinterStatus &printer_status);
    bool is_printer_status_Set() const;
    bool is_printer_status_Valid() const;

    bool isSecurityOkFlag() const;
    void setSecurityOkFlag(const bool &security_ok_flag);
    bool is_security_ok_flag_Set() const;
    bool is_security_ok_flag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_card_reader_ok_flag;
    bool m_card_reader_ok_flag_isSet;
    bool m_card_reader_ok_flag_isValid;

    QList<OAICashHandlingDevice> m_cash_handling_device;
    bool m_cash_handling_device_isSet;
    bool m_cash_handling_device_isValid;

    bool m_communication_ok_flag;
    bool m_communication_ok_flag_isSet;
    bool m_communication_ok_flag_isValid;

    bool m_fraud_prevention_flag;
    bool m_fraud_prevention_flag_isSet;
    bool m_fraud_prevention_flag_isValid;

    OAIGlobalStatus m_global_status;
    bool m_global_status_isSet;
    bool m_global_status_isValid;

    bool m_pedok_flag;
    bool m_pedok_flag_isSet;
    bool m_pedok_flag_isValid;

    OAIPrinterStatus m_printer_status;
    bool m_printer_status_isSet;
    bool m_printer_status_isValid;

    bool m_security_ok_flag;
    bool m_security_ok_flag_isSet;
    bool m_security_ok_flag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPOIStatus)

#endif // OAIPOIStatus_H
