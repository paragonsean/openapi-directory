/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoyaltyAccountID.h
 *
 * In the Payment or the Loyalty Request message, it allows to identify the loyalty account by the Sale Terminal instead of the POI Terminal (e.g. because the account identification is a bar-code read by the Cashier on a scanner device). Identification of a Loyalty account.
 */

#ifndef OAILoyaltyAccountID_H
#define OAILoyaltyAccountID_H

#include <QJsonObject>

#include "OAIIdentificationSupport.h"
#include "OAIIdentificationType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILoyaltyAccountID : public OAIObject {
public:
    OAILoyaltyAccountID();
    OAILoyaltyAccountID(QString json);
    ~OAILoyaltyAccountID() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getEntryMode() const;
    void setEntryMode(const QList<QString> &entry_mode);
    bool is_entry_mode_Set() const;
    bool is_entry_mode_Valid() const;

    OAIIdentificationSupport getIdentificationSupport() const;
    void setIdentificationSupport(const OAIIdentificationSupport &identification_support);
    bool is_identification_support_Set() const;
    bool is_identification_support_Valid() const;

    OAIIdentificationType getIdentificationType() const;
    void setIdentificationType(const OAIIdentificationType &identification_type);
    bool is_identification_type_Set() const;
    bool is_identification_type_Valid() const;

    QString getLoyaltyId() const;
    void setLoyaltyId(const QString &loyalty_id);
    bool is_loyalty_id_Set() const;
    bool is_loyalty_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_entry_mode;
    bool m_entry_mode_isSet;
    bool m_entry_mode_isValid;

    OAIIdentificationSupport m_identification_support;
    bool m_identification_support_isSet;
    bool m_identification_support_isValid;

    OAIIdentificationType m_identification_type;
    bool m_identification_type_isSet;
    bool m_identification_type_isValid;

    QString m_loyalty_id;
    bool m_loyalty_id_isSet;
    bool m_loyalty_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoyaltyAccountID)

#endif // OAILoyaltyAccountID_H
