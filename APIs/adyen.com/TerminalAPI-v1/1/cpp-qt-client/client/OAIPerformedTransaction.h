/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPerformedTransaction.h
 *
 * 
 */

#ifndef OAIPerformedTransaction_H
#define OAIPerformedTransaction_H

#include <QJsonObject>

#include "OAILoyaltyResult.h"
#include "OAIPOIData.h"
#include "OAIPaymentResult.h"
#include "OAIResponse.h"
#include "OAISaleData.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILoyaltyResult;
class OAIPOIData;
class OAIPaymentResult;
class OAIResponse;
class OAISaleData;

class OAIPerformedTransaction : public OAIObject {
public:
    OAIPerformedTransaction();
    OAIPerformedTransaction(QString json);
    ~OAIPerformedTransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAILoyaltyResult> getLoyaltyResult() const;
    void setLoyaltyResult(const QList<OAILoyaltyResult> &loyalty_result);
    bool is_loyalty_result_Set() const;
    bool is_loyalty_result_Valid() const;

    OAIPOIData getPoiData() const;
    void setPoiData(const OAIPOIData &poi_data);
    bool is_poi_data_Set() const;
    bool is_poi_data_Valid() const;

    OAIPaymentResult getPaymentResult() const;
    void setPaymentResult(const OAIPaymentResult &payment_result);
    bool is_payment_result_Set() const;
    bool is_payment_result_Valid() const;

    OAIResponse getResponse() const;
    void setResponse(const OAIResponse &response);
    bool is_response_Set() const;
    bool is_response_Valid() const;

    double getReversedAmount() const;
    void setReversedAmount(const double &reversed_amount);
    bool is_reversed_amount_Set() const;
    bool is_reversed_amount_Valid() const;

    OAISaleData getSaleData() const;
    void setSaleData(const OAISaleData &sale_data);
    bool is_sale_data_Set() const;
    bool is_sale_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAILoyaltyResult> m_loyalty_result;
    bool m_loyalty_result_isSet;
    bool m_loyalty_result_isValid;

    OAIPOIData m_poi_data;
    bool m_poi_data_isSet;
    bool m_poi_data_isValid;

    OAIPaymentResult m_payment_result;
    bool m_payment_result_isSet;
    bool m_payment_result_isValid;

    OAIResponse m_response;
    bool m_response_isSet;
    bool m_response_isValid;

    double m_reversed_amount;
    bool m_reversed_amount_isSet;
    bool m_reversed_amount_isValid;

    OAISaleData m_sale_data;
    bool m_sale_data_isSet;
    bool m_sale_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPerformedTransaction)

#endif // OAIPerformedTransaction_H
