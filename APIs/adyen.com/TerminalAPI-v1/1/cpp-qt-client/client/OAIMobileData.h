/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMobileData.h
 *
 * Mobile phone is used as a payment instrument for the transaction. Information related to the mobile for the payment transaction.
 */

#ifndef OAIMobileData_H
#define OAIMobileData_H

#include <QJsonObject>

#include "OAIGeolocation.h"
#include "OAISensitiveMobileData.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGeolocation;
class OAISensitiveMobileData;

class OAIMobileData : public OAIObject {
public:
    OAIMobileData();
    OAIMobileData(QString json);
    ~OAIMobileData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGeolocation getGeolocation() const;
    void setGeolocation(const OAIGeolocation &geolocation);
    bool is_geolocation_Set() const;
    bool is_geolocation_Valid() const;

    qint32 getMaskedMsisdn() const;
    void setMaskedMsisdn(const qint32 &masked_msisdn);
    bool is_masked_msisdn_Set() const;
    bool is_masked_msisdn_Valid() const;

    qint32 getMobileCountryCode() const;
    void setMobileCountryCode(const qint32 &mobile_country_code);
    bool is_mobile_country_code_Set() const;
    bool is_mobile_country_code_Valid() const;

    qint32 getMobileNetworkCode() const;
    void setMobileNetworkCode(const qint32 &mobile_network_code);
    bool is_mobile_network_code_Set() const;
    bool is_mobile_network_code_Valid() const;

    QString getProtectedMobileData() const;
    void setProtectedMobileData(const QString &protected_mobile_data);
    bool is_protected_mobile_data_Set() const;
    bool is_protected_mobile_data_Valid() const;

    OAISensitiveMobileData getSensitiveMobileData() const;
    void setSensitiveMobileData(const OAISensitiveMobileData &sensitive_mobile_data);
    bool is_sensitive_mobile_data_Set() const;
    bool is_sensitive_mobile_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGeolocation m_geolocation;
    bool m_geolocation_isSet;
    bool m_geolocation_isValid;

    qint32 m_masked_msisdn;
    bool m_masked_msisdn_isSet;
    bool m_masked_msisdn_isValid;

    qint32 m_mobile_country_code;
    bool m_mobile_country_code_isSet;
    bool m_mobile_country_code_isValid;

    qint32 m_mobile_network_code;
    bool m_mobile_network_code_isSet;
    bool m_mobile_network_code_isValid;

    QString m_protected_mobile_data;
    bool m_protected_mobile_data_isSet;
    bool m_protected_mobile_data_isValid;

    OAISensitiveMobileData m_sensitive_mobile_data;
    bool m_sensitive_mobile_data_isSet;
    bool m_sensitive_mobile_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMobileData)

#endif // OAIMobileData_H
