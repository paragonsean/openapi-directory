/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISecurityTrailer.h
 *
 * It contains information related to the security of the message. SecurityTrailer as used by Adyen.
 */

#ifndef OAISecurityTrailer_H
#define OAISecurityTrailer_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISecurityTrailer : public OAIObject {
public:
    OAISecurityTrailer();
    OAISecurityTrailer(QString json);
    ~OAISecurityTrailer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAdyenCryptoVersion() const;
    void setAdyenCryptoVersion(const qint32 &adyen_crypto_version);
    bool is_adyen_crypto_version_Set() const;
    bool is_adyen_crypto_version_Valid() const;

    QString getHmac() const;
    void setHmac(const QString &hmac);
    bool is_hmac_Set() const;
    bool is_hmac_Valid() const;

    QString getKeyIdentifier() const;
    void setKeyIdentifier(const QString &key_identifier);
    bool is_key_identifier_Set() const;
    bool is_key_identifier_Valid() const;

    qint32 getKeyVersion() const;
    void setKeyVersion(const qint32 &key_version);
    bool is_key_version_Set() const;
    bool is_key_version_Valid() const;

    QString getNonce() const;
    void setNonce(const QString &nonce);
    bool is_nonce_Set() const;
    bool is_nonce_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_adyen_crypto_version;
    bool m_adyen_crypto_version_isSet;
    bool m_adyen_crypto_version_isValid;

    QString m_hmac;
    bool m_hmac_isSet;
    bool m_hmac_isValid;

    QString m_key_identifier;
    bool m_key_identifier_isSet;
    bool m_key_identifier_isValid;

    qint32 m_key_version;
    bool m_key_version_isSet;
    bool m_key_version_isValid;

    QString m_nonce;
    bool m_nonce_isSet;
    bool m_nonce_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISecurityTrailer)

#endif // OAISecurityTrailer_H
