/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentQualifier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentQualifier::OAIDocumentQualifier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentQualifier::OAIDocumentQualifier() {
    this->initializeModel();
}

OAIDocumentQualifier::~OAIDocumentQualifier() {}

void OAIDocumentQualifier::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDocumentQualifier::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDocumentQualifier::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CashierReceipt", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocumentQualifier::CASHIERRECEIPT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CustomerReceipt", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocumentQualifier::CUSTOMERRECEIPT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Document", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocumentQualifier::DOCUMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Journal", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocumentQualifier::JOURNAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SaleReceipt", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocumentQualifier::SALERECEIPT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Voucher", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocumentQualifier::VOUCHER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDocumentQualifier::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDocumentQualifier::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDocumentQualifier::CASHIERRECEIPT:
            val = "CashierReceipt";
            break;
        case eOAIDocumentQualifier::CUSTOMERRECEIPT:
            val = "CustomerReceipt";
            break;
        case eOAIDocumentQualifier::DOCUMENT:
            val = "Document";
            break;
        case eOAIDocumentQualifier::JOURNAL:
            val = "Journal";
            break;
        case eOAIDocumentQualifier::SALERECEIPT:
            val = "SaleReceipt";
            break;
        case eOAIDocumentQualifier::VOUCHER:
            val = "Voucher";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDocumentQualifier::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDocumentQualifier::eOAIDocumentQualifier OAIDocumentQualifier::getValue() const {
    return m_value;
}

void OAIDocumentQualifier::setValue(const OAIDocumentQualifier::eOAIDocumentQualifier& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDocumentQualifier::isSet() const {
    
    return m_value_isSet;
}

bool OAIDocumentQualifier::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
