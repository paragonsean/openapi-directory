/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReversalRequest.h
 *
 * It conveys Information related to the reversal of a previous payment or a loyalty transaction. Content of the Reversal Request message.
 */

#ifndef OAIReversalRequest_H
#define OAIReversalRequest_H

#include <QJsonObject>

#include "OAICustomerOrder.h"
#include "OAIOriginalPOITransaction.h"
#include "OAIReversalReason.h"
#include "OAISaleData.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomerOrder;
class OAIOriginalPOITransaction;
class OAISaleData;

class OAIReversalRequest : public OAIObject {
public:
    OAIReversalRequest();
    OAIReversalRequest(QString json);
    ~OAIReversalRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICustomerOrder getCustomerOrder() const;
    void setCustomerOrder(const OAICustomerOrder &customer_order);
    bool is_customer_order_Set() const;
    bool is_customer_order_Valid() const;

    OAIOriginalPOITransaction getOriginalPoiTransaction() const;
    void setOriginalPoiTransaction(const OAIOriginalPOITransaction &original_poi_transaction);
    bool is_original_poi_transaction_Set() const;
    bool is_original_poi_transaction_Valid() const;

    OAIReversalReason getReversalReason() const;
    void setReversalReason(const OAIReversalReason &reversal_reason);
    bool is_reversal_reason_Set() const;
    bool is_reversal_reason_Valid() const;

    double getReversedAmount() const;
    void setReversedAmount(const double &reversed_amount);
    bool is_reversed_amount_Set() const;
    bool is_reversed_amount_Valid() const;

    OAISaleData getSaleData() const;
    void setSaleData(const OAISaleData &sale_data);
    bool is_sale_data_Set() const;
    bool is_sale_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICustomerOrder m_customer_order;
    bool m_customer_order_isSet;
    bool m_customer_order_isValid;

    OAIOriginalPOITransaction m_original_poi_transaction;
    bool m_original_poi_transaction_isSet;
    bool m_original_poi_transaction_isValid;

    OAIReversalReason m_reversal_reason;
    bool m_reversal_reason_isSet;
    bool m_reversal_reason_isValid;

    double m_reversed_amount;
    bool m_reversed_amount_isSet;
    bool m_reversed_amount_isValid;

    OAISaleData m_sale_data;
    bool m_sale_data_isSet;
    bool m_sale_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReversalRequest)

#endif // OAIReversalRequest_H
