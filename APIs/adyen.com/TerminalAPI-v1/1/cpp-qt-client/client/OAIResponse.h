/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponse.h
 *
 * If Result is Success, ErrorCondition is absent or not used in the processing of the message. In the other cases, the ErrorCondition has to be present and can refine the processing of the message response. AdditionalResponse gives more information about the success or the failure of the message request processing, for logging without real time involvements. Result of a message request processing.
 */

#ifndef OAIResponse_H
#define OAIResponse_H

#include <QJsonObject>

#include "OAIErrorCondition.h"
#include "OAIResult.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResponse : public OAIObject {
public:
    OAIResponse();
    OAIResponse(QString json);
    ~OAIResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalResponse() const;
    void setAdditionalResponse(const QString &additional_response);
    bool is_additional_response_Set() const;
    bool is_additional_response_Valid() const;

    OAIErrorCondition getErrorCondition() const;
    void setErrorCondition(const OAIErrorCondition &error_condition);
    bool is_error_condition_Set() const;
    bool is_error_condition_Valid() const;

    OAIResult getResult() const;
    void setResult(const OAIResult &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_response;
    bool m_additional_response_isSet;
    bool m_additional_response_isValid;

    OAIErrorCondition m_error_condition;
    bool m_error_condition_isSet;
    bool m_error_condition_isValid;

    OAIResult m_result;
    bool m_result_isSet;
    bool m_result_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponse)

#endif // OAIResponse_H
