/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAllowedProduct.h
 *
 * Product that is payable by the payment card. Product codes that are payable by the payment card.
 */

#ifndef OAIAllowedProduct_H
#define OAIAllowedProduct_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAllowedProduct : public OAIObject {
public:
    OAIAllowedProduct();
    OAIAllowedProduct(QString json);
    ~OAIAllowedProduct() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalProductInfo() const;
    void setAdditionalProductInfo(const QString &additional_product_info);
    bool is_additional_product_info_Set() const;
    bool is_additional_product_info_Valid() const;

    qint32 getEanUpc() const;
    void setEanUpc(const qint32 &ean_upc);
    bool is_ean_upc_Set() const;
    bool is_ean_upc_Valid() const;

    qint32 getProductCode() const;
    void setProductCode(const qint32 &product_code);
    bool is_product_code_Set() const;
    bool is_product_code_Valid() const;

    QString getProductLabel() const;
    void setProductLabel(const QString &product_label);
    bool is_product_label_Set() const;
    bool is_product_label_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_product_info;
    bool m_additional_product_info_isSet;
    bool m_additional_product_info_isValid;

    qint32 m_ean_upc;
    bool m_ean_upc_isSet;
    bool m_ean_upc_isValid;

    qint32 m_product_code;
    bool m_product_code_isSet;
    bool m_product_code_isValid;

    QString m_product_label;
    bool m_product_label_isSet;
    bool m_product_label_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAllowedProduct)

#endif // OAIAllowedProduct_H
