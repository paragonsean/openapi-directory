/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMenuEntryTag.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMenuEntryTag::OAIMenuEntryTag(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMenuEntryTag::OAIMenuEntryTag() {
    this->initializeModel();
}

OAIMenuEntryTag::~OAIMenuEntryTag() {}

void OAIMenuEntryTag::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMenuEntryTag::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMenuEntryTag::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NonSelectable", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMenuEntryTag::NONSELECTABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NonSelectableSubMenu", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMenuEntryTag::NONSELECTABLESUBMENU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Selectable", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMenuEntryTag::SELECTABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SubMenu", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMenuEntryTag::SUBMENU;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMenuEntryTag::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMenuEntryTag::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMenuEntryTag::NONSELECTABLE:
            val = "NonSelectable";
            break;
        case eOAIMenuEntryTag::NONSELECTABLESUBMENU:
            val = "NonSelectableSubMenu";
            break;
        case eOAIMenuEntryTag::SELECTABLE:
            val = "Selectable";
            break;
        case eOAIMenuEntryTag::SUBMENU:
            val = "SubMenu";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMenuEntryTag::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMenuEntryTag::eOAIMenuEntryTag OAIMenuEntryTag::getValue() const {
    return m_value;
}

void OAIMenuEntryTag::setValue(const OAIMenuEntryTag::eOAIMenuEntryTag& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMenuEntryTag::isSet() const {
    
    return m_value_isSet;
}

bool OAIMenuEntryTag::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
