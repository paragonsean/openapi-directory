/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStoredValueAccountStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStoredValueAccountStatus::OAIStoredValueAccountStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStoredValueAccountStatus::OAIStoredValueAccountStatus() {
    this->initializeModel();
}

OAIStoredValueAccountStatus::~OAIStoredValueAccountStatus() {}

void OAIStoredValueAccountStatus::initializeModel() {

    m_current_balance_isSet = false;
    m_current_balance_isValid = false;

    m_stored_value_account_id_isSet = false;
    m_stored_value_account_id_isValid = false;
}

void OAIStoredValueAccountStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStoredValueAccountStatus::fromJsonObject(QJsonObject json) {

    m_current_balance_isValid = ::OpenAPI::fromJsonValue(m_current_balance, json[QString("CurrentBalance")]);
    m_current_balance_isSet = !json[QString("CurrentBalance")].isNull() && m_current_balance_isValid;

    m_stored_value_account_id_isValid = ::OpenAPI::fromJsonValue(m_stored_value_account_id, json[QString("StoredValueAccountID")]);
    m_stored_value_account_id_isSet = !json[QString("StoredValueAccountID")].isNull() && m_stored_value_account_id_isValid;
}

QString OAIStoredValueAccountStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStoredValueAccountStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_current_balance_isSet) {
        obj.insert(QString("CurrentBalance"), ::OpenAPI::toJsonValue(m_current_balance));
    }
    if (m_stored_value_account_id.isSet()) {
        obj.insert(QString("StoredValueAccountID"), ::OpenAPI::toJsonValue(m_stored_value_account_id));
    }
    return obj;
}

double OAIStoredValueAccountStatus::getCurrentBalance() const {
    return m_current_balance;
}
void OAIStoredValueAccountStatus::setCurrentBalance(const double &current_balance) {
    m_current_balance = current_balance;
    m_current_balance_isSet = true;
}

bool OAIStoredValueAccountStatus::is_current_balance_Set() const{
    return m_current_balance_isSet;
}

bool OAIStoredValueAccountStatus::is_current_balance_Valid() const{
    return m_current_balance_isValid;
}

OAIStoredValueAccountID OAIStoredValueAccountStatus::getStoredValueAccountId() const {
    return m_stored_value_account_id;
}
void OAIStoredValueAccountStatus::setStoredValueAccountId(const OAIStoredValueAccountID &stored_value_account_id) {
    m_stored_value_account_id = stored_value_account_id;
    m_stored_value_account_id_isSet = true;
}

bool OAIStoredValueAccountStatus::is_stored_value_account_id_Set() const{
    return m_stored_value_account_id_isSet;
}

bool OAIStoredValueAccountStatus::is_stored_value_account_id_Valid() const{
    return m_stored_value_account_id_isValid;
}

bool OAIStoredValueAccountStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stored_value_account_id.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStoredValueAccountStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_stored_value_account_id_isValid && true;
}

} // namespace OpenAPI
