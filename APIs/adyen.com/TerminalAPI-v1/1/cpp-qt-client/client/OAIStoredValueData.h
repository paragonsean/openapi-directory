/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStoredValueData.h
 *
 * It contains: - the identification of the stored value accounts or the stored value cards, if provided by the Sale System, and - the associated products sold by the Sale System.. Data related to the stored value card.
 */

#ifndef OAIStoredValueData_H
#define OAIStoredValueData_H

#include <QJsonObject>

#include "OAIOriginalPOITransaction.h"
#include "OAIStoredValueAccountID.h"
#include "OAIStoredValueTransactionType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOriginalPOITransaction;
class OAIStoredValueAccountID;

class OAIStoredValueData : public OAIObject {
public:
    OAIStoredValueData();
    OAIStoredValueData(QString json);
    ~OAIStoredValueData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    qint32 getEanUpc() const;
    void setEanUpc(const qint32 &ean_upc);
    bool is_ean_upc_Set() const;
    bool is_ean_upc_Valid() const;

    double getItemAmount() const;
    void setItemAmount(const double &item_amount);
    bool is_item_amount_Set() const;
    bool is_item_amount_Valid() const;

    OAIOriginalPOITransaction getOriginalPoiTransaction() const;
    void setOriginalPoiTransaction(const OAIOriginalPOITransaction &original_poi_transaction);
    bool is_original_poi_transaction_Set() const;
    bool is_original_poi_transaction_Valid() const;

    qint32 getProductCode() const;
    void setProductCode(const qint32 &product_code);
    bool is_product_code_Set() const;
    bool is_product_code_Valid() const;

    OAIStoredValueAccountID getStoredValueAccountId() const;
    void setStoredValueAccountId(const OAIStoredValueAccountID &stored_value_account_id);
    bool is_stored_value_account_id_Set() const;
    bool is_stored_value_account_id_Valid() const;

    QString getStoredValueProvider() const;
    void setStoredValueProvider(const QString &stored_value_provider);
    bool is_stored_value_provider_Set() const;
    bool is_stored_value_provider_Valid() const;

    OAIStoredValueTransactionType getStoredValueTransactionType() const;
    void setStoredValueTransactionType(const OAIStoredValueTransactionType &stored_value_transaction_type);
    bool is_stored_value_transaction_type_Set() const;
    bool is_stored_value_transaction_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    qint32 m_ean_upc;
    bool m_ean_upc_isSet;
    bool m_ean_upc_isValid;

    double m_item_amount;
    bool m_item_amount_isSet;
    bool m_item_amount_isValid;

    OAIOriginalPOITransaction m_original_poi_transaction;
    bool m_original_poi_transaction_isSet;
    bool m_original_poi_transaction_isValid;

    qint32 m_product_code;
    bool m_product_code_isSet;
    bool m_product_code_isValid;

    OAIStoredValueAccountID m_stored_value_account_id;
    bool m_stored_value_account_id_isSet;
    bool m_stored_value_account_id_isValid;

    QString m_stored_value_provider;
    bool m_stored_value_provider_isSet;
    bool m_stored_value_provider_isValid;

    OAIStoredValueTransactionType m_stored_value_transaction_type;
    bool m_stored_value_transaction_type_isSet;
    bool m_stored_value_transaction_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStoredValueData)

#endif // OAIStoredValueData_H
