/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICardAcquisitionResponse.h
 *
 * It conveys Information related to the payment and loyalty cards read and processed by the POI System and entered by the Customer. Content of the Card Acquisition Response message.
 */

#ifndef OAICardAcquisitionResponse_H
#define OAICardAcquisitionResponse_H

#include <QJsonObject>

#include "OAILoyaltyAccount.h"
#include "OAIPOIData.h"
#include "OAIPaymentInstrumentData.h"
#include "OAIResponse.h"
#include "OAISaleData.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILoyaltyAccount;
class OAIPOIData;
class OAIPaymentInstrumentData;
class OAIResponse;
class OAISaleData;

class OAICardAcquisitionResponse : public OAIObject {
public:
    OAICardAcquisitionResponse();
    OAICardAcquisitionResponse(QString json);
    ~OAICardAcquisitionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCustomerLanguage() const;
    void setCustomerLanguage(const QString &customer_language);
    bool is_customer_language_Set() const;
    bool is_customer_language_Valid() const;

    QList<OAILoyaltyAccount> getLoyaltyAccount() const;
    void setLoyaltyAccount(const QList<OAILoyaltyAccount> &loyalty_account);
    bool is_loyalty_account_Set() const;
    bool is_loyalty_account_Valid() const;

    OAIPOIData getPoiData() const;
    void setPoiData(const OAIPOIData &poi_data);
    bool is_poi_data_Set() const;
    bool is_poi_data_Valid() const;

    QList<QString> getPaymentBrand() const;
    void setPaymentBrand(const QList<QString> &payment_brand);
    bool is_payment_brand_Set() const;
    bool is_payment_brand_Valid() const;

    OAIPaymentInstrumentData getPaymentInstrumentData() const;
    void setPaymentInstrumentData(const OAIPaymentInstrumentData &payment_instrument_data);
    bool is_payment_instrument_data_Set() const;
    bool is_payment_instrument_data_Valid() const;

    OAIResponse getResponse() const;
    void setResponse(const OAIResponse &response);
    bool is_response_Set() const;
    bool is_response_Valid() const;

    OAISaleData getSaleData() const;
    void setSaleData(const OAISaleData &sale_data);
    bool is_sale_data_Set() const;
    bool is_sale_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_customer_language;
    bool m_customer_language_isSet;
    bool m_customer_language_isValid;

    QList<OAILoyaltyAccount> m_loyalty_account;
    bool m_loyalty_account_isSet;
    bool m_loyalty_account_isValid;

    OAIPOIData m_poi_data;
    bool m_poi_data_isSet;
    bool m_poi_data_isValid;

    QList<QString> m_payment_brand;
    bool m_payment_brand_isSet;
    bool m_payment_brand_isValid;

    OAIPaymentInstrumentData m_payment_instrument_data;
    bool m_payment_instrument_data_isSet;
    bool m_payment_instrument_data_isValid;

    OAIResponse m_response;
    bool m_response_isSet;
    bool m_response_isValid;

    OAISaleData m_sale_data;
    bool m_sale_data_isSet;
    bool m_sale_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICardAcquisitionResponse)

#endif // OAICardAcquisitionResponse_H
