/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoginRequest.h
 *
 * It conveys Information related to the session (period between a Login and the following Logout) to process. Content of the Login Request message.
 */

#ifndef OAILoginRequest_H
#define OAILoginRequest_H

#include <QJsonObject>

#include "OAISaleSoftware.h"
#include "OAISaleTerminalData.h"
#include "OAITokenRequestedType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISaleSoftware;
class OAISaleTerminalData;

class OAILoginRequest : public OAIObject {
public:
    OAILoginRequest();
    OAILoginRequest(QString json);
    ~OAILoginRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCustomerOrderReq() const;
    void setCustomerOrderReq(const QList<QString> &customer_order_req);
    bool is_customer_order_req_Set() const;
    bool is_customer_order_req_Valid() const;

    QDateTime getDateTime() const;
    void setDateTime(const QDateTime &date_time);
    bool is_date_time_Set() const;
    bool is_date_time_Valid() const;

    QString getOperatorId() const;
    void setOperatorId(const QString &operator_id);
    bool is_operator_id_Set() const;
    bool is_operator_id_Valid() const;

    QString getOperatorLanguage() const;
    void setOperatorLanguage(const QString &operator_language);
    bool is_operator_language_Set() const;
    bool is_operator_language_Valid() const;

    QString getPoiSerialNumber() const;
    void setPoiSerialNumber(const QString &poi_serial_number);
    bool is_poi_serial_number_Set() const;
    bool is_poi_serial_number_Valid() const;

    OAISaleSoftware getSaleSoftware() const;
    void setSaleSoftware(const OAISaleSoftware &sale_software);
    bool is_sale_software_Set() const;
    bool is_sale_software_Valid() const;

    OAISaleTerminalData getSaleTerminalData() const;
    void setSaleTerminalData(const OAISaleTerminalData &sale_terminal_data);
    bool is_sale_terminal_data_Set() const;
    bool is_sale_terminal_data_Valid() const;

    QString getShiftNumber() const;
    void setShiftNumber(const QString &shift_number);
    bool is_shift_number_Set() const;
    bool is_shift_number_Valid() const;

    OAITokenRequestedType getTokenRequestedType() const;
    void setTokenRequestedType(const OAITokenRequestedType &token_requested_type);
    bool is_token_requested_type_Set() const;
    bool is_token_requested_type_Valid() const;

    bool isTrainingModeFlag() const;
    void setTrainingModeFlag(const bool &training_mode_flag);
    bool is_training_mode_flag_Set() const;
    bool is_training_mode_flag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_customer_order_req;
    bool m_customer_order_req_isSet;
    bool m_customer_order_req_isValid;

    QDateTime m_date_time;
    bool m_date_time_isSet;
    bool m_date_time_isValid;

    QString m_operator_id;
    bool m_operator_id_isSet;
    bool m_operator_id_isValid;

    QString m_operator_language;
    bool m_operator_language_isSet;
    bool m_operator_language_isValid;

    QString m_poi_serial_number;
    bool m_poi_serial_number_isSet;
    bool m_poi_serial_number_isValid;

    OAISaleSoftware m_sale_software;
    bool m_sale_software_isSet;
    bool m_sale_software_isValid;

    OAISaleTerminalData m_sale_terminal_data;
    bool m_sale_terminal_data_isSet;
    bool m_sale_terminal_data_isValid;

    QString m_shift_number;
    bool m_shift_number_isSet;
    bool m_shift_number_isValid;

    OAITokenRequestedType m_token_requested_type;
    bool m_token_requested_type_isSet;
    bool m_token_requested_type_isValid;

    bool m_training_mode_flag;
    bool m_training_mode_flag_isSet;
    bool m_training_mode_flag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoginRequest)

#endif // OAILoginRequest_H
