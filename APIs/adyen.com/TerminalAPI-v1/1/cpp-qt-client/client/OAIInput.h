/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInput.h
 *
 * 
 */

#ifndef OAIInput_H
#define OAIInput_H

#include <QJsonObject>

#include "OAIInputCommand.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInput : public OAIObject {
public:
    OAIInput();
    OAIInput(QString json);
    ~OAIInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isConfirmedFlag() const;
    void setConfirmedFlag(const bool &confirmed_flag);
    bool is_confirmed_flag_Set() const;
    bool is_confirmed_flag_Valid() const;

    qint32 getDigitInput() const;
    void setDigitInput(const qint32 &digit_input);
    bool is_digit_input_Set() const;
    bool is_digit_input_Valid() const;

    qint32 getFunctionKey() const;
    void setFunctionKey(const qint32 &function_key);
    bool is_function_key_Set() const;
    bool is_function_key_Valid() const;

    OAIInputCommand getInputCommand() const;
    void setInputCommand(const OAIInputCommand &input_command);
    bool is_input_command_Set() const;
    bool is_input_command_Valid() const;

    QList<qint32> getMenuEntryNumber() const;
    void setMenuEntryNumber(const QList<qint32> &menu_entry_number);
    bool is_menu_entry_number_Set() const;
    bool is_menu_entry_number_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getTextInput() const;
    void setTextInput(const QString &text_input);
    bool is_text_input_Set() const;
    bool is_text_input_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_confirmed_flag;
    bool m_confirmed_flag_isSet;
    bool m_confirmed_flag_isValid;

    qint32 m_digit_input;
    bool m_digit_input_isSet;
    bool m_digit_input_isValid;

    qint32 m_function_key;
    bool m_function_key_isSet;
    bool m_function_key_isValid;

    OAIInputCommand m_input_command;
    bool m_input_command_isSet;
    bool m_input_command_isValid;

    QList<qint32> m_menu_entry_number;
    bool m_menu_entry_number_isSet;
    bool m_menu_entry_number_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_text_input;
    bool m_text_input_isSet;
    bool m_text_input_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInput)

#endif // OAIInput_H
