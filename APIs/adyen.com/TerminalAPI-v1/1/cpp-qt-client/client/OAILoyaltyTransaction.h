/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoyaltyTransaction.h
 *
 * 
 */

#ifndef OAILoyaltyTransaction_H
#define OAILoyaltyTransaction_H

#include <QJsonObject>

#include "OAILoyaltyTransactionType.h"
#include "OAIOriginalPOITransaction.h"
#include "OAISaleItem.h"
#include "OAITransactionConditions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOriginalPOITransaction;
class OAISaleItem;
class OAITransactionConditions;

class OAILoyaltyTransaction : public OAIObject {
public:
    OAILoyaltyTransaction();
    OAILoyaltyTransaction(QString json);
    ~OAILoyaltyTransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAILoyaltyTransactionType getLoyaltyTransactionType() const;
    void setLoyaltyTransactionType(const OAILoyaltyTransactionType &loyalty_transaction_type);
    bool is_loyalty_transaction_type_Set() const;
    bool is_loyalty_transaction_type_Valid() const;

    OAIOriginalPOITransaction getOriginalPoiTransaction() const;
    void setOriginalPoiTransaction(const OAIOriginalPOITransaction &original_poi_transaction);
    bool is_original_poi_transaction_Set() const;
    bool is_original_poi_transaction_Valid() const;

    QList<OAISaleItem> getSaleItem() const;
    void setSaleItem(const QList<OAISaleItem> &sale_item);
    bool is_sale_item_Set() const;
    bool is_sale_item_Valid() const;

    double getTotalAmount() const;
    void setTotalAmount(const double &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    OAITransactionConditions getTransactionConditions() const;
    void setTransactionConditions(const OAITransactionConditions &transaction_conditions);
    bool is_transaction_conditions_Set() const;
    bool is_transaction_conditions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAILoyaltyTransactionType m_loyalty_transaction_type;
    bool m_loyalty_transaction_type_isSet;
    bool m_loyalty_transaction_type_isValid;

    OAIOriginalPOITransaction m_original_poi_transaction;
    bool m_original_poi_transaction_isSet;
    bool m_original_poi_transaction_isValid;

    QList<OAISaleItem> m_sale_item;
    bool m_sale_item_isSet;
    bool m_sale_item_isValid;

    double m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;

    OAITransactionConditions m_transaction_conditions;
    bool m_transaction_conditions_isSet;
    bool m_transaction_conditions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoyaltyTransaction)

#endif // OAILoyaltyTransaction_H
