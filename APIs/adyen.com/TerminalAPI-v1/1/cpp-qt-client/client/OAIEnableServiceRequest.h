/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnableServiceRequest.h
 *
 * It conveys the services that will be enabled for the  POI Terminal without the request of the Sale System, and a possible invitation for the Customer to start the services. Content of the Enable Service Request message.
 */

#ifndef OAIEnableServiceRequest_H
#define OAIEnableServiceRequest_H

#include <QJsonObject>

#include "OAIDisplayOutput.h"
#include "OAITransactionAction.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDisplayOutput;

class OAIEnableServiceRequest : public OAIObject {
public:
    OAIEnableServiceRequest();
    OAIEnableServiceRequest(QString json);
    ~OAIEnableServiceRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDisplayOutput getDisplayOutput() const;
    void setDisplayOutput(const OAIDisplayOutput &display_output);
    bool is_display_output_Set() const;
    bool is_display_output_Valid() const;

    QList<QString> getServicesEnabled() const;
    void setServicesEnabled(const QList<QString> &services_enabled);
    bool is_services_enabled_Set() const;
    bool is_services_enabled_Valid() const;

    OAITransactionAction getTransactionAction() const;
    void setTransactionAction(const OAITransactionAction &transaction_action);
    bool is_transaction_action_Set() const;
    bool is_transaction_action_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDisplayOutput m_display_output;
    bool m_display_output_isSet;
    bool m_display_output_isValid;

    QList<QString> m_services_enabled;
    bool m_services_enabled_isSet;
    bool m_services_enabled_isValid;

    OAITransactionAction m_transaction_action;
    bool m_transaction_action_isSet;
    bool m_transaction_action_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnableServiceRequest)

#endif // OAIEnableServiceRequest_H
