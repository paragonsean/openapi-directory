/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoyaltyAccountReq.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoyaltyAccountReq::OAILoyaltyAccountReq(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoyaltyAccountReq::OAILoyaltyAccountReq() {
    this->initializeModel();
}

OAILoyaltyAccountReq::~OAILoyaltyAccountReq() {}

void OAILoyaltyAccountReq::initializeModel() {

    m_card_acquisition_reference_isSet = false;
    m_card_acquisition_reference_isValid = false;

    m_loyalty_account_id_isSet = false;
    m_loyalty_account_id_isValid = false;
}

void OAILoyaltyAccountReq::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoyaltyAccountReq::fromJsonObject(QJsonObject json) {

    m_card_acquisition_reference_isValid = ::OpenAPI::fromJsonValue(m_card_acquisition_reference, json[QString("CardAcquisitionReference")]);
    m_card_acquisition_reference_isSet = !json[QString("CardAcquisitionReference")].isNull() && m_card_acquisition_reference_isValid;

    m_loyalty_account_id_isValid = ::OpenAPI::fromJsonValue(m_loyalty_account_id, json[QString("LoyaltyAccountID")]);
    m_loyalty_account_id_isSet = !json[QString("LoyaltyAccountID")].isNull() && m_loyalty_account_id_isValid;
}

QString OAILoyaltyAccountReq::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoyaltyAccountReq::asJsonObject() const {
    QJsonObject obj;
    if (m_card_acquisition_reference.isSet()) {
        obj.insert(QString("CardAcquisitionReference"), ::OpenAPI::toJsonValue(m_card_acquisition_reference));
    }
    if (m_loyalty_account_id.isSet()) {
        obj.insert(QString("LoyaltyAccountID"), ::OpenAPI::toJsonValue(m_loyalty_account_id));
    }
    return obj;
}

OAITransactionIDType OAILoyaltyAccountReq::getCardAcquisitionReference() const {
    return m_card_acquisition_reference;
}
void OAILoyaltyAccountReq::setCardAcquisitionReference(const OAITransactionIDType &card_acquisition_reference) {
    m_card_acquisition_reference = card_acquisition_reference;
    m_card_acquisition_reference_isSet = true;
}

bool OAILoyaltyAccountReq::is_card_acquisition_reference_Set() const{
    return m_card_acquisition_reference_isSet;
}

bool OAILoyaltyAccountReq::is_card_acquisition_reference_Valid() const{
    return m_card_acquisition_reference_isValid;
}

OAILoyaltyAccountID OAILoyaltyAccountReq::getLoyaltyAccountId() const {
    return m_loyalty_account_id;
}
void OAILoyaltyAccountReq::setLoyaltyAccountId(const OAILoyaltyAccountID &loyalty_account_id) {
    m_loyalty_account_id = loyalty_account_id;
    m_loyalty_account_id_isSet = true;
}

bool OAILoyaltyAccountReq::is_loyalty_account_id_Set() const{
    return m_loyalty_account_id_isSet;
}

bool OAILoyaltyAccountReq::is_loyalty_account_id_Valid() const{
    return m_loyalty_account_id_isValid;
}

bool OAILoyaltyAccountReq::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_card_acquisition_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_loyalty_account_id.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoyaltyAccountReq::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
