/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaymentAcquirerData.h
 *
 * Data related to the response from the payment Acquirer.
 */

#ifndef OAIPaymentAcquirerData_H
#define OAIPaymentAcquirerData_H

#include <QJsonObject>

#include "OAITransactionIDType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransactionIDType;

class OAIPaymentAcquirerData : public OAIObject {
public:
    OAIPaymentAcquirerData();
    OAIPaymentAcquirerData(QString json);
    ~OAIPaymentAcquirerData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAcquirerId() const;
    void setAcquirerId(const qint32 &acquirer_id);
    bool is_acquirer_id_Set() const;
    bool is_acquirer_id_Valid() const;

    QString getAcquirerPoiid() const;
    void setAcquirerPoiid(const QString &acquirer_poiid);
    bool is_acquirer_poiid_Set() const;
    bool is_acquirer_poiid_Valid() const;

    OAITransactionIDType getAcquirerTransactionId() const;
    void setAcquirerTransactionId(const OAITransactionIDType &acquirer_transaction_id);
    bool is_acquirer_transaction_id_Set() const;
    bool is_acquirer_transaction_id_Valid() const;

    QString getApprovalCode() const;
    void setApprovalCode(const QString &approval_code);
    bool is_approval_code_Set() const;
    bool is_approval_code_Valid() const;

    QString getHostReconciliationId() const;
    void setHostReconciliationId(const QString &host_reconciliation_id);
    bool is_host_reconciliation_id_Set() const;
    bool is_host_reconciliation_id_Valid() const;

    QString getMerchantId() const;
    void setMerchantId(const QString &merchant_id);
    bool is_merchant_id_Set() const;
    bool is_merchant_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_acquirer_id;
    bool m_acquirer_id_isSet;
    bool m_acquirer_id_isValid;

    QString m_acquirer_poiid;
    bool m_acquirer_poiid_isSet;
    bool m_acquirer_poiid_isValid;

    OAITransactionIDType m_acquirer_transaction_id;
    bool m_acquirer_transaction_id_isSet;
    bool m_acquirer_transaction_id_isValid;

    QString m_approval_code;
    bool m_approval_code_isSet;
    bool m_approval_code_isValid;

    QString m_host_reconciliation_id;
    bool m_host_reconciliation_id_isSet;
    bool m_host_reconciliation_id_isValid;

    QString m_merchant_id;
    bool m_merchant_id_isSet;
    bool m_merchant_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaymentAcquirerData)

#endif // OAIPaymentAcquirerData_H
