/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISaleToIssuerData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISaleToIssuerData::OAISaleToIssuerData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISaleToIssuerData::OAISaleToIssuerData() {
    this->initializeModel();
}

OAISaleToIssuerData::~OAISaleToIssuerData() {}

void OAISaleToIssuerData::initializeModel() {

    m_statement_reference_isSet = false;
    m_statement_reference_isValid = false;
}

void OAISaleToIssuerData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISaleToIssuerData::fromJsonObject(QJsonObject json) {

    m_statement_reference_isValid = ::OpenAPI::fromJsonValue(m_statement_reference, json[QString("StatementReference")]);
    m_statement_reference_isSet = !json[QString("StatementReference")].isNull() && m_statement_reference_isValid;
}

QString OAISaleToIssuerData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISaleToIssuerData::asJsonObject() const {
    QJsonObject obj;
    if (m_statement_reference_isSet) {
        obj.insert(QString("StatementReference"), ::OpenAPI::toJsonValue(m_statement_reference));
    }
    return obj;
}

QString OAISaleToIssuerData::getStatementReference() const {
    return m_statement_reference;
}
void OAISaleToIssuerData::setStatementReference(const QString &statement_reference) {
    m_statement_reference = statement_reference;
    m_statement_reference_isSet = true;
}

bool OAISaleToIssuerData::is_statement_reference_Set() const{
    return m_statement_reference_isSet;
}

bool OAISaleToIssuerData::is_statement_reference_Valid() const{
    return m_statement_reference_isValid;
}

bool OAISaleToIssuerData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_statement_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISaleToIssuerData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
