/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAmountsReq.h
 *
 * Amounts of a payment
 */

#ifndef OAIAmountsReq_H
#define OAIAmountsReq_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAmountsReq : public OAIObject {
public:
    OAIAmountsReq();
    OAIAmountsReq(QString json);
    ~OAIAmountsReq() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCashBackAmount() const;
    void setCashBackAmount(const double &cash_back_amount);
    bool is_cash_back_amount_Set() const;
    bool is_cash_back_amount_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    double getMaximumCashBackAmount() const;
    void setMaximumCashBackAmount(const double &maximum_cash_back_amount);
    bool is_maximum_cash_back_amount_Set() const;
    bool is_maximum_cash_back_amount_Valid() const;

    double getMinimumAmountToDeliver() const;
    void setMinimumAmountToDeliver(const double &minimum_amount_to_deliver);
    bool is_minimum_amount_to_deliver_Set() const;
    bool is_minimum_amount_to_deliver_Valid() const;

    double getMinimumSplitAmount() const;
    void setMinimumSplitAmount(const double &minimum_split_amount);
    bool is_minimum_split_amount_Set() const;
    bool is_minimum_split_amount_Valid() const;

    double getPaidAmount() const;
    void setPaidAmount(const double &paid_amount);
    bool is_paid_amount_Set() const;
    bool is_paid_amount_Valid() const;

    double getRequestedAmount() const;
    void setRequestedAmount(const double &requested_amount);
    bool is_requested_amount_Set() const;
    bool is_requested_amount_Valid() const;

    double getTipAmount() const;
    void setTipAmount(const double &tip_amount);
    bool is_tip_amount_Set() const;
    bool is_tip_amount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_cash_back_amount;
    bool m_cash_back_amount_isSet;
    bool m_cash_back_amount_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    double m_maximum_cash_back_amount;
    bool m_maximum_cash_back_amount_isSet;
    bool m_maximum_cash_back_amount_isValid;

    double m_minimum_amount_to_deliver;
    bool m_minimum_amount_to_deliver_isSet;
    bool m_minimum_amount_to_deliver_isValid;

    double m_minimum_split_amount;
    bool m_minimum_split_amount_isSet;
    bool m_minimum_split_amount_isValid;

    double m_paid_amount;
    bool m_paid_amount_isSet;
    bool m_paid_amount_isValid;

    double m_requested_amount;
    bool m_requested_amount_isSet;
    bool m_requested_amount_isValid;

    double m_tip_amount;
    bool m_tip_amount_isSet;
    bool m_tip_amount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAmountsReq)

#endif // OAIAmountsReq_H
