/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogoutRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogoutRequest::OAILogoutRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogoutRequest::OAILogoutRequest() {
    this->initializeModel();
}

OAILogoutRequest::~OAILogoutRequest() {}

void OAILogoutRequest::initializeModel() {

    m_maintenance_allowed_isSet = false;
    m_maintenance_allowed_isValid = false;
}

void OAILogoutRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILogoutRequest::fromJsonObject(QJsonObject json) {

    m_maintenance_allowed_isValid = ::OpenAPI::fromJsonValue(m_maintenance_allowed, json[QString("MaintenanceAllowed")]);
    m_maintenance_allowed_isSet = !json[QString("MaintenanceAllowed")].isNull() && m_maintenance_allowed_isValid;
}

QString OAILogoutRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILogoutRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_maintenance_allowed_isSet) {
        obj.insert(QString("MaintenanceAllowed"), ::OpenAPI::toJsonValue(m_maintenance_allowed));
    }
    return obj;
}

bool OAILogoutRequest::isMaintenanceAllowed() const {
    return m_maintenance_allowed;
}
void OAILogoutRequest::setMaintenanceAllowed(const bool &maintenance_allowed) {
    m_maintenance_allowed = maintenance_allowed;
    m_maintenance_allowed_isSet = true;
}

bool OAILogoutRequest::is_maintenance_allowed_Set() const{
    return m_maintenance_allowed_isSet;
}

bool OAILogoutRequest::is_maintenance_allowed_Valid() const{
    return m_maintenance_allowed_isValid;
}

bool OAILogoutRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_maintenance_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILogoutRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
