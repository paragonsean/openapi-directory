# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventToNotify(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ABORT = 'Abort'
    BEGINMAINTENANCE = 'BeginMaintenance'
    CARDINSERTED = 'CardInserted'
    CARDREMOVED = 'CardRemoved'
    COMPLETED = 'Completed'
    CUSTOMERLANGUAGE = 'CustomerLanguage'
    ENDMAINTENANCE = 'EndMaintenance'
    INITIALISED = 'Initialised'
    KEYPRESSED = 'KeyPressed'
    OUTOFORDER = 'OutOfOrder'
    REJECT = 'Reject'
    SALEADMIN = 'SaleAdmin'
    SALEWAKEUP = 'SaleWakeUp'
    SECURITYALARM = 'SecurityAlarm'
    SHUTDOWN = 'Shutdown'
    STOPASSISTANCE = 'StopAssistance'

    def __init__(self):
        """EventToNotify - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventToNotify':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventToNotify of this EventToNotify.
        """
        return util.deserialize_model(dikt, cls)
