# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ABORTED = 'Aborted'
    BUSY = 'Busy'
    CANCEL = 'Cancel'
    DEVICEOUT = 'DeviceOut'
    INPROGRESS = 'InProgress'
    INSERTEDCARD = 'InsertedCard'
    INVALIDCARD = 'InvalidCard'
    LOGGEDOUT = 'LoggedOut'
    MESSAGEFORMAT = 'MessageFormat'
    NOTALLOWED = 'NotAllowed'
    NOTFOUND = 'NotFound'
    PAYMENTRESTRICTION = 'PaymentRestriction'
    REFUSAL = 'Refusal'
    UNAVAILABLEDEVICE = 'UnavailableDevice'
    UNAVAILABLESERVICE = 'UnavailableService'
    UNREACHABLEHOST = 'UnreachableHost'
    WRONGPIN = 'WrongPIN'

    def __init__(self):
        """ErrorCondition - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorCondition of this ErrorCondition.
        """
        return util.deserialize_model(dikt, cls)
