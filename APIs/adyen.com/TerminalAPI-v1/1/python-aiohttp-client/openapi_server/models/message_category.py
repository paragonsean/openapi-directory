# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MessageCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ABORT = 'Abort'
    ADMIN = 'Admin'
    BALANCEINQUIRY = 'BalanceInquiry'
    CARDACQUISITION = 'CardAcquisition'
    CARDREADERAPDU = 'CardReaderAPDU'
    DIAGNOSIS = 'Diagnosis'
    DISPLAY = 'Display'
    ENABLESERVICE = 'EnableService'
    EVENT = 'Event'
    GETTOTALS = 'GetTotals'
    INPUT = 'Input'
    INPUTUPDATE = 'InputUpdate'
    LOGIN = 'Login'
    LOGOUT = 'Logout'
    LOYALTY = 'Loyalty'
    PAYMENT = 'Payment'
    PRINT = 'Print'
    RECONCILIATION = 'Reconciliation'
    REVERSAL = 'Reversal'
    STOREDVALUE = 'StoredValue'
    TRANSACTIONSTATUS = 'TransactionStatus'

    def __init__(self):
        """MessageCategory - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MessageCategory of this MessageCategory.
        """
        return util.deserialize_model(dikt, cls)
