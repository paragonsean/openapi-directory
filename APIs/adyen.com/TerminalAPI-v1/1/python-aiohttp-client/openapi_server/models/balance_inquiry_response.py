# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.loyalty_account_status import LoyaltyAccountStatus
from openapi_server.models.payment_account_status import PaymentAccountStatus
from openapi_server.models.payment_receipt import PaymentReceipt
from openapi_server.models.response import Response
from openapi_server import util


class BalanceInquiryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, loyalty_account_status: LoyaltyAccountStatus=None, payment_account_status: PaymentAccountStatus=None, payment_receipt: List[PaymentReceipt]=None, response: Response=None):
        """BalanceInquiryResponse - a model defined in OpenAPI

        :param loyalty_account_status: The loyalty_account_status of this BalanceInquiryResponse.
        :param payment_account_status: The payment_account_status of this BalanceInquiryResponse.
        :param payment_receipt: The payment_receipt of this BalanceInquiryResponse.
        :param response: The response of this BalanceInquiryResponse.
        """
        self.openapi_types = {
            'loyalty_account_status': LoyaltyAccountStatus,
            'payment_account_status': PaymentAccountStatus,
            'payment_receipt': List[PaymentReceipt],
            'response': Response
        }

        self.attribute_map = {
            'loyalty_account_status': 'LoyaltyAccountStatus',
            'payment_account_status': 'PaymentAccountStatus',
            'payment_receipt': 'PaymentReceipt',
            'response': 'Response'
        }

        self._loyalty_account_status = loyalty_account_status
        self._payment_account_status = payment_account_status
        self._payment_receipt = payment_receipt
        self._response = response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BalanceInquiryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BalanceInquiryResponse of this BalanceInquiryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def loyalty_account_status(self):
        """Gets the loyalty_account_status of this BalanceInquiryResponse.


        :return: The loyalty_account_status of this BalanceInquiryResponse.
        :rtype: LoyaltyAccountStatus
        """
        return self._loyalty_account_status

    @loyalty_account_status.setter
    def loyalty_account_status(self, loyalty_account_status):
        """Sets the loyalty_account_status of this BalanceInquiryResponse.


        :param loyalty_account_status: The loyalty_account_status of this BalanceInquiryResponse.
        :type loyalty_account_status: LoyaltyAccountStatus
        """

        self._loyalty_account_status = loyalty_account_status

    @property
    def payment_account_status(self):
        """Gets the payment_account_status of this BalanceInquiryResponse.


        :return: The payment_account_status of this BalanceInquiryResponse.
        :rtype: PaymentAccountStatus
        """
        return self._payment_account_status

    @payment_account_status.setter
    def payment_account_status(self, payment_account_status):
        """Sets the payment_account_status of this BalanceInquiryResponse.


        :param payment_account_status: The payment_account_status of this BalanceInquiryResponse.
        :type payment_account_status: PaymentAccountStatus
        """

        self._payment_account_status = payment_account_status

    @property
    def payment_receipt(self):
        """Gets the payment_receipt of this BalanceInquiryResponse.


        :return: The payment_receipt of this BalanceInquiryResponse.
        :rtype: List[PaymentReceipt]
        """
        return self._payment_receipt

    @payment_receipt.setter
    def payment_receipt(self, payment_receipt):
        """Sets the payment_receipt of this BalanceInquiryResponse.


        :param payment_receipt: The payment_receipt of this BalanceInquiryResponse.
        :type payment_receipt: List[PaymentReceipt]
        """

        self._payment_receipt = payment_receipt

    @property
    def response(self):
        """Gets the response of this BalanceInquiryResponse.


        :return: The response of this BalanceInquiryResponse.
        :rtype: Response
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this BalanceInquiryResponse.


        :param response: The response of this BalanceInquiryResponse.
        :type response: Response
        """
        if response is None:
            raise ValueError("Invalid value for `response`, must not be `None`")

        self._response = response
