# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TransactionType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AWARD = 'Award'
    CASHADVANCE = 'CashAdvance'
    COMPLETEDDEFFERED = 'CompletedDeffered'
    COMPLETEDRESERVATION = 'CompletedReservation'
    CREDIT = 'Credit'
    DEBIT = 'Debit'
    DECLINED = 'Declined'
    FAILED = 'Failed'
    FIRSTRESERVATION = 'FirstReservation'
    ISSUERINSTALMENT = 'IssuerInstalment'
    ONETIMERESERVATION = 'OneTimeReservation'
    REBATE = 'Rebate'
    REDEMPTION = 'Redemption'
    REVERSEAWARD = 'ReverseAward'
    REVERSECREDIT = 'ReverseCredit'
    REVERSEDEBIT = 'ReverseDebit'
    REVERSEREBATE = 'ReverseRebate'
    REVERSEREDEMPTION = 'ReverseRedemption'
    UPDATERESERVATION = 'UpdateReservation'

    def __init__(self):
        """TransactionType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransactionType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransactionType of this TransactionType.
        """
        return util.deserialize_model(dikt, cls)
