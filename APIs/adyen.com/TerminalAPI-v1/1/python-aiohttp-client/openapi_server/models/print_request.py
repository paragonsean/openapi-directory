# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.print_output import PrintOutput
from openapi_server import util


class PrintRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, print_output: PrintOutput=None):
        """PrintRequest - a model defined in OpenAPI

        :param print_output: The print_output of this PrintRequest.
        """
        self.openapi_types = {
            'print_output': PrintOutput
        }

        self.attribute_map = {
            'print_output': 'PrintOutput'
        }

        self._print_output = print_output

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrintRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrintRequest of this PrintRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def print_output(self):
        """Gets the print_output of this PrintRequest.


        :return: The print_output of this PrintRequest.
        :rtype: PrintOutput
        """
        return self._print_output

    @print_output.setter
    def print_output(self, print_output):
        """Sets the print_output of this PrintRequest.


        :param print_output: The print_output of this PrintRequest.
        :type print_output: PrintOutput
        """
        if print_output is None:
            raise ValueError("Invalid value for `print_output`, must not be `None`")

        self._print_output = print_output
