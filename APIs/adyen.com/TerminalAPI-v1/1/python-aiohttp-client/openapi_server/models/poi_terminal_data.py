# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.poi_profile import POIProfile
from openapi_server.models.terminal_environment import TerminalEnvironment
import re
from openapi_server import util


class POITerminalData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, poi_capabilities: List[str]=None, poi_profile: POIProfile=None, poi_serial_number: str=None, terminal_environment: TerminalEnvironment=None):
        """POITerminalData - a model defined in OpenAPI

        :param poi_capabilities: The poi_capabilities of this POITerminalData.
        :param poi_profile: The poi_profile of this POITerminalData.
        :param poi_serial_number: The poi_serial_number of this POITerminalData.
        :param terminal_environment: The terminal_environment of this POITerminalData.
        """
        self.openapi_types = {
            'poi_capabilities': List[str],
            'poi_profile': POIProfile,
            'poi_serial_number': str,
            'terminal_environment': TerminalEnvironment
        }

        self.attribute_map = {
            'poi_capabilities': 'POICapabilities',
            'poi_profile': 'POIProfile',
            'poi_serial_number': 'POISerialNumber',
            'terminal_environment': 'TerminalEnvironment'
        }

        self._poi_capabilities = poi_capabilities
        self._poi_profile = poi_profile
        self._poi_serial_number = poi_serial_number
        self._terminal_environment = terminal_environment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'POITerminalData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The POITerminalData of this POITerminalData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def poi_capabilities(self):
        """Gets the poi_capabilities of this POITerminalData.


        :return: The poi_capabilities of this POITerminalData.
        :rtype: List[str]
        """
        return self._poi_capabilities

    @poi_capabilities.setter
    def poi_capabilities(self, poi_capabilities):
        """Sets the poi_capabilities of this POITerminalData.


        :param poi_capabilities: The poi_capabilities of this POITerminalData.
        :type poi_capabilities: List[str]
        """
        allowed_values = ["CashHandling", "CashierDisplay", "CashierError", "CashierInput", "CustomerDisplay", "CustomerError", "CustomerInput", "EMVContactless", "ICC", "MagStripe", "PrinterDocument", "PrinterReceipt", "PrinterVoucher"]  # noqa: E501
        if not set(poi_capabilities).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `poi_capabilities` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(poi_capabilities) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._poi_capabilities = poi_capabilities

    @property
    def poi_profile(self):
        """Gets the poi_profile of this POITerminalData.


        :return: The poi_profile of this POITerminalData.
        :rtype: POIProfile
        """
        return self._poi_profile

    @poi_profile.setter
    def poi_profile(self, poi_profile):
        """Sets the poi_profile of this POITerminalData.


        :param poi_profile: The poi_profile of this POITerminalData.
        :type poi_profile: POIProfile
        """

        self._poi_profile = poi_profile

    @property
    def poi_serial_number(self):
        """Gets the poi_serial_number of this POITerminalData.


        :return: The poi_serial_number of this POITerminalData.
        :rtype: str
        """
        return self._poi_serial_number

    @poi_serial_number.setter
    def poi_serial_number(self, poi_serial_number):
        """Sets the poi_serial_number of this POITerminalData.


        :param poi_serial_number: The poi_serial_number of this POITerminalData.
        :type poi_serial_number: str
        """
        if poi_serial_number is None:
            raise ValueError("Invalid value for `poi_serial_number`, must not be `None`")
        if poi_serial_number is not None and not re.search(r'^.+$', poi_serial_number):
            raise ValueError("Invalid value for `poi_serial_number`, must be a follow pattern or equal to `/^.+$/`")

        self._poi_serial_number = poi_serial_number

    @property
    def terminal_environment(self):
        """Gets the terminal_environment of this POITerminalData.


        :return: The terminal_environment of this POITerminalData.
        :rtype: TerminalEnvironment
        """
        return self._terminal_environment

    @terminal_environment.setter
    def terminal_environment(self, terminal_environment):
        """Sets the terminal_environment of this POITerminalData.


        :param terminal_environment: The terminal_environment of this POITerminalData.
        :type terminal_environment: TerminalEnvironment
        """
        if terminal_environment is None:
            raise ValueError("Invalid value for `terminal_environment`, must not be `None`")

        self._terminal_environment = terminal_environment
