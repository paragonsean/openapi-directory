# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class SaleTerminalData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, totals_group_id: str=None):
        """SaleTerminalData - a model defined in OpenAPI

        :param totals_group_id: The totals_group_id of this SaleTerminalData.
        """
        self.openapi_types = {
            'totals_group_id': str
        }

        self.attribute_map = {
            'totals_group_id': 'TotalsGroupID'
        }

        self._totals_group_id = totals_group_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SaleTerminalData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SaleTerminalData of this SaleTerminalData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def totals_group_id(self):
        """Gets the totals_group_id of this SaleTerminalData.

        If present, default value for all transaction.

        :return: The totals_group_id of this SaleTerminalData.
        :rtype: str
        """
        return self._totals_group_id

    @totals_group_id.setter
    def totals_group_id(self, totals_group_id):
        """Sets the totals_group_id of this SaleTerminalData.

        If present, default value for all transaction.

        :param totals_group_id: The totals_group_id of this SaleTerminalData.
        :type totals_group_id: str
        """
        if totals_group_id is not None and not re.search(r'^.{1,16}$', totals_group_id):
            raise ValueError("Invalid value for `totals_group_id`, must be a follow pattern or equal to `/^.{1,16}$/`")

        self._totals_group_id = totals_group_id
