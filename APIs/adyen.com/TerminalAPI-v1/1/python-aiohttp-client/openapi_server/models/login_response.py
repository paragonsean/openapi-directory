# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.poi_system_data import POISystemData
from openapi_server.models.response import Response
from openapi_server import util


class LoginResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_order_status: bool=None, poi_system_data: POISystemData=None, response: Response=None, token_request_status: bool=None):
        """LoginResponse - a model defined in OpenAPI

        :param customer_order_status: The customer_order_status of this LoginResponse.
        :param poi_system_data: The poi_system_data of this LoginResponse.
        :param response: The response of this LoginResponse.
        :param token_request_status: The token_request_status of this LoginResponse.
        """
        self.openapi_types = {
            'customer_order_status': bool,
            'poi_system_data': POISystemData,
            'response': Response,
            'token_request_status': bool
        }

        self.attribute_map = {
            'customer_order_status': 'CustomerOrderStatus',
            'poi_system_data': 'POISystemData',
            'response': 'Response',
            'token_request_status': 'TokenRequestStatus'
        }

        self._customer_order_status = customer_order_status
        self._poi_system_data = poi_system_data
        self._response = response
        self._token_request_status = token_request_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoginResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoginResponse of this LoginResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_order_status(self):
        """Gets the customer_order_status of this LoginResponse.


        :return: The customer_order_status of this LoginResponse.
        :rtype: bool
        """
        return self._customer_order_status

    @customer_order_status.setter
    def customer_order_status(self, customer_order_status):
        """Sets the customer_order_status of this LoginResponse.


        :param customer_order_status: The customer_order_status of this LoginResponse.
        :type customer_order_status: bool
        """

        self._customer_order_status = customer_order_status

    @property
    def poi_system_data(self):
        """Gets the poi_system_data of this LoginResponse.


        :return: The poi_system_data of this LoginResponse.
        :rtype: POISystemData
        """
        return self._poi_system_data

    @poi_system_data.setter
    def poi_system_data(self, poi_system_data):
        """Sets the poi_system_data of this LoginResponse.


        :param poi_system_data: The poi_system_data of this LoginResponse.
        :type poi_system_data: POISystemData
        """

        self._poi_system_data = poi_system_data

    @property
    def response(self):
        """Gets the response of this LoginResponse.


        :return: The response of this LoginResponse.
        :rtype: Response
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this LoginResponse.


        :param response: The response of this LoginResponse.
        :type response: Response
        """
        if response is None:
            raise ValueError("Invalid value for `response`, must not be `None`")

        self._response = response

    @property
    def token_request_status(self):
        """Gets the token_request_status of this LoginResponse.


        :return: The token_request_status of this LoginResponse.
        :rtype: bool
        """
        return self._token_request_status

    @token_request_status.setter
    def token_request_status(self, token_request_status):
        """Sets the token_request_status of this LoginResponse.


        :param token_request_status: The token_request_status of this LoginResponse.
        :type token_request_status: bool
        """

        self._token_request_status = token_request_status
