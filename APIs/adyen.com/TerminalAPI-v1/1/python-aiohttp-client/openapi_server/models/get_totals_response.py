# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.response import Response
from openapi_server.models.transaction_totals import TransactionTotals
from openapi_server import util


class GetTotalsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, poi_reconciliation_id: int=None, response: Response=None, transaction_totals: List[TransactionTotals]=None):
        """GetTotalsResponse - a model defined in OpenAPI

        :param poi_reconciliation_id: The poi_reconciliation_id of this GetTotalsResponse.
        :param response: The response of this GetTotalsResponse.
        :param transaction_totals: The transaction_totals of this GetTotalsResponse.
        """
        self.openapi_types = {
            'poi_reconciliation_id': int,
            'response': Response,
            'transaction_totals': List[TransactionTotals]
        }

        self.attribute_map = {
            'poi_reconciliation_id': 'POIReconciliationID',
            'response': 'Response',
            'transaction_totals': 'TransactionTotals'
        }

        self._poi_reconciliation_id = poi_reconciliation_id
        self._response = response
        self._transaction_totals = transaction_totals

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTotalsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetTotalsResponse of this GetTotalsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def poi_reconciliation_id(self):
        """Gets the poi_reconciliation_id of this GetTotalsResponse.

        Identification of the reconciliation period between Sale and POI.

        :return: The poi_reconciliation_id of this GetTotalsResponse.
        :rtype: int
        """
        return self._poi_reconciliation_id

    @poi_reconciliation_id.setter
    def poi_reconciliation_id(self, poi_reconciliation_id):
        """Sets the poi_reconciliation_id of this GetTotalsResponse.

        Identification of the reconciliation period between Sale and POI.

        :param poi_reconciliation_id: The poi_reconciliation_id of this GetTotalsResponse.
        :type poi_reconciliation_id: int
        """
        if poi_reconciliation_id is None:
            raise ValueError("Invalid value for `poi_reconciliation_id`, must not be `None`")

        self._poi_reconciliation_id = poi_reconciliation_id

    @property
    def response(self):
        """Gets the response of this GetTotalsResponse.


        :return: The response of this GetTotalsResponse.
        :rtype: Response
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this GetTotalsResponse.


        :param response: The response of this GetTotalsResponse.
        :type response: Response
        """
        if response is None:
            raise ValueError("Invalid value for `response`, must not be `None`")

        self._response = response

    @property
    def transaction_totals(self):
        """Gets the transaction_totals of this GetTotalsResponse.


        :return: The transaction_totals of this GetTotalsResponse.
        :rtype: List[TransactionTotals]
        """
        return self._transaction_totals

    @transaction_totals.setter
    def transaction_totals(self, transaction_totals):
        """Sets the transaction_totals of this GetTotalsResponse.


        :param transaction_totals: The transaction_totals of this GetTotalsResponse.
        :type transaction_totals: List[TransactionTotals]
        """

        self._transaction_totals = transaction_totals
