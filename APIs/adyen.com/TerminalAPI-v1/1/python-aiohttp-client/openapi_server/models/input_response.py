# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_result import InputResult
from openapi_server.models.output_result import OutputResult
from openapi_server import util


class InputResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_result: InputResult=None, output_result: OutputResult=None):
        """InputResponse - a model defined in OpenAPI

        :param input_result: The input_result of this InputResponse.
        :param output_result: The output_result of this InputResponse.
        """
        self.openapi_types = {
            'input_result': InputResult,
            'output_result': OutputResult
        }

        self.attribute_map = {
            'input_result': 'InputResult',
            'output_result': 'OutputResult'
        }

        self._input_result = input_result
        self._output_result = output_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputResponse of this InputResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_result(self):
        """Gets the input_result of this InputResponse.


        :return: The input_result of this InputResponse.
        :rtype: InputResult
        """
        return self._input_result

    @input_result.setter
    def input_result(self, input_result):
        """Sets the input_result of this InputResponse.


        :param input_result: The input_result of this InputResponse.
        :type input_result: InputResult
        """
        if input_result is None:
            raise ValueError("Invalid value for `input_result`, must not be `None`")

        self._input_result = input_result

    @property
    def output_result(self):
        """Gets the output_result of this InputResponse.


        :return: The output_result of this InputResponse.
        :rtype: OutputResult
        """
        return self._output_result

    @output_result.setter
    def output_result(self, output_result):
        """Sets the output_result of this InputResponse.


        :param output_result: The output_result of this InputResponse.
        :type output_result: OutputResult
        """

        self._output_result = output_result
