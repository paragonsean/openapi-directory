# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.area_size import AreaSize
from openapi_server.models.point import Point
from openapi_server import util


class CapturedSignature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area_size: AreaSize=None, signature_point: List[Point]=None):
        """CapturedSignature - a model defined in OpenAPI

        :param area_size: The area_size of this CapturedSignature.
        :param signature_point: The signature_point of this CapturedSignature.
        """
        self.openapi_types = {
            'area_size': AreaSize,
            'signature_point': List[Point]
        }

        self.attribute_map = {
            'area_size': 'AreaSize',
            'signature_point': 'SignaturePoint'
        }

        self._area_size = area_size
        self._signature_point = signature_point

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CapturedSignature':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CapturedSignature of this CapturedSignature.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area_size(self):
        """Gets the area_size of this CapturedSignature.


        :return: The area_size of this CapturedSignature.
        :rtype: AreaSize
        """
        return self._area_size

    @area_size.setter
    def area_size(self, area_size):
        """Sets the area_size of this CapturedSignature.


        :param area_size: The area_size of this CapturedSignature.
        :type area_size: AreaSize
        """

        self._area_size = area_size

    @property
    def signature_point(self):
        """Gets the signature_point of this CapturedSignature.


        :return: The signature_point of this CapturedSignature.
        :rtype: List[Point]
        """
        return self._signature_point

    @signature_point.setter
    def signature_point(self, signature_point):
        """Sets the signature_point of this CapturedSignature.


        :param signature_point: The signature_point of this CapturedSignature.
        :type signature_point: List[Point]
        """

        self._signature_point = signature_point
