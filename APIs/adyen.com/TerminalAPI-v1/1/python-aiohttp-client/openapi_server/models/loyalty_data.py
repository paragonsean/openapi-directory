# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.loyalty_account_id import LoyaltyAccountID
from openapi_server.models.loyalty_amount import LoyaltyAmount
from openapi_server.models.transaction_id_type import TransactionIDType
from openapi_server import util


class LoyaltyData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card_acquisition_reference: TransactionIDType=None, loyalty_account_id: LoyaltyAccountID=None, loyalty_amount: LoyaltyAmount=None):
        """LoyaltyData - a model defined in OpenAPI

        :param card_acquisition_reference: The card_acquisition_reference of this LoyaltyData.
        :param loyalty_account_id: The loyalty_account_id of this LoyaltyData.
        :param loyalty_amount: The loyalty_amount of this LoyaltyData.
        """
        self.openapi_types = {
            'card_acquisition_reference': TransactionIDType,
            'loyalty_account_id': LoyaltyAccountID,
            'loyalty_amount': LoyaltyAmount
        }

        self.attribute_map = {
            'card_acquisition_reference': 'CardAcquisitionReference',
            'loyalty_account_id': 'LoyaltyAccountID',
            'loyalty_amount': 'LoyaltyAmount'
        }

        self._card_acquisition_reference = card_acquisition_reference
        self._loyalty_account_id = loyalty_account_id
        self._loyalty_amount = loyalty_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoyaltyData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoyaltyData of this LoyaltyData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card_acquisition_reference(self):
        """Gets the card_acquisition_reference of this LoyaltyData.


        :return: The card_acquisition_reference of this LoyaltyData.
        :rtype: TransactionIDType
        """
        return self._card_acquisition_reference

    @card_acquisition_reference.setter
    def card_acquisition_reference(self, card_acquisition_reference):
        """Sets the card_acquisition_reference of this LoyaltyData.


        :param card_acquisition_reference: The card_acquisition_reference of this LoyaltyData.
        :type card_acquisition_reference: TransactionIDType
        """

        self._card_acquisition_reference = card_acquisition_reference

    @property
    def loyalty_account_id(self):
        """Gets the loyalty_account_id of this LoyaltyData.


        :return: The loyalty_account_id of this LoyaltyData.
        :rtype: LoyaltyAccountID
        """
        return self._loyalty_account_id

    @loyalty_account_id.setter
    def loyalty_account_id(self, loyalty_account_id):
        """Sets the loyalty_account_id of this LoyaltyData.


        :param loyalty_account_id: The loyalty_account_id of this LoyaltyData.
        :type loyalty_account_id: LoyaltyAccountID
        """

        self._loyalty_account_id = loyalty_account_id

    @property
    def loyalty_amount(self):
        """Gets the loyalty_amount of this LoyaltyData.


        :return: The loyalty_amount of this LoyaltyData.
        :rtype: LoyaltyAmount
        """
        return self._loyalty_amount

    @loyalty_amount.setter
    def loyalty_amount(self, loyalty_amount):
        """Sets the loyalty_amount of this LoyaltyData.


        :param loyalty_amount: The loyalty_amount of this LoyaltyData.
        :type loyalty_amount: LoyaltyAmount
        """

        self._loyalty_amount = loyalty_amount
