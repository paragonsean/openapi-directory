# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UnitOfMeasure(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CASE = 'Case'
    CENTILITRE = 'Centilitre'
    CENTIMETRE = 'Centimetre'
    FOOT = 'Foot'
    GRAM = 'Gram'
    INCH = 'Inch'
    KILOGRAM = 'Kilogram'
    KILOMETRE = 'Kilometre'
    LITRE = 'Litre'
    METER = 'Meter'
    MILE = 'Mile'
    OTHER = 'Other'
    OUNCE = 'Ounce'
    PINT = 'Pint'
    POUND = 'Pound'
    QUART = 'Quart'
    UKGALLON = 'UKGallon'
    USGALLON = 'USGallon'
    YARD = 'Yard'

    def __init__(self):
        """UnitOfMeasure - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnitOfMeasure':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnitOfMeasure of this UnitOfMeasure.
        """
        return util.deserialize_model(dikt, cls)
