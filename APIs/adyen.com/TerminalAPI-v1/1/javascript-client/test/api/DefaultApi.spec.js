/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdyenTerminalApi);
  }
}(this, function(expect, AdyenTerminalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdyenTerminalApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('adminPost', function() {
      it('should call adminPost successfully', function(done) {
        //uncomment below and update the code to test adminPost
        //instance.adminPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('balanceinquiryPost', function() {
      it('should call balanceinquiryPost successfully', function(done) {
        //uncomment below and update the code to test balanceinquiryPost
        //instance.balanceinquiryPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cardacquisitionPost', function() {
      it('should call cardacquisitionPost successfully', function(done) {
        //uncomment below and update the code to test cardacquisitionPost
        //instance.cardacquisitionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cardreaderapduPost', function() {
      it('should call cardreaderapduPost successfully', function(done) {
        //uncomment below and update the code to test cardreaderapduPost
        //instance.cardreaderapduPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('diagnosisPost', function() {
      it('should call diagnosisPost successfully', function(done) {
        //uncomment below and update the code to test diagnosisPost
        //instance.diagnosisPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayPost', function() {
      it('should call displayPost successfully', function(done) {
        //uncomment below and update the code to test displayPost
        //instance.displayPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableservicePost', function() {
      it('should call enableservicePost successfully', function(done) {
        //uncomment below and update the code to test enableservicePost
        //instance.enableservicePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gettotalsPost', function() {
      it('should call gettotalsPost successfully', function(done) {
        //uncomment below and update the code to test gettotalsPost
        //instance.gettotalsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inputPost', function() {
      it('should call inputPost successfully', function(done) {
        //uncomment below and update the code to test inputPost
        //instance.inputPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loginPost', function() {
      it('should call loginPost successfully', function(done) {
        //uncomment below and update the code to test loginPost
        //instance.loginPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logoutPost', function() {
      it('should call logoutPost successfully', function(done) {
        //uncomment below and update the code to test logoutPost
        //instance.logoutPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loyaltyPost', function() {
      it('should call loyaltyPost successfully', function(done) {
        //uncomment below and update the code to test loyaltyPost
        //instance.loyaltyPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('paymentPost', function() {
      it('should call paymentPost successfully', function(done) {
        //uncomment below and update the code to test paymentPost
        //instance.paymentPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('printPost', function() {
      it('should call printPost successfully', function(done) {
        //uncomment below and update the code to test printPost
        //instance.printPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reconciliationPost', function() {
      it('should call reconciliationPost successfully', function(done) {
        //uncomment below and update the code to test reconciliationPost
        //instance.reconciliationPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reversalPost', function() {
      it('should call reversalPost successfully', function(done) {
        //uncomment below and update the code to test reversalPost
        //instance.reversalPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storedvaluePost', function() {
      it('should call storedvaluePost successfully', function(done) {
        //uncomment below and update the code to test storedvaluePost
        //instance.storedvaluePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transactionstatusPost', function() {
      it('should call transactionstatusPost successfully', function(done) {
        //uncomment below and update the code to test transactionstatusPost
        //instance.transactionstatusPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
