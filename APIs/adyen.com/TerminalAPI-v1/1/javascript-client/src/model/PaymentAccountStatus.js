/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentAcquirerData from './PaymentAcquirerData';
import PaymentInstrumentData from './PaymentInstrumentData';

/**
 * The PaymentAccountStatus model module.
 * @module model/PaymentAccountStatus
 * @version 1
 */
class PaymentAccountStatus {
    /**
     * Constructs a new <code>PaymentAccountStatus</code>.
     * @alias module:model/PaymentAccountStatus
     */
    constructor() { 
        
        PaymentAccountStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentAccountStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentAccountStatus} obj Optional instance to populate.
     * @return {module:model/PaymentAccountStatus} The populated <code>PaymentAccountStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentAccountStatus();

            if (data.hasOwnProperty('Currency')) {
                obj['Currency'] = ApiClient.convertToType(data['Currency'], 'String');
            }
            if (data.hasOwnProperty('CurrentBalance')) {
                obj['CurrentBalance'] = ApiClient.convertToType(data['CurrentBalance'], 'Number');
            }
            if (data.hasOwnProperty('PaymentAcquirerData')) {
                obj['PaymentAcquirerData'] = PaymentAcquirerData.constructFromObject(data['PaymentAcquirerData']);
            }
            if (data.hasOwnProperty('PaymentInstrumentData')) {
                obj['PaymentInstrumentData'] = PaymentInstrumentData.constructFromObject(data['PaymentInstrumentData']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentAccountStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentAccountStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Currency'] && !(typeof data['Currency'] === 'string' || data['Currency'] instanceof String)) {
            throw new Error("Expected the field `Currency` to be a primitive type in the JSON string but got " + data['Currency']);
        }
        // validate the optional field `PaymentAcquirerData`
        if (data['PaymentAcquirerData']) { // data not null
          PaymentAcquirerData.validateJSON(data['PaymentAcquirerData']);
        }
        // validate the optional field `PaymentInstrumentData`
        if (data['PaymentInstrumentData']) { // data not null
          PaymentInstrumentData.validateJSON(data['PaymentInstrumentData']);
        }

        return true;
    }


}



/**
 * @member {String} Currency
 */
PaymentAccountStatus.prototype['Currency'] = undefined;

/**
 * @member {Number} CurrentBalance
 */
PaymentAccountStatus.prototype['CurrentBalance'] = undefined;

/**
 * @member {module:model/PaymentAcquirerData} PaymentAcquirerData
 */
PaymentAccountStatus.prototype['PaymentAcquirerData'] = undefined;

/**
 * @member {module:model/PaymentInstrumentData} PaymentInstrumentData
 */
PaymentAccountStatus.prototype['PaymentInstrumentData'] = undefined;






export default PaymentAccountStatus;

