/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SaleData from './SaleData';
import StoredValueData from './StoredValueData';

/**
 * The StoredValueRequest model module.
 * @module model/StoredValueRequest
 * @version 1
 */
class StoredValueRequest {
    /**
     * Constructs a new <code>StoredValueRequest</code>.
     * It conveys Information related to the Stored Value transaction to process. Content of the Stored Value Request message.
     * @alias module:model/StoredValueRequest
     * @param saleData {module:model/SaleData} 
     * @param storedValueData {Array.<module:model/StoredValueData>} 
     */
    constructor(saleData, storedValueData) { 
        
        StoredValueRequest.initialize(this, saleData, storedValueData);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, saleData, storedValueData) { 
        obj['SaleData'] = saleData;
        obj['StoredValueData'] = storedValueData;
    }

    /**
     * Constructs a <code>StoredValueRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StoredValueRequest} obj Optional instance to populate.
     * @return {module:model/StoredValueRequest} The populated <code>StoredValueRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoredValueRequest();

            if (data.hasOwnProperty('CustomerLanguage')) {
                obj['CustomerLanguage'] = ApiClient.convertToType(data['CustomerLanguage'], 'String');
            }
            if (data.hasOwnProperty('SaleData')) {
                obj['SaleData'] = SaleData.constructFromObject(data['SaleData']);
            }
            if (data.hasOwnProperty('StoredValueData')) {
                obj['StoredValueData'] = ApiClient.convertToType(data['StoredValueData'], [StoredValueData]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StoredValueRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StoredValueRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StoredValueRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['CustomerLanguage'] && !(typeof data['CustomerLanguage'] === 'string' || data['CustomerLanguage'] instanceof String)) {
            throw new Error("Expected the field `CustomerLanguage` to be a primitive type in the JSON string but got " + data['CustomerLanguage']);
        }
        // validate the optional field `SaleData`
        if (data['SaleData']) { // data not null
          SaleData.validateJSON(data['SaleData']);
        }
        if (data['StoredValueData']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['StoredValueData'])) {
                throw new Error("Expected the field `StoredValueData` to be an array in the JSON data but got " + data['StoredValueData']);
            }
            // validate the optional field `StoredValueData` (array)
            for (const item of data['StoredValueData']) {
                StoredValueData.validateJSON(item);
            };
        }

        return true;
    }


}

StoredValueRequest.RequiredProperties = ["SaleData", "StoredValueData"];

/**
 * If the language is selected by the Sale System before the request to the POI.
 * @member {String} CustomerLanguage
 */
StoredValueRequest.prototype['CustomerLanguage'] = undefined;

/**
 * @member {module:model/SaleData} SaleData
 */
StoredValueRequest.prototype['SaleData'] = undefined;

/**
 * @member {Array.<module:model/StoredValueData>} StoredValueData
 */
StoredValueRequest.prototype['StoredValueData'] = undefined;






export default StoredValueRequest;

