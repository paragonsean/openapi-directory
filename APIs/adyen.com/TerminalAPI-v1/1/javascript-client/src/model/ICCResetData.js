/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ICCResetData model module.
 * @module model/ICCResetData
 * @version 1
 */
class ICCResetData {
    /**
     * Constructs a new <code>ICCResetData</code>.
     * @alias module:model/ICCResetData
     */
    constructor() { 
        
        ICCResetData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ICCResetData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ICCResetData} obj Optional instance to populate.
     * @return {module:model/ICCResetData} The populated <code>ICCResetData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ICCResetData();

            if (data.hasOwnProperty('ATRValue')) {
                obj['ATRValue'] = ApiClient.convertToType(data['ATRValue'], 'String');
            }
            if (data.hasOwnProperty('CardStatusWords')) {
                obj['CardStatusWords'] = ApiClient.convertToType(data['CardStatusWords'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ICCResetData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ICCResetData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ATRValue'] && !(typeof data['ATRValue'] === 'string' || data['ATRValue'] instanceof String)) {
            throw new Error("Expected the field `ATRValue` to be a primitive type in the JSON string but got " + data['ATRValue']);
        }
        // ensure the json data is a string
        if (data['CardStatusWords'] && !(typeof data['CardStatusWords'] === 'string' || data['CardStatusWords'] instanceof String)) {
            throw new Error("Expected the field `CardStatusWords` to be a primitive type in the JSON string but got " + data['CardStatusWords']);
        }

        return true;
    }


}



/**
 * @member {String} ATRValue
 */
ICCResetData.prototype['ATRValue'] = undefined;

/**
 * @member {String} CardStatusWords
 */
ICCResetData.prototype['CardStatusWords'] = undefined;






export default ICCResetData;

