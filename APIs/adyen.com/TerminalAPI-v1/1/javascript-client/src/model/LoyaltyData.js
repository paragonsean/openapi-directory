/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoyaltyAccountID from './LoyaltyAccountID';
import LoyaltyAmount from './LoyaltyAmount';
import TransactionIDType from './TransactionIDType';

/**
 * The LoyaltyData model module.
 * @module model/LoyaltyData
 * @version 1
 */
class LoyaltyData {
    /**
     * Constructs a new <code>LoyaltyData</code>.
     * In the Payment, Loyalty or Balance Inquiry Request message, it allows the Sale Terminal to send the identification of the loyalty account or an awarded amount or an amount to redeem to the loyalty account. Data related to a Loyalty program or account.
     * @alias module:model/LoyaltyData
     */
    constructor() { 
        
        LoyaltyData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoyaltyData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyData} obj Optional instance to populate.
     * @return {module:model/LoyaltyData} The populated <code>LoyaltyData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyData();

            if (data.hasOwnProperty('CardAcquisitionReference')) {
                obj['CardAcquisitionReference'] = TransactionIDType.constructFromObject(data['CardAcquisitionReference']);
            }
            if (data.hasOwnProperty('LoyaltyAccountID')) {
                obj['LoyaltyAccountID'] = LoyaltyAccountID.constructFromObject(data['LoyaltyAccountID']);
            }
            if (data.hasOwnProperty('LoyaltyAmount')) {
                obj['LoyaltyAmount'] = LoyaltyAmount.constructFromObject(data['LoyaltyAmount']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyData</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CardAcquisitionReference`
        if (data['CardAcquisitionReference']) { // data not null
          TransactionIDType.validateJSON(data['CardAcquisitionReference']);
        }
        // validate the optional field `LoyaltyAccountID`
        if (data['LoyaltyAccountID']) { // data not null
          LoyaltyAccountID.validateJSON(data['LoyaltyAccountID']);
        }
        // validate the optional field `LoyaltyAmount`
        if (data['LoyaltyAmount']) { // data not null
          LoyaltyAmount.validateJSON(data['LoyaltyAmount']);
        }

        return true;
    }


}



/**
 * @member {module:model/TransactionIDType} CardAcquisitionReference
 */
LoyaltyData.prototype['CardAcquisitionReference'] = undefined;

/**
 * @member {module:model/LoyaltyAccountID} LoyaltyAccountID
 */
LoyaltyData.prototype['LoyaltyAccountID'] = undefined;

/**
 * @member {module:model/LoyaltyAmount} LoyaltyAmount
 */
LoyaltyData.prototype['LoyaltyAmount'] = undefined;






export default LoyaltyData;

