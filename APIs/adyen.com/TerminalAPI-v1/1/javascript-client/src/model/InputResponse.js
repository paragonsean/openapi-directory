/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputResult from './InputResult';
import OutputResult from './OutputResult';

/**
 * The InputResponse model module.
 * @module model/InputResponse
 * @version 1
 */
class InputResponse {
    /**
     * Constructs a new <code>InputResponse</code>.
     * It conveys the result of the input or the result of the outputs, parallel to the message request, except if response not required and absent. Content of the Input Response message.
     * @alias module:model/InputResponse
     * @param inputResult {module:model/InputResult} 
     */
    constructor(inputResult) { 
        
        InputResponse.initialize(this, inputResult);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inputResult) { 
        obj['InputResult'] = inputResult;
    }

    /**
     * Constructs a <code>InputResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputResponse} obj Optional instance to populate.
     * @return {module:model/InputResponse} The populated <code>InputResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputResponse();

            if (data.hasOwnProperty('InputResult')) {
                obj['InputResult'] = InputResult.constructFromObject(data['InputResult']);
            }
            if (data.hasOwnProperty('OutputResult')) {
                obj['OutputResult'] = OutputResult.constructFromObject(data['OutputResult']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InputResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InputResult`
        if (data['InputResult']) { // data not null
          InputResult.validateJSON(data['InputResult']);
        }
        // validate the optional field `OutputResult`
        if (data['OutputResult']) { // data not null
          OutputResult.validateJSON(data['OutputResult']);
        }

        return true;
    }


}

InputResponse.RequiredProperties = ["InputResult"];

/**
 * @member {module:model/InputResult} InputResult
 */
InputResponse.prototype['InputResult'] = undefined;

/**
 * @member {module:model/OutputResult} OutputResult
 */
InputResponse.prototype['OutputResult'] = undefined;






export default InputResponse;

