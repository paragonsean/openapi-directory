/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MenuEntry from './MenuEntry';
import MessageReference from './MessageReference';
import OutputContent from './OutputContent';

/**
 * The InputUpdate model module.
 * @module model/InputUpdate
 * @version 1
 */
class InputUpdate {
    /**
     * Constructs a new <code>InputUpdate</code>.
     * Definition: Content of the Input Update message. : It conveys     update of the display of an Input request in progress.
     * @alias module:model/InputUpdate
     * @param messageReference {module:model/MessageReference} 
     * @param outputContent {module:model/OutputContent} 
     */
    constructor(messageReference, outputContent) { 
        
        InputUpdate.initialize(this, messageReference, outputContent);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, messageReference, outputContent) { 
        obj['MessageReference'] = messageReference;
        obj['OutputContent'] = outputContent;
    }

    /**
     * Constructs a <code>InputUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputUpdate} obj Optional instance to populate.
     * @return {module:model/InputUpdate} The populated <code>InputUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputUpdate();

            if (data.hasOwnProperty('MaxDecimalLength')) {
                obj['MaxDecimalLength'] = ApiClient.convertToType(data['MaxDecimalLength'], 'Number');
            }
            if (data.hasOwnProperty('MaxLength')) {
                obj['MaxLength'] = ApiClient.convertToType(data['MaxLength'], 'Number');
            }
            if (data.hasOwnProperty('MenuEntry')) {
                obj['MenuEntry'] = ApiClient.convertToType(data['MenuEntry'], [MenuEntry]);
            }
            if (data.hasOwnProperty('MessageReference')) {
                obj['MessageReference'] = MessageReference.constructFromObject(data['MessageReference']);
            }
            if (data.hasOwnProperty('MinLength')) {
                obj['MinLength'] = ApiClient.convertToType(data['MinLength'], 'Number');
            }
            if (data.hasOwnProperty('OutputContent')) {
                obj['OutputContent'] = OutputContent.constructFromObject(data['OutputContent']);
            }
            if (data.hasOwnProperty('OutputSignature')) {
                obj['OutputSignature'] = ApiClient.convertToType(data['OutputSignature'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputUpdate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InputUpdate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['MenuEntry']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['MenuEntry'])) {
                throw new Error("Expected the field `MenuEntry` to be an array in the JSON data but got " + data['MenuEntry']);
            }
            // validate the optional field `MenuEntry` (array)
            for (const item of data['MenuEntry']) {
                MenuEntry.validateJSON(item);
            };
        }
        // validate the optional field `MessageReference`
        if (data['MessageReference']) { // data not null
          MessageReference.validateJSON(data['MessageReference']);
        }
        // validate the optional field `OutputContent`
        if (data['OutputContent']) { // data not null
          OutputContent.validateJSON(data['OutputContent']);
        }
        // ensure the json data is a string
        if (data['OutputSignature'] && !(typeof data['OutputSignature'] === 'string' || data['OutputSignature'] instanceof String)) {
            throw new Error("Expected the field `OutputSignature` to be a primitive type in the JSON string but got " + data['OutputSignature']);
        }

        return true;
    }


}

InputUpdate.RequiredProperties = ["MessageReference", "OutputContent"];

/**
 * @member {Number} MaxDecimalLength
 */
InputUpdate.prototype['MaxDecimalLength'] = undefined;

/**
 * @member {Number} MaxLength
 */
InputUpdate.prototype['MaxLength'] = undefined;

/**
 * @member {Array.<module:model/MenuEntry>} MenuEntry
 */
InputUpdate.prototype['MenuEntry'] = undefined;

/**
 * @member {module:model/MessageReference} MessageReference
 */
InputUpdate.prototype['MessageReference'] = undefined;

/**
 * @member {Number} MinLength
 */
InputUpdate.prototype['MinLength'] = undefined;

/**
 * @member {module:model/OutputContent} OutputContent
 */
InputUpdate.prototype['OutputContent'] = undefined;

/**
 * @member {String} OutputSignature
 */
InputUpdate.prototype['OutputSignature'] = undefined;






export default InputUpdate;

