/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AllowedProduct model module.
 * @module model/AllowedProduct
 * @version 1
 */
class AllowedProduct {
    /**
     * Constructs a new <code>AllowedProduct</code>.
     * Product that is payable by the payment card. Product codes that are payable by the payment card.
     * @alias module:model/AllowedProduct
     * @param productCode {Number} Product code of item purchased with the transaction.
     */
    constructor(productCode) { 
        
        AllowedProduct.initialize(this, productCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, productCode) { 
        obj['ProductCode'] = productCode;
    }

    /**
     * Constructs a <code>AllowedProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllowedProduct} obj Optional instance to populate.
     * @return {module:model/AllowedProduct} The populated <code>AllowedProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllowedProduct();

            if (data.hasOwnProperty('AdditionalProductInfo')) {
                obj['AdditionalProductInfo'] = ApiClient.convertToType(data['AdditionalProductInfo'], 'String');
            }
            if (data.hasOwnProperty('EanUpc')) {
                obj['EanUpc'] = ApiClient.convertToType(data['EanUpc'], 'Number');
            }
            if (data.hasOwnProperty('ProductCode')) {
                obj['ProductCode'] = ApiClient.convertToType(data['ProductCode'], 'Number');
            }
            if (data.hasOwnProperty('ProductLabel')) {
                obj['ProductLabel'] = ApiClient.convertToType(data['ProductLabel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AllowedProduct</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AllowedProduct</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AllowedProduct.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['AdditionalProductInfo'] && !(typeof data['AdditionalProductInfo'] === 'string' || data['AdditionalProductInfo'] instanceof String)) {
            throw new Error("Expected the field `AdditionalProductInfo` to be a primitive type in the JSON string but got " + data['AdditionalProductInfo']);
        }
        // ensure the json data is a string
        if (data['ProductLabel'] && !(typeof data['ProductLabel'] === 'string' || data['ProductLabel'] instanceof String)) {
            throw new Error("Expected the field `ProductLabel` to be a primitive type in the JSON string but got " + data['ProductLabel']);
        }

        return true;
    }


}

AllowedProduct.RequiredProperties = ["ProductCode"];

/**
 * Additionl information related to the line item.
 * @member {String} AdditionalProductInfo
 */
AllowedProduct.prototype['AdditionalProductInfo'] = undefined;

/**
 * Standard product code of item purchased with the transaction.
 * @member {Number} EanUpc
 */
AllowedProduct.prototype['EanUpc'] = undefined;

/**
 * Product code of item purchased with the transaction.
 * @member {Number} ProductCode
 */
AllowedProduct.prototype['ProductCode'] = undefined;

/**
 * Product name of an item purchased with the transaction.
 * @member {String} ProductLabel
 */
AllowedProduct.prototype['ProductLabel'] = undefined;






export default AllowedProduct;

