/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GeographicCoordinates model module.
 * @module model/GeographicCoordinates
 * @version 1
 */
class GeographicCoordinates {
    /**
     * Constructs a new <code>GeographicCoordinates</code>.
     * @alias module:model/GeographicCoordinates
     * @param latitude {String} 
     * @param longitude {String} 
     */
    constructor(latitude, longitude) { 
        
        GeographicCoordinates.initialize(this, latitude, longitude);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, latitude, longitude) { 
        obj['Latitude'] = latitude;
        obj['Longitude'] = longitude;
    }

    /**
     * Constructs a <code>GeographicCoordinates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeographicCoordinates} obj Optional instance to populate.
     * @return {module:model/GeographicCoordinates} The populated <code>GeographicCoordinates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GeographicCoordinates();

            if (data.hasOwnProperty('Latitude')) {
                obj['Latitude'] = ApiClient.convertToType(data['Latitude'], 'String');
            }
            if (data.hasOwnProperty('Longitude')) {
                obj['Longitude'] = ApiClient.convertToType(data['Longitude'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GeographicCoordinates</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GeographicCoordinates</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GeographicCoordinates.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Latitude'] && !(typeof data['Latitude'] === 'string' || data['Latitude'] instanceof String)) {
            throw new Error("Expected the field `Latitude` to be a primitive type in the JSON string but got " + data['Latitude']);
        }
        // ensure the json data is a string
        if (data['Longitude'] && !(typeof data['Longitude'] === 'string' || data['Longitude'] instanceof String)) {
            throw new Error("Expected the field `Longitude` to be a primitive type in the JSON string but got " + data['Longitude']);
        }

        return true;
    }


}

GeographicCoordinates.RequiredProperties = ["Latitude", "Longitude"];

/**
 * @member {String} Latitude
 */
GeographicCoordinates.prototype['Latitude'] = undefined;

/**
 * @member {String} Longitude
 */
GeographicCoordinates.prototype['Longitude'] = undefined;






export default GeographicCoordinates;

