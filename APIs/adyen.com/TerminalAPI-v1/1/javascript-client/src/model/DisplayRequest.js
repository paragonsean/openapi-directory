/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DisplayOutput from './DisplayOutput';

/**
 * The DisplayRequest model module.
 * @module model/DisplayRequest
 * @version 1
 */
class DisplayRequest {
    /**
     * Constructs a new <code>DisplayRequest</code>.
     * It conveys the data to display and the way to process the display. It contains the complete content to display. It might contain an operation (the DisplayOutput element) per Display Device type. Content of the Display Request message.
     * @alias module:model/DisplayRequest
     * @param displayOutput {Array.<module:model/DisplayOutput>} 
     */
    constructor(displayOutput) { 
        
        DisplayRequest.initialize(this, displayOutput);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, displayOutput) { 
        obj['DisplayOutput'] = displayOutput;
    }

    /**
     * Constructs a <code>DisplayRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DisplayRequest} obj Optional instance to populate.
     * @return {module:model/DisplayRequest} The populated <code>DisplayRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DisplayRequest();

            if (data.hasOwnProperty('DisplayOutput')) {
                obj['DisplayOutput'] = ApiClient.convertToType(data['DisplayOutput'], [DisplayOutput]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DisplayRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DisplayRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DisplayRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['DisplayOutput']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['DisplayOutput'])) {
                throw new Error("Expected the field `DisplayOutput` to be an array in the JSON data but got " + data['DisplayOutput']);
            }
            // validate the optional field `DisplayOutput` (array)
            for (const item of data['DisplayOutput']) {
                DisplayOutput.validateJSON(item);
            };
        }

        return true;
    }


}

DisplayRequest.RequiredProperties = ["DisplayOutput"];

/**
 * @member {Array.<module:model/DisplayOutput>} DisplayOutput
 */
DisplayRequest.prototype['DisplayOutput'] = undefined;






export default DisplayRequest;

