/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SaleSoftware from './SaleSoftware';
import SaleTerminalData from './SaleTerminalData';
import TokenRequestedType from './TokenRequestedType';

/**
 * The LoginRequest model module.
 * @module model/LoginRequest
 * @version 1
 */
class LoginRequest {
    /**
     * Constructs a new <code>LoginRequest</code>.
     * It conveys Information related to the session (period between a Login and the following Logout) to process. Content of the Login Request message.
     * @alias module:model/LoginRequest
     * @param dateTime {Date} Date and Time.
     * @param operatorLanguage {String} Default value for Device type displays.
     * @param saleSoftware {module:model/SaleSoftware} 
     */
    constructor(dateTime, operatorLanguage, saleSoftware) { 
        
        LoginRequest.initialize(this, dateTime, operatorLanguage, saleSoftware);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dateTime, operatorLanguage, saleSoftware) { 
        obj['DateTime'] = dateTime;
        obj['OperatorLanguage'] = operatorLanguage;
        obj['SaleSoftware'] = saleSoftware;
        obj['TrainingModeFlag'] = false;
    }

    /**
     * Constructs a <code>LoginRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoginRequest} obj Optional instance to populate.
     * @return {module:model/LoginRequest} The populated <code>LoginRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoginRequest();

            if (data.hasOwnProperty('CustomerOrderReq')) {
                obj['CustomerOrderReq'] = ApiClient.convertToType(data['CustomerOrderReq'], ['String']);
            }
            if (data.hasOwnProperty('DateTime')) {
                obj['DateTime'] = ApiClient.convertToType(data['DateTime'], 'Date');
            }
            if (data.hasOwnProperty('OperatorID')) {
                obj['OperatorID'] = ApiClient.convertToType(data['OperatorID'], 'String');
            }
            if (data.hasOwnProperty('OperatorLanguage')) {
                obj['OperatorLanguage'] = ApiClient.convertToType(data['OperatorLanguage'], 'String');
            }
            if (data.hasOwnProperty('POISerialNumber')) {
                obj['POISerialNumber'] = ApiClient.convertToType(data['POISerialNumber'], 'String');
            }
            if (data.hasOwnProperty('SaleSoftware')) {
                obj['SaleSoftware'] = SaleSoftware.constructFromObject(data['SaleSoftware']);
            }
            if (data.hasOwnProperty('SaleTerminalData')) {
                obj['SaleTerminalData'] = SaleTerminalData.constructFromObject(data['SaleTerminalData']);
            }
            if (data.hasOwnProperty('ShiftNumber')) {
                obj['ShiftNumber'] = ApiClient.convertToType(data['ShiftNumber'], 'String');
            }
            if (data.hasOwnProperty('TokenRequestedType')) {
                obj['TokenRequestedType'] = TokenRequestedType.constructFromObject(data['TokenRequestedType']);
            }
            if (data.hasOwnProperty('TrainingModeFlag')) {
                obj['TrainingModeFlag'] = ApiClient.convertToType(data['TrainingModeFlag'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoginRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoginRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LoginRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CustomerOrderReq'])) {
            throw new Error("Expected the field `CustomerOrderReq` to be an array in the JSON data but got " + data['CustomerOrderReq']);
        }
        // ensure the json data is a string
        if (data['OperatorID'] && !(typeof data['OperatorID'] === 'string' || data['OperatorID'] instanceof String)) {
            throw new Error("Expected the field `OperatorID` to be a primitive type in the JSON string but got " + data['OperatorID']);
        }
        // ensure the json data is a string
        if (data['OperatorLanguage'] && !(typeof data['OperatorLanguage'] === 'string' || data['OperatorLanguage'] instanceof String)) {
            throw new Error("Expected the field `OperatorLanguage` to be a primitive type in the JSON string but got " + data['OperatorLanguage']);
        }
        // ensure the json data is a string
        if (data['POISerialNumber'] && !(typeof data['POISerialNumber'] === 'string' || data['POISerialNumber'] instanceof String)) {
            throw new Error("Expected the field `POISerialNumber` to be a primitive type in the JSON string but got " + data['POISerialNumber']);
        }
        // validate the optional field `SaleSoftware`
        if (data['SaleSoftware']) { // data not null
          SaleSoftware.validateJSON(data['SaleSoftware']);
        }
        // validate the optional field `SaleTerminalData`
        if (data['SaleTerminalData']) { // data not null
          SaleTerminalData.validateJSON(data['SaleTerminalData']);
        }
        // ensure the json data is a string
        if (data['ShiftNumber'] && !(typeof data['ShiftNumber'] === 'string' || data['ShiftNumber'] instanceof String)) {
            throw new Error("Expected the field `ShiftNumber` to be a primitive type in the JSON string but got " + data['ShiftNumber']);
        }

        return true;
    }


}

LoginRequest.RequiredProperties = ["DateTime", "OperatorLanguage", "SaleSoftware"];

/**
 * @member {Array.<module:model/LoginRequest.CustomerOrderReqEnum>} CustomerOrderReq
 */
LoginRequest.prototype['CustomerOrderReq'] = undefined;

/**
 * Date and Time.
 * @member {Date} DateTime
 */
LoginRequest.prototype['DateTime'] = undefined;

/**
 * 4 conditions to send it: a) the Sale System wants the POI log it in the transaction log b) because of reconciliation.
 * @member {String} OperatorID
 */
LoginRequest.prototype['OperatorID'] = undefined;

/**
 * Default value for Device type displays.
 * @member {String} OperatorLanguage
 */
LoginRequest.prototype['OperatorLanguage'] = undefined;

/**
 * If the login involve a POI Terminal and not the first Login to the POI System.
 * @member {String} POISerialNumber
 */
LoginRequest.prototype['POISerialNumber'] = undefined;

/**
 * @member {module:model/SaleSoftware} SaleSoftware
 */
LoginRequest.prototype['SaleSoftware'] = undefined;

/**
 * @member {module:model/SaleTerminalData} SaleTerminalData
 */
LoginRequest.prototype['SaleTerminalData'] = undefined;

/**
 * Same as OperatorID.
 * @member {String} ShiftNumber
 */
LoginRequest.prototype['ShiftNumber'] = undefined;

/**
 * @member {module:model/TokenRequestedType} TokenRequestedType
 */
LoginRequest.prototype['TokenRequestedType'] = undefined;

/**
 * The POI does not realise the transaction with the Acquirer.
 * @member {Boolean} TrainingModeFlag
 * @default false
 */
LoginRequest.prototype['TrainingModeFlag'] = false;





/**
 * Allowed values for the <code>customerOrderReq</code> property.
 * @enum {String}
 * @readonly
 */
LoginRequest['CustomerOrderReqEnum'] = {

    /**
     * value: "Both"
     * @const
     */
    "Both": "Both",

    /**
     * value: "Closed"
     * @const
     */
    "Closed": "Closed",

    /**
     * value: "Open"
     * @const
     */
    "Open": "Open"
};



export default LoginRequest;

