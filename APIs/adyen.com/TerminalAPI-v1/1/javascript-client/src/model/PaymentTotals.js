/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransactionType from './TransactionType';

/**
 * The PaymentTotals model module.
 * @module model/PaymentTotals
 * @version 1
 */
class PaymentTotals {
    /**
     * Constructs a new <code>PaymentTotals</code>.
     * Totals of the payment transaction during the reconciliation period.
     * @alias module:model/PaymentTotals
     * @param transactionAmount {Number} Sum of amount of processed transaction during the period.
     * @param transactionCount {Number} Number of processed transaction during the period.
     * @param transactionType {module:model/TransactionType} 
     */
    constructor(transactionAmount, transactionCount, transactionType) { 
        
        PaymentTotals.initialize(this, transactionAmount, transactionCount, transactionType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, transactionAmount, transactionCount, transactionType) { 
        obj['TransactionAmount'] = transactionAmount;
        obj['TransactionCount'] = transactionCount;
        obj['TransactionType'] = transactionType;
    }

    /**
     * Constructs a <code>PaymentTotals</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentTotals} obj Optional instance to populate.
     * @return {module:model/PaymentTotals} The populated <code>PaymentTotals</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentTotals();

            if (data.hasOwnProperty('TransactionAmount')) {
                obj['TransactionAmount'] = ApiClient.convertToType(data['TransactionAmount'], 'Number');
            }
            if (data.hasOwnProperty('TransactionCount')) {
                obj['TransactionCount'] = ApiClient.convertToType(data['TransactionCount'], 'Number');
            }
            if (data.hasOwnProperty('TransactionType')) {
                obj['TransactionType'] = TransactionType.constructFromObject(data['TransactionType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentTotals</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentTotals</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentTotals.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

PaymentTotals.RequiredProperties = ["TransactionAmount", "TransactionCount", "TransactionType"];

/**
 * Sum of amount of processed transaction during the period.
 * @member {Number} TransactionAmount
 */
PaymentTotals.prototype['TransactionAmount'] = undefined;

/**
 * Number of processed transaction during the period.
 * @member {Number} TransactionCount
 */
PaymentTotals.prototype['TransactionCount'] = undefined;

/**
 * @member {module:model/TransactionType} TransactionType
 */
PaymentTotals.prototype['TransactionType'] = undefined;






export default PaymentTotals;

