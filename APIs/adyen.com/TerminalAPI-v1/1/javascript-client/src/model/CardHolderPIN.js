/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PINFormat from './PINFormat';

/**
 * The CardHolderPIN model module.
 * @module model/CardHolderPIN
 * @version 1
 */
class CardHolderPIN {
    /**
     * Constructs a new <code>CardHolderPIN</code>.
     * @alias module:model/CardHolderPIN
     * @param encrPINBlock {String} 
     * @param pINFormat {module:model/PINFormat} 
     */
    constructor(encrPINBlock, pINFormat) { 
        
        CardHolderPIN.initialize(this, encrPINBlock, pINFormat);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, encrPINBlock, pINFormat) { 
        obj['EncrPINBlock'] = encrPINBlock;
        obj['PINFormat'] = pINFormat;
    }

    /**
     * Constructs a <code>CardHolderPIN</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CardHolderPIN} obj Optional instance to populate.
     * @return {module:model/CardHolderPIN} The populated <code>CardHolderPIN</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CardHolderPIN();

            if (data.hasOwnProperty('AdditionalInput')) {
                obj['AdditionalInput'] = ApiClient.convertToType(data['AdditionalInput'], 'String');
            }
            if (data.hasOwnProperty('EncrPINBlock')) {
                obj['EncrPINBlock'] = ApiClient.convertToType(data['EncrPINBlock'], 'String');
            }
            if (data.hasOwnProperty('PINFormat')) {
                obj['PINFormat'] = PINFormat.constructFromObject(data['PINFormat']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CardHolderPIN</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CardHolderPIN</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CardHolderPIN.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['AdditionalInput'] && !(typeof data['AdditionalInput'] === 'string' || data['AdditionalInput'] instanceof String)) {
            throw new Error("Expected the field `AdditionalInput` to be a primitive type in the JSON string but got " + data['AdditionalInput']);
        }
        // ensure the json data is a string
        if (data['EncrPINBlock'] && !(typeof data['EncrPINBlock'] === 'string' || data['EncrPINBlock'] instanceof String)) {
            throw new Error("Expected the field `EncrPINBlock` to be a primitive type in the JSON string but got " + data['EncrPINBlock']);
        }

        return true;
    }


}

CardHolderPIN.RequiredProperties = ["EncrPINBlock", "PINFormat"];

/**
 * @member {String} AdditionalInput
 */
CardHolderPIN.prototype['AdditionalInput'] = undefined;

/**
 * @member {String} EncrPINBlock
 */
CardHolderPIN.prototype['EncrPINBlock'] = undefined;

/**
 * @member {module:model/PINFormat} PINFormat
 */
CardHolderPIN.prototype['PINFormat'] = undefined;






export default CardHolderPIN;

