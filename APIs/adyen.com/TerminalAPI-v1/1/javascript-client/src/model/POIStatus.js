/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CashHandlingDevice from './CashHandlingDevice';
import GlobalStatus from './GlobalStatus';
import PrinterStatus from './PrinterStatus';

/**
 * The POIStatus model module.
 * @module model/POIStatus
 * @version 1
 */
class POIStatus {
    /**
     * Constructs a new <code>POIStatus</code>.
     * Indicate the availability of the POI Terminal components. The data element is absent if the component is not part of the POI Terminal. State of a POI Terminal.
     * @alias module:model/POIStatus
     * @param globalStatus {module:model/GlobalStatus} 
     */
    constructor(globalStatus) { 
        
        POIStatus.initialize(this, globalStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, globalStatus) { 
        obj['GlobalStatus'] = globalStatus;
    }

    /**
     * Constructs a <code>POIStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/POIStatus} obj Optional instance to populate.
     * @return {module:model/POIStatus} The populated <code>POIStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new POIStatus();

            if (data.hasOwnProperty('CardReaderOKFlag')) {
                obj['CardReaderOKFlag'] = ApiClient.convertToType(data['CardReaderOKFlag'], 'Boolean');
            }
            if (data.hasOwnProperty('CashHandlingDevice')) {
                obj['CashHandlingDevice'] = ApiClient.convertToType(data['CashHandlingDevice'], [CashHandlingDevice]);
            }
            if (data.hasOwnProperty('CommunicationOKFlag')) {
                obj['CommunicationOKFlag'] = ApiClient.convertToType(data['CommunicationOKFlag'], 'Boolean');
            }
            if (data.hasOwnProperty('FraudPreventionFlag')) {
                obj['FraudPreventionFlag'] = ApiClient.convertToType(data['FraudPreventionFlag'], 'Boolean');
            }
            if (data.hasOwnProperty('GlobalStatus')) {
                obj['GlobalStatus'] = GlobalStatus.constructFromObject(data['GlobalStatus']);
            }
            if (data.hasOwnProperty('PEDOKFlag')) {
                obj['PEDOKFlag'] = ApiClient.convertToType(data['PEDOKFlag'], 'Boolean');
            }
            if (data.hasOwnProperty('PrinterStatus')) {
                obj['PrinterStatus'] = PrinterStatus.constructFromObject(data['PrinterStatus']);
            }
            if (data.hasOwnProperty('SecurityOKFlag')) {
                obj['SecurityOKFlag'] = ApiClient.convertToType(data['SecurityOKFlag'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>POIStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>POIStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of POIStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['CashHandlingDevice']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['CashHandlingDevice'])) {
                throw new Error("Expected the field `CashHandlingDevice` to be an array in the JSON data but got " + data['CashHandlingDevice']);
            }
            // validate the optional field `CashHandlingDevice` (array)
            for (const item of data['CashHandlingDevice']) {
                CashHandlingDevice.validateJSON(item);
            };
        }

        return true;
    }


}

POIStatus.RequiredProperties = ["GlobalStatus"];

/**
 * If card reader device present.
 * @member {Boolean} CardReaderOKFlag
 */
POIStatus.prototype['CardReaderOKFlag'] = undefined;

/**
 * @member {Array.<module:model/CashHandlingDevice>} CashHandlingDevice
 */
POIStatus.prototype['CashHandlingDevice'] = undefined;

/**
 * If communication infrastructure present.
 * @member {Boolean} CommunicationOKFlag
 */
POIStatus.prototype['CommunicationOKFlag'] = undefined;

/**
 * default False.
 * @member {Boolean} FraudPreventionFlag
 */
POIStatus.prototype['FraudPreventionFlag'] = undefined;

/**
 * @member {module:model/GlobalStatus} GlobalStatus
 */
POIStatus.prototype['GlobalStatus'] = undefined;

/**
 * If PED present.
 * @member {Boolean} PEDOKFlag
 */
POIStatus.prototype['PEDOKFlag'] = undefined;

/**
 * @member {module:model/PrinterStatus} PrinterStatus
 */
POIStatus.prototype['PrinterStatus'] = undefined;

/**
 * If security module present.
 * @member {Boolean} SecurityOKFlag
 */
POIStatus.prototype['SecurityOKFlag'] = undefined;






export default POIStatus;

