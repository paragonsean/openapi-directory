/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MessageCategory from './MessageCategory';

/**
 * The MessageReference model module.
 * @module model/MessageReference
 * @version 1
 */
class MessageReference {
    /**
     * Constructs a new <code>MessageReference</code>.
     * To abort a transaction in progress or to request the status of a transaction from which no response has been received.  It identifies the message header of the message request to abort or request the status. Identification of a previous POI transaction.
     * @alias module:model/MessageReference
     */
    constructor() { 
        
        MessageReference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessageReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageReference} obj Optional instance to populate.
     * @return {module:model/MessageReference} The populated <code>MessageReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageReference();

            if (data.hasOwnProperty('DeviceID')) {
                obj['DeviceID'] = ApiClient.convertToType(data['DeviceID'], 'String');
            }
            if (data.hasOwnProperty('MessageCategory')) {
                obj['MessageCategory'] = MessageCategory.constructFromObject(data['MessageCategory']);
            }
            if (data.hasOwnProperty('POIID')) {
                obj['POIID'] = ApiClient.convertToType(data['POIID'], 'String');
            }
            if (data.hasOwnProperty('SaleID')) {
                obj['SaleID'] = ApiClient.convertToType(data['SaleID'], 'String');
            }
            if (data.hasOwnProperty('ServiceID')) {
                obj['ServiceID'] = ApiClient.convertToType(data['ServiceID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessageReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessageReference</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['DeviceID'] && !(typeof data['DeviceID'] === 'string' || data['DeviceID'] instanceof String)) {
            throw new Error("Expected the field `DeviceID` to be a primitive type in the JSON string but got " + data['DeviceID']);
        }
        // ensure the json data is a string
        if (data['POIID'] && !(typeof data['POIID'] === 'string' || data['POIID'] instanceof String)) {
            throw new Error("Expected the field `POIID` to be a primitive type in the JSON string but got " + data['POIID']);
        }
        // ensure the json data is a string
        if (data['SaleID'] && !(typeof data['SaleID'] === 'string' || data['SaleID'] instanceof String)) {
            throw new Error("Expected the field `SaleID` to be a primitive type in the JSON string but got " + data['SaleID']);
        }
        // ensure the json data is a string
        if (data['ServiceID'] && !(typeof data['ServiceID'] === 'string' || data['ServiceID'] instanceof String)) {
            throw new Error("Expected the field `ServiceID` to be a primitive type in the JSON string but got " + data['ServiceID']);
        }

        return true;
    }


}



/**
 * Identification of a device message pair.
 * @member {String} DeviceID
 */
MessageReference.prototype['DeviceID'] = undefined;

/**
 * @member {module:model/MessageCategory} MessageCategory
 */
MessageReference.prototype['MessageCategory'] = undefined;

/**
 * default MessageHeader.POIID.
 * @member {String} POIID
 */
MessageReference.prototype['POIID'] = undefined;

/**
 * default MessageHeader.SaleID.
 * @member {String} SaleID
 */
MessageReference.prototype['SaleID'] = undefined;

/**
 * Identification of a message pair, which processes a transaction.
 * @member {String} ServiceID
 */
MessageReference.prototype['ServiceID'] = undefined;






export default MessageReference;

