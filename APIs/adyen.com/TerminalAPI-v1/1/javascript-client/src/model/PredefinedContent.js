/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PredefinedContent model module.
 * @module model/PredefinedContent
 * @version 1
 */
class PredefinedContent {
    /**
     * Constructs a new <code>PredefinedContent</code>.
     * It conveys Information related to the predefined message. Reference of a predefined message to display or print.
     * @alias module:model/PredefinedContent
     * @param referenceID {String} Identification of a predefined message to display or print.
     */
    constructor(referenceID) { 
        
        PredefinedContent.initialize(this, referenceID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, referenceID) { 
        obj['ReferenceID'] = referenceID;
    }

    /**
     * Constructs a <code>PredefinedContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PredefinedContent} obj Optional instance to populate.
     * @return {module:model/PredefinedContent} The populated <code>PredefinedContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PredefinedContent();

            if (data.hasOwnProperty('Language')) {
                obj['Language'] = ApiClient.convertToType(data['Language'], 'String');
            }
            if (data.hasOwnProperty('ReferenceID')) {
                obj['ReferenceID'] = ApiClient.convertToType(data['ReferenceID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PredefinedContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PredefinedContent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PredefinedContent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Language'] && !(typeof data['Language'] === 'string' || data['Language'] instanceof String)) {
            throw new Error("Expected the field `Language` to be a primitive type in the JSON string but got " + data['Language']);
        }
        // ensure the json data is a string
        if (data['ReferenceID'] && !(typeof data['ReferenceID'] === 'string' || data['ReferenceID'] instanceof String)) {
            throw new Error("Expected the field `ReferenceID` to be a primitive type in the JSON string but got " + data['ReferenceID']);
        }

        return true;
    }


}

PredefinedContent.RequiredProperties = ["ReferenceID"];

/**
 * Identification of a language.
 * @member {String} Language
 */
PredefinedContent.prototype['Language'] = undefined;

/**
 * Identification of a predefined message to display or print.
 * @member {String} ReferenceID
 */
PredefinedContent.prototype['ReferenceID'] = undefined;






export default PredefinedContent;

