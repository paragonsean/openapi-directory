/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdminRequest model module.
 * @module model/AdminRequest
 * @version 1
 */
class AdminRequest {
    /**
     * Constructs a new <code>AdminRequest</code>.
     * Empty. Content of the Custom Admin Request message.
     * @alias module:model/AdminRequest
     */
    constructor() { 
        
        AdminRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdminRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdminRequest} obj Optional instance to populate.
     * @return {module:model/AdminRequest} The populated <code>AdminRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdminRequest();

            if (data.hasOwnProperty('ServiceIdentification')) {
                obj['ServiceIdentification'] = ApiClient.convertToType(data['ServiceIdentification'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdminRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdminRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ServiceIdentification'] && !(typeof data['ServiceIdentification'] === 'string' || data['ServiceIdentification'] instanceof String)) {
            throw new Error("Expected the field `ServiceIdentification` to be a primitive type in the JSON string but got " + data['ServiceIdentification']);
        }

        return true;
    }


}



/**
 * Identification of the administrative service to process.
 * @member {String} ServiceIdentification
 */
AdminRequest.prototype['ServiceIdentification'] = undefined;






export default AdminRequest;

