/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SaleItemRebate from './SaleItemRebate';

/**
 * The Rebates model module.
 * @module model/Rebates
 * @version 1
 */
class Rebates {
    /**
     * Constructs a new <code>Rebates</code>.
     * @alias module:model/Rebates
     */
    constructor() { 
        
        Rebates.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Rebates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Rebates} obj Optional instance to populate.
     * @return {module:model/Rebates} The populated <code>Rebates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Rebates();

            if (data.hasOwnProperty('RebateLabel')) {
                obj['RebateLabel'] = ApiClient.convertToType(data['RebateLabel'], 'String');
            }
            if (data.hasOwnProperty('SaleItemRebate')) {
                obj['SaleItemRebate'] = ApiClient.convertToType(data['SaleItemRebate'], [SaleItemRebate]);
            }
            if (data.hasOwnProperty('TotalRebate')) {
                obj['TotalRebate'] = ApiClient.convertToType(data['TotalRebate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Rebates</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Rebates</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['RebateLabel'] && !(typeof data['RebateLabel'] === 'string' || data['RebateLabel'] instanceof String)) {
            throw new Error("Expected the field `RebateLabel` to be a primitive type in the JSON string but got " + data['RebateLabel']);
        }
        if (data['SaleItemRebate']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['SaleItemRebate'])) {
                throw new Error("Expected the field `SaleItemRebate` to be an array in the JSON data but got " + data['SaleItemRebate']);
            }
            // validate the optional field `SaleItemRebate` (array)
            for (const item of data['SaleItemRebate']) {
                SaleItemRebate.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} RebateLabel
 */
Rebates.prototype['RebateLabel'] = undefined;

/**
 * @member {Array.<module:model/SaleItemRebate>} SaleItemRebate
 */
Rebates.prototype['SaleItemRebate'] = undefined;

/**
 * @member {Number} TotalRebate
 */
Rebates.prototype['TotalRebate'] = undefined;






export default Rebates;

