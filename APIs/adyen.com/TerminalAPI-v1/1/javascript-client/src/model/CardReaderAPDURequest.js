/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CardReaderAPDURequest model module.
 * @module model/CardReaderAPDURequest
 * @version 1
 */
class CardReaderAPDURequest {
    /**
     * Constructs a new <code>CardReaderAPDURequest</code>.
     * It contains the APDU request to send to the chip of the card, and a possible invitation message to display on the CashierInterface or the CustomerInterface. Content of the Card Reader APDU Request message.
     * @alias module:model/CardReaderAPDURequest
     * @param aPDUClass {String} Class field of the APDU command (CLA).
     * @param aPDUInstruction {String} Instruction field of the APDU command (INS).
     * @param aPDUPar1 {String} Parameter 1 field of the APDU command (P1).
     * @param aPDUPar2 {String} Parameter 2 field of the APDU command(P2).
     */
    constructor(aPDUClass, aPDUInstruction, aPDUPar1, aPDUPar2) { 
        
        CardReaderAPDURequest.initialize(this, aPDUClass, aPDUInstruction, aPDUPar1, aPDUPar2);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, aPDUClass, aPDUInstruction, aPDUPar1, aPDUPar2) { 
        obj['APDUClass'] = aPDUClass;
        obj['APDUInstruction'] = aPDUInstruction;
        obj['APDUPar1'] = aPDUPar1;
        obj['APDUPar2'] = aPDUPar2;
    }

    /**
     * Constructs a <code>CardReaderAPDURequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CardReaderAPDURequest} obj Optional instance to populate.
     * @return {module:model/CardReaderAPDURequest} The populated <code>CardReaderAPDURequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CardReaderAPDURequest();

            if (data.hasOwnProperty('APDUClass')) {
                obj['APDUClass'] = ApiClient.convertToType(data['APDUClass'], 'String');
            }
            if (data.hasOwnProperty('APDUData')) {
                obj['APDUData'] = ApiClient.convertToType(data['APDUData'], 'String');
            }
            if (data.hasOwnProperty('APDUExpectedLength')) {
                obj['APDUExpectedLength'] = ApiClient.convertToType(data['APDUExpectedLength'], 'String');
            }
            if (data.hasOwnProperty('APDUInstruction')) {
                obj['APDUInstruction'] = ApiClient.convertToType(data['APDUInstruction'], 'String');
            }
            if (data.hasOwnProperty('APDUPar1')) {
                obj['APDUPar1'] = ApiClient.convertToType(data['APDUPar1'], 'String');
            }
            if (data.hasOwnProperty('APDUPar2')) {
                obj['APDUPar2'] = ApiClient.convertToType(data['APDUPar2'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CardReaderAPDURequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CardReaderAPDURequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CardReaderAPDURequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['APDUClass'] && !(typeof data['APDUClass'] === 'string' || data['APDUClass'] instanceof String)) {
            throw new Error("Expected the field `APDUClass` to be a primitive type in the JSON string but got " + data['APDUClass']);
        }
        // ensure the json data is a string
        if (data['APDUData'] && !(typeof data['APDUData'] === 'string' || data['APDUData'] instanceof String)) {
            throw new Error("Expected the field `APDUData` to be a primitive type in the JSON string but got " + data['APDUData']);
        }
        // ensure the json data is a string
        if (data['APDUExpectedLength'] && !(typeof data['APDUExpectedLength'] === 'string' || data['APDUExpectedLength'] instanceof String)) {
            throw new Error("Expected the field `APDUExpectedLength` to be a primitive type in the JSON string but got " + data['APDUExpectedLength']);
        }
        // ensure the json data is a string
        if (data['APDUInstruction'] && !(typeof data['APDUInstruction'] === 'string' || data['APDUInstruction'] instanceof String)) {
            throw new Error("Expected the field `APDUInstruction` to be a primitive type in the JSON string but got " + data['APDUInstruction']);
        }
        // ensure the json data is a string
        if (data['APDUPar1'] && !(typeof data['APDUPar1'] === 'string' || data['APDUPar1'] instanceof String)) {
            throw new Error("Expected the field `APDUPar1` to be a primitive type in the JSON string but got " + data['APDUPar1']);
        }
        // ensure the json data is a string
        if (data['APDUPar2'] && !(typeof data['APDUPar2'] === 'string' || data['APDUPar2'] instanceof String)) {
            throw new Error("Expected the field `APDUPar2` to be a primitive type in the JSON string but got " + data['APDUPar2']);
        }

        return true;
    }


}

CardReaderAPDURequest.RequiredProperties = ["APDUClass", "APDUInstruction", "APDUPar1", "APDUPar2"];

/**
 * Class field of the APDU command (CLA).
 * @member {String} APDUClass
 */
CardReaderAPDURequest.prototype['APDUClass'] = undefined;

/**
 * Data field of the APDU command (Lc + Data).
 * @member {String} APDUData
 */
CardReaderAPDURequest.prototype['APDUData'] = undefined;

/**
 * Expected length of the data field of the APDU response to the command (Le).
 * @member {String} APDUExpectedLength
 */
CardReaderAPDURequest.prototype['APDUExpectedLength'] = undefined;

/**
 * Instruction field of the APDU command (INS).
 * @member {String} APDUInstruction
 */
CardReaderAPDURequest.prototype['APDUInstruction'] = undefined;

/**
 * Parameter 1 field of the APDU command (P1).
 * @member {String} APDUPar1
 */
CardReaderAPDURequest.prototype['APDUPar1'] = undefined;

/**
 * Parameter 2 field of the APDU command(P2).
 * @member {String} APDUPar2
 */
CardReaderAPDURequest.prototype['APDUPar2'] = undefined;






export default CardReaderAPDURequest;

