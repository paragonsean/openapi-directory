/**
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocumentQualifier from './DocumentQualifier';
import Response from './Response';

/**
 * The PrintResponse model module.
 * @module model/PrintResponse
 * @version 1
 */
class PrintResponse {
    /**
     * Constructs a new <code>PrintResponse</code>.
     * It conveys the result of the print, parallel to the message request, except if response not required and absent. Content of the Print Response message.
     * @alias module:model/PrintResponse
     * @param documentQualifier {module:model/DocumentQualifier} 
     * @param response {module:model/Response} 
     */
    constructor(documentQualifier, response) { 
        
        PrintResponse.initialize(this, documentQualifier, response);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, documentQualifier, response) { 
        obj['DocumentQualifier'] = documentQualifier;
        obj['Response'] = response;
    }

    /**
     * Constructs a <code>PrintResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrintResponse} obj Optional instance to populate.
     * @return {module:model/PrintResponse} The populated <code>PrintResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrintResponse();

            if (data.hasOwnProperty('DocumentQualifier')) {
                obj['DocumentQualifier'] = DocumentQualifier.constructFromObject(data['DocumentQualifier']);
            }
            if (data.hasOwnProperty('Response')) {
                obj['Response'] = Response.constructFromObject(data['Response']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrintResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrintResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PrintResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Response`
        if (data['Response']) { // data not null
          Response.validateJSON(data['Response']);
        }

        return true;
    }


}

PrintResponse.RequiredProperties = ["DocumentQualifier", "Response"];

/**
 * @member {module:model/DocumentQualifier} DocumentQualifier
 */
PrintResponse.prototype['DocumentQualifier'] = undefined;

/**
 * @member {module:model/Response} Response
 */
PrintResponse.prototype['Response'] = undefined;






export default PrintResponse;

