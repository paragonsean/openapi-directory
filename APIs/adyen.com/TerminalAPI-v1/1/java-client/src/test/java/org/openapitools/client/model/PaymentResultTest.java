/*
 * Adyen Terminal API
 * The Adyen Terminal API lets you make payments, issue refunds, collect shopper information, and perform other shopper-terminal interactions using a payment terminal supplied by Adyen.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AmountsResp;
import org.openapitools.client.model.CapturedSignature;
import org.openapitools.client.model.CurrencyConversion;
import org.openapitools.client.model.Instalment;
import org.openapitools.client.model.PaymentAcquirerData;
import org.openapitools.client.model.PaymentInstrumentData;
import org.openapitools.client.model.PaymentType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PaymentResult
 */
public class PaymentResultTest {
    private final PaymentResult model = new PaymentResult();

    /**
     * Model tests for PaymentResult
     */
    @Test
    public void testPaymentResult() {
        // TODO: test PaymentResult
    }

    /**
     * Test the property 'amountsResp'
     */
    @Test
    public void amountsRespTest() {
        // TODO: test amountsResp
    }

    /**
     * Test the property 'authenticationMethod'
     */
    @Test
    public void authenticationMethodTest() {
        // TODO: test authenticationMethod
    }

    /**
     * Test the property 'capturedSignature'
     */
    @Test
    public void capturedSignatureTest() {
        // TODO: test capturedSignature
    }

    /**
     * Test the property 'currencyConversion'
     */
    @Test
    public void currencyConversionTest() {
        // TODO: test currencyConversion
    }

    /**
     * Test the property 'customerLanguage'
     */
    @Test
    public void customerLanguageTest() {
        // TODO: test customerLanguage
    }

    /**
     * Test the property 'instalment'
     */
    @Test
    public void instalmentTest() {
        // TODO: test instalment
    }

    /**
     * Test the property 'merchantOverrideFlag'
     */
    @Test
    public void merchantOverrideFlagTest() {
        // TODO: test merchantOverrideFlag
    }

    /**
     * Test the property 'onlineFlag'
     */
    @Test
    public void onlineFlagTest() {
        // TODO: test onlineFlag
    }

    /**
     * Test the property 'paymentAcquirerData'
     */
    @Test
    public void paymentAcquirerDataTest() {
        // TODO: test paymentAcquirerData
    }

    /**
     * Test the property 'paymentInstrumentData'
     */
    @Test
    public void paymentInstrumentDataTest() {
        // TODO: test paymentInstrumentData
    }

    /**
     * Test the property 'paymentType'
     */
    @Test
    public void paymentTypeTest() {
        // TODO: test paymentType
    }

    /**
     * Test the property 'protectedSignature'
     */
    @Test
    public void protectedSignatureTest() {
        // TODO: test protectedSignature
    }

    /**
     * Test the property 'validityDate'
     */
    @Test
    public void validityDateTest() {
        // TODO: test validityDate
    }

}
