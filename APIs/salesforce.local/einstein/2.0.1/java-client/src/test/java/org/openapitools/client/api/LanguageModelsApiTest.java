/*
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeletionResponse;
import org.openapitools.client.model.LearningCurveList;
import org.openapitools.client.model.Metrics;
import org.openapitools.client.model.ModelList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LanguageModelsApi
 */
@Disabled
public class LanguageModelsApiTest {

    private final LanguageModelsApi api = new LanguageModelsApi();

    /**
     * Delete a Model
     *
     * Deletes the specified model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteModelTest() throws ApiException {
        String modelId = null;
        DeletionResponse response = api.deleteModel(modelId);
        // TODO: test validations
    }

    /**
     * Get Model Learning Curve
     *
     * Returns the metrics for each epoch in a model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTrainedModelLearningCurveTest() throws ApiException {
        String modelId = null;
        String offset = null;
        String count = null;
        LearningCurveList response = api.getTrainedModelLearningCurve(modelId, offset, count);
        // TODO: test validations
    }

    /**
     * Get Model Metrics
     *
     * Returns the metrics for a model
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTrainedModelMetricsTest() throws ApiException {
        String modelId = null;
        Metrics response = api.getTrainedModelMetrics(modelId);
        // TODO: test validations
    }

    /**
     * Get All Models
     *
     * Returns all models for the specified dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTrainedModelsTest() throws ApiException {
        String datasetId = null;
        String offset = null;
        String count = null;
        ModelList response = api.getTrainedModels(datasetId, offset, count);
        // TODO: test validations
    }

}
