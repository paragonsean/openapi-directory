/*
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Dataset;
import org.openapitools.client.model.DatasetList;
import org.openapitools.client.model.DeletionResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VisionDatasetsApi
 */
@Disabled
public class VisionDatasetsApiTest {

    private final VisionDatasetsApi api = new VisionDatasetsApi();

    /**
     * Create a Dataset
     *
     * Creates a dataset and labels, if they&#39;re specified.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDatasetTest() throws ApiException {
        String labels = null;
        String name = null;
        String type = null;
        Dataset response = api.createDataset(labels, name, type);
        // TODO: test validations
    }

    /**
     * Delete a Dataset
     *
     * Deletes the specified dataset and associated labels and examples.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDataset1Test() throws ApiException {
        String datasetId = null;
        DeletionResponse response = api.deleteDataset1(datasetId);
        // TODO: test validations
    }

    /**
     * Get Deletion Status
     *
     * Returns the status of an image dataset or model deletion. When you delete a dataset or model, the deletion may not occur immediately. Use this call to find out when the deletion is complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void get1Test() throws ApiException {
        String id = null;
        DeletionResponse response = api.get1(id);
        // TODO: test validations
    }

    /**
     * Get a Dataset
     *
     * Returns a single dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDataset1Test() throws ApiException {
        String datasetId = null;
        Dataset response = api.getDataset1(datasetId);
        // TODO: test validations
    }

    /**
     * Get All Datasets
     *
     * Returns a list of datasets and their labels that were created by the current user. The response is sorted by dataset ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDatasets1Test() throws ApiException {
        String offset = null;
        String count = null;
        Boolean global = null;
        DatasetList response = api.listDatasets1(offset, count, global);
        // TODO: test validations
    }

    /**
     * Create a Dataset From a Zip File Asynchronously
     *
     * Creates a dataset, labels, and examples from the specified .zip file. The call returns immediately and continues to upload the images in the background.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadDatasetAsync1Test() throws ApiException {
        String data = null;
        String name = null;
        String path = null;
        String type = null;
        Dataset response = api.uploadDatasetAsync1(data, name, path, type);
        // TODO: test validations
    }

    /**
     * Create a Dataset From a Zip File Synchronously
     *
     * Creates a dataset, labels, and examples from the specified .zip file. The call returns after the dataset is created and all of the images are uploaded.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadDatasetSync1Test() throws ApiException {
        String data = null;
        String name = null;
        String path = null;
        String type = null;
        Dataset response = api.uploadDatasetSync1(data, name, path, type);
        // TODO: test validations
    }

}
