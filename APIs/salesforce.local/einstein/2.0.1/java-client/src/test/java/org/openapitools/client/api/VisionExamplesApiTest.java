/*
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Dataset;
import org.openapitools.client.model.Example;
import org.openapitools.client.model.ExampleList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VisionExamplesApi
 */
@Disabled
public class VisionExamplesApiTest {

    private final VisionExamplesApi api = new VisionExamplesApi();

    /**
     * Create an Example
     *
     * Adds an example with the specified label to a dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addExampleTest() throws ApiException {
        String datasetId = null;
        String data = null;
        Long labelId = null;
        String name = null;
        Example response = api.addExample(datasetId, data, labelId, name);
        // TODO: test validations
    }

    /**
     * Get All Examples
     *
     * Returns all the examples for the specified dataset. By default, returns examples created by uploading them from a .zip file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExamples1Test() throws ApiException {
        String datasetId = null;
        String offset = null;
        String count = null;
        String source = null;
        ExampleList response = api.getExamples1(datasetId, offset, count, source);
        // TODO: test validations
    }

    /**
     * Get All Examples for Label
     *
     * Returns all the examples for the specified label. Returns both uploaded examples and feedback examples.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExamplesByLabel1Test() throws ApiException {
        String labelId = null;
        String offset = null;
        String count = null;
        ExampleList response = api.getExamplesByLabel1(labelId, offset, count);
        // TODO: test validations
    }

    /**
     * Create a Feedback Example
     *
     * Adds a feedback example to the dataset associated with the specified model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void provideFeedback1Test() throws ApiException {
        String data = null;
        String expectedLabel = null;
        String modelId = null;
        String name = null;
        Example response = api.provideFeedback1(data, expectedLabel, modelId, name);
        // TODO: test validations
    }

    /**
     * Create Feedback Examples From a Zip File
     *
     * Adds feedback examples to the dataset associated with the specified object detection model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDatasetAsync1Test() throws ApiException {
        String data = null;
        String modelId = null;
        Dataset response = api.updateDatasetAsync1(data, modelId);
        // TODO: test validations
    }

    /**
     * Create Examples From a Zip File
     *
     * Adds examples from a .zip file to a dataset. You can use this call only with a dataset that was created from a .zip file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDatasetAsync2Test() throws ApiException {
        String datasetId = null;
        String data = null;
        String path = null;
        Dataset response = api.updateDatasetAsync2(datasetId, data, path);
        // TODO: test validations
    }

}
