/**
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiUsage from './model/ApiUsage';
import ApiUsageList from './model/ApiUsageList';
import Attributes from './model/Attributes';
import BoundingBox from './model/BoundingBox';
import CellLocation from './model/CellLocation';
import Dataset from './model/Dataset';
import DatasetList from './model/DatasetList';
import DeletionResponse from './model/DeletionResponse';
import DetectionResult from './model/DetectionResult';
import EntityObject from './model/EntityObject';
import Example from './model/Example';
import ExampleList from './model/ExampleList';
import GenerateAccessTokenResponse from './model/GenerateAccessTokenResponse';
import ImageClassificationRequest from './model/ImageClassificationRequest';
import ImageClassificationResponse from './model/ImageClassificationResponse';
import IntentPredictRequest from './model/IntentPredictRequest';
import IntentPredictResponse from './model/IntentPredictResponse';
import Label from './model/Label';
import LabelResult from './model/LabelResult';
import LabelSummary from './model/LabelSummary';
import LearningCurve from './model/LearningCurve';
import LearningCurveList from './model/LearningCurveList';
import Metrics from './model/Metrics';
import Model from './model/Model';
import ModelList from './model/ModelList';
import OCRPredictResponse from './model/OCRPredictResponse';
import OCRResult from './model/OCRResult';
import ObjectDetectionRequest from './model/ObjectDetectionRequest';
import ObjectDetectionResponse from './model/ObjectDetectionResponse';
import PlanData from './model/PlanData';
import PredictionErrorResponse from './model/PredictionErrorResponse';
import SentimentPredictRequest from './model/SentimentPredictRequest';
import SentimentPredictResponse from './model/SentimentPredictResponse';
import TrainResponse from './model/TrainResponse';
import V2LanguageTrainParams from './model/V2LanguageTrainParams';
import V2VisionTrainParams from './model/V2VisionTrainParams';
import AuthorizationApi from './api/AuthorizationApi';
import CheckAPIUsageApi from './api/CheckAPIUsageApi';
import LanguageDatasetsApi from './api/LanguageDatasetsApi';
import LanguageExamplesApi from './api/LanguageExamplesApi';
import LanguageModelsApi from './api/LanguageModelsApi';
import LanguagePredictionApi from './api/LanguagePredictionApi';
import LanguageTrainingApi from './api/LanguageTrainingApi';
import VisionDatasetsApi from './api/VisionDatasetsApi';
import VisionExamplesApi from './api/VisionExamplesApi';
import VisionModelsApi from './api/VisionModelsApi';
import VisionPredictionApi from './api/VisionPredictionApi';
import VisionTrainingApi from './api/VisionTrainingApi';


/**
* Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var EinsteinVisionAndEinsteinLanguage = require('index'); // See note below*.
* var xxxSvc = new EinsteinVisionAndEinsteinLanguage.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new EinsteinVisionAndEinsteinLanguage.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new EinsteinVisionAndEinsteinLanguage.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new EinsteinVisionAndEinsteinLanguage.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiUsage model constructor.
     * @property {module:model/ApiUsage}
     */
    ApiUsage,

    /**
     * The ApiUsageList model constructor.
     * @property {module:model/ApiUsageList}
     */
    ApiUsageList,

    /**
     * The Attributes model constructor.
     * @property {module:model/Attributes}
     */
    Attributes,

    /**
     * The BoundingBox model constructor.
     * @property {module:model/BoundingBox}
     */
    BoundingBox,

    /**
     * The CellLocation model constructor.
     * @property {module:model/CellLocation}
     */
    CellLocation,

    /**
     * The Dataset model constructor.
     * @property {module:model/Dataset}
     */
    Dataset,

    /**
     * The DatasetList model constructor.
     * @property {module:model/DatasetList}
     */
    DatasetList,

    /**
     * The DeletionResponse model constructor.
     * @property {module:model/DeletionResponse}
     */
    DeletionResponse,

    /**
     * The DetectionResult model constructor.
     * @property {module:model/DetectionResult}
     */
    DetectionResult,

    /**
     * The EntityObject model constructor.
     * @property {module:model/EntityObject}
     */
    EntityObject,

    /**
     * The Example model constructor.
     * @property {module:model/Example}
     */
    Example,

    /**
     * The ExampleList model constructor.
     * @property {module:model/ExampleList}
     */
    ExampleList,

    /**
     * The GenerateAccessTokenResponse model constructor.
     * @property {module:model/GenerateAccessTokenResponse}
     */
    GenerateAccessTokenResponse,

    /**
     * The ImageClassificationRequest model constructor.
     * @property {module:model/ImageClassificationRequest}
     */
    ImageClassificationRequest,

    /**
     * The ImageClassificationResponse model constructor.
     * @property {module:model/ImageClassificationResponse}
     */
    ImageClassificationResponse,

    /**
     * The IntentPredictRequest model constructor.
     * @property {module:model/IntentPredictRequest}
     */
    IntentPredictRequest,

    /**
     * The IntentPredictResponse model constructor.
     * @property {module:model/IntentPredictResponse}
     */
    IntentPredictResponse,

    /**
     * The Label model constructor.
     * @property {module:model/Label}
     */
    Label,

    /**
     * The LabelResult model constructor.
     * @property {module:model/LabelResult}
     */
    LabelResult,

    /**
     * The LabelSummary model constructor.
     * @property {module:model/LabelSummary}
     */
    LabelSummary,

    /**
     * The LearningCurve model constructor.
     * @property {module:model/LearningCurve}
     */
    LearningCurve,

    /**
     * The LearningCurveList model constructor.
     * @property {module:model/LearningCurveList}
     */
    LearningCurveList,

    /**
     * The Metrics model constructor.
     * @property {module:model/Metrics}
     */
    Metrics,

    /**
     * The Model model constructor.
     * @property {module:model/Model}
     */
    Model,

    /**
     * The ModelList model constructor.
     * @property {module:model/ModelList}
     */
    ModelList,

    /**
     * The OCRPredictResponse model constructor.
     * @property {module:model/OCRPredictResponse}
     */
    OCRPredictResponse,

    /**
     * The OCRResult model constructor.
     * @property {module:model/OCRResult}
     */
    OCRResult,

    /**
     * The ObjectDetectionRequest model constructor.
     * @property {module:model/ObjectDetectionRequest}
     */
    ObjectDetectionRequest,

    /**
     * The ObjectDetectionResponse model constructor.
     * @property {module:model/ObjectDetectionResponse}
     */
    ObjectDetectionResponse,

    /**
     * The PlanData model constructor.
     * @property {module:model/PlanData}
     */
    PlanData,

    /**
     * The PredictionErrorResponse model constructor.
     * @property {module:model/PredictionErrorResponse}
     */
    PredictionErrorResponse,

    /**
     * The SentimentPredictRequest model constructor.
     * @property {module:model/SentimentPredictRequest}
     */
    SentimentPredictRequest,

    /**
     * The SentimentPredictResponse model constructor.
     * @property {module:model/SentimentPredictResponse}
     */
    SentimentPredictResponse,

    /**
     * The TrainResponse model constructor.
     * @property {module:model/TrainResponse}
     */
    TrainResponse,

    /**
     * The V2LanguageTrainParams model constructor.
     * @property {module:model/V2LanguageTrainParams}
     */
    V2LanguageTrainParams,

    /**
     * The V2VisionTrainParams model constructor.
     * @property {module:model/V2VisionTrainParams}
     */
    V2VisionTrainParams,

    /**
    * The AuthorizationApi service constructor.
    * @property {module:api/AuthorizationApi}
    */
    AuthorizationApi,

    /**
    * The CheckAPIUsageApi service constructor.
    * @property {module:api/CheckAPIUsageApi}
    */
    CheckAPIUsageApi,

    /**
    * The LanguageDatasetsApi service constructor.
    * @property {module:api/LanguageDatasetsApi}
    */
    LanguageDatasetsApi,

    /**
    * The LanguageExamplesApi service constructor.
    * @property {module:api/LanguageExamplesApi}
    */
    LanguageExamplesApi,

    /**
    * The LanguageModelsApi service constructor.
    * @property {module:api/LanguageModelsApi}
    */
    LanguageModelsApi,

    /**
    * The LanguagePredictionApi service constructor.
    * @property {module:api/LanguagePredictionApi}
    */
    LanguagePredictionApi,

    /**
    * The LanguageTrainingApi service constructor.
    * @property {module:api/LanguageTrainingApi}
    */
    LanguageTrainingApi,

    /**
    * The VisionDatasetsApi service constructor.
    * @property {module:api/VisionDatasetsApi}
    */
    VisionDatasetsApi,

    /**
    * The VisionExamplesApi service constructor.
    * @property {module:api/VisionExamplesApi}
    */
    VisionExamplesApi,

    /**
    * The VisionModelsApi service constructor.
    * @property {module:api/VisionModelsApi}
    */
    VisionModelsApi,

    /**
    * The VisionPredictionApi service constructor.
    * @property {module:api/VisionPredictionApi}
    */
    VisionPredictionApi,

    /**
    * The VisionTrainingApi service constructor.
    * @property {module:api/VisionTrainingApi}
    */
    VisionTrainingApi
};
