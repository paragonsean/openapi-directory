/**
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DetectionResult from './DetectionResult';

/**
 * The ObjectDetectionResponse model module.
 * @module model/ObjectDetectionResponse
 * @version 2.0.1
 */
class ObjectDetectionResponse {
    /**
     * Constructs a new <code>ObjectDetectionResponse</code>.
     * @alias module:model/ObjectDetectionResponse
     */
    constructor() { 
        
        ObjectDetectionResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ObjectDetectionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjectDetectionResponse} obj Optional instance to populate.
     * @return {module:model/ObjectDetectionResponse} The populated <code>ObjectDetectionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjectDetectionResponse();

            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('probabilities')) {
                obj['probabilities'] = ApiClient.convertToType(data['probabilities'], [DetectionResult]);
            }
            if (data.hasOwnProperty('sampleId')) {
                obj['sampleId'] = ApiClient.convertToType(data['sampleId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjectDetectionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjectDetectionResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        if (data['probabilities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['probabilities'])) {
                throw new Error("Expected the field `probabilities` to be an array in the JSON data but got " + data['probabilities']);
            }
            // validate the optional field `probabilities` (array)
            for (const item of data['probabilities']) {
                DetectionResult.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sampleId'] && !(typeof data['sampleId'] === 'string' || data['sampleId'] instanceof String)) {
            throw new Error("Expected the field `sampleId` to be a primitive type in the JSON string but got " + data['sampleId']);
        }

        return true;
    }


}



/**
 * @member {String} object
 */
ObjectDetectionResponse.prototype['object'] = undefined;

/**
 * @member {Array.<module:model/DetectionResult>} probabilities
 */
ObjectDetectionResponse.prototype['probabilities'] = undefined;

/**
 * Value passed in when the prediction call was made. Returned only if the sampleId request parameter is provided.
 * @member {String} sampleId
 */
ObjectDetectionResponse.prototype['sampleId'] = undefined;






export default ObjectDetectionResponse;

