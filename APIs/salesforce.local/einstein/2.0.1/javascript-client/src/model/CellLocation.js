/**
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CellLocation model module.
 * @module model/CellLocation
 * @version 2.0.1
 */
class CellLocation {
    /**
     * Constructs a new <code>CellLocation</code>.
     * @alias module:model/CellLocation
     */
    constructor() { 
        
        CellLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CellLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CellLocation} obj Optional instance to populate.
     * @return {module:model/CellLocation} The populated <code>CellLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CellLocation();

            if (data.hasOwnProperty('colIndex')) {
                obj['colIndex'] = ApiClient.convertToType(data['colIndex'], 'Number');
            }
            if (data.hasOwnProperty('rowIndex')) {
                obj['rowIndex'] = ApiClient.convertToType(data['rowIndex'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CellLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CellLocation</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Index of the column that contains the detected text.
 * @member {Number} colIndex
 */
CellLocation.prototype['colIndex'] = undefined;

/**
 * Index of the row that contains the detected text.
 * @member {Number} rowIndex
 */
CellLocation.prototype['rowIndex'] = undefined;






export default CellLocation;

