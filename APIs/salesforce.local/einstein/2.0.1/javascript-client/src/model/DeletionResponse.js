/**
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeletionResponse model module.
 * @module model/DeletionResponse
 * @version 2.0.1
 */
class DeletionResponse {
    /**
     * Constructs a new <code>DeletionResponse</code>.
     * @alias module:model/DeletionResponse
     */
    constructor() { 
        
        DeletionResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeletionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeletionResponse} obj Optional instance to populate.
     * @return {module:model/DeletionResponse} The populated <code>DeletionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeletionResponse();

            if (data.hasOwnProperty('deletedObjectId')) {
                obj['deletedObjectId'] = ApiClient.convertToType(data['deletedObjectId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('organizationId')) {
                obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = ApiClient.convertToType(data['progress'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeletionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeletionResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deletedObjectId'] && !(typeof data['deletedObjectId'] === 'string' || data['deletedObjectId'] instanceof String)) {
            throw new Error("Expected the field `deletedObjectId` to be a primitive type in the JSON string but got " + data['deletedObjectId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['organizationId'] && !(typeof data['organizationId'] === 'string' || data['organizationId'] instanceof String)) {
            throw new Error("Expected the field `organizationId` to be a primitive type in the JSON string but got " + data['organizationId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {String} deletedObjectId
 */
DeletionResponse.prototype['deletedObjectId'] = undefined;

/**
 * @member {String} id
 */
DeletionResponse.prototype['id'] = undefined;

/**
 * @member {String} message
 */
DeletionResponse.prototype['message'] = undefined;

/**
 * @member {String} object
 */
DeletionResponse.prototype['object'] = undefined;

/**
 * @member {String} organizationId
 */
DeletionResponse.prototype['organizationId'] = undefined;

/**
 * @member {Number} progress
 */
DeletionResponse.prototype['progress'] = undefined;

/**
 * @member {module:model/DeletionResponse.StatusEnum} status
 */
DeletionResponse.prototype['status'] = undefined;

/**
 * @member {module:model/DeletionResponse.TypeEnum} type
 */
DeletionResponse.prototype['type'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
DeletionResponse['StatusEnum'] = {

    /**
     * value: "QUEUED"
     * @const
     */
    "QUEUED": "QUEUED",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "SUCCEEDED_WAITING_FOR_CACHE_REMOVAL"
     * @const
     */
    "SUCCEEDED_WAITING_FOR_CACHE_REMOVAL": "SUCCEEDED_WAITING_FOR_CACHE_REMOVAL",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "KILLED"
     * @const
     */
    "KILLED": "KILLED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "RETRY"
     * @const
     */
    "RETRY": "RETRY"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
DeletionResponse['TypeEnum'] = {

    /**
     * value: "DATASET"
     * @const
     */
    "DATASET": "DATASET",

    /**
     * value: "MODEL"
     * @const
     */
    "MODEL": "MODEL"
};



export default DeletionResponse;

