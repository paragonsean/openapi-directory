/**
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TrainResponse from '../model/TrainResponse';
import V2VisionTrainParams from '../model/V2VisionTrainParams';

/**
* VisionTraining service.
* @module api/VisionTrainingApi
* @version 2.0.1
*/
export default class VisionTrainingApi {

    /**
    * Constructs a new VisionTrainingApi. 
    * @alias module:api/VisionTrainingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getTrainStatusAndProgress1 operation.
     * @callback module:api/VisionTrainingApi~getTrainStatusAndProgress1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/TrainResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Training Status
     * Returns the status of a model's training process. Use the progress field to determine how far the training has progressed. When training completes successfully, the status is SUCCEEDED and the progress is 1.
     * @param {String} modelId 
     * @param {module:api/VisionTrainingApi~getTrainStatusAndProgress1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrainResponse}
     */
    getTrainStatusAndProgress1(modelId, callback) {
      let postBody = null;
      // verify the required parameter 'modelId' is set
      if (modelId === undefined || modelId === null) {
        throw new Error("Missing the required parameter 'modelId' when calling getTrainStatusAndProgress1");
      }

      let pathParams = {
        'modelId': modelId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TrainResponse;
      return this.apiClient.callApi(
        '/v2/vision/train/{modelId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrain1 operation.
     * @callback module:api/VisionTrainingApi~retrain1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/TrainResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrain a Dataset
     * Retrains a dataset and updates a model. Use this API call when you want to update a model and keep the model ID instead of creating a new model.
     * @param {Object} opts Optional parameters
     * @param {String} [algorithm] Specifies the algorithm used to train the dataset. Optional. Use this parameter only when training a dataset with a type of image-detection. Valid values are object-detection-v1 and retail-execution.
     * @param {Number} [epochs] Number of training iterations for the neural network. Optional.
     * @param {Number} [learningRate] Specifies how much the gradient affects the optimization of the model at each time step. Optional.
     * @param {String} [modelId] ID of the model to be updated from the training.
     * @param {module:model/V2VisionTrainParams} [trainParams] 
     * @param {module:api/VisionTrainingApi~retrain1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrainResponse}
     */
    retrain1(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'algorithm': opts['algorithm'],
        'epochs': opts['epochs'],
        'learningRate': opts['learningRate'],
        'modelId': opts['modelId'],
        'trainParams': opts['trainParams']
      };

      let authNames = ['bearer_token'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = TrainResponse;
      return this.apiClient.callApi(
        '/v2/vision/retrain', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the train1 operation.
     * @callback module:api/VisionTrainingApi~train1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/TrainResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Train a Dataset
     * Trains a dataset and creates a model.
     * @param {Object} opts Optional parameters
     * @param {String} [algorithm] Specifies the algorithm used to train the dataset. Optional. Use this parameter only when training a dataset with a type of image-detection. Valid values are object-detection-v1 and retail-execution.
     * @param {Number} [datasetId] ID of the dataset to train.
     * @param {Number} [epochs] Number of training iterations for the neural network. Optional.
     * @param {Number} [learningRate] Specifies how much the gradient affects the optimization of the model at each time step. Optional.
     * @param {String} [name] Name of the model. Maximum length is 180 characters.
     * @param {module:model/V2VisionTrainParams} [trainParams] 
     * @param {module:api/VisionTrainingApi~train1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrainResponse}
     */
    train1(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'algorithm': opts['algorithm'],
        'datasetId': opts['datasetId'],
        'epochs': opts['epochs'],
        'learningRate': opts['learningRate'],
        'name': opts['name'],
        'trainParams': opts['trainParams']
      };

      let authNames = ['bearer_token'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = TrainResponse;
      return this.apiClient.callApi(
        '/v2/vision/train', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
