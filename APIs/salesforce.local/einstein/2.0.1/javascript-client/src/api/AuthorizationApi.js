/**
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GenerateAccessTokenResponse from '../model/GenerateAccessTokenResponse';

/**
* Authorization service.
* @module api/AuthorizationApi
* @version 2.0.1
*/
export default class AuthorizationApi {

    /**
    * Constructs a new AuthorizationApi. 
    * @alias module:api/AuthorizationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the generateTokenV2 operation.
     * @callback module:api/AuthorizationApi~generateTokenV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GenerateAccessTokenResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate an OAuth Token
     * Returns an OAuth access token or a refresh token. You must pass a valid access token in the header of each API call.
     * @param {Object} opts Optional parameters
     * @param {String} [assertion] encrypted payload to identify yourself
     * @param {module:model/String} [grantType] specify the authentication method desired
     * @param {String} [refreshToken] The refresh token you created previously.
     * @param {String} [scope] set to `offline` to generate a refresh token
     * @param {Number} [validFor = 60)] Number of seconds until the access token expires. Default is 60 seconds. Maximum value is 30 days
     * @param {module:api/AuthorizationApi~generateTokenV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenerateAccessTokenResponse}
     */
    generateTokenV2(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'assertion': opts['assertion'],
        'grant_type': opts['grantType'],
        'refresh_token': opts['refreshToken'],
        'scope': opts['scope'],
        'valid_for': opts['validFor']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = GenerateAccessTokenResponse;
      return this.apiClient.callApi(
        '/v2/oauth2/token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the revokeRefreshTokenV2 operation.
     * @callback module:api/AuthorizationApi~revokeRefreshTokenV2Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Refresh Token
     * @param {String} token the token to revoke
     * @param {module:api/AuthorizationApi~revokeRefreshTokenV2Callback} callback The callback function, accepting three arguments: error, data, response
     */
    revokeRefreshTokenV2(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling revokeRefreshTokenV2");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer_token'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v2/oauth2/tokens/{token}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
