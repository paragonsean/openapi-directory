/**
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttributes.h
 *
 * Contains additional attributes related to the task parameter. If the task parameter is table, the row and column IDs for the detected text are returned. If the task parameter is contact, the detected entity tags will be returned.
 */

#ifndef OAIAttributes_H
#define OAIAttributes_H

#include <QJsonObject>

#include "OAICellLocation.h"
#include "OAIEntityObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICellLocation;
class OAIEntityObject;

class OAIAttributes : public OAIObject {
public:
    OAIAttributes();
    OAIAttributes(QString json);
    ~OAIAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICellLocation getCellLocation() const;
    void setCellLocation(const OAICellLocation &cell_location);
    bool is_cell_location_Set() const;
    bool is_cell_location_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getPageNumber() const;
    void setPageNumber(const QString &page_number);
    bool is_page_number_Set() const;
    bool is_page_number_Valid() const;

    QString getTag() const;
    void setTag(const QString &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    OAIEntityObject getValue() const;
    void setValue(const OAIEntityObject &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICellLocation m_cell_location;
    bool m_cell_location_isSet;
    bool m_cell_location_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_page_number;
    bool m_page_number_isSet;
    bool m_page_number_isValid;

    QString m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;

    OAIEntityObject m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttributes)

#endif // OAIAttributes_H
