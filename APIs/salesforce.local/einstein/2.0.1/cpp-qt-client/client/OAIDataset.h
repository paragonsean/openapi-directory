/**
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataset.h
 *
 * 
 */

#ifndef OAIDataset_H
#define OAIDataset_H

#include <QJsonObject>

#include "OAILabelSummary.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILabelSummary;

class OAIDataset : public OAIObject {
public:
    OAIDataset();
    OAIDataset(QString json);
    ~OAIDataset() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAvailable() const;
    void setAvailable(const bool &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAILabelSummary getLabelSummary() const;
    void setLabelSummary(const OAILabelSummary &label_summary);
    bool is_label_summary_Set() const;
    bool is_label_summary_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNumOfDuplicates() const;
    void setNumOfDuplicates(const qint32 &num_of_duplicates);
    bool is_num_of_duplicates_Set() const;
    bool is_num_of_duplicates_Valid() const;

    QString getObject() const;
    void setObject(const QString &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    QString getStatusMsg() const;
    void setStatusMsg(const QString &status_msg);
    bool is_status_msg_Set() const;
    bool is_status_msg_Valid() const;

    qint32 getTotalExamples() const;
    void setTotalExamples(const qint32 &total_examples);
    bool is_total_examples_Set() const;
    bool is_total_examples_Valid() const;

    qint32 getTotalLabels() const;
    void setTotalLabels(const qint32 &total_labels);
    bool is_total_labels_Set() const;
    bool is_total_labels_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_available;
    bool m_available_isSet;
    bool m_available_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAILabelSummary m_label_summary;
    bool m_label_summary_isSet;
    bool m_label_summary_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_num_of_duplicates;
    bool m_num_of_duplicates_isSet;
    bool m_num_of_duplicates_isValid;

    QString m_object;
    bool m_object_isSet;
    bool m_object_isValid;

    QString m_status_msg;
    bool m_status_msg_isSet;
    bool m_status_msg_isValid;

    qint32 m_total_examples;
    bool m_total_examples_isSet;
    bool m_total_examples_isValid;

    qint32 m_total_labels;
    bool m_total_labels_isSet;
    bool m_total_labels_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataset)

#endif // OAIDataset_H
