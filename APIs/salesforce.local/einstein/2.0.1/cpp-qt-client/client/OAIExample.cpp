/**
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExample.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExample::OAIExample(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExample::OAIExample() {
    this->initializeModel();
}

OAIExample::~OAIExample() {}

void OAIExample::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_object_isSet = false;
    m_object_isValid = false;
}

void OAIExample::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExample::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_object_isValid = ::OpenAPI::fromJsonValue(m_object, json[QString("object")]);
    m_object_isSet = !json[QString("object")].isNull() && m_object_isValid;
}

QString OAIExample::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExample::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_label.isSet()) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_object_isSet) {
        obj.insert(QString("object"), ::OpenAPI::toJsonValue(m_object));
    }
    return obj;
}

QDateTime OAIExample::getCreatedAt() const {
    return m_created_at;
}
void OAIExample::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIExample::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIExample::is_created_at_Valid() const{
    return m_created_at_isValid;
}

qint64 OAIExample::getId() const {
    return m_id;
}
void OAIExample::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIExample::is_id_Set() const{
    return m_id_isSet;
}

bool OAIExample::is_id_Valid() const{
    return m_id_isValid;
}

OAILabel OAIExample::getLabel() const {
    return m_label;
}
void OAIExample::setLabel(const OAILabel &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIExample::is_label_Set() const{
    return m_label_isSet;
}

bool OAIExample::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIExample::getLocation() const {
    return m_location;
}
void OAIExample::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIExample::is_location_Set() const{
    return m_location_isSet;
}

bool OAIExample::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIExample::getName() const {
    return m_name;
}
void OAIExample::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIExample::is_name_Set() const{
    return m_name_isSet;
}

bool OAIExample::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIExample::getObject() const {
    return m_object;
}
void OAIExample::setObject(const QString &object) {
    m_object = object;
    m_object_isSet = true;
}

bool OAIExample::is_object_Set() const{
    return m_object_isSet;
}

bool OAIExample::is_object_Valid() const{
    return m_object_isValid;
}

bool OAIExample::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExample::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
