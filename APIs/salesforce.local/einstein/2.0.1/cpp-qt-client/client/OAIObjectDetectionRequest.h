/**
 * Einstein Vision and Einstein Language
 * Provided by [Salesforce](https://www.einstein-hub.com/)  � Copyright 2000�2020 salesforce.com, inc. All rights reserved. Salesforce is a registered trademark of salesforce.com, inc., as are other names and marks. Other marks appearing herein may be trademarks of their respective owners. **Last updated:** Aug 17, 2020
 *
 * The version of the OpenAPI document: 2.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObjectDetectionRequest.h
 *
 * 
 */

#ifndef OAIObjectDetectionRequest_H
#define OAIObjectDetectionRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIObjectDetectionRequest : public OAIObject {
public:
    OAIObjectDetectionRequest();
    OAIObjectDetectionRequest(QString json);
    ~OAIObjectDetectionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModelId() const;
    void setModelId(const QString &model_id);
    bool is_model_id_Set() const;
    bool is_model_id_Valid() const;

    QString getSampleBase64Content() const;
    void setSampleBase64Content(const QString &sample_base64_content);
    bool is_sample_base64_content_Set() const;
    bool is_sample_base64_content_Valid() const;

    QString getSampleId() const;
    void setSampleId(const QString &sample_id);
    bool is_sample_id_Set() const;
    bool is_sample_id_Valid() const;

    QString getSampleLocation() const;
    void setSampleLocation(const QString &sample_location);
    bool is_sample_location_Set() const;
    bool is_sample_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model_id;
    bool m_model_id_isSet;
    bool m_model_id_isValid;

    QString m_sample_base64_content;
    bool m_sample_base64_content_isSet;
    bool m_sample_base64_content_isValid;

    QString m_sample_id;
    bool m_sample_id_isSet;
    bool m_sample_id_isValid;

    QString m_sample_location;
    bool m_sample_location_isSet;
    bool m_sample_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObjectDetectionRequest)

#endif // OAIObjectDetectionRequest_H
