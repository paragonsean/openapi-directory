# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cell_location import CellLocation
from openapi_server.models.entity_object import EntityObject
from openapi_server import util


class Attributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cell_location: CellLocation=None, language: str=None, page_number: str=None, tag: str=None, value: EntityObject=None):
        """Attributes - a model defined in OpenAPI

        :param cell_location: The cell_location of this Attributes.
        :param language: The language of this Attributes.
        :param page_number: The page_number of this Attributes.
        :param tag: The tag of this Attributes.
        :param value: The value of this Attributes.
        """
        self.openapi_types = {
            'cell_location': CellLocation,
            'language': str,
            'page_number': str,
            'tag': str,
            'value': EntityObject
        }

        self.attribute_map = {
            'cell_location': 'cellLocation',
            'language': 'language',
            'page_number': 'pageNumber',
            'tag': 'tag',
            'value': 'value'
        }

        self._cell_location = cell_location
        self._language = language
        self._page_number = page_number
        self._tag = tag
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Attributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attributes of this Attributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cell_location(self):
        """Gets the cell_location of this Attributes.


        :return: The cell_location of this Attributes.
        :rtype: CellLocation
        """
        return self._cell_location

    @cell_location.setter
    def cell_location(self, cell_location):
        """Sets the cell_location of this Attributes.


        :param cell_location: The cell_location of this Attributes.
        :type cell_location: CellLocation
        """

        self._cell_location = cell_location

    @property
    def language(self):
        """Gets the language of this Attributes.


        :return: The language of this Attributes.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this Attributes.


        :param language: The language of this Attributes.
        :type language: str
        """

        self._language = language

    @property
    def page_number(self):
        """Gets the page_number of this Attributes.


        :return: The page_number of this Attributes.
        :rtype: str
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this Attributes.


        :param page_number: The page_number of this Attributes.
        :type page_number: str
        """

        self._page_number = page_number

    @property
    def tag(self):
        """Gets the tag of this Attributes.


        :return: The tag of this Attributes.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this Attributes.


        :param tag: The tag of this Attributes.
        :type tag: str
        """

        self._tag = tag

    @property
    def value(self):
        """Gets the value of this Attributes.


        :return: The value of this Attributes.
        :rtype: EntityObject
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Attributes.


        :param value: The value of this Attributes.
        :type value: EntityObject
        """

        self._value = value
