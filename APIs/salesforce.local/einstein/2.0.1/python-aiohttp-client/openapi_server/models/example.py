# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label import Label
from openapi_server import util


class Example(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, id: int=None, label: Label=None, location: str=None, name: str=None, object: str=None):
        """Example - a model defined in OpenAPI

        :param created_at: The created_at of this Example.
        :param id: The id of this Example.
        :param label: The label of this Example.
        :param location: The location of this Example.
        :param name: The name of this Example.
        :param object: The object of this Example.
        """
        self.openapi_types = {
            'created_at': datetime,
            'id': int,
            'label': Label,
            'location': str,
            'name': str,
            'object': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'id': 'id',
            'label': 'label',
            'location': 'location',
            'name': 'name',
            'object': 'object'
        }

        self._created_at = created_at
        self._id = id
        self._label = label
        self._location = location
        self._name = name
        self._object = object

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Example':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Example of this Example.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Example.

        Date and time that the example was created.

        :return: The created_at of this Example.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Example.

        Date and time that the example was created.

        :param created_at: The created_at of this Example.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this Example.

        ID of the example.

        :return: The id of this Example.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Example.

        ID of the example.

        :param id: The id of this Example.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def label(self):
        """Gets the label of this Example.


        :return: The label of this Example.
        :rtype: Label
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this Example.


        :param label: The label of this Example.
        :type label: Label
        """

        self._label = label

    @property
    def location(self):
        """Gets the location of this Example.

        URL of the image in the dataset. This is a temporary URL that expires in 30 minutes. This URL can be used to display images that were uploaded to a dataset in a UI.

        :return: The location of this Example.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Example.

        URL of the image in the dataset. This is a temporary URL that expires in 30 minutes. This URL can be used to display images that were uploaded to a dataset in a UI.

        :param location: The location of this Example.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this Example.

        Name of the example.

        :return: The name of this Example.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Example.

        Name of the example.

        :param name: The name of this Example.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def object(self):
        """Gets the object of this Example.

        Object returned; in this case, example.

        :return: The object of this Example.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this Example.

        Object returned; in this case, example.

        :param object: The object of this Example.
        :type object: str
        """

        self._object = object
