# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BoundingBox(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_x: int=None, max_y: int=None, min_x: int=None, min_y: int=None):
        """BoundingBox - a model defined in OpenAPI

        :param max_x: The max_x of this BoundingBox.
        :param max_y: The max_y of this BoundingBox.
        :param min_x: The min_x of this BoundingBox.
        :param min_y: The min_y of this BoundingBox.
        """
        self.openapi_types = {
            'max_x': int,
            'max_y': int,
            'min_x': int,
            'min_y': int
        }

        self.attribute_map = {
            'max_x': 'maxX',
            'max_y': 'maxY',
            'min_x': 'minX',
            'min_y': 'minY'
        }

        self._max_x = max_x
        self._max_y = max_y
        self._min_x = min_x
        self._min_y = min_y

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoundingBox':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoundingBox of this BoundingBox.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_x(self):
        """Gets the max_x of this BoundingBox.

        X-coordinate of the left side of the bounding box. The origin of the coordinate system is the top-left of the image. Number of pixels from the left edge of the image.

        :return: The max_x of this BoundingBox.
        :rtype: int
        """
        return self._max_x

    @max_x.setter
    def max_x(self, max_x):
        """Sets the max_x of this BoundingBox.

        X-coordinate of the left side of the bounding box. The origin of the coordinate system is the top-left of the image. Number of pixels from the left edge of the image.

        :param max_x: The max_x of this BoundingBox.
        :type max_x: int
        """

        self._max_x = max_x

    @property
    def max_y(self):
        """Gets the max_y of this BoundingBox.

        Y-coordinate of the top of the bounding box. Number of pixels from the top edge of the image.

        :return: The max_y of this BoundingBox.
        :rtype: int
        """
        return self._max_y

    @max_y.setter
    def max_y(self, max_y):
        """Sets the max_y of this BoundingBox.

        Y-coordinate of the top of the bounding box. Number of pixels from the top edge of the image.

        :param max_y: The max_y of this BoundingBox.
        :type max_y: int
        """

        self._max_y = max_y

    @property
    def min_x(self):
        """Gets the min_x of this BoundingBox.

        X-coordinate of the right side of the bounding box. Number of pixels from the left edge of the image.

        :return: The min_x of this BoundingBox.
        :rtype: int
        """
        return self._min_x

    @min_x.setter
    def min_x(self, min_x):
        """Sets the min_x of this BoundingBox.

        X-coordinate of the right side of the bounding box. Number of pixels from the left edge of the image.

        :param min_x: The min_x of this BoundingBox.
        :type min_x: int
        """

        self._min_x = min_x

    @property
    def min_y(self):
        """Gets the min_y of this BoundingBox.

        Y-coordinate of the bottom of the bounding box. Number of pixels from the top edge of the image.

        :return: The min_y of this BoundingBox.
        :rtype: int
        """
        return self._min_y

    @min_y.setter
    def min_y(self, min_y):
        """Sets the min_y of this BoundingBox.

        Y-coordinate of the bottom of the bounding box. Number of pixels from the top edge of the image.

        :param min_y: The min_y of this BoundingBox.
        :type min_y: int
        """

        self._min_y = min_y
