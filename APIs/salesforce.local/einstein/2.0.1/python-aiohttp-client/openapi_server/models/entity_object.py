# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bounding_box import BoundingBox
from openapi_server import util


class EntityObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bounding_box: BoundingBox=None, entity: str=None, text: str=None):
        """EntityObject - a model defined in OpenAPI

        :param bounding_box: The bounding_box of this EntityObject.
        :param entity: The entity of this EntityObject.
        :param text: The text of this EntityObject.
        """
        self.openapi_types = {
            'bounding_box': BoundingBox,
            'entity': str,
            'text': str
        }

        self.attribute_map = {
            'bounding_box': 'boundingBox',
            'entity': 'entity',
            'text': 'text'
        }

        self._bounding_box = bounding_box
        self._entity = entity
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityObject of this EntityObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounding_box(self):
        """Gets the bounding_box of this EntityObject.


        :return: The bounding_box of this EntityObject.
        :rtype: BoundingBox
        """
        return self._bounding_box

    @bounding_box.setter
    def bounding_box(self, bounding_box):
        """Sets the bounding_box of this EntityObject.


        :param bounding_box: The bounding_box of this EntityObject.
        :type bounding_box: BoundingBox
        """

        self._bounding_box = bounding_box

    @property
    def entity(self):
        """Gets the entity of this EntityObject.


        :return: The entity of this EntityObject.
        :rtype: str
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this EntityObject.


        :param entity: The entity of this EntityObject.
        :type entity: str
        """

        self._entity = entity

    @property
    def text(self):
        """Gets the text of this EntityObject.


        :return: The text of this EntityObject.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this EntityObject.


        :param text: The text of this EntityObject.
        :type text: str
        """

        self._text = text
