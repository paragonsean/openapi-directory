/*
 * BikeWise API v2
 * <p>This is an API for accessing information about bicycling related incidents. You can find the source code on <a href=\"https://github.com/bikeindex/bikewise\">GitHub</a>.</p> 
 *
 * The version of the OpenAPI document: v2
 * Contact: support@bikeindex.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IncidentsApi
 */
@Disabled
public class IncidentsApiTest {

    private final IncidentsApi api = new IncidentsApi();

    /**
     * Paginated incidents matching parameters
     *
     *  &lt;p&gt;If youâ€™d like more detailed information about bike incidents, use this endpoint. For mapping, &lt;code&gt;locations&lt;/code&gt; is probably a better bet.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Notes on location searching&lt;/strong&gt;: &lt;br /&gt; - &lt;code&gt;proximity&lt;/code&gt; accepts an ip address, an address, zipcode, city, or latitude,longitude - i.e. &lt;code&gt;70.210.133.87&lt;/code&gt;, &lt;code&gt;210 NW 11th Ave, Portland, OR&lt;/code&gt;, &lt;code&gt;60647&lt;/code&gt;, &lt;code&gt;Chicago, IL&lt;/code&gt;, and &lt;code&gt;45.521728,-122.67326&lt;/code&gt; are all acceptable&lt;br /&gt; - &lt;code&gt;proximity_square&lt;/code&gt; sets the length of the sides of the square to find matches inside of. The square is centered on the location specified by &lt;code&gt;proximity&lt;/code&gt;. It defaults to 100.&lt;/p&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETVersionIncidentsFormatTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        Integer occurredBefore = null;
        Integer occurredAfter = null;
        String incidentType = null;
        String proximity = null;
        Integer proximitySquare = null;
        String query = null;
        api.gETVersionIncidentsFormat(page, perPage, occurredBefore, occurredAfter, incidentType, proximity, proximitySquare, query);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETVersionIncidentsIdFormatTest() throws ApiException {
        Integer id = null;
        api.gETVersionIncidentsIdFormat(id);
        // TODO: test validations
    }

}
