/**
 * OpenUV - Global Real-Time UV Index Forecast API
 * The missing minimalistic JSON real-time UV Index API for awesome Developers, Innovators and Smart Home Enthusiasts
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UvIndexResult model module.
 * @module model/UvIndexResult
 * @version v1
 */
class UvIndexResult {
    /**
     * Constructs a new <code>UvIndexResult</code>.
     * @alias module:model/UvIndexResult
     * @param fromTime {String} 
     * @param fromUv {Number} 
     * @param toTime {String} 
     * @param toUv {Number} 
     */
    constructor(fromTime, fromUv, toTime, toUv) { 
        
        UvIndexResult.initialize(this, fromTime, fromUv, toTime, toUv);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fromTime, fromUv, toTime, toUv) { 
        obj['from_time'] = fromTime;
        obj['from_uv'] = fromUv;
        obj['to_time'] = toTime;
        obj['to_uv'] = toUv;
    }

    /**
     * Constructs a <code>UvIndexResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UvIndexResult} obj Optional instance to populate.
     * @return {module:model/UvIndexResult} The populated <code>UvIndexResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UvIndexResult();

            if (data.hasOwnProperty('from_time')) {
                obj['from_time'] = ApiClient.convertToType(data['from_time'], 'String');
            }
            if (data.hasOwnProperty('from_uv')) {
                obj['from_uv'] = ApiClient.convertToType(data['from_uv'], 'Number');
            }
            if (data.hasOwnProperty('to_time')) {
                obj['to_time'] = ApiClient.convertToType(data['to_time'], 'String');
            }
            if (data.hasOwnProperty('to_uv')) {
                obj['to_uv'] = ApiClient.convertToType(data['to_uv'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UvIndexResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UvIndexResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UvIndexResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['from_time'] && !(typeof data['from_time'] === 'string' || data['from_time'] instanceof String)) {
            throw new Error("Expected the field `from_time` to be a primitive type in the JSON string but got " + data['from_time']);
        }
        // ensure the json data is a string
        if (data['to_time'] && !(typeof data['to_time'] === 'string' || data['to_time'] instanceof String)) {
            throw new Error("Expected the field `to_time` to be a primitive type in the JSON string but got " + data['to_time']);
        }

        return true;
    }


}

UvIndexResult.RequiredProperties = ["from_time", "from_uv", "to_time", "to_uv"];

/**
 * @member {String} from_time
 */
UvIndexResult.prototype['from_time'] = undefined;

/**
 * @member {Number} from_uv
 */
UvIndexResult.prototype['from_uv'] = undefined;

/**
 * @member {String} to_time
 */
UvIndexResult.prototype['to_time'] = undefined;

/**
 * @member {Number} to_uv
 */
UvIndexResult.prototype['to_uv'] = undefined;






export default UvIndexResult;

