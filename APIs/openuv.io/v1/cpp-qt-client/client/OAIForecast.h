/**
 * OpenUV - Global Real-Time UV Index Forecast API
 * The missing minimalistic JSON real-time UV Index API for awesome Developers, Innovators and Smart Home Enthusiasts
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForecast.h
 *
 * 
 */

#ifndef OAIForecast_H
#define OAIForecast_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIForecast : public OAIObject {
public:
    OAIForecast();
    OAIForecast(QString json);
    ~OAIForecast() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getUv() const;
    void setUv(const double &uv);
    bool is_uv_Set() const;
    bool is_uv_Valid() const;

    QString getUvTime() const;
    void setUvTime(const QString &uv_time);
    bool is_uv_time_Set() const;
    bool is_uv_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_uv;
    bool m_uv_isSet;
    bool m_uv_isValid;

    QString m_uv_time;
    bool m_uv_time_isSet;
    bool m_uv_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForecast)

#endif // OAIForecast_H
