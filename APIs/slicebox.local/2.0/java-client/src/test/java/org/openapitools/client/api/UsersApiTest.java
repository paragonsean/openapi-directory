/*
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NewUser;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserInfo;
import org.openapitools.client.model.UserPass;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * obtain information on the currently logged in user as specified by the supplied session cookie, IP address and user agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersCurrentGetTest() throws ApiException {
        UserInfo response = api.usersCurrentGet();
        // TODO: test validations
    }

    /**
     * Returns all users of slicebox
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersGetTest() throws ApiException {
        Long startindex = null;
        Long count = null;
        List<User> response = api.usersGet(startindex, count);
        // TODO: test validations
    }

    /**
     * deletes a single user based on the ID supplied
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersIdDeleteTest() throws ApiException {
        Long id = null;
        api.usersIdDelete(id);
        // TODO: test validations
    }

    /**
     * Obtain a session cookie that can be used to authenticate future API calls from the present IP address and with the present user agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersLoginPostTest() throws ApiException {
        UserPass userPass = null;
        api.usersLoginPost(userPass);
        // TODO: test validations
    }

    /**
     * Logout the current user by responding with a delete cookie header removing the session cookie for this user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersLogoutPostTest() throws ApiException {
        api.usersLogoutPost();
        // TODO: test validations
    }

    /**
     * Creates a new user. Dupicates are accepted but not added.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersPostTest() throws ApiException {
        NewUser user = null;
        User response = api.usersPost(user);
        // TODO: test validations
    }

}
