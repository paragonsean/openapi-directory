/*
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DicomPropertyValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Series
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:04:37.231084-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Series {
  public static final String SERIALIZED_NAME_BODY_PART_EXAMINED = "bodyPartExamined";
  @SerializedName(SERIALIZED_NAME_BODY_PART_EXAMINED)
  private DicomPropertyValue bodyPartExamined;

  public static final String SERIALIZED_NAME_FRAME_OF_REFERENCE_U_I_D = "frameOfReferenceUID";
  @SerializedName(SERIALIZED_NAME_FRAME_OF_REFERENCE_U_I_D)
  private DicomPropertyValue frameOfReferenceUID;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_MANUFACTURER = "manufacturer";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER)
  private DicomPropertyValue manufacturer;

  public static final String SERIALIZED_NAME_MODALITY = "modality";
  @SerializedName(SERIALIZED_NAME_MODALITY)
  private DicomPropertyValue modality;

  public static final String SERIALIZED_NAME_PROTOCOL_NAME = "protocolName";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_NAME)
  private DicomPropertyValue protocolName;

  public static final String SERIALIZED_NAME_SERIES_DATE = "seriesDate";
  @SerializedName(SERIALIZED_NAME_SERIES_DATE)
  private DicomPropertyValue seriesDate;

  public static final String SERIALIZED_NAME_SERIES_DESCRIPTION = "seriesDescription";
  @SerializedName(SERIALIZED_NAME_SERIES_DESCRIPTION)
  private DicomPropertyValue seriesDescription;

  public static final String SERIALIZED_NAME_SERIES_INSTANCE_U_I_D = "seriesInstanceUID";
  @SerializedName(SERIALIZED_NAME_SERIES_INSTANCE_U_I_D)
  private DicomPropertyValue seriesInstanceUID;

  public static final String SERIALIZED_NAME_STATION_NAME = "stationName";
  @SerializedName(SERIALIZED_NAME_STATION_NAME)
  private DicomPropertyValue stationName;

  public static final String SERIALIZED_NAME_STUDY_ID = "studyId";
  @SerializedName(SERIALIZED_NAME_STUDY_ID)
  private Long studyId;

  public Series() {
  }

  public Series bodyPartExamined(DicomPropertyValue bodyPartExamined) {
    this.bodyPartExamined = bodyPartExamined;
    return this;
  }

  /**
   * Get bodyPartExamined
   * @return bodyPartExamined
   */
  @javax.annotation.Nullable
  public DicomPropertyValue getBodyPartExamined() {
    return bodyPartExamined;
  }

  public void setBodyPartExamined(DicomPropertyValue bodyPartExamined) {
    this.bodyPartExamined = bodyPartExamined;
  }


  public Series frameOfReferenceUID(DicomPropertyValue frameOfReferenceUID) {
    this.frameOfReferenceUID = frameOfReferenceUID;
    return this;
  }

  /**
   * Get frameOfReferenceUID
   * @return frameOfReferenceUID
   */
  @javax.annotation.Nullable
  public DicomPropertyValue getFrameOfReferenceUID() {
    return frameOfReferenceUID;
  }

  public void setFrameOfReferenceUID(DicomPropertyValue frameOfReferenceUID) {
    this.frameOfReferenceUID = frameOfReferenceUID;
  }


  public Series id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  public Series manufacturer(DicomPropertyValue manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

  /**
   * Get manufacturer
   * @return manufacturer
   */
  @javax.annotation.Nullable
  public DicomPropertyValue getManufacturer() {
    return manufacturer;
  }

  public void setManufacturer(DicomPropertyValue manufacturer) {
    this.manufacturer = manufacturer;
  }


  public Series modality(DicomPropertyValue modality) {
    this.modality = modality;
    return this;
  }

  /**
   * Get modality
   * @return modality
   */
  @javax.annotation.Nullable
  public DicomPropertyValue getModality() {
    return modality;
  }

  public void setModality(DicomPropertyValue modality) {
    this.modality = modality;
  }


  public Series protocolName(DicomPropertyValue protocolName) {
    this.protocolName = protocolName;
    return this;
  }

  /**
   * Get protocolName
   * @return protocolName
   */
  @javax.annotation.Nullable
  public DicomPropertyValue getProtocolName() {
    return protocolName;
  }

  public void setProtocolName(DicomPropertyValue protocolName) {
    this.protocolName = protocolName;
  }


  public Series seriesDate(DicomPropertyValue seriesDate) {
    this.seriesDate = seriesDate;
    return this;
  }

  /**
   * Get seriesDate
   * @return seriesDate
   */
  @javax.annotation.Nullable
  public DicomPropertyValue getSeriesDate() {
    return seriesDate;
  }

  public void setSeriesDate(DicomPropertyValue seriesDate) {
    this.seriesDate = seriesDate;
  }


  public Series seriesDescription(DicomPropertyValue seriesDescription) {
    this.seriesDescription = seriesDescription;
    return this;
  }

  /**
   * Get seriesDescription
   * @return seriesDescription
   */
  @javax.annotation.Nullable
  public DicomPropertyValue getSeriesDescription() {
    return seriesDescription;
  }

  public void setSeriesDescription(DicomPropertyValue seriesDescription) {
    this.seriesDescription = seriesDescription;
  }


  public Series seriesInstanceUID(DicomPropertyValue seriesInstanceUID) {
    this.seriesInstanceUID = seriesInstanceUID;
    return this;
  }

  /**
   * Get seriesInstanceUID
   * @return seriesInstanceUID
   */
  @javax.annotation.Nullable
  public DicomPropertyValue getSeriesInstanceUID() {
    return seriesInstanceUID;
  }

  public void setSeriesInstanceUID(DicomPropertyValue seriesInstanceUID) {
    this.seriesInstanceUID = seriesInstanceUID;
  }


  public Series stationName(DicomPropertyValue stationName) {
    this.stationName = stationName;
    return this;
  }

  /**
   * Get stationName
   * @return stationName
   */
  @javax.annotation.Nullable
  public DicomPropertyValue getStationName() {
    return stationName;
  }

  public void setStationName(DicomPropertyValue stationName) {
    this.stationName = stationName;
  }


  public Series studyId(Long studyId) {
    this.studyId = studyId;
    return this;
  }

  /**
   * Get studyId
   * @return studyId
   */
  @javax.annotation.Nullable
  public Long getStudyId() {
    return studyId;
  }

  public void setStudyId(Long studyId) {
    this.studyId = studyId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Series series = (Series) o;
    return Objects.equals(this.bodyPartExamined, series.bodyPartExamined) &&
        Objects.equals(this.frameOfReferenceUID, series.frameOfReferenceUID) &&
        Objects.equals(this.id, series.id) &&
        Objects.equals(this.manufacturer, series.manufacturer) &&
        Objects.equals(this.modality, series.modality) &&
        Objects.equals(this.protocolName, series.protocolName) &&
        Objects.equals(this.seriesDate, series.seriesDate) &&
        Objects.equals(this.seriesDescription, series.seriesDescription) &&
        Objects.equals(this.seriesInstanceUID, series.seriesInstanceUID) &&
        Objects.equals(this.stationName, series.stationName) &&
        Objects.equals(this.studyId, series.studyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bodyPartExamined, frameOfReferenceUID, id, manufacturer, modality, protocolName, seriesDate, seriesDescription, seriesInstanceUID, stationName, studyId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Series {\n");
    sb.append("    bodyPartExamined: ").append(toIndentedString(bodyPartExamined)).append("\n");
    sb.append("    frameOfReferenceUID: ").append(toIndentedString(frameOfReferenceUID)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    modality: ").append(toIndentedString(modality)).append("\n");
    sb.append("    protocolName: ").append(toIndentedString(protocolName)).append("\n");
    sb.append("    seriesDate: ").append(toIndentedString(seriesDate)).append("\n");
    sb.append("    seriesDescription: ").append(toIndentedString(seriesDescription)).append("\n");
    sb.append("    seriesInstanceUID: ").append(toIndentedString(seriesInstanceUID)).append("\n");
    sb.append("    stationName: ").append(toIndentedString(stationName)).append("\n");
    sb.append("    studyId: ").append(toIndentedString(studyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bodyPartExamined");
    openapiFields.add("frameOfReferenceUID");
    openapiFields.add("id");
    openapiFields.add("manufacturer");
    openapiFields.add("modality");
    openapiFields.add("protocolName");
    openapiFields.add("seriesDate");
    openapiFields.add("seriesDescription");
    openapiFields.add("seriesInstanceUID");
    openapiFields.add("stationName");
    openapiFields.add("studyId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Series
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Series.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Series is not found in the empty JSON string", Series.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Series.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Series` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bodyPartExamined`
      if (jsonObj.get("bodyPartExamined") != null && !jsonObj.get("bodyPartExamined").isJsonNull()) {
        DicomPropertyValue.validateJsonElement(jsonObj.get("bodyPartExamined"));
      }
      // validate the optional field `frameOfReferenceUID`
      if (jsonObj.get("frameOfReferenceUID") != null && !jsonObj.get("frameOfReferenceUID").isJsonNull()) {
        DicomPropertyValue.validateJsonElement(jsonObj.get("frameOfReferenceUID"));
      }
      // validate the optional field `manufacturer`
      if (jsonObj.get("manufacturer") != null && !jsonObj.get("manufacturer").isJsonNull()) {
        DicomPropertyValue.validateJsonElement(jsonObj.get("manufacturer"));
      }
      // validate the optional field `modality`
      if (jsonObj.get("modality") != null && !jsonObj.get("modality").isJsonNull()) {
        DicomPropertyValue.validateJsonElement(jsonObj.get("modality"));
      }
      // validate the optional field `protocolName`
      if (jsonObj.get("protocolName") != null && !jsonObj.get("protocolName").isJsonNull()) {
        DicomPropertyValue.validateJsonElement(jsonObj.get("protocolName"));
      }
      // validate the optional field `seriesDate`
      if (jsonObj.get("seriesDate") != null && !jsonObj.get("seriesDate").isJsonNull()) {
        DicomPropertyValue.validateJsonElement(jsonObj.get("seriesDate"));
      }
      // validate the optional field `seriesDescription`
      if (jsonObj.get("seriesDescription") != null && !jsonObj.get("seriesDescription").isJsonNull()) {
        DicomPropertyValue.validateJsonElement(jsonObj.get("seriesDescription"));
      }
      // validate the optional field `seriesInstanceUID`
      if (jsonObj.get("seriesInstanceUID") != null && !jsonObj.get("seriesInstanceUID").isJsonNull()) {
        DicomPropertyValue.validateJsonElement(jsonObj.get("seriesInstanceUID"));
      }
      // validate the optional field `stationName`
      if (jsonObj.get("stationName") != null && !jsonObj.get("stationName").isJsonNull()) {
        DicomPropertyValue.validateJsonElement(jsonObj.get("stationName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Series.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Series' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Series> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Series.class));

       return (TypeAdapter<T>) new TypeAdapter<Series>() {
           @Override
           public void write(JsonWriter out, Series value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Series read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Series given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Series
   * @throws IOException if the JSON string is invalid with respect to Series
   */
  public static Series fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Series.class);
  }

  /**
   * Convert an instance of Series to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

