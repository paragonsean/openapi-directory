/*
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AnonymizationKey
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:04:37.231084-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AnonymizationKey {
  public static final String SERIALIZED_NAME_ANON_PATIENT_I_D = "anonPatientID";
  @SerializedName(SERIALIZED_NAME_ANON_PATIENT_I_D)
  private String anonPatientID;

  public static final String SERIALIZED_NAME_ANON_PATIENT_NAME = "anonPatientName";
  @SerializedName(SERIALIZED_NAME_ANON_PATIENT_NAME)
  private String anonPatientName;

  public static final String SERIALIZED_NAME_ANON_S_O_P_INSTANCE_U_I_D = "anonSOPInstanceUID";
  @SerializedName(SERIALIZED_NAME_ANON_S_O_P_INSTANCE_U_I_D)
  private String anonSOPInstanceUID;

  public static final String SERIALIZED_NAME_ANON_SERIES_INSTANCE_U_I_D = "anonSeriesInstanceUID";
  @SerializedName(SERIALIZED_NAME_ANON_SERIES_INSTANCE_U_I_D)
  private String anonSeriesInstanceUID;

  public static final String SERIALIZED_NAME_ANON_STUDY_INSTANCE_U_I_D = "anonStudyInstanceUID";
  @SerializedName(SERIALIZED_NAME_ANON_STUDY_INSTANCE_U_I_D)
  private String anonStudyInstanceUID;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private Long created;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_IMAGE_ID = "imageId";
  @SerializedName(SERIALIZED_NAME_IMAGE_ID)
  private Long imageId;

  public static final String SERIALIZED_NAME_PATIENT_I_D = "patientID";
  @SerializedName(SERIALIZED_NAME_PATIENT_I_D)
  private String patientID;

  public static final String SERIALIZED_NAME_PATIENT_NAME = "patientName";
  @SerializedName(SERIALIZED_NAME_PATIENT_NAME)
  private String patientName;

  public static final String SERIALIZED_NAME_SERIES_INSTANCE_U_I_D = "seriesInstanceUID";
  @SerializedName(SERIALIZED_NAME_SERIES_INSTANCE_U_I_D)
  private String seriesInstanceUID;

  public static final String SERIALIZED_NAME_SOP_INSTANCE_U_I_D = "sopInstanceUID";
  @SerializedName(SERIALIZED_NAME_SOP_INSTANCE_U_I_D)
  private String sopInstanceUID;

  public static final String SERIALIZED_NAME_STUDY_INSTANCE_U_I_D = "studyInstanceUID";
  @SerializedName(SERIALIZED_NAME_STUDY_INSTANCE_U_I_D)
  private String studyInstanceUID;

  public AnonymizationKey() {
  }

  public AnonymizationKey anonPatientID(String anonPatientID) {
    this.anonPatientID = anonPatientID;
    return this;
  }

  /**
   * Get anonPatientID
   * @return anonPatientID
   */
  @javax.annotation.Nullable
  public String getAnonPatientID() {
    return anonPatientID;
  }

  public void setAnonPatientID(String anonPatientID) {
    this.anonPatientID = anonPatientID;
  }


  public AnonymizationKey anonPatientName(String anonPatientName) {
    this.anonPatientName = anonPatientName;
    return this;
  }

  /**
   * Get anonPatientName
   * @return anonPatientName
   */
  @javax.annotation.Nullable
  public String getAnonPatientName() {
    return anonPatientName;
  }

  public void setAnonPatientName(String anonPatientName) {
    this.anonPatientName = anonPatientName;
  }


  public AnonymizationKey anonSOPInstanceUID(String anonSOPInstanceUID) {
    this.anonSOPInstanceUID = anonSOPInstanceUID;
    return this;
  }

  /**
   * Get anonSOPInstanceUID
   * @return anonSOPInstanceUID
   */
  @javax.annotation.Nullable
  public String getAnonSOPInstanceUID() {
    return anonSOPInstanceUID;
  }

  public void setAnonSOPInstanceUID(String anonSOPInstanceUID) {
    this.anonSOPInstanceUID = anonSOPInstanceUID;
  }


  public AnonymizationKey anonSeriesInstanceUID(String anonSeriesInstanceUID) {
    this.anonSeriesInstanceUID = anonSeriesInstanceUID;
    return this;
  }

  /**
   * Get anonSeriesInstanceUID
   * @return anonSeriesInstanceUID
   */
  @javax.annotation.Nullable
  public String getAnonSeriesInstanceUID() {
    return anonSeriesInstanceUID;
  }

  public void setAnonSeriesInstanceUID(String anonSeriesInstanceUID) {
    this.anonSeriesInstanceUID = anonSeriesInstanceUID;
  }


  public AnonymizationKey anonStudyInstanceUID(String anonStudyInstanceUID) {
    this.anonStudyInstanceUID = anonStudyInstanceUID;
    return this;
  }

  /**
   * Get anonStudyInstanceUID
   * @return anonStudyInstanceUID
   */
  @javax.annotation.Nullable
  public String getAnonStudyInstanceUID() {
    return anonStudyInstanceUID;
  }

  public void setAnonStudyInstanceUID(String anonStudyInstanceUID) {
    this.anonStudyInstanceUID = anonStudyInstanceUID;
  }


  public AnonymizationKey created(Long created) {
    this.created = created;
    return this;
  }

  /**
   * Get created
   * @return created
   */
  @javax.annotation.Nullable
  public Long getCreated() {
    return created;
  }

  public void setCreated(Long created) {
    this.created = created;
  }


  public AnonymizationKey id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  public AnonymizationKey imageId(Long imageId) {
    this.imageId = imageId;
    return this;
  }

  /**
   * Get imageId
   * @return imageId
   */
  @javax.annotation.Nullable
  public Long getImageId() {
    return imageId;
  }

  public void setImageId(Long imageId) {
    this.imageId = imageId;
  }


  public AnonymizationKey patientID(String patientID) {
    this.patientID = patientID;
    return this;
  }

  /**
   * Get patientID
   * @return patientID
   */
  @javax.annotation.Nullable
  public String getPatientID() {
    return patientID;
  }

  public void setPatientID(String patientID) {
    this.patientID = patientID;
  }


  public AnonymizationKey patientName(String patientName) {
    this.patientName = patientName;
    return this;
  }

  /**
   * Get patientName
   * @return patientName
   */
  @javax.annotation.Nullable
  public String getPatientName() {
    return patientName;
  }

  public void setPatientName(String patientName) {
    this.patientName = patientName;
  }


  public AnonymizationKey seriesInstanceUID(String seriesInstanceUID) {
    this.seriesInstanceUID = seriesInstanceUID;
    return this;
  }

  /**
   * Get seriesInstanceUID
   * @return seriesInstanceUID
   */
  @javax.annotation.Nullable
  public String getSeriesInstanceUID() {
    return seriesInstanceUID;
  }

  public void setSeriesInstanceUID(String seriesInstanceUID) {
    this.seriesInstanceUID = seriesInstanceUID;
  }


  public AnonymizationKey sopInstanceUID(String sopInstanceUID) {
    this.sopInstanceUID = sopInstanceUID;
    return this;
  }

  /**
   * Get sopInstanceUID
   * @return sopInstanceUID
   */
  @javax.annotation.Nullable
  public String getSopInstanceUID() {
    return sopInstanceUID;
  }

  public void setSopInstanceUID(String sopInstanceUID) {
    this.sopInstanceUID = sopInstanceUID;
  }


  public AnonymizationKey studyInstanceUID(String studyInstanceUID) {
    this.studyInstanceUID = studyInstanceUID;
    return this;
  }

  /**
   * Get studyInstanceUID
   * @return studyInstanceUID
   */
  @javax.annotation.Nullable
  public String getStudyInstanceUID() {
    return studyInstanceUID;
  }

  public void setStudyInstanceUID(String studyInstanceUID) {
    this.studyInstanceUID = studyInstanceUID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnonymizationKey anonymizationKey = (AnonymizationKey) o;
    return Objects.equals(this.anonPatientID, anonymizationKey.anonPatientID) &&
        Objects.equals(this.anonPatientName, anonymizationKey.anonPatientName) &&
        Objects.equals(this.anonSOPInstanceUID, anonymizationKey.anonSOPInstanceUID) &&
        Objects.equals(this.anonSeriesInstanceUID, anonymizationKey.anonSeriesInstanceUID) &&
        Objects.equals(this.anonStudyInstanceUID, anonymizationKey.anonStudyInstanceUID) &&
        Objects.equals(this.created, anonymizationKey.created) &&
        Objects.equals(this.id, anonymizationKey.id) &&
        Objects.equals(this.imageId, anonymizationKey.imageId) &&
        Objects.equals(this.patientID, anonymizationKey.patientID) &&
        Objects.equals(this.patientName, anonymizationKey.patientName) &&
        Objects.equals(this.seriesInstanceUID, anonymizationKey.seriesInstanceUID) &&
        Objects.equals(this.sopInstanceUID, anonymizationKey.sopInstanceUID) &&
        Objects.equals(this.studyInstanceUID, anonymizationKey.studyInstanceUID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(anonPatientID, anonPatientName, anonSOPInstanceUID, anonSeriesInstanceUID, anonStudyInstanceUID, created, id, imageId, patientID, patientName, seriesInstanceUID, sopInstanceUID, studyInstanceUID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnonymizationKey {\n");
    sb.append("    anonPatientID: ").append(toIndentedString(anonPatientID)).append("\n");
    sb.append("    anonPatientName: ").append(toIndentedString(anonPatientName)).append("\n");
    sb.append("    anonSOPInstanceUID: ").append(toIndentedString(anonSOPInstanceUID)).append("\n");
    sb.append("    anonSeriesInstanceUID: ").append(toIndentedString(anonSeriesInstanceUID)).append("\n");
    sb.append("    anonStudyInstanceUID: ").append(toIndentedString(anonStudyInstanceUID)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    patientID: ").append(toIndentedString(patientID)).append("\n");
    sb.append("    patientName: ").append(toIndentedString(patientName)).append("\n");
    sb.append("    seriesInstanceUID: ").append(toIndentedString(seriesInstanceUID)).append("\n");
    sb.append("    sopInstanceUID: ").append(toIndentedString(sopInstanceUID)).append("\n");
    sb.append("    studyInstanceUID: ").append(toIndentedString(studyInstanceUID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("anonPatientID");
    openapiFields.add("anonPatientName");
    openapiFields.add("anonSOPInstanceUID");
    openapiFields.add("anonSeriesInstanceUID");
    openapiFields.add("anonStudyInstanceUID");
    openapiFields.add("created");
    openapiFields.add("id");
    openapiFields.add("imageId");
    openapiFields.add("patientID");
    openapiFields.add("patientName");
    openapiFields.add("seriesInstanceUID");
    openapiFields.add("sopInstanceUID");
    openapiFields.add("studyInstanceUID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AnonymizationKey
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AnonymizationKey.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AnonymizationKey is not found in the empty JSON string", AnonymizationKey.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AnonymizationKey.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AnonymizationKey` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("anonPatientID") != null && !jsonObj.get("anonPatientID").isJsonNull()) && !jsonObj.get("anonPatientID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `anonPatientID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("anonPatientID").toString()));
      }
      if ((jsonObj.get("anonPatientName") != null && !jsonObj.get("anonPatientName").isJsonNull()) && !jsonObj.get("anonPatientName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `anonPatientName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("anonPatientName").toString()));
      }
      if ((jsonObj.get("anonSOPInstanceUID") != null && !jsonObj.get("anonSOPInstanceUID").isJsonNull()) && !jsonObj.get("anonSOPInstanceUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `anonSOPInstanceUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("anonSOPInstanceUID").toString()));
      }
      if ((jsonObj.get("anonSeriesInstanceUID") != null && !jsonObj.get("anonSeriesInstanceUID").isJsonNull()) && !jsonObj.get("anonSeriesInstanceUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `anonSeriesInstanceUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("anonSeriesInstanceUID").toString()));
      }
      if ((jsonObj.get("anonStudyInstanceUID") != null && !jsonObj.get("anonStudyInstanceUID").isJsonNull()) && !jsonObj.get("anonStudyInstanceUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `anonStudyInstanceUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("anonStudyInstanceUID").toString()));
      }
      if ((jsonObj.get("patientID") != null && !jsonObj.get("patientID").isJsonNull()) && !jsonObj.get("patientID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `patientID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("patientID").toString()));
      }
      if ((jsonObj.get("patientName") != null && !jsonObj.get("patientName").isJsonNull()) && !jsonObj.get("patientName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `patientName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("patientName").toString()));
      }
      if ((jsonObj.get("seriesInstanceUID") != null && !jsonObj.get("seriesInstanceUID").isJsonNull()) && !jsonObj.get("seriesInstanceUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seriesInstanceUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seriesInstanceUID").toString()));
      }
      if ((jsonObj.get("sopInstanceUID") != null && !jsonObj.get("sopInstanceUID").isJsonNull()) && !jsonObj.get("sopInstanceUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sopInstanceUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sopInstanceUID").toString()));
      }
      if ((jsonObj.get("studyInstanceUID") != null && !jsonObj.get("studyInstanceUID").isJsonNull()) && !jsonObj.get("studyInstanceUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `studyInstanceUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("studyInstanceUID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AnonymizationKey.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AnonymizationKey' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AnonymizationKey> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AnonymizationKey.class));

       return (TypeAdapter<T>) new TypeAdapter<AnonymizationKey>() {
           @Override
           public void write(JsonWriter out, AnonymizationKey value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AnonymizationKey read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AnonymizationKey given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AnonymizationKey
   * @throws IOException if the JSON string is invalid with respect to AnonymizationKey
   */
  public static AnonymizationKey fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AnonymizationKey.class);
  }

  /**
   * Convert an instance of AnonymizationKey to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

