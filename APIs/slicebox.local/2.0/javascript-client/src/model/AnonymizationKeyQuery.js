/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueryOrder from './QueryOrder';
import QueryProperty from './QueryProperty';

/**
 * The AnonymizationKeyQuery model module.
 * @module model/AnonymizationKeyQuery
 * @version 2.0
 */
class AnonymizationKeyQuery {
    /**
     * Constructs a new <code>AnonymizationKeyQuery</code>.
     * @alias module:model/AnonymizationKeyQuery
     * @param count {Number} 
     * @param queryProperties {Array.<module:model/QueryProperty>} 
     * @param startIndex {Number} 
     */
    constructor(count, queryProperties, startIndex) { 
        
        AnonymizationKeyQuery.initialize(this, count, queryProperties, startIndex);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, count, queryProperties, startIndex) { 
        obj['count'] = count;
        obj['queryProperties'] = queryProperties;
        obj['startIndex'] = startIndex;
    }

    /**
     * Constructs a <code>AnonymizationKeyQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnonymizationKeyQuery} obj Optional instance to populate.
     * @return {module:model/AnonymizationKeyQuery} The populated <code>AnonymizationKeyQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnonymizationKeyQuery();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = QueryOrder.constructFromObject(data['order']);
            }
            if (data.hasOwnProperty('queryProperties')) {
                obj['queryProperties'] = ApiClient.convertToType(data['queryProperties'], [QueryProperty]);
            }
            if (data.hasOwnProperty('startIndex')) {
                obj['startIndex'] = ApiClient.convertToType(data['startIndex'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnonymizationKeyQuery</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnonymizationKeyQuery</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnonymizationKeyQuery.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          QueryOrder.validateJSON(data['order']);
        }
        if (data['queryProperties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['queryProperties'])) {
                throw new Error("Expected the field `queryProperties` to be an array in the JSON data but got " + data['queryProperties']);
            }
            // validate the optional field `queryProperties` (array)
            for (const item of data['queryProperties']) {
                QueryProperty.validateJSON(item);
            };
        }

        return true;
    }


}

AnonymizationKeyQuery.RequiredProperties = ["count", "queryProperties", "startIndex"];

/**
 * @member {Number} count
 */
AnonymizationKeyQuery.prototype['count'] = undefined;

/**
 * @member {module:model/QueryOrder} order
 */
AnonymizationKeyQuery.prototype['order'] = undefined;

/**
 * @member {Array.<module:model/QueryProperty>} queryProperties
 */
AnonymizationKeyQuery.prototype['queryProperties'] = undefined;

/**
 * @member {Number} startIndex
 */
AnonymizationKeyQuery.prototype['startIndex'] = undefined;






export default AnonymizationKeyQuery;

