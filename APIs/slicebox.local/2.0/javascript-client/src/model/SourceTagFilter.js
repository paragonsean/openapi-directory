/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SourceTagFilter model module.
 * @module model/SourceTagFilter
 * @version 2.0
 */
class SourceTagFilter {
    /**
     * Constructs a new <code>SourceTagFilter</code>.
     * @alias module:model/SourceTagFilter
     */
    constructor() { 
        
        SourceTagFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceTagFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceTagFilter} obj Optional instance to populate.
     * @return {module:model/SourceTagFilter} The populated <code>SourceTagFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceTagFilter();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('sourceId')) {
                obj['sourceId'] = ApiClient.convertToType(data['sourceId'], 'Number');
            }
            if (data.hasOwnProperty('sourceType')) {
                obj['sourceType'] = ApiClient.convertToType(data['sourceType'], 'String');
            }
            if (data.hasOwnProperty('tagFilterId')) {
                obj['tagFilterId'] = ApiClient.convertToType(data['tagFilterId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceTagFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceTagFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['sourceType'] && !(typeof data['sourceType'] === 'string' || data['sourceType'] instanceof String)) {
            throw new Error("Expected the field `sourceType` to be a primitive type in the JSON string but got " + data['sourceType']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
SourceTagFilter.prototype['id'] = undefined;

/**
 * @member {Number} sourceId
 */
SourceTagFilter.prototype['sourceId'] = undefined;

/**
 * @member {String} sourceType
 */
SourceTagFilter.prototype['sourceType'] = undefined;

/**
 * @member {Number} tagFilterId
 */
SourceTagFilter.prototype['tagFilterId'] = undefined;






export default SourceTagFilter;

