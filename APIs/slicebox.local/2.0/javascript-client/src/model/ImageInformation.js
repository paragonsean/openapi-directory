/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImageInformation model module.
 * @module model/ImageInformation
 * @version 2.0
 */
class ImageInformation {
    /**
     * Constructs a new <code>ImageInformation</code>.
     * @alias module:model/ImageInformation
     */
    constructor() { 
        
        ImageInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageInformation} obj Optional instance to populate.
     * @return {module:model/ImageInformation} The populated <code>ImageInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageInformation();

            if (data.hasOwnProperty('frameIndex')) {
                obj['frameIndex'] = ApiClient.convertToType(data['frameIndex'], 'Number');
            }
            if (data.hasOwnProperty('maximumPixelValue')) {
                obj['maximumPixelValue'] = ApiClient.convertToType(data['maximumPixelValue'], 'Number');
            }
            if (data.hasOwnProperty('minimumPixelValue')) {
                obj['minimumPixelValue'] = ApiClient.convertToType(data['minimumPixelValue'], 'Number');
            }
            if (data.hasOwnProperty('numberOfFrames')) {
                obj['numberOfFrames'] = ApiClient.convertToType(data['numberOfFrames'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageInformation</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} frameIndex
 */
ImageInformation.prototype['frameIndex'] = undefined;

/**
 * @member {Number} maximumPixelValue
 */
ImageInformation.prototype['maximumPixelValue'] = undefined;

/**
 * @member {Number} minimumPixelValue
 */
ImageInformation.prototype['minimumPixelValue'] = undefined;

/**
 * @member {Number} numberOfFrames
 */
ImageInformation.prototype['numberOfFrames'] = undefined;






export default ImageInformation;

