/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DicomPropertyValue from './DicomPropertyValue';

/**
 * The Series model module.
 * @module model/Series
 * @version 2.0
 */
class Series {
    /**
     * Constructs a new <code>Series</code>.
     * @alias module:model/Series
     */
    constructor() { 
        
        Series.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Series</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Series} obj Optional instance to populate.
     * @return {module:model/Series} The populated <code>Series</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Series();

            if (data.hasOwnProperty('bodyPartExamined')) {
                obj['bodyPartExamined'] = DicomPropertyValue.constructFromObject(data['bodyPartExamined']);
            }
            if (data.hasOwnProperty('frameOfReferenceUID')) {
                obj['frameOfReferenceUID'] = DicomPropertyValue.constructFromObject(data['frameOfReferenceUID']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('manufacturer')) {
                obj['manufacturer'] = DicomPropertyValue.constructFromObject(data['manufacturer']);
            }
            if (data.hasOwnProperty('modality')) {
                obj['modality'] = DicomPropertyValue.constructFromObject(data['modality']);
            }
            if (data.hasOwnProperty('protocolName')) {
                obj['protocolName'] = DicomPropertyValue.constructFromObject(data['protocolName']);
            }
            if (data.hasOwnProperty('seriesDate')) {
                obj['seriesDate'] = DicomPropertyValue.constructFromObject(data['seriesDate']);
            }
            if (data.hasOwnProperty('seriesDescription')) {
                obj['seriesDescription'] = DicomPropertyValue.constructFromObject(data['seriesDescription']);
            }
            if (data.hasOwnProperty('seriesInstanceUID')) {
                obj['seriesInstanceUID'] = DicomPropertyValue.constructFromObject(data['seriesInstanceUID']);
            }
            if (data.hasOwnProperty('stationName')) {
                obj['stationName'] = DicomPropertyValue.constructFromObject(data['stationName']);
            }
            if (data.hasOwnProperty('studyId')) {
                obj['studyId'] = ApiClient.convertToType(data['studyId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Series</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Series</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bodyPartExamined`
        if (data['bodyPartExamined']) { // data not null
          DicomPropertyValue.validateJSON(data['bodyPartExamined']);
        }
        // validate the optional field `frameOfReferenceUID`
        if (data['frameOfReferenceUID']) { // data not null
          DicomPropertyValue.validateJSON(data['frameOfReferenceUID']);
        }
        // validate the optional field `manufacturer`
        if (data['manufacturer']) { // data not null
          DicomPropertyValue.validateJSON(data['manufacturer']);
        }
        // validate the optional field `modality`
        if (data['modality']) { // data not null
          DicomPropertyValue.validateJSON(data['modality']);
        }
        // validate the optional field `protocolName`
        if (data['protocolName']) { // data not null
          DicomPropertyValue.validateJSON(data['protocolName']);
        }
        // validate the optional field `seriesDate`
        if (data['seriesDate']) { // data not null
          DicomPropertyValue.validateJSON(data['seriesDate']);
        }
        // validate the optional field `seriesDescription`
        if (data['seriesDescription']) { // data not null
          DicomPropertyValue.validateJSON(data['seriesDescription']);
        }
        // validate the optional field `seriesInstanceUID`
        if (data['seriesInstanceUID']) { // data not null
          DicomPropertyValue.validateJSON(data['seriesInstanceUID']);
        }
        // validate the optional field `stationName`
        if (data['stationName']) { // data not null
          DicomPropertyValue.validateJSON(data['stationName']);
        }

        return true;
    }


}



/**
 * @member {module:model/DicomPropertyValue} bodyPartExamined
 */
Series.prototype['bodyPartExamined'] = undefined;

/**
 * @member {module:model/DicomPropertyValue} frameOfReferenceUID
 */
Series.prototype['frameOfReferenceUID'] = undefined;

/**
 * @member {Number} id
 */
Series.prototype['id'] = undefined;

/**
 * @member {module:model/DicomPropertyValue} manufacturer
 */
Series.prototype['manufacturer'] = undefined;

/**
 * @member {module:model/DicomPropertyValue} modality
 */
Series.prototype['modality'] = undefined;

/**
 * @member {module:model/DicomPropertyValue} protocolName
 */
Series.prototype['protocolName'] = undefined;

/**
 * @member {module:model/DicomPropertyValue} seriesDate
 */
Series.prototype['seriesDate'] = undefined;

/**
 * @member {module:model/DicomPropertyValue} seriesDescription
 */
Series.prototype['seriesDescription'] = undefined;

/**
 * @member {module:model/DicomPropertyValue} seriesInstanceUID
 */
Series.prototype['seriesInstanceUID'] = undefined;

/**
 * @member {module:model/DicomPropertyValue} stationName
 */
Series.prototype['stationName'] = undefined;

/**
 * @member {Number} studyId
 */
Series.prototype['studyId'] = undefined;






export default Series;

