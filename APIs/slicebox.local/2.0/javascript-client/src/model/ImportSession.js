/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImportSession model module.
 * @module model/ImportSession
 * @version 2.0
 */
class ImportSession {
    /**
     * Constructs a new <code>ImportSession</code>.
     * @alias module:model/ImportSession
     */
    constructor() { 
        
        ImportSession.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImportSession</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportSession} obj Optional instance to populate.
     * @return {module:model/ImportSession} The populated <code>ImportSession</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportSession();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('filesAdded')) {
                obj['filesAdded'] = ApiClient.convertToType(data['filesAdded'], 'Number');
            }
            if (data.hasOwnProperty('filesImported')) {
                obj['filesImported'] = ApiClient.convertToType(data['filesImported'], 'Number');
            }
            if (data.hasOwnProperty('filesRejected')) {
                obj['filesRejected'] = ApiClient.convertToType(data['filesRejected'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportSession</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportSession</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }

        return true;
    }


}



/**
 * @member {Number} created
 */
ImportSession.prototype['created'] = undefined;

/**
 * @member {Number} filesAdded
 */
ImportSession.prototype['filesAdded'] = undefined;

/**
 * @member {Number} filesImported
 */
ImportSession.prototype['filesImported'] = undefined;

/**
 * @member {Number} filesRejected
 */
ImportSession.prototype['filesRejected'] = undefined;

/**
 * @member {Number} id
 */
ImportSession.prototype['id'] = undefined;

/**
 * @member {Number} lastUpdated
 */
ImportSession.prototype['lastUpdated'] = undefined;

/**
 * @member {String} name
 */
ImportSession.prototype['name'] = undefined;

/**
 * @member {String} user
 */
ImportSession.prototype['user'] = undefined;

/**
 * @member {Number} userId
 */
ImportSession.prototype['userId'] = undefined;






export default ImportSession;

