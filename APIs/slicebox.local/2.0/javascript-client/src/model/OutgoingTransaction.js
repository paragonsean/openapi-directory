/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnonymizationProfile from './AnonymizationProfile';

/**
 * The OutgoingTransaction model module.
 * @module model/OutgoingTransaction
 * @version 2.0
 */
class OutgoingTransaction {
    /**
     * Constructs a new <code>OutgoingTransaction</code>.
     * @alias module:model/OutgoingTransaction
     */
    constructor() { 
        
        OutgoingTransaction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OutgoingTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OutgoingTransaction} obj Optional instance to populate.
     * @return {module:model/OutgoingTransaction} The populated <code>OutgoingTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutgoingTransaction();

            if (data.hasOwnProperty('boxId')) {
                obj['boxId'] = ApiClient.convertToType(data['boxId'], 'Number');
            }
            if (data.hasOwnProperty('boxName')) {
                obj['boxName'] = ApiClient.convertToType(data['boxName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('profile')) {
                obj['profile'] = AnonymizationProfile.constructFromObject(data['profile']);
            }
            if (data.hasOwnProperty('sentImageCount')) {
                obj['sentImageCount'] = ApiClient.convertToType(data['sentImageCount'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('totalImageCount')) {
                obj['totalImageCount'] = ApiClient.convertToType(data['totalImageCount'], 'Number');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OutgoingTransaction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OutgoingTransaction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['boxName'] && !(typeof data['boxName'] === 'string' || data['boxName'] instanceof String)) {
            throw new Error("Expected the field `boxName` to be a primitive type in the JSON string but got " + data['boxName']);
        }
        // validate the optional field `profile`
        if (data['profile']) { // data not null
          AnonymizationProfile.validateJSON(data['profile']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {Number} boxId
 */
OutgoingTransaction.prototype['boxId'] = undefined;

/**
 * @member {String} boxName
 */
OutgoingTransaction.prototype['boxName'] = undefined;

/**
 * @member {Number} id
 */
OutgoingTransaction.prototype['id'] = undefined;

/**
 * @member {module:model/AnonymizationProfile} profile
 */
OutgoingTransaction.prototype['profile'] = undefined;

/**
 * @member {Number} sentImageCount
 */
OutgoingTransaction.prototype['sentImageCount'] = undefined;

/**
 * @member {String} status
 */
OutgoingTransaction.prototype['status'] = undefined;

/**
 * @member {Number} totalImageCount
 */
OutgoingTransaction.prototype['totalImageCount'] = undefined;

/**
 * @member {Number} updated
 */
OutgoingTransaction.prototype['updated'] = undefined;






export default OutgoingTransaction;

