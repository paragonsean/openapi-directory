/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Seriestyperuleattribute model module.
 * @module model/Seriestyperuleattribute
 * @version 2.0
 */
class Seriestyperuleattribute {
    /**
     * Constructs a new <code>Seriestyperuleattribute</code>.
     * @alias module:model/Seriestyperuleattribute
     * @param element {Number} 
     * @param group {Number} 
     * @param id {Number} 
     * @param seriesTypeRuleId {Number} 
     * @param value {String} 
     */
    constructor(element, group, id, seriesTypeRuleId, value) { 
        
        Seriestyperuleattribute.initialize(this, element, group, id, seriesTypeRuleId, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, element, group, id, seriesTypeRuleId, value) { 
        obj['element'] = element;
        obj['group'] = group;
        obj['id'] = id;
        obj['seriesTypeRuleId'] = seriesTypeRuleId;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>Seriestyperuleattribute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Seriestyperuleattribute} obj Optional instance to populate.
     * @return {module:model/Seriestyperuleattribute} The populated <code>Seriestyperuleattribute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Seriestyperuleattribute();

            if (data.hasOwnProperty('element')) {
                obj['element'] = ApiClient.convertToType(data['element'], 'Number');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('seriesTypeRuleId')) {
                obj['seriesTypeRuleId'] = ApiClient.convertToType(data['seriesTypeRuleId'], 'Number');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Seriestyperuleattribute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Seriestyperuleattribute</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Seriestyperuleattribute.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

Seriestyperuleattribute.RequiredProperties = ["element", "group", "id", "seriesTypeRuleId", "value"];

/**
 * @member {Number} element
 */
Seriestyperuleattribute.prototype['element'] = undefined;

/**
 * @member {Number} group
 */
Seriestyperuleattribute.prototype['group'] = undefined;

/**
 * @member {Number} id
 */
Seriestyperuleattribute.prototype['id'] = undefined;

/**
 * @member {String} path
 */
Seriestyperuleattribute.prototype['path'] = undefined;

/**
 * @member {Number} seriesTypeRuleId
 */
Seriestyperuleattribute.prototype['seriesTypeRuleId'] = undefined;

/**
 * @member {String} value
 */
Seriestyperuleattribute.prototype['value'] = undefined;






export default Seriestyperuleattribute;

