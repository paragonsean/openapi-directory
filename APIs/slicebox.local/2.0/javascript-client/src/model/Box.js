/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnonymizationProfile from './AnonymizationProfile';

/**
 * The Box model module.
 * @module model/Box
 * @version 2.0
 */
class Box {
    /**
     * Constructs a new <code>Box</code>.
     * @alias module:model/Box
     */
    constructor() { 
        
        Box.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Box</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Box} obj Optional instance to populate.
     * @return {module:model/Box} The populated <code>Box</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Box();

            if (data.hasOwnProperty('baseUrl')) {
                obj['baseUrl'] = ApiClient.convertToType(data['baseUrl'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('online')) {
                obj['online'] = ApiClient.convertToType(data['online'], 'Boolean');
            }
            if (data.hasOwnProperty('profile')) {
                obj['profile'] = AnonymizationProfile.constructFromObject(data['profile']);
            }
            if (data.hasOwnProperty('sendMethod')) {
                obj['sendMethod'] = ApiClient.convertToType(data['sendMethod'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Box</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Box</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['baseUrl'] && !(typeof data['baseUrl'] === 'string' || data['baseUrl'] instanceof String)) {
            throw new Error("Expected the field `baseUrl` to be a primitive type in the JSON string but got " + data['baseUrl']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `profile`
        if (data['profile']) { // data not null
          AnonymizationProfile.validateJSON(data['profile']);
        }
        // ensure the json data is a string
        if (data['sendMethod'] && !(typeof data['sendMethod'] === 'string' || data['sendMethod'] instanceof String)) {
            throw new Error("Expected the field `sendMethod` to be a primitive type in the JSON string but got " + data['sendMethod']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }

        return true;
    }


}



/**
 * @member {String} baseUrl
 */
Box.prototype['baseUrl'] = undefined;

/**
 * @member {Number} id
 */
Box.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Box.prototype['name'] = undefined;

/**
 * @member {Boolean} online
 */
Box.prototype['online'] = undefined;

/**
 * @member {module:model/AnonymizationProfile} profile
 */
Box.prototype['profile'] = undefined;

/**
 * @member {String} sendMethod
 */
Box.prototype['sendMethod'] = undefined;

/**
 * @member {String} token
 */
Box.prototype['token'] = undefined;






export default Box;

