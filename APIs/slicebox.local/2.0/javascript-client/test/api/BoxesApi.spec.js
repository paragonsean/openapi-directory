/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SliceboxApi);
  }
}(this, function(expect, SliceboxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SliceboxApi.BoxesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BoxesApi', function() {
    describe('boxesConnectPost', function() {
      it('should call boxesConnectPost successfully', function(done) {
        //uncomment below and update the code to test boxesConnectPost
        //instance.boxesConnectPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('boxesCreateconnectionPost', function() {
      it('should call boxesCreateconnectionPost successfully', function(done) {
        //uncomment below and update the code to test boxesCreateconnectionPost
        //instance.boxesCreateconnectionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('boxesGet', function() {
      it('should call boxesGet successfully', function(done) {
        //uncomment below and update the code to test boxesGet
        //instance.boxesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('boxesIdDelete', function() {
      it('should call boxesIdDelete successfully', function(done) {
        //uncomment below and update the code to test boxesIdDelete
        //instance.boxesIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('boxesIdSendPost', function() {
      it('should call boxesIdSendPost successfully', function(done) {
        //uncomment below and update the code to test boxesIdSendPost
        //instance.boxesIdSendPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('boxesIncomingGet', function() {
      it('should call boxesIncomingGet successfully', function(done) {
        //uncomment below and update the code to test boxesIncomingGet
        //instance.boxesIncomingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('boxesIncomingIdDelete', function() {
      it('should call boxesIncomingIdDelete successfully', function(done) {
        //uncomment below and update the code to test boxesIncomingIdDelete
        //instance.boxesIncomingIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('boxesIncomingIdImagesGet', function() {
      it('should call boxesIncomingIdImagesGet successfully', function(done) {
        //uncomment below and update the code to test boxesIncomingIdImagesGet
        //instance.boxesIncomingIdImagesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('boxesOutgoingGet', function() {
      it('should call boxesOutgoingGet successfully', function(done) {
        //uncomment below and update the code to test boxesOutgoingGet
        //instance.boxesOutgoingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('boxesOutgoingIdDelete', function() {
      it('should call boxesOutgoingIdDelete successfully', function(done) {
        //uncomment below and update the code to test boxesOutgoingIdDelete
        //instance.boxesOutgoingIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('boxesOutgoingIdImagesGet', function() {
      it('should call boxesOutgoingIdImagesGet successfully', function(done) {
        //uncomment below and update the code to test boxesOutgoingIdImagesGet
        //instance.boxesOutgoingIdImagesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
