# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: int=None, files_added: int=None, files_imported: int=None, files_rejected: int=None, id: int=None, last_updated: int=None, name: str=None, user: str=None, user_id: int=None):
        """ImportSession - a model defined in OpenAPI

        :param created: The created of this ImportSession.
        :param files_added: The files_added of this ImportSession.
        :param files_imported: The files_imported of this ImportSession.
        :param files_rejected: The files_rejected of this ImportSession.
        :param id: The id of this ImportSession.
        :param last_updated: The last_updated of this ImportSession.
        :param name: The name of this ImportSession.
        :param user: The user of this ImportSession.
        :param user_id: The user_id of this ImportSession.
        """
        self.openapi_types = {
            'created': int,
            'files_added': int,
            'files_imported': int,
            'files_rejected': int,
            'id': int,
            'last_updated': int,
            'name': str,
            'user': str,
            'user_id': int
        }

        self.attribute_map = {
            'created': 'created',
            'files_added': 'filesAdded',
            'files_imported': 'filesImported',
            'files_rejected': 'filesRejected',
            'id': 'id',
            'last_updated': 'lastUpdated',
            'name': 'name',
            'user': 'user',
            'user_id': 'userId'
        }

        self._created = created
        self._files_added = files_added
        self._files_imported = files_imported
        self._files_rejected = files_rejected
        self._id = id
        self._last_updated = last_updated
        self._name = name
        self._user = user
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The importSession of this ImportSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this ImportSession.


        :return: The created of this ImportSession.
        :rtype: int
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ImportSession.


        :param created: The created of this ImportSession.
        :type created: int
        """

        self._created = created

    @property
    def files_added(self):
        """Gets the files_added of this ImportSession.


        :return: The files_added of this ImportSession.
        :rtype: int
        """
        return self._files_added

    @files_added.setter
    def files_added(self, files_added):
        """Sets the files_added of this ImportSession.


        :param files_added: The files_added of this ImportSession.
        :type files_added: int
        """

        self._files_added = files_added

    @property
    def files_imported(self):
        """Gets the files_imported of this ImportSession.


        :return: The files_imported of this ImportSession.
        :rtype: int
        """
        return self._files_imported

    @files_imported.setter
    def files_imported(self, files_imported):
        """Sets the files_imported of this ImportSession.


        :param files_imported: The files_imported of this ImportSession.
        :type files_imported: int
        """

        self._files_imported = files_imported

    @property
    def files_rejected(self):
        """Gets the files_rejected of this ImportSession.


        :return: The files_rejected of this ImportSession.
        :rtype: int
        """
        return self._files_rejected

    @files_rejected.setter
    def files_rejected(self, files_rejected):
        """Sets the files_rejected of this ImportSession.


        :param files_rejected: The files_rejected of this ImportSession.
        :type files_rejected: int
        """

        self._files_rejected = files_rejected

    @property
    def id(self):
        """Gets the id of this ImportSession.


        :return: The id of this ImportSession.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ImportSession.


        :param id: The id of this ImportSession.
        :type id: int
        """

        self._id = id

    @property
    def last_updated(self):
        """Gets the last_updated of this ImportSession.


        :return: The last_updated of this ImportSession.
        :rtype: int
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this ImportSession.


        :param last_updated: The last_updated of this ImportSession.
        :type last_updated: int
        """

        self._last_updated = last_updated

    @property
    def name(self):
        """Gets the name of this ImportSession.


        :return: The name of this ImportSession.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ImportSession.


        :param name: The name of this ImportSession.
        :type name: str
        """

        self._name = name

    @property
    def user(self):
        """Gets the user of this ImportSession.


        :return: The user of this ImportSession.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ImportSession.


        :param user: The user of this ImportSession.
        :type user: str
        """

        self._user = user

    @property
    def user_id(self):
        """Gets the user_id of this ImportSession.


        :return: The user_id of this ImportSession.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ImportSession.


        :param user_id: The user_id of this ImportSession.
        :type user_id: int
        """

        self._user_id = user_id
