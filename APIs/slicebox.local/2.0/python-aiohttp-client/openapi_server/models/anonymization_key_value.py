# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag_path_tag import TagPathTag
from openapi_server import util


class AnonymizationKeyValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, anonymization_key_id: int=None, anonymized_value: str=None, id: int=None, tag_path: TagPathTag=None, value: str=None):
        """AnonymizationKeyValue - a model defined in OpenAPI

        :param anonymization_key_id: The anonymization_key_id of this AnonymizationKeyValue.
        :param anonymized_value: The anonymized_value of this AnonymizationKeyValue.
        :param id: The id of this AnonymizationKeyValue.
        :param tag_path: The tag_path of this AnonymizationKeyValue.
        :param value: The value of this AnonymizationKeyValue.
        """
        self.openapi_types = {
            'anonymization_key_id': int,
            'anonymized_value': str,
            'id': int,
            'tag_path': TagPathTag,
            'value': str
        }

        self.attribute_map = {
            'anonymization_key_id': 'anonymizationKeyId',
            'anonymized_value': 'anonymizedValue',
            'id': 'id',
            'tag_path': 'tagPath',
            'value': 'value'
        }

        self._anonymization_key_id = anonymization_key_id
        self._anonymized_value = anonymized_value
        self._id = id
        self._tag_path = tag_path
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnonymizationKeyValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The anonymizationKeyValue of this AnonymizationKeyValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anonymization_key_id(self):
        """Gets the anonymization_key_id of this AnonymizationKeyValue.


        :return: The anonymization_key_id of this AnonymizationKeyValue.
        :rtype: int
        """
        return self._anonymization_key_id

    @anonymization_key_id.setter
    def anonymization_key_id(self, anonymization_key_id):
        """Sets the anonymization_key_id of this AnonymizationKeyValue.


        :param anonymization_key_id: The anonymization_key_id of this AnonymizationKeyValue.
        :type anonymization_key_id: int
        """

        self._anonymization_key_id = anonymization_key_id

    @property
    def anonymized_value(self):
        """Gets the anonymized_value of this AnonymizationKeyValue.


        :return: The anonymized_value of this AnonymizationKeyValue.
        :rtype: str
        """
        return self._anonymized_value

    @anonymized_value.setter
    def anonymized_value(self, anonymized_value):
        """Sets the anonymized_value of this AnonymizationKeyValue.


        :param anonymized_value: The anonymized_value of this AnonymizationKeyValue.
        :type anonymized_value: str
        """

        self._anonymized_value = anonymized_value

    @property
    def id(self):
        """Gets the id of this AnonymizationKeyValue.


        :return: The id of this AnonymizationKeyValue.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AnonymizationKeyValue.


        :param id: The id of this AnonymizationKeyValue.
        :type id: int
        """

        self._id = id

    @property
    def tag_path(self):
        """Gets the tag_path of this AnonymizationKeyValue.


        :return: The tag_path of this AnonymizationKeyValue.
        :rtype: TagPathTag
        """
        return self._tag_path

    @tag_path.setter
    def tag_path(self, tag_path):
        """Sets the tag_path of this AnonymizationKeyValue.


        :param tag_path: The tag_path of this AnonymizationKeyValue.
        :type tag_path: TagPathTag
        """

        self._tag_path = tag_path

    @property
    def value(self):
        """Gets the value of this AnonymizationKeyValue.


        :return: The value of this AnonymizationKeyValue.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this AnonymizationKeyValue.


        :param value: The value of this AnonymizationKeyValue.
        :type value: str
        """

        self._value = value
