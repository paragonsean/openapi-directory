# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TagPathTrunk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item: str=None, previous: TagPathTrunk=None, tag: int=None):
        """TagPathTrunk - a model defined in OpenAPI

        :param item: The item of this TagPathTrunk.
        :param previous: The previous of this TagPathTrunk.
        :param tag: The tag of this TagPathTrunk.
        """
        self.openapi_types = {
            'item': str,
            'previous': TagPathTrunk,
            'tag': int
        }

        self.attribute_map = {
            'item': 'item',
            'previous': 'previous',
            'tag': 'tag'
        }

        self._item = item
        self._previous = previous
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagPathTrunk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The tagPathTrunk of this TagPathTrunk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item(self):
        """Gets the item of this TagPathTrunk.


        :return: The item of this TagPathTrunk.
        :rtype: str
        """
        return self._item

    @item.setter
    def item(self, item):
        """Sets the item of this TagPathTrunk.


        :param item: The item of this TagPathTrunk.
        :type item: str
        """

        self._item = item

    @property
    def previous(self):
        """Gets the previous of this TagPathTrunk.


        :return: The previous of this TagPathTrunk.
        :rtype: TagPathTrunk
        """
        return self._previous

    @previous.setter
    def previous(self, previous):
        """Sets the previous of this TagPathTrunk.


        :param previous: The previous of this TagPathTrunk.
        :type previous: TagPathTrunk
        """

        self._previous = previous

    @property
    def tag(self):
        """Gets the tag of this TagPathTrunk.


        :return: The tag of this TagPathTrunk.
        :rtype: int
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this TagPathTrunk.


        :param tag: The tag of this TagPathTrunk.
        :type tag: int
        """

        self._tag = tag
