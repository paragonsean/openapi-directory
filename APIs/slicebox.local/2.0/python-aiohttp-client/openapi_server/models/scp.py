# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Scp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ae_title: str=None, id: int=None, name: str=None, port: int=None):
        """Scp - a model defined in OpenAPI

        :param ae_title: The ae_title of this Scp.
        :param id: The id of this Scp.
        :param name: The name of this Scp.
        :param port: The port of this Scp.
        """
        self.openapi_types = {
            'ae_title': str,
            'id': int,
            'name': str,
            'port': int
        }

        self.attribute_map = {
            'ae_title': 'aeTitle',
            'id': 'id',
            'name': 'name',
            'port': 'port'
        }

        self._ae_title = ae_title
        self._id = id
        self._name = name
        self._port = port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Scp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scp of this Scp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ae_title(self):
        """Gets the ae_title of this Scp.


        :return: The ae_title of this Scp.
        :rtype: str
        """
        return self._ae_title

    @ae_title.setter
    def ae_title(self, ae_title):
        """Sets the ae_title of this Scp.


        :param ae_title: The ae_title of this Scp.
        :type ae_title: str
        """

        self._ae_title = ae_title

    @property
    def id(self):
        """Gets the id of this Scp.


        :return: The id of this Scp.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Scp.


        :param id: The id of this Scp.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Scp.


        :return: The name of this Scp.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Scp.


        :param name: The name of this Scp.
        :type name: str
        """

        self._name = name

    @property
    def port(self):
        """Gets the port of this Scp.


        :return: The port of this Scp.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this Scp.


        :param port: The port of this Scp.
        :type port: int
        """

        self._port = port
