# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceTagFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, source_id: int=None, source_type: str=None, tag_filter_id: int=None):
        """SourceTagFilter - a model defined in OpenAPI

        :param id: The id of this SourceTagFilter.
        :param source_id: The source_id of this SourceTagFilter.
        :param source_type: The source_type of this SourceTagFilter.
        :param tag_filter_id: The tag_filter_id of this SourceTagFilter.
        """
        self.openapi_types = {
            'id': int,
            'source_id': int,
            'source_type': str,
            'tag_filter_id': int
        }

        self.attribute_map = {
            'id': 'id',
            'source_id': 'sourceId',
            'source_type': 'sourceType',
            'tag_filter_id': 'tagFilterId'
        }

        self._id = id
        self._source_id = source_id
        self._source_type = source_type
        self._tag_filter_id = tag_filter_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceTagFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sourceTagFilter of this SourceTagFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this SourceTagFilter.


        :return: The id of this SourceTagFilter.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SourceTagFilter.


        :param id: The id of this SourceTagFilter.
        :type id: int
        """

        self._id = id

    @property
    def source_id(self):
        """Gets the source_id of this SourceTagFilter.


        :return: The source_id of this SourceTagFilter.
        :rtype: int
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this SourceTagFilter.


        :param source_id: The source_id of this SourceTagFilter.
        :type source_id: int
        """

        self._source_id = source_id

    @property
    def source_type(self):
        """Gets the source_type of this SourceTagFilter.


        :return: The source_type of this SourceTagFilter.
        :rtype: str
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this SourceTagFilter.


        :param source_type: The source_type of this SourceTagFilter.
        :type source_type: str
        """

        self._source_type = source_type

    @property
    def tag_filter_id(self):
        """Gets the tag_filter_id of this SourceTagFilter.


        :return: The tag_filter_id of this SourceTagFilter.
        :rtype: int
        """
        return self._tag_filter_id

    @tag_filter_id.setter
    def tag_filter_id(self, tag_filter_id):
        """Sets the tag_filter_id of this SourceTagFilter.


        :param tag_filter_id: The tag_filter_id of this SourceTagFilter.
        :type tag_filter_id: int
        """

        self._tag_filter_id = tag_filter_id
