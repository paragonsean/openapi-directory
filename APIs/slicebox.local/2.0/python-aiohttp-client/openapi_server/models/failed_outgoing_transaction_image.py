# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.outgoing_transaction_image import OutgoingTransactionImage
from openapi_server import util


class FailedOutgoingTransactionImage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, transaction_image: OutgoingTransactionImage=None):
        """FailedOutgoingTransactionImage - a model defined in OpenAPI

        :param message: The message of this FailedOutgoingTransactionImage.
        :param transaction_image: The transaction_image of this FailedOutgoingTransactionImage.
        """
        self.openapi_types = {
            'message': str,
            'transaction_image': OutgoingTransactionImage
        }

        self.attribute_map = {
            'message': 'message',
            'transaction_image': 'transactionImage'
        }

        self._message = message
        self._transaction_image = transaction_image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailedOutgoingTransactionImage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The failedOutgoingTransactionImage of this FailedOutgoingTransactionImage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this FailedOutgoingTransactionImage.


        :return: The message of this FailedOutgoingTransactionImage.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this FailedOutgoingTransactionImage.


        :param message: The message of this FailedOutgoingTransactionImage.
        :type message: str
        """

        self._message = message

    @property
    def transaction_image(self):
        """Gets the transaction_image of this FailedOutgoingTransactionImage.


        :return: The transaction_image of this FailedOutgoingTransactionImage.
        :rtype: OutgoingTransactionImage
        """
        return self._transaction_image

    @transaction_image.setter
    def transaction_image(self, transaction_image):
        """Sets the transaction_image of this FailedOutgoingTransactionImage.


        :param transaction_image: The transaction_image of this FailedOutgoingTransactionImage.
        :type transaction_image: OutgoingTransactionImage
        """

        self._transaction_image = transaction_image
