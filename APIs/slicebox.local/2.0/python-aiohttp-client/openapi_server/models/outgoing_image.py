# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OutgoingImage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, image_id: int=None, outgoing_transaction_id: int=None, sent: bool=None, sequence_number: int=None):
        """OutgoingImage - a model defined in OpenAPI

        :param id: The id of this OutgoingImage.
        :param image_id: The image_id of this OutgoingImage.
        :param outgoing_transaction_id: The outgoing_transaction_id of this OutgoingImage.
        :param sent: The sent of this OutgoingImage.
        :param sequence_number: The sequence_number of this OutgoingImage.
        """
        self.openapi_types = {
            'id': int,
            'image_id': int,
            'outgoing_transaction_id': int,
            'sent': bool,
            'sequence_number': int
        }

        self.attribute_map = {
            'id': 'id',
            'image_id': 'imageId',
            'outgoing_transaction_id': 'outgoingTransactionId',
            'sent': 'sent',
            'sequence_number': 'sequenceNumber'
        }

        self._id = id
        self._image_id = image_id
        self._outgoing_transaction_id = outgoing_transaction_id
        self._sent = sent
        self._sequence_number = sequence_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutgoingImage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The outgoingImage of this OutgoingImage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this OutgoingImage.


        :return: The id of this OutgoingImage.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OutgoingImage.


        :param id: The id of this OutgoingImage.
        :type id: int
        """

        self._id = id

    @property
    def image_id(self):
        """Gets the image_id of this OutgoingImage.


        :return: The image_id of this OutgoingImage.
        :rtype: int
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this OutgoingImage.


        :param image_id: The image_id of this OutgoingImage.
        :type image_id: int
        """

        self._image_id = image_id

    @property
    def outgoing_transaction_id(self):
        """Gets the outgoing_transaction_id of this OutgoingImage.


        :return: The outgoing_transaction_id of this OutgoingImage.
        :rtype: int
        """
        return self._outgoing_transaction_id

    @outgoing_transaction_id.setter
    def outgoing_transaction_id(self, outgoing_transaction_id):
        """Sets the outgoing_transaction_id of this OutgoingImage.


        :param outgoing_transaction_id: The outgoing_transaction_id of this OutgoingImage.
        :type outgoing_transaction_id: int
        """

        self._outgoing_transaction_id = outgoing_transaction_id

    @property
    def sent(self):
        """Gets the sent of this OutgoingImage.


        :return: The sent of this OutgoingImage.
        :rtype: bool
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this OutgoingImage.


        :param sent: The sent of this OutgoingImage.
        :type sent: bool
        """

        self._sent = sent

    @property
    def sequence_number(self):
        """Gets the sequence_number of this OutgoingImage.


        :return: The sequence_number of this OutgoingImage.
        :rtype: int
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number):
        """Sets the sequence_number of this OutgoingImage.


        :param sequence_number: The sequence_number of this OutgoingImage.
        :type sequence_number: int
        """

        self._sequence_number = sequence_number
