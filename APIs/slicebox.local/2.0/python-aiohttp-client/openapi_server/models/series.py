# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dicom_property_value import DicomPropertyValue
from openapi_server import util


class Series(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body_part_examined: DicomPropertyValue=None, frame_of_reference_uid: DicomPropertyValue=None, id: int=None, manufacturer: DicomPropertyValue=None, modality: DicomPropertyValue=None, protocol_name: DicomPropertyValue=None, series_date: DicomPropertyValue=None, series_description: DicomPropertyValue=None, series_instance_uid: DicomPropertyValue=None, station_name: DicomPropertyValue=None, study_id: int=None):
        """Series - a model defined in OpenAPI

        :param body_part_examined: The body_part_examined of this Series.
        :param frame_of_reference_uid: The frame_of_reference_uid of this Series.
        :param id: The id of this Series.
        :param manufacturer: The manufacturer of this Series.
        :param modality: The modality of this Series.
        :param protocol_name: The protocol_name of this Series.
        :param series_date: The series_date of this Series.
        :param series_description: The series_description of this Series.
        :param series_instance_uid: The series_instance_uid of this Series.
        :param station_name: The station_name of this Series.
        :param study_id: The study_id of this Series.
        """
        self.openapi_types = {
            'body_part_examined': DicomPropertyValue,
            'frame_of_reference_uid': DicomPropertyValue,
            'id': int,
            'manufacturer': DicomPropertyValue,
            'modality': DicomPropertyValue,
            'protocol_name': DicomPropertyValue,
            'series_date': DicomPropertyValue,
            'series_description': DicomPropertyValue,
            'series_instance_uid': DicomPropertyValue,
            'station_name': DicomPropertyValue,
            'study_id': int
        }

        self.attribute_map = {
            'body_part_examined': 'bodyPartExamined',
            'frame_of_reference_uid': 'frameOfReferenceUID',
            'id': 'id',
            'manufacturer': 'manufacturer',
            'modality': 'modality',
            'protocol_name': 'protocolName',
            'series_date': 'seriesDate',
            'series_description': 'seriesDescription',
            'series_instance_uid': 'seriesInstanceUID',
            'station_name': 'stationName',
            'study_id': 'studyId'
        }

        self._body_part_examined = body_part_examined
        self._frame_of_reference_uid = frame_of_reference_uid
        self._id = id
        self._manufacturer = manufacturer
        self._modality = modality
        self._protocol_name = protocol_name
        self._series_date = series_date
        self._series_description = series_description
        self._series_instance_uid = series_instance_uid
        self._station_name = station_name
        self._study_id = study_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Series':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The series of this Series.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body_part_examined(self):
        """Gets the body_part_examined of this Series.


        :return: The body_part_examined of this Series.
        :rtype: DicomPropertyValue
        """
        return self._body_part_examined

    @body_part_examined.setter
    def body_part_examined(self, body_part_examined):
        """Sets the body_part_examined of this Series.


        :param body_part_examined: The body_part_examined of this Series.
        :type body_part_examined: DicomPropertyValue
        """

        self._body_part_examined = body_part_examined

    @property
    def frame_of_reference_uid(self):
        """Gets the frame_of_reference_uid of this Series.


        :return: The frame_of_reference_uid of this Series.
        :rtype: DicomPropertyValue
        """
        return self._frame_of_reference_uid

    @frame_of_reference_uid.setter
    def frame_of_reference_uid(self, frame_of_reference_uid):
        """Sets the frame_of_reference_uid of this Series.


        :param frame_of_reference_uid: The frame_of_reference_uid of this Series.
        :type frame_of_reference_uid: DicomPropertyValue
        """

        self._frame_of_reference_uid = frame_of_reference_uid

    @property
    def id(self):
        """Gets the id of this Series.


        :return: The id of this Series.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Series.


        :param id: The id of this Series.
        :type id: int
        """

        self._id = id

    @property
    def manufacturer(self):
        """Gets the manufacturer of this Series.


        :return: The manufacturer of this Series.
        :rtype: DicomPropertyValue
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this Series.


        :param manufacturer: The manufacturer of this Series.
        :type manufacturer: DicomPropertyValue
        """

        self._manufacturer = manufacturer

    @property
    def modality(self):
        """Gets the modality of this Series.


        :return: The modality of this Series.
        :rtype: DicomPropertyValue
        """
        return self._modality

    @modality.setter
    def modality(self, modality):
        """Sets the modality of this Series.


        :param modality: The modality of this Series.
        :type modality: DicomPropertyValue
        """

        self._modality = modality

    @property
    def protocol_name(self):
        """Gets the protocol_name of this Series.


        :return: The protocol_name of this Series.
        :rtype: DicomPropertyValue
        """
        return self._protocol_name

    @protocol_name.setter
    def protocol_name(self, protocol_name):
        """Sets the protocol_name of this Series.


        :param protocol_name: The protocol_name of this Series.
        :type protocol_name: DicomPropertyValue
        """

        self._protocol_name = protocol_name

    @property
    def series_date(self):
        """Gets the series_date of this Series.


        :return: The series_date of this Series.
        :rtype: DicomPropertyValue
        """
        return self._series_date

    @series_date.setter
    def series_date(self, series_date):
        """Sets the series_date of this Series.


        :param series_date: The series_date of this Series.
        :type series_date: DicomPropertyValue
        """

        self._series_date = series_date

    @property
    def series_description(self):
        """Gets the series_description of this Series.


        :return: The series_description of this Series.
        :rtype: DicomPropertyValue
        """
        return self._series_description

    @series_description.setter
    def series_description(self, series_description):
        """Sets the series_description of this Series.


        :param series_description: The series_description of this Series.
        :type series_description: DicomPropertyValue
        """

        self._series_description = series_description

    @property
    def series_instance_uid(self):
        """Gets the series_instance_uid of this Series.


        :return: The series_instance_uid of this Series.
        :rtype: DicomPropertyValue
        """
        return self._series_instance_uid

    @series_instance_uid.setter
    def series_instance_uid(self, series_instance_uid):
        """Sets the series_instance_uid of this Series.


        :param series_instance_uid: The series_instance_uid of this Series.
        :type series_instance_uid: DicomPropertyValue
        """

        self._series_instance_uid = series_instance_uid

    @property
    def station_name(self):
        """Gets the station_name of this Series.


        :return: The station_name of this Series.
        :rtype: DicomPropertyValue
        """
        return self._station_name

    @station_name.setter
    def station_name(self, station_name):
        """Sets the station_name of this Series.


        :param station_name: The station_name of this Series.
        :type station_name: DicomPropertyValue
        """

        self._station_name = station_name

    @property
    def study_id(self):
        """Gets the study_id of this Series.


        :return: The study_id of this Series.
        :rtype: int
        """
        return self._study_id

    @study_id.setter
    def study_id(self, study_id):
        """Sets the study_id of this Series.


        :param study_id: The study_id of this Series.
        :type study_id: int
        """

        self._study_id = study_id
