/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageInformation.h
 *
 * 
 */

#ifndef OAIImageInformation_H
#define OAIImageInformation_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImageInformation : public OAIObject {
public:
    OAIImageInformation();
    OAIImageInformation(QString json);
    ~OAIImageInformation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFrameIndex() const;
    void setFrameIndex(const qint32 &frame_index);
    bool is_frame_index_Set() const;
    bool is_frame_index_Valid() const;

    qint32 getMaximumPixelValue() const;
    void setMaximumPixelValue(const qint32 &maximum_pixel_value);
    bool is_maximum_pixel_value_Set() const;
    bool is_maximum_pixel_value_Valid() const;

    qint32 getMinimumPixelValue() const;
    void setMinimumPixelValue(const qint32 &minimum_pixel_value);
    bool is_minimum_pixel_value_Set() const;
    bool is_minimum_pixel_value_Valid() const;

    qint32 getNumberOfFrames() const;
    void setNumberOfFrames(const qint32 &number_of_frames);
    bool is_number_of_frames_Set() const;
    bool is_number_of_frames_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_frame_index;
    bool m_frame_index_isSet;
    bool m_frame_index_isValid;

    qint32 m_maximum_pixel_value;
    bool m_maximum_pixel_value_isSet;
    bool m_maximum_pixel_value_isValid;

    qint32 m_minimum_pixel_value;
    bool m_minimum_pixel_value_isSet;
    bool m_minimum_pixel_value_isValid;

    qint32 m_number_of_frames;
    bool m_number_of_frames_isSet;
    bool m_number_of_frames_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageInformation)

#endif // OAIImageInformation_H
