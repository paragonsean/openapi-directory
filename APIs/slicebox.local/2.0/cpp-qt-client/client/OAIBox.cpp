/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBox.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBox::OAIBox(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBox::OAIBox() {
    this->initializeModel();
}

OAIBox::~OAIBox() {}

void OAIBox::initializeModel() {

    m_base_url_isSet = false;
    m_base_url_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_online_isSet = false;
    m_online_isValid = false;

    m_profile_isSet = false;
    m_profile_isValid = false;

    m_send_method_isSet = false;
    m_send_method_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;
}

void OAIBox::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBox::fromJsonObject(QJsonObject json) {

    m_base_url_isValid = ::OpenAPI::fromJsonValue(m_base_url, json[QString("baseUrl")]);
    m_base_url_isSet = !json[QString("baseUrl")].isNull() && m_base_url_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_online_isValid = ::OpenAPI::fromJsonValue(m_online, json[QString("online")]);
    m_online_isSet = !json[QString("online")].isNull() && m_online_isValid;

    m_profile_isValid = ::OpenAPI::fromJsonValue(m_profile, json[QString("profile")]);
    m_profile_isSet = !json[QString("profile")].isNull() && m_profile_isValid;

    m_send_method_isValid = ::OpenAPI::fromJsonValue(m_send_method, json[QString("sendMethod")]);
    m_send_method_isSet = !json[QString("sendMethod")].isNull() && m_send_method_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;
}

QString OAIBox::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBox::asJsonObject() const {
    QJsonObject obj;
    if (m_base_url_isSet) {
        obj.insert(QString("baseUrl"), ::OpenAPI::toJsonValue(m_base_url));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_online_isSet) {
        obj.insert(QString("online"), ::OpenAPI::toJsonValue(m_online));
    }
    if (m_profile.isSet()) {
        obj.insert(QString("profile"), ::OpenAPI::toJsonValue(m_profile));
    }
    if (m_send_method_isSet) {
        obj.insert(QString("sendMethod"), ::OpenAPI::toJsonValue(m_send_method));
    }
    if (m_token_isSet) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    return obj;
}

QString OAIBox::getBaseUrl() const {
    return m_base_url;
}
void OAIBox::setBaseUrl(const QString &base_url) {
    m_base_url = base_url;
    m_base_url_isSet = true;
}

bool OAIBox::is_base_url_Set() const{
    return m_base_url_isSet;
}

bool OAIBox::is_base_url_Valid() const{
    return m_base_url_isValid;
}

qint64 OAIBox::getId() const {
    return m_id;
}
void OAIBox::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBox::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBox::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIBox::getName() const {
    return m_name;
}
void OAIBox::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBox::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBox::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIBox::isOnline() const {
    return m_online;
}
void OAIBox::setOnline(const bool &online) {
    m_online = online;
    m_online_isSet = true;
}

bool OAIBox::is_online_Set() const{
    return m_online_isSet;
}

bool OAIBox::is_online_Valid() const{
    return m_online_isValid;
}

OAIAnonymizationProfile OAIBox::getProfile() const {
    return m_profile;
}
void OAIBox::setProfile(const OAIAnonymizationProfile &profile) {
    m_profile = profile;
    m_profile_isSet = true;
}

bool OAIBox::is_profile_Set() const{
    return m_profile_isSet;
}

bool OAIBox::is_profile_Valid() const{
    return m_profile_isValid;
}

QString OAIBox::getSendMethod() const {
    return m_send_method;
}
void OAIBox::setSendMethod(const QString &send_method) {
    m_send_method = send_method;
    m_send_method_isSet = true;
}

bool OAIBox::is_send_method_Set() const{
    return m_send_method_isSet;
}

bool OAIBox::is_send_method_Valid() const{
    return m_send_method_isValid;
}

QString OAIBox::getToken() const {
    return m_token;
}
void OAIBox::setToken(const QString &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAIBox::is_token_Set() const{
    return m_token_isSet;
}

bool OAIBox::is_token_Valid() const{
    return m_token_isValid;
}

bool OAIBox::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_online_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBox::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
