/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImageTagValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImageTagValues::OAIImageTagValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImageTagValues::OAIImageTagValues() {
    this->initializeModel();
}

OAIImageTagValues::~OAIImageTagValues() {}

void OAIImageTagValues::initializeModel() {

    m_image_id_isSet = false;
    m_image_id_isValid = false;

    m_tag_values_isSet = false;
    m_tag_values_isValid = false;
}

void OAIImageTagValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImageTagValues::fromJsonObject(QJsonObject json) {

    m_image_id_isValid = ::OpenAPI::fromJsonValue(m_image_id, json[QString("imageId")]);
    m_image_id_isSet = !json[QString("imageId")].isNull() && m_image_id_isValid;

    m_tag_values_isValid = ::OpenAPI::fromJsonValue(m_tag_values, json[QString("tagValues")]);
    m_tag_values_isSet = !json[QString("tagValues")].isNull() && m_tag_values_isValid;
}

QString OAIImageTagValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImageTagValues::asJsonObject() const {
    QJsonObject obj;
    if (m_image_id_isSet) {
        obj.insert(QString("imageId"), ::OpenAPI::toJsonValue(m_image_id));
    }
    if (m_tag_values.size() > 0) {
        obj.insert(QString("tagValues"), ::OpenAPI::toJsonValue(m_tag_values));
    }
    return obj;
}

qint64 OAIImageTagValues::getImageId() const {
    return m_image_id;
}
void OAIImageTagValues::setImageId(const qint64 &image_id) {
    m_image_id = image_id;
    m_image_id_isSet = true;
}

bool OAIImageTagValues::is_image_id_Set() const{
    return m_image_id_isSet;
}

bool OAIImageTagValues::is_image_id_Valid() const{
    return m_image_id_isValid;
}

QList<OAITagValue> OAIImageTagValues::getTagValues() const {
    return m_tag_values;
}
void OAIImageTagValues::setTagValues(const QList<OAITagValue> &tag_values) {
    m_tag_values = tag_values;
    m_tag_values_isSet = true;
}

bool OAIImageTagValues::is_tag_values_Set() const{
    return m_tag_values_isSet;
}

bool OAIImageTagValues::is_tag_values_Valid() const{
    return m_tag_values_isValid;
}

bool OAIImageTagValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_image_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImageTagValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
