/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnonymizationKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnonymizationKey::OAIAnonymizationKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnonymizationKey::OAIAnonymizationKey() {
    this->initializeModel();
}

OAIAnonymizationKey::~OAIAnonymizationKey() {}

void OAIAnonymizationKey::initializeModel() {

    m_anon_patient_id_isSet = false;
    m_anon_patient_id_isValid = false;

    m_anon_patient_name_isSet = false;
    m_anon_patient_name_isValid = false;

    m_anon_sop_instance_uid_isSet = false;
    m_anon_sop_instance_uid_isValid = false;

    m_anon_series_instance_uid_isSet = false;
    m_anon_series_instance_uid_isValid = false;

    m_anon_study_instance_uid_isSet = false;
    m_anon_study_instance_uid_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_image_id_isSet = false;
    m_image_id_isValid = false;

    m_patient_id_isSet = false;
    m_patient_id_isValid = false;

    m_patient_name_isSet = false;
    m_patient_name_isValid = false;

    m_series_instance_uid_isSet = false;
    m_series_instance_uid_isValid = false;

    m_sop_instance_uid_isSet = false;
    m_sop_instance_uid_isValid = false;

    m_study_instance_uid_isSet = false;
    m_study_instance_uid_isValid = false;
}

void OAIAnonymizationKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnonymizationKey::fromJsonObject(QJsonObject json) {

    m_anon_patient_id_isValid = ::OpenAPI::fromJsonValue(m_anon_patient_id, json[QString("anonPatientID")]);
    m_anon_patient_id_isSet = !json[QString("anonPatientID")].isNull() && m_anon_patient_id_isValid;

    m_anon_patient_name_isValid = ::OpenAPI::fromJsonValue(m_anon_patient_name, json[QString("anonPatientName")]);
    m_anon_patient_name_isSet = !json[QString("anonPatientName")].isNull() && m_anon_patient_name_isValid;

    m_anon_sop_instance_uid_isValid = ::OpenAPI::fromJsonValue(m_anon_sop_instance_uid, json[QString("anonSOPInstanceUID")]);
    m_anon_sop_instance_uid_isSet = !json[QString("anonSOPInstanceUID")].isNull() && m_anon_sop_instance_uid_isValid;

    m_anon_series_instance_uid_isValid = ::OpenAPI::fromJsonValue(m_anon_series_instance_uid, json[QString("anonSeriesInstanceUID")]);
    m_anon_series_instance_uid_isSet = !json[QString("anonSeriesInstanceUID")].isNull() && m_anon_series_instance_uid_isValid;

    m_anon_study_instance_uid_isValid = ::OpenAPI::fromJsonValue(m_anon_study_instance_uid, json[QString("anonStudyInstanceUID")]);
    m_anon_study_instance_uid_isSet = !json[QString("anonStudyInstanceUID")].isNull() && m_anon_study_instance_uid_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_image_id_isValid = ::OpenAPI::fromJsonValue(m_image_id, json[QString("imageId")]);
    m_image_id_isSet = !json[QString("imageId")].isNull() && m_image_id_isValid;

    m_patient_id_isValid = ::OpenAPI::fromJsonValue(m_patient_id, json[QString("patientID")]);
    m_patient_id_isSet = !json[QString("patientID")].isNull() && m_patient_id_isValid;

    m_patient_name_isValid = ::OpenAPI::fromJsonValue(m_patient_name, json[QString("patientName")]);
    m_patient_name_isSet = !json[QString("patientName")].isNull() && m_patient_name_isValid;

    m_series_instance_uid_isValid = ::OpenAPI::fromJsonValue(m_series_instance_uid, json[QString("seriesInstanceUID")]);
    m_series_instance_uid_isSet = !json[QString("seriesInstanceUID")].isNull() && m_series_instance_uid_isValid;

    m_sop_instance_uid_isValid = ::OpenAPI::fromJsonValue(m_sop_instance_uid, json[QString("sopInstanceUID")]);
    m_sop_instance_uid_isSet = !json[QString("sopInstanceUID")].isNull() && m_sop_instance_uid_isValid;

    m_study_instance_uid_isValid = ::OpenAPI::fromJsonValue(m_study_instance_uid, json[QString("studyInstanceUID")]);
    m_study_instance_uid_isSet = !json[QString("studyInstanceUID")].isNull() && m_study_instance_uid_isValid;
}

QString OAIAnonymizationKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnonymizationKey::asJsonObject() const {
    QJsonObject obj;
    if (m_anon_patient_id_isSet) {
        obj.insert(QString("anonPatientID"), ::OpenAPI::toJsonValue(m_anon_patient_id));
    }
    if (m_anon_patient_name_isSet) {
        obj.insert(QString("anonPatientName"), ::OpenAPI::toJsonValue(m_anon_patient_name));
    }
    if (m_anon_sop_instance_uid_isSet) {
        obj.insert(QString("anonSOPInstanceUID"), ::OpenAPI::toJsonValue(m_anon_sop_instance_uid));
    }
    if (m_anon_series_instance_uid_isSet) {
        obj.insert(QString("anonSeriesInstanceUID"), ::OpenAPI::toJsonValue(m_anon_series_instance_uid));
    }
    if (m_anon_study_instance_uid_isSet) {
        obj.insert(QString("anonStudyInstanceUID"), ::OpenAPI::toJsonValue(m_anon_study_instance_uid));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_image_id_isSet) {
        obj.insert(QString("imageId"), ::OpenAPI::toJsonValue(m_image_id));
    }
    if (m_patient_id_isSet) {
        obj.insert(QString("patientID"), ::OpenAPI::toJsonValue(m_patient_id));
    }
    if (m_patient_name_isSet) {
        obj.insert(QString("patientName"), ::OpenAPI::toJsonValue(m_patient_name));
    }
    if (m_series_instance_uid_isSet) {
        obj.insert(QString("seriesInstanceUID"), ::OpenAPI::toJsonValue(m_series_instance_uid));
    }
    if (m_sop_instance_uid_isSet) {
        obj.insert(QString("sopInstanceUID"), ::OpenAPI::toJsonValue(m_sop_instance_uid));
    }
    if (m_study_instance_uid_isSet) {
        obj.insert(QString("studyInstanceUID"), ::OpenAPI::toJsonValue(m_study_instance_uid));
    }
    return obj;
}

QString OAIAnonymizationKey::getAnonPatientId() const {
    return m_anon_patient_id;
}
void OAIAnonymizationKey::setAnonPatientId(const QString &anon_patient_id) {
    m_anon_patient_id = anon_patient_id;
    m_anon_patient_id_isSet = true;
}

bool OAIAnonymizationKey::is_anon_patient_id_Set() const{
    return m_anon_patient_id_isSet;
}

bool OAIAnonymizationKey::is_anon_patient_id_Valid() const{
    return m_anon_patient_id_isValid;
}

QString OAIAnonymizationKey::getAnonPatientName() const {
    return m_anon_patient_name;
}
void OAIAnonymizationKey::setAnonPatientName(const QString &anon_patient_name) {
    m_anon_patient_name = anon_patient_name;
    m_anon_patient_name_isSet = true;
}

bool OAIAnonymizationKey::is_anon_patient_name_Set() const{
    return m_anon_patient_name_isSet;
}

bool OAIAnonymizationKey::is_anon_patient_name_Valid() const{
    return m_anon_patient_name_isValid;
}

QString OAIAnonymizationKey::getAnonSopInstanceUid() const {
    return m_anon_sop_instance_uid;
}
void OAIAnonymizationKey::setAnonSopInstanceUid(const QString &anon_sop_instance_uid) {
    m_anon_sop_instance_uid = anon_sop_instance_uid;
    m_anon_sop_instance_uid_isSet = true;
}

bool OAIAnonymizationKey::is_anon_sop_instance_uid_Set() const{
    return m_anon_sop_instance_uid_isSet;
}

bool OAIAnonymizationKey::is_anon_sop_instance_uid_Valid() const{
    return m_anon_sop_instance_uid_isValid;
}

QString OAIAnonymizationKey::getAnonSeriesInstanceUid() const {
    return m_anon_series_instance_uid;
}
void OAIAnonymizationKey::setAnonSeriesInstanceUid(const QString &anon_series_instance_uid) {
    m_anon_series_instance_uid = anon_series_instance_uid;
    m_anon_series_instance_uid_isSet = true;
}

bool OAIAnonymizationKey::is_anon_series_instance_uid_Set() const{
    return m_anon_series_instance_uid_isSet;
}

bool OAIAnonymizationKey::is_anon_series_instance_uid_Valid() const{
    return m_anon_series_instance_uid_isValid;
}

QString OAIAnonymizationKey::getAnonStudyInstanceUid() const {
    return m_anon_study_instance_uid;
}
void OAIAnonymizationKey::setAnonStudyInstanceUid(const QString &anon_study_instance_uid) {
    m_anon_study_instance_uid = anon_study_instance_uid;
    m_anon_study_instance_uid_isSet = true;
}

bool OAIAnonymizationKey::is_anon_study_instance_uid_Set() const{
    return m_anon_study_instance_uid_isSet;
}

bool OAIAnonymizationKey::is_anon_study_instance_uid_Valid() const{
    return m_anon_study_instance_uid_isValid;
}

qint64 OAIAnonymizationKey::getCreated() const {
    return m_created;
}
void OAIAnonymizationKey::setCreated(const qint64 &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIAnonymizationKey::is_created_Set() const{
    return m_created_isSet;
}

bool OAIAnonymizationKey::is_created_Valid() const{
    return m_created_isValid;
}

qint64 OAIAnonymizationKey::getId() const {
    return m_id;
}
void OAIAnonymizationKey::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAnonymizationKey::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAnonymizationKey::is_id_Valid() const{
    return m_id_isValid;
}

qint64 OAIAnonymizationKey::getImageId() const {
    return m_image_id;
}
void OAIAnonymizationKey::setImageId(const qint64 &image_id) {
    m_image_id = image_id;
    m_image_id_isSet = true;
}

bool OAIAnonymizationKey::is_image_id_Set() const{
    return m_image_id_isSet;
}

bool OAIAnonymizationKey::is_image_id_Valid() const{
    return m_image_id_isValid;
}

QString OAIAnonymizationKey::getPatientId() const {
    return m_patient_id;
}
void OAIAnonymizationKey::setPatientId(const QString &patient_id) {
    m_patient_id = patient_id;
    m_patient_id_isSet = true;
}

bool OAIAnonymizationKey::is_patient_id_Set() const{
    return m_patient_id_isSet;
}

bool OAIAnonymizationKey::is_patient_id_Valid() const{
    return m_patient_id_isValid;
}

QString OAIAnonymizationKey::getPatientName() const {
    return m_patient_name;
}
void OAIAnonymizationKey::setPatientName(const QString &patient_name) {
    m_patient_name = patient_name;
    m_patient_name_isSet = true;
}

bool OAIAnonymizationKey::is_patient_name_Set() const{
    return m_patient_name_isSet;
}

bool OAIAnonymizationKey::is_patient_name_Valid() const{
    return m_patient_name_isValid;
}

QString OAIAnonymizationKey::getSeriesInstanceUid() const {
    return m_series_instance_uid;
}
void OAIAnonymizationKey::setSeriesInstanceUid(const QString &series_instance_uid) {
    m_series_instance_uid = series_instance_uid;
    m_series_instance_uid_isSet = true;
}

bool OAIAnonymizationKey::is_series_instance_uid_Set() const{
    return m_series_instance_uid_isSet;
}

bool OAIAnonymizationKey::is_series_instance_uid_Valid() const{
    return m_series_instance_uid_isValid;
}

QString OAIAnonymizationKey::getSopInstanceUid() const {
    return m_sop_instance_uid;
}
void OAIAnonymizationKey::setSopInstanceUid(const QString &sop_instance_uid) {
    m_sop_instance_uid = sop_instance_uid;
    m_sop_instance_uid_isSet = true;
}

bool OAIAnonymizationKey::is_sop_instance_uid_Set() const{
    return m_sop_instance_uid_isSet;
}

bool OAIAnonymizationKey::is_sop_instance_uid_Valid() const{
    return m_sop_instance_uid_isValid;
}

QString OAIAnonymizationKey::getStudyInstanceUid() const {
    return m_study_instance_uid;
}
void OAIAnonymizationKey::setStudyInstanceUid(const QString &study_instance_uid) {
    m_study_instance_uid = study_instance_uid;
    m_study_instance_uid_isSet = true;
}

bool OAIAnonymizationKey::is_study_instance_uid_Set() const{
    return m_study_instance_uid_isSet;
}

bool OAIAnonymizationKey::is_study_instance_uid_Valid() const{
    return m_study_instance_uid_isValid;
}

bool OAIAnonymizationKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anon_patient_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_anon_patient_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_anon_sop_instance_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_anon_series_instance_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_anon_study_instance_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_patient_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_patient_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_series_instance_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sop_instance_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_study_instance_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnonymizationKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
