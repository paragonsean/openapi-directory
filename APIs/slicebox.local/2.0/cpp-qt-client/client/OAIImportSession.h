/**
 * Slicebox API
 * Slicebox - safe sharing of medical images
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportSession.h
 *
 * 
 */

#ifndef OAIImportSession_H
#define OAIImportSession_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImportSession : public OAIObject {
public:
    OAIImportSession();
    OAIImportSession(QString json);
    ~OAIImportSession() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCreated() const;
    void setCreated(const qint64 &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    qint32 getFilesAdded() const;
    void setFilesAdded(const qint32 &files_added);
    bool is_files_added_Set() const;
    bool is_files_added_Valid() const;

    qint32 getFilesImported() const;
    void setFilesImported(const qint32 &files_imported);
    bool is_files_imported_Set() const;
    bool is_files_imported_Valid() const;

    qint32 getFilesRejected() const;
    void setFilesRejected(const qint32 &files_rejected);
    bool is_files_rejected_Set() const;
    bool is_files_rejected_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint64 getLastUpdated() const;
    void setLastUpdated(const qint64 &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    qint64 getUserId() const;
    void setUserId(const qint64 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    qint32 m_files_added;
    bool m_files_added_isSet;
    bool m_files_added_isValid;

    qint32 m_files_imported;
    bool m_files_imported_isSet;
    bool m_files_imported_isValid;

    qint32 m_files_rejected;
    bool m_files_rejected_isSet;
    bool m_files_rejected_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint64 m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    qint64 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportSession)

#endif // OAIImportSession_H
