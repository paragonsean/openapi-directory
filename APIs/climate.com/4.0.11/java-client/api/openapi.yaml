openapi: 3.0.0
info:
  contact:
    email: developer@climate.com
    name: Climate FieldView Support
  description: "**Last Modified**: Wed Jan  4 12:47:29 UTC 2023\n\n\nAll endpoints\
    \ are only accessible via HTTPS.\n\n* All API endpoints are located at `https://platform.climate.com`\
    \ (e.g.\n`https://platform.climate.com/v4/fields`).\n\n* The authorization token\
    \ endpoint is located at\n`https://api.climate.com/api/oauth/token`.\n\n## Troubleshooting\n\
    \n`X-Http-Request-Id` response header will be returned on every call,\nsuccessful\
    \ or not. If you experience an issue with our api and need\nto contact technical\
    \ support, please supply the value of the `X-Http-Request-Id`\nheader along with\
    \ an approximate time of when the request was made.\n\n## Request Limits\n\nWhen\
    \ you’re onboarded to Climate’s API platform, your `x-api-key` is assigned a custom\
    \ usage plan. Usage plans are unique to each partner and have the following key\
    \ attributes: \n\n1. Throttling information\n    * burstLimit: Maximum rate limit\
    \ over a period ranging from 1 second to a few seconds\n    * rateLimit: A steady-state\
    \ rate limit\n\n2. Quota information\n    * Limit: The maximum number of requests\
    \ that can be made in a given month\n\nWhen the request rate threshold is exceeded,\
    \ a `429` response code is returned. Optionally, the [`Retry-After`](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.37)\
    \ header may be returned: \n\nFollowing are examples of rate limit errors:\n\n\
    1. Rate limit exceeded:\n\n<br>HTTP/1.1 429 \n<br>Content-Type: application/json\n\
    <br>Content-Length: 32\n\n   {\"message\":\"Too Many Requests\"}\n\n2. Quota exhausted:\n\
    <br>HTTP/1.1 429 \n<br>Content-Type: application/json\n<br>Content-Length: 29\n\
    \n    {\"message\":\"Limit Exceeded\"}\n\n## Pagination\n\nPagination is performed\
    \ via headers. Any request which returns a `\"results\"`\narray may be paginated.\
    \ The following figure shows how query results are laid out with\nX-Limit=4 and\
    \ no filter applied.\n\n<img style=\"width:70%;height:auto;\" src=\"https://s3-us-west-2.amazonaws.com/climate-com/images/svg_upload_tests/paging.png\"\
    >\n\n* If there are no results, a response code of `304` will be returned.\n\n\
    * If the response is the last set of results, a response code of `200` or\n`206`\
    \ will be returned.\n\n* If there are more results, a response code of `206` will\
    \ be returned.\n\n* If `X-Next-Token` is provided in the request headers but the\
    \ token has\nexpired, a response code of `409` will be returned. This is only\
    \ applicable\nfor some endpoints; see specific endpoint documentation below.\n\
    \n#### X-Limit\n\nThe page size can be controlled with the `X-Limit` header. Valid\
    \ values are\n`1-100` and defaults to `100`.\n\n#### X-Next-Token\n\nIf the results\
    \ are paginated, a response header of `X-Next-Token` will be\nreturned. Use the\
    \ associated value in the subsequent request (via the `X-Next-Token`\nrequest\
    \ header) to retrieve the next page. The following sequence diagram shows how\
    \ to\nuse `X-Next-Token` to fetch all the records.\n\n<img src=\"https://s3-us-west-2.amazonaws.com/climate-com/images/svg_upload_tests/x-next-token.svg\"\
    >\n\n\n## Chunked Uploads\n\nUploads larger than `5MiB` (`5242880 bytes`) must\
    \ be done in `5MiB` chunks\n(with the exception of the final chunk). Each chunk\
    \ request MUST contain a\n`Content-Range` header specifying the portion of the\
    \ upload, and a `Content-Type`\nheader specifying binary content type (`application/octet-stream`).\
    \ Range\nuploads must be contiguous. The maximum upload size is capped at `500MiB`\
    \ (`524288000 bytes`).\n\n## Chunked Downloads\n\nDownloads larger than `5MiB`\
    \ (`5242880 bytes`) must be done in `1-5MiB`\nchunks (with the exception of the\
    \ final chunk, which may be less than `1MiB`).\nEach chunk request MUST contain\
    \ a `Range` header specifying the requested portion of the download,\nand an `Accept`\
    \ header specifying binary and json content types  (`application/octet-stream,application/json`)\n\
    or all content types (`*/*`).\n\n## Drivers\n\nIf you need drivers to process\
    \ agronomic data, download the ADAPT plugin below. We only support the plugin\
    \ in the Windows environment, minimum is Windows 7 SP1.\n\nFor asPlanted, asHarvested\
    \ and asApplied data:\n* [ADAPT Plugin](https://dev.fieldview.com/drivers/ClimateADAPTPlugin_latest.exe)\n\
    <br>Release notes can be found [here](https://dev.fieldview.com/drivers/adapt-release-notes.txt).\n\
    <br>Download and use of the ADAPT plugin means that you agree to the EULA for\
    \ use of the ADAPT plugin. \n<br>Please review the [EULA](https://dev.fieldview.com/EULA/ADAPT%20Plugin%20EULA-06-19.pdf)\
    \ (last updated on June 6th, 2019) before download and use of the ADAPT plugin.\n\
    <br>For more information, please refer to:\n  * [ADAPT Resources](https://adaptframework.org/)\n\
    \  * [ADAPT Overview](https://aggateway.atlassian.net/wiki/spaces/ADM/overview)\n\
    \  * [ADAPT FAQ](https://aggateway.atlassian.net/wiki/spaces/ADM/pages/165942474/ADAPT+Frequently-Asked+Questions+FAQ)\n\
    \  * [ADAPT Videos](https://adaptframework.org/adapt-videos/)\n\n## Sample Test\
    \ Data\n\nSample agronomic data:\n* [asPlanted and asHarvested data](https://dev.fieldview.com/sample-agronomic-data/Planting_Harvesting_data_04_18_2018_21_46_18.zip)\n\
    * [asApplied data set 1](https://dev.fieldview.com/sample-agronomic-data/as-applied-data1.zip)\n\
    * [asApplied data set 2](https://dev.fieldview.com/sample-agronomic-data/as-applied-data2.zip)\n\
    <br>To upload the sample data to your account, please follow the instructions\
    \ in this [link](https://support.climate.com/kt#/kA02A000000AaxzSAC/en_US).\n\n\
    Sample soil data:\n* [Sample soil data](https://dev.fieldview.com/sample-soil-data/soil-sample.xml)\n\
    ---\n"
  title: Climate FieldView Platform APIs
  version: 4.0.11
  x-apisguru-categories:
  - open_data
  x-origin:
  - format: openapi
    url: https://dev.fieldview.com/openapi/platform.yaml
    version: "3.0"
  x-providerName: climate.com
servers:
- url: https://platform.climate.com/
tags:
- description: Field Boundary data endpoints.
  name: Boundaries
- description: Field data endpoints.
  name: Fields
- description: General data upload endpoints.
  name: Uploads
- description: General data export endpoints.
  name: Exports
- description: General data retrieval endpoints.
  name: Layers
- description: Resource Owner data endpoints.
  name: ResourceOwners
- description: Farm organization data endpoints.
  name: FarmOrganizations
- description: Operation data endpoints.
  name: Operations
paths:
  /v4/boundaries:
    post:
      description: |-
        Upload a **Boundary** entry by passing the geometry of the boundary. This will store the boundary but will not create field in Climate FieldView and will not link to an existing field in Climate FieldView.
        This is restricted to callers with **boundaries:write** scope.
        To upload a field boundary for field creation in Climate FieldView, please use **POST /v4/uploads**.
      operationId: uploadBoundary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoundaryUpload'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadedBoundaryId'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - boundaries:write
      summary: Upload a boundary
      tags:
      - Boundaries
      x-content-type: application/json
      x-accepts:
      - application/json
  /v4/boundaries/query:
    post:
      description: Retrieve multiple **Boundaries** (up to 10 per request).
      operationId: fetchBoundaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoundariesQuery'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boundaries'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - fields:read
      summary: Retrieve Boundaries in batch
      tags:
      - Boundaries
      x-content-type: application/json
      x-accepts:
      - application/json
  /v4/boundaries/{boundaryId}:
    get:
      description: Retrieve a **Boundary** by ID.
      operationId: fetchBoundaryById
      parameters:
      - description: Unique identifier of the Boundary
        explode: false
        in: path
        name: boundaryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boundary'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - fields:read
      summary: Retrieve a Boundary by ID
      tags:
      - Boundaries
      x-accepts:
      - application/json
  /v4/exports:
    post:
      description: "Step one in requesting a data product. The method will return\
        \ an **Export** ID which the caller will use in subsequent `GET` requests.\n\
        The following `contentTypes` may be requested:\n  * __application/vnd.climate.acrsi.geojson__\
        \ (Beta)\n     Exports the planting activities accessible by the authenticated\
        \ user and optionally filtered by resource owner\n     as a [GeoJSON Feature\
        \ Collection](https://tools.ietf.org/html/rfc7946#page-12).\n\n     The export\
        \ request definition must contain the following properties:\n       * plantingStartDate\n\
        \       * plantingEndDate\n       * resourceOwnerId\n\n     Requires `exports:read`\
        \ and `plantingActivitySummary:read` scope.\n  \n  * __application/vnd.climate.harvest.geojson__\n\
        \     Exports the harvesting activities accessible by the authenticated user\
        \ and optionally filtered by resource owner\n     as a [GeoJSON Feature Collection](https://tools.ietf.org/html/rfc7946#page-12).\n\
        \n     The export request definition must contain the following properties:\n\
        \       * harvestStartDate\n       * harvestEndDate\n       * resourceOwnerId\n\
        \n     Requires `exports:read` and `plantingActivitySummary:read` scope."
      operationId: postExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Export'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedExport'
          description: OK
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - exports:read
      summary: Initiate a new export request.
      tags:
      - Exports
      x-content-type: application/json
      x-accepts:
      - application/json
  /v4/exports/{exportId}/contents:
    get:
      description: Downloads larger than `5MiB` (`5242880 bytes`) in size must be
        downloaded in chunks no larger than `5MiB` (`5242880 bytes`) and no smaller
        than `1MiB` (`1048576 bytes`). The last chunk could be less than `1MiB` (`1048576
        bytes`).
      operationId: fetchExportContentsById
      parameters:
      - description: "Must be either \\*/* or application/octet-stream,application/json"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: Unique identifier of an Export.
        explode: false
        in: path
        name: exportId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Byte range `bytes=start-end` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1).\
          \ e.g. bytes=0-1048576. Currently only single range value is supported.\
          \ Both start and end need to be specified, end value should be greater than\
          \ start and end - start should not be greater than 5MiB."
        explode: false
        in: header
        name: Range
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ExportContents'
          description: Partial Result
          headers:
            Content-Range:
              description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
                e.g. bytes 0-5242879/10242880. Downloads larger than 5MiB (5242880
                bytes) in size must be downloaded in chunks no larger than 5MiB (5242880
                bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could
                be less than 1MiB (1048576 bytes).
              explode: false
              schema:
                type: string
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict (Report generation is still in progress)
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Gone (Report is expired)
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "416":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Range Not Satisfiable
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - exports:read
      summary: Retrieve the binary contents of a processed export request.
      tags:
      - Exports
      x-accepts:
      - application/json
      - application/octet-stream
  /v4/exports/{exportId}/status:
    get:
      description: Check the status of an **Export** by ID.
      operationId: fetchExportStatusById
      parameters:
      - description: Unique identifier of an Export.
        explode: false
        in: path
        name: exportId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportStatus'
          description: OK
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - exports:read
      summary: Retrieve the status of an Export.
      tags:
      - Exports
      x-accepts:
      - application/json
  /v4/farmOrganizations/{farmOrganizationType}/{farmOrganizationId}:
    get:
      description: Retrieve a given **farm organization** by organization type and
        ID.
      operationId: fetchFarmOrganizationByTypeAndId
      parameters:
      - description: Type of the farm organization.
        explode: false
        in: path
        name: farmOrganizationType
        required: true
        schema:
          enum:
          - farm
          type: string
        style: simple
      - description: Unique identifier of the farm organization.
        explode: false
        in: path
        name: farmOrganizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmOrganization'
          description: Returns the requested farm organization.
          headers:
            X-Http-Request-Id:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - farmOrganizations:read
      summary: Retrieve a specific farm organization by organization type and ID
      tags:
      - FarmOrganizations
      x-accepts:
      - application/json
  /v4/fields:
    get:
      description: Retrieve list of **Fields**. Filter the results by field name if
        the `fieldName` query parameter is specified.
      operationId: fetchFields
      parameters:
      - description: Opaque string which allows for fetching the next batch of results.  Can
          be used to poll for changes.
        explode: false
        in: header
        name: X-Next-Token
        required: false
        schema:
          type: string
        style: simple
      - description: Max number of results to return per batch.  Must be between 1
          and 100 inclusive.  Defaults to 100.
        explode: false
        in: header
        name: X-Limit
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: simple
      - description: Optional prefix filter for field name. Must be at least 3 characters.
        explode: true
        in: query
        name: fieldName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fields'
          description: OK
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fields'
          description: Partial Result
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to fetch next batch of results.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - fields:read
      summary: Retrieve list of Fields
      tags:
      - Fields
      x-accepts:
      - application/json
  /v4/fields/all:
    get:
      description: |-
        Retrieve all fields the authenticated user has access to, including fields shared with the authenticated user from other resource owners. Filter the results by field name if the `fieldName` query parameter is specified.
        A 409 will be returned if the X-Next-Token has expired. When receiving a 409, the client should discard the X-Next-Token, discard all currently persisted fields for the user, and re-fetch fields from /fields/all.
      operationId: fetchAllFields
      parameters:
      - description: Opaque string which allows for fetching the next batch of results.  Can
          be used to poll for changes.
        explode: false
        in: header
        name: X-Next-Token
        required: false
        schema:
          type: string
        style: simple
      - description: Max number of results to return per batch.  Must be between 1
          and 100 inclusive.  Defaults to 100.
        explode: false
        in: header
        name: X-Limit
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: simple
      - description: Optional prefix filter for field name. Must be at least 3 characters.
        explode: true
        in: query
        name: fieldName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fields'
          description: OK
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fields'
          description: Partial Result
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to fetch next batch of results.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - fields:read
      summary: Retrieve list of all Fields the user has access to.
      tags:
      - Fields
      x-accepts:
      - application/json
  /v4/fields/{fieldId}:
    get:
      description: Retrieve a given **Field** by ID.
      operationId: fetchFieldById
      parameters:
      - description: Unique identifier of the Field.
        explode: false
        in: path
        name: fieldId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
          description: Returns the requested Field.
          headers:
            X-Http-Request-Id:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - fields:read
      summary: Retrieve a specific Field by ID
      tags:
      - Fields
      x-accepts:
      - application/json
  /v4/layers/asApplied:
    get:
      description: "Retrieve a list of application activities. The id in the response\
        \ is used for  GET /v4/layers/asApplied/{activityId}/contents."
      parameters:
      - description: "Must be either \\*/* or application/octet-stream,application/json"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: Opaque string which allows for fetching the next batch of results.  Can
          be used to poll for changes.
        explode: false
        in: header
        name: X-Next-Token
        required: false
        schema:
          type: string
        style: simple
      - description: Max number of results to return per batch.  Must be between 1
          and 100 inclusive.  Defaults to 100.
        explode: false
        in: header
        name: X-Limit
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: simple
      - description: "Optional unique identifier of the resource owner.  If resourceOwnerId\
          \ is not specified, it defaults to the x-authenticated-user-uuid."
        explode: true
        in: query
        name: resourceOwnerId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional start time by which to filter layer results. Time must\
          \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with an end time at or after (inclusive) the specified time will\
          \ match this filter. If both occurredAfter and occurredBefore are populated,\
          \ occurredAfter must be <= occurredBefore."
        explode: true
        in: query
        name: occurredAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Optional end time by which to filter layer results. Time must\
          \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with a start time at or before (inclusive) the specified time.\
          \ If both occurredAfter and occurredBefore are populated, occurredAfter\
          \ must be <= occurredBefore."
        explode: true
        in: query
        name: occurredBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Optional updated time by which to filter layer results. Time\
          \ must be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with a modification time at or after (inclusive) the specified\
          \ time."
        explode: true
        in: query
        name: updatedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationActivities'
          description: OK
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationActivities'
          description: Partial Result
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to fetch next batch of results.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - asApplied:read
      summary: Retrieve a list of application activities
      tags:
      - Layers
      x-accepts:
      - application/json
  /v4/layers/asApplied/{activityId}/contents:
    get:
      description: "Retrieve an individual application activity by id.  Ids are retrieved\
        \ via the  /layers/asApplied route. Downloads larger than `5MiB` (`5242880\
        \ bytes`) in size, must be downloaded in chunks no larger than `5MiB` (`5242880\
        \ bytes`) and no smaller than `1MiB`  (`1048576 bytes`). The last chunk could\
        \ be less than `1MiB` (`1048576 bytes`). The data is compressed using .zip\
        \ format."
      parameters:
      - description: "Must be either \\*/* or application/octet-stream,application/json"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: Unique identifier of the Application Activity.
        explode: false
        in: path
        name: activityId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Byte range `bytes=start-end` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1).\
          \ e.g. bytes=0-1048576. Currently only single range value is supported.\
          \ Both start and end need to be specified, end value should be greater than\
          \ start and end - start should not be greater than 5MiB."
        explode: false
        in: header
        name: Range
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ApplicationActivityContents'
          description: OK
          headers:
            Content-Range:
              description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
                e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880
                bytes) in size must be downloaded in chunks no larger than 5MiB (5242880
                bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could
                be less than 1MiB (1048576 bytes).
              explode: false
              schema:
                type: string
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ApplicationActivityContents'
          description: Partial Result
          headers:
            Content-Range:
              description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
                e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880
                bytes) in size must be downloaded in chunks no larger than 5MiB (5242880
                bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could
                be less than 1MiB (1048576 bytes).
              explode: false
              schema:
                type: string
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "416":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Range Not Satisfiable
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - asApplied:read
      summary: Retrieve the raw application activity
      tags:
      - Layers
      x-accepts:
      - application/json
      - application/octet-stream
  /v4/layers/asHarvested:
    get:
      description: "Retrieve a list of harvest activities. The id in the response\
        \ is used for  GET /v4/layers/asHarvested/{activityId}/contents."
      parameters:
      - description: "Must be either \\*/* or application/octet-stream,application/json"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: Opaque string which allows for fetching the next batch of results.  Can
          be used to poll for changes.
        explode: false
        in: header
        name: X-Next-Token
        required: false
        schema:
          type: string
        style: simple
      - description: Max number of results to return per batch.  Must be between 1
          and 100 inclusive.  Defaults to 100.
        explode: false
        in: header
        name: X-Limit
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: simple
      - description: "Optional unique identifier of the resource owner.  If resourceOwnerId\
          \ is not specified, it defaults to the x-authenticated-user-uuid."
        explode: true
        in: query
        name: resourceOwnerId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional start time by which to filter layer results. Time must\
          \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with an end time at or after (inclusive) the specified time will\
          \ match this filter. If both occurredAfter and occurredBefore are populated,\
          \ occurredAfter must be <= occurredBefore."
        explode: true
        in: query
        name: occurredAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Optional end time by which to filter layer results. Time must\
          \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with a start time at or before (inclusive) the specified time.\
          \ If both occurredAfter and occurredBefore are populated, occurredAfter\
          \ must be <= occurredBefore."
        explode: true
        in: query
        name: occurredBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Optional updated time by which to filter layer results. Time\
          \ must be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with a modification time at or after (inclusive) the specified\
          \ time."
        explode: true
        in: query
        name: updatedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarvestActivities'
          description: OK
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarvestActivities'
          description: Partial Result
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to fetch next batch of results.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - asHarvested:read
      summary: Retrieve a list of harvest activities
      tags:
      - Layers
      x-accepts:
      - application/json
  /v4/layers/asHarvested/{activityId}/contents:
    get:
      description: "Retrieve an individual harvest activity by id.  Ids are retrieved\
        \ via the  /layers/asHarvested route. Downloads larger than `5MiB` (`5242880\
        \ bytes`) in size, must be downloaded in chunks no larger than `5MiB` (`5242880\
        \ bytes`) and no smaller than `1MiB`  (`1048576 bytes`). The last chunk could\
        \ be less than `1MiB` (`1048576 bytes`). The data is compressed using .zip\
        \ format."
      parameters:
      - description: "Must be either \\*/* or application/octet-stream,application/json"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: Unique identifier of the Harvest Activity.
        explode: false
        in: path
        name: activityId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Byte range `bytes=start-end` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1).\
          \ e.g. bytes=0-1048576. Currently only single range value is supported.\
          \ Both start and end need to be specified, end value should be greater than\
          \ start and end - start should not be greater than 5MiB."
        explode: false
        in: header
        name: Range
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/HarvestActivityContents'
          description: OK
          headers:
            Content-Range:
              description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
                e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880
                bytes) in size must be downloaded in chunks no larger than 5MiB (5242880
                bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could
                be less than 1MiB (1048576 bytes).
              explode: false
              schema:
                type: string
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/HarvestActivityContents'
          description: Partial Result
          headers:
            Content-Range:
              description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
                e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880
                bytes) in size must be downloaded in chunks no larger than 5MiB (5242880
                bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could
                be less than 1MiB (1048576 bytes).
              explode: false
              schema:
                type: string
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "416":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Range Not Satisfiable
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - asHarvested:read
      summary: Retrieve the raw harvest activity
      tags:
      - Layers
      x-accepts:
      - application/json
      - application/octet-stream
  /v4/layers/asPlanted:
    get:
      description: "Retrieve a list of planting activities. The id in the response\
        \ is used for  GET /v4/layers/asPlanted/{activityId}/contents."
      parameters:
      - description: "Must be either \\*/* or application/octet-stream,application/json"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: Opaque string which allows for fetching the next batch of results.  Can
          be used to poll for changes.
        explode: false
        in: header
        name: X-Next-Token
        required: false
        schema:
          type: string
        style: simple
      - description: Max number of results to return per batch.  Must be between 1
          and 100 inclusive.  Defaults to 100.
        explode: false
        in: header
        name: X-Limit
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: simple
      - description: "Optional unique identifier of the resource owner.  If resourceOwnerId\
          \ is not specified, it defaults to the x-authenticated-user-uuid."
        explode: true
        in: query
        name: resourceOwnerId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional start time by which to filter layer results. Time must\
          \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with an end time at or after (inclusive) the specified time will\
          \ match this filter. If both occurredAfter and occurredBefore are populated,\
          \ occurredAfter must be <= occurredBefore."
        explode: true
        in: query
        name: occurredAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Optional end time by which to filter layer results. Time must\
          \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with a start time at or before (inclusive) the specified time.\
          \ If both occurredAfter and occurredBefore are populated, occurredAfter\
          \ must be <= occurredBefore."
        explode: true
        in: query
        name: occurredBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Optional updated time by which to filter layer results. Time\
          \ must be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with a modification time at or after (inclusive) the specified\
          \ time."
        explode: true
        in: query
        name: updatedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlantingActivities'
          description: OK
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlantingActivities'
          description: Partial Result
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to fetch next batch of results.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - asPlanted:read
      summary: Retrieve a list of planting activities
      tags:
      - Layers
      x-accepts:
      - application/json
  /v4/layers/asPlanted/{activityId}/contents:
    get:
      description: "Retrieve an individual planting activity by id.  Ids are retrieved\
        \ via the  /layers/asPlanted route. Downloads larger than `5MiB` (`5242880\
        \ bytes`) in size, must be downloaded in chunks no larger than `5MiB` (`5242880\
        \ bytes`) and no smaller than `1MiB`  (`1048576 bytes`). The last chunk could\
        \ be less than `1MiB` (`1048576 bytes`).  The data is compressed using .zip\
        \ format."
      parameters:
      - description: "Must be either \\*/* or application/octet-stream,application/json"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: Unique identifier of the Planting Activity.
        explode: false
        in: path
        name: activityId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Byte range `bytes=start-end` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1).\
          \ e.g. bytes=0-1048576. Currently only single range value is supported.\
          \ Both start and end need to be specified, end value should be greater than\
          \ start and end - start should not be greater than 5MiB."
        explode: false
        in: header
        name: Range
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/PlantingActivityContents'
          description: OK
          headers:
            Content-Range:
              description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
                e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880
                bytes) in size must be downloaded in chunks no larger than 5MiB (5242880
                bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could
                be less than 1MiB (1048576 bytes).
              explode: false
              schema:
                type: string
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/PlantingActivityContents'
          description: Partial Result
          headers:
            Content-Range:
              description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
                e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880
                bytes) in size must be downloaded in chunks no larger than 5MiB (5242880
                bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could
                be less than 1MiB (1048576 bytes).
              explode: false
              schema:
                type: string
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "416":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Range Not Satisfiable
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - asPlanted:read
      summary: Retrieve the raw planting activity
      tags:
      - Layers
      x-accepts:
      - application/json
      - application/octet-stream
  /v4/layers/scoutingObservations:
    get:
      description: Retrieve a list of scouting observations created or updated by
        the user identified by the Authorization header.
      parameters:
      - description: Opaque string which allows for fetching the next batch of results.  Can
          be used to poll for changes.
        explode: false
        in: header
        name: X-Next-Token
        required: false
        schema:
          type: string
        style: simple
      - description: Max number of results to return per batch.  Must be between 1
          and 100 inclusive.  Defaults to 100.
        explode: false
        in: header
        name: X-Limit
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: simple
      - description: "Optional start time by which to filter layer results. Time must\
          \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with an end time at or after (inclusive) the specified time will\
          \ match this filter. If both occurredAfter and occurredBefore are populated,\
          \ occurredAfter must be <= occurredBefore."
        explode: true
        in: query
        name: occurredAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Optional end time by which to filter layer results. Time must\
          \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
          \ Layers with a start time at or before (inclusive) the specified time.\
          \ If both occurredAfter and occurredBefore are populated, occurredAfter\
          \ must be <= occurredBefore."
        explode: true
        in: query
        name: occurredBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoutingObservations'
          description: OK
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoutingObservations'
          description: Partial Result
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to fetch next batch of results.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - scouting:read
      summary: Retrieve a list of scouting observations
      tags:
      - Layers
      x-accepts:
      - application/json
  /v4/layers/scoutingObservations/{scoutingObservationId}:
    get:
      description: Retrieve an individual scouting observation by id.  Ids are retrieved
        via the /layers/scoutingObservations route.
      parameters:
      - description: Unique identifier of the Scouting Observation.
        explode: false
        in: path
        name: scoutingObservationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoutingObservation'
          description: Returns the requested scouting observation.
          headers:
            X-Http-Request-Id:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - scouting:read
      summary: Retrieve individual scouting observation
      tags:
      - Layers
      x-accepts:
      - application/json
  /v4/layers/scoutingObservations/{scoutingObservationId}/attachments:
    get:
      description: "Retrieve attachments associated with a given scouting observation.\
        \ Photos added to scouting notes in the FieldView app are capped to 20MB,\
        \ and we won’t store photos larger than that in a scouting note."
      parameters:
      - description: Unique identifier of the Scouting Observation.
        explode: false
        in: path
        name: scoutingObservationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Opaque string which allows for fetching the next batch of results.  Can
          be used to poll for changes.
        explode: false
        in: header
        name: X-Next-Token
        required: false
        schema:
          type: string
        style: simple
      - description: Max number of results to return per batch.  Must be between 1
          and 100 inclusive.  Defaults to 100.
        explode: false
        in: header
        name: X-Limit
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoutingObservationAttachments'
          description: OK
        "206":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoutingObservationAttachments'
          description: Partial Result
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: Token used to fetch next batch of results.
              explode: false
              schema:
                type: string
              style: simple
        "304":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Not Modified
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
            X-Next-Token:
              description: A token which may be used to poll for updates.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - scouting:read
      summary: Retrieve attachments associated with a given scouting observation.
      tags:
      - Layers
      x-accepts:
      - application/json
  /v4/layers/scoutingObservations/{scoutingObservationId}/attachments/{attachmentId}/contents:
    get:
      description: "Photos added to scouting notes in the FieldView app are capped\
        \ to `20MiB` (`20971520 bytes`), and we won’t store photos larger than that\
        \ in a scouting note. Downloads larger than `5MiB` (`5242880 bytes`) in size,\
        \ must be downloaded in chunks no larger than `5MiB` (`5242880 bytes`) and\
        \ no smaller than `1MiB` (`1048576 bytes`). The last chunk could be less than\
        \ `1MiB` (`1048576 bytes`)."
      parameters:
      - description: "Must be either \\*/* or application/octet-stream,application/json"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: Unique identifier of the Scouting Observation.
        explode: false
        in: path
        name: scoutingObservationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier of the attachment.
        explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Byte range `bytes=start-end` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1).\
          \ e.g. bytes=0-1048576. Currently only single range value is supported.\
          \ Both start and end need to be specified, end value should be greater than\
          \ start and end - start should not be greater than 5MiB."
        explode: false
        in: header
        name: Range
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ScoutingObservationAttachmentContents'
            image/png:
              schema:
                $ref: '#/components/schemas/ScoutingObservationAttachmentContents'
          description: OK
          headers:
            Content-Range:
              description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
                e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880
                bytes) in size must be downloaded in chunks no larger than 5MiB (5242880
                bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could
                be less than 1MiB (1048576 bytes).
              explode: false
              schema:
                type: string
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request
              explode: false
              schema:
                type: string
              style: simple
        "206":
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ScoutingObservationAttachmentContents'
          description: Partial Result
          headers:
            Content-Range:
              description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
                e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880
                bytes) in size must be downloaded in chunks no larger than 5MiB (5242880
                bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could
                be less than 1MiB (1048576 bytes).
              explode: false
              schema:
                type: string
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "416":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Range Not Satisfiable
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - scouting:read
      summary: Retrieve the binary contents of a scouting observation’s attachment.
      tags:
      - Layers
      x-accepts:
      - application/json
      - image/jpeg
      - image/png
  /v4/operations/all:
    get:
      description: Retrieve the **operations** accessible to the authenticated user.
        Filter the results by resource owner if the `resourceOwnerId` query parameter
        is specified.
      operationId: fetchOperations
      parameters:
      - description: Optional comma-separated list of resource owner unique identifiers
          by which to filter results.
        explode: true
        in: query
        name: resourceOwnerId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operations'
          description: Returns the requested operations.
          headers:
            X-Http-Request-Id:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - operations:read
      summary: Retrieve the operations accessible to a a given user.
      tags:
      - Operations
      x-accepts:
      - application/json
  /v4/resourceOwners/{resourceOwnerId}:
    get:
      description: Retrieve a resource owner for the given `resourceOwnerId`.
      operationId: getResourceOwner
      parameters:
      - description: Unique identifier of the resource owner.
        explode: false
        in: path
        name: resourceOwnerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceOwner'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - resourceOwners:read
      summary: Retrieve a resource owner by ID
      tags:
      - ResourceOwners
      x-accepts:
      - application/json
  /v4/uploads:
    post:
      description: "Step one in uploading a data product. The method will return an\
        \ **Upload** ID which the caller will use in subsequent `PUT` requests.\n\
        The following `contentTypes` may be uploaded:\n    <details><summary>__image/vnd.climate.thermal.geotiff__</summary>\n\
        \n    Allows for the upload of a thermal image. The image is a single band\
        \ geotiff with 64 bit signed floating point values in degrees Celsius. The\
        \ Coordinate Reference System (CRS) must be UTM with WGS84 datum.\n\n    The\
        \ following metadata entries are required to be embedded in the geotiff:\n\
        \      * acquisitionStartDate - ISO8601 date\n      * acquisitionEndDate -\
        \ ISO8601 date\n      * isCalibrated - boolean\n\n    The following metadata\
        \ entries are optional:\n      * sourceId - uuid referencing the asset in\
        \ the partner's system\n      * fieldId - uuid referencing a field in the\
        \ Climate system\n      * boundaryId - uuid referencing a boundary in the\
        \ Climate system\n      * brandId - uuid referencing a partner's branding\
        \ in the Climate system\n      * name - name of the layer. The maximum number\
        \ of characters that will be accepted as input is 20.\n\n    Requires either\
        \ imagery:write or platform scope.\n  </details>\n  <details><summary>__image/vnd.climate.ndvi.geotiff__</summary>\n\
        \n    Allows for the upload of a NDVI image. The image is a single band geotiff\
        \ with 64 bit signed floating point values in the range of -1 to 1 inclusive.\
        \ The Coordinate Reference System (CRS) must be UTM with WGS84 datum.\n\n\
        \    The following metadata entries are required to be embedded in the geotiff:\n\
        \      * acquisitionStartDate - ISO8601 date\n      * acquisitionEndDate -\
        \ ISO8601 date\n\n    The following metadata entries are optional:\n     \
        \ * sourceId - uuid referencing the asset in the partner's system\n      *\
        \ fieldId - uuid referencing a field in the Climate system\n      * boundaryId\
        \ - uuid referencing a boundary in the Climate system\n      * brandId - uuid\
        \ referencing a partner's branding in the Climate system\n      * name - name\
        \ of the layer. The maximum number of characters that will be accepted as\
        \ input is 20.\n\n    Requires either imagery:write or platform scope.\n \
        \ </details>\n  <details><summary> __image/vnd.climate.rgb.geotiff__</summary>\n\
        \n    Allows for the upload of a true color image. The image is a multi band\
        \ geotiff with 24-bit composite values. Each band is 8 bits with values in\
        \ the range of 0 to 255. The Coordinate Reference System (CRS) must be UTM\
        \ with WGS84 datum. The geotiff must contain 3 bands in the order Red, Green,\
        \ Blue.\n\n    The following metadata entries are required to be embedded\
        \ in the geotiff:\n      * acquisitionStartDate - ISO8601 date\n      * acquisitionEndDate\
        \ - ISO8601 date\n      * isCalibrated - boolean\n\n    The following metadata\
        \ entries are optional:\n      * sourceId - uuid referencing the asset in\
        \ the partner's system\n      * fieldId - uuid referencing a field in the\
        \ Climate system\n      * boundaryId - uuid referencing a boundary in the\
        \ Climate system\n      * brandId - uuid referencing a partner's branding\
        \ in the Climate system\n      * reflectanceComputeMethod - either TOA or\
        \ GROUND\n      * name - name of the layer. The maximum number of characters\
        \ that will be accepted as input is 20.\n\n    Requires either imagery:write\
        \ or platform scope.\n  </details>\n  <details><summary> __image/vnd.climate.rgb-nir.geotiff__</summary>\n\
        \n    Allows for the upload of a Near Infrared (NIR) image. The Coordinate\
        \ Reference System (CRS) must be UTM with WGS84 datum.\n\n    The following\
        \ metadata entries are required to be embedded in the geotiff:\n      * acquisitionStartDate\
        \ - ISO8601 date\n      * acquisitionEndDate - ISO8601 date\n      * isCalibrated\
        \ - boolean\n\n    The following metadata entries are optional:\n      * sourceId\
        \ - uuid referencing the asset in the partner's system\n      * fieldId -\
        \ uuid referencing a field in the Climate system\n      * boundaryId - uuid\
        \ referencing a boundary in the Climate system\n      * brandId - uuid referencing\
        \ a partner's branding in the Climate system\n      * reflectanceComputeMethod\
        \ - either TOA or GROUND\n      * name - name of the layer. The maximum number\
        \ of characters that will be accepted as input is 20.\n\n    Requires either\
        \ imagery:write or platform scope.\n  </details>\n  <details><summary>__image/vnd.climate.rgb-cir.geotiff__</summary>\n\
        \n    Allows for the upload of a Color Infrared (CIR) image. The Coordinate\
        \ Reference System (CRS) must be UTM with WGS84 datum.\n\n    The following\
        \ metadata entries are required to be embedded in the geotiff:\n      * acquisitionStartDate\
        \ - ISO8601 date\n      * acquisitionEndDate - ISO8601 date\n      * isCalibrated\
        \ - boolean\n\n    The following metadata entries are optional:\n      * sourceId\
        \ - uuid referencing the asset in the partner's system\n      * fieldId -\
        \ uuid referencing a field in the Climate system\n      * boundaryId - uuid\
        \ referencing a boundary in the Climate system\n      * brandId - uuid referencing\
        \ a partner's branding in the Climate system\n      * reflectanceComputeMethod\
        \ - either TOA or GROUND\n      * name - name of the layer. The maximum number\
        \ of characters that will be accepted as input is 20.\n\n    Requires either\
        \ imagery:write or platform scope.\n  </details>\n  <details><summary> __application/vnd.climate.rx.planting.shp__</summary>\n\
        \n    Allows for the upload of a planting prescription in shapefile format.\
        \  The upload must be an archive in the zip format.  It should contain one\
        \ and only one of each of the following file types:\n      * .shp\n      *\
        \ .shx\n      * .dbf\n\n    All files with the above suffixes must have the\
        \ same prefix, ie Back40.shp, Back40.shx and Back40.dbf.\n\n    Requires either\
        \ rx:write or platform scope.\n  </details>\n  <details><summary> __application/vnd.climate.prescription.zones.shp__</summary>\n\
        \n    Allows for the upload of a zones prescription in shapefile format. \
        \ The upload must be an archive in the zip format.  It should contain one\
        \ and only one of each of the following file types:\n      * .shp\n      *\
        \ .shx\n      * .dbf\n\n    All files with the above suffixes must have the\
        \ same prefix, ie Back40.shp, Back40.shx and Back40.dbf.\n\n    The following\
        \ metadata entries are required:\n      * fieldId - field identifier for prescription\
        \ zones.\n    \n    Requires either rxZones:write or platform scope.\n  </details>\n\
        \  <details><summary> __application/vnd.climate.modus.xml__</summary>\n\n\
        \    Allows for the upload of a soil sampling file in the modus 1.0 format\
        \ with some restrictions.  The upload must be a single xml file.\n\n    The\
        \ following elements are required to be present in the modus file.\n     \
        \ * EventCode - Max length of 64 bytes\n      * EventDate - Must be in ISO8601\n\
        \      * SoilSample - Has a maxOccurs of 20k\n      * Depth - Has a maxOccurs\
        \ of 50\n      * LabName - Must be non-empty.\n      * StartingDepth - 0 to\
        \ 36 inclusive, default 0\n      * EndingDepth - 1 - 36 inclusive, default\
        \ 1\n      * ColumnDepth\n      * DepthUnit - must be inches\n      * Geometry\
        \ - point in wgs84\n    \n    Requires the soil:write scope.\n   </details>\n\
        \   <details><summary> __application/vnd.climate.stand-count.geojson__</summary>\n\
        \n    Allows for the upload of a valid [geojson feature collection](https://tools.ietf.org/html/rfc7946#section-3.3).\n\
        \n    Each feature in the collection must contain the following entry in its\
        \ properties section:\n      * StandPPA - A count of the number of plants\
        \ per acre:\n\n    Additionally, the type field of each feature's geometry\
        \ field must be:\n      * Point\n\n    Requires `imagery:write` scope.\n \
        \  </details>\n   <details><summary> __application/vnd.climate.weed-count.geojson__</summary>\n\
        \n    Allows for the upload of a valid [geojson feature collection](https://tools.ietf.org/html/rfc7946#section-3.3).\n\
        \n    Each feature in the collection must contain the following entry in its\
        \ properties section:\n      * StandPPA - A count of the number of plants\
        \ per acre:\n\n    Additionally, the type field of each feature's geometry\
        \ field must be:\n      * Point\n\n    Requires `imagery:write` scope.\n \
        \  </details>\n   <details><summary> __application/vnd.climate.as-applied.zip__</summary>\n\
        \n    Allows for the upload of a valid application data [supported formats](https://support.climate.com/kt#/kA02A000000DjvOSAS/en_US).\n\
        \n    The following metadata entries are required:\n      * fileName - name\
        \ of the file being uploaded.\n\n    The following metadata entries are optional:\n\
        \      * resourceOwner - the grower's account email, where dealer/partner\
        \ wants to upload data. As a prerequisite the grower must share their operation\
        \ with the dealer/partner.\n\n    Requires `asApplied:write` scope.\n   </details>\n\
        \   <details><summary> __application/vnd.climate.as-planted.zip__</summary>\n\
        \n    Allows for the upload of a valid planting data [supported formats](https://support.climate.com/kt#/kA02A000000DjvOSAS/en_US).\n\
        \n    The following metadata entries are required:\n      * fileName - name\
        \ of the file being uploaded.\n\n    The following metadata entries are optional:\n\
        \      * resourceOwner - the grower's account email, where dealer/partner\
        \ wants to upload data. As a prerequisite the grower must share their operation\
        \ with the dealer/partner.\n\n    Requires `asPlanted:write` scope.\n   </details>\n\
        \   <details><summary> __application/vnd.climate.as-harvested.zip__</summary>\n\
        \n    Allows for the upload of a valid harvest data [supported formats](https://support.climate.com/kt#/kA02A000000DjvOSAS/en_US).\n\
        \n    The following metadata entries are required:\n      * fileName - name\
        \ of the file being uploaded.\n\n    The following metadata entries are optional:\n\
        \      * resourceOwner - the grower's account email, where dealer/partner\
        \ wants to upload data. As a prerequisite the grower must share their operation\
        \ with the dealer/partner.\n\n    Requires `asHarvested:write` scope.\n  \
        \ </details>"
      operationId: postUpload
      parameters:
      - description: "Email address associated with a Climate account, used when to\
          \ sending to another user."
        explode: false
        in: header
        name: X-Recipient-Email
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upload'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedUpload'
          description: Returns a new upload with ID used to PUT file contents.
          headers:
            X-Http-Request-Id:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - fields:write
        - imagery:write
        - rx:write
        - standCount:write
        - weedCount:write
        - asApplied:write
        - asPlanted:write
        - asHarvested:write
      summary: Initiate a new upload
      tags:
      - Uploads
      x-content-type: application/json
      x-accepts:
      - application/json
  /v4/uploads/status/query:
    post:
      description: Check the status of multiple **Uploads** (up to 100 per request).
      operationId: fetchUploadStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadStatusQuery'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadStatuses'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - fields:write
        - imagery:write
        - rx:write
        - asApplied:write
        - asPlanted:write
        - asHarvested:write
      summary: Retrieve Upload statuses in batch
      tags:
      - Uploads
      x-content-type: application/json
      x-accepts:
      - application/json
  /v4/uploads/{uploadId}:
    put:
      description: Send chunked data for an **Upload**.
      operationId: chunkedUpload
      parameters:
      - description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
          e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes)
          in size must be downloaded in chunks no larger than 5MiB (5242880 bytes)
          and no smaller than 1MiB (1048576 bytes). The last chunk could be less than
          1MiB (1048576 bytes).
        explode: false
        in: header
        name: Content-Range
        required: true
        schema:
          type: string
        style: simple
      - description: Unique identifier of an Upload.
        explode: false
        in: path
        name: uploadId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Must be `application/octet-stream`
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - fields:write
        - imagery:write
        - rx:write
        - soil:write
        - asApplied:write
        - asPlanted:write
        - asHarvested:write
      summary: Chunked upload of data
      tags:
      - Uploads
      x-accepts:
      - application/json
  /v4/uploads/{uploadId}/status:
    get:
      description: Check the status of an **Upload** by ID.
      operationId: fetchUploadStatusById
      parameters:
      - description: Unique identifier of an Upload.
        explode: false
        in: path
        name: uploadId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadStatus'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Input
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
          headers:
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Busy
          headers:
            Retry-After:
              description: Number of seconds to wait before retrying the request.
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Http-Request-Id:
              description: Unique identifier assigned to the request.
              explode: false
              schema:
                type: string
              style: simple
      security:
      - api_key: []
      - oauth2_authorization_code:
        - platform
        - fields:write
        - imagery:write
        - rx:write
        - asApplied:write
        - asPlanted:write
        - asHarvested:write
      summary: Retrieve Upload status
      tags:
      - Uploads
      x-accepts:
      - application/json
components:
  parameters:
    Accept:
      description: "Must be either \\*/* or application/octet-stream,application/json"
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        type: string
      style: simple
    ApplicationActivityId:
      description: Unique identifier of the Application Activity.
      explode: false
      in: path
      name: activityId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    BinaryContentType:
      description: Must be `application/octet-stream`
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        type: string
      style: simple
    BoundaryId:
      description: Unique identifier of the Boundary
      explode: false
      in: path
      name: boundaryId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    ContentRange:
      description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
        e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes)
        in size must be downloaded in chunks no larger than 5MiB (5242880 bytes) and
        no smaller than 1MiB (1048576 bytes). The last chunk could be less than 1MiB
        (1048576 bytes).
      explode: false
      in: header
      name: Content-Range
      required: true
      schema:
        type: string
      style: simple
    ExportId:
      description: Unique identifier of an Export.
      explode: false
      in: path
      name: exportId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    FarmOrganizationId:
      description: Unique identifier of the farm organization.
      explode: false
      in: path
      name: farmOrganizationId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    FarmOrganizationType:
      description: Type of the farm organization.
      explode: false
      in: path
      name: farmOrganizationType
      required: true
      schema:
        enum:
        - farm
        type: string
      style: simple
    FieldId:
      description: Unique identifier of the Field.
      explode: false
      in: path
      name: fieldId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    HarvestActivityId:
      description: Unique identifier of the Harvest Activity.
      explode: false
      in: path
      name: activityId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    OccurredAfter:
      description: "Optional start time by which to filter layer results. Time must\
        \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
        \ Layers with an end time at or after (inclusive) the specified time will\
        \ match this filter. If both occurredAfter and occurredBefore are populated,\
        \ occurredAfter must be <= occurredBefore."
      explode: true
      in: query
      name: occurredAfter
      required: false
      schema:
        format: date-time
        type: string
      style: form
    OccurredBefore:
      description: "Optional end time by which to filter layer results. Time must\
        \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
        \ Layers with a start time at or before (inclusive) the specified time. If\
        \ both occurredAfter and occurredBefore are populated, occurredAfter must\
        \ be <= occurredBefore."
      explode: true
      in: query
      name: occurredBefore
      required: false
      schema:
        format: date-time
        type: string
      style: form
    OptionalFieldNamePrefix:
      description: Optional prefix filter for field name. Must be at least 3 characters.
      explode: true
      in: query
      name: fieldName
      required: false
      schema:
        type: string
      style: form
    OptionalResourceOwnerId:
      description: "Optional unique identifier of the resource owner.  If resourceOwnerId\
        \ is not specified, it defaults to the x-authenticated-user-uuid."
      explode: true
      in: query
      name: resourceOwnerId
      required: false
      schema:
        format: uuid
        type: string
      style: form
    OptionalResourceOwnerIdList:
      description: Optional comma-separated list of resource owner unique identifiers
        by which to filter results.
      explode: true
      in: query
      name: resourceOwnerId
      required: false
      schema:
        type: string
      style: form
    PlantingActivityId:
      description: Unique identifier of the Planting Activity.
      explode: false
      in: path
      name: activityId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    Range:
      description: "Byte range `bytes=start-end` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1).\
        \ e.g. bytes=0-1048576. Currently only single range value is supported. Both\
        \ start and end need to be specified, end value should be greater than start\
        \ and end - start should not be greater than 5MiB."
      explode: false
      in: header
      name: Range
      required: true
      schema:
        type: string
      style: simple
    ResourceOwnerId:
      description: Unique identifier of the resource owner.
      explode: false
      in: path
      name: resourceOwnerId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    ScoutingObservationAttachmentId:
      description: Unique identifier of the attachment.
      explode: false
      in: path
      name: attachmentId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    ScoutingObservationId:
      description: Unique identifier of the Scouting Observation.
      explode: false
      in: path
      name: scoutingObservationId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    UpdatedAfter:
      description: "Optional updated time by which to filter layer results. Time must\
        \ be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339).\
        \ Layers with a modification time at or after (inclusive) the specified time."
      explode: true
      in: query
      name: updatedAfter
      required: false
      schema:
        format: date-time
        type: string
      style: form
    UploadId:
      description: Unique identifier of an Upload.
      explode: false
      in: path
      name: uploadId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    X-Limit:
      description: Max number of results to return per batch.  Must be between 1 and
        100 inclusive.  Defaults to 100.
      explode: false
      in: header
      name: X-Limit
      required: false
      schema:
        format: int32
        maximum: 100
        minimum: 1
        type: integer
      style: simple
    X-Next-Token:
      description: Opaque string which allows for fetching the next batch of results.  Can
        be used to poll for changes.
      explode: false
      in: header
      name: X-Next-Token
      required: false
      schema:
        type: string
      style: simple
    X-Recipient-Email:
      description: "Email address associated with a Climate account, used when to\
        \ sending to another user."
      explode: false
      in: header
      name: X-Recipient-Email
      required: false
      schema:
        type: string
      style: simple
  responses:
    "200":
      description: OK
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "204":
      description: No Content
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "304":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Empty'
      description: Not Modified
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: A token which may be used to poll for updates.
          explode: false
          schema:
            type: string
          style: simple
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Input
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "403":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "409":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Conflict
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "410":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Gone
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "416":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Range Not Satisfiable
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "429":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Too Many Requests
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal Server Error
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    "503":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Server Busy
      headers:
        Retry-After:
          description: Number of seconds to wait before retrying the request.
          explode: false
          schema:
            format: int32
            type: integer
          style: simple
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    FetchApplicationActivitiesOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationActivities'
      description: OK
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to poll for updates.
          explode: false
          schema:
            type: string
          style: simple
    FetchApplicationActivitiesPartial:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationActivities'
      description: Partial Result
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to fetch next batch of results.
          explode: false
          schema:
            type: string
          style: simple
    FetchApplicationActivityOk:
      content:
        application/octet-stream:
          schema:
            $ref: '#/components/schemas/ApplicationActivityContents'
      description: OK
      headers:
        Content-Range:
          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
            e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes)
            in size must be downloaded in chunks no larger than 5MiB (5242880 bytes)
            and no smaller than 1MiB (1048576 bytes). The last chunk could be less
            than 1MiB (1048576 bytes).
          explode: false
          schema:
            type: string
          style: simple
        X-Http-Request-Id:
          description: Unique identifier assigned to the request
          explode: false
          schema:
            type: string
          style: simple
    FetchApplicationActivityPartial:
      content:
        application/octet-stream:
          schema:
            $ref: '#/components/schemas/ApplicationActivityContents'
      description: Partial Result
      headers:
        Content-Range:
          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
            e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes)
            in size must be downloaded in chunks no larger than 5MiB (5242880 bytes)
            and no smaller than 1MiB (1048576 bytes). The last chunk could be less
            than 1MiB (1048576 bytes).
          explode: false
          schema:
            type: string
          style: simple
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    FetchBoundariesOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Boundaries'
      description: OK
    FetchBoundaryByIdOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Boundary'
      description: OK
    FetchExportContentsByIdPartial:
      content:
        application/octet-stream:
          schema:
            $ref: '#/components/schemas/ExportContents'
      description: Partial Result
      headers:
        Content-Range:
          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
            e.g. bytes 0-5242879/10242880. Downloads larger than 5MiB (5242880 bytes)
            in size must be downloaded in chunks no larger than 5MiB (5242880 bytes)
            and no smaller than 1MiB (1048576 bytes). The last chunk could be less
            than 1MiB (1048576 bytes).
          explode: false
          schema:
            type: string
          style: simple
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    FetchExportStatusByIdOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportStatus'
      description: OK
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    FetchFarmOrganizationByTypeAndIdOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FarmOrganization'
      description: Returns the requested farm organization.
      headers:
        X-Http-Request-Id:
          explode: false
          schema:
            type: string
          style: simple
    FetchFieldByIdOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Field'
      description: Returns the requested Field.
      headers:
        X-Http-Request-Id:
          explode: false
          schema:
            type: string
          style: simple
    FetchFieldsOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fields'
      description: OK
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to poll for updates.
          explode: false
          schema:
            type: string
          style: simple
    FetchFieldsPartial:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fields'
      description: Partial Result
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to fetch next batch of results.
          explode: false
          schema:
            type: string
          style: simple
    FetchHarvestActivitiesOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HarvestActivities'
      description: OK
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to poll for updates.
          explode: false
          schema:
            type: string
          style: simple
    FetchHarvestActivitiesPartial:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HarvestActivities'
      description: Partial Result
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to fetch next batch of results.
          explode: false
          schema:
            type: string
          style: simple
    FetchHarvestActivityOk:
      content:
        application/octet-stream:
          schema:
            $ref: '#/components/schemas/HarvestActivityContents'
      description: OK
      headers:
        Content-Range:
          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
            e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes)
            in size must be downloaded in chunks no larger than 5MiB (5242880 bytes)
            and no smaller than 1MiB (1048576 bytes). The last chunk could be less
            than 1MiB (1048576 bytes).
          explode: false
          schema:
            type: string
          style: simple
        X-Http-Request-Id:
          description: Unique identifier assigned to the request
          explode: false
          schema:
            type: string
          style: simple
    FetchHarvestActivityPartial:
      content:
        application/octet-stream:
          schema:
            $ref: '#/components/schemas/HarvestActivityContents'
      description: Partial Result
      headers:
        Content-Range:
          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
            e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes)
            in size must be downloaded in chunks no larger than 5MiB (5242880 bytes)
            and no smaller than 1MiB (1048576 bytes). The last chunk could be less
            than 1MiB (1048576 bytes).
          explode: false
          schema:
            type: string
          style: simple
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    FetchOperationsOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Operations'
      description: Returns the requested operations.
      headers:
        X-Http-Request-Id:
          explode: false
          schema:
            type: string
          style: simple
    FetchPlantingActivitiesOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlantingActivities'
      description: OK
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to poll for updates.
          explode: false
          schema:
            type: string
          style: simple
    FetchPlantingActivitiesPartial:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlantingActivities'
      description: Partial Result
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to fetch next batch of results.
          explode: false
          schema:
            type: string
          style: simple
    FetchPlantingActivityOk:
      content:
        application/octet-stream:
          schema:
            $ref: '#/components/schemas/PlantingActivityContents'
      description: OK
      headers:
        Content-Range:
          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
            e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes)
            in size must be downloaded in chunks no larger than 5MiB (5242880 bytes)
            and no smaller than 1MiB (1048576 bytes). The last chunk could be less
            than 1MiB (1048576 bytes).
          explode: false
          schema:
            type: string
          style: simple
        X-Http-Request-Id:
          description: Unique identifier assigned to the request
          explode: false
          schema:
            type: string
          style: simple
    FetchPlantingActivityPartial:
      content:
        application/octet-stream:
          schema:
            $ref: '#/components/schemas/PlantingActivityContents'
      description: Partial Result
      headers:
        Content-Range:
          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
            e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes)
            in size must be downloaded in chunks no larger than 5MiB (5242880 bytes)
            and no smaller than 1MiB (1048576 bytes). The last chunk could be less
            than 1MiB (1048576 bytes).
          explode: false
          schema:
            type: string
          style: simple
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    FetchResourceOwnerOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceOwner'
      description: OK
    FetchScoutingObservationAttachmentContentsOk:
      content:
        image/jpeg:
          schema:
            $ref: '#/components/schemas/ScoutingObservationAttachmentContents'
        image/png:
          schema:
            $ref: '#/components/schemas/ScoutingObservationAttachmentContents'
      description: OK
      headers:
        Content-Range:
          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
            e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes)
            in size must be downloaded in chunks no larger than 5MiB (5242880 bytes)
            and no smaller than 1MiB (1048576 bytes). The last chunk could be less
            than 1MiB (1048576 bytes).
          explode: false
          schema:
            type: string
          style: simple
        X-Http-Request-Id:
          description: Unique identifier assigned to the request
          explode: false
          schema:
            type: string
          style: simple
    FetchScoutingObservationAttachmentContentsPartial:
      content:
        image/jpeg:
          schema:
            $ref: '#/components/schemas/ScoutingObservationAttachmentContents'
      description: Partial Result
      headers:
        Content-Range:
          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16).
            e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes)
            in size must be downloaded in chunks no larger than 5MiB (5242880 bytes)
            and no smaller than 1MiB (1048576 bytes). The last chunk could be less
            than 1MiB (1048576 bytes).
          explode: false
          schema:
            type: string
          style: simple
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    FetchScoutingObservationAttachmentsOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScoutingObservationAttachments'
      description: OK
    FetchScoutingObservationAttachmentsPartial:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScoutingObservationAttachments'
      description: Partial Result
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to fetch next batch of results.
          explode: false
          schema:
            type: string
          style: simple
    FetchScoutingObservationByIdOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScoutingObservation'
      description: Returns the requested scouting observation.
      headers:
        X-Http-Request-Id:
          explode: false
          schema:
            type: string
          style: simple
    FetchScoutingObservationsOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScoutingObservations'
      description: OK
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to poll for updates.
          explode: false
          schema:
            type: string
          style: simple
    FetchScoutingObservationsPartial:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScoutingObservations'
      description: Partial Result
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
        X-Next-Token:
          description: Token used to fetch next batch of results.
          explode: false
          schema:
            type: string
          style: simple
    FetchUploadStatusByIdOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UploadStatus'
      description: OK
    FetchUploadStatusesOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UploadStatuses'
      description: OK
    HealthzOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Empty'
      description: 200 response
    PostExportOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedExport'
      description: OK
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    PostUploadOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedUpload'
      description: Returns a new upload with ID used to PUT file contents.
      headers:
        X-Http-Request-Id:
          explode: false
          schema:
            type: string
          style: simple
    ReportConflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Conflict (Report generation is still in progress)
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    ReportGone:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Gone (Report is expired)
      headers:
        X-Http-Request-Id:
          description: Unique identifier assigned to the request.
          explode: false
          schema:
            type: string
          style: simple
    UploadBoundaryOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UploadedBoundaryId'
      description: OK
  schemas:
    ApplicationActivities:
      description: A batch of application activities
      example:
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fieldIds:
          - fieldIds
          - fieldIds
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fieldIds:
          - fieldIds
          - fieldIds
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/ApplicationActivitySummary'
          type: array
      required:
      - results
    ApplicationActivityContents:
      properties:
        body:
          description: Binary contents
          format: binary
          type: string
      required:
      - body
    ApplicationActivitySummary:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        length: 0
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fieldIds:
        - fieldIds
        - fieldIds
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        createdAt:
          description: "The time the application activity was created. Time in ISO\
            \ 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        endTime:
          description: "The start time of the application activity. Time in ISO 8601\
            \ format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        fieldIds:
          description: Array of field ids associated the application activity.
          items:
            type: string
          type: array
        id:
          description: The id of an application activity.
          format: uuid
          type: string
        length:
          description: The size in bytes of the raw application activity file.
          format: int64
          type: integer
        startTime:
          description: "The start time of the application activity. Time in ISO 8601\
            \ format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        updatedAt:
          description: "The time the application activity was last updated. Time in\
            \ ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
      required:
      - createdAt
      - endTime
      - fieldIds
      - id
      - length
      - startTime
      - updatedAt
      type: object
    Area:
      description: Area with units. Units are always "hectare".
      example:
        q: 1
        u: hectare
      properties:
        q:
          format: float
          type: number
        u:
          type: string
      required:
      - q
      - u
    Binary:
      format: binary
      type: string
    BinaryData:
      description: Binary contents
      format: binary
      type: string
    Boundaries:
      description: A batch of boundary results
      example:
        features:
        - geometry:
            coordinates:
            - 0
            - 0
            type: Point
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: Feature
          properties:
            area:
              q: 1
              u: hectare
            centroid:
              coordinates:
              - -122.2
              - 38.1
              type: Point
        - geometry:
            coordinates:
            - 0
            - 0
            type: Point
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: Feature
          properties:
            area:
              q: 1
              u: hectare
            centroid:
              coordinates:
              - -122.2
              - 38.1
              type: Point
        type: FeatureCollection
      properties:
        features:
          items:
            $ref: '#/components/schemas/Boundary'
          type: array
        type:
          enum:
          - FeatureCollection
          type: string
      required:
      - features
      - type
    BoundariesQuery:
      example:
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ids:
          items:
            description: Unique identifier for the boundary.
            format: uuid
            type: string
          type: array
      required:
      - ids
      type: object
    Boundary:
      description: Arbitrary boundary.  GeoJSON Feature.
      example:
        geometry:
          coordinates:
          - 0
          - 0
          type: Point
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: Feature
        properties:
          area:
            q: 1
            u: hectare
          centroid:
            coordinates:
            - -122.2
            - 38.1
            type: Point
      properties:
        geometry:
          $ref: '#/components/schemas/Geometry'
        id:
          format: uuid
          type: string
        properties:
          $ref: '#/components/schemas/BoundaryProperties'
        type:
          enum:
          - Feature
          type: string
      required:
      - geometry
      - id
      - properties
      - type
    BoundaryProperties:
      description: Properties map.
      example:
        area:
          q: 1
          u: hectare
        centroid:
          coordinates:
          - -122.2
          - 38.1
          type: Point
      properties:
        area:
          $ref: '#/components/schemas/Area'
        centroid:
          $ref: '#/components/schemas/Point'
      required:
      - area
      - centroid
    BoundaryUpload:
      description: Arbitrary boundary in a geometry map
      example:
        geometry:
          coordinates:
          - 0
          - 0
          type: Point
      properties:
        geometry:
          $ref: '#/components/schemas/Geometry'
      required:
      - geometry
    CreatedExport:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: Unique identifier for the export.
          format: uuid
          type: string
      required:
      - id
      type: object
    CreatedUpload:
      description: Successfully created upload request
      format: uuid
      type: string
    Empty:
      type: object
    Error:
      example:
        error:
          code: code
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          message: message
      properties:
        error:
          $ref: '#/components/schemas/Error_error'
      type: object
    Export:
      description: Client request to export data from a user.
      example:
        definition: "{}"
        contentType: application/vnd.climate.acrsi.geojson
      properties:
        contentType:
          description: Content type representing data being exported (e.g. application/vnd.climate.acrsi.geojson).
          enum:
          - application/vnd.climate.acrsi.geojson
          - application/vnd.climate.harvest.geojson
          format: mime-type
          type: string
        definition:
          description: "Additional specifications for a client's data export request,\
            \ dependent on the content type."
          type: object
      required:
      - contentType
      type: object
    ExportContents:
      properties:
        body:
          description: Binary contents
          format: binary
          type: string
      required:
      - body
    ExportStatus:
      example:
        xNextToken: xNextToken
        size: 0
        checksum: checksum
        error: error
        status: PROCESSING
      properties:
        checksum:
          description: Base64 encoded MD5 hash of the export's contents.
          type: string
        error:
          description: Message indicating reason for validation failure.
          type: string
        size:
          description: Size of the export's contents in bytes.
          format: int64
          type: integer
        status:
          description: |
            Current status of the export request:
              * `PROCESSING` - Export request has been received by Climate and is being processed.
              * `INVALID` - Export request has failed validity check.
              * `EXPIRED` - Export contents have expired, and are no longer available for retrieval.
              * `COMPLETED` - The export request has been successfully processed, and its contents are available for retrieval.
              * `NO_DATA` - The export request completed successfully but generated no data.
          enum:
          - PROCESSING
          - INVALID
          - EXPIRED
          - COMPLETED
          - NO_DATA
          type: string
        xNextToken:
          description: |
            Token which may be used when executing an identical export in
            the future, but which only wants export data which was not
            previously exported.
            Assume a given field export request matches 12 fields today. And
            tomorrow it matches 15 fields. By passing the xNextToken in the
            definition section of tomorrow's field export request, only the
            3 additional fields would be exported. Note, all other parameters
            passed in the definition section must be identical to the original
            request.
          type: string
      required:
      - status
      type: object
    FarmOrganization:
      description: Logical representation of a farm organization with a name and type.
      example:
        id: 00000000-0000-0000-0000-000000000000
        name: Back Forty
        type: farm
      properties:
        id:
          description: Unique identifier for a farm organization.
          format: uuid
          type: string
        name:
          description: Name of the farm organization.
          type: string
        type:
          description: Type of the farm organization.
          enum:
          - farm
          type: string
      required:
      - id
      - name
      - type
    Field:
      description: Logical representation of a Field with a name.  Spatial attributes
        of the Field are provided in the Boundary.
      example:
        boundaryId: 00000000-0000-0000-0000-000000000000
        id: 00000000-0000-0000-0000-000000000000
        name: Back Forty
        parent:
          id: 00000000-0000-0000-0000-000000000000
          type: farm
        resourceOwnerId: 00000000-0000-0000-0000-000000000000
      properties:
        boundaryId:
          description: Unique identifier for the current Field's Boundary.
          format: uuid
          type: string
        id:
          description: Unique identifier for a Field.
          format: uuid
          type: string
        name:
          description: Name of the Field.
          type: string
        parent:
          $ref: '#/components/schemas/Parent'
        resourceOwnerId:
          description: Unique identifier of the resource owner that owns the Field.
          format: uuid
          type: string
      required:
      - boundaryId
      - id
      - name
      - parent
      - resourceOwnerId
    Fields:
      description: A batch of field results
      example:
        results:
        - boundaryId: 00000000-0000-0000-0000-000000000000
          id: 00000000-0000-0000-0000-000000000000
          name: Back Forty
          parent:
            id: 00000000-0000-0000-0000-000000000000
            type: farm
          resourceOwnerId: 00000000-0000-0000-0000-000000000000
        - boundaryId: 00000000-0000-0000-0000-000000000000
          id: 00000000-0000-0000-0000-000000000000
          name: Back Forty
          parent:
            id: 00000000-0000-0000-0000-000000000000
            type: farm
          resourceOwnerId: 00000000-0000-0000-0000-000000000000
      properties:
        results:
          items:
            $ref: '#/components/schemas/Field'
          type: array
      required:
      - results
    Geometry:
      description: GeoJSON
      example:
        coordinates:
        - 0
        - 0
        type: Point
      properties:
        coordinates:
          items:
            type: string
          type: array
        type:
          enum:
          - Point
          - Polygon
          - MultiPolygon
          type: string
      required:
      - coordinates
      - type
    HarvestActivities:
      description: A batch of harvest activities
      example:
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fieldIds:
          - fieldIds
          - fieldIds
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fieldIds:
          - fieldIds
          - fieldIds
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/HarvestActivitySummary'
          type: array
      required:
      - results
    HarvestActivityContents:
      properties:
        body:
          description: Binary contents
          format: binary
          type: string
      required:
      - body
    HarvestActivitySummary:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        length: 0
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fieldIds:
        - fieldIds
        - fieldIds
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        createdAt:
          description: "The time the harvest activity was created. Time in ISO 8601\
            \ format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        endTime:
          description: "The start time of the harvest activity. Time in ISO 8601 format\
            \ with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        fieldIds:
          description: Array of field ids associated the harvest activity.
          items:
            type: string
          type: array
        id:
          description: The id of a harvest activity.
          format: uuid
          type: string
        length:
          description: The size in bytes of the raw harvest activity file.
          format: int64
          type: integer
        startTime:
          description: "The start time of the harvest activity. Time in ISO 8601 format\
            \ with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        updatedAt:
          description: "The time the harvest activity was last updated. Time in ISO\
            \ 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
      required:
      - createdAt
      - endTime
      - fieldIds
      - id
      - length
      - startTime
      - updatedAt
      type: object
    Metadata:
      additionalProperties: true
      type: object
    Operation:
      description: Logical representation of an operation with a name and resource
        owner.
      example:
        id: 00000000-0000-0000-0000-000000000000
        name: Back Forty
        resourceOwnerId: 00000000-0000-0000-0000-000000000000
      properties:
        id:
          description: Unique identifier for the operation.
          format: uuid
          type: string
        name:
          description: Name of the operation.
          type: string
        resourceOwnerId:
          description: Unique identifier of the resource owner that owns the Operation.
          format: uuid
          type: string
      required:
      - id
      - name
      - resourceOwnerId
      type: object
    Operations:
      description: A batch of operation results.
      example:
        results:
        - id: 00000000-0000-0000-0000-000000000000
          name: Back Forty
          resourceOwnerId: 00000000-0000-0000-0000-000000000000
        - id: 00000000-0000-0000-0000-000000000000
          name: Back Forty
          resourceOwnerId: 00000000-0000-0000-0000-000000000000
      properties:
        results:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      required:
      - results
      type: object
    Parent:
      description: A minimal set of attributes regarding the parent of a farm organization.
      properties:
        id:
          description: Unique identifier for the parent of a farm organization.
          format: uuid
          type: string
        type:
          description: Type of the parent of a farm organization.
          enum:
          - farm
          type: string
      required:
      - id
      - type
    PlantingActivities:
      description: A batch of planting activities
      example:
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fieldIds:
          - fieldIds
          - fieldIds
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          length: 0
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fieldIds:
          - fieldIds
          - fieldIds
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/PlantingActivitySummary'
          type: array
      required:
      - results
    PlantingActivityContents:
      properties:
        body:
          description: Binary contents
          format: binary
          type: string
      required:
      - body
    PlantingActivitySummary:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        length: 0
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fieldIds:
        - fieldIds
        - fieldIds
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        createdAt:
          description: "The time the planting activity was created. Time in ISO 8601\
            \ format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        endTime:
          description: "The start time of the planting activity. Time in ISO 8601\
            \ format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        fieldIds:
          description: Array of field ids associated the planting activity.
          items:
            type: string
          type: array
        id:
          description: The id of a planting activity.
          format: uuid
          type: string
        length:
          description: The size in bytes of the raw planting activity file.
          format: int64
          type: integer
        startTime:
          description: "The start time of the planting activity. Time in ISO 8601\
            \ format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        updatedAt:
          description: "The time the planting activity was last updated. Time in ISO\
            \ 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
      required:
      - createdAt
      - endTime
      - fieldIds
      - id
      - length
      - startTime
      - updatedAt
      type: object
    Point:
      example:
        coordinates:
        - -122.2
        - 38.1
        type: Point
      properties:
        coordinates:
          items:
            format: float
            type: number
          type: array
        type:
          type: string
      required:
      - coordinates
      - type
    ResourceOwner:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        email:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - email
      - id
      - name
      type: object
    ScoutingObservation:
      example:
        note: note
        locationDisplayColor: '#307af7'
        location:
          coordinates:
          - 0
          - 0
          type: Point
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timespan: PERMANENT
        title: title
        fieldIds:
        - fieldIds
        - fieldIds
        status: ACTIVE
        tags:
        - code: code
        - code: code
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        endTime:
          description: "The start time of the scouting observation. Time in ISO 8601\
            \ format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        fieldIds:
          description: Array of field ids associated with this observation.
          items:
            type: string
          type: array
        id:
          description: The id of a scouting observation.
          format: uuid
          type: string
        location:
          $ref: '#/components/schemas/Geometry'
        locationDisplayColor:
          description: |
            Color of scouting pin assigned in the Climate FieldView app.
            Limited in the Ux to a set of RGB values.
            * #307af7
            * #38d753
            * #b037e4
            * #ef3e3e
            * #f7ec41
            * #ff8439
            * #808080
          enum:
          - '#307af7'
          - '#38d753'
          - '#b037e4'
          - '#ef3e3e'
          - '#f7ec41'
          - '#ff8439'
          - '#808080'
          type: string
        note:
          description: The text of the scouting observation. Maximum of 4000 characters.
          type: string
        startTime:
          description: "The start time of the scouting observation. Time in ISO 8601\
            \ format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        status:
          description: "The status of the scouting observation For example : ACTIVE,\
            \ DELETED"
          enum:
          - ACTIVE
          - DELETED
          type: string
        tags:
          description: "For example, ROCK_STONE, PONDING_WET, HAIL Maximum 20 tags\
            \ allowed, 40 characters per tag."
          items:
            $ref: '#/components/schemas/ScoutingTag'
          type: array
        timespan:
          description: Permanent or seasonal
          enum:
          - PERMANENT
          - SEASONAL
          type: string
        title:
          description: "The title or summary of the scouting observation. 40 Characters\
            \ long, no emojis, and leading and trailing whitespace will be trimmed."
          type: string
        updatedAt:
          description: "The time the scouting observation or any of its attachments\
            \ was last updated.Time in ISO 8601 format with UTC timezone, 3 fractional\
            \ seconds. (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
      required:
      - endTime
      - fieldIds
      - id
      - location
      - locationDisplayColor
      - note
      - startTime
      - status
      - tags
      - timespan
      - title
      - updatedAt
      type: object
    ScoutingObservationAttachment:
      example:
        length: 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        contentType: contentType
        status: ACTIVE
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        contentType:
          description: "The content type of the attachment, e.g. image/png."
          type: string
        id:
          description: id of the attachment
          format: uuid
          type: string
        length:
          description: The number of bytes in the attachment.
          format: int64
          type: integer
        status:
          description: "The status of the attachment. For example : ACTIVE, DELETED"
          enum:
          - ACTIVE
          - DELETED
          type: string
        updatedAt:
          description: |
            The time the attachment was last updated.
            Time in ISO 8601 format with UTC timezone, 3 fractional seconds.
            (https://tools.ietf.org/html/rfc3339)
          format: date-time
          type: string
      required:
      - contentType
      - id
      - length
      - status
      - updatedAt
      type: object
    ScoutingObservationAttachmentContents:
      properties:
        body:
          description: Binary contents
          format: binary
          type: string
      required:
      - body
    ScoutingObservationAttachments:
      description: A batch of scouting attachments
      example:
        results:
        - length: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          contentType: contentType
          status: ACTIVE
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - length: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          contentType: contentType
          status: ACTIVE
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/ScoutingObservationAttachment'
          type: array
      required:
      - results
    ScoutingObservationSummary:
      example:
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        endTime:
          description: "The start time of the scouting observation. Time in ISO 8601\
            \ format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        id:
          description: The id of a scouting observation.
          format: uuid
          type: string
        startTime:
          description: "The start time of the scouting observation. Time in ISO 8601\
            \ format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
        updatedAt:
          description: "The time the scouting observation or any of its attachments\
            \ was last updated.Time in ISO 8601 format with UTC timezone, 3 fractional\
            \ seconds. (https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
      required:
      - endTime
      - id
      - startTime
      - updatedAt
      type: object
    ScoutingObservations:
      description: A batch of scouting observations
      example:
        results:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/ScoutingObservationSummary'
          type: array
      required:
      - results
    ScoutingTag:
      example:
        code: code
      properties:
        code:
          type: string
      required:
      - code
      type: object
    Upload:
      description: Client request to upload data for a user.
      example:
        metadata:
          key: ""
        length: 0
        contentType: image/vnd.climate.thermal.geotiff
        md5: md5
      properties:
        contentType:
          description: Content type representing data being uploaded (e.g. image/vnd.climate.rgb.geotiff)
          enum:
          - image/vnd.climate.thermal.geotiff
          - image/vnd.climate.ndvi.geotiff
          - image/vnd.climate.rgb.geotiff
          - image/vnd.climate.rgb-nir.geotiff
          - image/vnd.climate.rgb-cir.geotiff
          - image/vnd.climate.waterstress.geotiff
          - image/vnd.climate.elevation.geotiff
          - image/vnd.climate.raw.geotiff
          - application/vnd.climate.field.geojson
          - application/vnd.climate.rx.planting.shp
          - application/vnd.climate.prescription.zones.shp
          - application/vnd.climate.modus.xml
          - application/vnd.climate.stand-count.geojson
          - application/vnd.climate.weed-count.geojson
          - application/vnd.climate.as-applied.zip
          - application/vnd.climate.as-planted.zip
          - application/vnd.climate.as-harvested.zip
          format: mime-type
          type: string
        length:
          description: Content size in bytes
          format: int64
          type: integer
        md5:
          description: Base64 encoded md5 hash of the content
          type: string
        metadata:
          additionalProperties: true
          type: object
      required:
      - contentType
      - length
      - md5
      type: object
    UploadStatus:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: UPLOADING
      properties:
        id:
          description: Unique identifier for the upload.
          format: uuid
          type: string
        status:
          description: |
            Current status of the upload:
              * `UPLOADING` - Uploading has started, parts are still coming in.
              * `INVALID` - Upload has failed validity check.
              * `PENDING` - Upload has been received by Climate and is being processed.
              * `INBOX` - The upload is awaiting user acceptance in their Data Inbox.
              * `DECLINED` - The user has declined the upload in their Data Inbox.
              * `IMPORTING` - The user has accepted the upload and it is being imported into their account.
              * `SUCCESS` - The upload has been successfully imported.
          enum:
          - UPLOADING
          - INVALID
          - PENDING
          - INBOX
          - DECLINED
          - IMPORTING
          - SUCCESS
          type: string
      required:
      - id
      - status
      type: object
    UploadStatusQuery:
      example:
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ids:
          items:
            description: Unique identifier for the upload.
            format: uuid
            type: string
          type: array
      required:
      - ids
      type: object
    UploadStatuses:
      example:
        results:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: UPLOADING
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: UPLOADING
      properties:
        results:
          items:
            $ref: '#/components/schemas/UploadStatus'
          type: array
      required:
      - results
      type: object
    UploadedBoundaryId:
      description: Unique identifier of a successfully uploaded boundary
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
      required:
      - id
    Error_error:
      example:
        code: code
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        message: message
      properties:
        code:
          type: string
        id:
          format: uuid
          type: string
        message:
          description: Description of the error encountered.
          type: string
      required:
      - code
      - id
      - message
      type: object
  securitySchemes:
    api_key:
      description: |-
        API access key used to control throttling (429 responses).  This key is typically formatted:
        `partner-{name}-{uuid}`
      in: header
      name: X-Api-Key
      type: apiKey
    oauth2_authorization_code:
      description: |-
        Log in with FieldView OAuth2 provider (Authorization Code Grant). Used to authorize the client (partner) and
        user. The *access_token* is required to be provided in the `Authorization` header on all calls to the FieldView
        APIs with the following format `Bearer $access_token`.
      flows:
        authorizationCode:
          authorizationUrl: https://climate.com/static/app-login/
          scopes:
            asApplied:read: Required for retrieving as applied data
            asApplied:write: Required for uploading application data
            asHarvested:read: Required for retrieving harvest data
            asHarvested:write: Required for uploading harvest data
            asPlanted:read: Required for retrieving planting data
            asPlanted:write: Required for uploading planting data
            avroAgronomicData:read: Required for retrieving agronomic data
            boundaries:write: '*Originally missing*'
            customerInsights:read: Required for retrieving customer insights metrics
              data
            diagnostics:read: Required for retrieving CNH machine diagnostic data
            exports:read: Required for requesting or retrieving exports
            farmOrganizations:read: Required for retrieving farm organization information
            fields:read: Required for retrieving field and boundary information
            fields:write: Required for uploading field boundaries
            imagery:write: Required for uploading imagery
            operations:read: Required for retrieving operation information
            plantingActivitySummary:read: Required for retrieving planting activity
              summary data
            platform: (DEPRECATED) Legacy scope used for some Platform APIs
            resourceOwners:read: Required for retrieving resource owner information
            rx:write: Required for uploading prescriptions
            scouting:read: Required for retrieving user\'s scouting information
            soil:write: Required for uploading soil sample results
            standCount:write: '*Originally missing*'
            weedCount:write: '*Originally missing*'
          tokenUrl: https://api.climate.com/api/oauth/token
      type: oauth2
x-amazon-apigateway-api-key-source: AUTHORIZER

