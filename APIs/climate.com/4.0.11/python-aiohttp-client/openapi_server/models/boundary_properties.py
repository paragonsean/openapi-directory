# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.area import Area
from openapi_server.models.point import Point
from openapi_server import util


class BoundaryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area: Area=None, centroid: Point=None):
        """BoundaryProperties - a model defined in OpenAPI

        :param area: The area of this BoundaryProperties.
        :param centroid: The centroid of this BoundaryProperties.
        """
        self.openapi_types = {
            'area': Area,
            'centroid': Point
        }

        self.attribute_map = {
            'area': 'area',
            'centroid': 'centroid'
        }

        self._area = area
        self._centroid = centroid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoundaryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoundaryProperties of this BoundaryProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area(self):
        """Gets the area of this BoundaryProperties.


        :return: The area of this BoundaryProperties.
        :rtype: Area
        """
        return self._area

    @area.setter
    def area(self, area):
        """Sets the area of this BoundaryProperties.


        :param area: The area of this BoundaryProperties.
        :type area: Area
        """
        if area is None:
            raise ValueError("Invalid value for `area`, must not be `None`")

        self._area = area

    @property
    def centroid(self):
        """Gets the centroid of this BoundaryProperties.


        :return: The centroid of this BoundaryProperties.
        :rtype: Point
        """
        return self._centroid

    @centroid.setter
    def centroid(self, centroid):
        """Sets the centroid of this BoundaryProperties.


        :param centroid: The centroid of this BoundaryProperties.
        :type centroid: Point
        """
        if centroid is None:
            raise ValueError("Invalid value for `centroid`, must not be `None`")

        self._centroid = centroid
