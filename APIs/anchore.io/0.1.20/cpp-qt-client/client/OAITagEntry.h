/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITagEntry.h
 *
 * A docker-pullable tag value as well as deconstructed components
 */

#ifndef OAITagEntry_H
#define OAITagEntry_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITagEntry : public OAIObject {
public:
    OAITagEntry();
    OAITagEntry(QString json);
    ~OAITagEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getDetectedAt() const;
    void setDetectedAt(const QDateTime &detected_at);
    bool is_detected_at_Set() const;
    bool is_detected_at_Valid() const;

    QString getPullstring() const;
    void setPullstring(const QString &pullstring);
    bool is_pullstring_Set() const;
    bool is_pullstring_Valid() const;

    QString getRegistry() const;
    void setRegistry(const QString &registry);
    bool is_registry_Set() const;
    bool is_registry_Valid() const;

    QString getRepository() const;
    void setRepository(const QString &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    QString getTag() const;
    void setTag(const QString &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_detected_at;
    bool m_detected_at_isSet;
    bool m_detected_at_isValid;

    QString m_pullstring;
    bool m_pullstring_isSet;
    bool m_pullstring_isValid;

    QString m_registry;
    bool m_registry_isSet;
    bool m_registry_isValid;

    QString m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    QString m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITagEntry)

#endif // OAITagEntry_H
