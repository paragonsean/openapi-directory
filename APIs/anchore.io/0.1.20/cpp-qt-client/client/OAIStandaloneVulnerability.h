/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStandaloneVulnerability.h
 *
 * A single vulnerability record in a single namespace, the unique key is the combination of the id and namespace
 */

#ifndef OAIStandaloneVulnerability_H
#define OAIStandaloneVulnerability_H

#include <QJsonObject>

#include "OAINvdDataObject.h"
#include "OAIPackageReference.h"
#include "OAIVendorDataObject.h"
#include "OAIVulnerabilityReference.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPackageReference;
class OAINvdDataObject;
class OAIVulnerabilityReference;
class OAIVendorDataObject;

class OAIStandaloneVulnerability : public OAIObject {
public:
    OAIStandaloneVulnerability();
    OAIStandaloneVulnerability(QString json);
    ~OAIStandaloneVulnerability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIPackageReference> getAffectedPackages() const;
    void setAffectedPackages(const QList<OAIPackageReference> &affected_packages);
    bool is_affected_packages_Set() const;
    bool is_affected_packages_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    QList<OAINvdDataObject> getNvdData() const;
    void setNvdData(const QList<OAINvdDataObject> &nvd_data);
    bool is_nvd_data_Set() const;
    bool is_nvd_data_Valid() const;

    QList<OAIVulnerabilityReference> getReferences() const;
    void setReferences(const QList<OAIVulnerabilityReference> &references);
    bool is_references_Set() const;
    bool is_references_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QList<OAIVendorDataObject> getVendorData() const;
    void setVendorData(const QList<OAIVendorDataObject> &vendor_data);
    bool is_vendor_data_Set() const;
    bool is_vendor_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIPackageReference> m_affected_packages;
    bool m_affected_packages_isSet;
    bool m_affected_packages_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    QList<OAINvdDataObject> m_nvd_data;
    bool m_nvd_data_isSet;
    bool m_nvd_data_isValid;

    QList<OAIVulnerabilityReference> m_references;
    bool m_references_isSet;
    bool m_references_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QList<OAIVendorDataObject> m_vendor_data;
    bool m_vendor_data_isSet;
    bool m_vendor_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStandaloneVulnerability)

#endif // OAIStandaloneVulnerability_H
