/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVulnerability.h
 *
 * 
 */

#ifndef OAIVulnerability_H
#define OAIVulnerability_H

#include <QJsonObject>

#include "OAINvdDataObject.h"
#include "OAIVendorDataObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINvdDataObject;
class OAIVendorDataObject;

class OAIVulnerability : public OAIObject {
public:
    OAIVulnerability();
    OAIVulnerability(QString json);
    ~OAIVulnerability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFeed() const;
    void setFeed(const QString &feed);
    bool is_feed_Set() const;
    bool is_feed_Valid() const;

    QString getFeedGroup() const;
    void setFeedGroup(const QString &feed_group);
    bool is_feed_group_Set() const;
    bool is_feed_group_Valid() const;

    QString getFix() const;
    void setFix(const QString &fix);
    bool is_fix_Set() const;
    bool is_fix_Valid() const;

    QList<OAINvdDataObject> getNvdData() const;
    void setNvdData(const QList<OAINvdDataObject> &nvd_data);
    bool is_nvd_data_Set() const;
    bool is_nvd_data_Valid() const;

    QString getPackage() const;
    void setPackage(const QString &package);
    bool is_package_Set() const;
    bool is_package_Valid() const;

    QString getPackageCpe() const;
    void setPackageCpe(const QString &package_cpe);
    bool is_package_cpe_Set() const;
    bool is_package_cpe_Valid() const;

    QString getPackageName() const;
    void setPackageName(const QString &package_name);
    bool is_package_name_Set() const;
    bool is_package_name_Valid() const;

    QString getPackagePath() const;
    void setPackagePath(const QString &package_path);
    bool is_package_path_Set() const;
    bool is_package_path_Valid() const;

    QString getPackageType() const;
    void setPackageType(const QString &package_type);
    bool is_package_type_Set() const;
    bool is_package_type_Valid() const;

    QString getPackageVersion() const;
    void setPackageVersion(const QString &package_version);
    bool is_package_version_Set() const;
    bool is_package_version_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QList<OAIVendorDataObject> getVendorData() const;
    void setVendorData(const QList<OAIVendorDataObject> &vendor_data);
    bool is_vendor_data_Set() const;
    bool is_vendor_data_Valid() const;

    QString getVuln() const;
    void setVuln(const QString &vuln);
    bool is_vuln_Set() const;
    bool is_vuln_Valid() const;

    bool isWillNotFix() const;
    void setWillNotFix(const bool &will_not_fix);
    bool is_will_not_fix_Set() const;
    bool is_will_not_fix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_feed;
    bool m_feed_isSet;
    bool m_feed_isValid;

    QString m_feed_group;
    bool m_feed_group_isSet;
    bool m_feed_group_isValid;

    QString m_fix;
    bool m_fix_isSet;
    bool m_fix_isValid;

    QList<OAINvdDataObject> m_nvd_data;
    bool m_nvd_data_isSet;
    bool m_nvd_data_isValid;

    QString m_package;
    bool m_package_isSet;
    bool m_package_isValid;

    QString m_package_cpe;
    bool m_package_cpe_isSet;
    bool m_package_cpe_isValid;

    QString m_package_name;
    bool m_package_name_isSet;
    bool m_package_name_isValid;

    QString m_package_path;
    bool m_package_path_isSet;
    bool m_package_path_isValid;

    QString m_package_type;
    bool m_package_type_isSet;
    bool m_package_type_isValid;

    QString m_package_version;
    bool m_package_version_isSet;
    bool m_package_version_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QList<OAIVendorDataObject> m_vendor_data;
    bool m_vendor_data_isSet;
    bool m_vendor_data_isValid;

    QString m_vuln;
    bool m_vuln_isSet;
    bool m_vuln_isValid;

    bool m_will_not_fix;
    bool m_will_not_fix_isSet;
    bool m_will_not_fix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVulnerability)

#endif // OAIVulnerability_H
