/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICVSSV2Scores.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICVSSV2Scores::OAICVSSV2Scores(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICVSSV2Scores::OAICVSSV2Scores() {
    this->initializeModel();
}

OAICVSSV2Scores::~OAICVSSV2Scores() {}

void OAICVSSV2Scores::initializeModel() {

    m_base_score_isSet = false;
    m_base_score_isValid = false;

    m_exploitability_score_isSet = false;
    m_exploitability_score_isValid = false;

    m_impact_score_isSet = false;
    m_impact_score_isValid = false;
}

void OAICVSSV2Scores::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICVSSV2Scores::fromJsonObject(QJsonObject json) {

    m_base_score_isValid = ::OpenAPI::fromJsonValue(m_base_score, json[QString("base_score")]);
    m_base_score_isSet = !json[QString("base_score")].isNull() && m_base_score_isValid;

    m_exploitability_score_isValid = ::OpenAPI::fromJsonValue(m_exploitability_score, json[QString("exploitability_score")]);
    m_exploitability_score_isSet = !json[QString("exploitability_score")].isNull() && m_exploitability_score_isValid;

    m_impact_score_isValid = ::OpenAPI::fromJsonValue(m_impact_score, json[QString("impact_score")]);
    m_impact_score_isSet = !json[QString("impact_score")].isNull() && m_impact_score_isValid;
}

QString OAICVSSV2Scores::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICVSSV2Scores::asJsonObject() const {
    QJsonObject obj;
    if (m_base_score_isSet) {
        obj.insert(QString("base_score"), ::OpenAPI::toJsonValue(m_base_score));
    }
    if (m_exploitability_score_isSet) {
        obj.insert(QString("exploitability_score"), ::OpenAPI::toJsonValue(m_exploitability_score));
    }
    if (m_impact_score_isSet) {
        obj.insert(QString("impact_score"), ::OpenAPI::toJsonValue(m_impact_score));
    }
    return obj;
}

double OAICVSSV2Scores::getBaseScore() const {
    return m_base_score;
}
void OAICVSSV2Scores::setBaseScore(const double &base_score) {
    m_base_score = base_score;
    m_base_score_isSet = true;
}

bool OAICVSSV2Scores::is_base_score_Set() const{
    return m_base_score_isSet;
}

bool OAICVSSV2Scores::is_base_score_Valid() const{
    return m_base_score_isValid;
}

double OAICVSSV2Scores::getExploitabilityScore() const {
    return m_exploitability_score;
}
void OAICVSSV2Scores::setExploitabilityScore(const double &exploitability_score) {
    m_exploitability_score = exploitability_score;
    m_exploitability_score_isSet = true;
}

bool OAICVSSV2Scores::is_exploitability_score_Set() const{
    return m_exploitability_score_isSet;
}

bool OAICVSSV2Scores::is_exploitability_score_Valid() const{
    return m_exploitability_score_isValid;
}

double OAICVSSV2Scores::getImpactScore() const {
    return m_impact_score;
}
void OAICVSSV2Scores::setImpactScore(const double &impact_score) {
    m_impact_score = impact_score;
    m_impact_score_isSet = true;
}

bool OAICVSSV2Scores::is_impact_score_Set() const{
    return m_impact_score_isSet;
}

bool OAICVSSV2Scores::is_impact_score_Valid() const{
    return m_impact_score_isValid;
}

bool OAICVSSV2Scores::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exploitability_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_impact_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICVSSV2Scores::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
