/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegistryConfigurationRequest.h
 *
 * A registry record describing the endpoint and credentials for a registry
 */

#ifndef OAIRegistryConfigurationRequest_H
#define OAIRegistryConfigurationRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRegistryConfigurationRequest : public OAIObject {
public:
    OAIRegistryConfigurationRequest();
    OAIRegistryConfigurationRequest(QString json);
    ~OAIRegistryConfigurationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRegistry() const;
    void setRegistry(const QString &registry);
    bool is_registry_Set() const;
    bool is_registry_Valid() const;

    QString getRegistryName() const;
    void setRegistryName(const QString &registry_name);
    bool is_registry_name_Set() const;
    bool is_registry_name_Valid() const;

    QString getRegistryPass() const;
    void setRegistryPass(const QString &registry_pass);
    bool is_registry_pass_Set() const;
    bool is_registry_pass_Valid() const;

    QString getRegistryType() const;
    void setRegistryType(const QString &registry_type);
    bool is_registry_type_Set() const;
    bool is_registry_type_Valid() const;

    QString getRegistryUser() const;
    void setRegistryUser(const QString &registry_user);
    bool is_registry_user_Set() const;
    bool is_registry_user_Valid() const;

    bool isRegistryVerify() const;
    void setRegistryVerify(const bool &registry_verify);
    bool is_registry_verify_Set() const;
    bool is_registry_verify_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_registry;
    bool m_registry_isSet;
    bool m_registry_isValid;

    QString m_registry_name;
    bool m_registry_name_isSet;
    bool m_registry_name_isValid;

    QString m_registry_pass;
    bool m_registry_pass_isSet;
    bool m_registry_pass_isValid;

    QString m_registry_type;
    bool m_registry_type_isSet;
    bool m_registry_type_isValid;

    QString m_registry_user;
    bool m_registry_user_isSet;
    bool m_registry_user_isValid;

    bool m_registry_verify;
    bool m_registry_verify_isSet;
    bool m_registry_verify_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegistryConfigurationRequest)

#endif // OAIRegistryConfigurationRequest_H
