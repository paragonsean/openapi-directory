/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWhitelistItem.h
 *
 * Identifies a specific gate and trigger match from a policy against an image and indicates it should be ignored in final policy decisions
 */

#ifndef OAIWhitelistItem_H
#define OAIWhitelistItem_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWhitelistItem : public OAIObject {
public:
    OAIWhitelistItem();
    OAIWhitelistItem(QString json);
    ~OAIWhitelistItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getExpiresOn() const;
    void setExpiresOn(const QDateTime &expires_on);
    bool is_expires_on_Set() const;
    bool is_expires_on_Valid() const;

    QString getGate() const;
    void setGate(const QString &gate);
    bool is_gate_Set() const;
    bool is_gate_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getTriggerId() const;
    void setTriggerId(const QString &trigger_id);
    bool is_trigger_id_Set() const;
    bool is_trigger_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_expires_on;
    bool m_expires_on_isSet;
    bool m_expires_on_isValid;

    QString m_gate;
    bool m_gate_isSet;
    bool m_gate_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_trigger_id;
    bool m_trigger_id_isSet;
    bool m_trigger_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWhitelistItem)

#endif // OAIWhitelistItem_H
