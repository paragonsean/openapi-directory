/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportContentDigests.h
 *
 * Digest of content to use in the final import
 */

#ifndef OAIImportContentDigests_H
#define OAIImportContentDigests_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImportContentDigests : public OAIObject {
public:
    OAIImportContentDigests();
    OAIImportContentDigests(QString json);
    ~OAIImportContentDigests() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDockerfile() const;
    void setDockerfile(const QString &dockerfile);
    bool is_dockerfile_Set() const;
    bool is_dockerfile_Valid() const;

    QString getImageConfig() const;
    void setImageConfig(const QString &image_config);
    bool is_image_config_Set() const;
    bool is_image_config_Valid() const;

    QString getManifest() const;
    void setManifest(const QString &manifest);
    bool is_manifest_Set() const;
    bool is_manifest_Valid() const;

    QString getPackages() const;
    void setPackages(const QString &packages);
    bool is_packages_Set() const;
    bool is_packages_Valid() const;

    QString getParentManifest() const;
    void setParentManifest(const QString &parent_manifest);
    bool is_parent_manifest_Set() const;
    bool is_parent_manifest_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dockerfile;
    bool m_dockerfile_isSet;
    bool m_dockerfile_isValid;

    QString m_image_config;
    bool m_image_config_isSet;
    bool m_image_config_isValid;

    QString m_manifest;
    bool m_manifest_isSet;
    bool m_manifest_isValid;

    QString m_packages;
    bool m_packages_isSet;
    bool m_packages_isValid;

    QString m_parent_manifest;
    bool m_parent_manifest_isSet;
    bool m_parent_manifest_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportContentDigests)

#endif // OAIImportContentDigests_H
