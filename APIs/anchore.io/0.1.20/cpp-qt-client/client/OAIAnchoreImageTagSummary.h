/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnchoreImageTagSummary.h
 *
 * A unique image in the engine.
 */

#ifndef OAIAnchoreImageTagSummary_H
#define OAIAnchoreImageTagSummary_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnchoreImageTagSummary : public OAIObject {
public:
    OAIAnchoreImageTagSummary();
    OAIAnchoreImageTagSummary(QString json);
    ~OAIAnchoreImageTagSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalysisStatus() const;
    void setAnalysisStatus(const QString &analysis_status);
    bool is_analysis_status_Set() const;
    bool is_analysis_status_Valid() const;

    qint32 getAnalyzedAt() const;
    void setAnalyzedAt(const qint32 &analyzed_at);
    bool is_analyzed_at_Set() const;
    bool is_analyzed_at_Valid() const;

    qint32 getCreatedAt() const;
    void setCreatedAt(const qint32 &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getFulltag() const;
    void setFulltag(const QString &fulltag);
    bool is_fulltag_Set() const;
    bool is_fulltag_Valid() const;

    QString getImageDigest() const;
    void setImageDigest(const QString &image_digest);
    bool is_image_digest_Set() const;
    bool is_image_digest_Valid() const;

    QString getImageId() const;
    void setImageId(const QString &image_id);
    bool is_image_id_Set() const;
    bool is_image_id_Valid() const;

    QString getImageStatus() const;
    void setImageStatus(const QString &image_status);
    bool is_image_status_Set() const;
    bool is_image_status_Valid() const;

    QString getParentDigest() const;
    void setParentDigest(const QString &parent_digest);
    bool is_parent_digest_Set() const;
    bool is_parent_digest_Valid() const;

    qint32 getTagDetectedAt() const;
    void setTagDetectedAt(const qint32 &tag_detected_at);
    bool is_tag_detected_at_Set() const;
    bool is_tag_detected_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analysis_status;
    bool m_analysis_status_isSet;
    bool m_analysis_status_isValid;

    qint32 m_analyzed_at;
    bool m_analyzed_at_isSet;
    bool m_analyzed_at_isValid;

    qint32 m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_fulltag;
    bool m_fulltag_isSet;
    bool m_fulltag_isValid;

    QString m_image_digest;
    bool m_image_digest_isSet;
    bool m_image_digest_isValid;

    QString m_image_id;
    bool m_image_id_isSet;
    bool m_image_id_isValid;

    QString m_image_status;
    bool m_image_status_isSet;
    bool m_image_status_isValid;

    QString m_parent_digest;
    bool m_parent_digest_isSet;
    bool m_parent_digest_isValid;

    qint32 m_tag_detected_at;
    bool m_tag_detected_at_isSet;
    bool m_tag_detected_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnchoreImageTagSummary)

#endif // OAIAnchoreImageTagSummary_H
