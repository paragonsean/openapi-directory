/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageSource.h
 *
 * A set of analysis source types. Only one may be set in any given request.
 */

#ifndef OAIImageSource_H
#define OAIImageSource_H

#include <QJsonObject>

#include "OAIAnalysisArchiveSource.h"
#include "OAIImageImportManifest.h"
#include "OAIRegistryDigestSource.h"
#include "OAIRegistryTagSource.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnalysisArchiveSource;
class OAIRegistryDigestSource;
class OAIImageImportManifest;
class OAIRegistryTagSource;

class OAIImageSource : public OAIObject {
public:
    OAIImageSource();
    OAIImageSource(QString json);
    ~OAIImageSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAnalysisArchiveSource getArchive() const;
    void setArchive(const OAIAnalysisArchiveSource &archive);
    bool is_archive_Set() const;
    bool is_archive_Valid() const;

    OAIRegistryDigestSource getDigest() const;
    void setDigest(const OAIRegistryDigestSource &digest);
    bool is_digest_Set() const;
    bool is_digest_Valid() const;

    OAIImageImportManifest getImport() const;
    void setImport(const OAIImageImportManifest &import);
    bool is_import_Set() const;
    bool is_import_Valid() const;

    OAIRegistryTagSource getTag() const;
    void setTag(const OAIRegistryTagSource &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAnalysisArchiveSource m_archive;
    bool m_archive_isSet;
    bool m_archive_isValid;

    OAIRegistryDigestSource m_digest;
    bool m_digest_isSet;
    bool m_digest_isValid;

    OAIImageImportManifest m_import;
    bool m_import_isSet;
    bool m_import_isValid;

    OAIRegistryTagSource m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageSource)

#endif // OAIImageSource_H
