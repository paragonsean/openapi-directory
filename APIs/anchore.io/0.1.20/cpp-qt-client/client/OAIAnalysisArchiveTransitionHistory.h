/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalysisArchiveTransitionHistory.h
 *
 * A rule for auto-archiving image analysis by time and/or tag-history
 */

#ifndef OAIAnalysisArchiveTransitionHistory_H
#define OAIAnalysisArchiveTransitionHistory_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnalysisArchiveTransitionHistory : public OAIObject {
public:
    OAIAnalysisArchiveTransitionHistory();
    OAIAnalysisArchiveTransitionHistory(QString json);
    ~OAIAnalysisArchiveTransitionHistory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getImageDigest() const;
    void setImageDigest(const QString &image_digest);
    bool is_image_digest_Set() const;
    bool is_image_digest_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getRuleId() const;
    void setRuleId(const QString &rule_id);
    bool is_rule_id_Set() const;
    bool is_rule_id_Valid() const;

    QString getTransition() const;
    void setTransition(const QString &transition);
    bool is_transition_Set() const;
    bool is_transition_Valid() const;

    QString getTransitionTaskId() const;
    void setTransitionTaskId(const QString &transition_task_id);
    bool is_transition_task_id_Set() const;
    bool is_transition_task_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_image_digest;
    bool m_image_digest_isSet;
    bool m_image_digest_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_rule_id;
    bool m_rule_id_isSet;
    bool m_rule_id_isValid;

    QString m_transition;
    bool m_transition_isSet;
    bool m_transition_isValid;

    QString m_transition_task_id;
    bool m_transition_task_id_isSet;
    bool m_transition_task_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalysisArchiveTransitionHistory)

#endif // OAIAnalysisArchiveTransitionHistory_H
