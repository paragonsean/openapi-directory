/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalysisUpdateNotificationPayload.h
 *
 * 
 */

#ifndef OAIAnalysisUpdateNotificationPayload_H
#define OAIAnalysisUpdateNotificationPayload_H

#include <QJsonObject>

#include "OAIAnalysisUpdateEval.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnalysisUpdateEval;

class OAIAnalysisUpdateNotificationPayload : public OAIObject {
public:
    OAIAnalysisUpdateNotificationPayload();
    OAIAnalysisUpdateNotificationPayload(QString json);
    ~OAIAnalysisUpdateNotificationPayload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNotificationId() const;
    void setNotificationId(const QString &notification_id);
    bool is_notification_id_Set() const;
    bool is_notification_id_Valid() const;

    QString getSubscriptionKey() const;
    void setSubscriptionKey(const QString &subscription_key);
    bool is_subscription_key_Set() const;
    bool is_subscription_key_Valid() const;

    QString getSubscriptionType() const;
    void setSubscriptionType(const QString &subscription_type);
    bool is_subscription_type_Set() const;
    bool is_subscription_type_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    OAIObject getAnnotations() const;
    void setAnnotations(const OAIObject &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    OAIAnalysisUpdateEval getCurrEval() const;
    void setCurrEval(const OAIAnalysisUpdateEval &curr_eval);
    bool is_curr_eval_Set() const;
    bool is_curr_eval_Valid() const;

    OAIAnalysisUpdateEval getLastEval() const;
    void setLastEval(const OAIAnalysisUpdateEval &last_eval);
    bool is_last_eval_Set() const;
    bool is_last_eval_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_notification_id;
    bool m_notification_id_isSet;
    bool m_notification_id_isValid;

    QString m_subscription_key;
    bool m_subscription_key_isSet;
    bool m_subscription_key_isValid;

    QString m_subscription_type;
    bool m_subscription_type_isSet;
    bool m_subscription_type_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    OAIObject m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    OAIAnalysisUpdateEval m_curr_eval;
    bool m_curr_eval_isSet;
    bool m_curr_eval_isValid;

    OAIAnalysisUpdateEval m_last_eval;
    bool m_last_eval_isSet;
    bool m_last_eval_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalysisUpdateNotificationPayload)

#endif // OAIAnalysisUpdateNotificationPayload_H
