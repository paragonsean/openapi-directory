/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageDetail.h
 *
 * A metadata detail record for a specific image. Multiple detail records may map a single catalog image.
 */

#ifndef OAIImageDetail_H
#define OAIImageDetail_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImageDetail : public OAIObject {
public:
    OAIImageDetail();
    OAIImageDetail(QString json);
    ~OAIImageDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDockerfile() const;
    void setDockerfile(const QString &dockerfile);
    bool is_dockerfile_Set() const;
    bool is_dockerfile_Valid() const;

    QString getFulldigest() const;
    void setFulldigest(const QString &fulldigest);
    bool is_fulldigest_Set() const;
    bool is_fulldigest_Valid() const;

    QString getFulltag() const;
    void setFulltag(const QString &fulltag);
    bool is_fulltag_Set() const;
    bool is_fulltag_Valid() const;

    QString getImageDigest() const;
    void setImageDigest(const QString &image_digest);
    bool is_image_digest_Set() const;
    bool is_image_digest_Valid() const;

    QString getImageId() const;
    void setImageId(const QString &image_id);
    bool is_image_id_Set() const;
    bool is_image_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getRegistry() const;
    void setRegistry(const QString &registry);
    bool is_registry_Set() const;
    bool is_registry_Valid() const;

    QString getRepo() const;
    void setRepo(const QString &repo);
    bool is_repo_Set() const;
    bool is_repo_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_dockerfile;
    bool m_dockerfile_isSet;
    bool m_dockerfile_isValid;

    QString m_fulldigest;
    bool m_fulldigest_isSet;
    bool m_fulldigest_isValid;

    QString m_fulltag;
    bool m_fulltag_isSet;
    bool m_fulltag_isValid;

    QString m_image_digest;
    bool m_image_digest_isSet;
    bool m_image_digest_isValid;

    QString m_image_id;
    bool m_image_id_isSet;
    bool m_image_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_registry;
    bool m_registry_isSet;
    bool m_registry_isValid;

    QString m_repo;
    bool m_repo_isSet;
    bool m_repo_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageDetail)

#endif // OAIImageDetail_H
