/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContentPackageResponse_content_inner.h
 *
 * 
 */

#ifndef OAIContentPackageResponse_content_inner_H
#define OAIContentPackageResponse_content_inner_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContentPackageResponse_content_inner : public OAIObject {
public:
    OAIContentPackageResponse_content_inner();
    OAIContentPackageResponse_content_inner(QString json);
    ~OAIContentPackageResponse_content_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCpes() const;
    void setCpes(const QList<QString> &cpes);
    bool is_cpes_Set() const;
    bool is_cpes_Valid() const;

    QString getLicense() const;
    void setLicense(const QString &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QList<QString> getLicenses() const;
    void setLicenses(const QList<QString> &licenses);
    bool is_licenses_Set() const;
    bool is_licenses_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QString getPackage() const;
    void setPackage(const QString &package);
    bool is_package_Set() const;
    bool is_package_Valid() const;

    QString getSize() const;
    void setSize(const QString &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_cpes;
    bool m_cpes_isSet;
    bool m_cpes_isValid;

    QString m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QList<QString> m_licenses;
    bool m_licenses_isSet;
    bool m_licenses_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QString m_package;
    bool m_package_isSet;
    bool m_package_isValid;

    QString m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContentPackageResponse_content_inner)

#endif // OAIContentPackageResponse_content_inner_H
