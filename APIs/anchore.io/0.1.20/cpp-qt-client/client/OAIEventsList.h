/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventsList.h
 *
 * Response envelope for paginated listing of events
 */

#ifndef OAIEventsList_H
#define OAIEventsList_H

#include <QJsonObject>

#include "OAIEventResponse.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventResponse;

class OAIEventsList : public OAIObject {
public:
    OAIEventsList();
    OAIEventsList(QString json);
    ~OAIEventsList() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getItemCount() const;
    void setItemCount(const qint32 &item_count);
    bool is_item_count_Set() const;
    bool is_item_count_Valid() const;

    bool isNextPage() const;
    void setNextPage(const bool &next_page);
    bool is_next_page_Set() const;
    bool is_next_page_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    QList<OAIEventResponse> getResults() const;
    void setResults(const QList<OAIEventResponse> &results);
    bool is_results_Set() const;
    bool is_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_item_count;
    bool m_item_count_isSet;
    bool m_item_count_isValid;

    bool m_next_page;
    bool m_next_page_isSet;
    bool m_next_page_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    QList<OAIEventResponse> m_results;
    bool m_results_isSet;
    bool m_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventsList)

#endif // OAIEventsList_H
