/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArchivedAnalysis.h
 *
 * 
 */

#ifndef OAIArchivedAnalysis_H
#define OAIArchivedAnalysis_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAITagEntry.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITagEntry;

class OAIArchivedAnalysis : public OAIObject {
public:
    OAIArchivedAnalysis();
    OAIArchivedAnalysis(QString json);
    ~OAIArchivedAnalysis() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAnalyzedAt() const;
    void setAnalyzedAt(const QDateTime &analyzed_at);
    bool is_analyzed_at_Set() const;
    bool is_analyzed_at_Valid() const;

    OAIObject getAnnotations() const;
    void setAnnotations(const OAIObject &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    qint32 getArchiveSizeBytes() const;
    void setArchiveSizeBytes(const qint32 &archive_size_bytes);
    bool is_archive_size_bytes_Set() const;
    bool is_archive_size_bytes_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getImageDigest() const;
    void setImageDigest(const QString &image_digest);
    bool is_image_digest_Set() const;
    bool is_image_digest_Valid() const;

    QList<OAITagEntry> getImageDetail() const;
    void setImageDetail(const QList<OAITagEntry> &image_detail);
    bool is_image_detail_Set() const;
    bool is_image_detail_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getParentDigest() const;
    void setParentDigest(const QString &parent_digest);
    bool is_parent_digest_Set() const;
    bool is_parent_digest_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_analyzed_at;
    bool m_analyzed_at_isSet;
    bool m_analyzed_at_isValid;

    OAIObject m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    qint32 m_archive_size_bytes;
    bool m_archive_size_bytes_isSet;
    bool m_archive_size_bytes_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_image_digest;
    bool m_image_digest_isSet;
    bool m_image_digest_isValid;

    QList<OAITagEntry> m_image_detail;
    bool m_image_detail_isSet;
    bool m_image_detail_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_parent_digest;
    bool m_parent_digest_isSet;
    bool m_parent_digest_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArchivedAnalysis)

#endif // OAIArchivedAnalysis_H
