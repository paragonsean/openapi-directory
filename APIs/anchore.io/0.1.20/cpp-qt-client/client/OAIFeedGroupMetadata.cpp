/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFeedGroupMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFeedGroupMetadata::OAIFeedGroupMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFeedGroupMetadata::OAIFeedGroupMetadata() {
    this->initializeModel();
}

OAIFeedGroupMetadata::~OAIFeedGroupMetadata() {}

void OAIFeedGroupMetadata::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_last_sync_isSet = false;
    m_last_sync_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_record_count_isSet = false;
    m_record_count_isValid = false;
}

void OAIFeedGroupMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFeedGroupMetadata::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_last_sync_isValid = ::OpenAPI::fromJsonValue(m_last_sync, json[QString("last_sync")]);
    m_last_sync_isSet = !json[QString("last_sync")].isNull() && m_last_sync_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_record_count_isValid = ::OpenAPI::fromJsonValue(m_record_count, json[QString("record_count")]);
    m_record_count_isSet = !json[QString("record_count")].isNull() && m_record_count_isValid;
}

QString OAIFeedGroupMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFeedGroupMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_last_sync_isSet) {
        obj.insert(QString("last_sync"), ::OpenAPI::toJsonValue(m_last_sync));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_record_count_isSet) {
        obj.insert(QString("record_count"), ::OpenAPI::toJsonValue(m_record_count));
    }
    return obj;
}

QDateTime OAIFeedGroupMetadata::getCreatedAt() const {
    return m_created_at;
}
void OAIFeedGroupMetadata::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIFeedGroupMetadata::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIFeedGroupMetadata::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIFeedGroupMetadata::getLastSync() const {
    return m_last_sync;
}
void OAIFeedGroupMetadata::setLastSync(const QDateTime &last_sync) {
    m_last_sync = last_sync;
    m_last_sync_isSet = true;
}

bool OAIFeedGroupMetadata::is_last_sync_Set() const{
    return m_last_sync_isSet;
}

bool OAIFeedGroupMetadata::is_last_sync_Valid() const{
    return m_last_sync_isValid;
}

QString OAIFeedGroupMetadata::getName() const {
    return m_name;
}
void OAIFeedGroupMetadata::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFeedGroupMetadata::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFeedGroupMetadata::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIFeedGroupMetadata::getRecordCount() const {
    return m_record_count;
}
void OAIFeedGroupMetadata::setRecordCount(const qint32 &record_count) {
    m_record_count = record_count;
    m_record_count_isSet = true;
}

bool OAIFeedGroupMetadata::is_record_count_Set() const{
    return m_record_count_isSet;
}

bool OAIFeedGroupMetadata::is_record_count_Valid() const{
    return m_record_count_isValid;
}

bool OAIFeedGroupMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_sync_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_record_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFeedGroupMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
