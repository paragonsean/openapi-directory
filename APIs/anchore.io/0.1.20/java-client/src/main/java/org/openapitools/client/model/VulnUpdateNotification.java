/*
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.VulnUpdateNotificationData;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VulnUpdateNotification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:58.810142-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VulnUpdateNotification {
  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private Integer createdAt;

  public static final String SERIALIZED_NAME_DATA_ID = "dataId";
  @SerializedName(SERIALIZED_NAME_DATA_ID)
  private String dataId;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "last_updated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private Integer lastUpdated;

  public static final String SERIALIZED_NAME_MAX_TRIES = "max_tries";
  @SerializedName(SERIALIZED_NAME_MAX_TRIES)
  private Integer maxTries;

  public static final String SERIALIZED_NAME_QUEUE_ID = "queueId";
  @SerializedName(SERIALIZED_NAME_QUEUE_ID)
  private String queueId;

  public static final String SERIALIZED_NAME_RECORD_STATE_KEY = "record_state_key";
  @SerializedName(SERIALIZED_NAME_RECORD_STATE_KEY)
  private String recordStateKey = "active";

  public static final String SERIALIZED_NAME_RECORD_STATE_VAL = "record_state_val";
  @SerializedName(SERIALIZED_NAME_RECORD_STATE_VAL)
  private String recordStateVal;

  public static final String SERIALIZED_NAME_TRIES = "tries";
  @SerializedName(SERIALIZED_NAME_TRIES)
  private Integer tries;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private VulnUpdateNotificationData data;

  public VulnUpdateNotification() {
  }

  public VulnUpdateNotification createdAt(Integer createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public Integer getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }


  public VulnUpdateNotification dataId(String dataId) {
    this.dataId = dataId;
    return this;
  }

  /**
   * Get dataId
   * @return dataId
   */
  @javax.annotation.Nullable
  public String getDataId() {
    return dataId;
  }

  public void setDataId(String dataId) {
    this.dataId = dataId;
  }


  public VulnUpdateNotification lastUpdated(Integer lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Get lastUpdated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public Integer getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(Integer lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public VulnUpdateNotification maxTries(Integer maxTries) {
    this.maxTries = maxTries;
    return this;
  }

  /**
   * Get maxTries
   * @return maxTries
   */
  @javax.annotation.Nullable
  public Integer getMaxTries() {
    return maxTries;
  }

  public void setMaxTries(Integer maxTries) {
    this.maxTries = maxTries;
  }


  public VulnUpdateNotification queueId(String queueId) {
    this.queueId = queueId;
    return this;
  }

  /**
   * Get queueId
   * @return queueId
   */
  @javax.annotation.Nullable
  public String getQueueId() {
    return queueId;
  }

  public void setQueueId(String queueId) {
    this.queueId = queueId;
  }


  public VulnUpdateNotification recordStateKey(String recordStateKey) {
    this.recordStateKey = recordStateKey;
    return this;
  }

  /**
   * Get recordStateKey
   * @return recordStateKey
   */
  @javax.annotation.Nullable
  public String getRecordStateKey() {
    return recordStateKey;
  }

  public void setRecordStateKey(String recordStateKey) {
    this.recordStateKey = recordStateKey;
  }


  public VulnUpdateNotification recordStateVal(String recordStateVal) {
    this.recordStateVal = recordStateVal;
    return this;
  }

  /**
   * Get recordStateVal
   * @return recordStateVal
   */
  @javax.annotation.Nullable
  public String getRecordStateVal() {
    return recordStateVal;
  }

  public void setRecordStateVal(String recordStateVal) {
    this.recordStateVal = recordStateVal;
  }


  public VulnUpdateNotification tries(Integer tries) {
    this.tries = tries;
    return this;
  }

  /**
   * Get tries
   * @return tries
   */
  @javax.annotation.Nullable
  public Integer getTries() {
    return tries;
  }

  public void setTries(Integer tries) {
    this.tries = tries;
  }


  public VulnUpdateNotification userId(String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  public VulnUpdateNotification data(VulnUpdateNotificationData data) {
    this.data = data;
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @javax.annotation.Nullable
  public VulnUpdateNotificationData getData() {
    return data;
  }

  public void setData(VulnUpdateNotificationData data) {
    this.data = data;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnUpdateNotification vulnUpdateNotification = (VulnUpdateNotification) o;
    return Objects.equals(this.createdAt, vulnUpdateNotification.createdAt) &&
        Objects.equals(this.dataId, vulnUpdateNotification.dataId) &&
        Objects.equals(this.lastUpdated, vulnUpdateNotification.lastUpdated) &&
        Objects.equals(this.maxTries, vulnUpdateNotification.maxTries) &&
        Objects.equals(this.queueId, vulnUpdateNotification.queueId) &&
        Objects.equals(this.recordStateKey, vulnUpdateNotification.recordStateKey) &&
        Objects.equals(this.recordStateVal, vulnUpdateNotification.recordStateVal) &&
        Objects.equals(this.tries, vulnUpdateNotification.tries) &&
        Objects.equals(this.userId, vulnUpdateNotification.userId) &&
        Objects.equals(this.data, vulnUpdateNotification.data);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, dataId, lastUpdated, maxTries, queueId, recordStateKey, recordStateVal, tries, userId, data);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnUpdateNotification {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    dataId: ").append(toIndentedString(dataId)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    maxTries: ").append(toIndentedString(maxTries)).append("\n");
    sb.append("    queueId: ").append(toIndentedString(queueId)).append("\n");
    sb.append("    recordStateKey: ").append(toIndentedString(recordStateKey)).append("\n");
    sb.append("    recordStateVal: ").append(toIndentedString(recordStateVal)).append("\n");
    sb.append("    tries: ").append(toIndentedString(tries)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at");
    openapiFields.add("dataId");
    openapiFields.add("last_updated");
    openapiFields.add("max_tries");
    openapiFields.add("queueId");
    openapiFields.add("record_state_key");
    openapiFields.add("record_state_val");
    openapiFields.add("tries");
    openapiFields.add("userId");
    openapiFields.add("data");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VulnUpdateNotification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VulnUpdateNotification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VulnUpdateNotification is not found in the empty JSON string", VulnUpdateNotification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VulnUpdateNotification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VulnUpdateNotification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dataId") != null && !jsonObj.get("dataId").isJsonNull()) && !jsonObj.get("dataId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataId").toString()));
      }
      if ((jsonObj.get("queueId") != null && !jsonObj.get("queueId").isJsonNull()) && !jsonObj.get("queueId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queueId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queueId").toString()));
      }
      if ((jsonObj.get("record_state_key") != null && !jsonObj.get("record_state_key").isJsonNull()) && !jsonObj.get("record_state_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `record_state_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("record_state_key").toString()));
      }
      if ((jsonObj.get("record_state_val") != null && !jsonObj.get("record_state_val").isJsonNull()) && !jsonObj.get("record_state_val").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `record_state_val` to be a primitive type in the JSON string but got `%s`", jsonObj.get("record_state_val").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      // validate the optional field `data`
      if (jsonObj.get("data") != null && !jsonObj.get("data").isJsonNull()) {
        VulnUpdateNotificationData.validateJsonElement(jsonObj.get("data"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VulnUpdateNotification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VulnUpdateNotification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VulnUpdateNotification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VulnUpdateNotification.class));

       return (TypeAdapter<T>) new TypeAdapter<VulnUpdateNotification>() {
           @Override
           public void write(JsonWriter out, VulnUpdateNotification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VulnUpdateNotification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VulnUpdateNotification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VulnUpdateNotification
   * @throws IOException if the JSON string is invalid with respect to VulnUpdateNotification
   */
  public static VulnUpdateNotification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VulnUpdateNotification.class);
  }

  /**
   * Convert an instance of VulnUpdateNotification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

