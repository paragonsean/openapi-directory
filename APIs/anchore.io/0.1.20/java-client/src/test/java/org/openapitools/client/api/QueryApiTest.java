/*
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiErrorResponse;
import org.openapitools.client.model.PaginatedImageList;
import org.openapitools.client.model.PaginatedVulnerabilityList;
import org.openapitools.client.model.PaginatedVulnerableImageList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QueryApi
 */
@Disabled
public class QueryApiTest {

    private final QueryApi api = new QueryApi();

    /**
     * List of images containing given package
     *
     * Filterable query interface to search for images containing specified package
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryImagesByPackageTest() throws ApiException {
        String name = null;
        String packageType = null;
        String version = null;
        String page = null;
        Integer limit = null;
        String xAnchoreAccount = null;
        PaginatedImageList response = api.queryImagesByPackage(name, packageType, version, page, limit, xAnchoreAccount);
        // TODO: test validations
    }

    /**
     * List images vulnerable to the specific vulnerability ID.
     *
     * Returns a listing of images and their respective packages vulnerable to the given vulnerability ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryImagesByVulnerabilityTest() throws ApiException {
        String vulnerabilityId = null;
        String namespace = null;
        String affectedPackage = null;
        String severity = null;
        Boolean vendorOnly = null;
        Integer page = null;
        Integer limit = null;
        String xAnchoreAccount = null;
        PaginatedVulnerableImageList response = api.queryImagesByVulnerability(vulnerabilityId, namespace, affectedPackage, severity, vendorOnly, page, limit, xAnchoreAccount);
        // TODO: test validations
    }

    /**
     * Listing information about given vulnerability
     *
     * List (w/filters) vulnerability records known by the system, with affected packages information if present
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryVulnerabilitiesTest() throws ApiException {
        List<String> id = null;
        String affectedPackage = null;
        String affectedPackageVersion = null;
        String page = null;
        Integer limit = null;
        List<String> namespace = null;
        PaginatedVulnerabilityList response = api.queryVulnerabilities(id, affectedPackage, affectedPackageVersion, page, limit, namespace);
        // TODO: test validations
    }

}
