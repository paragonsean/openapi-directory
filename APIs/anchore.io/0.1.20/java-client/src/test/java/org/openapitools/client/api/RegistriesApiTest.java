/*
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiErrorResponse;
import org.openapitools.client.model.RegistryConfiguration;
import org.openapitools.client.model.RegistryConfigurationRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegistriesApi
 */
@Disabled
public class RegistriesApiTest {

    private final RegistriesApi api = new RegistriesApi();

    /**
     * Add a new registry
     *
     * Adds a new registry to the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRegistryTest() throws ApiException {
        RegistryConfigurationRequest registryConfigurationRequest = null;
        Boolean validate = null;
        String xAnchoreAccount = null;
        List<RegistryConfiguration> response = api.createRegistry(registryConfigurationRequest, validate, xAnchoreAccount);
        // TODO: test validations
    }

    /**
     * Delete a registry configuration
     *
     * Delete a registry configuration record from the system. Does not remove any images.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRegistryTest() throws ApiException {
        String registry = null;
        String xAnchoreAccount = null;
        api.deleteRegistry(registry, xAnchoreAccount);
        // TODO: test validations
    }

    /**
     * Get a specific registry configuration
     *
     * Get information on a specific registry
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegistryTest() throws ApiException {
        String registry = null;
        String xAnchoreAccount = null;
        List<RegistryConfiguration> response = api.getRegistry(registry, xAnchoreAccount);
        // TODO: test validations
    }

    /**
     * List configured registries
     *
     * List all configured registries the system can/will watch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRegistriesTest() throws ApiException {
        String xAnchoreAccount = null;
        List<RegistryConfiguration> response = api.listRegistries(xAnchoreAccount);
        // TODO: test validations
    }

    /**
     * Update/replace a registry configuration
     *
     * Replaces an existing registry record with the given record
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRegistryTest() throws ApiException {
        String registry = null;
        RegistryConfigurationRequest registryConfigurationRequest = null;
        Boolean validate = null;
        String xAnchoreAccount = null;
        List<RegistryConfiguration> response = api.updateRegistry(registry, registryConfigurationRequest, validate, xAnchoreAccount);
        // TODO: test validations
    }

}
