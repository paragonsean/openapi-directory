/*
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiErrorResponse;
import org.openapitools.client.model.Subscription;
import org.openapitools.client.model.SubscriptionRequest;
import org.openapitools.client.model.SubscriptionUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionsApi
 */
@Disabled
public class SubscriptionsApiTest {

    private final SubscriptionsApi api = new SubscriptionsApi();

    /**
     * Add a subscription of a specific type
     *
     * Create a new subscription to watch a tag and get notifications of changes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addSubscriptionTest() throws ApiException {
        SubscriptionRequest subscriptionRequest = null;
        String xAnchoreAccount = null;
        List<Subscription> response = api.addSubscription(subscriptionRequest, xAnchoreAccount);
        // TODO: test validations
    }

    /**
     * Delete subscriptions of a specific type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String xAnchoreAccount = null;
        api.deleteSubscription(subscriptionId, xAnchoreAccount);
        // TODO: test validations
    }

    /**
     * Get a specific subscription set
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String xAnchoreAccount = null;
        List<Subscription> response = api.getSubscription(subscriptionId, xAnchoreAccount);
        // TODO: test validations
    }

    /**
     * List all subscriptions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSubscriptionsTest() throws ApiException {
        String subscriptionKey = null;
        String subscriptionType = null;
        String xAnchoreAccount = null;
        List<Subscription> response = api.listSubscriptions(subscriptionKey, subscriptionType, xAnchoreAccount);
        // TODO: test validations
    }

    /**
     * Update an existing and specific subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        SubscriptionUpdate subscriptionUpdate = null;
        String xAnchoreAccount = null;
        List<Subscription> response = api.updateSubscription(subscriptionId, subscriptionUpdate, xAnchoreAccount);
        // TODO: test validations
    }

}
