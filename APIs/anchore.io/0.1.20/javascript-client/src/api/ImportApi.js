/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AnchoreImage from '../model/AnchoreImage';
import ApiErrorResponse from '../model/ApiErrorResponse';

/**
* Import service.
* @module api/ImportApi
* @version 0.1.20
*/
export default class ImportApi {

    /**
    * Constructs a new ImportApi. 
    * @alias module:api/ImportApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the importImageArchive operation.
     * @callback module:api/ImportApi~importImageArchiveCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AnchoreImage>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Import an anchore image tar.gz archive file. This is a deprecated API replaced by the \"/imports/images\" route
     * @param {File} archiveFile anchore image tar archive.
     * @param {module:api/ImportApi~importImageArchiveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/AnchoreImage>}
     */
    importImageArchive(archiveFile, callback) {
      let postBody = null;
      // verify the required parameter 'archiveFile' is set
      if (archiveFile === undefined || archiveFile === null) {
        throw new Error("Missing the required parameter 'archiveFile' when calling importImageArchive");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'archive_file': archiveFile
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = [AnchoreImage];
      return this.apiClient.callApi(
        '/import/images', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
