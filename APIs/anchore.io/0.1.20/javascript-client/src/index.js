/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessCredential from './model/AccessCredential';
import Account from './model/Account';
import AccountCreationRequest from './model/AccountCreationRequest';
import AccountStatus from './model/AccountStatus';
import AnalysisArchiveAddResult from './model/AnalysisArchiveAddResult';
import AnalysisArchiveRulesSummary from './model/AnalysisArchiveRulesSummary';
import AnalysisArchiveSource from './model/AnalysisArchiveSource';
import AnalysisArchiveSummary from './model/AnalysisArchiveSummary';
import AnalysisArchiveTransitionHistory from './model/AnalysisArchiveTransitionHistory';
import AnalysisArchiveTransitionRule from './model/AnalysisArchiveTransitionRule';
import AnalysisArchiveTransitionRuleExclude from './model/AnalysisArchiveTransitionRuleExclude';
import AnalysisUpdateEval from './model/AnalysisUpdateEval';
import AnalysisUpdateNotification from './model/AnalysisUpdateNotification';
import AnalysisUpdateNotificationData from './model/AnalysisUpdateNotificationData';
import AnalysisUpdateNotificationPayload from './model/AnalysisUpdateNotificationPayload';
import AnchoreErrorCode from './model/AnchoreErrorCode';
import AnchoreImage from './model/AnchoreImage';
import AnchoreImageTagSummary from './model/AnchoreImageTagSummary';
import ApiErrorResponse from './model/ApiErrorResponse';
import ArchiveSummary from './model/ArchiveSummary';
import ArchivedAnalysis from './model/ArchivedAnalysis';
import BaseNotificationData from './model/BaseNotificationData';
import CVSSV2Scores from './model/CVSSV2Scores';
import CVSSV3Scores from './model/CVSSV3Scores';
import ContentFilesResponse from './model/ContentFilesResponse';
import ContentFilesResponseContentInner from './model/ContentFilesResponseContentInner';
import ContentJAVAPackageResponse from './model/ContentJAVAPackageResponse';
import ContentJAVAPackageResponseContentInner from './model/ContentJAVAPackageResponseContentInner';
import ContentMalwareResponse from './model/ContentMalwareResponse';
import ContentPackageResponse from './model/ContentPackageResponse';
import ContentPackageResponseContentInner from './model/ContentPackageResponseContentInner';
import ContentResponse from './model/ContentResponse';
import DeleteImageResponse from './model/DeleteImageResponse';
import EventCategory from './model/EventCategory';
import EventDescription from './model/EventDescription';
import EventResponse from './model/EventResponse';
import EventResponseEvent from './model/EventResponseEvent';
import EventResponseEventResource from './model/EventResponseEventResource';
import EventResponseEventSource from './model/EventResponseEventSource';
import EventSubcategory from './model/EventSubcategory';
import EventsList from './model/EventsList';
import FeedGroupMetadata from './model/FeedGroupMetadata';
import FeedMetadata from './model/FeedMetadata';
import FeedSyncResult from './model/FeedSyncResult';
import FileContentSearchResult from './model/FileContentSearchResult';
import GateSpec from './model/GateSpec';
import GenericNotificationPayload from './model/GenericNotificationPayload';
import GroupSyncResult from './model/GroupSyncResult';
import ImageAnalysisRequest from './model/ImageAnalysisRequest';
import ImageDetail from './model/ImageDetail';
import ImageFilter from './model/ImageFilter';
import ImageImportContentResponse from './model/ImageImportContentResponse';
import ImageImportManifest from './model/ImageImportManifest';
import ImageImportOperation from './model/ImageImportOperation';
import ImagePackageManifest from './model/ImagePackageManifest';
import ImageRef from './model/ImageRef';
import ImageReference from './model/ImageReference';
import ImageSelectionRule from './model/ImageSelectionRule';
import ImageSelector from './model/ImageSelector';
import ImageSource from './model/ImageSource';
import ImageWithPackages from './model/ImageWithPackages';
import ImportContentDigests from './model/ImportContentDigests';
import ImportDescriptor from './model/ImportDescriptor';
import ImportDistribution from './model/ImportDistribution';
import ImportPackage from './model/ImportPackage';
import ImportPackageLocation from './model/ImportPackageLocation';
import ImportPackageRelationship from './model/ImportPackageRelationship';
import ImportSchema from './model/ImportSchema';
import ImportSource from './model/ImportSource';
import LocalAnalysisSource from './model/LocalAnalysisSource';
import MalwareScan from './model/MalwareScan';
import MalwareScanFindingsInner from './model/MalwareScanFindingsInner';
import MappingRule from './model/MappingRule';
import MetadataResponse from './model/MetadataResponse';
import NotificationBase from './model/NotificationBase';
import NvdDataObject from './model/NvdDataObject';
import PackageReference from './model/PackageReference';
import PaginatedImageList from './model/PaginatedImageList';
import PaginatedVulnerabilityList from './model/PaginatedVulnerabilityList';
import PaginatedVulnerableImageList from './model/PaginatedVulnerableImageList';
import PaginationProperties from './model/PaginationProperties';
import Policy from './model/Policy';
import PolicyBundle from './model/PolicyBundle';
import PolicyBundleRecord from './model/PolicyBundleRecord';
import PolicyEvalNotification from './model/PolicyEvalNotification';
import PolicyEvalNotificationData from './model/PolicyEvalNotificationData';
import PolicyEvalNotificationPayload from './model/PolicyEvalNotificationPayload';
import PolicyRule from './model/PolicyRule';
import PolicyRuleParamsInner from './model/PolicyRuleParamsInner';
import RegexContentMatch from './model/RegexContentMatch';
import RegistryConfiguration from './model/RegistryConfiguration';
import RegistryConfigurationRequest from './model/RegistryConfigurationRequest';
import RegistryDigestSource from './model/RegistryDigestSource';
import RegistryTagSource from './model/RegistryTagSource';
import RetrievedFile from './model/RetrievedFile';
import SecretSearchResult from './model/SecretSearchResult';
import Service from './model/Service';
import ServiceVersion from './model/ServiceVersion';
import ServiceVersionApi from './model/ServiceVersionApi';
import ServiceVersionDb from './model/ServiceVersionDb';
import ServiceVersionService from './model/ServiceVersionService';
import StandaloneVulnerability from './model/StandaloneVulnerability';
import StatusResponse from './model/StatusResponse';
import Subscription from './model/Subscription';
import SubscriptionRequest from './model/SubscriptionRequest';
import SubscriptionUpdate from './model/SubscriptionUpdate';
import SystemStatusResponse from './model/SystemStatusResponse';
import TagEntry from './model/TagEntry';
import TagUpdateNotification from './model/TagUpdateNotification';
import TagUpdateNotificationData from './model/TagUpdateNotificationData';
import TagUpdateNotificationPayload from './model/TagUpdateNotificationPayload';
import TokenResponse from './model/TokenResponse';
import TriggerParamSpec from './model/TriggerParamSpec';
import TriggerSpec from './model/TriggerSpec';
import User from './model/User';
import UserCreationRequest from './model/UserCreationRequest';
import VendorDataObject from './model/VendorDataObject';
import VulnDiffResult from './model/VulnDiffResult';
import VulnUpdateNotification from './model/VulnUpdateNotification';
import VulnUpdateNotificationData from './model/VulnUpdateNotificationData';
import VulnUpdateNotificationPayload from './model/VulnUpdateNotificationPayload';
import Vulnerability from './model/Vulnerability';
import VulnerabilityReference from './model/VulnerabilityReference';
import VulnerabilityResponse from './model/VulnerabilityResponse';
import VulnerableImage from './model/VulnerableImage';
import VulnerablePackageReference from './model/VulnerablePackageReference';
import Whitelist from './model/Whitelist';
import WhitelistItem from './model/WhitelistItem';
import ArchivesApi from './api/ArchivesApi';
import DefaultApi from './api/DefaultApi';
import EventsApi from './api/EventsApi';
import IdentityApi from './api/IdentityApi';
import ImagesApi from './api/ImagesApi';
import ImportApi from './api/ImportApi';
import ImportsApi from './api/ImportsApi';
import PoliciesApi from './api/PoliciesApi';
import QueryApi from './api/QueryApi';
import RegistriesApi from './api/RegistriesApi';
import RepositoryCredentialsApi from './api/RepositoryCredentialsApi';
import SubscriptionsApi from './api/SubscriptionsApi';
import SummariesApi from './api/SummariesApi';
import SystemApi from './api/SystemApi';
import UserManagementApi from './api/UserManagementApi';


/**
* This is the Anchore Engine API. Provides the primary external API for users of the service..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AnchoreEngineApiServer = require('index'); // See note below*.
* var xxxSvc = new AnchoreEngineApiServer.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AnchoreEngineApiServer.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AnchoreEngineApiServer.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AnchoreEngineApiServer.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.20
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessCredential model constructor.
     * @property {module:model/AccessCredential}
     */
    AccessCredential,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The AccountCreationRequest model constructor.
     * @property {module:model/AccountCreationRequest}
     */
    AccountCreationRequest,

    /**
     * The AccountStatus model constructor.
     * @property {module:model/AccountStatus}
     */
    AccountStatus,

    /**
     * The AnalysisArchiveAddResult model constructor.
     * @property {module:model/AnalysisArchiveAddResult}
     */
    AnalysisArchiveAddResult,

    /**
     * The AnalysisArchiveRulesSummary model constructor.
     * @property {module:model/AnalysisArchiveRulesSummary}
     */
    AnalysisArchiveRulesSummary,

    /**
     * The AnalysisArchiveSource model constructor.
     * @property {module:model/AnalysisArchiveSource}
     */
    AnalysisArchiveSource,

    /**
     * The AnalysisArchiveSummary model constructor.
     * @property {module:model/AnalysisArchiveSummary}
     */
    AnalysisArchiveSummary,

    /**
     * The AnalysisArchiveTransitionHistory model constructor.
     * @property {module:model/AnalysisArchiveTransitionHistory}
     */
    AnalysisArchiveTransitionHistory,

    /**
     * The AnalysisArchiveTransitionRule model constructor.
     * @property {module:model/AnalysisArchiveTransitionRule}
     */
    AnalysisArchiveTransitionRule,

    /**
     * The AnalysisArchiveTransitionRuleExclude model constructor.
     * @property {module:model/AnalysisArchiveTransitionRuleExclude}
     */
    AnalysisArchiveTransitionRuleExclude,

    /**
     * The AnalysisUpdateEval model constructor.
     * @property {module:model/AnalysisUpdateEval}
     */
    AnalysisUpdateEval,

    /**
     * The AnalysisUpdateNotification model constructor.
     * @property {module:model/AnalysisUpdateNotification}
     */
    AnalysisUpdateNotification,

    /**
     * The AnalysisUpdateNotificationData model constructor.
     * @property {module:model/AnalysisUpdateNotificationData}
     */
    AnalysisUpdateNotificationData,

    /**
     * The AnalysisUpdateNotificationPayload model constructor.
     * @property {module:model/AnalysisUpdateNotificationPayload}
     */
    AnalysisUpdateNotificationPayload,

    /**
     * The AnchoreErrorCode model constructor.
     * @property {module:model/AnchoreErrorCode}
     */
    AnchoreErrorCode,

    /**
     * The AnchoreImage model constructor.
     * @property {module:model/AnchoreImage}
     */
    AnchoreImage,

    /**
     * The AnchoreImageTagSummary model constructor.
     * @property {module:model/AnchoreImageTagSummary}
     */
    AnchoreImageTagSummary,

    /**
     * The ApiErrorResponse model constructor.
     * @property {module:model/ApiErrorResponse}
     */
    ApiErrorResponse,

    /**
     * The ArchiveSummary model constructor.
     * @property {module:model/ArchiveSummary}
     */
    ArchiveSummary,

    /**
     * The ArchivedAnalysis model constructor.
     * @property {module:model/ArchivedAnalysis}
     */
    ArchivedAnalysis,

    /**
     * The BaseNotificationData model constructor.
     * @property {module:model/BaseNotificationData}
     */
    BaseNotificationData,

    /**
     * The CVSSV2Scores model constructor.
     * @property {module:model/CVSSV2Scores}
     */
    CVSSV2Scores,

    /**
     * The CVSSV3Scores model constructor.
     * @property {module:model/CVSSV3Scores}
     */
    CVSSV3Scores,

    /**
     * The ContentFilesResponse model constructor.
     * @property {module:model/ContentFilesResponse}
     */
    ContentFilesResponse,

    /**
     * The ContentFilesResponseContentInner model constructor.
     * @property {module:model/ContentFilesResponseContentInner}
     */
    ContentFilesResponseContentInner,

    /**
     * The ContentJAVAPackageResponse model constructor.
     * @property {module:model/ContentJAVAPackageResponse}
     */
    ContentJAVAPackageResponse,

    /**
     * The ContentJAVAPackageResponseContentInner model constructor.
     * @property {module:model/ContentJAVAPackageResponseContentInner}
     */
    ContentJAVAPackageResponseContentInner,

    /**
     * The ContentMalwareResponse model constructor.
     * @property {module:model/ContentMalwareResponse}
     */
    ContentMalwareResponse,

    /**
     * The ContentPackageResponse model constructor.
     * @property {module:model/ContentPackageResponse}
     */
    ContentPackageResponse,

    /**
     * The ContentPackageResponseContentInner model constructor.
     * @property {module:model/ContentPackageResponseContentInner}
     */
    ContentPackageResponseContentInner,

    /**
     * The ContentResponse model constructor.
     * @property {module:model/ContentResponse}
     */
    ContentResponse,

    /**
     * The DeleteImageResponse model constructor.
     * @property {module:model/DeleteImageResponse}
     */
    DeleteImageResponse,

    /**
     * The EventCategory model constructor.
     * @property {module:model/EventCategory}
     */
    EventCategory,

    /**
     * The EventDescription model constructor.
     * @property {module:model/EventDescription}
     */
    EventDescription,

    /**
     * The EventResponse model constructor.
     * @property {module:model/EventResponse}
     */
    EventResponse,

    /**
     * The EventResponseEvent model constructor.
     * @property {module:model/EventResponseEvent}
     */
    EventResponseEvent,

    /**
     * The EventResponseEventResource model constructor.
     * @property {module:model/EventResponseEventResource}
     */
    EventResponseEventResource,

    /**
     * The EventResponseEventSource model constructor.
     * @property {module:model/EventResponseEventSource}
     */
    EventResponseEventSource,

    /**
     * The EventSubcategory model constructor.
     * @property {module:model/EventSubcategory}
     */
    EventSubcategory,

    /**
     * The EventsList model constructor.
     * @property {module:model/EventsList}
     */
    EventsList,

    /**
     * The FeedGroupMetadata model constructor.
     * @property {module:model/FeedGroupMetadata}
     */
    FeedGroupMetadata,

    /**
     * The FeedMetadata model constructor.
     * @property {module:model/FeedMetadata}
     */
    FeedMetadata,

    /**
     * The FeedSyncResult model constructor.
     * @property {module:model/FeedSyncResult}
     */
    FeedSyncResult,

    /**
     * The FileContentSearchResult model constructor.
     * @property {module:model/FileContentSearchResult}
     */
    FileContentSearchResult,

    /**
     * The GateSpec model constructor.
     * @property {module:model/GateSpec}
     */
    GateSpec,

    /**
     * The GenericNotificationPayload model constructor.
     * @property {module:model/GenericNotificationPayload}
     */
    GenericNotificationPayload,

    /**
     * The GroupSyncResult model constructor.
     * @property {module:model/GroupSyncResult}
     */
    GroupSyncResult,

    /**
     * The ImageAnalysisRequest model constructor.
     * @property {module:model/ImageAnalysisRequest}
     */
    ImageAnalysisRequest,

    /**
     * The ImageDetail model constructor.
     * @property {module:model/ImageDetail}
     */
    ImageDetail,

    /**
     * The ImageFilter model constructor.
     * @property {module:model/ImageFilter}
     */
    ImageFilter,

    /**
     * The ImageImportContentResponse model constructor.
     * @property {module:model/ImageImportContentResponse}
     */
    ImageImportContentResponse,

    /**
     * The ImageImportManifest model constructor.
     * @property {module:model/ImageImportManifest}
     */
    ImageImportManifest,

    /**
     * The ImageImportOperation model constructor.
     * @property {module:model/ImageImportOperation}
     */
    ImageImportOperation,

    /**
     * The ImagePackageManifest model constructor.
     * @property {module:model/ImagePackageManifest}
     */
    ImagePackageManifest,

    /**
     * The ImageRef model constructor.
     * @property {module:model/ImageRef}
     */
    ImageRef,

    /**
     * The ImageReference model constructor.
     * @property {module:model/ImageReference}
     */
    ImageReference,

    /**
     * The ImageSelectionRule model constructor.
     * @property {module:model/ImageSelectionRule}
     */
    ImageSelectionRule,

    /**
     * The ImageSelector model constructor.
     * @property {module:model/ImageSelector}
     */
    ImageSelector,

    /**
     * The ImageSource model constructor.
     * @property {module:model/ImageSource}
     */
    ImageSource,

    /**
     * The ImageWithPackages model constructor.
     * @property {module:model/ImageWithPackages}
     */
    ImageWithPackages,

    /**
     * The ImportContentDigests model constructor.
     * @property {module:model/ImportContentDigests}
     */
    ImportContentDigests,

    /**
     * The ImportDescriptor model constructor.
     * @property {module:model/ImportDescriptor}
     */
    ImportDescriptor,

    /**
     * The ImportDistribution model constructor.
     * @property {module:model/ImportDistribution}
     */
    ImportDistribution,

    /**
     * The ImportPackage model constructor.
     * @property {module:model/ImportPackage}
     */
    ImportPackage,

    /**
     * The ImportPackageLocation model constructor.
     * @property {module:model/ImportPackageLocation}
     */
    ImportPackageLocation,

    /**
     * The ImportPackageRelationship model constructor.
     * @property {module:model/ImportPackageRelationship}
     */
    ImportPackageRelationship,

    /**
     * The ImportSchema model constructor.
     * @property {module:model/ImportSchema}
     */
    ImportSchema,

    /**
     * The ImportSource model constructor.
     * @property {module:model/ImportSource}
     */
    ImportSource,

    /**
     * The LocalAnalysisSource model constructor.
     * @property {module:model/LocalAnalysisSource}
     */
    LocalAnalysisSource,

    /**
     * The MalwareScan model constructor.
     * @property {module:model/MalwareScan}
     */
    MalwareScan,

    /**
     * The MalwareScanFindingsInner model constructor.
     * @property {module:model/MalwareScanFindingsInner}
     */
    MalwareScanFindingsInner,

    /**
     * The MappingRule model constructor.
     * @property {module:model/MappingRule}
     */
    MappingRule,

    /**
     * The MetadataResponse model constructor.
     * @property {module:model/MetadataResponse}
     */
    MetadataResponse,

    /**
     * The NotificationBase model constructor.
     * @property {module:model/NotificationBase}
     */
    NotificationBase,

    /**
     * The NvdDataObject model constructor.
     * @property {module:model/NvdDataObject}
     */
    NvdDataObject,

    /**
     * The PackageReference model constructor.
     * @property {module:model/PackageReference}
     */
    PackageReference,

    /**
     * The PaginatedImageList model constructor.
     * @property {module:model/PaginatedImageList}
     */
    PaginatedImageList,

    /**
     * The PaginatedVulnerabilityList model constructor.
     * @property {module:model/PaginatedVulnerabilityList}
     */
    PaginatedVulnerabilityList,

    /**
     * The PaginatedVulnerableImageList model constructor.
     * @property {module:model/PaginatedVulnerableImageList}
     */
    PaginatedVulnerableImageList,

    /**
     * The PaginationProperties model constructor.
     * @property {module:model/PaginationProperties}
     */
    PaginationProperties,

    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy,

    /**
     * The PolicyBundle model constructor.
     * @property {module:model/PolicyBundle}
     */
    PolicyBundle,

    /**
     * The PolicyBundleRecord model constructor.
     * @property {module:model/PolicyBundleRecord}
     */
    PolicyBundleRecord,

    /**
     * The PolicyEvalNotification model constructor.
     * @property {module:model/PolicyEvalNotification}
     */
    PolicyEvalNotification,

    /**
     * The PolicyEvalNotificationData model constructor.
     * @property {module:model/PolicyEvalNotificationData}
     */
    PolicyEvalNotificationData,

    /**
     * The PolicyEvalNotificationPayload model constructor.
     * @property {module:model/PolicyEvalNotificationPayload}
     */
    PolicyEvalNotificationPayload,

    /**
     * The PolicyRule model constructor.
     * @property {module:model/PolicyRule}
     */
    PolicyRule,

    /**
     * The PolicyRuleParamsInner model constructor.
     * @property {module:model/PolicyRuleParamsInner}
     */
    PolicyRuleParamsInner,

    /**
     * The RegexContentMatch model constructor.
     * @property {module:model/RegexContentMatch}
     */
    RegexContentMatch,

    /**
     * The RegistryConfiguration model constructor.
     * @property {module:model/RegistryConfiguration}
     */
    RegistryConfiguration,

    /**
     * The RegistryConfigurationRequest model constructor.
     * @property {module:model/RegistryConfigurationRequest}
     */
    RegistryConfigurationRequest,

    /**
     * The RegistryDigestSource model constructor.
     * @property {module:model/RegistryDigestSource}
     */
    RegistryDigestSource,

    /**
     * The RegistryTagSource model constructor.
     * @property {module:model/RegistryTagSource}
     */
    RegistryTagSource,

    /**
     * The RetrievedFile model constructor.
     * @property {module:model/RetrievedFile}
     */
    RetrievedFile,

    /**
     * The SecretSearchResult model constructor.
     * @property {module:model/SecretSearchResult}
     */
    SecretSearchResult,

    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service,

    /**
     * The ServiceVersion model constructor.
     * @property {module:model/ServiceVersion}
     */
    ServiceVersion,

    /**
     * The ServiceVersionApi model constructor.
     * @property {module:model/ServiceVersionApi}
     */
    ServiceVersionApi,

    /**
     * The ServiceVersionDb model constructor.
     * @property {module:model/ServiceVersionDb}
     */
    ServiceVersionDb,

    /**
     * The ServiceVersionService model constructor.
     * @property {module:model/ServiceVersionService}
     */
    ServiceVersionService,

    /**
     * The StandaloneVulnerability model constructor.
     * @property {module:model/StandaloneVulnerability}
     */
    StandaloneVulnerability,

    /**
     * The StatusResponse model constructor.
     * @property {module:model/StatusResponse}
     */
    StatusResponse,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The SubscriptionRequest model constructor.
     * @property {module:model/SubscriptionRequest}
     */
    SubscriptionRequest,

    /**
     * The SubscriptionUpdate model constructor.
     * @property {module:model/SubscriptionUpdate}
     */
    SubscriptionUpdate,

    /**
     * The SystemStatusResponse model constructor.
     * @property {module:model/SystemStatusResponse}
     */
    SystemStatusResponse,

    /**
     * The TagEntry model constructor.
     * @property {module:model/TagEntry}
     */
    TagEntry,

    /**
     * The TagUpdateNotification model constructor.
     * @property {module:model/TagUpdateNotification}
     */
    TagUpdateNotification,

    /**
     * The TagUpdateNotificationData model constructor.
     * @property {module:model/TagUpdateNotificationData}
     */
    TagUpdateNotificationData,

    /**
     * The TagUpdateNotificationPayload model constructor.
     * @property {module:model/TagUpdateNotificationPayload}
     */
    TagUpdateNotificationPayload,

    /**
     * The TokenResponse model constructor.
     * @property {module:model/TokenResponse}
     */
    TokenResponse,

    /**
     * The TriggerParamSpec model constructor.
     * @property {module:model/TriggerParamSpec}
     */
    TriggerParamSpec,

    /**
     * The TriggerSpec model constructor.
     * @property {module:model/TriggerSpec}
     */
    TriggerSpec,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserCreationRequest model constructor.
     * @property {module:model/UserCreationRequest}
     */
    UserCreationRequest,

    /**
     * The VendorDataObject model constructor.
     * @property {module:model/VendorDataObject}
     */
    VendorDataObject,

    /**
     * The VulnDiffResult model constructor.
     * @property {module:model/VulnDiffResult}
     */
    VulnDiffResult,

    /**
     * The VulnUpdateNotification model constructor.
     * @property {module:model/VulnUpdateNotification}
     */
    VulnUpdateNotification,

    /**
     * The VulnUpdateNotificationData model constructor.
     * @property {module:model/VulnUpdateNotificationData}
     */
    VulnUpdateNotificationData,

    /**
     * The VulnUpdateNotificationPayload model constructor.
     * @property {module:model/VulnUpdateNotificationPayload}
     */
    VulnUpdateNotificationPayload,

    /**
     * The Vulnerability model constructor.
     * @property {module:model/Vulnerability}
     */
    Vulnerability,

    /**
     * The VulnerabilityReference model constructor.
     * @property {module:model/VulnerabilityReference}
     */
    VulnerabilityReference,

    /**
     * The VulnerabilityResponse model constructor.
     * @property {module:model/VulnerabilityResponse}
     */
    VulnerabilityResponse,

    /**
     * The VulnerableImage model constructor.
     * @property {module:model/VulnerableImage}
     */
    VulnerableImage,

    /**
     * The VulnerablePackageReference model constructor.
     * @property {module:model/VulnerablePackageReference}
     */
    VulnerablePackageReference,

    /**
     * The Whitelist model constructor.
     * @property {module:model/Whitelist}
     */
    Whitelist,

    /**
     * The WhitelistItem model constructor.
     * @property {module:model/WhitelistItem}
     */
    WhitelistItem,

    /**
    * The ArchivesApi service constructor.
    * @property {module:api/ArchivesApi}
    */
    ArchivesApi,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The IdentityApi service constructor.
    * @property {module:api/IdentityApi}
    */
    IdentityApi,

    /**
    * The ImagesApi service constructor.
    * @property {module:api/ImagesApi}
    */
    ImagesApi,

    /**
    * The ImportApi service constructor.
    * @property {module:api/ImportApi}
    */
    ImportApi,

    /**
    * The ImportsApi service constructor.
    * @property {module:api/ImportsApi}
    */
    ImportsApi,

    /**
    * The PoliciesApi service constructor.
    * @property {module:api/PoliciesApi}
    */
    PoliciesApi,

    /**
    * The QueryApi service constructor.
    * @property {module:api/QueryApi}
    */
    QueryApi,

    /**
    * The RegistriesApi service constructor.
    * @property {module:api/RegistriesApi}
    */
    RegistriesApi,

    /**
    * The RepositoryCredentialsApi service constructor.
    * @property {module:api/RepositoryCredentialsApi}
    */
    RepositoryCredentialsApi,

    /**
    * The SubscriptionsApi service constructor.
    * @property {module:api/SubscriptionsApi}
    */
    SubscriptionsApi,

    /**
    * The SummariesApi service constructor.
    * @property {module:api/SummariesApi}
    */
    SummariesApi,

    /**
    * The SystemApi service constructor.
    * @property {module:api/SystemApi}
    */
    SystemApi,

    /**
    * The UserManagementApi service constructor.
    * @property {module:api/UserManagementApi}
    */
    UserManagementApi
};
