/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VulnerabilityReference model module.
 * @module model/VulnerabilityReference
 * @version 0.1.20
 */
class VulnerabilityReference {
    /**
     * Constructs a new <code>VulnerabilityReference</code>.
     * An external link/reference
     * @alias module:model/VulnerabilityReference
     */
    constructor() { 
        
        VulnerabilityReference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VulnerabilityReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VulnerabilityReference} obj Optional instance to populate.
     * @return {module:model/VulnerabilityReference} The populated <code>VulnerabilityReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VulnerabilityReference();

            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VulnerabilityReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VulnerabilityReference</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The reference source
 * @member {String} source
 */
VulnerabilityReference.prototype['source'] = undefined;

/**
 * @member {Array.<String>} tags
 */
VulnerabilityReference.prototype['tags'] = undefined;

/**
 * The reference url
 * @member {String} url
 */
VulnerabilityReference.prototype['url'] = undefined;






export default VulnerabilityReference;

