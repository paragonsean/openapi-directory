/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RetrievedFile model module.
 * @module model/RetrievedFile
 * @version 0.1.20
 */
class RetrievedFile {
    /**
     * Constructs a new <code>RetrievedFile</code>.
     * The retrieved file entry including content (b64 encoded)
     * @alias module:model/RetrievedFile
     */
    constructor() { 
        
        RetrievedFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RetrievedFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetrievedFile} obj Optional instance to populate.
     * @return {module:model/RetrievedFile} The populated <code>RetrievedFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RetrievedFile();

            if (data.hasOwnProperty('b64_content')) {
                obj['b64_content'] = ApiClient.convertToType(data['b64_content'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RetrievedFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RetrievedFile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['b64_content'] && !(typeof data['b64_content'] === 'string' || data['b64_content'] instanceof String)) {
            throw new Error("Expected the field `b64_content` to be a primitive type in the JSON string but got " + data['b64_content']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}



/**
 * @member {String} b64_content
 */
RetrievedFile.prototype['b64_content'] = undefined;

/**
 * @member {String} path
 */
RetrievedFile.prototype['path'] = undefined;






export default RetrievedFile;

