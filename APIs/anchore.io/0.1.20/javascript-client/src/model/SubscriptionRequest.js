/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionRequest model module.
 * @module model/SubscriptionRequest
 * @version 0.1.20
 */
class SubscriptionRequest {
    /**
     * Constructs a new <code>SubscriptionRequest</code>.
     * A subscription entry to add to the system
     * @alias module:model/SubscriptionRequest
     */
    constructor() { 
        
        SubscriptionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionRequest} obj Optional instance to populate.
     * @return {module:model/SubscriptionRequest} The populated <code>SubscriptionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionRequest();

            if (data.hasOwnProperty('subscription_key')) {
                obj['subscription_key'] = ApiClient.convertToType(data['subscription_key'], 'String');
            }
            if (data.hasOwnProperty('subscription_type')) {
                obj['subscription_type'] = ApiClient.convertToType(data['subscription_type'], 'String');
            }
            if (data.hasOwnProperty('subscription_value')) {
                obj['subscription_value'] = ApiClient.convertToType(data['subscription_value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['subscription_key'] && !(typeof data['subscription_key'] === 'string' || data['subscription_key'] instanceof String)) {
            throw new Error("Expected the field `subscription_key` to be a primitive type in the JSON string but got " + data['subscription_key']);
        }
        // ensure the json data is a string
        if (data['subscription_type'] && !(typeof data['subscription_type'] === 'string' || data['subscription_type'] instanceof String)) {
            throw new Error("Expected the field `subscription_type` to be a primitive type in the JSON string but got " + data['subscription_type']);
        }
        // ensure the json data is a string
        if (data['subscription_value'] && !(typeof data['subscription_value'] === 'string' || data['subscription_value'] instanceof String)) {
            throw new Error("Expected the field `subscription_value` to be a primitive type in the JSON string but got " + data['subscription_value']);
        }

        return true;
    }


}



/**
 * @member {String} subscription_key
 */
SubscriptionRequest.prototype['subscription_key'] = undefined;

/**
 * @member {String} subscription_type
 */
SubscriptionRequest.prototype['subscription_type'] = undefined;

/**
 * @member {String} subscription_value
 */
SubscriptionRequest.prototype['subscription_value'] = undefined;






export default SubscriptionRequest;

