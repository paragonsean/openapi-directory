/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventResponseEventResource from './EventResponseEventResource';
import EventResponseEventSource from './EventResponseEventSource';

/**
 * The EventResponseEvent model module.
 * @module model/EventResponseEvent
 * @version 0.1.20
 */
class EventResponseEvent {
    /**
     * Constructs a new <code>EventResponseEvent</code>.
     * @alias module:model/EventResponseEvent
     */
    constructor() { 
        
        EventResponseEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventResponseEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventResponseEvent} obj Optional instance to populate.
     * @return {module:model/EventResponseEvent} The populated <code>EventResponseEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventResponseEvent();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], Object);
            }
            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = EventResponseEventResource.constructFromObject(data['resource']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = EventResponseEventSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventResponseEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventResponseEvent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['level'] && !(typeof data['level'] === 'string' || data['level'] instanceof String)) {
            throw new Error("Expected the field `level` to be a primitive type in the JSON string but got " + data['level']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          EventResponseEventResource.validateJSON(data['resource']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          EventResponseEventSource.validateJSON(data['source']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {String} category
 */
EventResponseEvent.prototype['category'] = undefined;

/**
 * @member {Object} details
 */
EventResponseEvent.prototype['details'] = undefined;

/**
 * @member {String} level
 */
EventResponseEvent.prototype['level'] = undefined;

/**
 * @member {String} message
 */
EventResponseEvent.prototype['message'] = undefined;

/**
 * @member {module:model/EventResponseEventResource} resource
 */
EventResponseEvent.prototype['resource'] = undefined;

/**
 * @member {module:model/EventResponseEventSource} source
 */
EventResponseEvent.prototype['source'] = undefined;

/**
 * @member {Date} timestamp
 */
EventResponseEvent.prototype['timestamp'] = undefined;

/**
 * @member {String} type
 */
EventResponseEvent.prototype['type'] = undefined;






export default EventResponseEvent;

