/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeleteImageResponse model module.
 * @module model/DeleteImageResponse
 * @version 0.1.20
 */
class DeleteImageResponse {
    /**
     * Constructs a new <code>DeleteImageResponse</code>.
     * Image deletion response containing status and details
     * @alias module:model/DeleteImageResponse
     * @param digest {String} 
     * @param status {module:model/DeleteImageResponse.StatusEnum} Current status of the image deletion
     */
    constructor(digest, status) { 
        
        DeleteImageResponse.initialize(this, digest, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, digest, status) { 
        obj['digest'] = digest;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>DeleteImageResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeleteImageResponse} obj Optional instance to populate.
     * @return {module:model/DeleteImageResponse} The populated <code>DeleteImageResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteImageResponse();

            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('digest')) {
                obj['digest'] = ApiClient.convertToType(data['digest'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteImageResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteImageResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeleteImageResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['detail'] && !(typeof data['detail'] === 'string' || data['detail'] instanceof String)) {
            throw new Error("Expected the field `detail` to be a primitive type in the JSON string but got " + data['detail']);
        }
        // ensure the json data is a string
        if (data['digest'] && !(typeof data['digest'] === 'string' || data['digest'] instanceof String)) {
            throw new Error("Expected the field `digest` to be a primitive type in the JSON string but got " + data['digest']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

DeleteImageResponse.RequiredProperties = ["digest", "status"];

/**
 * @member {String} detail
 */
DeleteImageResponse.prototype['detail'] = undefined;

/**
 * @member {String} digest
 */
DeleteImageResponse.prototype['digest'] = undefined;

/**
 * Current status of the image deletion
 * @member {module:model/DeleteImageResponse.StatusEnum} status
 */
DeleteImageResponse.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
DeleteImageResponse['StatusEnum'] = {

    /**
     * value: "not_found"
     * @const
     */
    "not_found": "not_found",

    /**
     * value: "deleting"
     * @const
     */
    "deleting": "deleting",

    /**
     * value: "delete_failed"
     * @const
     */
    "delete_failed": "delete_failed"
};



export default DeleteImageResponse;

