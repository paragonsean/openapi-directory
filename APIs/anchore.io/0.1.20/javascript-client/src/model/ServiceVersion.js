/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceVersionApi from './ServiceVersionApi';
import ServiceVersionDb from './ServiceVersionDb';
import ServiceVersionService from './ServiceVersionService';

/**
 * The ServiceVersion model module.
 * @module model/ServiceVersion
 * @version 0.1.20
 */
class ServiceVersion {
    /**
     * Constructs a new <code>ServiceVersion</code>.
     * Version information for a service
     * @alias module:model/ServiceVersion
     */
    constructor() { 
        
        ServiceVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceVersion} obj Optional instance to populate.
     * @return {module:model/ServiceVersion} The populated <code>ServiceVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceVersion();

            if (data.hasOwnProperty('api')) {
                obj['api'] = ServiceVersionApi.constructFromObject(data['api']);
            }
            if (data.hasOwnProperty('db')) {
                obj['db'] = ServiceVersionDb.constructFromObject(data['db']);
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ServiceVersionService.constructFromObject(data['service']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceVersion</code>.
     */
    static validateJSON(data) {
        // validate the optional field `api`
        if (data['api']) { // data not null
          ServiceVersionApi.validateJSON(data['api']);
        }
        // validate the optional field `db`
        if (data['db']) { // data not null
          ServiceVersionDb.validateJSON(data['db']);
        }
        // validate the optional field `service`
        if (data['service']) { // data not null
          ServiceVersionService.validateJSON(data['service']);
        }

        return true;
    }


}



/**
 * @member {module:model/ServiceVersionApi} api
 */
ServiceVersion.prototype['api'] = undefined;

/**
 * @member {module:model/ServiceVersionDb} db
 */
ServiceVersion.prototype['db'] = undefined;

/**
 * @member {module:model/ServiceVersionService} service
 */
ServiceVersion.prototype['service'] = undefined;






export default ServiceVersion;

