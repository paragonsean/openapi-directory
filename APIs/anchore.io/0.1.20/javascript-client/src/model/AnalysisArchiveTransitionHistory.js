/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnalysisArchiveTransitionHistory model module.
 * @module model/AnalysisArchiveTransitionHistory
 * @version 0.1.20
 */
class AnalysisArchiveTransitionHistory {
    /**
     * Constructs a new <code>AnalysisArchiveTransitionHistory</code>.
     * A rule for auto-archiving image analysis by time and/or tag-history
     * @alias module:model/AnalysisArchiveTransitionHistory
     */
    constructor() { 
        
        AnalysisArchiveTransitionHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnalysisArchiveTransitionHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalysisArchiveTransitionHistory} obj Optional instance to populate.
     * @return {module:model/AnalysisArchiveTransitionHistory} The populated <code>AnalysisArchiveTransitionHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalysisArchiveTransitionHistory();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('imageDigest')) {
                obj['imageDigest'] = ApiClient.convertToType(data['imageDigest'], 'String');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('rule_id')) {
                obj['rule_id'] = ApiClient.convertToType(data['rule_id'], 'String');
            }
            if (data.hasOwnProperty('transition')) {
                obj['transition'] = ApiClient.convertToType(data['transition'], 'String');
            }
            if (data.hasOwnProperty('transition_task_id')) {
                obj['transition_task_id'] = ApiClient.convertToType(data['transition_task_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalysisArchiveTransitionHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalysisArchiveTransitionHistory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['imageDigest'] && !(typeof data['imageDigest'] === 'string' || data['imageDigest'] instanceof String)) {
            throw new Error("Expected the field `imageDigest` to be a primitive type in the JSON string but got " + data['imageDigest']);
        }
        // ensure the json data is a string
        if (data['rule_id'] && !(typeof data['rule_id'] === 'string' || data['rule_id'] instanceof String)) {
            throw new Error("Expected the field `rule_id` to be a primitive type in the JSON string but got " + data['rule_id']);
        }
        // ensure the json data is a string
        if (data['transition'] && !(typeof data['transition'] === 'string' || data['transition'] instanceof String)) {
            throw new Error("Expected the field `transition` to be a primitive type in the JSON string but got " + data['transition']);
        }
        // ensure the json data is a string
        if (data['transition_task_id'] && !(typeof data['transition_task_id'] === 'string' || data['transition_task_id'] instanceof String)) {
            throw new Error("Expected the field `transition_task_id` to be a primitive type in the JSON string but got " + data['transition_task_id']);
        }

        return true;
    }


}



/**
 * @member {Date} created_at
 */
AnalysisArchiveTransitionHistory.prototype['created_at'] = undefined;

/**
 * @member {String} imageDigest
 */
AnalysisArchiveTransitionHistory.prototype['imageDigest'] = undefined;

/**
 * @member {Date} last_updated
 */
AnalysisArchiveTransitionHistory.prototype['last_updated'] = undefined;

/**
 * @member {String} rule_id
 */
AnalysisArchiveTransitionHistory.prototype['rule_id'] = undefined;

/**
 * @member {module:model/AnalysisArchiveTransitionHistory.TransitionEnum} transition
 */
AnalysisArchiveTransitionHistory.prototype['transition'] = undefined;

/**
 * The task that created & updated this entry
 * @member {String} transition_task_id
 */
AnalysisArchiveTransitionHistory.prototype['transition_task_id'] = undefined;





/**
 * Allowed values for the <code>transition</code> property.
 * @enum {String}
 * @readonly
 */
AnalysisArchiveTransitionHistory['TransitionEnum'] = {

    /**
     * value: "archive"
     * @const
     */
    "archive": "archive",

    /**
     * value: "delete"
     * @const
     */
    "delete": "delete"
};



export default AnalysisArchiveTransitionHistory;

