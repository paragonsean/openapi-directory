/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GroupSyncResult model module.
 * @module model/GroupSyncResult
 * @version 0.1.20
 */
class GroupSyncResult {
    /**
     * Constructs a new <code>GroupSyncResult</code>.
     * @alias module:model/GroupSyncResult
     */
    constructor() { 
        
        GroupSyncResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupSyncResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupSyncResult} obj Optional instance to populate.
     * @return {module:model/GroupSyncResult} The populated <code>GroupSyncResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupSyncResult();

            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('total_time_seconds')) {
                obj['total_time_seconds'] = ApiClient.convertToType(data['total_time_seconds'], 'Number');
            }
            if (data.hasOwnProperty('updated_image_count')) {
                obj['updated_image_count'] = ApiClient.convertToType(data['updated_image_count'], 'Number');
            }
            if (data.hasOwnProperty('updated_record_count')) {
                obj['updated_record_count'] = ApiClient.convertToType(data['updated_record_count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupSyncResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupSyncResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['group'] && !(typeof data['group'] === 'string' || data['group'] instanceof String)) {
            throw new Error("Expected the field `group` to be a primitive type in the JSON string but got " + data['group']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The name of the group
 * @member {String} group
 */
GroupSyncResult.prototype['group'] = undefined;

/**
 * @member {module:model/GroupSyncResult.StatusEnum} status
 */
GroupSyncResult.prototype['status'] = undefined;

/**
 * The duration of the group sync in seconds
 * @member {Number} total_time_seconds
 */
GroupSyncResult.prototype['total_time_seconds'] = undefined;

/**
 * The number of images updated by the this group sync, across all accounts. This is typically only non-zero for vulnerability feeds which update images' vulnerability results during the sync.
 * @member {Number} updated_image_count
 */
GroupSyncResult.prototype['updated_image_count'] = undefined;

/**
 * The number of feed data records synced down as either updates or new records
 * @member {Number} updated_record_count
 */
GroupSyncResult.prototype['updated_record_count'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GroupSyncResult['StatusEnum'] = {

    /**
     * value: "success"
     * @const
     */
    "success": "success",

    /**
     * value: "failure"
     * @const
     */
    "failure": "failure"
};



export default GroupSyncResult;

