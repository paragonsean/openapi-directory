/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImageImportOperation model module.
 * @module model/ImageImportOperation
 * @version 0.1.20
 */
class ImageImportOperation {
    /**
     * Constructs a new <code>ImageImportOperation</code>.
     * An import record, creating a unique identifier for referencing the operation as well as its state
     * @alias module:model/ImageImportOperation
     */
    constructor() { 
        
        ImageImportOperation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageImportOperation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageImportOperation} obj Optional instance to populate.
     * @return {module:model/ImageImportOperation} The populated <code>ImageImportOperation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageImportOperation();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('expires_at')) {
                obj['expires_at'] = ApiClient.convertToType(data['expires_at'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageImportOperation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageImportOperation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['uuid'] && !(typeof data['uuid'] === 'string' || data['uuid'] instanceof String)) {
            throw new Error("Expected the field `uuid` to be a primitive type in the JSON string but got " + data['uuid']);
        }

        return true;
    }


}



/**
 * @member {Date} created_at
 */
ImageImportOperation.prototype['created_at'] = undefined;

/**
 * @member {Date} expires_at
 */
ImageImportOperation.prototype['expires_at'] = undefined;

/**
 * @member {module:model/ImageImportOperation.StatusEnum} status
 */
ImageImportOperation.prototype['status'] = undefined;

/**
 * @member {String} uuid
 */
ImageImportOperation.prototype['uuid'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ImageImportOperation['StatusEnum'] = {

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "queued"
     * @const
     */
    "queued": "queued",

    /**
     * value: "processing"
     * @const
     */
    "processing": "processing",

    /**
     * value: "complete"
     * @const
     */
    "complete": "complete",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",

    /**
     * value: "expired"
     * @const
     */
    "expired": "expired"
};



export default ImageImportOperation;

