/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnalysisUpdateEval model module.
 * @module model/AnalysisUpdateEval
 * @version 0.1.20
 */
class AnalysisUpdateEval {
    /**
     * Constructs a new <code>AnalysisUpdateEval</code>.
     * Evaluation Results for an entity (current or last)
     * @alias module:model/AnalysisUpdateEval
     */
    constructor() { 
        
        AnalysisUpdateEval.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnalysisUpdateEval</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalysisUpdateEval} obj Optional instance to populate.
     * @return {module:model/AnalysisUpdateEval} The populated <code>AnalysisUpdateEval</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalysisUpdateEval();

            if (data.hasOwnProperty('analysis_status')) {
                obj['analysis_status'] = ApiClient.convertToType(data['analysis_status'], 'String');
            }
            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], Object);
            }
            if (data.hasOwnProperty('image_digest')) {
                obj['image_digest'] = ApiClient.convertToType(data['image_digest'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalysisUpdateEval</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalysisUpdateEval</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['analysis_status'] && !(typeof data['analysis_status'] === 'string' || data['analysis_status'] instanceof String)) {
            throw new Error("Expected the field `analysis_status` to be a primitive type in the JSON string but got " + data['analysis_status']);
        }
        // ensure the json data is a string
        if (data['image_digest'] && !(typeof data['image_digest'] === 'string' || data['image_digest'] instanceof String)) {
            throw new Error("Expected the field `image_digest` to be a primitive type in the JSON string but got " + data['image_digest']);
        }

        return true;
    }


}



/**
 * @member {String} analysis_status
 */
AnalysisUpdateEval.prototype['analysis_status'] = undefined;

/**
 * @member {Object} annotations
 */
AnalysisUpdateEval.prototype['annotations'] = undefined;

/**
 * @member {String} image_digest
 */
AnalysisUpdateEval.prototype['image_digest'] = undefined;






export default AnalysisUpdateEval;

