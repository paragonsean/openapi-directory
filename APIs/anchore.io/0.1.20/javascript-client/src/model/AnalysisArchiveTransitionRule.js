/**
 * Anchore Engine API Server
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * The version of the OpenAPI document: 0.1.20
 * Contact: nurmi@anchore.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalysisArchiveTransitionRuleExclude from './AnalysisArchiveTransitionRuleExclude';
import ImageSelector from './ImageSelector';

/**
 * The AnalysisArchiveTransitionRule model module.
 * @module model/AnalysisArchiveTransitionRule
 * @version 0.1.20
 */
class AnalysisArchiveTransitionRule {
    /**
     * Constructs a new <code>AnalysisArchiveTransitionRule</code>.
     * A rule for auto-archiving image analysis by time and/or tag-history
     * @alias module:model/AnalysisArchiveTransitionRule
     * @param transition {module:model/AnalysisArchiveTransitionRule.TransitionEnum} The type of transition to make. If \"archive\", then archive an image from the working set and remove it from the working set. If \"delete\", then match against archived images and delete from the archive if match.
     */
    constructor(transition) { 
        
        AnalysisArchiveTransitionRule.initialize(this, transition);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, transition) { 
        obj['transition'] = transition;
    }

    /**
     * Constructs a <code>AnalysisArchiveTransitionRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalysisArchiveTransitionRule} obj Optional instance to populate.
     * @return {module:model/AnalysisArchiveTransitionRule} The populated <code>AnalysisArchiveTransitionRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalysisArchiveTransitionRule();

            if (data.hasOwnProperty('analysis_age_days')) {
                obj['analysis_age_days'] = ApiClient.convertToType(data['analysis_age_days'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('exclude')) {
                obj['exclude'] = AnalysisArchiveTransitionRuleExclude.constructFromObject(data['exclude']);
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('max_images_per_account')) {
                obj['max_images_per_account'] = ApiClient.convertToType(data['max_images_per_account'], 'Number');
            }
            if (data.hasOwnProperty('rule_id')) {
                obj['rule_id'] = ApiClient.convertToType(data['rule_id'], 'String');
            }
            if (data.hasOwnProperty('selector')) {
                obj['selector'] = ImageSelector.constructFromObject(data['selector']);
            }
            if (data.hasOwnProperty('system_global')) {
                obj['system_global'] = ApiClient.convertToType(data['system_global'], 'Boolean');
            }
            if (data.hasOwnProperty('tag_versions_newer')) {
                obj['tag_versions_newer'] = ApiClient.convertToType(data['tag_versions_newer'], 'Number');
            }
            if (data.hasOwnProperty('transition')) {
                obj['transition'] = ApiClient.convertToType(data['transition'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalysisArchiveTransitionRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalysisArchiveTransitionRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnalysisArchiveTransitionRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `exclude`
        if (data['exclude']) { // data not null
          AnalysisArchiveTransitionRuleExclude.validateJSON(data['exclude']);
        }
        // ensure the json data is a string
        if (data['rule_id'] && !(typeof data['rule_id'] === 'string' || data['rule_id'] instanceof String)) {
            throw new Error("Expected the field `rule_id` to be a primitive type in the JSON string but got " + data['rule_id']);
        }
        // validate the optional field `selector`
        if (data['selector']) { // data not null
          ImageSelector.validateJSON(data['selector']);
        }
        // ensure the json data is a string
        if (data['transition'] && !(typeof data['transition'] === 'string' || data['transition'] instanceof String)) {
            throw new Error("Expected the field `transition` to be a primitive type in the JSON string but got " + data['transition']);
        }

        return true;
    }


}

AnalysisArchiveTransitionRule.RequiredProperties = ["transition"];

/**
 * Matches if the analysis is strictly older than this number of days
 * @member {Number} analysis_age_days
 */
AnalysisArchiveTransitionRule.prototype['analysis_age_days'] = undefined;

/**
 * @member {Date} created_at
 */
AnalysisArchiveTransitionRule.prototype['created_at'] = undefined;

/**
 * @member {module:model/AnalysisArchiveTransitionRuleExclude} exclude
 */
AnalysisArchiveTransitionRule.prototype['exclude'] = undefined;

/**
 * @member {Date} last_updated
 */
AnalysisArchiveTransitionRule.prototype['last_updated'] = undefined;

/**
 * This is the maximum number of image analyses an account can have. Can only be set on system_global rules
 * @member {Number} max_images_per_account
 */
AnalysisArchiveTransitionRule.prototype['max_images_per_account'] = undefined;

/**
 * Unique identifier for archive rule
 * @member {String} rule_id
 */
AnalysisArchiveTransitionRule.prototype['rule_id'] = undefined;

/**
 * @member {module:model/ImageSelector} selector
 */
AnalysisArchiveTransitionRule.prototype['selector'] = undefined;

/**
 * True if the rule applies to all accounts in the system. This is only available to admin users to update/modify, but all users with permission to list rules can see them
 * @member {Boolean} system_global
 */
AnalysisArchiveTransitionRule.prototype['system_global'] = undefined;

/**
 * Number of images mapped to the tag that are newer
 * @member {Number} tag_versions_newer
 */
AnalysisArchiveTransitionRule.prototype['tag_versions_newer'] = undefined;

/**
 * The type of transition to make. If \"archive\", then archive an image from the working set and remove it from the working set. If \"delete\", then match against archived images and delete from the archive if match.
 * @member {module:model/AnalysisArchiveTransitionRule.TransitionEnum} transition
 */
AnalysisArchiveTransitionRule.prototype['transition'] = undefined;





/**
 * Allowed values for the <code>transition</code> property.
 * @enum {String}
 * @readonly
 */
AnalysisArchiveTransitionRule['TransitionEnum'] = {

    /**
     * value: "archive"
     * @const
     */
    "archive": "archive",

    /**
     * value: "delete"
     * @const
     */
    "delete": "delete"
};



export default AnalysisArchiveTransitionRule;

