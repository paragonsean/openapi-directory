# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vulnerability import Vulnerability
from openapi_server import util


class VulnerabilityResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_digest: str=None, vulnerabilities: List[Vulnerability]=None, vulnerability_type: str=None):
        """VulnerabilityResponse - a model defined in OpenAPI

        :param image_digest: The image_digest of this VulnerabilityResponse.
        :param vulnerabilities: The vulnerabilities of this VulnerabilityResponse.
        :param vulnerability_type: The vulnerability_type of this VulnerabilityResponse.
        """
        self.openapi_types = {
            'image_digest': str,
            'vulnerabilities': List[Vulnerability],
            'vulnerability_type': str
        }

        self.attribute_map = {
            'image_digest': 'imageDigest',
            'vulnerabilities': 'vulnerabilities',
            'vulnerability_type': 'vulnerability_type'
        }

        self._image_digest = image_digest
        self._vulnerabilities = vulnerabilities
        self._vulnerability_type = vulnerability_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VulnerabilityResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VulnerabilityResponse of this VulnerabilityResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_digest(self):
        """Gets the image_digest of this VulnerabilityResponse.


        :return: The image_digest of this VulnerabilityResponse.
        :rtype: str
        """
        return self._image_digest

    @image_digest.setter
    def image_digest(self, image_digest):
        """Sets the image_digest of this VulnerabilityResponse.


        :param image_digest: The image_digest of this VulnerabilityResponse.
        :type image_digest: str
        """

        self._image_digest = image_digest

    @property
    def vulnerabilities(self):
        """Gets the vulnerabilities of this VulnerabilityResponse.

        List of Vulnerability objects

        :return: The vulnerabilities of this VulnerabilityResponse.
        :rtype: List[Vulnerability]
        """
        return self._vulnerabilities

    @vulnerabilities.setter
    def vulnerabilities(self, vulnerabilities):
        """Sets the vulnerabilities of this VulnerabilityResponse.

        List of Vulnerability objects

        :param vulnerabilities: The vulnerabilities of this VulnerabilityResponse.
        :type vulnerabilities: List[Vulnerability]
        """

        self._vulnerabilities = vulnerabilities

    @property
    def vulnerability_type(self):
        """Gets the vulnerability_type of this VulnerabilityResponse.


        :return: The vulnerability_type of this VulnerabilityResponse.
        :rtype: str
        """
        return self._vulnerability_type

    @vulnerability_type.setter
    def vulnerability_type(self, vulnerability_type):
        """Sets the vulnerability_type of this VulnerabilityResponse.


        :param vulnerability_type: The vulnerability_type of this VulnerabilityResponse.
        :type vulnerability_type: str
        """

        self._vulnerability_type = vulnerability_type
