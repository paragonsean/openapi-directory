# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageSelector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registry: str=None, repository: str=None, tag: str=None):
        """ImageSelector - a model defined in OpenAPI

        :param registry: The registry of this ImageSelector.
        :param repository: The repository of this ImageSelector.
        :param tag: The tag of this ImageSelector.
        """
        self.openapi_types = {
            'registry': str,
            'repository': str,
            'tag': str
        }

        self.attribute_map = {
            'registry': 'registry',
            'repository': 'repository',
            'tag': 'tag'
        }

        self._registry = registry
        self._repository = repository
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageSelector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageSelector of this ImageSelector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registry(self):
        """Gets the registry of this ImageSelector.

        The registry section of a pull string. e.g. with \"docker.io/anchore/anchore-engine:latest\", this is \"docker.io\"

        :return: The registry of this ImageSelector.
        :rtype: str
        """
        return self._registry

    @registry.setter
    def registry(self, registry):
        """Sets the registry of this ImageSelector.

        The registry section of a pull string. e.g. with \"docker.io/anchore/anchore-engine:latest\", this is \"docker.io\"

        :param registry: The registry of this ImageSelector.
        :type registry: str
        """

        self._registry = registry

    @property
    def repository(self):
        """Gets the repository of this ImageSelector.

        The repository section of a pull string. e.g. with \"docker.io/anchore/anchore-engine:latest\", this is \"anchore/anchore-engine\"

        :return: The repository of this ImageSelector.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this ImageSelector.

        The repository section of a pull string. e.g. with \"docker.io/anchore/anchore-engine:latest\", this is \"anchore/anchore-engine\"

        :param repository: The repository of this ImageSelector.
        :type repository: str
        """

        self._repository = repository

    @property
    def tag(self):
        """Gets the tag of this ImageSelector.

        The tag-only section of a pull string. e.g. with \"docker.io/anchore/anchore-engine:latest\", this is \"latest\"

        :return: The tag of this ImageSelector.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this ImageSelector.

        The tag-only section of a pull string. e.g. with \"docker.io/anchore/anchore-engine:latest\", this is \"latest\"

        :param tag: The tag of this ImageSelector.
        :type tag: str
        """

        self._tag = tag
