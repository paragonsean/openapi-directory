# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TagEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detected_at: datetime=None, pullstring: str=None, registry: str=None, repository: str=None, tag: str=None):
        """TagEntry - a model defined in OpenAPI

        :param detected_at: The detected_at of this TagEntry.
        :param pullstring: The pullstring of this TagEntry.
        :param registry: The registry of this TagEntry.
        :param repository: The repository of this TagEntry.
        :param tag: The tag of this TagEntry.
        """
        self.openapi_types = {
            'detected_at': datetime,
            'pullstring': str,
            'registry': str,
            'repository': str,
            'tag': str
        }

        self.attribute_map = {
            'detected_at': 'detected_at',
            'pullstring': 'pullstring',
            'registry': 'registry',
            'repository': 'repository',
            'tag': 'tag'
        }

        self._detected_at = detected_at
        self._pullstring = pullstring
        self._registry = registry
        self._repository = repository
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TagEntry of this TagEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detected_at(self):
        """Gets the detected_at of this TagEntry.

        The timestamp at which the Anchore Engine detected this tag was mapped to the image digest. Does not necessarily indicate when the tag was actually pushed to the registry.

        :return: The detected_at of this TagEntry.
        :rtype: datetime
        """
        return self._detected_at

    @detected_at.setter
    def detected_at(self, detected_at):
        """Sets the detected_at of this TagEntry.

        The timestamp at which the Anchore Engine detected this tag was mapped to the image digest. Does not necessarily indicate when the tag was actually pushed to the registry.

        :param detected_at: The detected_at of this TagEntry.
        :type detected_at: datetime
        """

        self._detected_at = detected_at

    @property
    def pullstring(self):
        """Gets the pullstring of this TagEntry.

        The pullable string for the tag. E.g. \"docker.io/library/node:latest\"

        :return: The pullstring of this TagEntry.
        :rtype: str
        """
        return self._pullstring

    @pullstring.setter
    def pullstring(self, pullstring):
        """Sets the pullstring of this TagEntry.

        The pullable string for the tag. E.g. \"docker.io/library/node:latest\"

        :param pullstring: The pullstring of this TagEntry.
        :type pullstring: str
        """

        self._pullstring = pullstring

    @property
    def registry(self):
        """Gets the registry of this TagEntry.

        The registry hostname:port section of the pull string

        :return: The registry of this TagEntry.
        :rtype: str
        """
        return self._registry

    @registry.setter
    def registry(self, registry):
        """Sets the registry of this TagEntry.

        The registry hostname:port section of the pull string

        :param registry: The registry of this TagEntry.
        :type registry: str
        """

        self._registry = registry

    @property
    def repository(self):
        """Gets the repository of this TagEntry.

        The repository section of the pull string

        :return: The repository of this TagEntry.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this TagEntry.

        The repository section of the pull string

        :param repository: The repository of this TagEntry.
        :type repository: str
        """

        self._repository = repository

    @property
    def tag(self):
        """Gets the tag of this TagEntry.

        The tag-only section of the pull string

        :return: The tag of this TagEntry.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this TagEntry.

        The tag-only section of the pull string

        :param tag: The tag of this TagEntry.
        :type tag: str
        """

        self._tag = tag
