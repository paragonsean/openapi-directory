# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_response_event import EventResponseEvent
from openapi_server import util


class EventResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, event: EventResponseEvent=None, generated_uuid: str=None):
        """EventResponse - a model defined in OpenAPI

        :param created_at: The created_at of this EventResponse.
        :param event: The event of this EventResponse.
        :param generated_uuid: The generated_uuid of this EventResponse.
        """
        self.openapi_types = {
            'created_at': datetime,
            'event': EventResponseEvent,
            'generated_uuid': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'event': 'event',
            'generated_uuid': 'generated_uuid'
        }

        self._created_at = created_at
        self._event = event
        self._generated_uuid = generated_uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventResponse of this EventResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this EventResponse.


        :return: The created_at of this EventResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this EventResponse.


        :param created_at: The created_at of this EventResponse.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def event(self):
        """Gets the event of this EventResponse.


        :return: The event of this EventResponse.
        :rtype: EventResponseEvent
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this EventResponse.


        :param event: The event of this EventResponse.
        :type event: EventResponseEvent
        """

        self._event = event

    @property
    def generated_uuid(self):
        """Gets the generated_uuid of this EventResponse.


        :return: The generated_uuid of this EventResponse.
        :rtype: str
        """
        return self._generated_uuid

    @generated_uuid.setter
    def generated_uuid(self, generated_uuid):
        """Sets the generated_uuid of this EventResponse.


        :param generated_uuid: The generated_uuid of this EventResponse.
        :type generated_uuid: str
        """

        self._generated_uuid = generated_uuid
