# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class AccountCreationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, name: str=None):
        """AccountCreationRequest - a model defined in OpenAPI

        :param email: The email of this AccountCreationRequest.
        :param name: The name of this AccountCreationRequest.
        """
        self.openapi_types = {
            'email': str,
            'name': str
        }

        self.attribute_map = {
            'email': 'email',
            'name': 'name'
        }

        self._email = email
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountCreationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountCreationRequest of this AccountCreationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this AccountCreationRequest.

        An optional email to associate with the account for contact purposes

        :return: The email of this AccountCreationRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this AccountCreationRequest.

        An optional email to associate with the account for contact purposes

        :param email: The email of this AccountCreationRequest.
        :type email: str
        """
        if email is not None and not re.search(r'[a-z0-9!#$%&\'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&\'*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?', email):
            raise ValueError("Invalid value for `email`, must be a follow pattern or equal to `/[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/`")

        self._email = email

    @property
    def name(self):
        """Gets the name of this AccountCreationRequest.

        The account name to use. This will identify the account and must be globally unique in the system.

        :return: The name of this AccountCreationRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AccountCreationRequest.

        The account name to use. This will identify the account and must be globally unique in the system.

        :param name: The name of this AccountCreationRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")
        if name is not None and not re.search(r'^[a-zA-Z0-9][a-zA-Z0-9@.!#$+-=^_`~;]{1,126}[a-zA-Z0-9]$', name):
            raise ValueError("Invalid value for `name`, must be a follow pattern or equal to `/^[a-zA-Z0-9][a-zA-Z0-9@.!#$+-=^_`~;]{1,126}[a-zA-Z0-9]$/`")

        self._name = name
