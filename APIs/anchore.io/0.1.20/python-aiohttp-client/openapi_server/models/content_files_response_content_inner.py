# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentFilesResponseContentInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filename: str=None, gid: int=None, linkdest: str=None, mode: str=None, sha256: str=None, size: int=None, type: str=None, uid: int=None):
        """ContentFilesResponseContentInner - a model defined in OpenAPI

        :param filename: The filename of this ContentFilesResponseContentInner.
        :param gid: The gid of this ContentFilesResponseContentInner.
        :param linkdest: The linkdest of this ContentFilesResponseContentInner.
        :param mode: The mode of this ContentFilesResponseContentInner.
        :param sha256: The sha256 of this ContentFilesResponseContentInner.
        :param size: The size of this ContentFilesResponseContentInner.
        :param type: The type of this ContentFilesResponseContentInner.
        :param uid: The uid of this ContentFilesResponseContentInner.
        """
        self.openapi_types = {
            'filename': str,
            'gid': int,
            'linkdest': str,
            'mode': str,
            'sha256': str,
            'size': int,
            'type': str,
            'uid': int
        }

        self.attribute_map = {
            'filename': 'filename',
            'gid': 'gid',
            'linkdest': 'linkdest',
            'mode': 'mode',
            'sha256': 'sha256',
            'size': 'size',
            'type': 'type',
            'uid': 'uid'
        }

        self._filename = filename
        self._gid = gid
        self._linkdest = linkdest
        self._mode = mode
        self._sha256 = sha256
        self._size = size
        self._type = type
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentFilesResponseContentInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentFilesResponse_content_inner of this ContentFilesResponseContentInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filename(self):
        """Gets the filename of this ContentFilesResponseContentInner.


        :return: The filename of this ContentFilesResponseContentInner.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this ContentFilesResponseContentInner.


        :param filename: The filename of this ContentFilesResponseContentInner.
        :type filename: str
        """

        self._filename = filename

    @property
    def gid(self):
        """Gets the gid of this ContentFilesResponseContentInner.


        :return: The gid of this ContentFilesResponseContentInner.
        :rtype: int
        """
        return self._gid

    @gid.setter
    def gid(self, gid):
        """Sets the gid of this ContentFilesResponseContentInner.


        :param gid: The gid of this ContentFilesResponseContentInner.
        :type gid: int
        """

        self._gid = gid

    @property
    def linkdest(self):
        """Gets the linkdest of this ContentFilesResponseContentInner.


        :return: The linkdest of this ContentFilesResponseContentInner.
        :rtype: str
        """
        return self._linkdest

    @linkdest.setter
    def linkdest(self, linkdest):
        """Sets the linkdest of this ContentFilesResponseContentInner.


        :param linkdest: The linkdest of this ContentFilesResponseContentInner.
        :type linkdest: str
        """

        self._linkdest = linkdest

    @property
    def mode(self):
        """Gets the mode of this ContentFilesResponseContentInner.


        :return: The mode of this ContentFilesResponseContentInner.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this ContentFilesResponseContentInner.


        :param mode: The mode of this ContentFilesResponseContentInner.
        :type mode: str
        """

        self._mode = mode

    @property
    def sha256(self):
        """Gets the sha256 of this ContentFilesResponseContentInner.


        :return: The sha256 of this ContentFilesResponseContentInner.
        :rtype: str
        """
        return self._sha256

    @sha256.setter
    def sha256(self, sha256):
        """Sets the sha256 of this ContentFilesResponseContentInner.


        :param sha256: The sha256 of this ContentFilesResponseContentInner.
        :type sha256: str
        """

        self._sha256 = sha256

    @property
    def size(self):
        """Gets the size of this ContentFilesResponseContentInner.


        :return: The size of this ContentFilesResponseContentInner.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this ContentFilesResponseContentInner.


        :param size: The size of this ContentFilesResponseContentInner.
        :type size: int
        """

        self._size = size

    @property
    def type(self):
        """Gets the type of this ContentFilesResponseContentInner.


        :return: The type of this ContentFilesResponseContentInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ContentFilesResponseContentInner.


        :param type: The type of this ContentFilesResponseContentInner.
        :type type: str
        """

        self._type = type

    @property
    def uid(self):
        """Gets the uid of this ContentFilesResponseContentInner.


        :return: The uid of this ContentFilesResponseContentInner.
        :rtype: int
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this ContentFilesResponseContentInner.


        :param uid: The uid of this ContentFilesResponseContentInner.
        :type uid: int
        """

        self._uid = uid
