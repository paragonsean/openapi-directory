# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_version_api import ServiceVersionApi
from openapi_server.models.service_version_db import ServiceVersionDb
from openapi_server.models.service_version_service import ServiceVersionService
from openapi_server import util


class ServiceVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api: ServiceVersionApi=None, db: ServiceVersionDb=None, service: ServiceVersionService=None):
        """ServiceVersion - a model defined in OpenAPI

        :param api: The api of this ServiceVersion.
        :param db: The db of this ServiceVersion.
        :param service: The service of this ServiceVersion.
        """
        self.openapi_types = {
            'api': ServiceVersionApi,
            'db': ServiceVersionDb,
            'service': ServiceVersionService
        }

        self.attribute_map = {
            'api': 'api',
            'db': 'db',
            'service': 'service'
        }

        self._api = api
        self._db = db
        self._service = service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceVersion of this ServiceVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api(self):
        """Gets the api of this ServiceVersion.


        :return: The api of this ServiceVersion.
        :rtype: ServiceVersionApi
        """
        return self._api

    @api.setter
    def api(self, api):
        """Sets the api of this ServiceVersion.


        :param api: The api of this ServiceVersion.
        :type api: ServiceVersionApi
        """

        self._api = api

    @property
    def db(self):
        """Gets the db of this ServiceVersion.


        :return: The db of this ServiceVersion.
        :rtype: ServiceVersionDb
        """
        return self._db

    @db.setter
    def db(self, db):
        """Sets the db of this ServiceVersion.


        :param db: The db of this ServiceVersion.
        :type db: ServiceVersionDb
        """

        self._db = db

    @property
    def service(self):
        """Gets the service of this ServiceVersion.


        :return: The service of this ServiceVersion.
        :rtype: ServiceVersionService
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this ServiceVersion.


        :param service: The service of this ServiceVersion.
        :type service: ServiceVersionService
        """

        self._service = service
