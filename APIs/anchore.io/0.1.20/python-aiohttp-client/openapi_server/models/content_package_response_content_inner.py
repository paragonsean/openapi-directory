# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentPackageResponseContentInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cpes: List[str]=None, license: str=None, licenses: List[str]=None, location: str=None, origin: str=None, package: str=None, size: str=None, type: str=None, version: str=None):
        """ContentPackageResponseContentInner - a model defined in OpenAPI

        :param cpes: The cpes of this ContentPackageResponseContentInner.
        :param license: The license of this ContentPackageResponseContentInner.
        :param licenses: The licenses of this ContentPackageResponseContentInner.
        :param location: The location of this ContentPackageResponseContentInner.
        :param origin: The origin of this ContentPackageResponseContentInner.
        :param package: The package of this ContentPackageResponseContentInner.
        :param size: The size of this ContentPackageResponseContentInner.
        :param type: The type of this ContentPackageResponseContentInner.
        :param version: The version of this ContentPackageResponseContentInner.
        """
        self.openapi_types = {
            'cpes': List[str],
            'license': str,
            'licenses': List[str],
            'location': str,
            'origin': str,
            'package': str,
            'size': str,
            'type': str,
            'version': str
        }

        self.attribute_map = {
            'cpes': 'cpes',
            'license': 'license',
            'licenses': 'licenses',
            'location': 'location',
            'origin': 'origin',
            'package': 'package',
            'size': 'size',
            'type': 'type',
            'version': 'version'
        }

        self._cpes = cpes
        self._license = license
        self._licenses = licenses
        self._location = location
        self._origin = origin
        self._package = package
        self._size = size
        self._type = type
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentPackageResponseContentInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentPackageResponse_content_inner of this ContentPackageResponseContentInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cpes(self):
        """Gets the cpes of this ContentPackageResponseContentInner.

        A list of Common Platform Enumerations that may uniquely identify the package

        :return: The cpes of this ContentPackageResponseContentInner.
        :rtype: List[str]
        """
        return self._cpes

    @cpes.setter
    def cpes(self, cpes):
        """Sets the cpes of this ContentPackageResponseContentInner.

        A list of Common Platform Enumerations that may uniquely identify the package

        :param cpes: The cpes of this ContentPackageResponseContentInner.
        :type cpes: List[str]
        """

        self._cpes = cpes

    @property
    def license(self):
        """Gets the license of this ContentPackageResponseContentInner.

        Deprecated in favor of the 'licenses' field\"

        :return: The license of this ContentPackageResponseContentInner.
        :rtype: str
        """
        return self._license

    @license.setter
    def license(self, license):
        """Sets the license of this ContentPackageResponseContentInner.

        Deprecated in favor of the 'licenses' field\"

        :param license: The license of this ContentPackageResponseContentInner.
        :type license: str
        """

        self._license = license

    @property
    def licenses(self):
        """Gets the licenses of this ContentPackageResponseContentInner.


        :return: The licenses of this ContentPackageResponseContentInner.
        :rtype: List[str]
        """
        return self._licenses

    @licenses.setter
    def licenses(self, licenses):
        """Sets the licenses of this ContentPackageResponseContentInner.


        :param licenses: The licenses of this ContentPackageResponseContentInner.
        :type licenses: List[str]
        """

        self._licenses = licenses

    @property
    def location(self):
        """Gets the location of this ContentPackageResponseContentInner.


        :return: The location of this ContentPackageResponseContentInner.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ContentPackageResponseContentInner.


        :param location: The location of this ContentPackageResponseContentInner.
        :type location: str
        """

        self._location = location

    @property
    def origin(self):
        """Gets the origin of this ContentPackageResponseContentInner.


        :return: The origin of this ContentPackageResponseContentInner.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this ContentPackageResponseContentInner.


        :param origin: The origin of this ContentPackageResponseContentInner.
        :type origin: str
        """

        self._origin = origin

    @property
    def package(self):
        """Gets the package of this ContentPackageResponseContentInner.


        :return: The package of this ContentPackageResponseContentInner.
        :rtype: str
        """
        return self._package

    @package.setter
    def package(self, package):
        """Sets the package of this ContentPackageResponseContentInner.


        :param package: The package of this ContentPackageResponseContentInner.
        :type package: str
        """

        self._package = package

    @property
    def size(self):
        """Gets the size of this ContentPackageResponseContentInner.


        :return: The size of this ContentPackageResponseContentInner.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this ContentPackageResponseContentInner.


        :param size: The size of this ContentPackageResponseContentInner.
        :type size: str
        """

        self._size = size

    @property
    def type(self):
        """Gets the type of this ContentPackageResponseContentInner.


        :return: The type of this ContentPackageResponseContentInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ContentPackageResponseContentInner.


        :param type: The type of this ContentPackageResponseContentInner.
        :type type: str
        """

        self._type = type

    @property
    def version(self):
        """Gets the version of this ContentPackageResponseContentInner.


        :return: The version of this ContentPackageResponseContentInner.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ContentPackageResponseContentInner.


        :param version: The version of this ContentPackageResponseContentInner.
        :type version: str
        """

        self._version = version
