# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_selector import ImageSelector
from openapi_server import util


class AnalysisArchiveTransitionRuleExclude(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiration_days: int=-1, selector: ImageSelector=None):
        """AnalysisArchiveTransitionRuleExclude - a model defined in OpenAPI

        :param expiration_days: The expiration_days of this AnalysisArchiveTransitionRuleExclude.
        :param selector: The selector of this AnalysisArchiveTransitionRuleExclude.
        """
        self.openapi_types = {
            'expiration_days': int,
            'selector': ImageSelector
        }

        self.attribute_map = {
            'expiration_days': 'expiration_days',
            'selector': 'selector'
        }

        self._expiration_days = expiration_days
        self._selector = selector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalysisArchiveTransitionRuleExclude':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalysisArchiveTransitionRuleExclude of this AnalysisArchiveTransitionRuleExclude.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiration_days(self):
        """Gets the expiration_days of this AnalysisArchiveTransitionRuleExclude.

        How long the image selected will be excluded from the archive transition

        :return: The expiration_days of this AnalysisArchiveTransitionRuleExclude.
        :rtype: int
        """
        return self._expiration_days

    @expiration_days.setter
    def expiration_days(self, expiration_days):
        """Sets the expiration_days of this AnalysisArchiveTransitionRuleExclude.

        How long the image selected will be excluded from the archive transition

        :param expiration_days: The expiration_days of this AnalysisArchiveTransitionRuleExclude.
        :type expiration_days: int
        """

        self._expiration_days = expiration_days

    @property
    def selector(self):
        """Gets the selector of this AnalysisArchiveTransitionRuleExclude.


        :return: The selector of this AnalysisArchiveTransitionRuleExclude.
        :rtype: ImageSelector
        """
        return self._selector

    @selector.setter
    def selector(self, selector):
        """Sets the selector of this AnalysisArchiveTransitionRuleExclude.


        :param selector: The selector of this AnalysisArchiveTransitionRuleExclude.
        :type selector: ImageSelector
        """

        self._selector = selector
