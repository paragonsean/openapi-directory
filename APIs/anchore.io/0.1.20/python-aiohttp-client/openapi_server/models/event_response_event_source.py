# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventResponseEventSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_url: str=None, hostid: str=None, request_id: str=None, servicename: str=None):
        """EventResponseEventSource - a model defined in OpenAPI

        :param base_url: The base_url of this EventResponseEventSource.
        :param hostid: The hostid of this EventResponseEventSource.
        :param request_id: The request_id of this EventResponseEventSource.
        :param servicename: The servicename of this EventResponseEventSource.
        """
        self.openapi_types = {
            'base_url': str,
            'hostid': str,
            'request_id': str,
            'servicename': str
        }

        self.attribute_map = {
            'base_url': 'base_url',
            'hostid': 'hostid',
            'request_id': 'request_id',
            'servicename': 'servicename'
        }

        self._base_url = base_url
        self._hostid = hostid
        self._request_id = request_id
        self._servicename = servicename

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventResponseEventSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventResponse_event_source of this EventResponseEventSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_url(self):
        """Gets the base_url of this EventResponseEventSource.


        :return: The base_url of this EventResponseEventSource.
        :rtype: str
        """
        return self._base_url

    @base_url.setter
    def base_url(self, base_url):
        """Sets the base_url of this EventResponseEventSource.


        :param base_url: The base_url of this EventResponseEventSource.
        :type base_url: str
        """

        self._base_url = base_url

    @property
    def hostid(self):
        """Gets the hostid of this EventResponseEventSource.


        :return: The hostid of this EventResponseEventSource.
        :rtype: str
        """
        return self._hostid

    @hostid.setter
    def hostid(self, hostid):
        """Sets the hostid of this EventResponseEventSource.


        :param hostid: The hostid of this EventResponseEventSource.
        :type hostid: str
        """

        self._hostid = hostid

    @property
    def request_id(self):
        """Gets the request_id of this EventResponseEventSource.


        :return: The request_id of this EventResponseEventSource.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this EventResponseEventSource.


        :param request_id: The request_id of this EventResponseEventSource.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def servicename(self):
        """Gets the servicename of this EventResponseEventSource.


        :return: The servicename of this EventResponseEventSource.
        :rtype: str
        """
        return self._servicename

    @servicename.setter
    def servicename(self, servicename):
        """Sets the servicename of this EventResponseEventSource.


        :param servicename: The servicename of this EventResponseEventSource.
        :type servicename: str
        """

        self._servicename = servicename
