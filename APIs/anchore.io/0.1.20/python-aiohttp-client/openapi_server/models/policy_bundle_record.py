# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy_bundle import PolicyBundle
from openapi_server import util


class PolicyBundleRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, created_at: datetime=None, last_updated: datetime=None, policy_id: str=None, policy_source: str=None, policybundle: PolicyBundle=None, user_id: str=None):
        """PolicyBundleRecord - a model defined in OpenAPI

        :param active: The active of this PolicyBundleRecord.
        :param created_at: The created_at of this PolicyBundleRecord.
        :param last_updated: The last_updated of this PolicyBundleRecord.
        :param policy_id: The policy_id of this PolicyBundleRecord.
        :param policy_source: The policy_source of this PolicyBundleRecord.
        :param policybundle: The policybundle of this PolicyBundleRecord.
        :param user_id: The user_id of this PolicyBundleRecord.
        """
        self.openapi_types = {
            'active': bool,
            'created_at': datetime,
            'last_updated': datetime,
            'policy_id': str,
            'policy_source': str,
            'policybundle': PolicyBundle,
            'user_id': str
        }

        self.attribute_map = {
            'active': 'active',
            'created_at': 'created_at',
            'last_updated': 'last_updated',
            'policy_id': 'policyId',
            'policy_source': 'policy_source',
            'policybundle': 'policybundle',
            'user_id': 'userId'
        }

        self._active = active
        self._created_at = created_at
        self._last_updated = last_updated
        self._policy_id = policy_id
        self._policy_source = policy_source
        self._policybundle = policybundle
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyBundleRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyBundleRecord of this PolicyBundleRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this PolicyBundleRecord.

        True if the bundle is currently defined to be used automatically

        :return: The active of this PolicyBundleRecord.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this PolicyBundleRecord.

        True if the bundle is currently defined to be used automatically

        :param active: The active of this PolicyBundleRecord.
        :type active: bool
        """

        self._active = active

    @property
    def created_at(self):
        """Gets the created_at of this PolicyBundleRecord.


        :return: The created_at of this PolicyBundleRecord.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PolicyBundleRecord.


        :param created_at: The created_at of this PolicyBundleRecord.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def last_updated(self):
        """Gets the last_updated of this PolicyBundleRecord.


        :return: The last_updated of this PolicyBundleRecord.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this PolicyBundleRecord.


        :param last_updated: The last_updated of this PolicyBundleRecord.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def policy_id(self):
        """Gets the policy_id of this PolicyBundleRecord.

        The bundle's identifier

        :return: The policy_id of this PolicyBundleRecord.
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this PolicyBundleRecord.

        The bundle's identifier

        :param policy_id: The policy_id of this PolicyBundleRecord.
        :type policy_id: str
        """

        self._policy_id = policy_id

    @property
    def policy_source(self):
        """Gets the policy_source of this PolicyBundleRecord.

        Source location of where the policy bundle originated

        :return: The policy_source of this PolicyBundleRecord.
        :rtype: str
        """
        return self._policy_source

    @policy_source.setter
    def policy_source(self, policy_source):
        """Sets the policy_source of this PolicyBundleRecord.

        Source location of where the policy bundle originated

        :param policy_source: The policy_source of this PolicyBundleRecord.
        :type policy_source: str
        """

        self._policy_source = policy_source

    @property
    def policybundle(self):
        """Gets the policybundle of this PolicyBundleRecord.


        :return: The policybundle of this PolicyBundleRecord.
        :rtype: PolicyBundle
        """
        return self._policybundle

    @policybundle.setter
    def policybundle(self, policybundle):
        """Sets the policybundle of this PolicyBundleRecord.


        :param policybundle: The policybundle of this PolicyBundleRecord.
        :type policybundle: PolicyBundle
        """

        self._policybundle = policybundle

    @property
    def user_id(self):
        """Gets the user_id of this PolicyBundleRecord.

        UserId of the user that owns the bundle

        :return: The user_id of this PolicyBundleRecord.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this PolicyBundleRecord.

        UserId of the user that owns the bundle

        :param user_id: The user_id of this PolicyBundleRecord.
        :type user_id: str
        """

        self._user_id = user_id
