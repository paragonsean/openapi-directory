# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceVersionDb(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schema_version: str=None):
        """ServiceVersionDb - a model defined in OpenAPI

        :param schema_version: The schema_version of this ServiceVersionDb.
        """
        self.openapi_types = {
            'schema_version': str
        }

        self.attribute_map = {
            'schema_version': 'schema_version'
        }

        self._schema_version = schema_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceVersionDb':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceVersion_db of this ServiceVersionDb.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schema_version(self):
        """Gets the schema_version of this ServiceVersionDb.

        Semantic version of the db schema

        :return: The schema_version of this ServiceVersionDb.
        :rtype: str
        """
        return self._schema_version

    @schema_version.setter
    def schema_version(self, schema_version):
        """Sets the schema_version of this ServiceVersionDb.

        Semantic version of the db schema

        :param schema_version: The schema_version of this ServiceVersionDb.
        :type schema_version: str
        """

        self._schema_version = schema_version
