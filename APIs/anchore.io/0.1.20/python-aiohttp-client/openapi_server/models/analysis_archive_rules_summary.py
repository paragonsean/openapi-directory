# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnalysisArchiveRulesSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, last_updated: datetime=None):
        """AnalysisArchiveRulesSummary - a model defined in OpenAPI

        :param count: The count of this AnalysisArchiveRulesSummary.
        :param last_updated: The last_updated of this AnalysisArchiveRulesSummary.
        """
        self.openapi_types = {
            'count': int,
            'last_updated': datetime
        }

        self.attribute_map = {
            'count': 'count',
            'last_updated': 'last_updated'
        }

        self._count = count
        self._last_updated = last_updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalysisArchiveRulesSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalysisArchiveRulesSummary of this AnalysisArchiveRulesSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this AnalysisArchiveRulesSummary.

        The number of rules for this account

        :return: The count of this AnalysisArchiveRulesSummary.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this AnalysisArchiveRulesSummary.

        The number of rules for this account

        :param count: The count of this AnalysisArchiveRulesSummary.
        :type count: int
        """

        self._count = count

    @property
    def last_updated(self):
        """Gets the last_updated of this AnalysisArchiveRulesSummary.

        The newest last_updated timestamp from the set of rules

        :return: The last_updated of this AnalysisArchiveRulesSummary.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this AnalysisArchiveRulesSummary.

        The newest last_updated timestamp from the set of rules

        :param last_updated: The last_updated of this AnalysisArchiveRulesSummary.
        :type last_updated: datetime
        """

        self._last_updated = last_updated
