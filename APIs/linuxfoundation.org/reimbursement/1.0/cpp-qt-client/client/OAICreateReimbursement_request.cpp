/**
 * Reimbursements API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateReimbursement_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateReimbursement_request::OAICreateReimbursement_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateReimbursement_request::OAICreateReimbursement_request() {
    this->initializeModel();
}

OAICreateReimbursement_request::~OAICreateReimbursement_request() {}

void OAICreateReimbursement_request::initializeModel() {

    m_project_name_isSet = false;
    m_project_name_isValid = false;

    m_beneficiaries_isSet = false;
    m_beneficiaries_isValid = false;

    m_categories_isSet = false;
    m_categories_isValid = false;

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;

    m_owner_isSet = false;
    m_owner_isValid = false;

    m_project_url_isSet = false;
    m_project_url_isValid = false;
}

void OAICreateReimbursement_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateReimbursement_request::fromJsonObject(QJsonObject json) {

    m_project_name_isValid = ::OpenAPI::fromJsonValue(m_project_name, json[QString("ProjectName")]);
    m_project_name_isSet = !json[QString("ProjectName")].isNull() && m_project_name_isValid;

    m_beneficiaries_isValid = ::OpenAPI::fromJsonValue(m_beneficiaries, json[QString("Beneficiaries")]);
    m_beneficiaries_isSet = !json[QString("Beneficiaries")].isNull() && m_beneficiaries_isValid;

    m_categories_isValid = ::OpenAPI::fromJsonValue(m_categories, json[QString("Categories")]);
    m_categories_isSet = !json[QString("Categories")].isNull() && m_categories_isValid;

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("EntityType")]);
    m_entity_type_isSet = !json[QString("EntityType")].isNull() && m_entity_type_isValid;

    m_owner_isValid = ::OpenAPI::fromJsonValue(m_owner, json[QString("Owner")]);
    m_owner_isSet = !json[QString("Owner")].isNull() && m_owner_isValid;

    m_project_url_isValid = ::OpenAPI::fromJsonValue(m_project_url, json[QString("ProjectURL")]);
    m_project_url_isSet = !json[QString("ProjectURL")].isNull() && m_project_url_isValid;
}

QString OAICreateReimbursement_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateReimbursement_request::asJsonObject() const {
    QJsonObject obj;
    if (m_project_name_isSet) {
        obj.insert(QString("ProjectName"), ::OpenAPI::toJsonValue(m_project_name));
    }
    if (m_beneficiaries.size() > 0) {
        obj.insert(QString("Beneficiaries"), ::OpenAPI::toJsonValue(m_beneficiaries));
    }
    if (m_categories.size() > 0) {
        obj.insert(QString("Categories"), ::OpenAPI::toJsonValue(m_categories));
    }
    if (m_entity_type_isSet) {
        obj.insert(QString("EntityType"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    if (m_owner.isSet()) {
        obj.insert(QString("Owner"), ::OpenAPI::toJsonValue(m_owner));
    }
    if (m_project_url_isSet) {
        obj.insert(QString("ProjectURL"), ::OpenAPI::toJsonValue(m_project_url));
    }
    return obj;
}

QString OAICreateReimbursement_request::getProjectName() const {
    return m_project_name;
}
void OAICreateReimbursement_request::setProjectName(const QString &project_name) {
    m_project_name = project_name;
    m_project_name_isSet = true;
}

bool OAICreateReimbursement_request::is_project_name_Set() const{
    return m_project_name_isSet;
}

bool OAICreateReimbursement_request::is_project_name_Valid() const{
    return m_project_name_isValid;
}

QList<OAIContact> OAICreateReimbursement_request::getBeneficiaries() const {
    return m_beneficiaries;
}
void OAICreateReimbursement_request::setBeneficiaries(const QList<OAIContact> &beneficiaries) {
    m_beneficiaries = beneficiaries;
    m_beneficiaries_isSet = true;
}

bool OAICreateReimbursement_request::is_beneficiaries_Set() const{
    return m_beneficiaries_isSet;
}

bool OAICreateReimbursement_request::is_beneficiaries_Valid() const{
    return m_beneficiaries_isValid;
}

QList<QString> OAICreateReimbursement_request::getCategories() const {
    return m_categories;
}
void OAICreateReimbursement_request::setCategories(const QList<QString> &categories) {
    m_categories = categories;
    m_categories_isSet = true;
}

bool OAICreateReimbursement_request::is_categories_Set() const{
    return m_categories_isSet;
}

bool OAICreateReimbursement_request::is_categories_Valid() const{
    return m_categories_isValid;
}

QString OAICreateReimbursement_request::getEntityType() const {
    return m_entity_type;
}
void OAICreateReimbursement_request::setEntityType(const QString &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAICreateReimbursement_request::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAICreateReimbursement_request::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

OAIContact OAICreateReimbursement_request::getOwner() const {
    return m_owner;
}
void OAICreateReimbursement_request::setOwner(const OAIContact &owner) {
    m_owner = owner;
    m_owner_isSet = true;
}

bool OAICreateReimbursement_request::is_owner_Set() const{
    return m_owner_isSet;
}

bool OAICreateReimbursement_request::is_owner_Valid() const{
    return m_owner_isValid;
}

QString OAICreateReimbursement_request::getProjectUrl() const {
    return m_project_url;
}
void OAICreateReimbursement_request::setProjectUrl(const QString &project_url) {
    m_project_url = project_url;
    m_project_url_isSet = true;
}

bool OAICreateReimbursement_request::is_project_url_Set() const{
    return m_project_url_isSet;
}

bool OAICreateReimbursement_request::is_project_url_Valid() const{
    return m_project_url_isValid;
}

bool OAICreateReimbursement_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beneficiaries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateReimbursement_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_project_name_isValid && m_categories_isValid && m_owner_isValid && m_project_url_isValid && true;
}

} // namespace OpenAPI
