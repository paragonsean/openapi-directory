/**
 * Reimbursements API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHealth_status.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHealth_status::OAIHealth_status(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHealth_status::OAIHealth_status() {
    this->initializeModel();
}

OAIHealth_status::~OAIHealth_status() {}

void OAIHealth_status::initializeModel() {

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_healthy_isSet = false;
    m_healthy_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_time_stamp_isSet = false;
    m_time_stamp_isValid = false;
}

void OAIHealth_status::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHealth_status::fromJsonObject(QJsonObject json) {

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("Duration")]);
    m_duration_isSet = !json[QString("Duration")].isNull() && m_duration_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("Error")]);
    m_error_isSet = !json[QString("Error")].isNull() && m_error_isValid;

    m_healthy_isValid = ::OpenAPI::fromJsonValue(m_healthy, json[QString("Healthy")]);
    m_healthy_isSet = !json[QString("Healthy")].isNull() && m_healthy_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_time_stamp_isValid = ::OpenAPI::fromJsonValue(m_time_stamp, json[QString("TimeStamp")]);
    m_time_stamp_isSet = !json[QString("TimeStamp")].isNull() && m_time_stamp_isValid;
}

QString OAIHealth_status::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHealth_status::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_isSet) {
        obj.insert(QString("Duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_error_isSet) {
        obj.insert(QString("Error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_healthy_isSet) {
        obj.insert(QString("Healthy"), ::OpenAPI::toJsonValue(m_healthy));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_time_stamp_isSet) {
        obj.insert(QString("TimeStamp"), ::OpenAPI::toJsonValue(m_time_stamp));
    }
    return obj;
}

QString OAIHealth_status::getDuration() const {
    return m_duration;
}
void OAIHealth_status::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIHealth_status::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIHealth_status::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAIHealth_status::getError() const {
    return m_error;
}
void OAIHealth_status::setError(const QString &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIHealth_status::is_error_Set() const{
    return m_error_isSet;
}

bool OAIHealth_status::is_error_Valid() const{
    return m_error_isValid;
}

bool OAIHealth_status::isHealthy() const {
    return m_healthy;
}
void OAIHealth_status::setHealthy(const bool &healthy) {
    m_healthy = healthy;
    m_healthy_isSet = true;
}

bool OAIHealth_status::is_healthy_Set() const{
    return m_healthy_isSet;
}

bool OAIHealth_status::is_healthy_Valid() const{
    return m_healthy_isValid;
}

QString OAIHealth_status::getName() const {
    return m_name;
}
void OAIHealth_status::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIHealth_status::is_name_Set() const{
    return m_name_isSet;
}

bool OAIHealth_status::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIHealth_status::getTimeStamp() const {
    return m_time_stamp;
}
void OAIHealth_status::setTimeStamp(const QString &time_stamp) {
    m_time_stamp = time_stamp;
    m_time_stamp_isSet = true;
}

bool OAIHealth_status::is_time_stamp_Set() const{
    return m_time_stamp_isSet;
}

bool OAIHealth_status::is_time_stamp_Valid() const{
    return m_time_stamp_isValid;
}

bool OAIHealth_status::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_healthy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_stamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHealth_status::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
