/**
 * Reimbursements API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicy_tag_input.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicy_tag_input::OAIPolicy_tag_input(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicy_tag_input::OAIPolicy_tag_input() {
    this->initializeModel();
}

OAIPolicy_tag_input::~OAIPolicy_tag_input() {}

void OAIPolicy_tag_input::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_ticket_id_isSet = false;
    m_ticket_id_isValid = false;

    m_txn_type_isSet = false;
    m_txn_type_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIPolicy_tag_input::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicy_tag_input::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_ticket_id_isValid = ::OpenAPI::fromJsonValue(m_ticket_id, json[QString("TicketID")]);
    m_ticket_id_isSet = !json[QString("TicketID")].isNull() && m_ticket_id_isValid;

    m_txn_type_isValid = ::OpenAPI::fromJsonValue(m_txn_type, json[QString("TxnType")]);
    m_txn_type_isSet = !json[QString("TxnType")].isNull() && m_txn_type_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("Username")]);
    m_username_isSet = !json[QString("Username")].isNull() && m_username_isValid;
}

QString OAIPolicy_tag_input::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicy_tag_input::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_ticket_id_isSet) {
        obj.insert(QString("TicketID"), ::OpenAPI::toJsonValue(m_ticket_id));
    }
    if (m_txn_type_isSet) {
        obj.insert(QString("TxnType"), ::OpenAPI::toJsonValue(m_txn_type));
    }
    if (m_username_isSet) {
        obj.insert(QString("Username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAIPolicy_tag_input::getEmail() const {
    return m_email;
}
void OAIPolicy_tag_input::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIPolicy_tag_input::is_email_Set() const{
    return m_email_isSet;
}

bool OAIPolicy_tag_input::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIPolicy_tag_input::getTicketId() const {
    return m_ticket_id;
}
void OAIPolicy_tag_input::setTicketId(const QString &ticket_id) {
    m_ticket_id = ticket_id;
    m_ticket_id_isSet = true;
}

bool OAIPolicy_tag_input::is_ticket_id_Set() const{
    return m_ticket_id_isSet;
}

bool OAIPolicy_tag_input::is_ticket_id_Valid() const{
    return m_ticket_id_isValid;
}

QString OAIPolicy_tag_input::getTxnType() const {
    return m_txn_type;
}
void OAIPolicy_tag_input::setTxnType(const QString &txn_type) {
    m_txn_type = txn_type;
    m_txn_type_isSet = true;
}

bool OAIPolicy_tag_input::is_txn_type_Set() const{
    return m_txn_type_isSet;
}

bool OAIPolicy_tag_input::is_txn_type_Valid() const{
    return m_txn_type_isValid;
}

QString OAIPolicy_tag_input::getUsername() const {
    return m_username;
}
void OAIPolicy_tag_input::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIPolicy_tag_input::is_username_Set() const{
    return m_username_isSet;
}

bool OAIPolicy_tag_input::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIPolicy_tag_input::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ticket_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicy_tag_input::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
