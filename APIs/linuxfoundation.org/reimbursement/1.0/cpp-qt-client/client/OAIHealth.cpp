/**
 * Reimbursements API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHealth.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHealth::OAIHealth(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHealth::OAIHealth() {
    this->initializeModel();
}

OAIHealth::~OAIHealth() {}

void OAIHealth::initializeModel() {

    m_build_time_stamp_isSet = false;
    m_build_time_stamp_isValid = false;

    m_githash_isSet = false;
    m_githash_isValid = false;

    m_healths_isSet = false;
    m_healths_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_time_stamp_isSet = false;
    m_time_stamp_isValid = false;
}

void OAIHealth::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHealth::fromJsonObject(QJsonObject json) {

    m_build_time_stamp_isValid = ::OpenAPI::fromJsonValue(m_build_time_stamp, json[QString("BuildTimeStamp")]);
    m_build_time_stamp_isSet = !json[QString("BuildTimeStamp")].isNull() && m_build_time_stamp_isValid;

    m_githash_isValid = ::OpenAPI::fromJsonValue(m_githash, json[QString("Githash")]);
    m_githash_isSet = !json[QString("Githash")].isNull() && m_githash_isValid;

    m_healths_isValid = ::OpenAPI::fromJsonValue(m_healths, json[QString("Healths")]);
    m_healths_isSet = !json[QString("Healths")].isNull() && m_healths_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_time_stamp_isValid = ::OpenAPI::fromJsonValue(m_time_stamp, json[QString("TimeStamp")]);
    m_time_stamp_isSet = !json[QString("TimeStamp")].isNull() && m_time_stamp_isValid;
}

QString OAIHealth::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHealth::asJsonObject() const {
    QJsonObject obj;
    if (m_build_time_stamp_isSet) {
        obj.insert(QString("BuildTimeStamp"), ::OpenAPI::toJsonValue(m_build_time_stamp));
    }
    if (m_githash_isSet) {
        obj.insert(QString("Githash"), ::OpenAPI::toJsonValue(m_githash));
    }
    if (m_healths.size() > 0) {
        obj.insert(QString("Healths"), ::OpenAPI::toJsonValue(m_healths));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_time_stamp_isSet) {
        obj.insert(QString("TimeStamp"), ::OpenAPI::toJsonValue(m_time_stamp));
    }
    return obj;
}

QString OAIHealth::getBuildTimeStamp() const {
    return m_build_time_stamp;
}
void OAIHealth::setBuildTimeStamp(const QString &build_time_stamp) {
    m_build_time_stamp = build_time_stamp;
    m_build_time_stamp_isSet = true;
}

bool OAIHealth::is_build_time_stamp_Set() const{
    return m_build_time_stamp_isSet;
}

bool OAIHealth::is_build_time_stamp_Valid() const{
    return m_build_time_stamp_isValid;
}

QString OAIHealth::getGithash() const {
    return m_githash;
}
void OAIHealth::setGithash(const QString &githash) {
    m_githash = githash;
    m_githash_isSet = true;
}

bool OAIHealth::is_githash_Set() const{
    return m_githash_isSet;
}

bool OAIHealth::is_githash_Valid() const{
    return m_githash_isValid;
}

QList<OAIHealth_status> OAIHealth::getHealths() const {
    return m_healths;
}
void OAIHealth::setHealths(const QList<OAIHealth_status> &healths) {
    m_healths = healths;
    m_healths_isSet = true;
}

bool OAIHealth::is_healths_Set() const{
    return m_healths_isSet;
}

bool OAIHealth::is_healths_Valid() const{
    return m_healths_isValid;
}

QString OAIHealth::getStatus() const {
    return m_status;
}
void OAIHealth::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIHealth::is_status_Set() const{
    return m_status_isSet;
}

bool OAIHealth::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIHealth::getTimeStamp() const {
    return m_time_stamp;
}
void OAIHealth::setTimeStamp(const QString &time_stamp) {
    m_time_stamp = time_stamp;
    m_time_stamp_isSet = true;
}

bool OAIHealth::is_time_stamp_Set() const{
    return m_time_stamp_isSet;
}

bool OAIHealth::is_time_stamp_Valid() const{
    return m_time_stamp_isValid;
}

bool OAIHealth::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_build_time_stamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_githash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_healths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_stamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHealth::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
