/**
 * Reimbursements API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HealthStatus model module.
 * @module model/HealthStatus
 * @version 1.0
 */
class HealthStatus {
    /**
     * Constructs a new <code>HealthStatus</code>.
     * @alias module:model/HealthStatus
     */
    constructor() { 
        
        HealthStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HealthStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HealthStatus} obj Optional instance to populate.
     * @return {module:model/HealthStatus} The populated <code>HealthStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HealthStatus();

            if (data.hasOwnProperty('Duration')) {
                obj['Duration'] = ApiClient.convertToType(data['Duration'], 'String');
            }
            if (data.hasOwnProperty('Error')) {
                obj['Error'] = ApiClient.convertToType(data['Error'], 'String');
            }
            if (data.hasOwnProperty('Healthy')) {
                obj['Healthy'] = ApiClient.convertToType(data['Healthy'], 'Boolean');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('TimeStamp')) {
                obj['TimeStamp'] = ApiClient.convertToType(data['TimeStamp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HealthStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HealthStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Duration'] && !(typeof data['Duration'] === 'string' || data['Duration'] instanceof String)) {
            throw new Error("Expected the field `Duration` to be a primitive type in the JSON string but got " + data['Duration']);
        }
        // ensure the json data is a string
        if (data['Error'] && !(typeof data['Error'] === 'string' || data['Error'] instanceof String)) {
            throw new Error("Expected the field `Error` to be a primitive type in the JSON string but got " + data['Error']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['TimeStamp'] && !(typeof data['TimeStamp'] === 'string' || data['TimeStamp'] instanceof String)) {
            throw new Error("Expected the field `TimeStamp` to be a primitive type in the JSON string but got " + data['TimeStamp']);
        }

        return true;
    }


}



/**
 * Service response time
 * @member {String} Duration
 */
HealthStatus.prototype['Duration'] = undefined;

/**
 * Service Name
 * @member {String} Error
 */
HealthStatus.prototype['Error'] = undefined;

/**
 * Service is healthy?
 * @member {Boolean} Healthy
 */
HealthStatus.prototype['Healthy'] = undefined;

/**
 * Service Name
 * @member {String} Name
 */
HealthStatus.prototype['Name'] = undefined;

/**
 * Service's server time
 * @member {String} TimeStamp
 */
HealthStatus.prototype['TimeStamp'] = undefined;






export default HealthStatus;

