# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PolicyCreateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_name: str=None):
        """PolicyCreateInput - a model defined in OpenAPI

        :param project_name: The project_name of this PolicyCreateInput.
        """
        self.openapi_types = {
            'project_name': str
        }

        self.attribute_map = {
            'project_name': 'ProjectName'
        }

        self._project_name = project_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyCreateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The policy-create-input of this PolicyCreateInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_name(self):
        """Gets the project_name of this PolicyCreateInput.


        :return: The project_name of this PolicyCreateInput.
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this PolicyCreateInput.


        :param project_name: The project_name of this PolicyCreateInput.
        :type project_name: str
        """
        if project_name is None:
            raise ValueError("Invalid value for `project_name`, must not be `None`")

        self._project_name = project_name
