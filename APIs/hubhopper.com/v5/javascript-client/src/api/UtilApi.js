/**
 * Hubhopper Partner Integration API(s) - Production
 * This is an interactive document explaining the API(s) that could be used to fetch data from [Hubhopper](https://hubhopper.com). Use the api key provided to authorize `x-api-key` and test the API(s). The output data models are also available for reference.
 *
 * The version of the OpenAPI document: v5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LanguageList from '../model/LanguageList';

/**
* Util service.
* @module api/UtilApi
* @version v5
*/
export default class UtilApi {

    /**
    * Constructs a new UtilApi. 
    * @alias module:api/UtilApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the utilLanguagesGet operation.
     * @callback module:api/UtilApi~utilLanguagesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LanguageList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [pageSize] Provide the size of the page to fetch.
     * @param {String} [page] Provide the page number to fetch.
     * @param {module:api/UtilApi~utilLanguagesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LanguageList}
     */
    utilLanguagesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'page': opts['page']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['partner_id', 'api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LanguageList;
      return this.apiClient.callApi(
        '/util/languages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
