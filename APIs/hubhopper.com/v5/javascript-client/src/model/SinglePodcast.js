/**
 * Hubhopper Partner Integration API(s) - Production
 * This is an interactive document explaining the API(s) that could be used to fetch data from [Hubhopper](https://hubhopper.com). Use the api key provided to authorize `x-api-key` and test the API(s). The output data models are also available for reference.
 *
 * The version of the OpenAPI document: v5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SinglePodcastPodcast from './SinglePodcastPodcast';

/**
 * The SinglePodcast model module.
 * @module model/SinglePodcast
 * @version v5
 */
class SinglePodcast {
    /**
     * Constructs a new <code>SinglePodcast</code>.
     * @alias module:model/SinglePodcast
     */
    constructor() { 
        
        SinglePodcast.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SinglePodcast</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SinglePodcast} obj Optional instance to populate.
     * @return {module:model/SinglePodcast} The populated <code>SinglePodcast</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SinglePodcast();

            if (data.hasOwnProperty('podcast')) {
                obj['podcast'] = SinglePodcastPodcast.constructFromObject(data['podcast']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SinglePodcast</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SinglePodcast</code>.
     */
    static validateJSON(data) {
        // validate the optional field `podcast`
        if (data['podcast']) { // data not null
          SinglePodcastPodcast.validateJSON(data['podcast']);
        }

        return true;
    }


}



/**
 * @member {module:model/SinglePodcastPodcast} podcast
 */
SinglePodcast.prototype['podcast'] = undefined;






export default SinglePodcast;

