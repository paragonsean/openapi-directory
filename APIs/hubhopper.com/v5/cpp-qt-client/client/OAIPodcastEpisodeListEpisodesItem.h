/**
 * Hubhopper Partner Integration API(s) - Production
 * This is an interactive document explaining the API(s) that could be used to fetch data from [Hubhopper](https://hubhopper.com). Use the api key provided to authorize `x-api-key` and test the API(s). The output data models are also available for reference.
 *
 * The version of the OpenAPI document: v5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPodcastEpisodeListEpisodesItem.h
 *
 * 
 */

#ifndef OAIPodcastEpisodeListEpisodesItem_H
#define OAIPodcastEpisodeListEpisodesItem_H

#include <QJsonObject>

#include "OAIPodcastEpisodeListEpisodesItem_play.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPodcastEpisodeListEpisodesItem_play;

class OAIPodcastEpisodeListEpisodesItem : public OAIObject {
public:
    OAIPodcastEpisodeListEpisodesItem();
    OAIPodcastEpisodeListEpisodesItem(QString json);
    ~OAIPodcastEpisodeListEpisodesItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthor() const;
    void setAuthor(const QString &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getEpisodeId() const;
    void setEpisodeId(const qint32 &episode_id);
    bool is_episode_id_Set() const;
    bool is_episode_id_Valid() const;

    QString getEpisodeUrl() const;
    void setEpisodeUrl(const QString &episode_url);
    bool is_episode_url_Set() const;
    bool is_episode_url_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    bool isIsNew() const;
    void setIsNew(const bool &is_new);
    bool is_is_new_Set() const;
    bool is_is_new_Valid() const;

    OAIPodcastEpisodeListEpisodesItem_play getPlay() const;
    void setPlay(const OAIPodcastEpisodeListEpisodesItem_play &play);
    bool is_play_Set() const;
    bool is_play_Valid() const;

    qint32 getPodcastId() const;
    void setPodcastId(const qint32 &podcast_id);
    bool is_podcast_id_Set() const;
    bool is_podcast_id_Valid() const;

    QString getPodcastUrl() const;
    void setPodcastUrl(const QString &podcast_url);
    bool is_podcast_url_Set() const;
    bool is_podcast_url_Valid() const;

    QString getPublishTime() const;
    void setPublishTime(const QString &publish_time);
    bool is_publish_time_Set() const;
    bool is_publish_time_Valid() const;

    qint32 getPublishedOn() const;
    void setPublishedOn(const qint32 &published_on);
    bool is_published_on_Set() const;
    bool is_published_on_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_episode_id;
    bool m_episode_id_isSet;
    bool m_episode_id_isValid;

    QString m_episode_url;
    bool m_episode_url_isSet;
    bool m_episode_url_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    bool m_is_new;
    bool m_is_new_isSet;
    bool m_is_new_isValid;

    OAIPodcastEpisodeListEpisodesItem_play m_play;
    bool m_play_isSet;
    bool m_play_isValid;

    qint32 m_podcast_id;
    bool m_podcast_id_isSet;
    bool m_podcast_id_isValid;

    QString m_podcast_url;
    bool m_podcast_url_isSet;
    bool m_podcast_url_isValid;

    QString m_publish_time;
    bool m_publish_time_isSet;
    bool m_publish_time_isValid;

    qint32 m_published_on;
    bool m_published_on_isSet;
    bool m_published_on_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPodcastEpisodeListEpisodesItem)

#endif // OAIPodcastEpisodeListEpisodesItem_H
