/**
 * Hubhopper Partner Integration API(s) - Production
 * This is an interactive document explaining the API(s) that could be used to fetch data from [Hubhopper](https://hubhopper.com). Use the api key provided to authorize `x-api-key` and test the API(s). The output data models are also available for reference.
 *
 * The version of the OpenAPI document: v5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICategoryList.h
 *
 * 
 */

#ifndef OAICategoryList_H
#define OAICategoryList_H

#include <QJsonObject>

#include "OAICategoryListCategoriesItem.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategoryListCategoriesItem;

class OAICategoryList : public OAIObject {
public:
    OAICategoryList();
    OAICategoryList(QString json);
    ~OAICategoryList() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICategoryListCategoriesItem> getCategories() const;
    void setCategories(const QList<OAICategoryListCategoriesItem> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    qint32 getNoOfPages() const;
    void setNoOfPages(const qint32 &no_of_pages);
    bool is_no_of_pages_Set() const;
    bool is_no_of_pages_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICategoryListCategoriesItem> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    qint32 m_no_of_pages;
    bool m_no_of_pages_isSet;
    bool m_no_of_pages_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICategoryList)

#endif // OAICategoryList_H
