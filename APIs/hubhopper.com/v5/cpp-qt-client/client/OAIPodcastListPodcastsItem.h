/**
 * Hubhopper Partner Integration API(s) - Production
 * This is an interactive document explaining the API(s) that could be used to fetch data from [Hubhopper](https://hubhopper.com). Use the api key provided to authorize `x-api-key` and test the API(s). The output data models are also available for reference.
 *
 * The version of the OpenAPI document: v5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPodcastListPodcastsItem.h
 *
 * 
 */

#ifndef OAIPodcastListPodcastsItem_H
#define OAIPodcastListPodcastsItem_H

#include <QJsonObject>

#include "OAIPodcastListPodcastsItem_category.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPodcastListPodcastsItem_category;

class OAIPodcastListPodcastsItem : public OAIObject {
public:
    OAIPodcastListPodcastsItem();
    OAIPodcastListPodcastsItem(QString json);
    ~OAIPodcastListPodcastsItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthor() const;
    void setAuthor(const QString &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    OAIPodcastListPodcastsItem_category getCategory() const;
    void setCategory(const OAIPodcastListPodcastsItem_category &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    qint32 getCategoryId() const;
    void setCategoryId(const qint32 &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getEpisodes() const;
    void setEpisodes(const qint32 &episodes);
    bool is_episodes_Set() const;
    bool is_episodes_Valid() const;

    OAIPodcastListPodcastsItem_category getFeatured() const;
    void setFeatured(const OAIPodcastListPodcastsItem_category &featured);
    bool is_featured_Set() const;
    bool is_featured_Valid() const;

    qint32 getFeaturedId() const;
    void setFeaturedId(const qint32 &featured_id);
    bool is_featured_id_Set() const;
    bool is_featured_id_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getKeywords() const;
    void setKeywords(const QString &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    QString getLatestEpisodeTime() const;
    void setLatestEpisodeTime(const QString &latest_episode_time);
    bool is_latest_episode_time_Set() const;
    bool is_latest_episode_time_Valid() const;

    qint32 getPodcastId() const;
    void setPodcastId(const qint32 &podcast_id);
    bool is_podcast_id_Set() const;
    bool is_podcast_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    OAIPodcastListPodcastsItem_category m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    qint32 m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_episodes;
    bool m_episodes_isSet;
    bool m_episodes_isValid;

    OAIPodcastListPodcastsItem_category m_featured;
    bool m_featured_isSet;
    bool m_featured_isValid;

    qint32 m_featured_id;
    bool m_featured_id_isSet;
    bool m_featured_id_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    QString m_latest_episode_time;
    bool m_latest_episode_time_isSet;
    bool m_latest_episode_time_isValid;

    qint32 m_podcast_id;
    bool m_podcast_id_isSet;
    bool m_podcast_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPodcastListPodcastsItem)

#endif // OAIPodcastListPodcastsItem_H
