# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.podcast_list_podcasts_item_category import PodcastListPodcastsItemCategory
from openapi_server import util


class SinglePodcastPodcast(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: str=None, category: PodcastListPodcastsItemCategory=None, category_id: int=None, description: str=None, episodes: int=None, featured: PodcastListPodcastsItemCategory=None, featured_id: int=None, image: str=None, keywords: str=None, latest_episode_time: str=None, podcast_id: int=None, title: str=None, url: str=None, website: str=None):
        """SinglePodcastPodcast - a model defined in OpenAPI

        :param author: The author of this SinglePodcastPodcast.
        :param category: The category of this SinglePodcastPodcast.
        :param category_id: The category_id of this SinglePodcastPodcast.
        :param description: The description of this SinglePodcastPodcast.
        :param episodes: The episodes of this SinglePodcastPodcast.
        :param featured: The featured of this SinglePodcastPodcast.
        :param featured_id: The featured_id of this SinglePodcastPodcast.
        :param image: The image of this SinglePodcastPodcast.
        :param keywords: The keywords of this SinglePodcastPodcast.
        :param latest_episode_time: The latest_episode_time of this SinglePodcastPodcast.
        :param podcast_id: The podcast_id of this SinglePodcastPodcast.
        :param title: The title of this SinglePodcastPodcast.
        :param url: The url of this SinglePodcastPodcast.
        :param website: The website of this SinglePodcastPodcast.
        """
        self.openapi_types = {
            'author': str,
            'category': PodcastListPodcastsItemCategory,
            'category_id': int,
            'description': str,
            'episodes': int,
            'featured': PodcastListPodcastsItemCategory,
            'featured_id': int,
            'image': str,
            'keywords': str,
            'latest_episode_time': str,
            'podcast_id': int,
            'title': str,
            'url': str,
            'website': str
        }

        self.attribute_map = {
            'author': 'author',
            'category': 'category',
            'category_id': 'categoryId',
            'description': 'description',
            'episodes': 'episodes',
            'featured': 'featured',
            'featured_id': 'featuredId',
            'image': 'image',
            'keywords': 'keywords',
            'latest_episode_time': 'latest_episode_time',
            'podcast_id': 'podcastId',
            'title': 'title',
            'url': 'url',
            'website': 'website'
        }

        self._author = author
        self._category = category
        self._category_id = category_id
        self._description = description
        self._episodes = episodes
        self._featured = featured
        self._featured_id = featured_id
        self._image = image
        self._keywords = keywords
        self._latest_episode_time = latest_episode_time
        self._podcast_id = podcast_id
        self._title = title
        self._url = url
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SinglePodcastPodcast':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SinglePodcastPodcast of this SinglePodcastPodcast.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this SinglePodcastPodcast.


        :return: The author of this SinglePodcastPodcast.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this SinglePodcastPodcast.


        :param author: The author of this SinglePodcastPodcast.
        :type author: str
        """

        self._author = author

    @property
    def category(self):
        """Gets the category of this SinglePodcastPodcast.


        :return: The category of this SinglePodcastPodcast.
        :rtype: PodcastListPodcastsItemCategory
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this SinglePodcastPodcast.


        :param category: The category of this SinglePodcastPodcast.
        :type category: PodcastListPodcastsItemCategory
        """

        self._category = category

    @property
    def category_id(self):
        """Gets the category_id of this SinglePodcastPodcast.


        :return: The category_id of this SinglePodcastPodcast.
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this SinglePodcastPodcast.


        :param category_id: The category_id of this SinglePodcastPodcast.
        :type category_id: int
        """

        self._category_id = category_id

    @property
    def description(self):
        """Gets the description of this SinglePodcastPodcast.


        :return: The description of this SinglePodcastPodcast.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SinglePodcastPodcast.


        :param description: The description of this SinglePodcastPodcast.
        :type description: str
        """

        self._description = description

    @property
    def episodes(self):
        """Gets the episodes of this SinglePodcastPodcast.


        :return: The episodes of this SinglePodcastPodcast.
        :rtype: int
        """
        return self._episodes

    @episodes.setter
    def episodes(self, episodes):
        """Sets the episodes of this SinglePodcastPodcast.


        :param episodes: The episodes of this SinglePodcastPodcast.
        :type episodes: int
        """

        self._episodes = episodes

    @property
    def featured(self):
        """Gets the featured of this SinglePodcastPodcast.


        :return: The featured of this SinglePodcastPodcast.
        :rtype: PodcastListPodcastsItemCategory
        """
        return self._featured

    @featured.setter
    def featured(self, featured):
        """Sets the featured of this SinglePodcastPodcast.


        :param featured: The featured of this SinglePodcastPodcast.
        :type featured: PodcastListPodcastsItemCategory
        """

        self._featured = featured

    @property
    def featured_id(self):
        """Gets the featured_id of this SinglePodcastPodcast.


        :return: The featured_id of this SinglePodcastPodcast.
        :rtype: int
        """
        return self._featured_id

    @featured_id.setter
    def featured_id(self, featured_id):
        """Sets the featured_id of this SinglePodcastPodcast.


        :param featured_id: The featured_id of this SinglePodcastPodcast.
        :type featured_id: int
        """

        self._featured_id = featured_id

    @property
    def image(self):
        """Gets the image of this SinglePodcastPodcast.


        :return: The image of this SinglePodcastPodcast.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this SinglePodcastPodcast.


        :param image: The image of this SinglePodcastPodcast.
        :type image: str
        """

        self._image = image

    @property
    def keywords(self):
        """Gets the keywords of this SinglePodcastPodcast.


        :return: The keywords of this SinglePodcastPodcast.
        :rtype: str
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords):
        """Sets the keywords of this SinglePodcastPodcast.


        :param keywords: The keywords of this SinglePodcastPodcast.
        :type keywords: str
        """

        self._keywords = keywords

    @property
    def latest_episode_time(self):
        """Gets the latest_episode_time of this SinglePodcastPodcast.


        :return: The latest_episode_time of this SinglePodcastPodcast.
        :rtype: str
        """
        return self._latest_episode_time

    @latest_episode_time.setter
    def latest_episode_time(self, latest_episode_time):
        """Sets the latest_episode_time of this SinglePodcastPodcast.


        :param latest_episode_time: The latest_episode_time of this SinglePodcastPodcast.
        :type latest_episode_time: str
        """

        self._latest_episode_time = latest_episode_time

    @property
    def podcast_id(self):
        """Gets the podcast_id of this SinglePodcastPodcast.


        :return: The podcast_id of this SinglePodcastPodcast.
        :rtype: int
        """
        return self._podcast_id

    @podcast_id.setter
    def podcast_id(self, podcast_id):
        """Sets the podcast_id of this SinglePodcastPodcast.


        :param podcast_id: The podcast_id of this SinglePodcastPodcast.
        :type podcast_id: int
        """

        self._podcast_id = podcast_id

    @property
    def title(self):
        """Gets the title of this SinglePodcastPodcast.


        :return: The title of this SinglePodcastPodcast.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SinglePodcastPodcast.


        :param title: The title of this SinglePodcastPodcast.
        :type title: str
        """

        self._title = title

    @property
    def url(self):
        """Gets the url of this SinglePodcastPodcast.


        :return: The url of this SinglePodcastPodcast.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this SinglePodcastPodcast.


        :param url: The url of this SinglePodcastPodcast.
        :type url: str
        """

        self._url = url

    @property
    def website(self):
        """Gets the website of this SinglePodcastPodcast.


        :return: The website of this SinglePodcastPodcast.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this SinglePodcastPodcast.


        :param website: The website of this SinglePodcastPodcast.
        :type website: str
        """

        self._website = website
