# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PodcastEpisodeListEpisodesItemPlay(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, duration_in_sec: int=None, size: str=None, type: str=None, url: str=None):
        """PodcastEpisodeListEpisodesItemPlay - a model defined in OpenAPI

        :param duration: The duration of this PodcastEpisodeListEpisodesItemPlay.
        :param duration_in_sec: The duration_in_sec of this PodcastEpisodeListEpisodesItemPlay.
        :param size: The size of this PodcastEpisodeListEpisodesItemPlay.
        :param type: The type of this PodcastEpisodeListEpisodesItemPlay.
        :param url: The url of this PodcastEpisodeListEpisodesItemPlay.
        """
        self.openapi_types = {
            'duration': str,
            'duration_in_sec': int,
            'size': str,
            'type': str,
            'url': str
        }

        self.attribute_map = {
            'duration': 'duration',
            'duration_in_sec': 'durationInSec',
            'size': 'size',
            'type': 'type',
            'url': 'url'
        }

        self._duration = duration
        self._duration_in_sec = duration_in_sec
        self._size = size
        self._type = type
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PodcastEpisodeListEpisodesItemPlay':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PodcastEpisodeListEpisodesItem_play of this PodcastEpisodeListEpisodesItemPlay.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this PodcastEpisodeListEpisodesItemPlay.


        :return: The duration of this PodcastEpisodeListEpisodesItemPlay.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this PodcastEpisodeListEpisodesItemPlay.


        :param duration: The duration of this PodcastEpisodeListEpisodesItemPlay.
        :type duration: str
        """

        self._duration = duration

    @property
    def duration_in_sec(self):
        """Gets the duration_in_sec of this PodcastEpisodeListEpisodesItemPlay.


        :return: The duration_in_sec of this PodcastEpisodeListEpisodesItemPlay.
        :rtype: int
        """
        return self._duration_in_sec

    @duration_in_sec.setter
    def duration_in_sec(self, duration_in_sec):
        """Sets the duration_in_sec of this PodcastEpisodeListEpisodesItemPlay.


        :param duration_in_sec: The duration_in_sec of this PodcastEpisodeListEpisodesItemPlay.
        :type duration_in_sec: int
        """

        self._duration_in_sec = duration_in_sec

    @property
    def size(self):
        """Gets the size of this PodcastEpisodeListEpisodesItemPlay.


        :return: The size of this PodcastEpisodeListEpisodesItemPlay.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this PodcastEpisodeListEpisodesItemPlay.


        :param size: The size of this PodcastEpisodeListEpisodesItemPlay.
        :type size: str
        """

        self._size = size

    @property
    def type(self):
        """Gets the type of this PodcastEpisodeListEpisodesItemPlay.


        :return: The type of this PodcastEpisodeListEpisodesItemPlay.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PodcastEpisodeListEpisodesItemPlay.


        :param type: The type of this PodcastEpisodeListEpisodesItemPlay.
        :type type: str
        """

        self._type = type

    @property
    def url(self):
        """Gets the url of this PodcastEpisodeListEpisodesItemPlay.


        :return: The url of this PodcastEpisodeListEpisodesItemPlay.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PodcastEpisodeListEpisodesItemPlay.


        :param url: The url of this PodcastEpisodeListEpisodesItemPlay.
        :type url: str
        """

        self._url = url
