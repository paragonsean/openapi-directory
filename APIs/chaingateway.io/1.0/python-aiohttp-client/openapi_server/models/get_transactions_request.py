# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetTransactionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, txid: str=None):
        """GetTransactionsRequest - a model defined in OpenAPI

        :param txid: The txid of this GetTransactionsRequest.
        """
        self.openapi_types = {
            'txid': str
        }

        self.attribute_map = {
            'txid': 'txid'
        }

        self._txid = txid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTransactionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getTransactionsRequest of this GetTransactionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def txid(self):
        """Gets the txid of this GetTransactionsRequest.


        :return: The txid of this GetTransactionsRequest.
        :rtype: str
        """
        return self._txid

    @txid.setter
    def txid(self, txid):
        """Sets the txid of this GetTransactionsRequest.


        :param txid: The txid of this GetTransactionsRequest.
        :type txid: str
        """
        if txid is None:
            raise ValueError("Invalid value for `txid`, must not be `None`")

        self._txid = txid
