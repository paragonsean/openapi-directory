# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Cipherparams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iv: str=None):
        """Cipherparams - a model defined in OpenAPI

        :param iv: The iv of this Cipherparams.
        """
        self.openapi_types = {
            'iv': str
        }

        self.attribute_map = {
            'iv': 'iv'
        }

        self._iv = iv

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Cipherparams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cipherparams of this Cipherparams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iv(self):
        """Gets the iv of this Cipherparams.


        :return: The iv of this Cipherparams.
        :rtype: str
        """
        return self._iv

    @iv.setter
    def iv(self, iv):
        """Sets the iv of this Cipherparams.


        :param iv: The iv of this Cipherparams.
        :type iv: str
        """
        if iv is None:
            raise ValueError("Invalid value for `iv`, must not be `None`")

        self._iv = iv
