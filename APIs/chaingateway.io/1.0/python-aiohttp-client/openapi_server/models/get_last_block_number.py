# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetLastBlockNumber(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blocknumber: int=None, ok: bool=None):
        """GetLastBlockNumber - a model defined in OpenAPI

        :param blocknumber: The blocknumber of this GetLastBlockNumber.
        :param ok: The ok of this GetLastBlockNumber.
        """
        self.openapi_types = {
            'blocknumber': int,
            'ok': bool
        }

        self.attribute_map = {
            'blocknumber': 'blocknumber',
            'ok': 'ok'
        }

        self._blocknumber = blocknumber
        self._ok = ok

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetLastBlockNumber':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getLastBlockNumber of this GetLastBlockNumber.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocknumber(self):
        """Gets the blocknumber of this GetLastBlockNumber.


        :return: The blocknumber of this GetLastBlockNumber.
        :rtype: int
        """
        return self._blocknumber

    @blocknumber.setter
    def blocknumber(self, blocknumber):
        """Sets the blocknumber of this GetLastBlockNumber.


        :param blocknumber: The blocknumber of this GetLastBlockNumber.
        :type blocknumber: int
        """
        if blocknumber is None:
            raise ValueError("Invalid value for `blocknumber`, must not be `None`")

        self._blocknumber = blocknumber

    @property
    def ok(self):
        """Gets the ok of this GetLastBlockNumber.


        :return: The ok of this GetLastBlockNumber.
        :rtype: bool
        """
        return self._ok

    @ok.setter
    def ok(self, ok):
        """Sets the ok of this GetLastBlockNumber.


        :param ok: The ok of this GetLastBlockNumber.
        :type ok: bool
        """
        if ok is None:
            raise ValueError("Invalid value for `ok`, must not be `None`")

        self._ok = ok
