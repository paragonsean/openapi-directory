/*
 * Chaingateway.io
 * # Chaingateway.io  REST API to build the bridge between Ethereum and the real world  Please check out our [website](https://chaingateway.io?utm_source=postman) for detailed information about this API.  To use our API, you need an API Key (Described as Authorization header in the examples below). To get one, please create an account on our [website](https://chaingateway.io/register?utm_source=postman).  For our internal documentation, please check out our [Docs Site](https://chaingateway.io/docs?utm_source=postman).  If you need help with integrating our API in your application, you can reach us via [email](mailto:support@chaingateway.io) or join our official [Telegram](https://t.me/chaingateway) group.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeleteAddress;
import org.openapitools.client.model.DeleteAddressRequest;
import org.openapitools.client.model.ExportAddress;
import org.openapitools.client.model.ExportAddressRequest;
import org.openapitools.client.model.ImportAddress;
import org.openapitools.client.model.ImportAddressRequest;
import org.openapitools.client.model.ListAddresses;
import org.openapitools.client.model.NewAddress;
import org.openapitools.client.model.NewAddressRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddressRequestsApi
 */
@Disabled
public class AddressRequestsApiTest {

    private final AddressRequestsApi api = new AddressRequestsApi();

    /**
     * deleteAddress
     *
     * Deletes an existing ethereum address. Be careful when using this function.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAddressTest() throws ApiException {
        String authorization = null;
        DeleteAddressRequest deleteAddressRequest = null;
        DeleteAddress response = api.deleteAddress(authorization, deleteAddressRequest);
        // TODO: test validations
    }

    /**
     * exportAddress
     *
     * Returns all ethereum addresses created with an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportAddressTest() throws ApiException {
        String authorization = null;
        ExportAddressRequest exportAddressRequest = null;
        ExportAddress response = api.exportAddress(authorization, exportAddressRequest);
        // TODO: test validations
    }

    /**
     * importAddress
     *
     * Returns all ethereum addresses created with an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void importAddressTest() throws ApiException {
        String authorization = null;
        ImportAddressRequest importAddressRequest = null;
        ImportAddress response = api.importAddress(authorization, importAddressRequest);
        // TODO: test validations
    }

    /**
     * listAddresses
     *
     * Returns all ethereum addresses created with an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAddressesTest() throws ApiException {
        String contentType = null;
        String authorization = null;
        ListAddresses response = api.listAddresses(contentType, authorization);
        // TODO: test validations
    }

    /**
     * newAddress
     *
     * Generates a new ethereum addresses you can use to send or receive funds. Do not lose the password! We can&#39;t restore access to an address if you lose it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void newAddressTest() throws ApiException {
        String authorization = null;
        NewAddressRequest newAddressRequest = null;
        NewAddress response = api.newAddress(authorization, newAddressRequest);
        // TODO: test validations
    }

}
