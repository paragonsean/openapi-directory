/*
 * Chaingateway.io
 * # Chaingateway.io  REST API to build the bridge between Ethereum and the real world  Please check out our [website](https://chaingateway.io?utm_source=postman) for detailed information about this API.  To use our API, you need an API Key (Described as Authorization header in the examples below). To get one, please create an account on our [website](https://chaingateway.io/register?utm_source=postman).  For our internal documentation, please check out our [Docs Site](https://chaingateway.io/docs?utm_source=postman).  If you need help with integrating our API in your application, you can reach us via [email](mailto:support@chaingateway.io) or join our official [Telegram](https://t.me/chaingateway) group.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListFailedIPNs;
import org.openapitools.client.model.ListSubscribedAddresses;
import org.openapitools.client.model.ResendFailedIPN;
import org.openapitools.client.model.ResendFailedIPNRequest;
import org.openapitools.client.model.SubscribeAddress;
import org.openapitools.client.model.SubscribeAddressRequest;
import org.openapitools.client.model.UnsubscribeAddress;
import org.openapitools.client.model.UnsubscribeAddressRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionIpnRequestsApi
 */
@Disabled
public class SubscriptionIpnRequestsApiTest {

    private final SubscriptionIpnRequestsApi api = new SubscriptionIpnRequestsApi();

    /**
     * listFailedIPNs
     *
     * Returns all subscriptions/IPNs created with an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFailedIPNsTest() throws ApiException {
        String contentType = null;
        String authorization = null;
        ListFailedIPNs response = api.listFailedIPNs(contentType, authorization);
        // TODO: test validations
    }

    /**
     * listSubscribedAddresses
     *
     * Returns all subscriptions/IPNs created with an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSubscribedAddressesTest() throws ApiException {
        String contentType = null;
        String authorization = null;
        ListSubscribedAddresses response = api.listSubscribedAddresses(contentType, authorization);
        // TODO: test validations
    }

    /**
     * resendFailedIPN
     *
     * Returns all subscriptions/IPNs created with an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resendFailedIPNTest() throws ApiException {
        String authorization = null;
        ResendFailedIPNRequest resendFailedIPNRequest = null;
        ResendFailedIPN response = api.resendFailedIPN(authorization, resendFailedIPNRequest);
        // TODO: test validations
    }

    /**
     * subscribeAddress
     *
     * Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won&#39;t get reliable notifications anymore.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscribeAddressTest() throws ApiException {
        String authorization = null;
        SubscribeAddressRequest subscribeAddressRequest = null;
        SubscribeAddress response = api.subscribeAddress(authorization, subscribeAddressRequest);
        // TODO: test validations
    }

    /**
     * unsubscribeAddress
     *
     * Deletes an existing subscription/IPN for the given address (and contractaddress).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unsubscribeAddressTest() throws ApiException {
        String authorization = null;
        UnsubscribeAddressRequest unsubscribeAddressRequest = null;
        UnsubscribeAddress response = api.unsubscribeAddress(authorization, unsubscribeAddressRequest);
        // TODO: test validations
    }

}
