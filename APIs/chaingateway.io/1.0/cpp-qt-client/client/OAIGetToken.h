/**
 * Chaingateway.io
 * # Chaingateway.io  REST API to build the bridge between Ethereum and the real world  Please check out our [website](https://chaingateway.io?utm_source=postman) for detailed information about this API.  To use our API, you need an API Key (Described as Authorization header in the examples below). To get one, please create an account on our [website](https://chaingateway.io/register?utm_source=postman).  For our internal documentation, please check out our [Docs Site](https://chaingateway.io/docs?utm_source=postman).  If you need help with integrating our API in your application, you can reach us via [email](mailto:support@chaingateway.io) or join our official [Telegram](https://t.me/chaingateway) group.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetToken.h
 *
 * 
 */

#ifndef OAIGetToken_H
#define OAIGetToken_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetToken : public OAIObject {
public:
    OAIGetToken();
    OAIGetToken(QString json);
    ~OAIGetToken() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContractaddress() const;
    void setContractaddress(const QString &contractaddress);
    bool is_contractaddress_Set() const;
    bool is_contractaddress_Valid() const;

    qint32 getDecimals() const;
    void setDecimals(const qint32 &decimals);
    bool is_decimals_Set() const;
    bool is_decimals_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isOk() const;
    void setOk(const bool &ok);
    bool is_ok_Set() const;
    bool is_ok_Valid() const;

    qint64 getSupply() const;
    void setSupply(const qint64 &supply);
    bool is_supply_Set() const;
    bool is_supply_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_contractaddress;
    bool m_contractaddress_isSet;
    bool m_contractaddress_isValid;

    qint32 m_decimals;
    bool m_decimals_isSet;
    bool m_decimals_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_ok;
    bool m_ok_isSet;
    bool m_ok_isValid;

    qint64 m_supply;
    bool m_supply_isSet;
    bool m_supply_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetToken)

#endif // OAIGetToken_H
