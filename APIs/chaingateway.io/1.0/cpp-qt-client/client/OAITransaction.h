/**
 * Chaingateway.io
 * # Chaingateway.io  REST API to build the bridge between Ethereum and the real world  Please check out our [website](https://chaingateway.io?utm_source=postman) for detailed information about this API.  To use our API, you need an API Key (Described as Authorization header in the examples below). To get one, please create an account on our [website](https://chaingateway.io/register?utm_source=postman).  For our internal documentation, please check out our [Docs Site](https://chaingateway.io/docs?utm_source=postman).  If you need help with integrating our API in your application, you can reach us via [email](mailto:support@chaingateway.io) or join our official [Telegram](https://t.me/chaingateway) group.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransaction.h
 *
 * 
 */

#ifndef OAITransaction_H
#define OAITransaction_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransaction : public OAIObject {
public:
    OAITransaction();
    OAITransaction(QString json);
    ~OAITransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAmount() const;
    void setAmount(const QString &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getBlockNumber() const;
    void setBlockNumber(const QString &block_number);
    bool is_block_number_Set() const;
    bool is_block_number_Valid() const;

    QString getContractAddress() const;
    void setContractAddress(const QString &contract_address);
    bool is_contract_address_Set() const;
    bool is_contract_address_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QString getGas() const;
    void setGas(const QString &gas);
    bool is_gas_Set() const;
    bool is_gas_Valid() const;

    QString getGasPrice() const;
    void setGasPrice(const QString &gas_price);
    bool is_gas_price_Set() const;
    bool is_gas_price_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    QString getTokenDecimals() const;
    void setTokenDecimals(const QString &token_decimals);
    bool is_token_decimals_Set() const;
    bool is_token_decimals_Valid() const;

    QString getTokenName() const;
    void setTokenName(const QString &token_name);
    bool is_token_name_Set() const;
    bool is_token_name_Valid() const;

    QString getTokenSupply() const;
    void setTokenSupply(const QString &token_supply);
    bool is_token_supply_Set() const;
    bool is_token_supply_Valid() const;

    QString getTokenSymbol() const;
    void setTokenSymbol(const QString &token_symbol);
    bool is_token_symbol_Set() const;
    bool is_token_symbol_Valid() const;

    QString getTxid() const;
    void setTxid(const QString &txid);
    bool is_txid_Set() const;
    bool is_txid_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_block_number;
    bool m_block_number_isSet;
    bool m_block_number_isValid;

    QString m_contract_address;
    bool m_contract_address_isSet;
    bool m_contract_address_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QString m_gas;
    bool m_gas_isSet;
    bool m_gas_isValid;

    QString m_gas_price;
    bool m_gas_price_isSet;
    bool m_gas_price_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    QString m_token_decimals;
    bool m_token_decimals_isSet;
    bool m_token_decimals_isValid;

    QString m_token_name;
    bool m_token_name_isSet;
    bool m_token_name_isValid;

    QString m_token_supply;
    bool m_token_supply_isSet;
    bool m_token_supply_isValid;

    QString m_token_symbol;
    bool m_token_symbol_isSet;
    bool m_token_symbol_isValid;

    QString m_txid;
    bool m_txid_isSet;
    bool m_txid_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransaction)

#endif // OAITransaction_H
