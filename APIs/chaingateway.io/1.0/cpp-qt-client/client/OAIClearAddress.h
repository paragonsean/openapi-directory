/**
 * Chaingateway.io
 * # Chaingateway.io  REST API to build the bridge between Ethereum and the real world  Please check out our [website](https://chaingateway.io?utm_source=postman) for detailed information about this API.  To use our API, you need an API Key (Described as Authorization header in the examples below). To get one, please create an account on our [website](https://chaingateway.io/register?utm_source=postman).  For our internal documentation, please check out our [Docs Site](https://chaingateway.io/docs?utm_source=postman).  If you need help with integrating our API in your application, you can reach us via [email](mailto:support@chaingateway.io) or join our official [Telegram](https://t.me/chaingateway) group.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClearAddress.h
 *
 * 
 */

#ifndef OAIClearAddress_H
#define OAIClearAddress_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClearAddress : public OAIObject {
public:
    OAIClearAddress();
    OAIClearAddress(QString json);
    ~OAIClearAddress() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getEthereumaddress() const;
    void setEthereumaddress(const QString &ethereumaddress);
    bool is_ethereumaddress_Set() const;
    bool is_ethereumaddress_Valid() const;

    double getGas() const;
    void setGas(const double &gas);
    bool is_gas_Set() const;
    bool is_gas_Valid() const;

    QString getNewaddress() const;
    void setNewaddress(const QString &newaddress);
    bool is_newaddress_Set() const;
    bool is_newaddress_Valid() const;

    bool isOk() const;
    void setOk(const bool &ok);
    bool is_ok_Set() const;
    bool is_ok_Valid() const;

    QString getTotal() const;
    void setTotal(const QString &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QString getTxid() const;
    void setTxid(const QString &txid);
    bool is_txid_Set() const;
    bool is_txid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_ethereumaddress;
    bool m_ethereumaddress_isSet;
    bool m_ethereumaddress_isValid;

    double m_gas;
    bool m_gas_isSet;
    bool m_gas_isValid;

    QString m_newaddress;
    bool m_newaddress_isSet;
    bool m_newaddress_isValid;

    bool m_ok;
    bool m_ok_isSet;
    bool m_ok_isValid;

    QString m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QString m_txid;
    bool m_txid_isSet;
    bool m_txid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClearAddress)

#endif // OAIClearAddress_H
