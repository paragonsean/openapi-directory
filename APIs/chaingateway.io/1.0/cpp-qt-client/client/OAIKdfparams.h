/**
 * Chaingateway.io
 * # Chaingateway.io  REST API to build the bridge between Ethereum and the real world  Please check out our [website](https://chaingateway.io?utm_source=postman) for detailed information about this API.  To use our API, you need an API Key (Described as Authorization header in the examples below). To get one, please create an account on our [website](https://chaingateway.io/register?utm_source=postman).  For our internal documentation, please check out our [Docs Site](https://chaingateway.io/docs?utm_source=postman).  If you need help with integrating our API in your application, you can reach us via [email](mailto:support@chaingateway.io) or join our official [Telegram](https://t.me/chaingateway) group.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKdfparams.h
 *
 * 
 */

#ifndef OAIKdfparams_H
#define OAIKdfparams_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKdfparams : public OAIObject {
public:
    OAIKdfparams();
    OAIKdfparams(QString json);
    ~OAIKdfparams() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDklen() const;
    void setDklen(const qint32 &dklen);
    bool is_dklen_Set() const;
    bool is_dklen_Valid() const;

    qint32 getN() const;
    void setN(const qint32 &n);
    bool is_n_Set() const;
    bool is_n_Valid() const;

    qint32 getP() const;
    void setP(const qint32 &p);
    bool is_p_Set() const;
    bool is_p_Valid() const;

    qint32 getR() const;
    void setR(const qint32 &r);
    bool is_r_Set() const;
    bool is_r_Valid() const;

    QString getSalt() const;
    void setSalt(const QString &salt);
    bool is_salt_Set() const;
    bool is_salt_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_dklen;
    bool m_dklen_isSet;
    bool m_dklen_isValid;

    qint32 m_n;
    bool m_n_isSet;
    bool m_n_isValid;

    qint32 m_p;
    bool m_p_isSet;
    bool m_p_isValid;

    qint32 m_r;
    bool m_r_isSet;
    bool m_r_isValid;

    QString m_salt;
    bool m_salt_isSet;
    bool m_salt_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKdfparams)

#endif // OAIKdfparams_H
