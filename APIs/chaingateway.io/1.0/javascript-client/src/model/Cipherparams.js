/**
 * Chaingateway.io
 * # Chaingateway.io  REST API to build the bridge between Ethereum and the real world  Please check out our [website](https://chaingateway.io?utm_source=postman) for detailed information about this API.  To use our API, you need an API Key (Described as Authorization header in the examples below). To get one, please create an account on our [website](https://chaingateway.io/register?utm_source=postman).  For our internal documentation, please check out our [Docs Site](https://chaingateway.io/docs?utm_source=postman).  If you need help with integrating our API in your application, you can reach us via [email](mailto:support@chaingateway.io) or join our official [Telegram](https://t.me/chaingateway) group.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Cipherparams model module.
 * @module model/Cipherparams
 * @version 1.0
 */
class Cipherparams {
    /**
     * Constructs a new <code>Cipherparams</code>.
     * @alias module:model/Cipherparams
     * @param iv {String} 
     */
    constructor(iv) { 
        
        Cipherparams.initialize(this, iv);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, iv) { 
        obj['iv'] = iv;
    }

    /**
     * Constructs a <code>Cipherparams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Cipherparams} obj Optional instance to populate.
     * @return {module:model/Cipherparams} The populated <code>Cipherparams</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Cipherparams();

            if (data.hasOwnProperty('iv')) {
                obj['iv'] = ApiClient.convertToType(data['iv'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Cipherparams</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Cipherparams</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Cipherparams.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['iv'] && !(typeof data['iv'] === 'string' || data['iv'] instanceof String)) {
            throw new Error("Expected the field `iv` to be a primitive type in the JSON string but got " + data['iv']);
        }

        return true;
    }


}

Cipherparams.RequiredProperties = ["iv"];

/**
 * @member {String} iv
 */
Cipherparams.prototype['iv'] = undefined;






export default Cipherparams;

