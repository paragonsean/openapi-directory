# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pre_sign_info_fields_inner import PreSignInfoFieldsInner
from openapi_server import util


class PreSignInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fetch_url: str=None, fields: List[PreSignInfoFieldsInner]=None, put_url: str=None):
        """PreSignInfo - a model defined in OpenAPI

        :param fetch_url: The fetch_url of this PreSignInfo.
        :param fields: The fields of this PreSignInfo.
        :param put_url: The put_url of this PreSignInfo.
        """
        self.openapi_types = {
            'fetch_url': str,
            'fields': List[PreSignInfoFieldsInner],
            'put_url': str
        }

        self.attribute_map = {
            'fetch_url': 'fetchUrl',
            'fields': 'fields',
            'put_url': 'putUrl'
        }

        self._fetch_url = fetch_url
        self._fields = fields
        self._put_url = put_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreSignInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PreSignInfo of this PreSignInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fetch_url(self):
        """Gets the fetch_url of this PreSignInfo.

        The URL you use in your SMS text.  It is the file location.

        :return: The fetch_url of this PreSignInfo.
        :rtype: str
        """
        return self._fetch_url

    @fetch_url.setter
    def fetch_url(self, fetch_url):
        """Sets the fetch_url of this PreSignInfo.

        The URL you use in your SMS text.  It is the file location.

        :param fetch_url: The fetch_url of this PreSignInfo.
        :type fetch_url: str
        """

        self._fetch_url = fetch_url

    @property
    def fields(self):
        """Gets the fields of this PreSignInfo.

        Name value objects to add to the headers of the PUT request.

        :return: The fields of this PreSignInfo.
        :rtype: List[PreSignInfoFieldsInner]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this PreSignInfo.

        Name value objects to add to the headers of the PUT request.

        :param fields: The fields of this PreSignInfo.
        :type fields: List[PreSignInfoFieldsInner]
        """

        self._fields = fields

    @property
    def put_url(self):
        """Gets the put_url of this PreSignInfo.

        The address of the PUT request to upload the file.

        :return: The put_url of this PreSignInfo.
        :rtype: str
        """
        return self._put_url

    @put_url.setter
    def put_url(self, put_url):
        """Sets the put_url of this PreSignInfo.

        The address of the PUT request to upload the file.

        :param put_url: The put_url of this PreSignInfo.
        :type put_url: str
        """

        self._put_url = put_url
