# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.profile_commerce_address import ProfileCommerceAddress
from openapi_server import util


class ProfileCommerce(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: ProfileCommerceAddress=None, bank_payment_reference: str=None):
        """ProfileCommerce - a model defined in OpenAPI

        :param address: The address of this ProfileCommerce.
        :param bank_payment_reference: The bank_payment_reference of this ProfileCommerce.
        """
        self.openapi_types = {
            'address': ProfileCommerceAddress,
            'bank_payment_reference': str
        }

        self.attribute_map = {
            'address': 'address',
            'bank_payment_reference': 'bankPaymentReference'
        }

        self._address = address
        self._bank_payment_reference = bank_payment_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfileCommerce':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Profile_commerce of this ProfileCommerce.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this ProfileCommerce.


        :return: The address of this ProfileCommerce.
        :rtype: ProfileCommerceAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ProfileCommerce.


        :param address: The address of this ProfileCommerce.
        :type address: ProfileCommerceAddress
        """

        self._address = address

    @property
    def bank_payment_reference(self):
        """Gets the bank_payment_reference of this ProfileCommerce.


        :return: The bank_payment_reference of this ProfileCommerce.
        :rtype: str
        """
        return self._bank_payment_reference

    @bank_payment_reference.setter
    def bank_payment_reference(self, bank_payment_reference):
        """Sets the bank_payment_reference of this ProfileCommerce.


        :param bank_payment_reference: The bank_payment_reference of this ProfileCommerce.
        :type bank_payment_reference: str
        """

        self._bank_payment_reference = bank_payment_reference
