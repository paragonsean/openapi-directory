# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Source(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_name: str=None, identifier: str=None, name: str=None, title: str=None, url: str=None):
        """Source - a model defined in OpenAPI

        :param dataset_name: The dataset_name of this Source.
        :param identifier: The identifier of this Source.
        :param name: The name of this Source.
        :param title: The title of this Source.
        :param url: The url of this Source.
        """
        self.openapi_types = {
            'dataset_name': str,
            'identifier': str,
            'name': str,
            'title': str,
            'url': str
        }

        self.attribute_map = {
            'dataset_name': 'datasetName',
            'identifier': 'identifier',
            'name': 'name',
            'title': 'title',
            'url': 'url'
        }

        self._dataset_name = dataset_name
        self._identifier = identifier
        self._name = name
        self._title = title
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Source':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Source of this Source.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_name(self):
        """Gets the dataset_name of this Source.


        :return: The dataset_name of this Source.
        :rtype: str
        """
        return self._dataset_name

    @dataset_name.setter
    def dataset_name(self, dataset_name):
        """Sets the dataset_name of this Source.


        :param dataset_name: The dataset_name of this Source.
        :type dataset_name: str
        """

        self._dataset_name = dataset_name

    @property
    def identifier(self):
        """Gets the identifier of this Source.


        :return: The identifier of this Source.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this Source.


        :param identifier: The identifier of this Source.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def name(self):
        """Gets the name of this Source.


        :return: The name of this Source.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Source.


        :param name: The name of this Source.
        :type name: str
        """

        self._name = name

    @property
    def title(self):
        """Gets the title of this Source.

        The full not atomized source string.

        :return: The title of this Source.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Source.

        The full not atomized source string.

        :param title: The title of this Source.
        :type title: str
        """

        self._title = title

    @property
    def url(self):
        """Gets the url of this Source.


        :return: The url of this Source.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Source.


        :param url: The url of this Source.
        :type url: str
        """

        self._url = url
