# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClientStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, checklist_id: str=None, duration: float=None, status_message: str=None):
        """ClientStatus - a model defined in OpenAPI

        :param checklist_id: The checklist_id of this ClientStatus.
        :param duration: The duration of this ClientStatus.
        :param status_message: The status_message of this ClientStatus.
        """
        self.openapi_types = {
            'checklist_id': str,
            'duration': float,
            'status_message': str
        }

        self.attribute_map = {
            'checklist_id': 'checklistId',
            'duration': 'duration',
            'status_message': 'statusMessage'
        }

        self._checklist_id = checklist_id
        self._duration = duration
        self._status_message = status_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientStatus of this ClientStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checklist_id(self):
        """Gets the checklist_id of this ClientStatus.


        :return: The checklist_id of this ClientStatus.
        :rtype: str
        """
        return self._checklist_id

    @checklist_id.setter
    def checklist_id(self, checklist_id):
        """Sets the checklist_id of this ClientStatus.


        :param checklist_id: The checklist_id of this ClientStatus.
        :type checklist_id: str
        """

        self._checklist_id = checklist_id

    @property
    def duration(self):
        """Gets the duration of this ClientStatus.

        Duration of the request processing in the specific checklist client in milliseconds.

        :return: The duration of this ClientStatus.
        :rtype: float
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ClientStatus.

        Duration of the request processing in the specific checklist client in milliseconds.

        :param duration: The duration of this ClientStatus.
        :type duration: float
        """

        self._duration = duration

    @property
    def status_message(self):
        """Gets the status_message of this ClientStatus.

        Status of the request, possible values are 'ok', 'timeout', 'interrupted', 'unsupported search mode'.

        :return: The status_message of this ClientStatus.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this ClientStatus.

        Status of the request, possible values are 'ok', 'timeout', 'interrupted', 'unsupported search mode'.

        :param status_message: The status_message of this ClientStatus.
        :type status_message: str
        """

        self._status_message = status_message
