# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client_status import ClientStatus
from openapi_server.models.request import Request
from openapi_server.models.response import Response
from openapi_server import util


class Query(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_status: List[ClientStatus]=None, request: Request=None, response: List[Response]=None):
        """Query - a model defined in OpenAPI

        :param client_status: The client_status of this Query.
        :param request: The request of this Query.
        :param response: The response of this Query.
        """
        self.openapi_types = {
            'client_status': List[ClientStatus],
            'request': Request,
            'response': List[Response]
        }

        self.attribute_map = {
            'client_status': 'clientStatus',
            'request': 'request',
            'response': 'response'
        }

        self._client_status = client_status
        self._request = request
        self._response = response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Query':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Query of this Query.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_status(self):
        """Gets the client_status of this Query.


        :return: The client_status of this Query.
        :rtype: List[ClientStatus]
        """
        return self._client_status

    @client_status.setter
    def client_status(self, client_status):
        """Sets the client_status of this Query.


        :param client_status: The client_status of this Query.
        :type client_status: List[ClientStatus]
        """

        self._client_status = client_status

    @property
    def request(self):
        """Gets the request of this Query.


        :return: The request of this Query.
        :rtype: Request
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this Query.


        :param request: The request of this Query.
        :type request: Request
        """

        self._request = request

    @property
    def response(self):
        """Gets the response of this Query.


        :return: The response of this Query.
        :rtype: List[Response]
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this Query.


        :param response: The response of this Query.
        :type response: List[Response]
        """

        self._response = response
