# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source import Source
from openapi_server.models.taxon_name import TaxonName
from openapi_server import util


class OtherNames(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sources: List[Source]=None, taxon_name: TaxonName=None, url: str=None):
        """OtherNames - a model defined in OpenAPI

        :param sources: The sources of this OtherNames.
        :param taxon_name: The taxon_name of this OtherNames.
        :param url: The url of this OtherNames.
        """
        self.openapi_types = {
            'sources': List[Source],
            'taxon_name': TaxonName,
            'url': str
        }

        self.attribute_map = {
            'sources': 'sources',
            'taxon_name': 'taxonName',
            'url': 'url'
        }

        self._sources = sources
        self._taxon_name = taxon_name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OtherNames':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OtherNames of this OtherNames.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sources(self):
        """Gets the sources of this OtherNames.


        :return: The sources of this OtherNames.
        :rtype: List[Source]
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this OtherNames.


        :param sources: The sources of this OtherNames.
        :type sources: List[Source]
        """

        self._sources = sources

    @property
    def taxon_name(self):
        """Gets the taxon_name of this OtherNames.


        :return: The taxon_name of this OtherNames.
        :rtype: TaxonName
        """
        return self._taxon_name

    @taxon_name.setter
    def taxon_name(self, taxon_name):
        """Sets the taxon_name of this OtherNames.


        :param taxon_name: The taxon_name of this OtherNames.
        :type taxon_name: TaxonName
        """

        self._taxon_name = taxon_name

    @property
    def url(self):
        """Gets the url of this OtherNames.

        The URL pointing to the original name record of the checklist provider.

        :return: The url of this OtherNames.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this OtherNames.

        The URL pointing to the original name record of the checklist provider.

        :param url: The url of this OtherNames.
        :type url: str
        """

        self._url = url
