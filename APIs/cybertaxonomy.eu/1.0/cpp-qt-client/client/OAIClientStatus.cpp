/**
 * EU BON UTIS
 * The Unified Taxonomic Information Service (UTIS) is the taxonomic backbone for the EU-BON project
 *
 * The version of the OpenAPI document: 1.0
 * Contact: EditSupport@bgbm.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClientStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClientStatus::OAIClientStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClientStatus::OAIClientStatus() {
    this->initializeModel();
}

OAIClientStatus::~OAIClientStatus() {}

void OAIClientStatus::initializeModel() {

    m_checklist_id_isSet = false;
    m_checklist_id_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;
}

void OAIClientStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClientStatus::fromJsonObject(QJsonObject json) {

    m_checklist_id_isValid = ::OpenAPI::fromJsonValue(m_checklist_id, json[QString("checklistId")]);
    m_checklist_id_isSet = !json[QString("checklistId")].isNull() && m_checklist_id_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("statusMessage")]);
    m_status_message_isSet = !json[QString("statusMessage")].isNull() && m_status_message_isValid;
}

QString OAIClientStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClientStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_checklist_id_isSet) {
        obj.insert(QString("checklistId"), ::OpenAPI::toJsonValue(m_checklist_id));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("statusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    return obj;
}

QString OAIClientStatus::getChecklistId() const {
    return m_checklist_id;
}
void OAIClientStatus::setChecklistId(const QString &checklist_id) {
    m_checklist_id = checklist_id;
    m_checklist_id_isSet = true;
}

bool OAIClientStatus::is_checklist_id_Set() const{
    return m_checklist_id_isSet;
}

bool OAIClientStatus::is_checklist_id_Valid() const{
    return m_checklist_id_isValid;
}

double OAIClientStatus::getDuration() const {
    return m_duration;
}
void OAIClientStatus::setDuration(const double &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIClientStatus::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIClientStatus::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAIClientStatus::getStatusMessage() const {
    return m_status_message;
}
void OAIClientStatus::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIClientStatus::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIClientStatus::is_status_message_Valid() const{
    return m_status_message_isValid;
}

bool OAIClientStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_checklist_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClientStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
