/**
 * EU BON UTIS
 * The Unified Taxonomic Information Service (UTIS) is the taxonomic backbone for the EU-BON project
 *
 * The version of the OpenAPI document: 1.0
 * Contact: EditSupport@bgbm.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAtomisedName.h
 *
 * 
 */

#ifndef OAIAtomisedName_H
#define OAIAtomisedName_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAtomisedName : public OAIObject {
public:
    OAIAtomisedName();
    OAIAtomisedName(QString json);
    ~OAIAtomisedName() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGenusOrUninomial() const;
    void setGenusOrUninomial(const QString &genus_or_uninomial);
    bool is_genus_or_uninomial_Set() const;
    bool is_genus_or_uninomial_Valid() const;

    QString getInfragenericEpithet() const;
    void setInfragenericEpithet(const QString &infrageneric_epithet);
    bool is_infrageneric_epithet_Set() const;
    bool is_infrageneric_epithet_Valid() const;

    QString getInfraspecificEpithet() const;
    void setInfraspecificEpithet(const QString &infraspecific_epithet);
    bool is_infraspecific_epithet_Set() const;
    bool is_infraspecific_epithet_Valid() const;

    QString getSpecificEpithet() const;
    void setSpecificEpithet(const QString &specific_epithet);
    bool is_specific_epithet_Set() const;
    bool is_specific_epithet_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_genus_or_uninomial;
    bool m_genus_or_uninomial_isSet;
    bool m_genus_or_uninomial_isValid;

    QString m_infrageneric_epithet;
    bool m_infrageneric_epithet_isSet;
    bool m_infrageneric_epithet_isValid;

    QString m_infraspecific_epithet;
    bool m_infraspecific_epithet_isSet;
    bool m_infraspecific_epithet_isValid;

    QString m_specific_epithet;
    bool m_specific_epithet_isSet;
    bool m_specific_epithet_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAtomisedName)

#endif // OAIAtomisedName_H
