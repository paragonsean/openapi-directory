/**
 * EU BON UTIS
 * The Unified Taxonomic Information Service (UTIS) is the taxonomic backbone for the EU-BON project
 *
 * The version of the OpenAPI document: 1.0
 * Contact: EditSupport@bgbm.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaxonName.h
 *
 * 
 */

#ifndef OAITaxonName_H
#define OAITaxonName_H

#include <QJsonObject>

#include "OAIAtomisedName.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAtomisedName;

class OAITaxonName : public OAIObject {
public:
    OAITaxonName();
    OAITaxonName(QString json);
    ~OAITaxonName() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAtomisedName getAtomisedName() const;
    void setAtomisedName(const OAIAtomisedName &atomised_name);
    bool is_atomised_name_Set() const;
    bool is_atomised_name_Valid() const;

    QString getAuthorship() const;
    void setAuthorship(const QString &authorship);
    bool is_authorship_Set() const;
    bool is_authorship_Valid() const;

    QString getCanonicalName() const;
    void setCanonicalName(const QString &canonical_name);
    bool is_canonical_name_Set() const;
    bool is_canonical_name_Valid() const;

    QString getNomenclaturalReference() const;
    void setNomenclaturalReference(const QString &nomenclatural_reference);
    bool is_nomenclatural_reference_Set() const;
    bool is_nomenclatural_reference_Valid() const;

    QString getRank() const;
    void setRank(const QString &rank);
    bool is_rank_Set() const;
    bool is_rank_Valid() const;

    QString getScientificName() const;
    void setScientificName(const QString &scientific_name);
    bool is_scientific_name_Set() const;
    bool is_scientific_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAtomisedName m_atomised_name;
    bool m_atomised_name_isSet;
    bool m_atomised_name_isValid;

    QString m_authorship;
    bool m_authorship_isSet;
    bool m_authorship_isValid;

    QString m_canonical_name;
    bool m_canonical_name_isSet;
    bool m_canonical_name_isValid;

    QString m_nomenclatural_reference;
    bool m_nomenclatural_reference_isSet;
    bool m_nomenclatural_reference_isValid;

    QString m_rank;
    bool m_rank_isSet;
    bool m_rank_isValid;

    QString m_scientific_name;
    bool m_scientific_name_isSet;
    bool m_scientific_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaxonName)

#endif // OAITaxonName_H
