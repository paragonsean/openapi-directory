/**
 * EU BON UTIS
 * The Unified Taxonomic Information Service (UTIS) is the taxonomic backbone for the EU-BON project
 *
 * The version of the OpenAPI document: 1.0
 * Contact: EditSupport@bgbm.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClientStatus model module.
 * @module model/ClientStatus
 * @version 1.0
 */
class ClientStatus {
    /**
     * Constructs a new <code>ClientStatus</code>.
     * @alias module:model/ClientStatus
     */
    constructor() { 
        
        ClientStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientStatus} obj Optional instance to populate.
     * @return {module:model/ClientStatus} The populated <code>ClientStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientStatus();

            if (data.hasOwnProperty('checklistId')) {
                obj['checklistId'] = ApiClient.convertToType(data['checklistId'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['checklistId'] && !(typeof data['checklistId'] === 'string' || data['checklistId'] instanceof String)) {
            throw new Error("Expected the field `checklistId` to be a primitive type in the JSON string but got " + data['checklistId']);
        }
        // ensure the json data is a string
        if (data['statusMessage'] && !(typeof data['statusMessage'] === 'string' || data['statusMessage'] instanceof String)) {
            throw new Error("Expected the field `statusMessage` to be a primitive type in the JSON string but got " + data['statusMessage']);
        }

        return true;
    }


}



/**
 * @member {String} checklistId
 */
ClientStatus.prototype['checklistId'] = undefined;

/**
 * Duration of the request processing in the specific checklist client in milliseconds.
 * @member {Number} duration
 */
ClientStatus.prototype['duration'] = undefined;

/**
 * Status of the request, possible values are 'ok', 'timeout', 'interrupted', 'unsupported search mode'.
 * @member {String} statusMessage
 */
ClientStatus.prototype['statusMessage'] = undefined;






export default ClientStatus;

