/**
 * EU BON UTIS
 * The Unified Taxonomic Information Service (UTIS) is the taxonomic backbone for the EU-BON project
 *
 * The version of the OpenAPI document: 1.0
 * Contact: EditSupport@bgbm.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HigherClassificationElement model module.
 * @module model/HigherClassificationElement
 * @version 1.0
 */
class HigherClassificationElement {
    /**
     * Constructs a new <code>HigherClassificationElement</code>.
     * @alias module:model/HigherClassificationElement
     */
    constructor() { 
        
        HigherClassificationElement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HigherClassificationElement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HigherClassificationElement} obj Optional instance to populate.
     * @return {module:model/HigherClassificationElement} The populated <code>HigherClassificationElement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HigherClassificationElement();

            if (data.hasOwnProperty('rank')) {
                obj['rank'] = ApiClient.convertToType(data['rank'], 'String');
            }
            if (data.hasOwnProperty('scientificName')) {
                obj['scientificName'] = ApiClient.convertToType(data['scientificName'], 'String');
            }
            if (data.hasOwnProperty('taxonID')) {
                obj['taxonID'] = ApiClient.convertToType(data['taxonID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HigherClassificationElement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HigherClassificationElement</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['rank'] && !(typeof data['rank'] === 'string' || data['rank'] instanceof String)) {
            throw new Error("Expected the field `rank` to be a primitive type in the JSON string but got " + data['rank']);
        }
        // ensure the json data is a string
        if (data['scientificName'] && !(typeof data['scientificName'] === 'string' || data['scientificName'] instanceof String)) {
            throw new Error("Expected the field `scientificName` to be a primitive type in the JSON string but got " + data['scientificName']);
        }
        // ensure the json data is a string
        if (data['taxonID'] && !(typeof data['taxonID'] === 'string' || data['taxonID'] instanceof String)) {
            throw new Error("Expected the field `taxonID` to be a primitive type in the JSON string but got " + data['taxonID']);
        }

        return true;
    }


}



/**
 * @member {String} rank
 */
HigherClassificationElement.prototype['rank'] = undefined;

/**
 * @member {String} scientificName
 */
HigherClassificationElement.prototype['scientificName'] = undefined;

/**
 * @member {String} taxonID
 */
HigherClassificationElement.prototype['taxonID'] = undefined;






export default HigherClassificationElement;

