# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PriorityEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color: str=None, path: str=None):
        """PriorityEntity - a model defined in OpenAPI

        :param color: The color of this PriorityEntity.
        :param path: The path of this PriorityEntity.
        """
        self.openapi_types = {
            'color': str,
            'path': str
        }

        self.attribute_map = {
            'color': 'color',
            'path': 'path'
        }

        self._color = color
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PriorityEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PriorityEntity of this PriorityEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color(self):
        """Gets the color of this PriorityEntity.

        The priority color

        :return: The color of this PriorityEntity.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this PriorityEntity.

        The priority color

        :param color: The color of this PriorityEntity.
        :type color: str
        """

        self._color = color

    @property
    def path(self):
        """Gets the path of this PriorityEntity.

        The path corresponding to the priority color

        :return: The path of this PriorityEntity.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this PriorityEntity.

        The path corresponding to the priority color

        :param path: The path of this PriorityEntity.
        :type path: str
        """

        self._path = path
