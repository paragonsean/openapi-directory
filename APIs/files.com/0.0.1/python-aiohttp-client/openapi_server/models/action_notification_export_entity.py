# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActionNotificationExportEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_at: datetime=None, export_version: str=None, id: int=None, query_folder: str=None, query_message: str=None, query_path: str=None, query_request_method: str=None, query_request_url: str=None, query_status: str=None, query_success: bool=None, results_url: str=None, start_at: datetime=None, status: str=None):
        """ActionNotificationExportEntity - a model defined in OpenAPI

        :param end_at: The end_at of this ActionNotificationExportEntity.
        :param export_version: The export_version of this ActionNotificationExportEntity.
        :param id: The id of this ActionNotificationExportEntity.
        :param query_folder: The query_folder of this ActionNotificationExportEntity.
        :param query_message: The query_message of this ActionNotificationExportEntity.
        :param query_path: The query_path of this ActionNotificationExportEntity.
        :param query_request_method: The query_request_method of this ActionNotificationExportEntity.
        :param query_request_url: The query_request_url of this ActionNotificationExportEntity.
        :param query_status: The query_status of this ActionNotificationExportEntity.
        :param query_success: The query_success of this ActionNotificationExportEntity.
        :param results_url: The results_url of this ActionNotificationExportEntity.
        :param start_at: The start_at of this ActionNotificationExportEntity.
        :param status: The status of this ActionNotificationExportEntity.
        """
        self.openapi_types = {
            'end_at': datetime,
            'export_version': str,
            'id': int,
            'query_folder': str,
            'query_message': str,
            'query_path': str,
            'query_request_method': str,
            'query_request_url': str,
            'query_status': str,
            'query_success': bool,
            'results_url': str,
            'start_at': datetime,
            'status': str
        }

        self.attribute_map = {
            'end_at': 'end_at',
            'export_version': 'export_version',
            'id': 'id',
            'query_folder': 'query_folder',
            'query_message': 'query_message',
            'query_path': 'query_path',
            'query_request_method': 'query_request_method',
            'query_request_url': 'query_request_url',
            'query_status': 'query_status',
            'query_success': 'query_success',
            'results_url': 'results_url',
            'start_at': 'start_at',
            'status': 'status'
        }

        self._end_at = end_at
        self._export_version = export_version
        self._id = id
        self._query_folder = query_folder
        self._query_message = query_message
        self._query_path = query_path
        self._query_request_method = query_request_method
        self._query_request_url = query_request_url
        self._query_status = query_status
        self._query_success = query_success
        self._results_url = results_url
        self._start_at = start_at
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionNotificationExportEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionNotificationExportEntity of this ActionNotificationExportEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_at(self):
        """Gets the end_at of this ActionNotificationExportEntity.

        End date/time of export range.

        :return: The end_at of this ActionNotificationExportEntity.
        :rtype: datetime
        """
        return self._end_at

    @end_at.setter
    def end_at(self, end_at):
        """Sets the end_at of this ActionNotificationExportEntity.

        End date/time of export range.

        :param end_at: The end_at of this ActionNotificationExportEntity.
        :type end_at: datetime
        """

        self._end_at = end_at

    @property
    def export_version(self):
        """Gets the export_version of this ActionNotificationExportEntity.

        Version of the underlying records for the export.

        :return: The export_version of this ActionNotificationExportEntity.
        :rtype: str
        """
        return self._export_version

    @export_version.setter
    def export_version(self, export_version):
        """Sets the export_version of this ActionNotificationExportEntity.

        Version of the underlying records for the export.

        :param export_version: The export_version of this ActionNotificationExportEntity.
        :type export_version: str
        """

        self._export_version = export_version

    @property
    def id(self):
        """Gets the id of this ActionNotificationExportEntity.

        History Export ID

        :return: The id of this ActionNotificationExportEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ActionNotificationExportEntity.

        History Export ID

        :param id: The id of this ActionNotificationExportEntity.
        :type id: int
        """

        self._id = id

    @property
    def query_folder(self):
        """Gets the query_folder of this ActionNotificationExportEntity.

        Return notifications that were triggered by actions in this folder.

        :return: The query_folder of this ActionNotificationExportEntity.
        :rtype: str
        """
        return self._query_folder

    @query_folder.setter
    def query_folder(self, query_folder):
        """Sets the query_folder of this ActionNotificationExportEntity.

        Return notifications that were triggered by actions in this folder.

        :param query_folder: The query_folder of this ActionNotificationExportEntity.
        :type query_folder: str
        """

        self._query_folder = query_folder

    @property
    def query_message(self):
        """Gets the query_message of this ActionNotificationExportEntity.

        Error message associated with the request, if any.

        :return: The query_message of this ActionNotificationExportEntity.
        :rtype: str
        """
        return self._query_message

    @query_message.setter
    def query_message(self, query_message):
        """Sets the query_message of this ActionNotificationExportEntity.

        Error message associated with the request, if any.

        :param query_message: The query_message of this ActionNotificationExportEntity.
        :type query_message: str
        """

        self._query_message = query_message

    @property
    def query_path(self):
        """Gets the query_path of this ActionNotificationExportEntity.

        Return notifications that were triggered by actions on this specific path.

        :return: The query_path of this ActionNotificationExportEntity.
        :rtype: str
        """
        return self._query_path

    @query_path.setter
    def query_path(self, query_path):
        """Sets the query_path of this ActionNotificationExportEntity.

        Return notifications that were triggered by actions on this specific path.

        :param query_path: The query_path of this ActionNotificationExportEntity.
        :type query_path: str
        """

        self._query_path = query_path

    @property
    def query_request_method(self):
        """Gets the query_request_method of this ActionNotificationExportEntity.

        The HTTP request method used by the webhook.

        :return: The query_request_method of this ActionNotificationExportEntity.
        :rtype: str
        """
        return self._query_request_method

    @query_request_method.setter
    def query_request_method(self, query_request_method):
        """Sets the query_request_method of this ActionNotificationExportEntity.

        The HTTP request method used by the webhook.

        :param query_request_method: The query_request_method of this ActionNotificationExportEntity.
        :type query_request_method: str
        """

        self._query_request_method = query_request_method

    @property
    def query_request_url(self):
        """Gets the query_request_url of this ActionNotificationExportEntity.

        The target webhook URL.

        :return: The query_request_url of this ActionNotificationExportEntity.
        :rtype: str
        """
        return self._query_request_url

    @query_request_url.setter
    def query_request_url(self, query_request_url):
        """Sets the query_request_url of this ActionNotificationExportEntity.

        The target webhook URL.

        :param query_request_url: The query_request_url of this ActionNotificationExportEntity.
        :type query_request_url: str
        """

        self._query_request_url = query_request_url

    @property
    def query_status(self):
        """Gets the query_status of this ActionNotificationExportEntity.

        The HTTP status returned from the server in response to the webhook request.

        :return: The query_status of this ActionNotificationExportEntity.
        :rtype: str
        """
        return self._query_status

    @query_status.setter
    def query_status(self, query_status):
        """Sets the query_status of this ActionNotificationExportEntity.

        The HTTP status returned from the server in response to the webhook request.

        :param query_status: The query_status of this ActionNotificationExportEntity.
        :type query_status: str
        """

        self._query_status = query_status

    @property
    def query_success(self):
        """Gets the query_success of this ActionNotificationExportEntity.

        true if the webhook request succeeded (i.e. returned a 200 or 204 response status). false otherwise.

        :return: The query_success of this ActionNotificationExportEntity.
        :rtype: bool
        """
        return self._query_success

    @query_success.setter
    def query_success(self, query_success):
        """Sets the query_success of this ActionNotificationExportEntity.

        true if the webhook request succeeded (i.e. returned a 200 or 204 response status). false otherwise.

        :param query_success: The query_success of this ActionNotificationExportEntity.
        :type query_success: bool
        """

        self._query_success = query_success

    @property
    def results_url(self):
        """Gets the results_url of this ActionNotificationExportEntity.

        If `status` is `ready`, this will be a URL where all the results can be downloaded at once as a CSV.

        :return: The results_url of this ActionNotificationExportEntity.
        :rtype: str
        """
        return self._results_url

    @results_url.setter
    def results_url(self, results_url):
        """Sets the results_url of this ActionNotificationExportEntity.

        If `status` is `ready`, this will be a URL where all the results can be downloaded at once as a CSV.

        :param results_url: The results_url of this ActionNotificationExportEntity.
        :type results_url: str
        """

        self._results_url = results_url

    @property
    def start_at(self):
        """Gets the start_at of this ActionNotificationExportEntity.

        Start date/time of export range.

        :return: The start_at of this ActionNotificationExportEntity.
        :rtype: datetime
        """
        return self._start_at

    @start_at.setter
    def start_at(self, start_at):
        """Sets the start_at of this ActionNotificationExportEntity.

        Start date/time of export range.

        :param start_at: The start_at of this ActionNotificationExportEntity.
        :type start_at: datetime
        """

        self._start_at = start_at

    @property
    def status(self):
        """Gets the status of this ActionNotificationExportEntity.

        Status of export.  Valid values: `building`, `ready`, or `failed`

        :return: The status of this ActionNotificationExportEntity.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ActionNotificationExportEntity.

        Status of export.  Valid values: `building`, `ready`, or `failed`

        :param status: The status of this ActionNotificationExportEntity.
        :type status: str
        """

        self._status = status
