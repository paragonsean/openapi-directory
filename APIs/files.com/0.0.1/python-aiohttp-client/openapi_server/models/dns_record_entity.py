# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DnsRecordEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, id: str=None, rrtype: str=None, value: str=None):
        """DnsRecordEntity - a model defined in OpenAPI

        :param domain: The domain of this DnsRecordEntity.
        :param id: The id of this DnsRecordEntity.
        :param rrtype: The rrtype of this DnsRecordEntity.
        :param value: The value of this DnsRecordEntity.
        """
        self.openapi_types = {
            'domain': str,
            'id': str,
            'rrtype': str,
            'value': str
        }

        self.attribute_map = {
            'domain': 'domain',
            'id': 'id',
            'rrtype': 'rrtype',
            'value': 'value'
        }

        self._domain = domain
        self._id = id
        self._rrtype = rrtype
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DnsRecordEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DnsRecordEntity of this DnsRecordEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this DnsRecordEntity.

        DNS record domain name

        :return: The domain of this DnsRecordEntity.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this DnsRecordEntity.

        DNS record domain name

        :param domain: The domain of this DnsRecordEntity.
        :type domain: str
        """

        self._domain = domain

    @property
    def id(self):
        """Gets the id of this DnsRecordEntity.

        Unique label for DNS record; used by Zapier and other integrations.

        :return: The id of this DnsRecordEntity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DnsRecordEntity.

        Unique label for DNS record; used by Zapier and other integrations.

        :param id: The id of this DnsRecordEntity.
        :type id: str
        """

        self._id = id

    @property
    def rrtype(self):
        """Gets the rrtype of this DnsRecordEntity.

        DNS record type

        :return: The rrtype of this DnsRecordEntity.
        :rtype: str
        """
        return self._rrtype

    @rrtype.setter
    def rrtype(self, rrtype):
        """Sets the rrtype of this DnsRecordEntity.

        DNS record type

        :param rrtype: The rrtype of this DnsRecordEntity.
        :type rrtype: str
        """

        self._rrtype = rrtype

    @property
    def value(self):
        """Gets the value of this DnsRecordEntity.

        DNS record value

        :return: The value of this DnsRecordEntity.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this DnsRecordEntity.

        DNS record value

        :param value: The value of this DnsRecordEntity.
        :type value: str
        """

        self._value = value
