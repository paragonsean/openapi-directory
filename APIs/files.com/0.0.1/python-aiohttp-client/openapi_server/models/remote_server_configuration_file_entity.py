# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemoteServerConfigurationFileEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_token: str=None, config_version: str=None, hostname: str=None, id: int=None, permission_set: str=None, port: int=None, private_key: str=None, public_key: str=None, root: str=None, server_host_key: str=None, status: str=None, subdomain: str=None):
        """RemoteServerConfigurationFileEntity - a model defined in OpenAPI

        :param api_token: The api_token of this RemoteServerConfigurationFileEntity.
        :param config_version: The config_version of this RemoteServerConfigurationFileEntity.
        :param hostname: The hostname of this RemoteServerConfigurationFileEntity.
        :param id: The id of this RemoteServerConfigurationFileEntity.
        :param permission_set: The permission_set of this RemoteServerConfigurationFileEntity.
        :param port: The port of this RemoteServerConfigurationFileEntity.
        :param private_key: The private_key of this RemoteServerConfigurationFileEntity.
        :param public_key: The public_key of this RemoteServerConfigurationFileEntity.
        :param root: The root of this RemoteServerConfigurationFileEntity.
        :param server_host_key: The server_host_key of this RemoteServerConfigurationFileEntity.
        :param status: The status of this RemoteServerConfigurationFileEntity.
        :param subdomain: The subdomain of this RemoteServerConfigurationFileEntity.
        """
        self.openapi_types = {
            'api_token': str,
            'config_version': str,
            'hostname': str,
            'id': int,
            'permission_set': str,
            'port': int,
            'private_key': str,
            'public_key': str,
            'root': str,
            'server_host_key': str,
            'status': str,
            'subdomain': str
        }

        self.attribute_map = {
            'api_token': 'api_token',
            'config_version': 'config_version',
            'hostname': 'hostname',
            'id': 'id',
            'permission_set': 'permission_set',
            'port': 'port',
            'private_key': 'private_key',
            'public_key': 'public_key',
            'root': 'root',
            'server_host_key': 'server_host_key',
            'status': 'status',
            'subdomain': 'subdomain'
        }

        self._api_token = api_token
        self._config_version = config_version
        self._hostname = hostname
        self._id = id
        self._permission_set = permission_set
        self._port = port
        self._private_key = private_key
        self._public_key = public_key
        self._root = root
        self._server_host_key = server_host_key
        self._status = status
        self._subdomain = subdomain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoteServerConfigurationFileEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoteServerConfigurationFileEntity of this RemoteServerConfigurationFileEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_token(self):
        """Gets the api_token of this RemoteServerConfigurationFileEntity.

        Files Agent API Token

        :return: The api_token of this RemoteServerConfigurationFileEntity.
        :rtype: str
        """
        return self._api_token

    @api_token.setter
    def api_token(self, api_token):
        """Sets the api_token of this RemoteServerConfigurationFileEntity.

        Files Agent API Token

        :param api_token: The api_token of this RemoteServerConfigurationFileEntity.
        :type api_token: str
        """

        self._api_token = api_token

    @property
    def config_version(self):
        """Gets the config_version of this RemoteServerConfigurationFileEntity.

        agent config version

        :return: The config_version of this RemoteServerConfigurationFileEntity.
        :rtype: str
        """
        return self._config_version

    @config_version.setter
    def config_version(self, config_version):
        """Sets the config_version of this RemoteServerConfigurationFileEntity.

        agent config version

        :param config_version: The config_version of this RemoteServerConfigurationFileEntity.
        :type config_version: str
        """

        self._config_version = config_version

    @property
    def hostname(self):
        """Gets the hostname of this RemoteServerConfigurationFileEntity.


        :return: The hostname of this RemoteServerConfigurationFileEntity.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this RemoteServerConfigurationFileEntity.


        :param hostname: The hostname of this RemoteServerConfigurationFileEntity.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def id(self):
        """Gets the id of this RemoteServerConfigurationFileEntity.

        Agent ID

        :return: The id of this RemoteServerConfigurationFileEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RemoteServerConfigurationFileEntity.

        Agent ID

        :param id: The id of this RemoteServerConfigurationFileEntity.
        :type id: int
        """

        self._id = id

    @property
    def permission_set(self):
        """Gets the permission_set of this RemoteServerConfigurationFileEntity.

        

        :return: The permission_set of this RemoteServerConfigurationFileEntity.
        :rtype: str
        """
        return self._permission_set

    @permission_set.setter
    def permission_set(self, permission_set):
        """Sets the permission_set of this RemoteServerConfigurationFileEntity.

        

        :param permission_set: The permission_set of this RemoteServerConfigurationFileEntity.
        :type permission_set: str
        """

        self._permission_set = permission_set

    @property
    def port(self):
        """Gets the port of this RemoteServerConfigurationFileEntity.

        Incoming port for files agent connections

        :return: The port of this RemoteServerConfigurationFileEntity.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this RemoteServerConfigurationFileEntity.

        Incoming port for files agent connections

        :param port: The port of this RemoteServerConfigurationFileEntity.
        :type port: int
        """

        self._port = port

    @property
    def private_key(self):
        """Gets the private_key of this RemoteServerConfigurationFileEntity.

        private key

        :return: The private_key of this RemoteServerConfigurationFileEntity.
        :rtype: str
        """
        return self._private_key

    @private_key.setter
    def private_key(self, private_key):
        """Sets the private_key of this RemoteServerConfigurationFileEntity.

        private key

        :param private_key: The private_key of this RemoteServerConfigurationFileEntity.
        :type private_key: str
        """

        self._private_key = private_key

    @property
    def public_key(self):
        """Gets the public_key of this RemoteServerConfigurationFileEntity.

        public key

        :return: The public_key of this RemoteServerConfigurationFileEntity.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key):
        """Sets the public_key of this RemoteServerConfigurationFileEntity.

        public key

        :param public_key: The public_key of this RemoteServerConfigurationFileEntity.
        :type public_key: str
        """

        self._public_key = public_key

    @property
    def root(self):
        """Gets the root of this RemoteServerConfigurationFileEntity.

        Agent local root path

        :return: The root of this RemoteServerConfigurationFileEntity.
        :rtype: str
        """
        return self._root

    @root.setter
    def root(self, root):
        """Sets the root of this RemoteServerConfigurationFileEntity.

        Agent local root path

        :param root: The root of this RemoteServerConfigurationFileEntity.
        :type root: str
        """

        self._root = root

    @property
    def server_host_key(self):
        """Gets the server_host_key of this RemoteServerConfigurationFileEntity.


        :return: The server_host_key of this RemoteServerConfigurationFileEntity.
        :rtype: str
        """
        return self._server_host_key

    @server_host_key.setter
    def server_host_key(self, server_host_key):
        """Sets the server_host_key of this RemoteServerConfigurationFileEntity.


        :param server_host_key: The server_host_key of this RemoteServerConfigurationFileEntity.
        :type server_host_key: str
        """

        self._server_host_key = server_host_key

    @property
    def status(self):
        """Gets the status of this RemoteServerConfigurationFileEntity.

        either running or shutdown

        :return: The status of this RemoteServerConfigurationFileEntity.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RemoteServerConfigurationFileEntity.

        either running or shutdown

        :param status: The status of this RemoteServerConfigurationFileEntity.
        :type status: str
        """

        self._status = status

    @property
    def subdomain(self):
        """Gets the subdomain of this RemoteServerConfigurationFileEntity.


        :return: The subdomain of this RemoteServerConfigurationFileEntity.
        :rtype: str
        """
        return self._subdomain

    @subdomain.setter
    def subdomain(self, subdomain):
        """Sets the subdomain of this RemoteServerConfigurationFileEntity.


        :param subdomain: The subdomain of this RemoteServerConfigurationFileEntity.
        :type subdomain: str
        """

        self._subdomain = subdomain
