# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class As2StationEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, hex_public_certificate_serial: str=None, id: int=None, name: str=None, private_key_md5: str=None, private_key_password_md5: str=None, public_certificate_issuer: str=None, public_certificate_md5: str=None, public_certificate_not_after: str=None, public_certificate_not_before: str=None, public_certificate_serial: str=None, public_certificate_subject: str=None, uri: str=None):
        """As2StationEntity - a model defined in OpenAPI

        :param domain: The domain of this As2StationEntity.
        :param hex_public_certificate_serial: The hex_public_certificate_serial of this As2StationEntity.
        :param id: The id of this As2StationEntity.
        :param name: The name of this As2StationEntity.
        :param private_key_md5: The private_key_md5 of this As2StationEntity.
        :param private_key_password_md5: The private_key_password_md5 of this As2StationEntity.
        :param public_certificate_issuer: The public_certificate_issuer of this As2StationEntity.
        :param public_certificate_md5: The public_certificate_md5 of this As2StationEntity.
        :param public_certificate_not_after: The public_certificate_not_after of this As2StationEntity.
        :param public_certificate_not_before: The public_certificate_not_before of this As2StationEntity.
        :param public_certificate_serial: The public_certificate_serial of this As2StationEntity.
        :param public_certificate_subject: The public_certificate_subject of this As2StationEntity.
        :param uri: The uri of this As2StationEntity.
        """
        self.openapi_types = {
            'domain': str,
            'hex_public_certificate_serial': str,
            'id': int,
            'name': str,
            'private_key_md5': str,
            'private_key_password_md5': str,
            'public_certificate_issuer': str,
            'public_certificate_md5': str,
            'public_certificate_not_after': str,
            'public_certificate_not_before': str,
            'public_certificate_serial': str,
            'public_certificate_subject': str,
            'uri': str
        }

        self.attribute_map = {
            'domain': 'domain',
            'hex_public_certificate_serial': 'hex_public_certificate_serial',
            'id': 'id',
            'name': 'name',
            'private_key_md5': 'private_key_md5',
            'private_key_password_md5': 'private_key_password_md5',
            'public_certificate_issuer': 'public_certificate_issuer',
            'public_certificate_md5': 'public_certificate_md5',
            'public_certificate_not_after': 'public_certificate_not_after',
            'public_certificate_not_before': 'public_certificate_not_before',
            'public_certificate_serial': 'public_certificate_serial',
            'public_certificate_subject': 'public_certificate_subject',
            'uri': 'uri'
        }

        self._domain = domain
        self._hex_public_certificate_serial = hex_public_certificate_serial
        self._id = id
        self._name = name
        self._private_key_md5 = private_key_md5
        self._private_key_password_md5 = private_key_password_md5
        self._public_certificate_issuer = public_certificate_issuer
        self._public_certificate_md5 = public_certificate_md5
        self._public_certificate_not_after = public_certificate_not_after
        self._public_certificate_not_before = public_certificate_not_before
        self._public_certificate_serial = public_certificate_serial
        self._public_certificate_subject = public_certificate_subject
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'As2StationEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The As2StationEntity of this As2StationEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this As2StationEntity.

        The station's AS2 domain name.

        :return: The domain of this As2StationEntity.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this As2StationEntity.

        The station's AS2 domain name.

        :param domain: The domain of this As2StationEntity.
        :type domain: str
        """

        self._domain = domain

    @property
    def hex_public_certificate_serial(self):
        """Gets the hex_public_certificate_serial of this As2StationEntity.

        Serial of public certificate used for message security in hex format.

        :return: The hex_public_certificate_serial of this As2StationEntity.
        :rtype: str
        """
        return self._hex_public_certificate_serial

    @hex_public_certificate_serial.setter
    def hex_public_certificate_serial(self, hex_public_certificate_serial):
        """Sets the hex_public_certificate_serial of this As2StationEntity.

        Serial of public certificate used for message security in hex format.

        :param hex_public_certificate_serial: The hex_public_certificate_serial of this As2StationEntity.
        :type hex_public_certificate_serial: str
        """

        self._hex_public_certificate_serial = hex_public_certificate_serial

    @property
    def id(self):
        """Gets the id of this As2StationEntity.

        Id of the AS2 Station.

        :return: The id of this As2StationEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this As2StationEntity.

        Id of the AS2 Station.

        :param id: The id of this As2StationEntity.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this As2StationEntity.

        The station's formal AS2 name.

        :return: The name of this As2StationEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this As2StationEntity.

        The station's formal AS2 name.

        :param name: The name of this As2StationEntity.
        :type name: str
        """

        self._name = name

    @property
    def private_key_md5(self):
        """Gets the private_key_md5 of this As2StationEntity.

        MD5 hash of private key used for message security.

        :return: The private_key_md5 of this As2StationEntity.
        :rtype: str
        """
        return self._private_key_md5

    @private_key_md5.setter
    def private_key_md5(self, private_key_md5):
        """Sets the private_key_md5 of this As2StationEntity.

        MD5 hash of private key used for message security.

        :param private_key_md5: The private_key_md5 of this As2StationEntity.
        :type private_key_md5: str
        """

        self._private_key_md5 = private_key_md5

    @property
    def private_key_password_md5(self):
        """Gets the private_key_password_md5 of this As2StationEntity.

        MD5 hash of private key password used for message security.

        :return: The private_key_password_md5 of this As2StationEntity.
        :rtype: str
        """
        return self._private_key_password_md5

    @private_key_password_md5.setter
    def private_key_password_md5(self, private_key_password_md5):
        """Sets the private_key_password_md5 of this As2StationEntity.

        MD5 hash of private key password used for message security.

        :param private_key_password_md5: The private_key_password_md5 of this As2StationEntity.
        :type private_key_password_md5: str
        """

        self._private_key_password_md5 = private_key_password_md5

    @property
    def public_certificate_issuer(self):
        """Gets the public_certificate_issuer of this As2StationEntity.

        Issuer of public certificate used for message security.

        :return: The public_certificate_issuer of this As2StationEntity.
        :rtype: str
        """
        return self._public_certificate_issuer

    @public_certificate_issuer.setter
    def public_certificate_issuer(self, public_certificate_issuer):
        """Sets the public_certificate_issuer of this As2StationEntity.

        Issuer of public certificate used for message security.

        :param public_certificate_issuer: The public_certificate_issuer of this As2StationEntity.
        :type public_certificate_issuer: str
        """

        self._public_certificate_issuer = public_certificate_issuer

    @property
    def public_certificate_md5(self):
        """Gets the public_certificate_md5 of this As2StationEntity.

        MD5 hash of public certificate used for message security.

        :return: The public_certificate_md5 of this As2StationEntity.
        :rtype: str
        """
        return self._public_certificate_md5

    @public_certificate_md5.setter
    def public_certificate_md5(self, public_certificate_md5):
        """Sets the public_certificate_md5 of this As2StationEntity.

        MD5 hash of public certificate used for message security.

        :param public_certificate_md5: The public_certificate_md5 of this As2StationEntity.
        :type public_certificate_md5: str
        """

        self._public_certificate_md5 = public_certificate_md5

    @property
    def public_certificate_not_after(self):
        """Gets the public_certificate_not_after of this As2StationEntity.

        Not after value of public certificate used for message security.

        :return: The public_certificate_not_after of this As2StationEntity.
        :rtype: str
        """
        return self._public_certificate_not_after

    @public_certificate_not_after.setter
    def public_certificate_not_after(self, public_certificate_not_after):
        """Sets the public_certificate_not_after of this As2StationEntity.

        Not after value of public certificate used for message security.

        :param public_certificate_not_after: The public_certificate_not_after of this As2StationEntity.
        :type public_certificate_not_after: str
        """

        self._public_certificate_not_after = public_certificate_not_after

    @property
    def public_certificate_not_before(self):
        """Gets the public_certificate_not_before of this As2StationEntity.

        Not before value of public certificate used for message security.

        :return: The public_certificate_not_before of this As2StationEntity.
        :rtype: str
        """
        return self._public_certificate_not_before

    @public_certificate_not_before.setter
    def public_certificate_not_before(self, public_certificate_not_before):
        """Sets the public_certificate_not_before of this As2StationEntity.

        Not before value of public certificate used for message security.

        :param public_certificate_not_before: The public_certificate_not_before of this As2StationEntity.
        :type public_certificate_not_before: str
        """

        self._public_certificate_not_before = public_certificate_not_before

    @property
    def public_certificate_serial(self):
        """Gets the public_certificate_serial of this As2StationEntity.

        Serial of public certificate used for message security.

        :return: The public_certificate_serial of this As2StationEntity.
        :rtype: str
        """
        return self._public_certificate_serial

    @public_certificate_serial.setter
    def public_certificate_serial(self, public_certificate_serial):
        """Sets the public_certificate_serial of this As2StationEntity.

        Serial of public certificate used for message security.

        :param public_certificate_serial: The public_certificate_serial of this As2StationEntity.
        :type public_certificate_serial: str
        """

        self._public_certificate_serial = public_certificate_serial

    @property
    def public_certificate_subject(self):
        """Gets the public_certificate_subject of this As2StationEntity.

        Subject of public certificate used for message security.

        :return: The public_certificate_subject of this As2StationEntity.
        :rtype: str
        """
        return self._public_certificate_subject

    @public_certificate_subject.setter
    def public_certificate_subject(self, public_certificate_subject):
        """Sets the public_certificate_subject of this As2StationEntity.

        Subject of public certificate used for message security.

        :param public_certificate_subject: The public_certificate_subject of this As2StationEntity.
        :type public_certificate_subject: str
        """

        self._public_certificate_subject = public_certificate_subject

    @property
    def uri(self):
        """Gets the uri of this As2StationEntity.

        Public URI for sending AS2 message to.

        :return: The uri of this As2StationEntity.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this As2StationEntity.

        Public URI for sending AS2 message to.

        :param uri: The uri of this As2StationEntity.
        :type uri: str
        """

        self._uri = uri
