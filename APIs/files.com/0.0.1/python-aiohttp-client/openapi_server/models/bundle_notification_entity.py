# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BundleNotificationEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bundle_id: int=None, id: int=None, notify_on_registration: bool=None, notify_on_upload: bool=None, user_id: int=None):
        """BundleNotificationEntity - a model defined in OpenAPI

        :param bundle_id: The bundle_id of this BundleNotificationEntity.
        :param id: The id of this BundleNotificationEntity.
        :param notify_on_registration: The notify_on_registration of this BundleNotificationEntity.
        :param notify_on_upload: The notify_on_upload of this BundleNotificationEntity.
        :param user_id: The user_id of this BundleNotificationEntity.
        """
        self.openapi_types = {
            'bundle_id': int,
            'id': int,
            'notify_on_registration': bool,
            'notify_on_upload': bool,
            'user_id': int
        }

        self.attribute_map = {
            'bundle_id': 'bundle_id',
            'id': 'id',
            'notify_on_registration': 'notify_on_registration',
            'notify_on_upload': 'notify_on_upload',
            'user_id': 'user_id'
        }

        self._bundle_id = bundle_id
        self._id = id
        self._notify_on_registration = notify_on_registration
        self._notify_on_upload = notify_on_upload
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BundleNotificationEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BundleNotificationEntity of this BundleNotificationEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bundle_id(self):
        """Gets the bundle_id of this BundleNotificationEntity.

        Bundle ID to notify on

        :return: The bundle_id of this BundleNotificationEntity.
        :rtype: int
        """
        return self._bundle_id

    @bundle_id.setter
    def bundle_id(self, bundle_id):
        """Sets the bundle_id of this BundleNotificationEntity.

        Bundle ID to notify on

        :param bundle_id: The bundle_id of this BundleNotificationEntity.
        :type bundle_id: int
        """

        self._bundle_id = bundle_id

    @property
    def id(self):
        """Gets the id of this BundleNotificationEntity.

        Bundle Notification ID

        :return: The id of this BundleNotificationEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BundleNotificationEntity.

        Bundle Notification ID

        :param id: The id of this BundleNotificationEntity.
        :type id: int
        """

        self._id = id

    @property
    def notify_on_registration(self):
        """Gets the notify_on_registration of this BundleNotificationEntity.

        Triggers bundle notification when a registration action occurs for it.

        :return: The notify_on_registration of this BundleNotificationEntity.
        :rtype: bool
        """
        return self._notify_on_registration

    @notify_on_registration.setter
    def notify_on_registration(self, notify_on_registration):
        """Sets the notify_on_registration of this BundleNotificationEntity.

        Triggers bundle notification when a registration action occurs for it.

        :param notify_on_registration: The notify_on_registration of this BundleNotificationEntity.
        :type notify_on_registration: bool
        """

        self._notify_on_registration = notify_on_registration

    @property
    def notify_on_upload(self):
        """Gets the notify_on_upload of this BundleNotificationEntity.

        Triggers bundle notification when a upload action occurs for it.

        :return: The notify_on_upload of this BundleNotificationEntity.
        :rtype: bool
        """
        return self._notify_on_upload

    @notify_on_upload.setter
    def notify_on_upload(self, notify_on_upload):
        """Sets the notify_on_upload of this BundleNotificationEntity.

        Triggers bundle notification when a upload action occurs for it.

        :param notify_on_upload: The notify_on_upload of this BundleNotificationEntity.
        :type notify_on_upload: bool
        """

        self._notify_on_upload = notify_on_upload

    @property
    def user_id(self):
        """Gets the user_id of this BundleNotificationEntity.

        The id of the user to notify.

        :return: The user_id of this BundleNotificationEntity.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this BundleNotificationEntity.

        The id of the user to notify.

        :param user_id: The user_id of this BundleNotificationEntity.
        :type user_id: int
        """

        self._user_id = user_id
