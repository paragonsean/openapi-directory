# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bundle_registration_entity import BundleRegistrationEntity
from openapi_server import util


class BundleDownloadEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bundle_registration: BundleRegistrationEntity=None, created_at: datetime=None, download_method: str=None, path: str=None):
        """BundleDownloadEntity - a model defined in OpenAPI

        :param bundle_registration: The bundle_registration of this BundleDownloadEntity.
        :param created_at: The created_at of this BundleDownloadEntity.
        :param download_method: The download_method of this BundleDownloadEntity.
        :param path: The path of this BundleDownloadEntity.
        """
        self.openapi_types = {
            'bundle_registration': BundleRegistrationEntity,
            'created_at': datetime,
            'download_method': str,
            'path': str
        }

        self.attribute_map = {
            'bundle_registration': 'bundle_registration',
            'created_at': 'created_at',
            'download_method': 'download_method',
            'path': 'path'
        }

        self._bundle_registration = bundle_registration
        self._created_at = created_at
        self._download_method = download_method
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BundleDownloadEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BundleDownloadEntity of this BundleDownloadEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bundle_registration(self):
        """Gets the bundle_registration of this BundleDownloadEntity.


        :return: The bundle_registration of this BundleDownloadEntity.
        :rtype: BundleRegistrationEntity
        """
        return self._bundle_registration

    @bundle_registration.setter
    def bundle_registration(self, bundle_registration):
        """Sets the bundle_registration of this BundleDownloadEntity.


        :param bundle_registration: The bundle_registration of this BundleDownloadEntity.
        :type bundle_registration: BundleRegistrationEntity
        """

        self._bundle_registration = bundle_registration

    @property
    def created_at(self):
        """Gets the created_at of this BundleDownloadEntity.

        Download date/time

        :return: The created_at of this BundleDownloadEntity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this BundleDownloadEntity.

        Download date/time

        :param created_at: The created_at of this BundleDownloadEntity.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def download_method(self):
        """Gets the download_method of this BundleDownloadEntity.

        Download method (file or full_zip)

        :return: The download_method of this BundleDownloadEntity.
        :rtype: str
        """
        return self._download_method

    @download_method.setter
    def download_method(self, download_method):
        """Sets the download_method of this BundleDownloadEntity.

        Download method (file or full_zip)

        :param download_method: The download_method of this BundleDownloadEntity.
        :type download_method: str
        """
        allowed_values = ["file", "full_zip"]  # noqa: E501
        if download_method not in allowed_values:
            raise ValueError(
                "Invalid value for `download_method` ({0}), must be one of {1}"
                .format(download_method, allowed_values)
            )

        self._download_method = download_method

    @property
    def path(self):
        """Gets the path of this BundleDownloadEntity.

        Download path

        :return: The path of this BundleDownloadEntity.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this BundleDownloadEntity.

        Download path

        :param path: The path of this BundleDownloadEntity.
        :type path: str
        """

        self._path = path
