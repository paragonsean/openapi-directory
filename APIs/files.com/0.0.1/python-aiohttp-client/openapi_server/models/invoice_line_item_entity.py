# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InvoiceLineItemEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, created_at: datetime=None, description: str=None, plan: str=None, service_end_at: datetime=None, service_start_at: datetime=None, site: str=None, type: str=None, updated_at: datetime=None):
        """InvoiceLineItemEntity - a model defined in OpenAPI

        :param amount: The amount of this InvoiceLineItemEntity.
        :param created_at: The created_at of this InvoiceLineItemEntity.
        :param description: The description of this InvoiceLineItemEntity.
        :param plan: The plan of this InvoiceLineItemEntity.
        :param service_end_at: The service_end_at of this InvoiceLineItemEntity.
        :param service_start_at: The service_start_at of this InvoiceLineItemEntity.
        :param site: The site of this InvoiceLineItemEntity.
        :param type: The type of this InvoiceLineItemEntity.
        :param updated_at: The updated_at of this InvoiceLineItemEntity.
        """
        self.openapi_types = {
            'amount': float,
            'created_at': datetime,
            'description': str,
            'plan': str,
            'service_end_at': datetime,
            'service_start_at': datetime,
            'site': str,
            'type': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'amount': 'amount',
            'created_at': 'created_at',
            'description': 'description',
            'plan': 'plan',
            'service_end_at': 'service_end_at',
            'service_start_at': 'service_start_at',
            'site': 'site',
            'type': 'type',
            'updated_at': 'updated_at'
        }

        self._amount = amount
        self._created_at = created_at
        self._description = description
        self._plan = plan
        self._service_end_at = service_end_at
        self._service_start_at = service_start_at
        self._site = site
        self._type = type
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceLineItemEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvoiceLineItemEntity of this InvoiceLineItemEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this InvoiceLineItemEntity.

        Invoice line item amount

        :return: The amount of this InvoiceLineItemEntity.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this InvoiceLineItemEntity.

        Invoice line item amount

        :param amount: The amount of this InvoiceLineItemEntity.
        :type amount: float
        """

        self._amount = amount

    @property
    def created_at(self):
        """Gets the created_at of this InvoiceLineItemEntity.

        Invoice line item created at date/time

        :return: The created_at of this InvoiceLineItemEntity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InvoiceLineItemEntity.

        Invoice line item created at date/time

        :param created_at: The created_at of this InvoiceLineItemEntity.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this InvoiceLineItemEntity.

        Invoice line item description

        :return: The description of this InvoiceLineItemEntity.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InvoiceLineItemEntity.

        Invoice line item description

        :param description: The description of this InvoiceLineItemEntity.
        :type description: str
        """

        self._description = description

    @property
    def plan(self):
        """Gets the plan of this InvoiceLineItemEntity.

        Plan name

        :return: The plan of this InvoiceLineItemEntity.
        :rtype: str
        """
        return self._plan

    @plan.setter
    def plan(self, plan):
        """Sets the plan of this InvoiceLineItemEntity.

        Plan name

        :param plan: The plan of this InvoiceLineItemEntity.
        :type plan: str
        """

        self._plan = plan

    @property
    def service_end_at(self):
        """Gets the service_end_at of this InvoiceLineItemEntity.

        Invoice line item service end date/time

        :return: The service_end_at of this InvoiceLineItemEntity.
        :rtype: datetime
        """
        return self._service_end_at

    @service_end_at.setter
    def service_end_at(self, service_end_at):
        """Sets the service_end_at of this InvoiceLineItemEntity.

        Invoice line item service end date/time

        :param service_end_at: The service_end_at of this InvoiceLineItemEntity.
        :type service_end_at: datetime
        """

        self._service_end_at = service_end_at

    @property
    def service_start_at(self):
        """Gets the service_start_at of this InvoiceLineItemEntity.

        Invoice line item service start date/time

        :return: The service_start_at of this InvoiceLineItemEntity.
        :rtype: datetime
        """
        return self._service_start_at

    @service_start_at.setter
    def service_start_at(self, service_start_at):
        """Sets the service_start_at of this InvoiceLineItemEntity.

        Invoice line item service start date/time

        :param service_start_at: The service_start_at of this InvoiceLineItemEntity.
        :type service_start_at: datetime
        """

        self._service_start_at = service_start_at

    @property
    def site(self):
        """Gets the site of this InvoiceLineItemEntity.

        Site name

        :return: The site of this InvoiceLineItemEntity.
        :rtype: str
        """
        return self._site

    @site.setter
    def site(self, site):
        """Sets the site of this InvoiceLineItemEntity.

        Site name

        :param site: The site of this InvoiceLineItemEntity.
        :type site: str
        """

        self._site = site

    @property
    def type(self):
        """Gets the type of this InvoiceLineItemEntity.

        Invoice line item type

        :return: The type of this InvoiceLineItemEntity.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InvoiceLineItemEntity.

        Invoice line item type

        :param type: The type of this InvoiceLineItemEntity.
        :type type: str
        """
        allowed_values = ["invoice", "invoice_adjustment", "usage_overage", "user_overage", "addon_subscription", "misc_fee", "usage_overage_adjustment", "user_overage_adjustment", "addon_subscription_adjustment", "misc_fee_adjustment", "credit_expiration"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this InvoiceLineItemEntity.

        Invoice line item updated date/time

        :return: The updated_at of this InvoiceLineItemEntity.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this InvoiceLineItemEntity.

        Invoice line item updated date/time

        :param updated_at: The updated_at of this InvoiceLineItemEntity.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
