# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RequestEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automation_id: str=None, destination: str=None, id: int=None, path: str=None, source: str=None, user_display_name: str=None):
        """RequestEntity - a model defined in OpenAPI

        :param automation_id: The automation_id of this RequestEntity.
        :param destination: The destination of this RequestEntity.
        :param id: The id of this RequestEntity.
        :param path: The path of this RequestEntity.
        :param source: The source of this RequestEntity.
        :param user_display_name: The user_display_name of this RequestEntity.
        """
        self.openapi_types = {
            'automation_id': str,
            'destination': str,
            'id': int,
            'path': str,
            'source': str,
            'user_display_name': str
        }

        self.attribute_map = {
            'automation_id': 'automation_id',
            'destination': 'destination',
            'id': 'id',
            'path': 'path',
            'source': 'source',
            'user_display_name': 'user_display_name'
        }

        self._automation_id = automation_id
        self._destination = destination
        self._id = id
        self._path = path
        self._source = source
        self._user_display_name = user_display_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RequestEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RequestEntity of this RequestEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automation_id(self):
        """Gets the automation_id of this RequestEntity.

        ID of automation that created request

        :return: The automation_id of this RequestEntity.
        :rtype: str
        """
        return self._automation_id

    @automation_id.setter
    def automation_id(self, automation_id):
        """Sets the automation_id of this RequestEntity.

        ID of automation that created request

        :param automation_id: The automation_id of this RequestEntity.
        :type automation_id: str
        """

        self._automation_id = automation_id

    @property
    def destination(self):
        """Gets the destination of this RequestEntity.

        Destination filename

        :return: The destination of this RequestEntity.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this RequestEntity.

        Destination filename

        :param destination: The destination of this RequestEntity.
        :type destination: str
        """

        self._destination = destination

    @property
    def id(self):
        """Gets the id of this RequestEntity.

        Request ID

        :return: The id of this RequestEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RequestEntity.

        Request ID

        :param id: The id of this RequestEntity.
        :type id: int
        """

        self._id = id

    @property
    def path(self):
        """Gets the path of this RequestEntity.

        Folder path

        :return: The path of this RequestEntity.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this RequestEntity.

        Folder path

        :param path: The path of this RequestEntity.
        :type path: str
        """

        self._path = path

    @property
    def source(self):
        """Gets the source of this RequestEntity.

        Source filename, if applicable

        :return: The source of this RequestEntity.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this RequestEntity.

        Source filename, if applicable

        :param source: The source of this RequestEntity.
        :type source: str
        """

        self._source = source

    @property
    def user_display_name(self):
        """Gets the user_display_name of this RequestEntity.

        User making the request (if applicable)

        :return: The user_display_name of this RequestEntity.
        :rtype: str
        """
        return self._user_display_name

    @user_display_name.setter
    def user_display_name(self, user_display_name):
        """Sets the user_display_name of this RequestEntity.

        User making the request (if applicable)

        :param user_display_name: The user_display_name of this RequestEntity.
        :type user_display_name: str
        """

        self._user_display_name = user_display_name
