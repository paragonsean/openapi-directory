# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PreviewEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, download_uri: str=None, id: int=None, size: str=None, status: str=None, type: str=None):
        """PreviewEntity - a model defined in OpenAPI

        :param download_uri: The download_uri of this PreviewEntity.
        :param id: The id of this PreviewEntity.
        :param size: The size of this PreviewEntity.
        :param status: The status of this PreviewEntity.
        :param type: The type of this PreviewEntity.
        """
        self.openapi_types = {
            'download_uri': str,
            'id': int,
            'size': str,
            'status': str,
            'type': str
        }

        self.attribute_map = {
            'download_uri': 'download_uri',
            'id': 'id',
            'size': 'size',
            'status': 'status',
            'type': 'type'
        }

        self._download_uri = download_uri
        self._id = id
        self._size = size
        self._status = status
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreviewEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PreviewEntity of this PreviewEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def download_uri(self):
        """Gets the download_uri of this PreviewEntity.

        Link to download preview

        :return: The download_uri of this PreviewEntity.
        :rtype: str
        """
        return self._download_uri

    @download_uri.setter
    def download_uri(self, download_uri):
        """Sets the download_uri of this PreviewEntity.

        Link to download preview

        :param download_uri: The download_uri of this PreviewEntity.
        :type download_uri: str
        """

        self._download_uri = download_uri

    @property
    def id(self):
        """Gets the id of this PreviewEntity.

        Preview ID

        :return: The id of this PreviewEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PreviewEntity.

        Preview ID

        :param id: The id of this PreviewEntity.
        :type id: int
        """

        self._id = id

    @property
    def size(self):
        """Gets the size of this PreviewEntity.

        Preview size

        :return: The size of this PreviewEntity.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this PreviewEntity.

        Preview size

        :param size: The size of this PreviewEntity.
        :type size: str
        """

        self._size = size

    @property
    def status(self):
        """Gets the status of this PreviewEntity.

        Preview status.  Can be invalid, not_generated, generating, complete, or file_too_large

        :return: The status of this PreviewEntity.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PreviewEntity.

        Preview status.  Can be invalid, not_generated, generating, complete, or file_too_large

        :param status: The status of this PreviewEntity.
        :type status: str
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this PreviewEntity.

        Preview type. Can be image, pdf, pdf_native, video, or audio

        :return: The type of this PreviewEntity.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PreviewEntity.

        Preview type. Can be image, pdf, pdf_native, video, or audio

        :param type: The type of this PreviewEntity.
        :type type: str
        """

        self._type = type
