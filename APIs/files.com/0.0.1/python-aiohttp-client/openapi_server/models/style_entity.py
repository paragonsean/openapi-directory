# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_entity import ImageEntity
from openapi_server import util


class StyleEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, logo: ImageEntity=None, path: str=None, thumbnail: ImageEntity=None):
        """StyleEntity - a model defined in OpenAPI

        :param id: The id of this StyleEntity.
        :param logo: The logo of this StyleEntity.
        :param path: The path of this StyleEntity.
        :param thumbnail: The thumbnail of this StyleEntity.
        """
        self.openapi_types = {
            'id': int,
            'logo': ImageEntity,
            'path': str,
            'thumbnail': ImageEntity
        }

        self.attribute_map = {
            'id': 'id',
            'logo': 'logo',
            'path': 'path',
            'thumbnail': 'thumbnail'
        }

        self._id = id
        self._logo = logo
        self._path = path
        self._thumbnail = thumbnail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StyleEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StyleEntity of this StyleEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this StyleEntity.

        Style ID

        :return: The id of this StyleEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StyleEntity.

        Style ID

        :param id: The id of this StyleEntity.
        :type id: int
        """

        self._id = id

    @property
    def logo(self):
        """Gets the logo of this StyleEntity.


        :return: The logo of this StyleEntity.
        :rtype: ImageEntity
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this StyleEntity.


        :param logo: The logo of this StyleEntity.
        :type logo: ImageEntity
        """

        self._logo = logo

    @property
    def path(self):
        """Gets the path of this StyleEntity.

        Folder path

        :return: The path of this StyleEntity.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this StyleEntity.

        Folder path

        :param path: The path of this StyleEntity.
        :type path: str
        """

        self._path = path

    @property
    def thumbnail(self):
        """Gets the thumbnail of this StyleEntity.


        :return: The thumbnail of this StyleEntity.
        :rtype: ImageEntity
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail):
        """Sets the thumbnail of this StyleEntity.


        :param thumbnail: The thumbnail of this StyleEntity.
        :type thumbnail: ImageEntity
        """

        self._thumbnail = thumbnail
