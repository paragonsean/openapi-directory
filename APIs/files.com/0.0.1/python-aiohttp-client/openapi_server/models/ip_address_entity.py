# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IpAddressEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, associated_with: str=None, group_id: int=None, id: str=None, ip_addresses: List[str]=None):
        """IpAddressEntity - a model defined in OpenAPI

        :param associated_with: The associated_with of this IpAddressEntity.
        :param group_id: The group_id of this IpAddressEntity.
        :param id: The id of this IpAddressEntity.
        :param ip_addresses: The ip_addresses of this IpAddressEntity.
        """
        self.openapi_types = {
            'associated_with': str,
            'group_id': int,
            'id': str,
            'ip_addresses': List[str]
        }

        self.attribute_map = {
            'associated_with': 'associated_with',
            'group_id': 'group_id',
            'id': 'id',
            'ip_addresses': 'ip_addresses'
        }

        self._associated_with = associated_with
        self._group_id = group_id
        self._id = id
        self._ip_addresses = ip_addresses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpAddressEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IpAddressEntity of this IpAddressEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def associated_with(self):
        """Gets the associated_with of this IpAddressEntity.

        The object that this public IP address list is associated with.

        :return: The associated_with of this IpAddressEntity.
        :rtype: str
        """
        return self._associated_with

    @associated_with.setter
    def associated_with(self, associated_with):
        """Sets the associated_with of this IpAddressEntity.

        The object that this public IP address list is associated with.

        :param associated_with: The associated_with of this IpAddressEntity.
        :type associated_with: str
        """

        self._associated_with = associated_with

    @property
    def group_id(self):
        """Gets the group_id of this IpAddressEntity.

        Group ID

        :return: The group_id of this IpAddressEntity.
        :rtype: int
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this IpAddressEntity.

        Group ID

        :param group_id: The group_id of this IpAddressEntity.
        :type group_id: int
        """

        self._group_id = group_id

    @property
    def id(self):
        """Gets the id of this IpAddressEntity.

        Unique label for list; used by Zapier and other integrations.

        :return: The id of this IpAddressEntity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IpAddressEntity.

        Unique label for list; used by Zapier and other integrations.

        :param id: The id of this IpAddressEntity.
        :type id: str
        """

        self._id = id

    @property
    def ip_addresses(self):
        """Gets the ip_addresses of this IpAddressEntity.

        A list of IP addresses.

        :return: The ip_addresses of this IpAddressEntity.
        :rtype: List[str]
        """
        return self._ip_addresses

    @ip_addresses.setter
    def ip_addresses(self, ip_addresses):
        """Sets the ip_addresses of this IpAddressEntity.

        A list of IP addresses.

        :param ip_addresses: The ip_addresses of this IpAddressEntity.
        :type ip_addresses: List[str]
        """

        self._ip_addresses = ip_addresses
