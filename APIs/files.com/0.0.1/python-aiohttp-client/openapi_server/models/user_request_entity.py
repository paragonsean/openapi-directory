# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserRequestEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: str=None, email: str=None, id: int=None, name: str=None):
        """UserRequestEntity - a model defined in OpenAPI

        :param details: The details of this UserRequestEntity.
        :param email: The email of this UserRequestEntity.
        :param id: The id of this UserRequestEntity.
        :param name: The name of this UserRequestEntity.
        """
        self.openapi_types = {
            'details': str,
            'email': str,
            'id': int,
            'name': str
        }

        self.attribute_map = {
            'details': 'details',
            'email': 'email',
            'id': 'id',
            'name': 'name'
        }

        self._details = details
        self._email = email
        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserRequestEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserRequestEntity of this UserRequestEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this UserRequestEntity.

        Details of the user's request

        :return: The details of this UserRequestEntity.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this UserRequestEntity.

        Details of the user's request

        :param details: The details of this UserRequestEntity.
        :type details: str
        """

        self._details = details

    @property
    def email(self):
        """Gets the email of this UserRequestEntity.

        User email address

        :return: The email of this UserRequestEntity.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UserRequestEntity.

        User email address

        :param email: The email of this UserRequestEntity.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this UserRequestEntity.

        ID

        :return: The id of this UserRequestEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UserRequestEntity.

        ID

        :param id: The id of this UserRequestEntity.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this UserRequestEntity.

        User's full name

        :return: The name of this UserRequestEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserRequestEntity.

        User's full name

        :param name: The name of this UserRequestEntity.
        :type name: str
        """

        self._name = name
