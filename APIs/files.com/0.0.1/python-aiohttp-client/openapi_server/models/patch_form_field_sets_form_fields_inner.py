# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PatchFormFieldSetsFormFieldsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_option: str=None, field_type: str=None, help_text: str=None, id: int=None, label: str=None, options_for_select: str=None, required: bool=None):
        """PatchFormFieldSetsFormFieldsInner - a model defined in OpenAPI

        :param default_option: The default_option of this PatchFormFieldSetsFormFieldsInner.
        :param field_type: The field_type of this PatchFormFieldSetsFormFieldsInner.
        :param help_text: The help_text of this PatchFormFieldSetsFormFieldsInner.
        :param id: The id of this PatchFormFieldSetsFormFieldsInner.
        :param label: The label of this PatchFormFieldSetsFormFieldsInner.
        :param options_for_select: The options_for_select of this PatchFormFieldSetsFormFieldsInner.
        :param required: The required of this PatchFormFieldSetsFormFieldsInner.
        """
        self.openapi_types = {
            'default_option': str,
            'field_type': str,
            'help_text': str,
            'id': int,
            'label': str,
            'options_for_select': str,
            'required': bool
        }

        self.attribute_map = {
            'default_option': 'default_option',
            'field_type': 'field_type',
            'help_text': 'help_text',
            'id': 'id',
            'label': 'label',
            'options_for_select': 'options_for_select',
            'required': 'required'
        }

        self._default_option = default_option
        self._field_type = field_type
        self._help_text = help_text
        self._id = id
        self._label = label
        self._options_for_select = options_for_select
        self._required = required

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchFormFieldSetsFormFieldsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The patchFormFieldSets_form_fields_inner of this PatchFormFieldSetsFormFieldsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_option(self):
        """Gets the default_option of this PatchFormFieldSetsFormFieldsInner.

        Default option to be preselected in the dropdown or radio.

        :return: The default_option of this PatchFormFieldSetsFormFieldsInner.
        :rtype: str
        """
        return self._default_option

    @default_option.setter
    def default_option(self, default_option):
        """Sets the default_option of this PatchFormFieldSetsFormFieldsInner.

        Default option to be preselected in the dropdown or radio.

        :param default_option: The default_option of this PatchFormFieldSetsFormFieldsInner.
        :type default_option: str
        """

        self._default_option = default_option

    @property
    def field_type(self):
        """Gets the field_type of this PatchFormFieldSetsFormFieldsInner.

        Type of field: text, text_area, dropdown, or radio

        :return: The field_type of this PatchFormFieldSetsFormFieldsInner.
        :rtype: str
        """
        return self._field_type

    @field_type.setter
    def field_type(self, field_type):
        """Sets the field_type of this PatchFormFieldSetsFormFieldsInner.

        Type of field: text, text_area, dropdown, or radio

        :param field_type: The field_type of this PatchFormFieldSetsFormFieldsInner.
        :type field_type: str
        """

        self._field_type = field_type

    @property
    def help_text(self):
        """Gets the help_text of this PatchFormFieldSetsFormFieldsInner.

        Help text of field

        :return: The help_text of this PatchFormFieldSetsFormFieldsInner.
        :rtype: str
        """
        return self._help_text

    @help_text.setter
    def help_text(self, help_text):
        """Sets the help_text of this PatchFormFieldSetsFormFieldsInner.

        Help text of field

        :param help_text: The help_text of this PatchFormFieldSetsFormFieldsInner.
        :type help_text: str
        """

        self._help_text = help_text

    @property
    def id(self):
        """Gets the id of this PatchFormFieldSetsFormFieldsInner.

        Id of existing Form Field

        :return: The id of this PatchFormFieldSetsFormFieldsInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PatchFormFieldSetsFormFieldsInner.

        Id of existing Form Field

        :param id: The id of this PatchFormFieldSetsFormFieldsInner.
        :type id: int
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this PatchFormFieldSetsFormFieldsInner.

        Label of Field

        :return: The label of this PatchFormFieldSetsFormFieldsInner.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this PatchFormFieldSetsFormFieldsInner.

        Label of Field

        :param label: The label of this PatchFormFieldSetsFormFieldsInner.
        :type label: str
        """

        self._label = label

    @property
    def options_for_select(self):
        """Gets the options_for_select of this PatchFormFieldSetsFormFieldsInner.

        List of options for dropdown or radio

        :return: The options_for_select of this PatchFormFieldSetsFormFieldsInner.
        :rtype: str
        """
        return self._options_for_select

    @options_for_select.setter
    def options_for_select(self, options_for_select):
        """Sets the options_for_select of this PatchFormFieldSetsFormFieldsInner.

        List of options for dropdown or radio

        :param options_for_select: The options_for_select of this PatchFormFieldSetsFormFieldsInner.
        :type options_for_select: str
        """

        self._options_for_select = options_for_select

    @property
    def required(self):
        """Gets the required of this PatchFormFieldSetsFormFieldsInner.

        Is this a required field? (default true)

        :return: The required of this PatchFormFieldSetsFormFieldsInner.
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this PatchFormFieldSetsFormFieldsInner.

        Is this a required field? (default true)

        :param required: The required of this PatchFormFieldSetsFormFieldsInner.
        :type required: bool
        """

        self._required = required
