# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BehaviorEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attachment_url: str=None, behavior: str=None, description: str=None, id: int=None, name: str=None, path: str=None, value: object=None):
        """BehaviorEntity - a model defined in OpenAPI

        :param attachment_url: The attachment_url of this BehaviorEntity.
        :param behavior: The behavior of this BehaviorEntity.
        :param description: The description of this BehaviorEntity.
        :param id: The id of this BehaviorEntity.
        :param name: The name of this BehaviorEntity.
        :param path: The path of this BehaviorEntity.
        :param value: The value of this BehaviorEntity.
        """
        self.openapi_types = {
            'attachment_url': str,
            'behavior': str,
            'description': str,
            'id': int,
            'name': str,
            'path': str,
            'value': object
        }

        self.attribute_map = {
            'attachment_url': 'attachment_url',
            'behavior': 'behavior',
            'description': 'description',
            'id': 'id',
            'name': 'name',
            'path': 'path',
            'value': 'value'
        }

        self._attachment_url = attachment_url
        self._behavior = behavior
        self._description = description
        self._id = id
        self._name = name
        self._path = path
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BehaviorEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BehaviorEntity of this BehaviorEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attachment_url(self):
        """Gets the attachment_url of this BehaviorEntity.

        URL for attached file

        :return: The attachment_url of this BehaviorEntity.
        :rtype: str
        """
        return self._attachment_url

    @attachment_url.setter
    def attachment_url(self, attachment_url):
        """Sets the attachment_url of this BehaviorEntity.

        URL for attached file

        :param attachment_url: The attachment_url of this BehaviorEntity.
        :type attachment_url: str
        """

        self._attachment_url = attachment_url

    @property
    def behavior(self):
        """Gets the behavior of this BehaviorEntity.

        Behavior type.

        :return: The behavior of this BehaviorEntity.
        :rtype: str
        """
        return self._behavior

    @behavior.setter
    def behavior(self, behavior):
        """Sets the behavior of this BehaviorEntity.

        Behavior type.

        :param behavior: The behavior of this BehaviorEntity.
        :type behavior: str
        """

        self._behavior = behavior

    @property
    def description(self):
        """Gets the description of this BehaviorEntity.

        Description for this behavior.

        :return: The description of this BehaviorEntity.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BehaviorEntity.

        Description for this behavior.

        :param description: The description of this BehaviorEntity.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this BehaviorEntity.

        Folder behavior ID

        :return: The id of this BehaviorEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BehaviorEntity.

        Folder behavior ID

        :param id: The id of this BehaviorEntity.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this BehaviorEntity.

        Name for this behavior.

        :return: The name of this BehaviorEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BehaviorEntity.

        Name for this behavior.

        :param name: The name of this BehaviorEntity.
        :type name: str
        """

        self._name = name

    @property
    def path(self):
        """Gets the path of this BehaviorEntity.

        Folder path

        :return: The path of this BehaviorEntity.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this BehaviorEntity.

        Folder path

        :param path: The path of this BehaviorEntity.
        :type path: str
        """

        self._path = path

    @property
    def value(self):
        """Gets the value of this BehaviorEntity.

        Settings for this behavior.  See the section above for an example value to provide here.  Formatting is different for each Behavior type.  May be sent as nested JSON or a single JSON-encoded string.  If using XML encoding for the API call, this data must be sent as a JSON-encoded string.

        :return: The value of this BehaviorEntity.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this BehaviorEntity.

        Settings for this behavior.  See the section above for an example value to provide here.  Formatting is different for each Behavior type.  May be sent as nested JSON or a single JSON-encoded string.  If using XML encoding for the API call, this data must be sent as a JSON-encoded string.

        :param value: The value of this BehaviorEntity.
        :type value: object
        """

        self._value = value
