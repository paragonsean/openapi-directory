# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BundleRegistrationEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bundle_code: str=None, bundle_id: int=None, bundle_recipient_id: int=None, clickwrap_body: str=None, code: str=None, company: str=None, created_at: datetime=None, email: str=None, form_field_data: object=None, form_field_set_id: int=None, inbox_code: str=None, ip: str=None, name: str=None):
        """BundleRegistrationEntity - a model defined in OpenAPI

        :param bundle_code: The bundle_code of this BundleRegistrationEntity.
        :param bundle_id: The bundle_id of this BundleRegistrationEntity.
        :param bundle_recipient_id: The bundle_recipient_id of this BundleRegistrationEntity.
        :param clickwrap_body: The clickwrap_body of this BundleRegistrationEntity.
        :param code: The code of this BundleRegistrationEntity.
        :param company: The company of this BundleRegistrationEntity.
        :param created_at: The created_at of this BundleRegistrationEntity.
        :param email: The email of this BundleRegistrationEntity.
        :param form_field_data: The form_field_data of this BundleRegistrationEntity.
        :param form_field_set_id: The form_field_set_id of this BundleRegistrationEntity.
        :param inbox_code: The inbox_code of this BundleRegistrationEntity.
        :param ip: The ip of this BundleRegistrationEntity.
        :param name: The name of this BundleRegistrationEntity.
        """
        self.openapi_types = {
            'bundle_code': str,
            'bundle_id': int,
            'bundle_recipient_id': int,
            'clickwrap_body': str,
            'code': str,
            'company': str,
            'created_at': datetime,
            'email': str,
            'form_field_data': object,
            'form_field_set_id': int,
            'inbox_code': str,
            'ip': str,
            'name': str
        }

        self.attribute_map = {
            'bundle_code': 'bundle_code',
            'bundle_id': 'bundle_id',
            'bundle_recipient_id': 'bundle_recipient_id',
            'clickwrap_body': 'clickwrap_body',
            'code': 'code',
            'company': 'company',
            'created_at': 'created_at',
            'email': 'email',
            'form_field_data': 'form_field_data',
            'form_field_set_id': 'form_field_set_id',
            'inbox_code': 'inbox_code',
            'ip': 'ip',
            'name': 'name'
        }

        self._bundle_code = bundle_code
        self._bundle_id = bundle_id
        self._bundle_recipient_id = bundle_recipient_id
        self._clickwrap_body = clickwrap_body
        self._code = code
        self._company = company
        self._created_at = created_at
        self._email = email
        self._form_field_data = form_field_data
        self._form_field_set_id = form_field_set_id
        self._inbox_code = inbox_code
        self._ip = ip
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BundleRegistrationEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BundleRegistrationEntity of this BundleRegistrationEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bundle_code(self):
        """Gets the bundle_code of this BundleRegistrationEntity.

        Bundle URL code

        :return: The bundle_code of this BundleRegistrationEntity.
        :rtype: str
        """
        return self._bundle_code

    @bundle_code.setter
    def bundle_code(self, bundle_code):
        """Sets the bundle_code of this BundleRegistrationEntity.

        Bundle URL code

        :param bundle_code: The bundle_code of this BundleRegistrationEntity.
        :type bundle_code: str
        """

        self._bundle_code = bundle_code

    @property
    def bundle_id(self):
        """Gets the bundle_id of this BundleRegistrationEntity.

        Id of associated bundle

        :return: The bundle_id of this BundleRegistrationEntity.
        :rtype: int
        """
        return self._bundle_id

    @bundle_id.setter
    def bundle_id(self, bundle_id):
        """Sets the bundle_id of this BundleRegistrationEntity.

        Id of associated bundle

        :param bundle_id: The bundle_id of this BundleRegistrationEntity.
        :type bundle_id: int
        """

        self._bundle_id = bundle_id

    @property
    def bundle_recipient_id(self):
        """Gets the bundle_recipient_id of this BundleRegistrationEntity.

        Id of associated bundle recipient

        :return: The bundle_recipient_id of this BundleRegistrationEntity.
        :rtype: int
        """
        return self._bundle_recipient_id

    @bundle_recipient_id.setter
    def bundle_recipient_id(self, bundle_recipient_id):
        """Sets the bundle_recipient_id of this BundleRegistrationEntity.

        Id of associated bundle recipient

        :param bundle_recipient_id: The bundle_recipient_id of this BundleRegistrationEntity.
        :type bundle_recipient_id: int
        """

        self._bundle_recipient_id = bundle_recipient_id

    @property
    def clickwrap_body(self):
        """Gets the clickwrap_body of this BundleRegistrationEntity.

        Clickwrap text that was shown to the registrant

        :return: The clickwrap_body of this BundleRegistrationEntity.
        :rtype: str
        """
        return self._clickwrap_body

    @clickwrap_body.setter
    def clickwrap_body(self, clickwrap_body):
        """Sets the clickwrap_body of this BundleRegistrationEntity.

        Clickwrap text that was shown to the registrant

        :param clickwrap_body: The clickwrap_body of this BundleRegistrationEntity.
        :type clickwrap_body: str
        """

        self._clickwrap_body = clickwrap_body

    @property
    def code(self):
        """Gets the code of this BundleRegistrationEntity.

        Registration cookie code

        :return: The code of this BundleRegistrationEntity.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this BundleRegistrationEntity.

        Registration cookie code

        :param code: The code of this BundleRegistrationEntity.
        :type code: str
        """

        self._code = code

    @property
    def company(self):
        """Gets the company of this BundleRegistrationEntity.

        Registrant company name

        :return: The company of this BundleRegistrationEntity.
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this BundleRegistrationEntity.

        Registrant company name

        :param company: The company of this BundleRegistrationEntity.
        :type company: str
        """

        self._company = company

    @property
    def created_at(self):
        """Gets the created_at of this BundleRegistrationEntity.

        Registration creation date/time

        :return: The created_at of this BundleRegistrationEntity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this BundleRegistrationEntity.

        Registration creation date/time

        :param created_at: The created_at of this BundleRegistrationEntity.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def email(self):
        """Gets the email of this BundleRegistrationEntity.

        Registrant email address

        :return: The email of this BundleRegistrationEntity.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this BundleRegistrationEntity.

        Registrant email address

        :param email: The email of this BundleRegistrationEntity.
        :type email: str
        """

        self._email = email

    @property
    def form_field_data(self):
        """Gets the form_field_data of this BundleRegistrationEntity.

        Data for form field set with form field ids as keys and user data as values

        :return: The form_field_data of this BundleRegistrationEntity.
        :rtype: object
        """
        return self._form_field_data

    @form_field_data.setter
    def form_field_data(self, form_field_data):
        """Sets the form_field_data of this BundleRegistrationEntity.

        Data for form field set with form field ids as keys and user data as values

        :param form_field_data: The form_field_data of this BundleRegistrationEntity.
        :type form_field_data: object
        """

        self._form_field_data = form_field_data

    @property
    def form_field_set_id(self):
        """Gets the form_field_set_id of this BundleRegistrationEntity.

        Id of associated form field set

        :return: The form_field_set_id of this BundleRegistrationEntity.
        :rtype: int
        """
        return self._form_field_set_id

    @form_field_set_id.setter
    def form_field_set_id(self, form_field_set_id):
        """Sets the form_field_set_id of this BundleRegistrationEntity.

        Id of associated form field set

        :param form_field_set_id: The form_field_set_id of this BundleRegistrationEntity.
        :type form_field_set_id: int
        """

        self._form_field_set_id = form_field_set_id

    @property
    def inbox_code(self):
        """Gets the inbox_code of this BundleRegistrationEntity.

        InboxRegistration cookie code, if there is an associated InboxRegistration

        :return: The inbox_code of this BundleRegistrationEntity.
        :rtype: str
        """
        return self._inbox_code

    @inbox_code.setter
    def inbox_code(self, inbox_code):
        """Sets the inbox_code of this BundleRegistrationEntity.

        InboxRegistration cookie code, if there is an associated InboxRegistration

        :param inbox_code: The inbox_code of this BundleRegistrationEntity.
        :type inbox_code: str
        """

        self._inbox_code = inbox_code

    @property
    def ip(self):
        """Gets the ip of this BundleRegistrationEntity.

        Registrant IP Address

        :return: The ip of this BundleRegistrationEntity.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this BundleRegistrationEntity.

        Registrant IP Address

        :param ip: The ip of this BundleRegistrationEntity.
        :type ip: str
        """

        self._ip = ip

    @property
    def name(self):
        """Gets the name of this BundleRegistrationEntity.

        Registrant name

        :return: The name of this BundleRegistrationEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BundleRegistrationEntity.

        Registrant name

        :param name: The name of this BundleRegistrationEntity.
        :type name: str
        """

        self._name = name
