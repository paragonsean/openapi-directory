# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class As2IncomingMessageEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_log: str=None, as2_from: str=None, as2_partner_id: int=None, as2_station_id: int=None, as2_to: str=None, attachment_filename: str=None, body_size: str=None, content_type: str=None, created_at: datetime=None, _date: str=None, encrypted_uri: str=None, hex_recipient_serial: str=None, http_headers: object=None, http_response_code: str=None, http_response_headers: object=None, id: int=None, ip: str=None, mdn_response_uri: str=None, message_decrypted: bool=None, message_id: str=None, message_mdn_returned: bool=None, message_processing_success: bool=None, message_received: bool=None, message_signature_verified: bool=None, mic: str=None, mic_algo: str=None, processing_result: str=None, processing_result_description: str=None, raw_uri: str=None, recipient_issuer: str=None, recipient_serial: str=None, smime_signed_uri: str=None, smime_uri: str=None, subject: str=None, uuid: str=None):
        """As2IncomingMessageEntity - a model defined in OpenAPI

        :param activity_log: The activity_log of this As2IncomingMessageEntity.
        :param as2_from: The as2_from of this As2IncomingMessageEntity.
        :param as2_partner_id: The as2_partner_id of this As2IncomingMessageEntity.
        :param as2_station_id: The as2_station_id of this As2IncomingMessageEntity.
        :param as2_to: The as2_to of this As2IncomingMessageEntity.
        :param attachment_filename: The attachment_filename of this As2IncomingMessageEntity.
        :param body_size: The body_size of this As2IncomingMessageEntity.
        :param content_type: The content_type of this As2IncomingMessageEntity.
        :param created_at: The created_at of this As2IncomingMessageEntity.
        :param _date: The _date of this As2IncomingMessageEntity.
        :param encrypted_uri: The encrypted_uri of this As2IncomingMessageEntity.
        :param hex_recipient_serial: The hex_recipient_serial of this As2IncomingMessageEntity.
        :param http_headers: The http_headers of this As2IncomingMessageEntity.
        :param http_response_code: The http_response_code of this As2IncomingMessageEntity.
        :param http_response_headers: The http_response_headers of this As2IncomingMessageEntity.
        :param id: The id of this As2IncomingMessageEntity.
        :param ip: The ip of this As2IncomingMessageEntity.
        :param mdn_response_uri: The mdn_response_uri of this As2IncomingMessageEntity.
        :param message_decrypted: The message_decrypted of this As2IncomingMessageEntity.
        :param message_id: The message_id of this As2IncomingMessageEntity.
        :param message_mdn_returned: The message_mdn_returned of this As2IncomingMessageEntity.
        :param message_processing_success: The message_processing_success of this As2IncomingMessageEntity.
        :param message_received: The message_received of this As2IncomingMessageEntity.
        :param message_signature_verified: The message_signature_verified of this As2IncomingMessageEntity.
        :param mic: The mic of this As2IncomingMessageEntity.
        :param mic_algo: The mic_algo of this As2IncomingMessageEntity.
        :param processing_result: The processing_result of this As2IncomingMessageEntity.
        :param processing_result_description: The processing_result_description of this As2IncomingMessageEntity.
        :param raw_uri: The raw_uri of this As2IncomingMessageEntity.
        :param recipient_issuer: The recipient_issuer of this As2IncomingMessageEntity.
        :param recipient_serial: The recipient_serial of this As2IncomingMessageEntity.
        :param smime_signed_uri: The smime_signed_uri of this As2IncomingMessageEntity.
        :param smime_uri: The smime_uri of this As2IncomingMessageEntity.
        :param subject: The subject of this As2IncomingMessageEntity.
        :param uuid: The uuid of this As2IncomingMessageEntity.
        """
        self.openapi_types = {
            'activity_log': str,
            'as2_from': str,
            'as2_partner_id': int,
            'as2_station_id': int,
            'as2_to': str,
            'attachment_filename': str,
            'body_size': str,
            'content_type': str,
            'created_at': datetime,
            '_date': str,
            'encrypted_uri': str,
            'hex_recipient_serial': str,
            'http_headers': object,
            'http_response_code': str,
            'http_response_headers': object,
            'id': int,
            'ip': str,
            'mdn_response_uri': str,
            'message_decrypted': bool,
            'message_id': str,
            'message_mdn_returned': bool,
            'message_processing_success': bool,
            'message_received': bool,
            'message_signature_verified': bool,
            'mic': str,
            'mic_algo': str,
            'processing_result': str,
            'processing_result_description': str,
            'raw_uri': str,
            'recipient_issuer': str,
            'recipient_serial': str,
            'smime_signed_uri': str,
            'smime_uri': str,
            'subject': str,
            'uuid': str
        }

        self.attribute_map = {
            'activity_log': 'activity_log',
            'as2_from': 'as2_from',
            'as2_partner_id': 'as2_partner_id',
            'as2_station_id': 'as2_station_id',
            'as2_to': 'as2_to',
            'attachment_filename': 'attachment_filename',
            'body_size': 'body_size',
            'content_type': 'content_type',
            'created_at': 'created_at',
            '_date': 'date',
            'encrypted_uri': 'encrypted_uri',
            'hex_recipient_serial': 'hex_recipient_serial',
            'http_headers': 'http_headers',
            'http_response_code': 'http_response_code',
            'http_response_headers': 'http_response_headers',
            'id': 'id',
            'ip': 'ip',
            'mdn_response_uri': 'mdn_response_uri',
            'message_decrypted': 'message_decrypted',
            'message_id': 'message_id',
            'message_mdn_returned': 'message_mdn_returned',
            'message_processing_success': 'message_processing_success',
            'message_received': 'message_received',
            'message_signature_verified': 'message_signature_verified',
            'mic': 'mic',
            'mic_algo': 'mic_algo',
            'processing_result': 'processing_result',
            'processing_result_description': 'processing_result_description',
            'raw_uri': 'raw_uri',
            'recipient_issuer': 'recipient_issuer',
            'recipient_serial': 'recipient_serial',
            'smime_signed_uri': 'smime_signed_uri',
            'smime_uri': 'smime_uri',
            'subject': 'subject',
            'uuid': 'uuid'
        }

        self._activity_log = activity_log
        self._as2_from = as2_from
        self._as2_partner_id = as2_partner_id
        self._as2_station_id = as2_station_id
        self._as2_to = as2_to
        self._attachment_filename = attachment_filename
        self._body_size = body_size
        self._content_type = content_type
        self._created_at = created_at
        self.__date = _date
        self._encrypted_uri = encrypted_uri
        self._hex_recipient_serial = hex_recipient_serial
        self._http_headers = http_headers
        self._http_response_code = http_response_code
        self._http_response_headers = http_response_headers
        self._id = id
        self._ip = ip
        self._mdn_response_uri = mdn_response_uri
        self._message_decrypted = message_decrypted
        self._message_id = message_id
        self._message_mdn_returned = message_mdn_returned
        self._message_processing_success = message_processing_success
        self._message_received = message_received
        self._message_signature_verified = message_signature_verified
        self._mic = mic
        self._mic_algo = mic_algo
        self._processing_result = processing_result
        self._processing_result_description = processing_result_description
        self._raw_uri = raw_uri
        self._recipient_issuer = recipient_issuer
        self._recipient_serial = recipient_serial
        self._smime_signed_uri = smime_signed_uri
        self._smime_uri = smime_uri
        self._subject = subject
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'As2IncomingMessageEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The As2IncomingMessageEntity of this As2IncomingMessageEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_log(self):
        """Gets the activity_log of this As2IncomingMessageEntity.

        JSON Structure of the activity log.

        :return: The activity_log of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._activity_log

    @activity_log.setter
    def activity_log(self, activity_log):
        """Sets the activity_log of this As2IncomingMessageEntity.

        JSON Structure of the activity log.

        :param activity_log: The activity_log of this As2IncomingMessageEntity.
        :type activity_log: str
        """

        self._activity_log = activity_log

    @property
    def as2_from(self):
        """Gets the as2_from of this As2IncomingMessageEntity.

        AS2 FROM header of message

        :return: The as2_from of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._as2_from

    @as2_from.setter
    def as2_from(self, as2_from):
        """Sets the as2_from of this As2IncomingMessageEntity.

        AS2 FROM header of message

        :param as2_from: The as2_from of this As2IncomingMessageEntity.
        :type as2_from: str
        """

        self._as2_from = as2_from

    @property
    def as2_partner_id(self):
        """Gets the as2_partner_id of this As2IncomingMessageEntity.

        Id of the AS2 Partner associated with this message.

        :return: The as2_partner_id of this As2IncomingMessageEntity.
        :rtype: int
        """
        return self._as2_partner_id

    @as2_partner_id.setter
    def as2_partner_id(self, as2_partner_id):
        """Sets the as2_partner_id of this As2IncomingMessageEntity.

        Id of the AS2 Partner associated with this message.

        :param as2_partner_id: The as2_partner_id of this As2IncomingMessageEntity.
        :type as2_partner_id: int
        """

        self._as2_partner_id = as2_partner_id

    @property
    def as2_station_id(self):
        """Gets the as2_station_id of this As2IncomingMessageEntity.

        Id of the AS2 Station associated with this message.

        :return: The as2_station_id of this As2IncomingMessageEntity.
        :rtype: int
        """
        return self._as2_station_id

    @as2_station_id.setter
    def as2_station_id(self, as2_station_id):
        """Sets the as2_station_id of this As2IncomingMessageEntity.

        Id of the AS2 Station associated with this message.

        :param as2_station_id: The as2_station_id of this As2IncomingMessageEntity.
        :type as2_station_id: int
        """

        self._as2_station_id = as2_station_id

    @property
    def as2_to(self):
        """Gets the as2_to of this As2IncomingMessageEntity.

        AS2 TO header of message

        :return: The as2_to of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._as2_to

    @as2_to.setter
    def as2_to(self, as2_to):
        """Sets the as2_to of this As2IncomingMessageEntity.

        AS2 TO header of message

        :param as2_to: The as2_to of this As2IncomingMessageEntity.
        :type as2_to: str
        """

        self._as2_to = as2_to

    @property
    def attachment_filename(self):
        """Gets the attachment_filename of this As2IncomingMessageEntity.

        Filename of the file being received.

        :return: The attachment_filename of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._attachment_filename

    @attachment_filename.setter
    def attachment_filename(self, attachment_filename):
        """Sets the attachment_filename of this As2IncomingMessageEntity.

        Filename of the file being received.

        :param attachment_filename: The attachment_filename of this As2IncomingMessageEntity.
        :type attachment_filename: str
        """

        self._attachment_filename = attachment_filename

    @property
    def body_size(self):
        """Gets the body_size of this As2IncomingMessageEntity.

        Encrypted Payload Body Size

        :return: The body_size of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._body_size

    @body_size.setter
    def body_size(self, body_size):
        """Sets the body_size of this As2IncomingMessageEntity.

        Encrypted Payload Body Size

        :param body_size: The body_size of this As2IncomingMessageEntity.
        :type body_size: str
        """

        self._body_size = body_size

    @property
    def content_type(self):
        """Gets the content_type of this As2IncomingMessageEntity.

        Content Type header of the incoming message.

        :return: The content_type of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this As2IncomingMessageEntity.

        Content Type header of the incoming message.

        :param content_type: The content_type of this As2IncomingMessageEntity.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def created_at(self):
        """Gets the created_at of this As2IncomingMessageEntity.

        Message creation date/time

        :return: The created_at of this As2IncomingMessageEntity.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this As2IncomingMessageEntity.

        Message creation date/time

        :param created_at: The created_at of this As2IncomingMessageEntity.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def _date(self):
        """Gets the _date of this As2IncomingMessageEntity.

        Date Header

        :return: The _date of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this As2IncomingMessageEntity.

        Date Header

        :param _date: The _date of this As2IncomingMessageEntity.
        :type _date: str
        """

        self.__date = _date

    @property
    def encrypted_uri(self):
        """Gets the encrypted_uri of this As2IncomingMessageEntity.

        URL to download the encrypted signed smime that is to sent as AS2 body

        :return: The encrypted_uri of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._encrypted_uri

    @encrypted_uri.setter
    def encrypted_uri(self, encrypted_uri):
        """Sets the encrypted_uri of this As2IncomingMessageEntity.

        URL to download the encrypted signed smime that is to sent as AS2 body

        :param encrypted_uri: The encrypted_uri of this As2IncomingMessageEntity.
        :type encrypted_uri: str
        """

        self._encrypted_uri = encrypted_uri

    @property
    def hex_recipient_serial(self):
        """Gets the hex_recipient_serial of this As2IncomingMessageEntity.

        Incoming Message Recipient(the Client Cert used to encrypt this message)'s serial in hex format.

        :return: The hex_recipient_serial of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._hex_recipient_serial

    @hex_recipient_serial.setter
    def hex_recipient_serial(self, hex_recipient_serial):
        """Sets the hex_recipient_serial of this As2IncomingMessageEntity.

        Incoming Message Recipient(the Client Cert used to encrypt this message)'s serial in hex format.

        :param hex_recipient_serial: The hex_recipient_serial of this As2IncomingMessageEntity.
        :type hex_recipient_serial: str
        """

        self._hex_recipient_serial = hex_recipient_serial

    @property
    def http_headers(self):
        """Gets the http_headers of this As2IncomingMessageEntity.

        HTTP Headers sent with this message.

        :return: The http_headers of this As2IncomingMessageEntity.
        :rtype: object
        """
        return self._http_headers

    @http_headers.setter
    def http_headers(self, http_headers):
        """Sets the http_headers of this As2IncomingMessageEntity.

        HTTP Headers sent with this message.

        :param http_headers: The http_headers of this As2IncomingMessageEntity.
        :type http_headers: object
        """

        self._http_headers = http_headers

    @property
    def http_response_code(self):
        """Gets the http_response_code of this As2IncomingMessageEntity.

        HTTP Response Code sent for this message

        :return: The http_response_code of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._http_response_code

    @http_response_code.setter
    def http_response_code(self, http_response_code):
        """Sets the http_response_code of this As2IncomingMessageEntity.

        HTTP Response Code sent for this message

        :param http_response_code: The http_response_code of this As2IncomingMessageEntity.
        :type http_response_code: str
        """

        self._http_response_code = http_response_code

    @property
    def http_response_headers(self):
        """Gets the http_response_headers of this As2IncomingMessageEntity.

        HTTP Headers sent for this message.

        :return: The http_response_headers of this As2IncomingMessageEntity.
        :rtype: object
        """
        return self._http_response_headers

    @http_response_headers.setter
    def http_response_headers(self, http_response_headers):
        """Sets the http_response_headers of this As2IncomingMessageEntity.

        HTTP Headers sent for this message.

        :param http_response_headers: The http_response_headers of this As2IncomingMessageEntity.
        :type http_response_headers: object
        """

        self._http_response_headers = http_response_headers

    @property
    def id(self):
        """Gets the id of this As2IncomingMessageEntity.

        Id of the AS2 Partner.

        :return: The id of this As2IncomingMessageEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this As2IncomingMessageEntity.

        Id of the AS2 Partner.

        :param id: The id of this As2IncomingMessageEntity.
        :type id: int
        """

        self._id = id

    @property
    def ip(self):
        """Gets the ip of this As2IncomingMessageEntity.

        IP Address of the Sender

        :return: The ip of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this As2IncomingMessageEntity.

        IP Address of the Sender

        :param ip: The ip of this As2IncomingMessageEntity.
        :type ip: str
        """

        self._ip = ip

    @property
    def mdn_response_uri(self):
        """Gets the mdn_response_uri of this As2IncomingMessageEntity.

        URL to download the http response body

        :return: The mdn_response_uri of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._mdn_response_uri

    @mdn_response_uri.setter
    def mdn_response_uri(self, mdn_response_uri):
        """Sets the mdn_response_uri of this As2IncomingMessageEntity.

        URL to download the http response body

        :param mdn_response_uri: The mdn_response_uri of this As2IncomingMessageEntity.
        :type mdn_response_uri: str
        """

        self._mdn_response_uri = mdn_response_uri

    @property
    def message_decrypted(self):
        """Gets the message_decrypted of this As2IncomingMessageEntity.

        Message decrypted successfully?

        :return: The message_decrypted of this As2IncomingMessageEntity.
        :rtype: bool
        """
        return self._message_decrypted

    @message_decrypted.setter
    def message_decrypted(self, message_decrypted):
        """Sets the message_decrypted of this As2IncomingMessageEntity.

        Message decrypted successfully?

        :param message_decrypted: The message_decrypted of this As2IncomingMessageEntity.
        :type message_decrypted: bool
        """

        self._message_decrypted = message_decrypted

    @property
    def message_id(self):
        """Gets the message_id of this As2IncomingMessageEntity.

        AS2 Message Id

        :return: The message_id of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this As2IncomingMessageEntity.

        AS2 Message Id

        :param message_id: The message_id of this As2IncomingMessageEntity.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def message_mdn_returned(self):
        """Gets the message_mdn_returned of this As2IncomingMessageEntity.

        MDN returned?

        :return: The message_mdn_returned of this As2IncomingMessageEntity.
        :rtype: bool
        """
        return self._message_mdn_returned

    @message_mdn_returned.setter
    def message_mdn_returned(self, message_mdn_returned):
        """Sets the message_mdn_returned of this As2IncomingMessageEntity.

        MDN returned?

        :param message_mdn_returned: The message_mdn_returned of this As2IncomingMessageEntity.
        :type message_mdn_returned: bool
        """

        self._message_mdn_returned = message_mdn_returned

    @property
    def message_processing_success(self):
        """Gets the message_processing_success of this As2IncomingMessageEntity.

        Message processed successfully?

        :return: The message_processing_success of this As2IncomingMessageEntity.
        :rtype: bool
        """
        return self._message_processing_success

    @message_processing_success.setter
    def message_processing_success(self, message_processing_success):
        """Sets the message_processing_success of this As2IncomingMessageEntity.

        Message processed successfully?

        :param message_processing_success: The message_processing_success of this As2IncomingMessageEntity.
        :type message_processing_success: bool
        """

        self._message_processing_success = message_processing_success

    @property
    def message_received(self):
        """Gets the message_received of this As2IncomingMessageEntity.

        Message body received?

        :return: The message_received of this As2IncomingMessageEntity.
        :rtype: bool
        """
        return self._message_received

    @message_received.setter
    def message_received(self, message_received):
        """Sets the message_received of this As2IncomingMessageEntity.

        Message body received?

        :param message_received: The message_received of this As2IncomingMessageEntity.
        :type message_received: bool
        """

        self._message_received = message_received

    @property
    def message_signature_verified(self):
        """Gets the message_signature_verified of this As2IncomingMessageEntity.

        Message signature verified?

        :return: The message_signature_verified of this As2IncomingMessageEntity.
        :rtype: bool
        """
        return self._message_signature_verified

    @message_signature_verified.setter
    def message_signature_verified(self, message_signature_verified):
        """Sets the message_signature_verified of this As2IncomingMessageEntity.

        Message signature verified?

        :param message_signature_verified: The message_signature_verified of this As2IncomingMessageEntity.
        :type message_signature_verified: bool
        """

        self._message_signature_verified = message_signature_verified

    @property
    def mic(self):
        """Gets the mic of this As2IncomingMessageEntity.

        AS2 Message Integrity Check

        :return: The mic of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._mic

    @mic.setter
    def mic(self, mic):
        """Sets the mic of this As2IncomingMessageEntity.

        AS2 Message Integrity Check

        :param mic: The mic of this As2IncomingMessageEntity.
        :type mic: str
        """

        self._mic = mic

    @property
    def mic_algo(self):
        """Gets the mic_algo of this As2IncomingMessageEntity.

        AS2 Message Integrity Check Algorithm Used

        :return: The mic_algo of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._mic_algo

    @mic_algo.setter
    def mic_algo(self, mic_algo):
        """Sets the mic_algo of this As2IncomingMessageEntity.

        AS2 Message Integrity Check Algorithm Used

        :param mic_algo: The mic_algo of this As2IncomingMessageEntity.
        :type mic_algo: str
        """

        self._mic_algo = mic_algo

    @property
    def processing_result(self):
        """Gets the processing_result of this As2IncomingMessageEntity.

        Result of processing.

        :return: The processing_result of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._processing_result

    @processing_result.setter
    def processing_result(self, processing_result):
        """Sets the processing_result of this As2IncomingMessageEntity.

        Result of processing.

        :param processing_result: The processing_result of this As2IncomingMessageEntity.
        :type processing_result: str
        """
        allowed_values = ["not_started", "unable_to_find_station", "unable_to_find_partner", "unable_to_validate_signature", "decrypt_fail", "file_save_fail", "success"]  # noqa: E501
        if processing_result not in allowed_values:
            raise ValueError(
                "Invalid value for `processing_result` ({0}), must be one of {1}"
                .format(processing_result, allowed_values)
            )

        self._processing_result = processing_result

    @property
    def processing_result_description(self):
        """Gets the processing_result_description of this As2IncomingMessageEntity.

        Result of processing description.

        :return: The processing_result_description of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._processing_result_description

    @processing_result_description.setter
    def processing_result_description(self, processing_result_description):
        """Sets the processing_result_description of this As2IncomingMessageEntity.

        Result of processing description.

        :param processing_result_description: The processing_result_description of this As2IncomingMessageEntity.
        :type processing_result_description: str
        """

        self._processing_result_description = processing_result_description

    @property
    def raw_uri(self):
        """Gets the raw_uri of this As2IncomingMessageEntity.

        URL to download the original file contents

        :return: The raw_uri of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._raw_uri

    @raw_uri.setter
    def raw_uri(self, raw_uri):
        """Sets the raw_uri of this As2IncomingMessageEntity.

        URL to download the original file contents

        :param raw_uri: The raw_uri of this As2IncomingMessageEntity.
        :type raw_uri: str
        """

        self._raw_uri = raw_uri

    @property
    def recipient_issuer(self):
        """Gets the recipient_issuer of this As2IncomingMessageEntity.

        Incoming Message Recipient(the Client Cert used to encrypt this message)'s issuer

        :return: The recipient_issuer of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._recipient_issuer

    @recipient_issuer.setter
    def recipient_issuer(self, recipient_issuer):
        """Sets the recipient_issuer of this As2IncomingMessageEntity.

        Incoming Message Recipient(the Client Cert used to encrypt this message)'s issuer

        :param recipient_issuer: The recipient_issuer of this As2IncomingMessageEntity.
        :type recipient_issuer: str
        """

        self._recipient_issuer = recipient_issuer

    @property
    def recipient_serial(self):
        """Gets the recipient_serial of this As2IncomingMessageEntity.

        Incoming Message Recipient(the Client Cert used to encrypt this message)'s serial

        :return: The recipient_serial of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._recipient_serial

    @recipient_serial.setter
    def recipient_serial(self, recipient_serial):
        """Sets the recipient_serial of this As2IncomingMessageEntity.

        Incoming Message Recipient(the Client Cert used to encrypt this message)'s serial

        :param recipient_serial: The recipient_serial of this As2IncomingMessageEntity.
        :type recipient_serial: str
        """

        self._recipient_serial = recipient_serial

    @property
    def smime_signed_uri(self):
        """Gets the smime_signed_uri of this As2IncomingMessageEntity.

        URL to download the file contents as smime with signature

        :return: The smime_signed_uri of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._smime_signed_uri

    @smime_signed_uri.setter
    def smime_signed_uri(self, smime_signed_uri):
        """Sets the smime_signed_uri of this As2IncomingMessageEntity.

        URL to download the file contents as smime with signature

        :param smime_signed_uri: The smime_signed_uri of this As2IncomingMessageEntity.
        :type smime_signed_uri: str
        """

        self._smime_signed_uri = smime_signed_uri

    @property
    def smime_uri(self):
        """Gets the smime_uri of this As2IncomingMessageEntity.

        URL to download the file contents encoded as smime

        :return: The smime_uri of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._smime_uri

    @smime_uri.setter
    def smime_uri(self, smime_uri):
        """Sets the smime_uri of this As2IncomingMessageEntity.

        URL to download the file contents encoded as smime

        :param smime_uri: The smime_uri of this As2IncomingMessageEntity.
        :type smime_uri: str
        """

        self._smime_uri = smime_uri

    @property
    def subject(self):
        """Gets the subject of this As2IncomingMessageEntity.

        AS2 Subject Header

        :return: The subject of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this As2IncomingMessageEntity.

        AS2 Subject Header

        :param subject: The subject of this As2IncomingMessageEntity.
        :type subject: str
        """

        self._subject = subject

    @property
    def uuid(self):
        """Gets the uuid of this As2IncomingMessageEntity.

        UUID assigned to this message.

        :return: The uuid of this As2IncomingMessageEntity.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this As2IncomingMessageEntity.

        UUID assigned to this message.

        :param uuid: The uuid of this As2IncomingMessageEntity.
        :type uuid: str
        """

        self._uuid = uuid
