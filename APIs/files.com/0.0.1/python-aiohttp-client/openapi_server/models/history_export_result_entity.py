# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HistoryExportResultEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, created_at: int=None, created_at_iso8601: int=None, destination: str=None, failure_type: str=None, file_id: int=None, folder: str=None, id: int=None, interface: str=None, ip: str=None, parent_id: int=None, path: str=None, src: str=None, target_expires_at: int=None, target_id: int=None, target_name: str=None, target_permission: str=None, target_permission_set: str=None, target_platform: str=None, target_recursive: bool=None, target_user_id: int=None, target_username: str=None, user_id: int=None, username: str=None):
        """HistoryExportResultEntity - a model defined in OpenAPI

        :param action: The action of this HistoryExportResultEntity.
        :param created_at: The created_at of this HistoryExportResultEntity.
        :param created_at_iso8601: The created_at_iso8601 of this HistoryExportResultEntity.
        :param destination: The destination of this HistoryExportResultEntity.
        :param failure_type: The failure_type of this HistoryExportResultEntity.
        :param file_id: The file_id of this HistoryExportResultEntity.
        :param folder: The folder of this HistoryExportResultEntity.
        :param id: The id of this HistoryExportResultEntity.
        :param interface: The interface of this HistoryExportResultEntity.
        :param ip: The ip of this HistoryExportResultEntity.
        :param parent_id: The parent_id of this HistoryExportResultEntity.
        :param path: The path of this HistoryExportResultEntity.
        :param src: The src of this HistoryExportResultEntity.
        :param target_expires_at: The target_expires_at of this HistoryExportResultEntity.
        :param target_id: The target_id of this HistoryExportResultEntity.
        :param target_name: The target_name of this HistoryExportResultEntity.
        :param target_permission: The target_permission of this HistoryExportResultEntity.
        :param target_permission_set: The target_permission_set of this HistoryExportResultEntity.
        :param target_platform: The target_platform of this HistoryExportResultEntity.
        :param target_recursive: The target_recursive of this HistoryExportResultEntity.
        :param target_user_id: The target_user_id of this HistoryExportResultEntity.
        :param target_username: The target_username of this HistoryExportResultEntity.
        :param user_id: The user_id of this HistoryExportResultEntity.
        :param username: The username of this HistoryExportResultEntity.
        """
        self.openapi_types = {
            'action': str,
            'created_at': int,
            'created_at_iso8601': int,
            'destination': str,
            'failure_type': str,
            'file_id': int,
            'folder': str,
            'id': int,
            'interface': str,
            'ip': str,
            'parent_id': int,
            'path': str,
            'src': str,
            'target_expires_at': int,
            'target_id': int,
            'target_name': str,
            'target_permission': str,
            'target_permission_set': str,
            'target_platform': str,
            'target_recursive': bool,
            'target_user_id': int,
            'target_username': str,
            'user_id': int,
            'username': str
        }

        self.attribute_map = {
            'action': 'action',
            'created_at': 'created_at',
            'created_at_iso8601': 'created_at_iso8601',
            'destination': 'destination',
            'failure_type': 'failure_type',
            'file_id': 'file_id',
            'folder': 'folder',
            'id': 'id',
            'interface': 'interface',
            'ip': 'ip',
            'parent_id': 'parent_id',
            'path': 'path',
            'src': 'src',
            'target_expires_at': 'target_expires_at',
            'target_id': 'target_id',
            'target_name': 'target_name',
            'target_permission': 'target_permission',
            'target_permission_set': 'target_permission_set',
            'target_platform': 'target_platform',
            'target_recursive': 'target_recursive',
            'target_user_id': 'target_user_id',
            'target_username': 'target_username',
            'user_id': 'user_id',
            'username': 'username'
        }

        self._action = action
        self._created_at = created_at
        self._created_at_iso8601 = created_at_iso8601
        self._destination = destination
        self._failure_type = failure_type
        self._file_id = file_id
        self._folder = folder
        self._id = id
        self._interface = interface
        self._ip = ip
        self._parent_id = parent_id
        self._path = path
        self._src = src
        self._target_expires_at = target_expires_at
        self._target_id = target_id
        self._target_name = target_name
        self._target_permission = target_permission
        self._target_permission_set = target_permission_set
        self._target_platform = target_platform
        self._target_recursive = target_recursive
        self._target_user_id = target_user_id
        self._target_username = target_username
        self._user_id = user_id
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoryExportResultEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoryExportResultEntity of this HistoryExportResultEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this HistoryExportResultEntity.

        What action was taken. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`

        :return: The action of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this HistoryExportResultEntity.

        What action was taken. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`

        :param action: The action of this HistoryExportResultEntity.
        :type action: str
        """

        self._action = action

    @property
    def created_at(self):
        """Gets the created_at of this HistoryExportResultEntity.

        When the action happened

        :return: The created_at of this HistoryExportResultEntity.
        :rtype: int
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this HistoryExportResultEntity.

        When the action happened

        :param created_at: The created_at of this HistoryExportResultEntity.
        :type created_at: int
        """

        self._created_at = created_at

    @property
    def created_at_iso8601(self):
        """Gets the created_at_iso8601 of this HistoryExportResultEntity.

        When the action happened, in ISO8601 format.

        :return: The created_at_iso8601 of this HistoryExportResultEntity.
        :rtype: int
        """
        return self._created_at_iso8601

    @created_at_iso8601.setter
    def created_at_iso8601(self, created_at_iso8601):
        """Sets the created_at_iso8601 of this HistoryExportResultEntity.

        When the action happened, in ISO8601 format.

        :param created_at_iso8601: The created_at_iso8601 of this HistoryExportResultEntity.
        :type created_at_iso8601: int
        """

        self._created_at_iso8601 = created_at_iso8601

    @property
    def destination(self):
        """Gets the destination of this HistoryExportResultEntity.

        File moved to this destination folder

        :return: The destination of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this HistoryExportResultEntity.

        File moved to this destination folder

        :param destination: The destination of this HistoryExportResultEntity.
        :type destination: str
        """

        self._destination = destination

    @property
    def failure_type(self):
        """Gets the failure_type of this HistoryExportResultEntity.

        The type of login failure, if applicable.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`

        :return: The failure_type of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._failure_type

    @failure_type.setter
    def failure_type(self, failure_type):
        """Sets the failure_type of this HistoryExportResultEntity.

        The type of login failure, if applicable.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`

        :param failure_type: The failure_type of this HistoryExportResultEntity.
        :type failure_type: str
        """

        self._failure_type = failure_type

    @property
    def file_id(self):
        """Gets the file_id of this HistoryExportResultEntity.

        File ID related to the action

        :return: The file_id of this HistoryExportResultEntity.
        :rtype: int
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id):
        """Sets the file_id of this HistoryExportResultEntity.

        File ID related to the action

        :param file_id: The file_id of this HistoryExportResultEntity.
        :type file_id: int
        """

        self._file_id = file_id

    @property
    def folder(self):
        """Gets the folder of this HistoryExportResultEntity.

        Folder in which the action occurred

        :return: The folder of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._folder

    @folder.setter
    def folder(self, folder):
        """Sets the folder of this HistoryExportResultEntity.

        Folder in which the action occurred

        :param folder: The folder of this HistoryExportResultEntity.
        :type folder: str
        """

        self._folder = folder

    @property
    def id(self):
        """Gets the id of this HistoryExportResultEntity.

        Action ID

        :return: The id of this HistoryExportResultEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HistoryExportResultEntity.

        Action ID

        :param id: The id of this HistoryExportResultEntity.
        :type id: int
        """

        self._id = id

    @property
    def interface(self):
        """Gets the interface of this HistoryExportResultEntity.

        Inteface through which the action was taken. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`

        :return: The interface of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._interface

    @interface.setter
    def interface(self, interface):
        """Sets the interface of this HistoryExportResultEntity.

        Inteface through which the action was taken. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`

        :param interface: The interface of this HistoryExportResultEntity.
        :type interface: str
        """

        self._interface = interface

    @property
    def ip(self):
        """Gets the ip of this HistoryExportResultEntity.

        Client IP that performed the action

        :return: The ip of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this HistoryExportResultEntity.

        Client IP that performed the action

        :param ip: The ip of this HistoryExportResultEntity.
        :type ip: str
        """

        self._ip = ip

    @property
    def parent_id(self):
        """Gets the parent_id of this HistoryExportResultEntity.

        ID of the parent folder

        :return: The parent_id of this HistoryExportResultEntity.
        :rtype: int
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this HistoryExportResultEntity.

        ID of the parent folder

        :param parent_id: The parent_id of this HistoryExportResultEntity.
        :type parent_id: int
        """

        self._parent_id = parent_id

    @property
    def path(self):
        """Gets the path of this HistoryExportResultEntity.

        Path of the related action

        :return: The path of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this HistoryExportResultEntity.

        Path of the related action

        :param path: The path of this HistoryExportResultEntity.
        :type path: str
        """

        self._path = path

    @property
    def src(self):
        """Gets the src of this HistoryExportResultEntity.

        File move originated from this path

        :return: The src of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._src

    @src.setter
    def src(self, src):
        """Sets the src of this HistoryExportResultEntity.

        File move originated from this path

        :param src: The src of this HistoryExportResultEntity.
        :type src: str
        """

        self._src = src

    @property
    def target_expires_at(self):
        """Gets the target_expires_at of this HistoryExportResultEntity.

        If searching for Histories about API keys, this is when the API key will expire

        :return: The target_expires_at of this HistoryExportResultEntity.
        :rtype: int
        """
        return self._target_expires_at

    @target_expires_at.setter
    def target_expires_at(self, target_expires_at):
        """Sets the target_expires_at of this HistoryExportResultEntity.

        If searching for Histories about API keys, this is when the API key will expire

        :param target_expires_at: The target_expires_at of this HistoryExportResultEntity.
        :type target_expires_at: int
        """

        self._target_expires_at = target_expires_at

    @property
    def target_id(self):
        """Gets the target_id of this HistoryExportResultEntity.

        ID of the object (such as Users, or API Keys) on which the action was taken

        :return: The target_id of this HistoryExportResultEntity.
        :rtype: int
        """
        return self._target_id

    @target_id.setter
    def target_id(self, target_id):
        """Sets the target_id of this HistoryExportResultEntity.

        ID of the object (such as Users, or API Keys) on which the action was taken

        :param target_id: The target_id of this HistoryExportResultEntity.
        :type target_id: int
        """

        self._target_id = target_id

    @property
    def target_name(self):
        """Gets the target_name of this HistoryExportResultEntity.

        Name of the User, Group or other object with a name related to this action

        :return: The target_name of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._target_name

    @target_name.setter
    def target_name(self, target_name):
        """Sets the target_name of this HistoryExportResultEntity.

        Name of the User, Group or other object with a name related to this action

        :param target_name: The target_name of this HistoryExportResultEntity.
        :type target_name: str
        """

        self._target_name = target_name

    @property
    def target_permission(self):
        """Gets the target_permission of this HistoryExportResultEntity.

        Permission level of the action

        :return: The target_permission of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._target_permission

    @target_permission.setter
    def target_permission(self, target_permission):
        """Sets the target_permission of this HistoryExportResultEntity.

        Permission level of the action

        :param target_permission: The target_permission of this HistoryExportResultEntity.
        :type target_permission: str
        """

        self._target_permission = target_permission

    @property
    def target_permission_set(self):
        """Gets the target_permission_set of this HistoryExportResultEntity.

        If searching for Histories about API keys, this represents the permission set of the associated  API key

        :return: The target_permission_set of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._target_permission_set

    @target_permission_set.setter
    def target_permission_set(self, target_permission_set):
        """Sets the target_permission_set of this HistoryExportResultEntity.

        If searching for Histories about API keys, this represents the permission set of the associated  API key

        :param target_permission_set: The target_permission_set of this HistoryExportResultEntity.
        :type target_permission_set: str
        """

        self._target_permission_set = target_permission_set

    @property
    def target_platform(self):
        """Gets the target_platform of this HistoryExportResultEntity.

        If searching for Histories about API keys, this is the platform on which the action was taken

        :return: The target_platform of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._target_platform

    @target_platform.setter
    def target_platform(self, target_platform):
        """Sets the target_platform of this HistoryExportResultEntity.

        If searching for Histories about API keys, this is the platform on which the action was taken

        :param target_platform: The target_platform of this HistoryExportResultEntity.
        :type target_platform: str
        """

        self._target_platform = target_platform

    @property
    def target_recursive(self):
        """Gets the target_recursive of this HistoryExportResultEntity.

        Whether or not the action was recursive

        :return: The target_recursive of this HistoryExportResultEntity.
        :rtype: bool
        """
        return self._target_recursive

    @target_recursive.setter
    def target_recursive(self, target_recursive):
        """Sets the target_recursive of this HistoryExportResultEntity.

        Whether or not the action was recursive

        :param target_recursive: The target_recursive of this HistoryExportResultEntity.
        :type target_recursive: bool
        """

        self._target_recursive = target_recursive

    @property
    def target_user_id(self):
        """Gets the target_user_id of this HistoryExportResultEntity.

        If searching for Histories about API keys, this is the User ID on which the action was taken

        :return: The target_user_id of this HistoryExportResultEntity.
        :rtype: int
        """
        return self._target_user_id

    @target_user_id.setter
    def target_user_id(self, target_user_id):
        """Sets the target_user_id of this HistoryExportResultEntity.

        If searching for Histories about API keys, this is the User ID on which the action was taken

        :param target_user_id: The target_user_id of this HistoryExportResultEntity.
        :type target_user_id: int
        """

        self._target_user_id = target_user_id

    @property
    def target_username(self):
        """Gets the target_username of this HistoryExportResultEntity.

        If searching for Histories about API keys, this is the username on which the action was taken

        :return: The target_username of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._target_username

    @target_username.setter
    def target_username(self, target_username):
        """Sets the target_username of this HistoryExportResultEntity.

        If searching for Histories about API keys, this is the username on which the action was taken

        :param target_username: The target_username of this HistoryExportResultEntity.
        :type target_username: str
        """

        self._target_username = target_username

    @property
    def user_id(self):
        """Gets the user_id of this HistoryExportResultEntity.

        User ID

        :return: The user_id of this HistoryExportResultEntity.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this HistoryExportResultEntity.

        User ID

        :param user_id: The user_id of this HistoryExportResultEntity.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def username(self):
        """Gets the username of this HistoryExportResultEntity.

        Username of the user that performed the action

        :return: The username of this HistoryExportResultEntity.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this HistoryExportResultEntity.

        Username of the user that performed the action

        :param username: The username of this HistoryExportResultEntity.
        :type username: str
        """

        self._username = username
