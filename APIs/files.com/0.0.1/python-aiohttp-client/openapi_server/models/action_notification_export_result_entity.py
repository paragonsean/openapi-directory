# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActionNotificationExportResultEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: int=None, folder: str=None, id: int=None, message: str=None, path: str=None, request_headers: str=None, request_method: str=None, request_url: str=None, status: int=None, success: bool=None):
        """ActionNotificationExportResultEntity - a model defined in OpenAPI

        :param created_at: The created_at of this ActionNotificationExportResultEntity.
        :param folder: The folder of this ActionNotificationExportResultEntity.
        :param id: The id of this ActionNotificationExportResultEntity.
        :param message: The message of this ActionNotificationExportResultEntity.
        :param path: The path of this ActionNotificationExportResultEntity.
        :param request_headers: The request_headers of this ActionNotificationExportResultEntity.
        :param request_method: The request_method of this ActionNotificationExportResultEntity.
        :param request_url: The request_url of this ActionNotificationExportResultEntity.
        :param status: The status of this ActionNotificationExportResultEntity.
        :param success: The success of this ActionNotificationExportResultEntity.
        """
        self.openapi_types = {
            'created_at': int,
            'folder': str,
            'id': int,
            'message': str,
            'path': str,
            'request_headers': str,
            'request_method': str,
            'request_url': str,
            'status': int,
            'success': bool
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'folder': 'folder',
            'id': 'id',
            'message': 'message',
            'path': 'path',
            'request_headers': 'request_headers',
            'request_method': 'request_method',
            'request_url': 'request_url',
            'status': 'status',
            'success': 'success'
        }

        self._created_at = created_at
        self._folder = folder
        self._id = id
        self._message = message
        self._path = path
        self._request_headers = request_headers
        self._request_method = request_method
        self._request_url = request_url
        self._status = status
        self._success = success

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionNotificationExportResultEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionNotificationExportResultEntity of this ActionNotificationExportResultEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this ActionNotificationExportResultEntity.

        When the notification was sent.

        :return: The created_at of this ActionNotificationExportResultEntity.
        :rtype: int
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ActionNotificationExportResultEntity.

        When the notification was sent.

        :param created_at: The created_at of this ActionNotificationExportResultEntity.
        :type created_at: int
        """

        self._created_at = created_at

    @property
    def folder(self):
        """Gets the folder of this ActionNotificationExportResultEntity.

        The folder associated with the triggering action for this notification.

        :return: The folder of this ActionNotificationExportResultEntity.
        :rtype: str
        """
        return self._folder

    @folder.setter
    def folder(self, folder):
        """Sets the folder of this ActionNotificationExportResultEntity.

        The folder associated with the triggering action for this notification.

        :param folder: The folder of this ActionNotificationExportResultEntity.
        :type folder: str
        """

        self._folder = folder

    @property
    def id(self):
        """Gets the id of this ActionNotificationExportResultEntity.

        Notification ID

        :return: The id of this ActionNotificationExportResultEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ActionNotificationExportResultEntity.

        Notification ID

        :param id: The id of this ActionNotificationExportResultEntity.
        :type id: int
        """

        self._id = id

    @property
    def message(self):
        """Gets the message of this ActionNotificationExportResultEntity.

        A message indicating the overall status of the webhook notification.

        :return: The message of this ActionNotificationExportResultEntity.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ActionNotificationExportResultEntity.

        A message indicating the overall status of the webhook notification.

        :param message: The message of this ActionNotificationExportResultEntity.
        :type message: str
        """

        self._message = message

    @property
    def path(self):
        """Gets the path of this ActionNotificationExportResultEntity.

        The path to the actual file that triggered this notification.

        :return: The path of this ActionNotificationExportResultEntity.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ActionNotificationExportResultEntity.

        The path to the actual file that triggered this notification.

        :param path: The path of this ActionNotificationExportResultEntity.
        :type path: str
        """

        self._path = path

    @property
    def request_headers(self):
        """Gets the request_headers of this ActionNotificationExportResultEntity.

        A JSON-encoded string with headers that were sent with the webhook.

        :return: The request_headers of this ActionNotificationExportResultEntity.
        :rtype: str
        """
        return self._request_headers

    @request_headers.setter
    def request_headers(self, request_headers):
        """Sets the request_headers of this ActionNotificationExportResultEntity.

        A JSON-encoded string with headers that were sent with the webhook.

        :param request_headers: The request_headers of this ActionNotificationExportResultEntity.
        :type request_headers: str
        """

        self._request_headers = request_headers

    @property
    def request_method(self):
        """Gets the request_method of this ActionNotificationExportResultEntity.

        The HTTP verb used to perform the webhook.

        :return: The request_method of this ActionNotificationExportResultEntity.
        :rtype: str
        """
        return self._request_method

    @request_method.setter
    def request_method(self, request_method):
        """Sets the request_method of this ActionNotificationExportResultEntity.

        The HTTP verb used to perform the webhook.

        :param request_method: The request_method of this ActionNotificationExportResultEntity.
        :type request_method: str
        """

        self._request_method = request_method

    @property
    def request_url(self):
        """Gets the request_url of this ActionNotificationExportResultEntity.

        The webhook request URL.

        :return: The request_url of this ActionNotificationExportResultEntity.
        :rtype: str
        """
        return self._request_url

    @request_url.setter
    def request_url(self, request_url):
        """Sets the request_url of this ActionNotificationExportResultEntity.

        The webhook request URL.

        :param request_url: The request_url of this ActionNotificationExportResultEntity.
        :type request_url: str
        """

        self._request_url = request_url

    @property
    def status(self):
        """Gets the status of this ActionNotificationExportResultEntity.

        HTTP status code returned in the webhook response.

        :return: The status of this ActionNotificationExportResultEntity.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ActionNotificationExportResultEntity.

        HTTP status code returned in the webhook response.

        :param status: The status of this ActionNotificationExportResultEntity.
        :type status: int
        """

        self._status = status

    @property
    def success(self):
        """Gets the success of this ActionNotificationExportResultEntity.

        `true` if the webhook succeeded by receiving a 200 or 204 response.

        :return: The success of this ActionNotificationExportResultEntity.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this ActionNotificationExportResultEntity.

        `true` if the webhook succeeded by receiving a 200 or 204 response.

        :param success: The success of this ActionNotificationExportResultEntity.
        :type success: bool
        """

        self._success = success
