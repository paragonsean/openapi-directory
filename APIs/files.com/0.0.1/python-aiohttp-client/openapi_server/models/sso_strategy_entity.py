# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SsoStrategyEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deprovision_behavior: str=None, deprovision_groups: bool=None, deprovision_users: bool=None, enabled: bool=None, id: int=None, label: str=None, ldap_base_dn: str=None, ldap_domain: str=None, ldap_host: str=None, ldap_host_2: str=None, ldap_host_3: str=None, ldap_port: int=None, ldap_secure: bool=None, ldap_username: str=None, ldap_username_field: str=None, logo_url: str=None, protocol: str=None, provider: str=None, provision_attachments_permission: bool=None, provision_company: str=None, provision_dav_permission: bool=None, provision_email_signup_groups: str=None, provision_ftp_permission: bool=None, provision_group_default: str=None, provision_group_exclusion: str=None, provision_group_inclusion: str=None, provision_group_required: str=None, provision_groups: bool=None, provision_sftp_permission: bool=None, provision_site_admin_groups: str=None, provision_time_zone: str=None, provision_users: bool=None, saml_provider_cert_fingerprint: str=None, saml_provider_issuer_url: str=None, saml_provider_metadata_content: str=None, saml_provider_metadata_url: str=None, saml_provider_slo_target_url: str=None, saml_provider_sso_target_url: str=None, scim_authentication_method: str=None, scim_oauth_access_token: str=None, scim_oauth_access_token_expires_at: str=None, scim_username: str=None, subdomain: str=None):
        """SsoStrategyEntity - a model defined in OpenAPI

        :param deprovision_behavior: The deprovision_behavior of this SsoStrategyEntity.
        :param deprovision_groups: The deprovision_groups of this SsoStrategyEntity.
        :param deprovision_users: The deprovision_users of this SsoStrategyEntity.
        :param enabled: The enabled of this SsoStrategyEntity.
        :param id: The id of this SsoStrategyEntity.
        :param label: The label of this SsoStrategyEntity.
        :param ldap_base_dn: The ldap_base_dn of this SsoStrategyEntity.
        :param ldap_domain: The ldap_domain of this SsoStrategyEntity.
        :param ldap_host: The ldap_host of this SsoStrategyEntity.
        :param ldap_host_2: The ldap_host_2 of this SsoStrategyEntity.
        :param ldap_host_3: The ldap_host_3 of this SsoStrategyEntity.
        :param ldap_port: The ldap_port of this SsoStrategyEntity.
        :param ldap_secure: The ldap_secure of this SsoStrategyEntity.
        :param ldap_username: The ldap_username of this SsoStrategyEntity.
        :param ldap_username_field: The ldap_username_field of this SsoStrategyEntity.
        :param logo_url: The logo_url of this SsoStrategyEntity.
        :param protocol: The protocol of this SsoStrategyEntity.
        :param provider: The provider of this SsoStrategyEntity.
        :param provision_attachments_permission: The provision_attachments_permission of this SsoStrategyEntity.
        :param provision_company: The provision_company of this SsoStrategyEntity.
        :param provision_dav_permission: The provision_dav_permission of this SsoStrategyEntity.
        :param provision_email_signup_groups: The provision_email_signup_groups of this SsoStrategyEntity.
        :param provision_ftp_permission: The provision_ftp_permission of this SsoStrategyEntity.
        :param provision_group_default: The provision_group_default of this SsoStrategyEntity.
        :param provision_group_exclusion: The provision_group_exclusion of this SsoStrategyEntity.
        :param provision_group_inclusion: The provision_group_inclusion of this SsoStrategyEntity.
        :param provision_group_required: The provision_group_required of this SsoStrategyEntity.
        :param provision_groups: The provision_groups of this SsoStrategyEntity.
        :param provision_sftp_permission: The provision_sftp_permission of this SsoStrategyEntity.
        :param provision_site_admin_groups: The provision_site_admin_groups of this SsoStrategyEntity.
        :param provision_time_zone: The provision_time_zone of this SsoStrategyEntity.
        :param provision_users: The provision_users of this SsoStrategyEntity.
        :param saml_provider_cert_fingerprint: The saml_provider_cert_fingerprint of this SsoStrategyEntity.
        :param saml_provider_issuer_url: The saml_provider_issuer_url of this SsoStrategyEntity.
        :param saml_provider_metadata_content: The saml_provider_metadata_content of this SsoStrategyEntity.
        :param saml_provider_metadata_url: The saml_provider_metadata_url of this SsoStrategyEntity.
        :param saml_provider_slo_target_url: The saml_provider_slo_target_url of this SsoStrategyEntity.
        :param saml_provider_sso_target_url: The saml_provider_sso_target_url of this SsoStrategyEntity.
        :param scim_authentication_method: The scim_authentication_method of this SsoStrategyEntity.
        :param scim_oauth_access_token: The scim_oauth_access_token of this SsoStrategyEntity.
        :param scim_oauth_access_token_expires_at: The scim_oauth_access_token_expires_at of this SsoStrategyEntity.
        :param scim_username: The scim_username of this SsoStrategyEntity.
        :param subdomain: The subdomain of this SsoStrategyEntity.
        """
        self.openapi_types = {
            'deprovision_behavior': str,
            'deprovision_groups': bool,
            'deprovision_users': bool,
            'enabled': bool,
            'id': int,
            'label': str,
            'ldap_base_dn': str,
            'ldap_domain': str,
            'ldap_host': str,
            'ldap_host_2': str,
            'ldap_host_3': str,
            'ldap_port': int,
            'ldap_secure': bool,
            'ldap_username': str,
            'ldap_username_field': str,
            'logo_url': str,
            'protocol': str,
            'provider': str,
            'provision_attachments_permission': bool,
            'provision_company': str,
            'provision_dav_permission': bool,
            'provision_email_signup_groups': str,
            'provision_ftp_permission': bool,
            'provision_group_default': str,
            'provision_group_exclusion': str,
            'provision_group_inclusion': str,
            'provision_group_required': str,
            'provision_groups': bool,
            'provision_sftp_permission': bool,
            'provision_site_admin_groups': str,
            'provision_time_zone': str,
            'provision_users': bool,
            'saml_provider_cert_fingerprint': str,
            'saml_provider_issuer_url': str,
            'saml_provider_metadata_content': str,
            'saml_provider_metadata_url': str,
            'saml_provider_slo_target_url': str,
            'saml_provider_sso_target_url': str,
            'scim_authentication_method': str,
            'scim_oauth_access_token': str,
            'scim_oauth_access_token_expires_at': str,
            'scim_username': str,
            'subdomain': str
        }

        self.attribute_map = {
            'deprovision_behavior': 'deprovision_behavior',
            'deprovision_groups': 'deprovision_groups',
            'deprovision_users': 'deprovision_users',
            'enabled': 'enabled',
            'id': 'id',
            'label': 'label',
            'ldap_base_dn': 'ldap_base_dn',
            'ldap_domain': 'ldap_domain',
            'ldap_host': 'ldap_host',
            'ldap_host_2': 'ldap_host_2',
            'ldap_host_3': 'ldap_host_3',
            'ldap_port': 'ldap_port',
            'ldap_secure': 'ldap_secure',
            'ldap_username': 'ldap_username',
            'ldap_username_field': 'ldap_username_field',
            'logo_url': 'logo_url',
            'protocol': 'protocol',
            'provider': 'provider',
            'provision_attachments_permission': 'provision_attachments_permission',
            'provision_company': 'provision_company',
            'provision_dav_permission': 'provision_dav_permission',
            'provision_email_signup_groups': 'provision_email_signup_groups',
            'provision_ftp_permission': 'provision_ftp_permission',
            'provision_group_default': 'provision_group_default',
            'provision_group_exclusion': 'provision_group_exclusion',
            'provision_group_inclusion': 'provision_group_inclusion',
            'provision_group_required': 'provision_group_required',
            'provision_groups': 'provision_groups',
            'provision_sftp_permission': 'provision_sftp_permission',
            'provision_site_admin_groups': 'provision_site_admin_groups',
            'provision_time_zone': 'provision_time_zone',
            'provision_users': 'provision_users',
            'saml_provider_cert_fingerprint': 'saml_provider_cert_fingerprint',
            'saml_provider_issuer_url': 'saml_provider_issuer_url',
            'saml_provider_metadata_content': 'saml_provider_metadata_content',
            'saml_provider_metadata_url': 'saml_provider_metadata_url',
            'saml_provider_slo_target_url': 'saml_provider_slo_target_url',
            'saml_provider_sso_target_url': 'saml_provider_sso_target_url',
            'scim_authentication_method': 'scim_authentication_method',
            'scim_oauth_access_token': 'scim_oauth_access_token',
            'scim_oauth_access_token_expires_at': 'scim_oauth_access_token_expires_at',
            'scim_username': 'scim_username',
            'subdomain': 'subdomain'
        }

        self._deprovision_behavior = deprovision_behavior
        self._deprovision_groups = deprovision_groups
        self._deprovision_users = deprovision_users
        self._enabled = enabled
        self._id = id
        self._label = label
        self._ldap_base_dn = ldap_base_dn
        self._ldap_domain = ldap_domain
        self._ldap_host = ldap_host
        self._ldap_host_2 = ldap_host_2
        self._ldap_host_3 = ldap_host_3
        self._ldap_port = ldap_port
        self._ldap_secure = ldap_secure
        self._ldap_username = ldap_username
        self._ldap_username_field = ldap_username_field
        self._logo_url = logo_url
        self._protocol = protocol
        self._provider = provider
        self._provision_attachments_permission = provision_attachments_permission
        self._provision_company = provision_company
        self._provision_dav_permission = provision_dav_permission
        self._provision_email_signup_groups = provision_email_signup_groups
        self._provision_ftp_permission = provision_ftp_permission
        self._provision_group_default = provision_group_default
        self._provision_group_exclusion = provision_group_exclusion
        self._provision_group_inclusion = provision_group_inclusion
        self._provision_group_required = provision_group_required
        self._provision_groups = provision_groups
        self._provision_sftp_permission = provision_sftp_permission
        self._provision_site_admin_groups = provision_site_admin_groups
        self._provision_time_zone = provision_time_zone
        self._provision_users = provision_users
        self._saml_provider_cert_fingerprint = saml_provider_cert_fingerprint
        self._saml_provider_issuer_url = saml_provider_issuer_url
        self._saml_provider_metadata_content = saml_provider_metadata_content
        self._saml_provider_metadata_url = saml_provider_metadata_url
        self._saml_provider_slo_target_url = saml_provider_slo_target_url
        self._saml_provider_sso_target_url = saml_provider_sso_target_url
        self._scim_authentication_method = scim_authentication_method
        self._scim_oauth_access_token = scim_oauth_access_token
        self._scim_oauth_access_token_expires_at = scim_oauth_access_token_expires_at
        self._scim_username = scim_username
        self._subdomain = subdomain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SsoStrategyEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SsoStrategyEntity of this SsoStrategyEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deprovision_behavior(self):
        """Gets the deprovision_behavior of this SsoStrategyEntity.

        Method used for deprovisioning users.

        :return: The deprovision_behavior of this SsoStrategyEntity.
        :rtype: str
        """
        return self._deprovision_behavior

    @deprovision_behavior.setter
    def deprovision_behavior(self, deprovision_behavior):
        """Sets the deprovision_behavior of this SsoStrategyEntity.

        Method used for deprovisioning users.

        :param deprovision_behavior: The deprovision_behavior of this SsoStrategyEntity.
        :type deprovision_behavior: str
        """
        allowed_values = ["disable", "delete"]  # noqa: E501
        if deprovision_behavior not in allowed_values:
            raise ValueError(
                "Invalid value for `deprovision_behavior` ({0}), must be one of {1}"
                .format(deprovision_behavior, allowed_values)
            )

        self._deprovision_behavior = deprovision_behavior

    @property
    def deprovision_groups(self):
        """Gets the deprovision_groups of this SsoStrategyEntity.

        Auto-deprovision group membership based on group memberships on the SSO side?

        :return: The deprovision_groups of this SsoStrategyEntity.
        :rtype: bool
        """
        return self._deprovision_groups

    @deprovision_groups.setter
    def deprovision_groups(self, deprovision_groups):
        """Sets the deprovision_groups of this SsoStrategyEntity.

        Auto-deprovision group membership based on group memberships on the SSO side?

        :param deprovision_groups: The deprovision_groups of this SsoStrategyEntity.
        :type deprovision_groups: bool
        """

        self._deprovision_groups = deprovision_groups

    @property
    def deprovision_users(self):
        """Gets the deprovision_users of this SsoStrategyEntity.

        Auto-deprovision users?

        :return: The deprovision_users of this SsoStrategyEntity.
        :rtype: bool
        """
        return self._deprovision_users

    @deprovision_users.setter
    def deprovision_users(self, deprovision_users):
        """Sets the deprovision_users of this SsoStrategyEntity.

        Auto-deprovision users?

        :param deprovision_users: The deprovision_users of this SsoStrategyEntity.
        :type deprovision_users: bool
        """

        self._deprovision_users = deprovision_users

    @property
    def enabled(self):
        """Gets the enabled of this SsoStrategyEntity.

        Is strategy enabled?  This may become automatically set to `false` after a high number and duration of failures.

        :return: The enabled of this SsoStrategyEntity.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this SsoStrategyEntity.

        Is strategy enabled?  This may become automatically set to `false` after a high number and duration of failures.

        :param enabled: The enabled of this SsoStrategyEntity.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def id(self):
        """Gets the id of this SsoStrategyEntity.

        ID

        :return: The id of this SsoStrategyEntity.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SsoStrategyEntity.

        ID

        :param id: The id of this SsoStrategyEntity.
        :type id: int
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this SsoStrategyEntity.

        Custom label for the SSO provider on the login page.

        :return: The label of this SsoStrategyEntity.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this SsoStrategyEntity.

        Custom label for the SSO provider on the login page.

        :param label: The label of this SsoStrategyEntity.
        :type label: str
        """

        self._label = label

    @property
    def ldap_base_dn(self):
        """Gets the ldap_base_dn of this SsoStrategyEntity.

        Base DN for looking up users in LDAP server

        :return: The ldap_base_dn of this SsoStrategyEntity.
        :rtype: str
        """
        return self._ldap_base_dn

    @ldap_base_dn.setter
    def ldap_base_dn(self, ldap_base_dn):
        """Sets the ldap_base_dn of this SsoStrategyEntity.

        Base DN for looking up users in LDAP server

        :param ldap_base_dn: The ldap_base_dn of this SsoStrategyEntity.
        :type ldap_base_dn: str
        """

        self._ldap_base_dn = ldap_base_dn

    @property
    def ldap_domain(self):
        """Gets the ldap_domain of this SsoStrategyEntity.

        Domain name that will be appended to LDAP usernames

        :return: The ldap_domain of this SsoStrategyEntity.
        :rtype: str
        """
        return self._ldap_domain

    @ldap_domain.setter
    def ldap_domain(self, ldap_domain):
        """Sets the ldap_domain of this SsoStrategyEntity.

        Domain name that will be appended to LDAP usernames

        :param ldap_domain: The ldap_domain of this SsoStrategyEntity.
        :type ldap_domain: str
        """

        self._ldap_domain = ldap_domain

    @property
    def ldap_host(self):
        """Gets the ldap_host of this SsoStrategyEntity.

        LDAP host

        :return: The ldap_host of this SsoStrategyEntity.
        :rtype: str
        """
        return self._ldap_host

    @ldap_host.setter
    def ldap_host(self, ldap_host):
        """Sets the ldap_host of this SsoStrategyEntity.

        LDAP host

        :param ldap_host: The ldap_host of this SsoStrategyEntity.
        :type ldap_host: str
        """

        self._ldap_host = ldap_host

    @property
    def ldap_host_2(self):
        """Gets the ldap_host_2 of this SsoStrategyEntity.

        LDAP backup host

        :return: The ldap_host_2 of this SsoStrategyEntity.
        :rtype: str
        """
        return self._ldap_host_2

    @ldap_host_2.setter
    def ldap_host_2(self, ldap_host_2):
        """Sets the ldap_host_2 of this SsoStrategyEntity.

        LDAP backup host

        :param ldap_host_2: The ldap_host_2 of this SsoStrategyEntity.
        :type ldap_host_2: str
        """

        self._ldap_host_2 = ldap_host_2

    @property
    def ldap_host_3(self):
        """Gets the ldap_host_3 of this SsoStrategyEntity.

        LDAP backup host

        :return: The ldap_host_3 of this SsoStrategyEntity.
        :rtype: str
        """
        return self._ldap_host_3

    @ldap_host_3.setter
    def ldap_host_3(self, ldap_host_3):
        """Sets the ldap_host_3 of this SsoStrategyEntity.

        LDAP backup host

        :param ldap_host_3: The ldap_host_3 of this SsoStrategyEntity.
        :type ldap_host_3: str
        """

        self._ldap_host_3 = ldap_host_3

    @property
    def ldap_port(self):
        """Gets the ldap_port of this SsoStrategyEntity.

        LDAP port

        :return: The ldap_port of this SsoStrategyEntity.
        :rtype: int
        """
        return self._ldap_port

    @ldap_port.setter
    def ldap_port(self, ldap_port):
        """Sets the ldap_port of this SsoStrategyEntity.

        LDAP port

        :param ldap_port: The ldap_port of this SsoStrategyEntity.
        :type ldap_port: int
        """

        self._ldap_port = ldap_port

    @property
    def ldap_secure(self):
        """Gets the ldap_secure of this SsoStrategyEntity.

        Use secure LDAP?

        :return: The ldap_secure of this SsoStrategyEntity.
        :rtype: bool
        """
        return self._ldap_secure

    @ldap_secure.setter
    def ldap_secure(self, ldap_secure):
        """Sets the ldap_secure of this SsoStrategyEntity.

        Use secure LDAP?

        :param ldap_secure: The ldap_secure of this SsoStrategyEntity.
        :type ldap_secure: bool
        """

        self._ldap_secure = ldap_secure

    @property
    def ldap_username(self):
        """Gets the ldap_username of this SsoStrategyEntity.

        Username for signing in to LDAP server.

        :return: The ldap_username of this SsoStrategyEntity.
        :rtype: str
        """
        return self._ldap_username

    @ldap_username.setter
    def ldap_username(self, ldap_username):
        """Sets the ldap_username of this SsoStrategyEntity.

        Username for signing in to LDAP server.

        :param ldap_username: The ldap_username of this SsoStrategyEntity.
        :type ldap_username: str
        """

        self._ldap_username = ldap_username

    @property
    def ldap_username_field(self):
        """Gets the ldap_username_field of this SsoStrategyEntity.

        LDAP username field

        :return: The ldap_username_field of this SsoStrategyEntity.
        :rtype: str
        """
        return self._ldap_username_field

    @ldap_username_field.setter
    def ldap_username_field(self, ldap_username_field):
        """Sets the ldap_username_field of this SsoStrategyEntity.

        LDAP username field

        :param ldap_username_field: The ldap_username_field of this SsoStrategyEntity.
        :type ldap_username_field: str
        """
        allowed_values = ["sAMAccountName", "userPrincipalName"]  # noqa: E501
        if ldap_username_field not in allowed_values:
            raise ValueError(
                "Invalid value for `ldap_username_field` ({0}), must be one of {1}"
                .format(ldap_username_field, allowed_values)
            )

        self._ldap_username_field = ldap_username_field

    @property
    def logo_url(self):
        """Gets the logo_url of this SsoStrategyEntity.

        URL holding a custom logo for the SSO provider on the login page.

        :return: The logo_url of this SsoStrategyEntity.
        :rtype: str
        """
        return self._logo_url

    @logo_url.setter
    def logo_url(self, logo_url):
        """Sets the logo_url of this SsoStrategyEntity.

        URL holding a custom logo for the SSO provider on the login page.

        :param logo_url: The logo_url of this SsoStrategyEntity.
        :type logo_url: str
        """

        self._logo_url = logo_url

    @property
    def protocol(self):
        """Gets the protocol of this SsoStrategyEntity.

        SSO Protocol

        :return: The protocol of this SsoStrategyEntity.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this SsoStrategyEntity.

        SSO Protocol

        :param protocol: The protocol of this SsoStrategyEntity.
        :type protocol: str
        """
        allowed_values = ["oauth2", "_unused_openid2", "saml", "active_directory", "open_ldap", "scim"]  # noqa: E501
        if protocol not in allowed_values:
            raise ValueError(
                "Invalid value for `protocol` ({0}), must be one of {1}"
                .format(protocol, allowed_values)
            )

        self._protocol = protocol

    @property
    def provider(self):
        """Gets the provider of this SsoStrategyEntity.

        Provider name

        :return: The provider of this SsoStrategyEntity.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this SsoStrategyEntity.

        Provider name

        :param provider: The provider of this SsoStrategyEntity.
        :type provider: str
        """
        allowed_values = ["google", "auth0", "okta", "atlassian", "azure", "box", "dropbox", "slack", "_unused_ubuntu", "onelogin", "saml", "idaptive", "ldap", "scim"]  # noqa: E501
        if provider not in allowed_values:
            raise ValueError(
                "Invalid value for `provider` ({0}), must be one of {1}"
                .format(provider, allowed_values)
            )

        self._provider = provider

    @property
    def provision_attachments_permission(self):
        """Gets the provision_attachments_permission of this SsoStrategyEntity.

        DEPRECATED: Auto-provisioned users get Sharing permission. Use a Group with the Bundle permission instead.

        :return: The provision_attachments_permission of this SsoStrategyEntity.
        :rtype: bool
        """
        return self._provision_attachments_permission

    @provision_attachments_permission.setter
    def provision_attachments_permission(self, provision_attachments_permission):
        """Sets the provision_attachments_permission of this SsoStrategyEntity.

        DEPRECATED: Auto-provisioned users get Sharing permission. Use a Group with the Bundle permission instead.

        :param provision_attachments_permission: The provision_attachments_permission of this SsoStrategyEntity.
        :type provision_attachments_permission: bool
        """

        self._provision_attachments_permission = provision_attachments_permission

    @property
    def provision_company(self):
        """Gets the provision_company of this SsoStrategyEntity.

        Default company for auto provisioned users.

        :return: The provision_company of this SsoStrategyEntity.
        :rtype: str
        """
        return self._provision_company

    @provision_company.setter
    def provision_company(self, provision_company):
        """Sets the provision_company of this SsoStrategyEntity.

        Default company for auto provisioned users.

        :param provision_company: The provision_company of this SsoStrategyEntity.
        :type provision_company: str
        """

        self._provision_company = provision_company

    @property
    def provision_dav_permission(self):
        """Gets the provision_dav_permission of this SsoStrategyEntity.

        Auto-provisioned users get WebDAV permission?

        :return: The provision_dav_permission of this SsoStrategyEntity.
        :rtype: bool
        """
        return self._provision_dav_permission

    @provision_dav_permission.setter
    def provision_dav_permission(self, provision_dav_permission):
        """Sets the provision_dav_permission of this SsoStrategyEntity.

        Auto-provisioned users get WebDAV permission?

        :param provision_dav_permission: The provision_dav_permission of this SsoStrategyEntity.
        :type provision_dav_permission: bool
        """

        self._provision_dav_permission = provision_dav_permission

    @property
    def provision_email_signup_groups(self):
        """Gets the provision_email_signup_groups of this SsoStrategyEntity.

        Comma-separated list of group names whose members will be created with email_signup authentication.

        :return: The provision_email_signup_groups of this SsoStrategyEntity.
        :rtype: str
        """
        return self._provision_email_signup_groups

    @provision_email_signup_groups.setter
    def provision_email_signup_groups(self, provision_email_signup_groups):
        """Sets the provision_email_signup_groups of this SsoStrategyEntity.

        Comma-separated list of group names whose members will be created with email_signup authentication.

        :param provision_email_signup_groups: The provision_email_signup_groups of this SsoStrategyEntity.
        :type provision_email_signup_groups: str
        """

        self._provision_email_signup_groups = provision_email_signup_groups

    @property
    def provision_ftp_permission(self):
        """Gets the provision_ftp_permission of this SsoStrategyEntity.

        Auto-provisioned users get FTP permission?

        :return: The provision_ftp_permission of this SsoStrategyEntity.
        :rtype: bool
        """
        return self._provision_ftp_permission

    @provision_ftp_permission.setter
    def provision_ftp_permission(self, provision_ftp_permission):
        """Sets the provision_ftp_permission of this SsoStrategyEntity.

        Auto-provisioned users get FTP permission?

        :param provision_ftp_permission: The provision_ftp_permission of this SsoStrategyEntity.
        :type provision_ftp_permission: bool
        """

        self._provision_ftp_permission = provision_ftp_permission

    @property
    def provision_group_default(self):
        """Gets the provision_group_default of this SsoStrategyEntity.

        Comma-separated list of group names for groups to automatically add all auto-provisioned users to.

        :return: The provision_group_default of this SsoStrategyEntity.
        :rtype: str
        """
        return self._provision_group_default

    @provision_group_default.setter
    def provision_group_default(self, provision_group_default):
        """Sets the provision_group_default of this SsoStrategyEntity.

        Comma-separated list of group names for groups to automatically add all auto-provisioned users to.

        :param provision_group_default: The provision_group_default of this SsoStrategyEntity.
        :type provision_group_default: str
        """

        self._provision_group_default = provision_group_default

    @property
    def provision_group_exclusion(self):
        """Gets the provision_group_exclusion of this SsoStrategyEntity.

        Comma-separated list of group names for groups (with optional wildcards) that will be excluded from auto-provisioning.

        :return: The provision_group_exclusion of this SsoStrategyEntity.
        :rtype: str
        """
        return self._provision_group_exclusion

    @provision_group_exclusion.setter
    def provision_group_exclusion(self, provision_group_exclusion):
        """Sets the provision_group_exclusion of this SsoStrategyEntity.

        Comma-separated list of group names for groups (with optional wildcards) that will be excluded from auto-provisioning.

        :param provision_group_exclusion: The provision_group_exclusion of this SsoStrategyEntity.
        :type provision_group_exclusion: str
        """

        self._provision_group_exclusion = provision_group_exclusion

    @property
    def provision_group_inclusion(self):
        """Gets the provision_group_inclusion of this SsoStrategyEntity.

        Comma-separated list of group names for groups (with optional wildcards) that will be auto-provisioned.

        :return: The provision_group_inclusion of this SsoStrategyEntity.
        :rtype: str
        """
        return self._provision_group_inclusion

    @provision_group_inclusion.setter
    def provision_group_inclusion(self, provision_group_inclusion):
        """Sets the provision_group_inclusion of this SsoStrategyEntity.

        Comma-separated list of group names for groups (with optional wildcards) that will be auto-provisioned.

        :param provision_group_inclusion: The provision_group_inclusion of this SsoStrategyEntity.
        :type provision_group_inclusion: str
        """

        self._provision_group_inclusion = provision_group_inclusion

    @property
    def provision_group_required(self):
        """Gets the provision_group_required of this SsoStrategyEntity.

        Comma or newline separated list of group names (with optional wildcards) to require membership for user provisioning.

        :return: The provision_group_required of this SsoStrategyEntity.
        :rtype: str
        """
        return self._provision_group_required

    @provision_group_required.setter
    def provision_group_required(self, provision_group_required):
        """Sets the provision_group_required of this SsoStrategyEntity.

        Comma or newline separated list of group names (with optional wildcards) to require membership for user provisioning.

        :param provision_group_required: The provision_group_required of this SsoStrategyEntity.
        :type provision_group_required: str
        """

        self._provision_group_required = provision_group_required

    @property
    def provision_groups(self):
        """Gets the provision_groups of this SsoStrategyEntity.

        Auto-provision group membership based on group memberships on the SSO side?

        :return: The provision_groups of this SsoStrategyEntity.
        :rtype: bool
        """
        return self._provision_groups

    @provision_groups.setter
    def provision_groups(self, provision_groups):
        """Sets the provision_groups of this SsoStrategyEntity.

        Auto-provision group membership based on group memberships on the SSO side?

        :param provision_groups: The provision_groups of this SsoStrategyEntity.
        :type provision_groups: bool
        """

        self._provision_groups = provision_groups

    @property
    def provision_sftp_permission(self):
        """Gets the provision_sftp_permission of this SsoStrategyEntity.

        Auto-provisioned users get SFTP permission?

        :return: The provision_sftp_permission of this SsoStrategyEntity.
        :rtype: bool
        """
        return self._provision_sftp_permission

    @provision_sftp_permission.setter
    def provision_sftp_permission(self, provision_sftp_permission):
        """Sets the provision_sftp_permission of this SsoStrategyEntity.

        Auto-provisioned users get SFTP permission?

        :param provision_sftp_permission: The provision_sftp_permission of this SsoStrategyEntity.
        :type provision_sftp_permission: bool
        """

        self._provision_sftp_permission = provision_sftp_permission

    @property
    def provision_site_admin_groups(self):
        """Gets the provision_site_admin_groups of this SsoStrategyEntity.

        Comma-separated list of group names whose members will be created as Site Admins.

        :return: The provision_site_admin_groups of this SsoStrategyEntity.
        :rtype: str
        """
        return self._provision_site_admin_groups

    @provision_site_admin_groups.setter
    def provision_site_admin_groups(self, provision_site_admin_groups):
        """Sets the provision_site_admin_groups of this SsoStrategyEntity.

        Comma-separated list of group names whose members will be created as Site Admins.

        :param provision_site_admin_groups: The provision_site_admin_groups of this SsoStrategyEntity.
        :type provision_site_admin_groups: str
        """

        self._provision_site_admin_groups = provision_site_admin_groups

    @property
    def provision_time_zone(self):
        """Gets the provision_time_zone of this SsoStrategyEntity.

        Default time zone for auto provisioned users.

        :return: The provision_time_zone of this SsoStrategyEntity.
        :rtype: str
        """
        return self._provision_time_zone

    @provision_time_zone.setter
    def provision_time_zone(self, provision_time_zone):
        """Sets the provision_time_zone of this SsoStrategyEntity.

        Default time zone for auto provisioned users.

        :param provision_time_zone: The provision_time_zone of this SsoStrategyEntity.
        :type provision_time_zone: str
        """

        self._provision_time_zone = provision_time_zone

    @property
    def provision_users(self):
        """Gets the provision_users of this SsoStrategyEntity.

        Auto-provision users?

        :return: The provision_users of this SsoStrategyEntity.
        :rtype: bool
        """
        return self._provision_users

    @provision_users.setter
    def provision_users(self, provision_users):
        """Sets the provision_users of this SsoStrategyEntity.

        Auto-provision users?

        :param provision_users: The provision_users of this SsoStrategyEntity.
        :type provision_users: bool
        """

        self._provision_users = provision_users

    @property
    def saml_provider_cert_fingerprint(self):
        """Gets the saml_provider_cert_fingerprint of this SsoStrategyEntity.

        Identity provider sha256 cert fingerprint if saml_provider_metadata_url is not available.

        :return: The saml_provider_cert_fingerprint of this SsoStrategyEntity.
        :rtype: str
        """
        return self._saml_provider_cert_fingerprint

    @saml_provider_cert_fingerprint.setter
    def saml_provider_cert_fingerprint(self, saml_provider_cert_fingerprint):
        """Sets the saml_provider_cert_fingerprint of this SsoStrategyEntity.

        Identity provider sha256 cert fingerprint if saml_provider_metadata_url is not available.

        :param saml_provider_cert_fingerprint: The saml_provider_cert_fingerprint of this SsoStrategyEntity.
        :type saml_provider_cert_fingerprint: str
        """

        self._saml_provider_cert_fingerprint = saml_provider_cert_fingerprint

    @property
    def saml_provider_issuer_url(self):
        """Gets the saml_provider_issuer_url of this SsoStrategyEntity.

        Identity provider issuer url

        :return: The saml_provider_issuer_url of this SsoStrategyEntity.
        :rtype: str
        """
        return self._saml_provider_issuer_url

    @saml_provider_issuer_url.setter
    def saml_provider_issuer_url(self, saml_provider_issuer_url):
        """Sets the saml_provider_issuer_url of this SsoStrategyEntity.

        Identity provider issuer url

        :param saml_provider_issuer_url: The saml_provider_issuer_url of this SsoStrategyEntity.
        :type saml_provider_issuer_url: str
        """

        self._saml_provider_issuer_url = saml_provider_issuer_url

    @property
    def saml_provider_metadata_content(self):
        """Gets the saml_provider_metadata_content of this SsoStrategyEntity.

        Custom identity provider metadata

        :return: The saml_provider_metadata_content of this SsoStrategyEntity.
        :rtype: str
        """
        return self._saml_provider_metadata_content

    @saml_provider_metadata_content.setter
    def saml_provider_metadata_content(self, saml_provider_metadata_content):
        """Sets the saml_provider_metadata_content of this SsoStrategyEntity.

        Custom identity provider metadata

        :param saml_provider_metadata_content: The saml_provider_metadata_content of this SsoStrategyEntity.
        :type saml_provider_metadata_content: str
        """

        self._saml_provider_metadata_content = saml_provider_metadata_content

    @property
    def saml_provider_metadata_url(self):
        """Gets the saml_provider_metadata_url of this SsoStrategyEntity.

        Metadata URL for the SAML identity provider

        :return: The saml_provider_metadata_url of this SsoStrategyEntity.
        :rtype: str
        """
        return self._saml_provider_metadata_url

    @saml_provider_metadata_url.setter
    def saml_provider_metadata_url(self, saml_provider_metadata_url):
        """Sets the saml_provider_metadata_url of this SsoStrategyEntity.

        Metadata URL for the SAML identity provider

        :param saml_provider_metadata_url: The saml_provider_metadata_url of this SsoStrategyEntity.
        :type saml_provider_metadata_url: str
        """

        self._saml_provider_metadata_url = saml_provider_metadata_url

    @property
    def saml_provider_slo_target_url(self):
        """Gets the saml_provider_slo_target_url of this SsoStrategyEntity.

        Identity provider SLO endpoint

        :return: The saml_provider_slo_target_url of this SsoStrategyEntity.
        :rtype: str
        """
        return self._saml_provider_slo_target_url

    @saml_provider_slo_target_url.setter
    def saml_provider_slo_target_url(self, saml_provider_slo_target_url):
        """Sets the saml_provider_slo_target_url of this SsoStrategyEntity.

        Identity provider SLO endpoint

        :param saml_provider_slo_target_url: The saml_provider_slo_target_url of this SsoStrategyEntity.
        :type saml_provider_slo_target_url: str
        """

        self._saml_provider_slo_target_url = saml_provider_slo_target_url

    @property
    def saml_provider_sso_target_url(self):
        """Gets the saml_provider_sso_target_url of this SsoStrategyEntity.

        Identity provider SSO endpoint if saml_provider_metadata_url is not available.

        :return: The saml_provider_sso_target_url of this SsoStrategyEntity.
        :rtype: str
        """
        return self._saml_provider_sso_target_url

    @saml_provider_sso_target_url.setter
    def saml_provider_sso_target_url(self, saml_provider_sso_target_url):
        """Sets the saml_provider_sso_target_url of this SsoStrategyEntity.

        Identity provider SSO endpoint if saml_provider_metadata_url is not available.

        :param saml_provider_sso_target_url: The saml_provider_sso_target_url of this SsoStrategyEntity.
        :type saml_provider_sso_target_url: str
        """

        self._saml_provider_sso_target_url = saml_provider_sso_target_url

    @property
    def scim_authentication_method(self):
        """Gets the scim_authentication_method of this SsoStrategyEntity.

        SCIM authentication type.

        :return: The scim_authentication_method of this SsoStrategyEntity.
        :rtype: str
        """
        return self._scim_authentication_method

    @scim_authentication_method.setter
    def scim_authentication_method(self, scim_authentication_method):
        """Sets the scim_authentication_method of this SsoStrategyEntity.

        SCIM authentication type.

        :param scim_authentication_method: The scim_authentication_method of this SsoStrategyEntity.
        :type scim_authentication_method: str
        """
        allowed_values = ["none", "basic", "token"]  # noqa: E501
        if scim_authentication_method not in allowed_values:
            raise ValueError(
                "Invalid value for `scim_authentication_method` ({0}), must be one of {1}"
                .format(scim_authentication_method, allowed_values)
            )

        self._scim_authentication_method = scim_authentication_method

    @property
    def scim_oauth_access_token(self):
        """Gets the scim_oauth_access_token of this SsoStrategyEntity.

        SCIM OAuth Access Token.

        :return: The scim_oauth_access_token of this SsoStrategyEntity.
        :rtype: str
        """
        return self._scim_oauth_access_token

    @scim_oauth_access_token.setter
    def scim_oauth_access_token(self, scim_oauth_access_token):
        """Sets the scim_oauth_access_token of this SsoStrategyEntity.

        SCIM OAuth Access Token.

        :param scim_oauth_access_token: The scim_oauth_access_token of this SsoStrategyEntity.
        :type scim_oauth_access_token: str
        """

        self._scim_oauth_access_token = scim_oauth_access_token

    @property
    def scim_oauth_access_token_expires_at(self):
        """Gets the scim_oauth_access_token_expires_at of this SsoStrategyEntity.

        SCIM OAuth Access Token Expiration Time.

        :return: The scim_oauth_access_token_expires_at of this SsoStrategyEntity.
        :rtype: str
        """
        return self._scim_oauth_access_token_expires_at

    @scim_oauth_access_token_expires_at.setter
    def scim_oauth_access_token_expires_at(self, scim_oauth_access_token_expires_at):
        """Sets the scim_oauth_access_token_expires_at of this SsoStrategyEntity.

        SCIM OAuth Access Token Expiration Time.

        :param scim_oauth_access_token_expires_at: The scim_oauth_access_token_expires_at of this SsoStrategyEntity.
        :type scim_oauth_access_token_expires_at: str
        """

        self._scim_oauth_access_token_expires_at = scim_oauth_access_token_expires_at

    @property
    def scim_username(self):
        """Gets the scim_username of this SsoStrategyEntity.

        SCIM username.

        :return: The scim_username of this SsoStrategyEntity.
        :rtype: str
        """
        return self._scim_username

    @scim_username.setter
    def scim_username(self, scim_username):
        """Sets the scim_username of this SsoStrategyEntity.

        SCIM username.

        :param scim_username: The scim_username of this SsoStrategyEntity.
        :type scim_username: str
        """

        self._scim_username = scim_username

    @property
    def subdomain(self):
        """Gets the subdomain of this SsoStrategyEntity.

        Subdomain

        :return: The subdomain of this SsoStrategyEntity.
        :rtype: str
        """
        return self._subdomain

    @subdomain.setter
    def subdomain(self, subdomain):
        """Sets the subdomain of this SsoStrategyEntity.

        Subdomain

        :param subdomain: The subdomain of this SsoStrategyEntity.
        :type subdomain: str
        """

        self._subdomain = subdomain
