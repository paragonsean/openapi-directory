/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NotificationEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationsApi
 */
@Disabled
public class NotificationsApiTest {

    private final NotificationsApi api = new NotificationsApi();

    /**
     * Delete Notification
     *
     * Delete Notification
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteNotificationsIdTest() throws ApiException {
        Integer id = null;
        api.deleteNotificationsId(id);
        // TODO: test validations
    }

    /**
     * List Notifications
     *
     * List Notifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsTest() throws ApiException {
        Integer userId = null;
        String cursor = null;
        Integer perPage = null;
        Object sortBy = null;
        String groupId = null;
        Object filter = null;
        Object filterPrefix = null;
        String path = null;
        Boolean includeAncestors = null;
        List<NotificationEntity> response = api.getNotifications(userId, cursor, perPage, sortBy, groupId, filter, filterPrefix, path, includeAncestors);
        // TODO: test validations
    }

    /**
     * Show Notification
     *
     * Show Notification
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsIdTest() throws ApiException {
        Integer id = null;
        NotificationEntity response = api.getNotificationsId(id);
        // TODO: test validations
    }

    /**
     * Update Notification
     *
     * Update Notification
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchNotificationsIdTest() throws ApiException {
        Integer id = null;
        String message = null;
        Boolean notifyOnCopy = null;
        Boolean notifyOnDelete = null;
        Boolean notifyOnDownload = null;
        Boolean notifyOnMove = null;
        Boolean notifyOnUpload = null;
        Boolean notifyUserActions = null;
        Boolean recursive = null;
        String sendInterval = null;
        Boolean triggerByShareRecipients = null;
        List<String> triggeringFilenames = null;
        List<Integer> triggeringGroupIds = null;
        List<Integer> triggeringUserIds = null;
        NotificationEntity response = api.patchNotificationsId(id, message, notifyOnCopy, notifyOnDelete, notifyOnDownload, notifyOnMove, notifyOnUpload, notifyUserActions, recursive, sendInterval, triggerByShareRecipients, triggeringFilenames, triggeringGroupIds, triggeringUserIds);
        // TODO: test validations
    }

    /**
     * Create Notification
     *
     * Create Notification
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postNotificationsTest() throws ApiException {
        Integer groupId = null;
        String message = null;
        Boolean notifyOnCopy = null;
        Boolean notifyOnDelete = null;
        Boolean notifyOnDownload = null;
        Boolean notifyOnMove = null;
        Boolean notifyOnUpload = null;
        Boolean notifyUserActions = null;
        String path = null;
        Boolean recursive = null;
        String sendInterval = null;
        Boolean triggerByShareRecipients = null;
        List<String> triggeringFilenames = null;
        List<Integer> triggeringGroupIds = null;
        List<Integer> triggeringUserIds = null;
        Integer userId = null;
        String username = null;
        NotificationEntity response = api.postNotifications(groupId, message, notifyOnCopy, notifyOnDelete, notifyOnDownload, notifyOnMove, notifyOnUpload, notifyUserActions, path, recursive, sendInterval, triggerByShareRecipients, triggeringFilenames, triggeringGroupIds, triggeringUserIds, userId, username);
        // TODO: test validations
    }

}
