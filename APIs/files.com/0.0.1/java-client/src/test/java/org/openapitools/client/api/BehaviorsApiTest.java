/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BehaviorEntity;
import java.io.File;
import org.openapitools.client.model.StatusEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BehaviorsApi
 */
@Disabled
public class BehaviorsApiTest {

    private final BehaviorsApi api = new BehaviorsApi();

    /**
     * List Behaviors by path
     *
     * List Behaviors by path
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void behaviorListForPathTest() throws ApiException {
        String path = null;
        String cursor = null;
        Integer perPage = null;
        Object sortBy = null;
        Object filter = null;
        Object filterPrefix = null;
        String recursive = null;
        String behavior = null;
        List<BehaviorEntity> response = api.behaviorListForPath(path, cursor, perPage, sortBy, filter, filterPrefix, recursive, behavior);
        // TODO: test validations
    }

    /**
     * Delete Behavior
     *
     * Delete Behavior
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBehaviorsIdTest() throws ApiException {
        Integer id = null;
        api.deleteBehaviorsId(id);
        // TODO: test validations
    }

    /**
     * List Behaviors
     *
     * List Behaviors
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBehaviorsTest() throws ApiException {
        String cursor = null;
        Integer perPage = null;
        Object sortBy = null;
        String behavior = null;
        Object filter = null;
        Object filterPrefix = null;
        List<BehaviorEntity> response = api.getBehaviors(cursor, perPage, sortBy, behavior, filter, filterPrefix);
        // TODO: test validations
    }

    /**
     * Show Behavior
     *
     * Show Behavior
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBehaviorsIdTest() throws ApiException {
        Integer id = null;
        BehaviorEntity response = api.getBehaviorsId(id);
        // TODO: test validations
    }

    /**
     * Update Behavior
     *
     * Update Behavior
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchBehaviorsIdTest() throws ApiException {
        Integer id = null;
        Boolean attachmentDelete = null;
        File attachmentFile = null;
        String behavior = null;
        String description = null;
        String name = null;
        String path = null;
        String value = null;
        BehaviorEntity response = api.patchBehaviorsId(id, attachmentDelete, attachmentFile, behavior, description, name, path, value);
        // TODO: test validations
    }

    /**
     * Create Behavior
     *
     * Create Behavior
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postBehaviorsTest() throws ApiException {
        String behavior = null;
        String path = null;
        File attachmentFile = null;
        String description = null;
        String name = null;
        String value = null;
        BehaviorEntity response = api.postBehaviors(behavior, path, attachmentFile, description, name, value);
        // TODO: test validations
    }

    /**
     * Test webhook.
     *
     * Test webhook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postBehaviorsWebhookTestTest() throws ApiException {
        String url = null;
        String action = null;
        Object body = null;
        String encoding = null;
        Object headers = null;
        String method = null;
        StatusEntity response = api.postBehaviorsWebhookTest(url, action, body, encoding, headers, method);
        // TODO: test validations
    }

}
