/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ActionEntity;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HistoryApi
 */
@Disabled
public class HistoryApiTest {

    private final HistoryApi api = new HistoryApi();

    /**
     * List site full action history.
     *
     * List site full action history.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void historyListTest() throws ApiException {
        OffsetDateTime startAt = null;
        OffsetDateTime endAt = null;
        String display = null;
        String cursor = null;
        Integer perPage = null;
        Object sortBy = null;
        Object filter = null;
        Object filterPrefix = null;
        List<ActionEntity> response = api.historyList(startAt, endAt, display, cursor, perPage, sortBy, filter, filterPrefix);
        // TODO: test validations
    }

    /**
     * List history for specific file.
     *
     * List history for specific file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void historyListForFileTest() throws ApiException {
        String path = null;
        OffsetDateTime startAt = null;
        OffsetDateTime endAt = null;
        String display = null;
        String cursor = null;
        Integer perPage = null;
        Object sortBy = null;
        List<ActionEntity> response = api.historyListForFile(path, startAt, endAt, display, cursor, perPage, sortBy);
        // TODO: test validations
    }

    /**
     * List history for specific folder.
     *
     * List history for specific folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void historyListForFolderTest() throws ApiException {
        String path = null;
        OffsetDateTime startAt = null;
        OffsetDateTime endAt = null;
        String display = null;
        String cursor = null;
        Integer perPage = null;
        Object sortBy = null;
        List<ActionEntity> response = api.historyListForFolder(path, startAt, endAt, display, cursor, perPage, sortBy);
        // TODO: test validations
    }

    /**
     * List history for specific user.
     *
     * List history for specific user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void historyListForUserTest() throws ApiException {
        Integer userId = null;
        OffsetDateTime startAt = null;
        OffsetDateTime endAt = null;
        String display = null;
        String cursor = null;
        Integer perPage = null;
        Object sortBy = null;
        List<ActionEntity> response = api.historyListForUser(userId, startAt, endAt, display, cursor, perPage, sortBy);
        // TODO: test validations
    }

    /**
     * List site login history.
     *
     * List site login history.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void historyListLoginsTest() throws ApiException {
        OffsetDateTime startAt = null;
        OffsetDateTime endAt = null;
        String display = null;
        String cursor = null;
        Integer perPage = null;
        Object sortBy = null;
        List<ActionEntity> response = api.historyListLogins(startAt, endAt, display, cursor, perPage, sortBy);
        // TODO: test validations
    }

}
