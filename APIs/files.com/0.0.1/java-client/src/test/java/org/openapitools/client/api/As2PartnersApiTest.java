/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.As2PartnerEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for As2PartnersApi
 */
@Disabled
public class As2PartnersApiTest {

    private final As2PartnersApi api = new As2PartnersApi();

    /**
     * Delete As2 Partner
     *
     * Delete As2 Partner
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAs2PartnersIdTest() throws ApiException {
        Integer id = null;
        api.deleteAs2PartnersId(id);
        // TODO: test validations
    }

    /**
     * List As2 Partners
     *
     * List As2 Partners
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAs2PartnersTest() throws ApiException {
        String cursor = null;
        Integer perPage = null;
        List<As2PartnerEntity> response = api.getAs2Partners(cursor, perPage);
        // TODO: test validations
    }

    /**
     * Show As2 Partner
     *
     * Show As2 Partner
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAs2PartnersIdTest() throws ApiException {
        Integer id = null;
        As2PartnerEntity response = api.getAs2PartnersId(id);
        // TODO: test validations
    }

    /**
     * Update As2 Partner
     *
     * Update As2 Partner
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchAs2PartnersIdTest() throws ApiException {
        Integer id = null;
        Boolean enableDedicatedIps = null;
        String name = null;
        String publicCertificate = null;
        String serverCertificate = null;
        String uri = null;
        As2PartnerEntity response = api.patchAs2PartnersId(id, enableDedicatedIps, name, publicCertificate, serverCertificate, uri);
        // TODO: test validations
    }

    /**
     * Create As2 Partner
     *
     * Create As2 Partner
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postAs2PartnersTest() throws ApiException {
        Integer as2StationId = null;
        String name = null;
        String publicCertificate = null;
        String uri = null;
        Boolean enableDedicatedIps = null;
        String serverCertificate = null;
        As2PartnerEntity response = api.postAs2Partners(as2StationId, name, publicCertificate, uri, enableDedicatedIps, serverCertificate);
        // TODO: test validations
    }

}
