/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiKeyEntity;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiKeysApi
 */
@Disabled
public class ApiKeysApiTest {

    private final ApiKeysApi api = new ApiKeysApi();

    /**
     * Delete Api Key
     *
     * Delete Api Key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteApiKeysIdTest() throws ApiException {
        Integer id = null;
        api.deleteApiKeysId(id);
        // TODO: test validations
    }

    /**
     * List Api Keys
     *
     * List Api Keys
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApiKeysTest() throws ApiException {
        Integer userId = null;
        String cursor = null;
        Integer perPage = null;
        Object sortBy = null;
        Object filter = null;
        Object filterGt = null;
        Object filterGteq = null;
        Object filterLt = null;
        Object filterLteq = null;
        List<ApiKeyEntity> response = api.getApiKeys(userId, cursor, perPage, sortBy, filter, filterGt, filterGteq, filterLt, filterLteq);
        // TODO: test validations
    }

    /**
     * Show Api Key
     *
     * Show Api Key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApiKeysIdTest() throws ApiException {
        Integer id = null;
        ApiKeyEntity response = api.getApiKeysId(id);
        // TODO: test validations
    }

    /**
     * Update Api Key
     *
     * Update Api Key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchApiKeysIdTest() throws ApiException {
        Integer id = null;
        String description = null;
        OffsetDateTime expiresAt = null;
        String name = null;
        String permissionSet = null;
        ApiKeyEntity response = api.patchApiKeysId(id, description, expiresAt, name, permissionSet);
        // TODO: test validations
    }

    /**
     * Create Api Key
     *
     * Create Api Key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postApiKeysTest() throws ApiException {
        String description = null;
        OffsetDateTime expiresAt = null;
        String name = null;
        String path = null;
        String permissionSet = null;
        Integer userId = null;
        ApiKeyEntity response = api.postApiKeys(description, expiresAt, name, path, permissionSet, userId);
        // TODO: test validations
    }

}
