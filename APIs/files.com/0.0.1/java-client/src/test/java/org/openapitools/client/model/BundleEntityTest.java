/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FormFieldSetEntity;
import org.openapitools.client.model.ImageEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for BundleEntity
 */
public class BundleEntityTest {
    private final BundleEntity model = new BundleEntity();

    /**
     * Model tests for BundleEntity
     */
    @Test
    public void testBundleEntity() {
        // TODO: test BundleEntity
    }

    /**
     * Test the property 'clickwrapBody'
     */
    @Test
    public void clickwrapBodyTest() {
        // TODO: test clickwrapBody
    }

    /**
     * Test the property 'clickwrapId'
     */
    @Test
    public void clickwrapIdTest() {
        // TODO: test clickwrapId
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'dontSeparateSubmissionsByFolder'
     */
    @Test
    public void dontSeparateSubmissionsByFolderTest() {
        // TODO: test dontSeparateSubmissionsByFolder
    }

    /**
     * Test the property 'expiresAt'
     */
    @Test
    public void expiresAtTest() {
        // TODO: test expiresAt
    }

    /**
     * Test the property 'formFieldSet'
     */
    @Test
    public void formFieldSetTest() {
        // TODO: test formFieldSet
    }

    /**
     * Test the property 'hasInbox'
     */
    @Test
    public void hasInboxTest() {
        // TODO: test hasInbox
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'inboxId'
     */
    @Test
    public void inboxIdTest() {
        // TODO: test inboxId
    }

    /**
     * Test the property 'maxUses'
     */
    @Test
    public void maxUsesTest() {
        // TODO: test maxUses
    }

    /**
     * Test the property 'note'
     */
    @Test
    public void noteTest() {
        // TODO: test note
    }

    /**
     * Test the property 'passwordProtected'
     */
    @Test
    public void passwordProtectedTest() {
        // TODO: test passwordProtected
    }

    /**
     * Test the property 'pathTemplate'
     */
    @Test
    public void pathTemplateTest() {
        // TODO: test pathTemplate
    }

    /**
     * Test the property 'paths'
     */
    @Test
    public void pathsTest() {
        // TODO: test paths
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'previewOnly'
     */
    @Test
    public void previewOnlyTest() {
        // TODO: test previewOnly
    }

    /**
     * Test the property 'requireRegistration'
     */
    @Test
    public void requireRegistrationTest() {
        // TODO: test requireRegistration
    }

    /**
     * Test the property 'requireShareRecipient'
     */
    @Test
    public void requireShareRecipientTest() {
        // TODO: test requireShareRecipient
    }

    /**
     * Test the property 'sendEmailReceiptToUploader'
     */
    @Test
    public void sendEmailReceiptToUploaderTest() {
        // TODO: test sendEmailReceiptToUploader
    }

    /**
     * Test the property 'skipCompany'
     */
    @Test
    public void skipCompanyTest() {
        // TODO: test skipCompany
    }

    /**
     * Test the property 'skipEmail'
     */
    @Test
    public void skipEmailTest() {
        // TODO: test skipEmail
    }

    /**
     * Test the property 'skipName'
     */
    @Test
    public void skipNameTest() {
        // TODO: test skipName
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'watermarkAttachment'
     */
    @Test
    public void watermarkAttachmentTest() {
        // TODO: test watermarkAttachment
    }

    /**
     * Test the property 'watermarkValue'
     */
    @Test
    public void watermarkValueTest() {
        // TODO: test watermarkValue
    }

}
