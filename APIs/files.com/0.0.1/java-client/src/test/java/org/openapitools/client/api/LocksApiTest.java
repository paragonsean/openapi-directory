/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LockEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocksApi
 */
@Disabled
public class LocksApiTest {

    private final LocksApi api = new LocksApi();

    /**
     * Delete Lock
     *
     * Delete Lock
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteLocksPathTest() throws ApiException {
        String path = null;
        String token = null;
        api.deleteLocksPath(path, token);
        // TODO: test validations
    }

    /**
     * List Locks by path
     *
     * List Locks by path
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lockListForPathTest() throws ApiException {
        String path = null;
        String cursor = null;
        Integer perPage = null;
        Boolean includeChildren = null;
        List<LockEntity> response = api.lockListForPath(path, cursor, perPage, includeChildren);
        // TODO: test validations
    }

    /**
     * Create Lock
     *
     * Create Lock
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postLocksPathTest() throws ApiException {
        String path = null;
        Boolean allowAccessByAnyUser = null;
        Boolean exclusive = null;
        String recursive = null;
        Integer timeout = null;
        LockEntity response = api.postLocksPath(path, allowAccessByAnyUser, exclusive, recursive, timeout);
        // TODO: test validations
    }

}
