/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ImageEntity;
import org.openapitools.client.model.SessionEntity;
import org.openapitools.client.model.UserEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SiteEntity
 */
public class SiteEntityTest {
    private final SiteEntity model = new SiteEntity();

    /**
     * Model tests for SiteEntity
     */
    @Test
    public void testSiteEntity() {
        // TODO: test SiteEntity
    }

    /**
     * Test the property 'activeSftpHostKeyId'
     */
    @Test
    public void activeSftpHostKeyIdTest() {
        // TODO: test activeSftpHostKeyId
    }

    /**
     * Test the property 'adminUserId'
     */
    @Test
    public void adminUserIdTest() {
        // TODO: test adminUserId
    }

    /**
     * Test the property 'allowBundleNames'
     */
    @Test
    public void allowBundleNamesTest() {
        // TODO: test allowBundleNames
    }

    /**
     * Test the property 'allowed2faMethodBypassForFtpSftpDav'
     */
    @Test
    public void allowed2faMethodBypassForFtpSftpDavTest() {
        // TODO: test allowed2faMethodBypassForFtpSftpDav
    }

    /**
     * Test the property 'allowed2faMethodSms'
     */
    @Test
    public void allowed2faMethodSmsTest() {
        // TODO: test allowed2faMethodSms
    }

    /**
     * Test the property 'allowed2faMethodTotp'
     */
    @Test
    public void allowed2faMethodTotpTest() {
        // TODO: test allowed2faMethodTotp
    }

    /**
     * Test the property 'allowed2faMethodU2f'
     */
    @Test
    public void allowed2faMethodU2fTest() {
        // TODO: test allowed2faMethodU2f
    }

    /**
     * Test the property 'allowed2faMethodWebauthn'
     */
    @Test
    public void allowed2faMethodWebauthnTest() {
        // TODO: test allowed2faMethodWebauthn
    }

    /**
     * Test the property 'allowed2faMethodYubi'
     */
    @Test
    public void allowed2faMethodYubiTest() {
        // TODO: test allowed2faMethodYubi
    }

    /**
     * Test the property 'allowedCountries'
     */
    @Test
    public void allowedCountriesTest() {
        // TODO: test allowedCountries
    }

    /**
     * Test the property 'allowedIps'
     */
    @Test
    public void allowedIpsTest() {
        // TODO: test allowedIps
    }

    /**
     * Test the property 'askAboutOverwrites'
     */
    @Test
    public void askAboutOverwritesTest() {
        // TODO: test askAboutOverwrites
    }

    /**
     * Test the property 'bundleActivityNotifications'
     */
    @Test
    public void bundleActivityNotificationsTest() {
        // TODO: test bundleActivityNotifications
    }

    /**
     * Test the property 'bundleExpiration'
     */
    @Test
    public void bundleExpirationTest() {
        // TODO: test bundleExpiration
    }

    /**
     * Test the property 'bundlePasswordRequired'
     */
    @Test
    public void bundlePasswordRequiredTest() {
        // TODO: test bundlePasswordRequired
    }

    /**
     * Test the property 'bundleRegistrationNotifications'
     */
    @Test
    public void bundleRegistrationNotificationsTest() {
        // TODO: test bundleRegistrationNotifications
    }

    /**
     * Test the property 'bundleRequireShareRecipient'
     */
    @Test
    public void bundleRequireShareRecipientTest() {
        // TODO: test bundleRequireShareRecipient
    }

    /**
     * Test the property 'bundleUploadReceiptNotifications'
     */
    @Test
    public void bundleUploadReceiptNotificationsTest() {
        // TODO: test bundleUploadReceiptNotifications
    }

    /**
     * Test the property 'bundleWatermarkAttachment'
     */
    @Test
    public void bundleWatermarkAttachmentTest() {
        // TODO: test bundleWatermarkAttachment
    }

    /**
     * Test the property 'bundleWatermarkValue'
     */
    @Test
    public void bundleWatermarkValueTest() {
        // TODO: test bundleWatermarkValue
    }

    /**
     * Test the property 'color2Left'
     */
    @Test
    public void color2LeftTest() {
        // TODO: test color2Left
    }

    /**
     * Test the property 'color2Link'
     */
    @Test
    public void color2LinkTest() {
        // TODO: test color2Link
    }

    /**
     * Test the property 'color2Text'
     */
    @Test
    public void color2TextTest() {
        // TODO: test color2Text
    }

    /**
     * Test the property 'color2Top'
     */
    @Test
    public void color2TopTest() {
        // TODO: test color2Top
    }

    /**
     * Test the property 'color2TopText'
     */
    @Test
    public void color2TopTextTest() {
        // TODO: test color2TopText
    }

    /**
     * Test the property 'contactName'
     */
    @Test
    public void contactNameTest() {
        // TODO: test contactName
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'customNamespace'
     */
    @Test
    public void customNamespaceTest() {
        // TODO: test customNamespace
    }

    /**
     * Test the property 'daysToRetainBackups'
     */
    @Test
    public void daysToRetainBackupsTest() {
        // TODO: test daysToRetainBackups
    }

    /**
     * Test the property 'defaultTimeZone'
     */
    @Test
    public void defaultTimeZoneTest() {
        // TODO: test defaultTimeZone
    }

    /**
     * Test the property 'desktopApp'
     */
    @Test
    public void desktopAppTest() {
        // TODO: test desktopApp
    }

    /**
     * Test the property 'desktopAppSessionIpPinning'
     */
    @Test
    public void desktopAppSessionIpPinningTest() {
        // TODO: test desktopAppSessionIpPinning
    }

    /**
     * Test the property 'desktopAppSessionLifetime'
     */
    @Test
    public void desktopAppSessionLifetimeTest() {
        // TODO: test desktopAppSessionLifetime
    }

    /**
     * Test the property 'disableFilesCertificateGeneration'
     */
    @Test
    public void disableFilesCertificateGenerationTest() {
        // TODO: test disableFilesCertificateGeneration
    }

    /**
     * Test the property 'disableNotifications'
     */
    @Test
    public void disableNotificationsTest() {
        // TODO: test disableNotifications
    }

    /**
     * Test the property 'disablePasswordReset'
     */
    @Test
    public void disablePasswordResetTest() {
        // TODO: test disablePasswordReset
    }

    /**
     * Test the property 'disableUsersFromInactivityPeriodDays'
     */
    @Test
    public void disableUsersFromInactivityPeriodDaysTest() {
        // TODO: test disableUsersFromInactivityPeriodDays
    }

    /**
     * Test the property 'disallowedCountries'
     */
    @Test
    public void disallowedCountriesTest() {
        // TODO: test disallowedCountries
    }

    /**
     * Test the property 'domain'
     */
    @Test
    public void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'domainHstsHeader'
     */
    @Test
    public void domainHstsHeaderTest() {
        // TODO: test domainHstsHeader
    }

    /**
     * Test the property 'domainLetsencryptChain'
     */
    @Test
    public void domainLetsencryptChainTest() {
        // TODO: test domainLetsencryptChain
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'folderPermissionsGroupsOnly'
     */
    @Test
    public void folderPermissionsGroupsOnlyTest() {
        // TODO: test folderPermissionsGroupsOnly
    }

    /**
     * Test the property 'ftpEnabled'
     */
    @Test
    public void ftpEnabledTest() {
        // TODO: test ftpEnabled
    }

    /**
     * Test the property 'hipaa'
     */
    @Test
    public void hipaaTest() {
        // TODO: test hipaa
    }

    /**
     * Test the property 'icon128'
     */
    @Test
    public void icon128Test() {
        // TODO: test icon128
    }

    /**
     * Test the property 'icon16'
     */
    @Test
    public void icon16Test() {
        // TODO: test icon16
    }

    /**
     * Test the property 'icon32'
     */
    @Test
    public void icon32Test() {
        // TODO: test icon32
    }

    /**
     * Test the property 'icon48'
     */
    @Test
    public void icon48Test() {
        // TODO: test icon48
    }

    /**
     * Test the property 'immutableFilesSetAt'
     */
    @Test
    public void immutableFilesSetAtTest() {
        // TODO: test immutableFilesSetAt
    }

    /**
     * Test the property 'includePasswordInWelcomeEmail'
     */
    @Test
    public void includePasswordInWelcomeEmailTest() {
        // TODO: test includePasswordInWelcomeEmail
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'ldapBaseDn'
     */
    @Test
    public void ldapBaseDnTest() {
        // TODO: test ldapBaseDn
    }

    /**
     * Test the property 'ldapDomain'
     */
    @Test
    public void ldapDomainTest() {
        // TODO: test ldapDomain
    }

    /**
     * Test the property 'ldapEnabled'
     */
    @Test
    public void ldapEnabledTest() {
        // TODO: test ldapEnabled
    }

    /**
     * Test the property 'ldapGroupAction'
     */
    @Test
    public void ldapGroupActionTest() {
        // TODO: test ldapGroupAction
    }

    /**
     * Test the property 'ldapGroupExclusion'
     */
    @Test
    public void ldapGroupExclusionTest() {
        // TODO: test ldapGroupExclusion
    }

    /**
     * Test the property 'ldapGroupInclusion'
     */
    @Test
    public void ldapGroupInclusionTest() {
        // TODO: test ldapGroupInclusion
    }

    /**
     * Test the property 'ldapHost'
     */
    @Test
    public void ldapHostTest() {
        // TODO: test ldapHost
    }

    /**
     * Test the property 'ldapHost2'
     */
    @Test
    public void ldapHost2Test() {
        // TODO: test ldapHost2
    }

    /**
     * Test the property 'ldapHost3'
     */
    @Test
    public void ldapHost3Test() {
        // TODO: test ldapHost3
    }

    /**
     * Test the property 'ldapPort'
     */
    @Test
    public void ldapPortTest() {
        // TODO: test ldapPort
    }

    /**
     * Test the property 'ldapSecure'
     */
    @Test
    public void ldapSecureTest() {
        // TODO: test ldapSecure
    }

    /**
     * Test the property 'ldapType'
     */
    @Test
    public void ldapTypeTest() {
        // TODO: test ldapType
    }

    /**
     * Test the property 'ldapUserAction'
     */
    @Test
    public void ldapUserActionTest() {
        // TODO: test ldapUserAction
    }

    /**
     * Test the property 'ldapUserIncludeGroups'
     */
    @Test
    public void ldapUserIncludeGroupsTest() {
        // TODO: test ldapUserIncludeGroups
    }

    /**
     * Test the property 'ldapUsername'
     */
    @Test
    public void ldapUsernameTest() {
        // TODO: test ldapUsername
    }

    /**
     * Test the property 'ldapUsernameField'
     */
    @Test
    public void ldapUsernameFieldTest() {
        // TODO: test ldapUsernameField
    }

    /**
     * Test the property 'loginHelpText'
     */
    @Test
    public void loginHelpTextTest() {
        // TODO: test loginHelpText
    }

    /**
     * Test the property 'logo'
     */
    @Test
    public void logoTest() {
        // TODO: test logo
    }

    /**
     * Test the property 'maxPriorPasswords'
     */
    @Test
    public void maxPriorPasswordsTest() {
        // TODO: test maxPriorPasswords
    }

    /**
     * Test the property 'mobileApp'
     */
    @Test
    public void mobileAppTest() {
        // TODO: test mobileApp
    }

    /**
     * Test the property 'mobileAppSessionIpPinning'
     */
    @Test
    public void mobileAppSessionIpPinningTest() {
        // TODO: test mobileAppSessionIpPinning
    }

    /**
     * Test the property 'mobileAppSessionLifetime'
     */
    @Test
    public void mobileAppSessionLifetimeTest() {
        // TODO: test mobileAppSessionLifetime
    }

    /**
     * Test the property 'motdText'
     */
    @Test
    public void motdTextTest() {
        // TODO: test motdText
    }

    /**
     * Test the property 'motdUseForFtp'
     */
    @Test
    public void motdUseForFtpTest() {
        // TODO: test motdUseForFtp
    }

    /**
     * Test the property 'motdUseForSftp'
     */
    @Test
    public void motdUseForSftpTest() {
        // TODO: test motdUseForSftp
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nextBillingAmount'
     */
    @Test
    public void nextBillingAmountTest() {
        // TODO: test nextBillingAmount
    }

    /**
     * Test the property 'nextBillingDate'
     */
    @Test
    public void nextBillingDateTest() {
        // TODO: test nextBillingDate
    }

    /**
     * Test the property 'nonSsoGroupsAllowed'
     */
    @Test
    public void nonSsoGroupsAllowedTest() {
        // TODO: test nonSsoGroupsAllowed
    }

    /**
     * Test the property 'nonSsoUsersAllowed'
     */
    @Test
    public void nonSsoUsersAllowedTest() {
        // TODO: test nonSsoUsersAllowed
    }

    /**
     * Test the property 'officeIntegrationAvailable'
     */
    @Test
    public void officeIntegrationAvailableTest() {
        // TODO: test officeIntegrationAvailable
    }

    /**
     * Test the property 'officeIntegrationType'
     */
    @Test
    public void officeIntegrationTypeTest() {
        // TODO: test officeIntegrationType
    }

    /**
     * Test the property 'oncehubLink'
     */
    @Test
    public void oncehubLinkTest() {
        // TODO: test oncehubLink
    }

    /**
     * Test the property 'optOutGlobal'
     */
    @Test
    public void optOutGlobalTest() {
        // TODO: test optOutGlobal
    }

    /**
     * Test the property 'overdue'
     */
    @Test
    public void overdueTest() {
        // TODO: test overdue
    }

    /**
     * Test the property 'passwordMinLength'
     */
    @Test
    public void passwordMinLengthTest() {
        // TODO: test passwordMinLength
    }

    /**
     * Test the property 'passwordRequireLetter'
     */
    @Test
    public void passwordRequireLetterTest() {
        // TODO: test passwordRequireLetter
    }

    /**
     * Test the property 'passwordRequireMixed'
     */
    @Test
    public void passwordRequireMixedTest() {
        // TODO: test passwordRequireMixed
    }

    /**
     * Test the property 'passwordRequireNumber'
     */
    @Test
    public void passwordRequireNumberTest() {
        // TODO: test passwordRequireNumber
    }

    /**
     * Test the property 'passwordRequireSpecial'
     */
    @Test
    public void passwordRequireSpecialTest() {
        // TODO: test passwordRequireSpecial
    }

    /**
     * Test the property 'passwordRequireUnbreached'
     */
    @Test
    public void passwordRequireUnbreachedTest() {
        // TODO: test passwordRequireUnbreached
    }

    /**
     * Test the property 'passwordRequirementsApplyToBundles'
     */
    @Test
    public void passwordRequirementsApplyToBundlesTest() {
        // TODO: test passwordRequirementsApplyToBundles
    }

    /**
     * Test the property 'passwordValidityDays'
     */
    @Test
    public void passwordValidityDaysTest() {
        // TODO: test passwordValidityDays
    }

    /**
     * Test the property 'phone'
     */
    @Test
    public void phoneTest() {
        // TODO: test phone
    }

    /**
     * Test the property 'pinAllRemoteServersToSiteRegion'
     */
    @Test
    public void pinAllRemoteServersToSiteRegionTest() {
        // TODO: test pinAllRemoteServersToSiteRegion
    }

    /**
     * Test the property 'replyToEmail'
     */
    @Test
    public void replyToEmailTest() {
        // TODO: test replyToEmail
    }

    /**
     * Test the property 'require2fa'
     */
    @Test
    public void require2faTest() {
        // TODO: test require2fa
    }

    /**
     * Test the property 'require2faStopTime'
     */
    @Test
    public void require2faStopTimeTest() {
        // TODO: test require2faStopTime
    }

    /**
     * Test the property 'require2faUserType'
     */
    @Test
    public void require2faUserTypeTest() {
        // TODO: test require2faUserType
    }

    /**
     * Test the property 'session'
     */
    @Test
    public void sessionTest() {
        // TODO: test session
    }

    /**
     * Test the property 'sessionExpiry'
     */
    @Test
    public void sessionExpiryTest() {
        // TODO: test sessionExpiry
    }

    /**
     * Test the property 'sessionExpiryMinutes'
     */
    @Test
    public void sessionExpiryMinutesTest() {
        // TODO: test sessionExpiryMinutes
    }

    /**
     * Test the property 'sessionPinnedByIp'
     */
    @Test
    public void sessionPinnedByIpTest() {
        // TODO: test sessionPinnedByIp
    }

    /**
     * Test the property 'sftpEnabled'
     */
    @Test
    public void sftpEnabledTest() {
        // TODO: test sftpEnabled
    }

    /**
     * Test the property 'sftpHostKeyType'
     */
    @Test
    public void sftpHostKeyTypeTest() {
        // TODO: test sftpHostKeyType
    }

    /**
     * Test the property 'sftpInsecureCiphers'
     */
    @Test
    public void sftpInsecureCiphersTest() {
        // TODO: test sftpInsecureCiphers
    }

    /**
     * Test the property 'sftpUserRootEnabled'
     */
    @Test
    public void sftpUserRootEnabledTest() {
        // TODO: test sftpUserRootEnabled
    }

    /**
     * Test the property 'sharingEnabled'
     */
    @Test
    public void sharingEnabledTest() {
        // TODO: test sharingEnabled
    }

    /**
     * Test the property 'showRequestAccessLink'
     */
    @Test
    public void showRequestAccessLinkTest() {
        // TODO: test showRequestAccessLink
    }

    /**
     * Test the property 'siteFooter'
     */
    @Test
    public void siteFooterTest() {
        // TODO: test siteFooter
    }

    /**
     * Test the property 'siteHeader'
     */
    @Test
    public void siteHeaderTest() {
        // TODO: test siteHeader
    }

    /**
     * Test the property 'smtpAddress'
     */
    @Test
    public void smtpAddressTest() {
        // TODO: test smtpAddress
    }

    /**
     * Test the property 'smtpAuthentication'
     */
    @Test
    public void smtpAuthenticationTest() {
        // TODO: test smtpAuthentication
    }

    /**
     * Test the property 'smtpFrom'
     */
    @Test
    public void smtpFromTest() {
        // TODO: test smtpFrom
    }

    /**
     * Test the property 'smtpPort'
     */
    @Test
    public void smtpPortTest() {
        // TODO: test smtpPort
    }

    /**
     * Test the property 'smtpUsername'
     */
    @Test
    public void smtpUsernameTest() {
        // TODO: test smtpUsername
    }

    /**
     * Test the property 'sslRequired'
     */
    @Test
    public void sslRequiredTest() {
        // TODO: test sslRequired
    }

    /**
     * Test the property 'subdomain'
     */
    @Test
    public void subdomainTest() {
        // TODO: test subdomain
    }

    /**
     * Test the property 'switchToPlanDate'
     */
    @Test
    public void switchToPlanDateTest() {
        // TODO: test switchToPlanDate
    }

    /**
     * Test the property 'tlsDisabled'
     */
    @Test
    public void tlsDisabledTest() {
        // TODO: test tlsDisabled
    }

    /**
     * Test the property 'trialDaysLeft'
     */
    @Test
    public void trialDaysLeftTest() {
        // TODO: test trialDaysLeft
    }

    /**
     * Test the property 'trialUntil'
     */
    @Test
    public void trialUntilTest() {
        // TODO: test trialUntil
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'uploadsViaEmailAuthentication'
     */
    @Test
    public void uploadsViaEmailAuthenticationTest() {
        // TODO: test uploadsViaEmailAuthentication
    }

    /**
     * Test the property 'useProvidedModifiedAt'
     */
    @Test
    public void useProvidedModifiedAtTest() {
        // TODO: test useProvidedModifiedAt
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'userLockout'
     */
    @Test
    public void userLockoutTest() {
        // TODO: test userLockout
    }

    /**
     * Test the property 'userLockoutLockPeriod'
     */
    @Test
    public void userLockoutLockPeriodTest() {
        // TODO: test userLockoutLockPeriod
    }

    /**
     * Test the property 'userLockoutTries'
     */
    @Test
    public void userLockoutTriesTest() {
        // TODO: test userLockoutTries
    }

    /**
     * Test the property 'userLockoutWithin'
     */
    @Test
    public void userLockoutWithinTest() {
        // TODO: test userLockoutWithin
    }

    /**
     * Test the property 'userRequestsEnabled'
     */
    @Test
    public void userRequestsEnabledTest() {
        // TODO: test userRequestsEnabled
    }

    /**
     * Test the property 'userRequestsNotifyAdmins'
     */
    @Test
    public void userRequestsNotifyAdminsTest() {
        // TODO: test userRequestsNotifyAdmins
    }

    /**
     * Test the property 'welcomeCustomText'
     */
    @Test
    public void welcomeCustomTextTest() {
        // TODO: test welcomeCustomText
    }

    /**
     * Test the property 'welcomeEmailCc'
     */
    @Test
    public void welcomeEmailCcTest() {
        // TODO: test welcomeEmailCc
    }

    /**
     * Test the property 'welcomeEmailEnabled'
     */
    @Test
    public void welcomeEmailEnabledTest() {
        // TODO: test welcomeEmailEnabled
    }

    /**
     * Test the property 'welcomeEmailSubject'
     */
    @Test
    public void welcomeEmailSubjectTest() {
        // TODO: test welcomeEmailSubject
    }

    /**
     * Test the property 'welcomeScreen'
     */
    @Test
    public void welcomeScreenTest() {
        // TODO: test welcomeScreen
    }

    /**
     * Test the property 'windowsModeFtp'
     */
    @Test
    public void windowsModeFtpTest() {
        // TODO: test windowsModeFtp
    }

}
