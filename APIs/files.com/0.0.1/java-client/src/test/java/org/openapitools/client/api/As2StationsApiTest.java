/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.As2StationEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for As2StationsApi
 */
@Disabled
public class As2StationsApiTest {

    private final As2StationsApi api = new As2StationsApi();

    /**
     * Delete As2 Station
     *
     * Delete As2 Station
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAs2StationsIdTest() throws ApiException {
        Integer id = null;
        api.deleteAs2StationsId(id);
        // TODO: test validations
    }

    /**
     * List As2 Stations
     *
     * List As2 Stations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAs2StationsTest() throws ApiException {
        String cursor = null;
        Integer perPage = null;
        List<As2StationEntity> response = api.getAs2Stations(cursor, perPage);
        // TODO: test validations
    }

    /**
     * Show As2 Station
     *
     * Show As2 Station
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAs2StationsIdTest() throws ApiException {
        Integer id = null;
        As2StationEntity response = api.getAs2StationsId(id);
        // TODO: test validations
    }

    /**
     * Update As2 Station
     *
     * Update As2 Station
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchAs2StationsIdTest() throws ApiException {
        Integer id = null;
        String name = null;
        String privateKey = null;
        String privateKeyPassword = null;
        String publicCertificate = null;
        As2StationEntity response = api.patchAs2StationsId(id, name, privateKey, privateKeyPassword, publicCertificate);
        // TODO: test validations
    }

    /**
     * Create As2 Station
     *
     * Create As2 Station
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postAs2StationsTest() throws ApiException {
        String name = null;
        String privateKey = null;
        String publicCertificate = null;
        String privateKeyPassword = null;
        As2StationEntity response = api.postAs2Stations(name, privateKey, publicCertificate, privateKeyPassword);
        // TODO: test validations
    }

}
