/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * List History Export Results
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:28:32.972969-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class HistoryExportResultEntity {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private Integer createdAt;

  public static final String SERIALIZED_NAME_CREATED_AT_ISO8601 = "created_at_iso8601";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_ISO8601)
  private Integer createdAtIso8601;

  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private String destination;

  public static final String SERIALIZED_NAME_FAILURE_TYPE = "failure_type";
  @SerializedName(SERIALIZED_NAME_FAILURE_TYPE)
  private String failureType;

  public static final String SERIALIZED_NAME_FILE_ID = "file_id";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private Integer fileId;

  public static final String SERIALIZED_NAME_FOLDER = "folder";
  @SerializedName(SERIALIZED_NAME_FOLDER)
  private String folder;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INTERFACE = "interface";
  @SerializedName(SERIALIZED_NAME_INTERFACE)
  private String _interface;

  public static final String SERIALIZED_NAME_IP = "ip";
  @SerializedName(SERIALIZED_NAME_IP)
  private String ip;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private Integer parentId;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_SRC = "src";
  @SerializedName(SERIALIZED_NAME_SRC)
  private String src;

  public static final String SERIALIZED_NAME_TARGET_EXPIRES_AT = "target_expires_at";
  @SerializedName(SERIALIZED_NAME_TARGET_EXPIRES_AT)
  private Integer targetExpiresAt;

  public static final String SERIALIZED_NAME_TARGET_ID = "target_id";
  @SerializedName(SERIALIZED_NAME_TARGET_ID)
  private Integer targetId;

  public static final String SERIALIZED_NAME_TARGET_NAME = "target_name";
  @SerializedName(SERIALIZED_NAME_TARGET_NAME)
  private String targetName;

  public static final String SERIALIZED_NAME_TARGET_PERMISSION = "target_permission";
  @SerializedName(SERIALIZED_NAME_TARGET_PERMISSION)
  private String targetPermission;

  public static final String SERIALIZED_NAME_TARGET_PERMISSION_SET = "target_permission_set";
  @SerializedName(SERIALIZED_NAME_TARGET_PERMISSION_SET)
  private String targetPermissionSet;

  public static final String SERIALIZED_NAME_TARGET_PLATFORM = "target_platform";
  @SerializedName(SERIALIZED_NAME_TARGET_PLATFORM)
  private String targetPlatform;

  public static final String SERIALIZED_NAME_TARGET_RECURSIVE = "target_recursive";
  @SerializedName(SERIALIZED_NAME_TARGET_RECURSIVE)
  private Boolean targetRecursive;

  public static final String SERIALIZED_NAME_TARGET_USER_ID = "target_user_id";
  @SerializedName(SERIALIZED_NAME_TARGET_USER_ID)
  private Integer targetUserId;

  public static final String SERIALIZED_NAME_TARGET_USERNAME = "target_username";
  @SerializedName(SERIALIZED_NAME_TARGET_USERNAME)
  private String targetUsername;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public HistoryExportResultEntity() {
  }

  public HistoryExportResultEntity action(String action) {
    this.action = action;
    return this;
  }

  /**
   * What action was taken. Valid values: &#x60;create&#x60;, &#x60;read&#x60;, &#x60;update&#x60;, &#x60;destroy&#x60;, &#x60;move&#x60;, &#x60;login&#x60;, &#x60;failedlogin&#x60;, &#x60;copy&#x60;, &#x60;user_create&#x60;, &#x60;user_update&#x60;, &#x60;user_destroy&#x60;, &#x60;group_create&#x60;, &#x60;group_update&#x60;, &#x60;group_destroy&#x60;, &#x60;permission_create&#x60;, &#x60;permission_destroy&#x60;, &#x60;api_key_create&#x60;, &#x60;api_key_update&#x60;, &#x60;api_key_destroy&#x60;
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public HistoryExportResultEntity createdAt(Integer createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * When the action happened
   * @return createdAt
   */
  @javax.annotation.Nullable
  public Integer getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }


  public HistoryExportResultEntity createdAtIso8601(Integer createdAtIso8601) {
    this.createdAtIso8601 = createdAtIso8601;
    return this;
  }

  /**
   * When the action happened, in ISO8601 format.
   * @return createdAtIso8601
   */
  @javax.annotation.Nullable
  public Integer getCreatedAtIso8601() {
    return createdAtIso8601;
  }

  public void setCreatedAtIso8601(Integer createdAtIso8601) {
    this.createdAtIso8601 = createdAtIso8601;
  }


  public HistoryExportResultEntity destination(String destination) {
    this.destination = destination;
    return this;
  }

  /**
   * File moved to this destination folder
   * @return destination
   */
  @javax.annotation.Nullable
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }


  public HistoryExportResultEntity failureType(String failureType) {
    this.failureType = failureType;
    return this;
  }

  /**
   * The type of login failure, if applicable.  Valid values: &#x60;expired_trial&#x60;, &#x60;account_overdue&#x60;, &#x60;locked_out&#x60;, &#x60;ip_mismatch&#x60;, &#x60;password_mismatch&#x60;, &#x60;site_mismatch&#x60;, &#x60;username_not_found&#x60;, &#x60;none&#x60;, &#x60;no_ftp_permission&#x60;, &#x60;no_web_permission&#x60;, &#x60;no_directory&#x60;, &#x60;errno_enoent&#x60;, &#x60;no_sftp_permission&#x60;, &#x60;no_dav_permission&#x60;, &#x60;no_restapi_permission&#x60;, &#x60;key_mismatch&#x60;, &#x60;region_mismatch&#x60;, &#x60;expired_access&#x60;, &#x60;desktop_ip_mismatch&#x60;, &#x60;desktop_api_key_not_used_quickly_enough&#x60;, &#x60;disabled&#x60;, &#x60;country_mismatch&#x60;
   * @return failureType
   */
  @javax.annotation.Nullable
  public String getFailureType() {
    return failureType;
  }

  public void setFailureType(String failureType) {
    this.failureType = failureType;
  }


  public HistoryExportResultEntity fileId(Integer fileId) {
    this.fileId = fileId;
    return this;
  }

  /**
   * File ID related to the action
   * @return fileId
   */
  @javax.annotation.Nullable
  public Integer getFileId() {
    return fileId;
  }

  public void setFileId(Integer fileId) {
    this.fileId = fileId;
  }


  public HistoryExportResultEntity folder(String folder) {
    this.folder = folder;
    return this;
  }

  /**
   * Folder in which the action occurred
   * @return folder
   */
  @javax.annotation.Nullable
  public String getFolder() {
    return folder;
  }

  public void setFolder(String folder) {
    this.folder = folder;
  }


  public HistoryExportResultEntity id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Action ID
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public HistoryExportResultEntity _interface(String _interface) {
    this._interface = _interface;
    return this;
  }

  /**
   * Inteface through which the action was taken. Valid values: &#x60;web&#x60;, &#x60;ftp&#x60;, &#x60;robot&#x60;, &#x60;jsapi&#x60;, &#x60;webdesktopapi&#x60;, &#x60;sftp&#x60;, &#x60;dav&#x60;, &#x60;desktop&#x60;, &#x60;restapi&#x60;, &#x60;scim&#x60;, &#x60;office&#x60;, &#x60;mobile&#x60;, &#x60;as2&#x60;, &#x60;inbound_email&#x60;, &#x60;remote&#x60;
   * @return _interface
   */
  @javax.annotation.Nullable
  public String getInterface() {
    return _interface;
  }

  public void setInterface(String _interface) {
    this._interface = _interface;
  }


  public HistoryExportResultEntity ip(String ip) {
    this.ip = ip;
    return this;
  }

  /**
   * Client IP that performed the action
   * @return ip
   */
  @javax.annotation.Nullable
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }


  public HistoryExportResultEntity parentId(Integer parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * ID of the parent folder
   * @return parentId
   */
  @javax.annotation.Nullable
  public Integer getParentId() {
    return parentId;
  }

  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }


  public HistoryExportResultEntity path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Path of the related action
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  public HistoryExportResultEntity src(String src) {
    this.src = src;
    return this;
  }

  /**
   * File move originated from this path
   * @return src
   */
  @javax.annotation.Nullable
  public String getSrc() {
    return src;
  }

  public void setSrc(String src) {
    this.src = src;
  }


  public HistoryExportResultEntity targetExpiresAt(Integer targetExpiresAt) {
    this.targetExpiresAt = targetExpiresAt;
    return this;
  }

  /**
   * If searching for Histories about API keys, this is when the API key will expire
   * @return targetExpiresAt
   */
  @javax.annotation.Nullable
  public Integer getTargetExpiresAt() {
    return targetExpiresAt;
  }

  public void setTargetExpiresAt(Integer targetExpiresAt) {
    this.targetExpiresAt = targetExpiresAt;
  }


  public HistoryExportResultEntity targetId(Integer targetId) {
    this.targetId = targetId;
    return this;
  }

  /**
   * ID of the object (such as Users, or API Keys) on which the action was taken
   * @return targetId
   */
  @javax.annotation.Nullable
  public Integer getTargetId() {
    return targetId;
  }

  public void setTargetId(Integer targetId) {
    this.targetId = targetId;
  }


  public HistoryExportResultEntity targetName(String targetName) {
    this.targetName = targetName;
    return this;
  }

  /**
   * Name of the User, Group or other object with a name related to this action
   * @return targetName
   */
  @javax.annotation.Nullable
  public String getTargetName() {
    return targetName;
  }

  public void setTargetName(String targetName) {
    this.targetName = targetName;
  }


  public HistoryExportResultEntity targetPermission(String targetPermission) {
    this.targetPermission = targetPermission;
    return this;
  }

  /**
   * Permission level of the action
   * @return targetPermission
   */
  @javax.annotation.Nullable
  public String getTargetPermission() {
    return targetPermission;
  }

  public void setTargetPermission(String targetPermission) {
    this.targetPermission = targetPermission;
  }


  public HistoryExportResultEntity targetPermissionSet(String targetPermissionSet) {
    this.targetPermissionSet = targetPermissionSet;
    return this;
  }

  /**
   * If searching for Histories about API keys, this represents the permission set of the associated  API key
   * @return targetPermissionSet
   */
  @javax.annotation.Nullable
  public String getTargetPermissionSet() {
    return targetPermissionSet;
  }

  public void setTargetPermissionSet(String targetPermissionSet) {
    this.targetPermissionSet = targetPermissionSet;
  }


  public HistoryExportResultEntity targetPlatform(String targetPlatform) {
    this.targetPlatform = targetPlatform;
    return this;
  }

  /**
   * If searching for Histories about API keys, this is the platform on which the action was taken
   * @return targetPlatform
   */
  @javax.annotation.Nullable
  public String getTargetPlatform() {
    return targetPlatform;
  }

  public void setTargetPlatform(String targetPlatform) {
    this.targetPlatform = targetPlatform;
  }


  public HistoryExportResultEntity targetRecursive(Boolean targetRecursive) {
    this.targetRecursive = targetRecursive;
    return this;
  }

  /**
   * Whether or not the action was recursive
   * @return targetRecursive
   */
  @javax.annotation.Nullable
  public Boolean getTargetRecursive() {
    return targetRecursive;
  }

  public void setTargetRecursive(Boolean targetRecursive) {
    this.targetRecursive = targetRecursive;
  }


  public HistoryExportResultEntity targetUserId(Integer targetUserId) {
    this.targetUserId = targetUserId;
    return this;
  }

  /**
   * If searching for Histories about API keys, this is the User ID on which the action was taken
   * @return targetUserId
   */
  @javax.annotation.Nullable
  public Integer getTargetUserId() {
    return targetUserId;
  }

  public void setTargetUserId(Integer targetUserId) {
    this.targetUserId = targetUserId;
  }


  public HistoryExportResultEntity targetUsername(String targetUsername) {
    this.targetUsername = targetUsername;
    return this;
  }

  /**
   * If searching for Histories about API keys, this is the username on which the action was taken
   * @return targetUsername
   */
  @javax.annotation.Nullable
  public String getTargetUsername() {
    return targetUsername;
  }

  public void setTargetUsername(String targetUsername) {
    this.targetUsername = targetUsername;
  }


  public HistoryExportResultEntity userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * User ID
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public HistoryExportResultEntity username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Username of the user that performed the action
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HistoryExportResultEntity historyExportResultEntity = (HistoryExportResultEntity) o;
    return Objects.equals(this.action, historyExportResultEntity.action) &&
        Objects.equals(this.createdAt, historyExportResultEntity.createdAt) &&
        Objects.equals(this.createdAtIso8601, historyExportResultEntity.createdAtIso8601) &&
        Objects.equals(this.destination, historyExportResultEntity.destination) &&
        Objects.equals(this.failureType, historyExportResultEntity.failureType) &&
        Objects.equals(this.fileId, historyExportResultEntity.fileId) &&
        Objects.equals(this.folder, historyExportResultEntity.folder) &&
        Objects.equals(this.id, historyExportResultEntity.id) &&
        Objects.equals(this._interface, historyExportResultEntity._interface) &&
        Objects.equals(this.ip, historyExportResultEntity.ip) &&
        Objects.equals(this.parentId, historyExportResultEntity.parentId) &&
        Objects.equals(this.path, historyExportResultEntity.path) &&
        Objects.equals(this.src, historyExportResultEntity.src) &&
        Objects.equals(this.targetExpiresAt, historyExportResultEntity.targetExpiresAt) &&
        Objects.equals(this.targetId, historyExportResultEntity.targetId) &&
        Objects.equals(this.targetName, historyExportResultEntity.targetName) &&
        Objects.equals(this.targetPermission, historyExportResultEntity.targetPermission) &&
        Objects.equals(this.targetPermissionSet, historyExportResultEntity.targetPermissionSet) &&
        Objects.equals(this.targetPlatform, historyExportResultEntity.targetPlatform) &&
        Objects.equals(this.targetRecursive, historyExportResultEntity.targetRecursive) &&
        Objects.equals(this.targetUserId, historyExportResultEntity.targetUserId) &&
        Objects.equals(this.targetUsername, historyExportResultEntity.targetUsername) &&
        Objects.equals(this.userId, historyExportResultEntity.userId) &&
        Objects.equals(this.username, historyExportResultEntity.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, createdAt, createdAtIso8601, destination, failureType, fileId, folder, id, _interface, ip, parentId, path, src, targetExpiresAt, targetId, targetName, targetPermission, targetPermissionSet, targetPlatform, targetRecursive, targetUserId, targetUsername, userId, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HistoryExportResultEntity {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdAtIso8601: ").append(toIndentedString(createdAtIso8601)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    failureType: ").append(toIndentedString(failureType)).append("\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    _interface: ").append(toIndentedString(_interface)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    src: ").append(toIndentedString(src)).append("\n");
    sb.append("    targetExpiresAt: ").append(toIndentedString(targetExpiresAt)).append("\n");
    sb.append("    targetId: ").append(toIndentedString(targetId)).append("\n");
    sb.append("    targetName: ").append(toIndentedString(targetName)).append("\n");
    sb.append("    targetPermission: ").append(toIndentedString(targetPermission)).append("\n");
    sb.append("    targetPermissionSet: ").append(toIndentedString(targetPermissionSet)).append("\n");
    sb.append("    targetPlatform: ").append(toIndentedString(targetPlatform)).append("\n");
    sb.append("    targetRecursive: ").append(toIndentedString(targetRecursive)).append("\n");
    sb.append("    targetUserId: ").append(toIndentedString(targetUserId)).append("\n");
    sb.append("    targetUsername: ").append(toIndentedString(targetUsername)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("created_at");
    openapiFields.add("created_at_iso8601");
    openapiFields.add("destination");
    openapiFields.add("failure_type");
    openapiFields.add("file_id");
    openapiFields.add("folder");
    openapiFields.add("id");
    openapiFields.add("interface");
    openapiFields.add("ip");
    openapiFields.add("parent_id");
    openapiFields.add("path");
    openapiFields.add("src");
    openapiFields.add("target_expires_at");
    openapiFields.add("target_id");
    openapiFields.add("target_name");
    openapiFields.add("target_permission");
    openapiFields.add("target_permission_set");
    openapiFields.add("target_platform");
    openapiFields.add("target_recursive");
    openapiFields.add("target_user_id");
    openapiFields.add("target_username");
    openapiFields.add("user_id");
    openapiFields.add("username");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to HistoryExportResultEntity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!HistoryExportResultEntity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HistoryExportResultEntity is not found in the empty JSON string", HistoryExportResultEntity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!HistoryExportResultEntity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HistoryExportResultEntity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("destination") != null && !jsonObj.get("destination").isJsonNull()) && !jsonObj.get("destination").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination").toString()));
      }
      if ((jsonObj.get("failure_type") != null && !jsonObj.get("failure_type").isJsonNull()) && !jsonObj.get("failure_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failure_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failure_type").toString()));
      }
      if ((jsonObj.get("folder") != null && !jsonObj.get("folder").isJsonNull()) && !jsonObj.get("folder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `folder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("folder").toString()));
      }
      if ((jsonObj.get("interface") != null && !jsonObj.get("interface").isJsonNull()) && !jsonObj.get("interface").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interface` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interface").toString()));
      }
      if ((jsonObj.get("ip") != null && !jsonObj.get("ip").isJsonNull()) && !jsonObj.get("ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip").toString()));
      }
      if ((jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
      if ((jsonObj.get("src") != null && !jsonObj.get("src").isJsonNull()) && !jsonObj.get("src").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `src` to be a primitive type in the JSON string but got `%s`", jsonObj.get("src").toString()));
      }
      if ((jsonObj.get("target_name") != null && !jsonObj.get("target_name").isJsonNull()) && !jsonObj.get("target_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_name").toString()));
      }
      if ((jsonObj.get("target_permission") != null && !jsonObj.get("target_permission").isJsonNull()) && !jsonObj.get("target_permission").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_permission` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_permission").toString()));
      }
      if ((jsonObj.get("target_permission_set") != null && !jsonObj.get("target_permission_set").isJsonNull()) && !jsonObj.get("target_permission_set").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_permission_set` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_permission_set").toString()));
      }
      if ((jsonObj.get("target_platform") != null && !jsonObj.get("target_platform").isJsonNull()) && !jsonObj.get("target_platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_platform").toString()));
      }
      if ((jsonObj.get("target_username") != null && !jsonObj.get("target_username").isJsonNull()) && !jsonObj.get("target_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_username").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HistoryExportResultEntity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HistoryExportResultEntity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HistoryExportResultEntity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HistoryExportResultEntity.class));

       return (TypeAdapter<T>) new TypeAdapter<HistoryExportResultEntity>() {
           @Override
           public void write(JsonWriter out, HistoryExportResultEntity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HistoryExportResultEntity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of HistoryExportResultEntity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of HistoryExportResultEntity
   * @throws IOException if the JSON string is invalid with respect to HistoryExportResultEntity
   */
  public static HistoryExportResultEntity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HistoryExportResultEntity.class);
  }

  /**
   * Convert an instance of HistoryExportResultEntity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

