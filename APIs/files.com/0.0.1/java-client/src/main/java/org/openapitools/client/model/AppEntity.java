/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * List Apps
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:28:32.972969-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppEntity {
  /**
   * The type of the App
   */
  @JsonAdapter(AppTypeEnum.Adapter.class)
  public enum AppTypeEnum {
    SDK("sdk"),
    
    SSO("sso"),
    
    REMOTE_SERVER("remote_server"),
    
    FOLDER_BEHAVIOR("folder_behavior"),
    
    CLIENT_APP("client_app"),
    
    APP_INTEGRATION("app_integration");

    private String value;

    AppTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AppTypeEnum fromValue(String value) {
      for (AppTypeEnum b : AppTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AppTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AppTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AppTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AppTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AppTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_APP_TYPE = "app_type";
  @SerializedName(SERIALIZED_NAME_APP_TYPE)
  private AppTypeEnum appType;

  public static final String SERIALIZED_NAME_DOCUMENTATION_LINKS = "documentation_links";
  @SerializedName(SERIALIZED_NAME_DOCUMENTATION_LINKS)
  private Object documentationLinks;

  public static final String SERIALIZED_NAME_EXTENDED_DESCRIPTION = "extended_description";
  @SerializedName(SERIALIZED_NAME_EXTENDED_DESCRIPTION)
  private String extendedDescription;

  public static final String SERIALIZED_NAME_EXTERNAL_HOMEPAGE_URL = "external_homepage_url";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_HOMEPAGE_URL)
  private String externalHomepageUrl;

  public static final String SERIALIZED_NAME_FEATURED = "featured";
  @SerializedName(SERIALIZED_NAME_FEATURED)
  private Boolean featured;

  /**
   * Associated Folder Behavior type, if any
   */
  @JsonAdapter(FolderBehaviorTypeEnum.Adapter.class)
  public enum FolderBehaviorTypeEnum {
    WEBHOOK("webhook"),
    
    FILE_EXPIRATION("file_expiration"),
    
    AUTO_ENCRYPT("auto_encrypt"),
    
    LOCK_SUBFOLDERS("lock_subfolders"),
    
    STORAGE_REGION("storage_region"),
    
    SERVE_PUBLICLY("serve_publicly"),
    
    CREATE_USER_FOLDERS("create_user_folders"),
    
    REMOTE_SERVER_SYNC("remote_server_sync"),
    
    INBOX("inbox"),
    
    APPEND_TIMESTAMP("append_timestamp"),
    
    LIMIT_FILE_EXTENSIONS("limit_file_extensions"),
    
    LIMIT_FILE_REGEX("limit_file_regex"),
    
    AMAZON_SNS("amazon_sns"),
    
    WATERMARK("watermark"),
    
    REMOTE_SERVER_MOUNT("remote_server_mount"),
    
    SLACK_WEBHOOK("slack_webhook"),
    
    AUTO_DECRYPT("auto_decrypt"),
    
    OVERRIDE_UPLOAD_FILENAME("override_upload_filename");

    private String value;

    FolderBehaviorTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FolderBehaviorTypeEnum fromValue(String value) {
      for (FolderBehaviorTypeEnum b : FolderBehaviorTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FolderBehaviorTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FolderBehaviorTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FolderBehaviorTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FolderBehaviorTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FolderBehaviorTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FOLDER_BEHAVIOR_TYPE = "folder_behavior_type";
  @SerializedName(SERIALIZED_NAME_FOLDER_BEHAVIOR_TYPE)
  private FolderBehaviorTypeEnum folderBehaviorType;

  public static final String SERIALIZED_NAME_ICON_URL = "icon_url";
  @SerializedName(SERIALIZED_NAME_ICON_URL)
  private String iconUrl;

  public static final String SERIALIZED_NAME_LOGO_THUMBNAIL_URL = "logo_thumbnail_url";
  @SerializedName(SERIALIZED_NAME_LOGO_THUMBNAIL_URL)
  private String logoThumbnailUrl;

  public static final String SERIALIZED_NAME_LOGO_URL = "logo_url";
  @SerializedName(SERIALIZED_NAME_LOGO_URL)
  private String logoUrl;

  public static final String SERIALIZED_NAME_MARKETING_YOUTUBE_URL = "marketing_youtube_url";
  @SerializedName(SERIALIZED_NAME_MARKETING_YOUTUBE_URL)
  private String marketingYoutubeUrl;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Associated Remote Server type, if any
   */
  @JsonAdapter(RemoteServerTypeEnum.Adapter.class)
  public enum RemoteServerTypeEnum {
    FTP("ftp"),
    
    SFTP("sftp"),
    
    S3("s3"),
    
    GOOGLE_CLOUD_STORAGE("google_cloud_storage"),
    
    WEBDAV("webdav"),
    
    WASABI("wasabi"),
    
    BACKBLAZE_B2("backblaze_b2"),
    
    ONE_DRIVE("one_drive"),
    
    RACKSPACE("rackspace"),
    
    BOX("box"),
    
    DROPBOX("dropbox"),
    
    GOOGLE_DRIVE("google_drive"),
    
    AZURE("azure"),
    
    SHAREPOINT("sharepoint"),
    
    S3_COMPATIBLE("s3_compatible"),
    
    AZURE_FILES("azure_files"),
    
    FILES_AGENT("files_agent"),
    
    FILEBASE("filebase");

    private String value;

    RemoteServerTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RemoteServerTypeEnum fromValue(String value) {
      for (RemoteServerTypeEnum b : RemoteServerTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RemoteServerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RemoteServerTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RemoteServerTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RemoteServerTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RemoteServerTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REMOTE_SERVER_TYPE = "remote_server_type";
  @SerializedName(SERIALIZED_NAME_REMOTE_SERVER_TYPE)
  private RemoteServerTypeEnum remoteServerType;

  public static final String SERIALIZED_NAME_SCREENSHOT_LIST_URLS = "screenshot_list_urls";
  @SerializedName(SERIALIZED_NAME_SCREENSHOT_LIST_URLS)
  private List<String> screenshotListUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "short_description";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  private String shortDescription;

  /**
   * Associated SSO Strategy type, if any
   */
  @JsonAdapter(SsoStrategyTypeEnum.Adapter.class)
  public enum SsoStrategyTypeEnum {
    GOOGLE("google"),
    
    AUTH0("auth0"),
    
    OKTA("okta"),
    
    ATLASSIAN("atlassian"),
    
    AZURE("azure"),
    
    BOX("box"),
    
    DROPBOX("dropbox"),
    
    SLACK("slack"),
    
    _UNUSED_UBUNTU("_unused_ubuntu"),
    
    ONELOGIN("onelogin"),
    
    SAML("saml"),
    
    IDAPTIVE("idaptive"),
    
    LDAP("ldap"),
    
    SCIM("scim");

    private String value;

    SsoStrategyTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SsoStrategyTypeEnum fromValue(String value) {
      for (SsoStrategyTypeEnum b : SsoStrategyTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SsoStrategyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SsoStrategyTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SsoStrategyTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SsoStrategyTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SsoStrategyTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SSO_STRATEGY_TYPE = "sso_strategy_type";
  @SerializedName(SERIALIZED_NAME_SSO_STRATEGY_TYPE)
  private SsoStrategyTypeEnum ssoStrategyType;

  public static final String SERIALIZED_NAME_TUTORIAL_YOUTUBE_URL = "tutorial_youtube_url";
  @SerializedName(SERIALIZED_NAME_TUTORIAL_YOUTUBE_URL)
  private String tutorialYoutubeUrl;

  public AppEntity() {
  }

  public AppEntity appType(AppTypeEnum appType) {
    this.appType = appType;
    return this;
  }

  /**
   * The type of the App
   * @return appType
   */
  @javax.annotation.Nullable
  public AppTypeEnum getAppType() {
    return appType;
  }

  public void setAppType(AppTypeEnum appType) {
    this.appType = appType;
  }


  public AppEntity documentationLinks(Object documentationLinks) {
    this.documentationLinks = documentationLinks;
    return this;
  }

  /**
   * Collection of named links to documentation
   * @return documentationLinks
   */
  @javax.annotation.Nullable
  public Object getDocumentationLinks() {
    return documentationLinks;
  }

  public void setDocumentationLinks(Object documentationLinks) {
    this.documentationLinks = documentationLinks;
  }


  public AppEntity extendedDescription(String extendedDescription) {
    this.extendedDescription = extendedDescription;
    return this;
  }

  /**
   * Long form description of the App
   * @return extendedDescription
   */
  @javax.annotation.Nullable
  public String getExtendedDescription() {
    return extendedDescription;
  }

  public void setExtendedDescription(String extendedDescription) {
    this.extendedDescription = extendedDescription;
  }


  public AppEntity externalHomepageUrl(String externalHomepageUrl) {
    this.externalHomepageUrl = externalHomepageUrl;
    return this;
  }

  /**
   * Link to external homepage
   * @return externalHomepageUrl
   */
  @javax.annotation.Nullable
  public String getExternalHomepageUrl() {
    return externalHomepageUrl;
  }

  public void setExternalHomepageUrl(String externalHomepageUrl) {
    this.externalHomepageUrl = externalHomepageUrl;
  }


  public AppEntity featured(Boolean featured) {
    this.featured = featured;
    return this;
  }

  /**
   * Is featured on the App listing?
   * @return featured
   */
  @javax.annotation.Nullable
  public Boolean getFeatured() {
    return featured;
  }

  public void setFeatured(Boolean featured) {
    this.featured = featured;
  }


  public AppEntity folderBehaviorType(FolderBehaviorTypeEnum folderBehaviorType) {
    this.folderBehaviorType = folderBehaviorType;
    return this;
  }

  /**
   * Associated Folder Behavior type, if any
   * @return folderBehaviorType
   */
  @javax.annotation.Nullable
  public FolderBehaviorTypeEnum getFolderBehaviorType() {
    return folderBehaviorType;
  }

  public void setFolderBehaviorType(FolderBehaviorTypeEnum folderBehaviorType) {
    this.folderBehaviorType = folderBehaviorType;
  }


  public AppEntity iconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
    return this;
  }

  /**
   * App icon
   * @return iconUrl
   */
  @javax.annotation.Nullable
  public String getIconUrl() {
    return iconUrl;
  }

  public void setIconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
  }


  public AppEntity logoThumbnailUrl(String logoThumbnailUrl) {
    this.logoThumbnailUrl = logoThumbnailUrl;
    return this;
  }

  /**
   * Logo thumbnail for the App
   * @return logoThumbnailUrl
   */
  @javax.annotation.Nullable
  public String getLogoThumbnailUrl() {
    return logoThumbnailUrl;
  }

  public void setLogoThumbnailUrl(String logoThumbnailUrl) {
    this.logoThumbnailUrl = logoThumbnailUrl;
  }


  public AppEntity logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

  /**
   * Full size logo for the App
   * @return logoUrl
   */
  @javax.annotation.Nullable
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }


  public AppEntity marketingYoutubeUrl(String marketingYoutubeUrl) {
    this.marketingYoutubeUrl = marketingYoutubeUrl;
    return this;
  }

  /**
   * Marketing video page
   * @return marketingYoutubeUrl
   */
  @javax.annotation.Nullable
  public String getMarketingYoutubeUrl() {
    return marketingYoutubeUrl;
  }

  public void setMarketingYoutubeUrl(String marketingYoutubeUrl) {
    this.marketingYoutubeUrl = marketingYoutubeUrl;
  }


  public AppEntity name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the App
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AppEntity remoteServerType(RemoteServerTypeEnum remoteServerType) {
    this.remoteServerType = remoteServerType;
    return this;
  }

  /**
   * Associated Remote Server type, if any
   * @return remoteServerType
   */
  @javax.annotation.Nullable
  public RemoteServerTypeEnum getRemoteServerType() {
    return remoteServerType;
  }

  public void setRemoteServerType(RemoteServerTypeEnum remoteServerType) {
    this.remoteServerType = remoteServerType;
  }


  public AppEntity screenshotListUrls(List<String> screenshotListUrls) {
    this.screenshotListUrls = screenshotListUrls;
    return this;
  }

  public AppEntity addScreenshotListUrlsItem(String screenshotListUrlsItem) {
    if (this.screenshotListUrls == null) {
      this.screenshotListUrls = new ArrayList<>();
    }
    this.screenshotListUrls.add(screenshotListUrlsItem);
    return this;
  }

  /**
   * Screenshots of the App
   * @return screenshotListUrls
   */
  @javax.annotation.Nullable
  public List<String> getScreenshotListUrls() {
    return screenshotListUrls;
  }

  public void setScreenshotListUrls(List<String> screenshotListUrls) {
    this.screenshotListUrls = screenshotListUrls;
  }


  public AppEntity shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Short description of the App
   * @return shortDescription
   */
  @javax.annotation.Nullable
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public AppEntity ssoStrategyType(SsoStrategyTypeEnum ssoStrategyType) {
    this.ssoStrategyType = ssoStrategyType;
    return this;
  }

  /**
   * Associated SSO Strategy type, if any
   * @return ssoStrategyType
   */
  @javax.annotation.Nullable
  public SsoStrategyTypeEnum getSsoStrategyType() {
    return ssoStrategyType;
  }

  public void setSsoStrategyType(SsoStrategyTypeEnum ssoStrategyType) {
    this.ssoStrategyType = ssoStrategyType;
  }


  public AppEntity tutorialYoutubeUrl(String tutorialYoutubeUrl) {
    this.tutorialYoutubeUrl = tutorialYoutubeUrl;
    return this;
  }

  /**
   * Tutorial video page
   * @return tutorialYoutubeUrl
   */
  @javax.annotation.Nullable
  public String getTutorialYoutubeUrl() {
    return tutorialYoutubeUrl;
  }

  public void setTutorialYoutubeUrl(String tutorialYoutubeUrl) {
    this.tutorialYoutubeUrl = tutorialYoutubeUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppEntity appEntity = (AppEntity) o;
    return Objects.equals(this.appType, appEntity.appType) &&
        Objects.equals(this.documentationLinks, appEntity.documentationLinks) &&
        Objects.equals(this.extendedDescription, appEntity.extendedDescription) &&
        Objects.equals(this.externalHomepageUrl, appEntity.externalHomepageUrl) &&
        Objects.equals(this.featured, appEntity.featured) &&
        Objects.equals(this.folderBehaviorType, appEntity.folderBehaviorType) &&
        Objects.equals(this.iconUrl, appEntity.iconUrl) &&
        Objects.equals(this.logoThumbnailUrl, appEntity.logoThumbnailUrl) &&
        Objects.equals(this.logoUrl, appEntity.logoUrl) &&
        Objects.equals(this.marketingYoutubeUrl, appEntity.marketingYoutubeUrl) &&
        Objects.equals(this.name, appEntity.name) &&
        Objects.equals(this.remoteServerType, appEntity.remoteServerType) &&
        Objects.equals(this.screenshotListUrls, appEntity.screenshotListUrls) &&
        Objects.equals(this.shortDescription, appEntity.shortDescription) &&
        Objects.equals(this.ssoStrategyType, appEntity.ssoStrategyType) &&
        Objects.equals(this.tutorialYoutubeUrl, appEntity.tutorialYoutubeUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appType, documentationLinks, extendedDescription, externalHomepageUrl, featured, folderBehaviorType, iconUrl, logoThumbnailUrl, logoUrl, marketingYoutubeUrl, name, remoteServerType, screenshotListUrls, shortDescription, ssoStrategyType, tutorialYoutubeUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppEntity {\n");
    sb.append("    appType: ").append(toIndentedString(appType)).append("\n");
    sb.append("    documentationLinks: ").append(toIndentedString(documentationLinks)).append("\n");
    sb.append("    extendedDescription: ").append(toIndentedString(extendedDescription)).append("\n");
    sb.append("    externalHomepageUrl: ").append(toIndentedString(externalHomepageUrl)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    folderBehaviorType: ").append(toIndentedString(folderBehaviorType)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("    logoThumbnailUrl: ").append(toIndentedString(logoThumbnailUrl)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    marketingYoutubeUrl: ").append(toIndentedString(marketingYoutubeUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    remoteServerType: ").append(toIndentedString(remoteServerType)).append("\n");
    sb.append("    screenshotListUrls: ").append(toIndentedString(screenshotListUrls)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    ssoStrategyType: ").append(toIndentedString(ssoStrategyType)).append("\n");
    sb.append("    tutorialYoutubeUrl: ").append(toIndentedString(tutorialYoutubeUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_type");
    openapiFields.add("documentation_links");
    openapiFields.add("extended_description");
    openapiFields.add("external_homepage_url");
    openapiFields.add("featured");
    openapiFields.add("folder_behavior_type");
    openapiFields.add("icon_url");
    openapiFields.add("logo_thumbnail_url");
    openapiFields.add("logo_url");
    openapiFields.add("marketing_youtube_url");
    openapiFields.add("name");
    openapiFields.add("remote_server_type");
    openapiFields.add("screenshot_list_urls");
    openapiFields.add("short_description");
    openapiFields.add("sso_strategy_type");
    openapiFields.add("tutorial_youtube_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppEntity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppEntity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppEntity is not found in the empty JSON string", AppEntity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppEntity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppEntity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("app_type") != null && !jsonObj.get("app_type").isJsonNull()) && !jsonObj.get("app_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_type").toString()));
      }
      // validate the optional field `app_type`
      if (jsonObj.get("app_type") != null && !jsonObj.get("app_type").isJsonNull()) {
        AppTypeEnum.validateJsonElement(jsonObj.get("app_type"));
      }
      if ((jsonObj.get("extended_description") != null && !jsonObj.get("extended_description").isJsonNull()) && !jsonObj.get("extended_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extended_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extended_description").toString()));
      }
      if ((jsonObj.get("external_homepage_url") != null && !jsonObj.get("external_homepage_url").isJsonNull()) && !jsonObj.get("external_homepage_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_homepage_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_homepage_url").toString()));
      }
      if ((jsonObj.get("folder_behavior_type") != null && !jsonObj.get("folder_behavior_type").isJsonNull()) && !jsonObj.get("folder_behavior_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `folder_behavior_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("folder_behavior_type").toString()));
      }
      // validate the optional field `folder_behavior_type`
      if (jsonObj.get("folder_behavior_type") != null && !jsonObj.get("folder_behavior_type").isJsonNull()) {
        FolderBehaviorTypeEnum.validateJsonElement(jsonObj.get("folder_behavior_type"));
      }
      if ((jsonObj.get("icon_url") != null && !jsonObj.get("icon_url").isJsonNull()) && !jsonObj.get("icon_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `icon_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("icon_url").toString()));
      }
      if ((jsonObj.get("logo_thumbnail_url") != null && !jsonObj.get("logo_thumbnail_url").isJsonNull()) && !jsonObj.get("logo_thumbnail_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logo_thumbnail_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logo_thumbnail_url").toString()));
      }
      if ((jsonObj.get("logo_url") != null && !jsonObj.get("logo_url").isJsonNull()) && !jsonObj.get("logo_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logo_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logo_url").toString()));
      }
      if ((jsonObj.get("marketing_youtube_url") != null && !jsonObj.get("marketing_youtube_url").isJsonNull()) && !jsonObj.get("marketing_youtube_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketing_youtube_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketing_youtube_url").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("remote_server_type") != null && !jsonObj.get("remote_server_type").isJsonNull()) && !jsonObj.get("remote_server_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `remote_server_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("remote_server_type").toString()));
      }
      // validate the optional field `remote_server_type`
      if (jsonObj.get("remote_server_type") != null && !jsonObj.get("remote_server_type").isJsonNull()) {
        RemoteServerTypeEnum.validateJsonElement(jsonObj.get("remote_server_type"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("screenshot_list_urls") != null && !jsonObj.get("screenshot_list_urls").isJsonNull() && !jsonObj.get("screenshot_list_urls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `screenshot_list_urls` to be an array in the JSON string but got `%s`", jsonObj.get("screenshot_list_urls").toString()));
      }
      if ((jsonObj.get("short_description") != null && !jsonObj.get("short_description").isJsonNull()) && !jsonObj.get("short_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_description").toString()));
      }
      if ((jsonObj.get("sso_strategy_type") != null && !jsonObj.get("sso_strategy_type").isJsonNull()) && !jsonObj.get("sso_strategy_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sso_strategy_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sso_strategy_type").toString()));
      }
      // validate the optional field `sso_strategy_type`
      if (jsonObj.get("sso_strategy_type") != null && !jsonObj.get("sso_strategy_type").isJsonNull()) {
        SsoStrategyTypeEnum.validateJsonElement(jsonObj.get("sso_strategy_type"));
      }
      if ((jsonObj.get("tutorial_youtube_url") != null && !jsonObj.get("tutorial_youtube_url").isJsonNull()) && !jsonObj.get("tutorial_youtube_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tutorial_youtube_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tutorial_youtube_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppEntity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppEntity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppEntity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppEntity.class));

       return (TypeAdapter<T>) new TypeAdapter<AppEntity>() {
           @Override
           public void write(JsonWriter out, AppEntity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppEntity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppEntity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppEntity
   * @throws IOException if the JSON string is invalid with respect to AppEntity
   */
  public static AppEntity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppEntity.class);
  }

  /**
   * Convert an instance of AppEntity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

