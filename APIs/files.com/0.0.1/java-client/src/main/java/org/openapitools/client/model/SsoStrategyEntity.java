/*
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * List Sso Strategies
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:28:32.972969-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SsoStrategyEntity {
  /**
   * Method used for deprovisioning users.
   */
  @JsonAdapter(DeprovisionBehaviorEnum.Adapter.class)
  public enum DeprovisionBehaviorEnum {
    DISABLE("disable"),
    
    DELETE("delete");

    private String value;

    DeprovisionBehaviorEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeprovisionBehaviorEnum fromValue(String value) {
      for (DeprovisionBehaviorEnum b : DeprovisionBehaviorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DeprovisionBehaviorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeprovisionBehaviorEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeprovisionBehaviorEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DeprovisionBehaviorEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DeprovisionBehaviorEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DEPROVISION_BEHAVIOR = "deprovision_behavior";
  @SerializedName(SERIALIZED_NAME_DEPROVISION_BEHAVIOR)
  private DeprovisionBehaviorEnum deprovisionBehavior;

  public static final String SERIALIZED_NAME_DEPROVISION_GROUPS = "deprovision_groups";
  @SerializedName(SERIALIZED_NAME_DEPROVISION_GROUPS)
  private Boolean deprovisionGroups;

  public static final String SERIALIZED_NAME_DEPROVISION_USERS = "deprovision_users";
  @SerializedName(SERIALIZED_NAME_DEPROVISION_USERS)
  private Boolean deprovisionUsers;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_LDAP_BASE_DN = "ldap_base_dn";
  @SerializedName(SERIALIZED_NAME_LDAP_BASE_DN)
  private String ldapBaseDn;

  public static final String SERIALIZED_NAME_LDAP_DOMAIN = "ldap_domain";
  @SerializedName(SERIALIZED_NAME_LDAP_DOMAIN)
  private String ldapDomain;

  public static final String SERIALIZED_NAME_LDAP_HOST = "ldap_host";
  @SerializedName(SERIALIZED_NAME_LDAP_HOST)
  private String ldapHost;

  public static final String SERIALIZED_NAME_LDAP_HOST2 = "ldap_host_2";
  @SerializedName(SERIALIZED_NAME_LDAP_HOST2)
  private String ldapHost2;

  public static final String SERIALIZED_NAME_LDAP_HOST3 = "ldap_host_3";
  @SerializedName(SERIALIZED_NAME_LDAP_HOST3)
  private String ldapHost3;

  public static final String SERIALIZED_NAME_LDAP_PORT = "ldap_port";
  @SerializedName(SERIALIZED_NAME_LDAP_PORT)
  private Integer ldapPort;

  public static final String SERIALIZED_NAME_LDAP_SECURE = "ldap_secure";
  @SerializedName(SERIALIZED_NAME_LDAP_SECURE)
  private Boolean ldapSecure;

  public static final String SERIALIZED_NAME_LDAP_USERNAME = "ldap_username";
  @SerializedName(SERIALIZED_NAME_LDAP_USERNAME)
  private String ldapUsername;

  /**
   * LDAP username field
   */
  @JsonAdapter(LdapUsernameFieldEnum.Adapter.class)
  public enum LdapUsernameFieldEnum {
    S_AM_ACCOUNT_NAME("sAMAccountName"),
    
    USER_PRINCIPAL_NAME("userPrincipalName");

    private String value;

    LdapUsernameFieldEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LdapUsernameFieldEnum fromValue(String value) {
      for (LdapUsernameFieldEnum b : LdapUsernameFieldEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LdapUsernameFieldEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LdapUsernameFieldEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LdapUsernameFieldEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LdapUsernameFieldEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LdapUsernameFieldEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LDAP_USERNAME_FIELD = "ldap_username_field";
  @SerializedName(SERIALIZED_NAME_LDAP_USERNAME_FIELD)
  private LdapUsernameFieldEnum ldapUsernameField;

  public static final String SERIALIZED_NAME_LOGO_URL = "logo_url";
  @SerializedName(SERIALIZED_NAME_LOGO_URL)
  private String logoUrl;

  /**
   * SSO Protocol
   */
  @JsonAdapter(ProtocolEnum.Adapter.class)
  public enum ProtocolEnum {
    OAUTH2("oauth2"),
    
    _UNUSED_OPENID2("_unused_openid2"),
    
    SAML("saml"),
    
    ACTIVE_DIRECTORY("active_directory"),
    
    OPEN_LDAP("open_ldap"),
    
    SCIM("scim");

    private String value;

    ProtocolEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProtocolEnum fromValue(String value) {
      for (ProtocolEnum b : ProtocolEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProtocolEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProtocolEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProtocolEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProtocolEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProtocolEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROTOCOL = "protocol";
  @SerializedName(SERIALIZED_NAME_PROTOCOL)
  private ProtocolEnum protocol;

  /**
   * Provider name
   */
  @JsonAdapter(ProviderEnum.Adapter.class)
  public enum ProviderEnum {
    GOOGLE("google"),
    
    AUTH0("auth0"),
    
    OKTA("okta"),
    
    ATLASSIAN("atlassian"),
    
    AZURE("azure"),
    
    BOX("box"),
    
    DROPBOX("dropbox"),
    
    SLACK("slack"),
    
    _UNUSED_UBUNTU("_unused_ubuntu"),
    
    ONELOGIN("onelogin"),
    
    SAML("saml"),
    
    IDAPTIVE("idaptive"),
    
    LDAP("ldap"),
    
    SCIM("scim");

    private String value;

    ProviderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProviderEnum fromValue(String value) {
      for (ProviderEnum b : ProviderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProviderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProviderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProviderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProviderEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProviderEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROVIDER = "provider";
  @SerializedName(SERIALIZED_NAME_PROVIDER)
  private ProviderEnum provider;

  public static final String SERIALIZED_NAME_PROVISION_ATTACHMENTS_PERMISSION = "provision_attachments_permission";
  @SerializedName(SERIALIZED_NAME_PROVISION_ATTACHMENTS_PERMISSION)
  private Boolean provisionAttachmentsPermission;

  public static final String SERIALIZED_NAME_PROVISION_COMPANY = "provision_company";
  @SerializedName(SERIALIZED_NAME_PROVISION_COMPANY)
  private String provisionCompany;

  public static final String SERIALIZED_NAME_PROVISION_DAV_PERMISSION = "provision_dav_permission";
  @SerializedName(SERIALIZED_NAME_PROVISION_DAV_PERMISSION)
  private Boolean provisionDavPermission;

  public static final String SERIALIZED_NAME_PROVISION_EMAIL_SIGNUP_GROUPS = "provision_email_signup_groups";
  @SerializedName(SERIALIZED_NAME_PROVISION_EMAIL_SIGNUP_GROUPS)
  private String provisionEmailSignupGroups;

  public static final String SERIALIZED_NAME_PROVISION_FTP_PERMISSION = "provision_ftp_permission";
  @SerializedName(SERIALIZED_NAME_PROVISION_FTP_PERMISSION)
  private Boolean provisionFtpPermission;

  public static final String SERIALIZED_NAME_PROVISION_GROUP_DEFAULT = "provision_group_default";
  @SerializedName(SERIALIZED_NAME_PROVISION_GROUP_DEFAULT)
  private String provisionGroupDefault;

  public static final String SERIALIZED_NAME_PROVISION_GROUP_EXCLUSION = "provision_group_exclusion";
  @SerializedName(SERIALIZED_NAME_PROVISION_GROUP_EXCLUSION)
  private String provisionGroupExclusion;

  public static final String SERIALIZED_NAME_PROVISION_GROUP_INCLUSION = "provision_group_inclusion";
  @SerializedName(SERIALIZED_NAME_PROVISION_GROUP_INCLUSION)
  private String provisionGroupInclusion;

  public static final String SERIALIZED_NAME_PROVISION_GROUP_REQUIRED = "provision_group_required";
  @SerializedName(SERIALIZED_NAME_PROVISION_GROUP_REQUIRED)
  private String provisionGroupRequired;

  public static final String SERIALIZED_NAME_PROVISION_GROUPS = "provision_groups";
  @SerializedName(SERIALIZED_NAME_PROVISION_GROUPS)
  private Boolean provisionGroups;

  public static final String SERIALIZED_NAME_PROVISION_SFTP_PERMISSION = "provision_sftp_permission";
  @SerializedName(SERIALIZED_NAME_PROVISION_SFTP_PERMISSION)
  private Boolean provisionSftpPermission;

  public static final String SERIALIZED_NAME_PROVISION_SITE_ADMIN_GROUPS = "provision_site_admin_groups";
  @SerializedName(SERIALIZED_NAME_PROVISION_SITE_ADMIN_GROUPS)
  private String provisionSiteAdminGroups;

  public static final String SERIALIZED_NAME_PROVISION_TIME_ZONE = "provision_time_zone";
  @SerializedName(SERIALIZED_NAME_PROVISION_TIME_ZONE)
  private String provisionTimeZone;

  public static final String SERIALIZED_NAME_PROVISION_USERS = "provision_users";
  @SerializedName(SERIALIZED_NAME_PROVISION_USERS)
  private Boolean provisionUsers;

  public static final String SERIALIZED_NAME_SAML_PROVIDER_CERT_FINGERPRINT = "saml_provider_cert_fingerprint";
  @SerializedName(SERIALIZED_NAME_SAML_PROVIDER_CERT_FINGERPRINT)
  private String samlProviderCertFingerprint;

  public static final String SERIALIZED_NAME_SAML_PROVIDER_ISSUER_URL = "saml_provider_issuer_url";
  @SerializedName(SERIALIZED_NAME_SAML_PROVIDER_ISSUER_URL)
  private String samlProviderIssuerUrl;

  public static final String SERIALIZED_NAME_SAML_PROVIDER_METADATA_CONTENT = "saml_provider_metadata_content";
  @SerializedName(SERIALIZED_NAME_SAML_PROVIDER_METADATA_CONTENT)
  private String samlProviderMetadataContent;

  public static final String SERIALIZED_NAME_SAML_PROVIDER_METADATA_URL = "saml_provider_metadata_url";
  @SerializedName(SERIALIZED_NAME_SAML_PROVIDER_METADATA_URL)
  private String samlProviderMetadataUrl;

  public static final String SERIALIZED_NAME_SAML_PROVIDER_SLO_TARGET_URL = "saml_provider_slo_target_url";
  @SerializedName(SERIALIZED_NAME_SAML_PROVIDER_SLO_TARGET_URL)
  private String samlProviderSloTargetUrl;

  public static final String SERIALIZED_NAME_SAML_PROVIDER_SSO_TARGET_URL = "saml_provider_sso_target_url";
  @SerializedName(SERIALIZED_NAME_SAML_PROVIDER_SSO_TARGET_URL)
  private String samlProviderSsoTargetUrl;

  /**
   * SCIM authentication type.
   */
  @JsonAdapter(ScimAuthenticationMethodEnum.Adapter.class)
  public enum ScimAuthenticationMethodEnum {
    NONE("none"),
    
    BASIC("basic"),
    
    TOKEN("token");

    private String value;

    ScimAuthenticationMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScimAuthenticationMethodEnum fromValue(String value) {
      for (ScimAuthenticationMethodEnum b : ScimAuthenticationMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ScimAuthenticationMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScimAuthenticationMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScimAuthenticationMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ScimAuthenticationMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ScimAuthenticationMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SCIM_AUTHENTICATION_METHOD = "scim_authentication_method";
  @SerializedName(SERIALIZED_NAME_SCIM_AUTHENTICATION_METHOD)
  private ScimAuthenticationMethodEnum scimAuthenticationMethod;

  public static final String SERIALIZED_NAME_SCIM_OAUTH_ACCESS_TOKEN = "scim_oauth_access_token";
  @SerializedName(SERIALIZED_NAME_SCIM_OAUTH_ACCESS_TOKEN)
  private String scimOauthAccessToken;

  public static final String SERIALIZED_NAME_SCIM_OAUTH_ACCESS_TOKEN_EXPIRES_AT = "scim_oauth_access_token_expires_at";
  @SerializedName(SERIALIZED_NAME_SCIM_OAUTH_ACCESS_TOKEN_EXPIRES_AT)
  private String scimOauthAccessTokenExpiresAt;

  public static final String SERIALIZED_NAME_SCIM_USERNAME = "scim_username";
  @SerializedName(SERIALIZED_NAME_SCIM_USERNAME)
  private String scimUsername;

  public static final String SERIALIZED_NAME_SUBDOMAIN = "subdomain";
  @SerializedName(SERIALIZED_NAME_SUBDOMAIN)
  private String subdomain;

  public SsoStrategyEntity() {
  }

  public SsoStrategyEntity deprovisionBehavior(DeprovisionBehaviorEnum deprovisionBehavior) {
    this.deprovisionBehavior = deprovisionBehavior;
    return this;
  }

  /**
   * Method used for deprovisioning users.
   * @return deprovisionBehavior
   */
  @javax.annotation.Nullable
  public DeprovisionBehaviorEnum getDeprovisionBehavior() {
    return deprovisionBehavior;
  }

  public void setDeprovisionBehavior(DeprovisionBehaviorEnum deprovisionBehavior) {
    this.deprovisionBehavior = deprovisionBehavior;
  }


  public SsoStrategyEntity deprovisionGroups(Boolean deprovisionGroups) {
    this.deprovisionGroups = deprovisionGroups;
    return this;
  }

  /**
   * Auto-deprovision group membership based on group memberships on the SSO side?
   * @return deprovisionGroups
   */
  @javax.annotation.Nullable
  public Boolean getDeprovisionGroups() {
    return deprovisionGroups;
  }

  public void setDeprovisionGroups(Boolean deprovisionGroups) {
    this.deprovisionGroups = deprovisionGroups;
  }


  public SsoStrategyEntity deprovisionUsers(Boolean deprovisionUsers) {
    this.deprovisionUsers = deprovisionUsers;
    return this;
  }

  /**
   * Auto-deprovision users?
   * @return deprovisionUsers
   */
  @javax.annotation.Nullable
  public Boolean getDeprovisionUsers() {
    return deprovisionUsers;
  }

  public void setDeprovisionUsers(Boolean deprovisionUsers) {
    this.deprovisionUsers = deprovisionUsers;
  }


  public SsoStrategyEntity enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Is strategy enabled?  This may become automatically set to &#x60;false&#x60; after a high number and duration of failures.
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public SsoStrategyEntity id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * ID
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public SsoStrategyEntity label(String label) {
    this.label = label;
    return this;
  }

  /**
   * Custom label for the SSO provider on the login page.
   * @return label
   */
  @javax.annotation.Nullable
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }


  public SsoStrategyEntity ldapBaseDn(String ldapBaseDn) {
    this.ldapBaseDn = ldapBaseDn;
    return this;
  }

  /**
   * Base DN for looking up users in LDAP server
   * @return ldapBaseDn
   */
  @javax.annotation.Nullable
  public String getLdapBaseDn() {
    return ldapBaseDn;
  }

  public void setLdapBaseDn(String ldapBaseDn) {
    this.ldapBaseDn = ldapBaseDn;
  }


  public SsoStrategyEntity ldapDomain(String ldapDomain) {
    this.ldapDomain = ldapDomain;
    return this;
  }

  /**
   * Domain name that will be appended to LDAP usernames
   * @return ldapDomain
   */
  @javax.annotation.Nullable
  public String getLdapDomain() {
    return ldapDomain;
  }

  public void setLdapDomain(String ldapDomain) {
    this.ldapDomain = ldapDomain;
  }


  public SsoStrategyEntity ldapHost(String ldapHost) {
    this.ldapHost = ldapHost;
    return this;
  }

  /**
   * LDAP host
   * @return ldapHost
   */
  @javax.annotation.Nullable
  public String getLdapHost() {
    return ldapHost;
  }

  public void setLdapHost(String ldapHost) {
    this.ldapHost = ldapHost;
  }


  public SsoStrategyEntity ldapHost2(String ldapHost2) {
    this.ldapHost2 = ldapHost2;
    return this;
  }

  /**
   * LDAP backup host
   * @return ldapHost2
   */
  @javax.annotation.Nullable
  public String getLdapHost2() {
    return ldapHost2;
  }

  public void setLdapHost2(String ldapHost2) {
    this.ldapHost2 = ldapHost2;
  }


  public SsoStrategyEntity ldapHost3(String ldapHost3) {
    this.ldapHost3 = ldapHost3;
    return this;
  }

  /**
   * LDAP backup host
   * @return ldapHost3
   */
  @javax.annotation.Nullable
  public String getLdapHost3() {
    return ldapHost3;
  }

  public void setLdapHost3(String ldapHost3) {
    this.ldapHost3 = ldapHost3;
  }


  public SsoStrategyEntity ldapPort(Integer ldapPort) {
    this.ldapPort = ldapPort;
    return this;
  }

  /**
   * LDAP port
   * @return ldapPort
   */
  @javax.annotation.Nullable
  public Integer getLdapPort() {
    return ldapPort;
  }

  public void setLdapPort(Integer ldapPort) {
    this.ldapPort = ldapPort;
  }


  public SsoStrategyEntity ldapSecure(Boolean ldapSecure) {
    this.ldapSecure = ldapSecure;
    return this;
  }

  /**
   * Use secure LDAP?
   * @return ldapSecure
   */
  @javax.annotation.Nullable
  public Boolean getLdapSecure() {
    return ldapSecure;
  }

  public void setLdapSecure(Boolean ldapSecure) {
    this.ldapSecure = ldapSecure;
  }


  public SsoStrategyEntity ldapUsername(String ldapUsername) {
    this.ldapUsername = ldapUsername;
    return this;
  }

  /**
   * Username for signing in to LDAP server.
   * @return ldapUsername
   */
  @javax.annotation.Nullable
  public String getLdapUsername() {
    return ldapUsername;
  }

  public void setLdapUsername(String ldapUsername) {
    this.ldapUsername = ldapUsername;
  }


  public SsoStrategyEntity ldapUsernameField(LdapUsernameFieldEnum ldapUsernameField) {
    this.ldapUsernameField = ldapUsernameField;
    return this;
  }

  /**
   * LDAP username field
   * @return ldapUsernameField
   */
  @javax.annotation.Nullable
  public LdapUsernameFieldEnum getLdapUsernameField() {
    return ldapUsernameField;
  }

  public void setLdapUsernameField(LdapUsernameFieldEnum ldapUsernameField) {
    this.ldapUsernameField = ldapUsernameField;
  }


  public SsoStrategyEntity logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

  /**
   * URL holding a custom logo for the SSO provider on the login page.
   * @return logoUrl
   */
  @javax.annotation.Nullable
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }


  public SsoStrategyEntity protocol(ProtocolEnum protocol) {
    this.protocol = protocol;
    return this;
  }

  /**
   * SSO Protocol
   * @return protocol
   */
  @javax.annotation.Nullable
  public ProtocolEnum getProtocol() {
    return protocol;
  }

  public void setProtocol(ProtocolEnum protocol) {
    this.protocol = protocol;
  }


  public SsoStrategyEntity provider(ProviderEnum provider) {
    this.provider = provider;
    return this;
  }

  /**
   * Provider name
   * @return provider
   */
  @javax.annotation.Nullable
  public ProviderEnum getProvider() {
    return provider;
  }

  public void setProvider(ProviderEnum provider) {
    this.provider = provider;
  }


  public SsoStrategyEntity provisionAttachmentsPermission(Boolean provisionAttachmentsPermission) {
    this.provisionAttachmentsPermission = provisionAttachmentsPermission;
    return this;
  }

  /**
   * DEPRECATED: Auto-provisioned users get Sharing permission. Use a Group with the Bundle permission instead.
   * @return provisionAttachmentsPermission
   */
  @javax.annotation.Nullable
  public Boolean getProvisionAttachmentsPermission() {
    return provisionAttachmentsPermission;
  }

  public void setProvisionAttachmentsPermission(Boolean provisionAttachmentsPermission) {
    this.provisionAttachmentsPermission = provisionAttachmentsPermission;
  }


  public SsoStrategyEntity provisionCompany(String provisionCompany) {
    this.provisionCompany = provisionCompany;
    return this;
  }

  /**
   * Default company for auto provisioned users.
   * @return provisionCompany
   */
  @javax.annotation.Nullable
  public String getProvisionCompany() {
    return provisionCompany;
  }

  public void setProvisionCompany(String provisionCompany) {
    this.provisionCompany = provisionCompany;
  }


  public SsoStrategyEntity provisionDavPermission(Boolean provisionDavPermission) {
    this.provisionDavPermission = provisionDavPermission;
    return this;
  }

  /**
   * Auto-provisioned users get WebDAV permission?
   * @return provisionDavPermission
   */
  @javax.annotation.Nullable
  public Boolean getProvisionDavPermission() {
    return provisionDavPermission;
  }

  public void setProvisionDavPermission(Boolean provisionDavPermission) {
    this.provisionDavPermission = provisionDavPermission;
  }


  public SsoStrategyEntity provisionEmailSignupGroups(String provisionEmailSignupGroups) {
    this.provisionEmailSignupGroups = provisionEmailSignupGroups;
    return this;
  }

  /**
   * Comma-separated list of group names whose members will be created with email_signup authentication.
   * @return provisionEmailSignupGroups
   */
  @javax.annotation.Nullable
  public String getProvisionEmailSignupGroups() {
    return provisionEmailSignupGroups;
  }

  public void setProvisionEmailSignupGroups(String provisionEmailSignupGroups) {
    this.provisionEmailSignupGroups = provisionEmailSignupGroups;
  }


  public SsoStrategyEntity provisionFtpPermission(Boolean provisionFtpPermission) {
    this.provisionFtpPermission = provisionFtpPermission;
    return this;
  }

  /**
   * Auto-provisioned users get FTP permission?
   * @return provisionFtpPermission
   */
  @javax.annotation.Nullable
  public Boolean getProvisionFtpPermission() {
    return provisionFtpPermission;
  }

  public void setProvisionFtpPermission(Boolean provisionFtpPermission) {
    this.provisionFtpPermission = provisionFtpPermission;
  }


  public SsoStrategyEntity provisionGroupDefault(String provisionGroupDefault) {
    this.provisionGroupDefault = provisionGroupDefault;
    return this;
  }

  /**
   * Comma-separated list of group names for groups to automatically add all auto-provisioned users to.
   * @return provisionGroupDefault
   */
  @javax.annotation.Nullable
  public String getProvisionGroupDefault() {
    return provisionGroupDefault;
  }

  public void setProvisionGroupDefault(String provisionGroupDefault) {
    this.provisionGroupDefault = provisionGroupDefault;
  }


  public SsoStrategyEntity provisionGroupExclusion(String provisionGroupExclusion) {
    this.provisionGroupExclusion = provisionGroupExclusion;
    return this;
  }

  /**
   * Comma-separated list of group names for groups (with optional wildcards) that will be excluded from auto-provisioning.
   * @return provisionGroupExclusion
   */
  @javax.annotation.Nullable
  public String getProvisionGroupExclusion() {
    return provisionGroupExclusion;
  }

  public void setProvisionGroupExclusion(String provisionGroupExclusion) {
    this.provisionGroupExclusion = provisionGroupExclusion;
  }


  public SsoStrategyEntity provisionGroupInclusion(String provisionGroupInclusion) {
    this.provisionGroupInclusion = provisionGroupInclusion;
    return this;
  }

  /**
   * Comma-separated list of group names for groups (with optional wildcards) that will be auto-provisioned.
   * @return provisionGroupInclusion
   */
  @javax.annotation.Nullable
  public String getProvisionGroupInclusion() {
    return provisionGroupInclusion;
  }

  public void setProvisionGroupInclusion(String provisionGroupInclusion) {
    this.provisionGroupInclusion = provisionGroupInclusion;
  }


  public SsoStrategyEntity provisionGroupRequired(String provisionGroupRequired) {
    this.provisionGroupRequired = provisionGroupRequired;
    return this;
  }

  /**
   * Comma or newline separated list of group names (with optional wildcards) to require membership for user provisioning.
   * @return provisionGroupRequired
   */
  @javax.annotation.Nullable
  public String getProvisionGroupRequired() {
    return provisionGroupRequired;
  }

  public void setProvisionGroupRequired(String provisionGroupRequired) {
    this.provisionGroupRequired = provisionGroupRequired;
  }


  public SsoStrategyEntity provisionGroups(Boolean provisionGroups) {
    this.provisionGroups = provisionGroups;
    return this;
  }

  /**
   * Auto-provision group membership based on group memberships on the SSO side?
   * @return provisionGroups
   */
  @javax.annotation.Nullable
  public Boolean getProvisionGroups() {
    return provisionGroups;
  }

  public void setProvisionGroups(Boolean provisionGroups) {
    this.provisionGroups = provisionGroups;
  }


  public SsoStrategyEntity provisionSftpPermission(Boolean provisionSftpPermission) {
    this.provisionSftpPermission = provisionSftpPermission;
    return this;
  }

  /**
   * Auto-provisioned users get SFTP permission?
   * @return provisionSftpPermission
   */
  @javax.annotation.Nullable
  public Boolean getProvisionSftpPermission() {
    return provisionSftpPermission;
  }

  public void setProvisionSftpPermission(Boolean provisionSftpPermission) {
    this.provisionSftpPermission = provisionSftpPermission;
  }


  public SsoStrategyEntity provisionSiteAdminGroups(String provisionSiteAdminGroups) {
    this.provisionSiteAdminGroups = provisionSiteAdminGroups;
    return this;
  }

  /**
   * Comma-separated list of group names whose members will be created as Site Admins.
   * @return provisionSiteAdminGroups
   */
  @javax.annotation.Nullable
  public String getProvisionSiteAdminGroups() {
    return provisionSiteAdminGroups;
  }

  public void setProvisionSiteAdminGroups(String provisionSiteAdminGroups) {
    this.provisionSiteAdminGroups = provisionSiteAdminGroups;
  }


  public SsoStrategyEntity provisionTimeZone(String provisionTimeZone) {
    this.provisionTimeZone = provisionTimeZone;
    return this;
  }

  /**
   * Default time zone for auto provisioned users.
   * @return provisionTimeZone
   */
  @javax.annotation.Nullable
  public String getProvisionTimeZone() {
    return provisionTimeZone;
  }

  public void setProvisionTimeZone(String provisionTimeZone) {
    this.provisionTimeZone = provisionTimeZone;
  }


  public SsoStrategyEntity provisionUsers(Boolean provisionUsers) {
    this.provisionUsers = provisionUsers;
    return this;
  }

  /**
   * Auto-provision users?
   * @return provisionUsers
   */
  @javax.annotation.Nullable
  public Boolean getProvisionUsers() {
    return provisionUsers;
  }

  public void setProvisionUsers(Boolean provisionUsers) {
    this.provisionUsers = provisionUsers;
  }


  public SsoStrategyEntity samlProviderCertFingerprint(String samlProviderCertFingerprint) {
    this.samlProviderCertFingerprint = samlProviderCertFingerprint;
    return this;
  }

  /**
   * Identity provider sha256 cert fingerprint if saml_provider_metadata_url is not available.
   * @return samlProviderCertFingerprint
   */
  @javax.annotation.Nullable
  public String getSamlProviderCertFingerprint() {
    return samlProviderCertFingerprint;
  }

  public void setSamlProviderCertFingerprint(String samlProviderCertFingerprint) {
    this.samlProviderCertFingerprint = samlProviderCertFingerprint;
  }


  public SsoStrategyEntity samlProviderIssuerUrl(String samlProviderIssuerUrl) {
    this.samlProviderIssuerUrl = samlProviderIssuerUrl;
    return this;
  }

  /**
   * Identity provider issuer url
   * @return samlProviderIssuerUrl
   */
  @javax.annotation.Nullable
  public String getSamlProviderIssuerUrl() {
    return samlProviderIssuerUrl;
  }

  public void setSamlProviderIssuerUrl(String samlProviderIssuerUrl) {
    this.samlProviderIssuerUrl = samlProviderIssuerUrl;
  }


  public SsoStrategyEntity samlProviderMetadataContent(String samlProviderMetadataContent) {
    this.samlProviderMetadataContent = samlProviderMetadataContent;
    return this;
  }

  /**
   * Custom identity provider metadata
   * @return samlProviderMetadataContent
   */
  @javax.annotation.Nullable
  public String getSamlProviderMetadataContent() {
    return samlProviderMetadataContent;
  }

  public void setSamlProviderMetadataContent(String samlProviderMetadataContent) {
    this.samlProviderMetadataContent = samlProviderMetadataContent;
  }


  public SsoStrategyEntity samlProviderMetadataUrl(String samlProviderMetadataUrl) {
    this.samlProviderMetadataUrl = samlProviderMetadataUrl;
    return this;
  }

  /**
   * Metadata URL for the SAML identity provider
   * @return samlProviderMetadataUrl
   */
  @javax.annotation.Nullable
  public String getSamlProviderMetadataUrl() {
    return samlProviderMetadataUrl;
  }

  public void setSamlProviderMetadataUrl(String samlProviderMetadataUrl) {
    this.samlProviderMetadataUrl = samlProviderMetadataUrl;
  }


  public SsoStrategyEntity samlProviderSloTargetUrl(String samlProviderSloTargetUrl) {
    this.samlProviderSloTargetUrl = samlProviderSloTargetUrl;
    return this;
  }

  /**
   * Identity provider SLO endpoint
   * @return samlProviderSloTargetUrl
   */
  @javax.annotation.Nullable
  public String getSamlProviderSloTargetUrl() {
    return samlProviderSloTargetUrl;
  }

  public void setSamlProviderSloTargetUrl(String samlProviderSloTargetUrl) {
    this.samlProviderSloTargetUrl = samlProviderSloTargetUrl;
  }


  public SsoStrategyEntity samlProviderSsoTargetUrl(String samlProviderSsoTargetUrl) {
    this.samlProviderSsoTargetUrl = samlProviderSsoTargetUrl;
    return this;
  }

  /**
   * Identity provider SSO endpoint if saml_provider_metadata_url is not available.
   * @return samlProviderSsoTargetUrl
   */
  @javax.annotation.Nullable
  public String getSamlProviderSsoTargetUrl() {
    return samlProviderSsoTargetUrl;
  }

  public void setSamlProviderSsoTargetUrl(String samlProviderSsoTargetUrl) {
    this.samlProviderSsoTargetUrl = samlProviderSsoTargetUrl;
  }


  public SsoStrategyEntity scimAuthenticationMethod(ScimAuthenticationMethodEnum scimAuthenticationMethod) {
    this.scimAuthenticationMethod = scimAuthenticationMethod;
    return this;
  }

  /**
   * SCIM authentication type.
   * @return scimAuthenticationMethod
   */
  @javax.annotation.Nullable
  public ScimAuthenticationMethodEnum getScimAuthenticationMethod() {
    return scimAuthenticationMethod;
  }

  public void setScimAuthenticationMethod(ScimAuthenticationMethodEnum scimAuthenticationMethod) {
    this.scimAuthenticationMethod = scimAuthenticationMethod;
  }


  public SsoStrategyEntity scimOauthAccessToken(String scimOauthAccessToken) {
    this.scimOauthAccessToken = scimOauthAccessToken;
    return this;
  }

  /**
   * SCIM OAuth Access Token.
   * @return scimOauthAccessToken
   */
  @javax.annotation.Nullable
  public String getScimOauthAccessToken() {
    return scimOauthAccessToken;
  }

  public void setScimOauthAccessToken(String scimOauthAccessToken) {
    this.scimOauthAccessToken = scimOauthAccessToken;
  }


  public SsoStrategyEntity scimOauthAccessTokenExpiresAt(String scimOauthAccessTokenExpiresAt) {
    this.scimOauthAccessTokenExpiresAt = scimOauthAccessTokenExpiresAt;
    return this;
  }

  /**
   * SCIM OAuth Access Token Expiration Time.
   * @return scimOauthAccessTokenExpiresAt
   */
  @javax.annotation.Nullable
  public String getScimOauthAccessTokenExpiresAt() {
    return scimOauthAccessTokenExpiresAt;
  }

  public void setScimOauthAccessTokenExpiresAt(String scimOauthAccessTokenExpiresAt) {
    this.scimOauthAccessTokenExpiresAt = scimOauthAccessTokenExpiresAt;
  }


  public SsoStrategyEntity scimUsername(String scimUsername) {
    this.scimUsername = scimUsername;
    return this;
  }

  /**
   * SCIM username.
   * @return scimUsername
   */
  @javax.annotation.Nullable
  public String getScimUsername() {
    return scimUsername;
  }

  public void setScimUsername(String scimUsername) {
    this.scimUsername = scimUsername;
  }


  public SsoStrategyEntity subdomain(String subdomain) {
    this.subdomain = subdomain;
    return this;
  }

  /**
   * Subdomain
   * @return subdomain
   */
  @javax.annotation.Nullable
  public String getSubdomain() {
    return subdomain;
  }

  public void setSubdomain(String subdomain) {
    this.subdomain = subdomain;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SsoStrategyEntity ssoStrategyEntity = (SsoStrategyEntity) o;
    return Objects.equals(this.deprovisionBehavior, ssoStrategyEntity.deprovisionBehavior) &&
        Objects.equals(this.deprovisionGroups, ssoStrategyEntity.deprovisionGroups) &&
        Objects.equals(this.deprovisionUsers, ssoStrategyEntity.deprovisionUsers) &&
        Objects.equals(this.enabled, ssoStrategyEntity.enabled) &&
        Objects.equals(this.id, ssoStrategyEntity.id) &&
        Objects.equals(this.label, ssoStrategyEntity.label) &&
        Objects.equals(this.ldapBaseDn, ssoStrategyEntity.ldapBaseDn) &&
        Objects.equals(this.ldapDomain, ssoStrategyEntity.ldapDomain) &&
        Objects.equals(this.ldapHost, ssoStrategyEntity.ldapHost) &&
        Objects.equals(this.ldapHost2, ssoStrategyEntity.ldapHost2) &&
        Objects.equals(this.ldapHost3, ssoStrategyEntity.ldapHost3) &&
        Objects.equals(this.ldapPort, ssoStrategyEntity.ldapPort) &&
        Objects.equals(this.ldapSecure, ssoStrategyEntity.ldapSecure) &&
        Objects.equals(this.ldapUsername, ssoStrategyEntity.ldapUsername) &&
        Objects.equals(this.ldapUsernameField, ssoStrategyEntity.ldapUsernameField) &&
        Objects.equals(this.logoUrl, ssoStrategyEntity.logoUrl) &&
        Objects.equals(this.protocol, ssoStrategyEntity.protocol) &&
        Objects.equals(this.provider, ssoStrategyEntity.provider) &&
        Objects.equals(this.provisionAttachmentsPermission, ssoStrategyEntity.provisionAttachmentsPermission) &&
        Objects.equals(this.provisionCompany, ssoStrategyEntity.provisionCompany) &&
        Objects.equals(this.provisionDavPermission, ssoStrategyEntity.provisionDavPermission) &&
        Objects.equals(this.provisionEmailSignupGroups, ssoStrategyEntity.provisionEmailSignupGroups) &&
        Objects.equals(this.provisionFtpPermission, ssoStrategyEntity.provisionFtpPermission) &&
        Objects.equals(this.provisionGroupDefault, ssoStrategyEntity.provisionGroupDefault) &&
        Objects.equals(this.provisionGroupExclusion, ssoStrategyEntity.provisionGroupExclusion) &&
        Objects.equals(this.provisionGroupInclusion, ssoStrategyEntity.provisionGroupInclusion) &&
        Objects.equals(this.provisionGroupRequired, ssoStrategyEntity.provisionGroupRequired) &&
        Objects.equals(this.provisionGroups, ssoStrategyEntity.provisionGroups) &&
        Objects.equals(this.provisionSftpPermission, ssoStrategyEntity.provisionSftpPermission) &&
        Objects.equals(this.provisionSiteAdminGroups, ssoStrategyEntity.provisionSiteAdminGroups) &&
        Objects.equals(this.provisionTimeZone, ssoStrategyEntity.provisionTimeZone) &&
        Objects.equals(this.provisionUsers, ssoStrategyEntity.provisionUsers) &&
        Objects.equals(this.samlProviderCertFingerprint, ssoStrategyEntity.samlProviderCertFingerprint) &&
        Objects.equals(this.samlProviderIssuerUrl, ssoStrategyEntity.samlProviderIssuerUrl) &&
        Objects.equals(this.samlProviderMetadataContent, ssoStrategyEntity.samlProviderMetadataContent) &&
        Objects.equals(this.samlProviderMetadataUrl, ssoStrategyEntity.samlProviderMetadataUrl) &&
        Objects.equals(this.samlProviderSloTargetUrl, ssoStrategyEntity.samlProviderSloTargetUrl) &&
        Objects.equals(this.samlProviderSsoTargetUrl, ssoStrategyEntity.samlProviderSsoTargetUrl) &&
        Objects.equals(this.scimAuthenticationMethod, ssoStrategyEntity.scimAuthenticationMethod) &&
        Objects.equals(this.scimOauthAccessToken, ssoStrategyEntity.scimOauthAccessToken) &&
        Objects.equals(this.scimOauthAccessTokenExpiresAt, ssoStrategyEntity.scimOauthAccessTokenExpiresAt) &&
        Objects.equals(this.scimUsername, ssoStrategyEntity.scimUsername) &&
        Objects.equals(this.subdomain, ssoStrategyEntity.subdomain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deprovisionBehavior, deprovisionGroups, deprovisionUsers, enabled, id, label, ldapBaseDn, ldapDomain, ldapHost, ldapHost2, ldapHost3, ldapPort, ldapSecure, ldapUsername, ldapUsernameField, logoUrl, protocol, provider, provisionAttachmentsPermission, provisionCompany, provisionDavPermission, provisionEmailSignupGroups, provisionFtpPermission, provisionGroupDefault, provisionGroupExclusion, provisionGroupInclusion, provisionGroupRequired, provisionGroups, provisionSftpPermission, provisionSiteAdminGroups, provisionTimeZone, provisionUsers, samlProviderCertFingerprint, samlProviderIssuerUrl, samlProviderMetadataContent, samlProviderMetadataUrl, samlProviderSloTargetUrl, samlProviderSsoTargetUrl, scimAuthenticationMethod, scimOauthAccessToken, scimOauthAccessTokenExpiresAt, scimUsername, subdomain);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SsoStrategyEntity {\n");
    sb.append("    deprovisionBehavior: ").append(toIndentedString(deprovisionBehavior)).append("\n");
    sb.append("    deprovisionGroups: ").append(toIndentedString(deprovisionGroups)).append("\n");
    sb.append("    deprovisionUsers: ").append(toIndentedString(deprovisionUsers)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    ldapBaseDn: ").append(toIndentedString(ldapBaseDn)).append("\n");
    sb.append("    ldapDomain: ").append(toIndentedString(ldapDomain)).append("\n");
    sb.append("    ldapHost: ").append(toIndentedString(ldapHost)).append("\n");
    sb.append("    ldapHost2: ").append(toIndentedString(ldapHost2)).append("\n");
    sb.append("    ldapHost3: ").append(toIndentedString(ldapHost3)).append("\n");
    sb.append("    ldapPort: ").append(toIndentedString(ldapPort)).append("\n");
    sb.append("    ldapSecure: ").append(toIndentedString(ldapSecure)).append("\n");
    sb.append("    ldapUsername: ").append(toIndentedString(ldapUsername)).append("\n");
    sb.append("    ldapUsernameField: ").append(toIndentedString(ldapUsernameField)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    provisionAttachmentsPermission: ").append(toIndentedString(provisionAttachmentsPermission)).append("\n");
    sb.append("    provisionCompany: ").append(toIndentedString(provisionCompany)).append("\n");
    sb.append("    provisionDavPermission: ").append(toIndentedString(provisionDavPermission)).append("\n");
    sb.append("    provisionEmailSignupGroups: ").append(toIndentedString(provisionEmailSignupGroups)).append("\n");
    sb.append("    provisionFtpPermission: ").append(toIndentedString(provisionFtpPermission)).append("\n");
    sb.append("    provisionGroupDefault: ").append(toIndentedString(provisionGroupDefault)).append("\n");
    sb.append("    provisionGroupExclusion: ").append(toIndentedString(provisionGroupExclusion)).append("\n");
    sb.append("    provisionGroupInclusion: ").append(toIndentedString(provisionGroupInclusion)).append("\n");
    sb.append("    provisionGroupRequired: ").append(toIndentedString(provisionGroupRequired)).append("\n");
    sb.append("    provisionGroups: ").append(toIndentedString(provisionGroups)).append("\n");
    sb.append("    provisionSftpPermission: ").append(toIndentedString(provisionSftpPermission)).append("\n");
    sb.append("    provisionSiteAdminGroups: ").append(toIndentedString(provisionSiteAdminGroups)).append("\n");
    sb.append("    provisionTimeZone: ").append(toIndentedString(provisionTimeZone)).append("\n");
    sb.append("    provisionUsers: ").append(toIndentedString(provisionUsers)).append("\n");
    sb.append("    samlProviderCertFingerprint: ").append(toIndentedString(samlProviderCertFingerprint)).append("\n");
    sb.append("    samlProviderIssuerUrl: ").append(toIndentedString(samlProviderIssuerUrl)).append("\n");
    sb.append("    samlProviderMetadataContent: ").append(toIndentedString(samlProviderMetadataContent)).append("\n");
    sb.append("    samlProviderMetadataUrl: ").append(toIndentedString(samlProviderMetadataUrl)).append("\n");
    sb.append("    samlProviderSloTargetUrl: ").append(toIndentedString(samlProviderSloTargetUrl)).append("\n");
    sb.append("    samlProviderSsoTargetUrl: ").append(toIndentedString(samlProviderSsoTargetUrl)).append("\n");
    sb.append("    scimAuthenticationMethod: ").append(toIndentedString(scimAuthenticationMethod)).append("\n");
    sb.append("    scimOauthAccessToken: ").append(toIndentedString(scimOauthAccessToken)).append("\n");
    sb.append("    scimOauthAccessTokenExpiresAt: ").append(toIndentedString(scimOauthAccessTokenExpiresAt)).append("\n");
    sb.append("    scimUsername: ").append(toIndentedString(scimUsername)).append("\n");
    sb.append("    subdomain: ").append(toIndentedString(subdomain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deprovision_behavior");
    openapiFields.add("deprovision_groups");
    openapiFields.add("deprovision_users");
    openapiFields.add("enabled");
    openapiFields.add("id");
    openapiFields.add("label");
    openapiFields.add("ldap_base_dn");
    openapiFields.add("ldap_domain");
    openapiFields.add("ldap_host");
    openapiFields.add("ldap_host_2");
    openapiFields.add("ldap_host_3");
    openapiFields.add("ldap_port");
    openapiFields.add("ldap_secure");
    openapiFields.add("ldap_username");
    openapiFields.add("ldap_username_field");
    openapiFields.add("logo_url");
    openapiFields.add("protocol");
    openapiFields.add("provider");
    openapiFields.add("provision_attachments_permission");
    openapiFields.add("provision_company");
    openapiFields.add("provision_dav_permission");
    openapiFields.add("provision_email_signup_groups");
    openapiFields.add("provision_ftp_permission");
    openapiFields.add("provision_group_default");
    openapiFields.add("provision_group_exclusion");
    openapiFields.add("provision_group_inclusion");
    openapiFields.add("provision_group_required");
    openapiFields.add("provision_groups");
    openapiFields.add("provision_sftp_permission");
    openapiFields.add("provision_site_admin_groups");
    openapiFields.add("provision_time_zone");
    openapiFields.add("provision_users");
    openapiFields.add("saml_provider_cert_fingerprint");
    openapiFields.add("saml_provider_issuer_url");
    openapiFields.add("saml_provider_metadata_content");
    openapiFields.add("saml_provider_metadata_url");
    openapiFields.add("saml_provider_slo_target_url");
    openapiFields.add("saml_provider_sso_target_url");
    openapiFields.add("scim_authentication_method");
    openapiFields.add("scim_oauth_access_token");
    openapiFields.add("scim_oauth_access_token_expires_at");
    openapiFields.add("scim_username");
    openapiFields.add("subdomain");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SsoStrategyEntity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SsoStrategyEntity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SsoStrategyEntity is not found in the empty JSON string", SsoStrategyEntity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SsoStrategyEntity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SsoStrategyEntity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("deprovision_behavior") != null && !jsonObj.get("deprovision_behavior").isJsonNull()) && !jsonObj.get("deprovision_behavior").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deprovision_behavior` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deprovision_behavior").toString()));
      }
      // validate the optional field `deprovision_behavior`
      if (jsonObj.get("deprovision_behavior") != null && !jsonObj.get("deprovision_behavior").isJsonNull()) {
        DeprovisionBehaviorEnum.validateJsonElement(jsonObj.get("deprovision_behavior"));
      }
      if ((jsonObj.get("label") != null && !jsonObj.get("label").isJsonNull()) && !jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      if ((jsonObj.get("ldap_base_dn") != null && !jsonObj.get("ldap_base_dn").isJsonNull()) && !jsonObj.get("ldap_base_dn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_base_dn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_base_dn").toString()));
      }
      if ((jsonObj.get("ldap_domain") != null && !jsonObj.get("ldap_domain").isJsonNull()) && !jsonObj.get("ldap_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_domain").toString()));
      }
      if ((jsonObj.get("ldap_host") != null && !jsonObj.get("ldap_host").isJsonNull()) && !jsonObj.get("ldap_host").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_host` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_host").toString()));
      }
      if ((jsonObj.get("ldap_host_2") != null && !jsonObj.get("ldap_host_2").isJsonNull()) && !jsonObj.get("ldap_host_2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_host_2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_host_2").toString()));
      }
      if ((jsonObj.get("ldap_host_3") != null && !jsonObj.get("ldap_host_3").isJsonNull()) && !jsonObj.get("ldap_host_3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_host_3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_host_3").toString()));
      }
      if ((jsonObj.get("ldap_username") != null && !jsonObj.get("ldap_username").isJsonNull()) && !jsonObj.get("ldap_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_username").toString()));
      }
      if ((jsonObj.get("ldap_username_field") != null && !jsonObj.get("ldap_username_field").isJsonNull()) && !jsonObj.get("ldap_username_field").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_username_field` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_username_field").toString()));
      }
      // validate the optional field `ldap_username_field`
      if (jsonObj.get("ldap_username_field") != null && !jsonObj.get("ldap_username_field").isJsonNull()) {
        LdapUsernameFieldEnum.validateJsonElement(jsonObj.get("ldap_username_field"));
      }
      if ((jsonObj.get("logo_url") != null && !jsonObj.get("logo_url").isJsonNull()) && !jsonObj.get("logo_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logo_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logo_url").toString()));
      }
      if ((jsonObj.get("protocol") != null && !jsonObj.get("protocol").isJsonNull()) && !jsonObj.get("protocol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protocol").toString()));
      }
      // validate the optional field `protocol`
      if (jsonObj.get("protocol") != null && !jsonObj.get("protocol").isJsonNull()) {
        ProtocolEnum.validateJsonElement(jsonObj.get("protocol"));
      }
      if ((jsonObj.get("provider") != null && !jsonObj.get("provider").isJsonNull()) && !jsonObj.get("provider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provider").toString()));
      }
      // validate the optional field `provider`
      if (jsonObj.get("provider") != null && !jsonObj.get("provider").isJsonNull()) {
        ProviderEnum.validateJsonElement(jsonObj.get("provider"));
      }
      if ((jsonObj.get("provision_company") != null && !jsonObj.get("provision_company").isJsonNull()) && !jsonObj.get("provision_company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provision_company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provision_company").toString()));
      }
      if ((jsonObj.get("provision_email_signup_groups") != null && !jsonObj.get("provision_email_signup_groups").isJsonNull()) && !jsonObj.get("provision_email_signup_groups").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provision_email_signup_groups` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provision_email_signup_groups").toString()));
      }
      if ((jsonObj.get("provision_group_default") != null && !jsonObj.get("provision_group_default").isJsonNull()) && !jsonObj.get("provision_group_default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provision_group_default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provision_group_default").toString()));
      }
      if ((jsonObj.get("provision_group_exclusion") != null && !jsonObj.get("provision_group_exclusion").isJsonNull()) && !jsonObj.get("provision_group_exclusion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provision_group_exclusion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provision_group_exclusion").toString()));
      }
      if ((jsonObj.get("provision_group_inclusion") != null && !jsonObj.get("provision_group_inclusion").isJsonNull()) && !jsonObj.get("provision_group_inclusion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provision_group_inclusion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provision_group_inclusion").toString()));
      }
      if ((jsonObj.get("provision_group_required") != null && !jsonObj.get("provision_group_required").isJsonNull()) && !jsonObj.get("provision_group_required").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provision_group_required` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provision_group_required").toString()));
      }
      if ((jsonObj.get("provision_site_admin_groups") != null && !jsonObj.get("provision_site_admin_groups").isJsonNull()) && !jsonObj.get("provision_site_admin_groups").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provision_site_admin_groups` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provision_site_admin_groups").toString()));
      }
      if ((jsonObj.get("provision_time_zone") != null && !jsonObj.get("provision_time_zone").isJsonNull()) && !jsonObj.get("provision_time_zone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provision_time_zone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provision_time_zone").toString()));
      }
      if ((jsonObj.get("saml_provider_cert_fingerprint") != null && !jsonObj.get("saml_provider_cert_fingerprint").isJsonNull()) && !jsonObj.get("saml_provider_cert_fingerprint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saml_provider_cert_fingerprint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saml_provider_cert_fingerprint").toString()));
      }
      if ((jsonObj.get("saml_provider_issuer_url") != null && !jsonObj.get("saml_provider_issuer_url").isJsonNull()) && !jsonObj.get("saml_provider_issuer_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saml_provider_issuer_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saml_provider_issuer_url").toString()));
      }
      if ((jsonObj.get("saml_provider_metadata_content") != null && !jsonObj.get("saml_provider_metadata_content").isJsonNull()) && !jsonObj.get("saml_provider_metadata_content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saml_provider_metadata_content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saml_provider_metadata_content").toString()));
      }
      if ((jsonObj.get("saml_provider_metadata_url") != null && !jsonObj.get("saml_provider_metadata_url").isJsonNull()) && !jsonObj.get("saml_provider_metadata_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saml_provider_metadata_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saml_provider_metadata_url").toString()));
      }
      if ((jsonObj.get("saml_provider_slo_target_url") != null && !jsonObj.get("saml_provider_slo_target_url").isJsonNull()) && !jsonObj.get("saml_provider_slo_target_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saml_provider_slo_target_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saml_provider_slo_target_url").toString()));
      }
      if ((jsonObj.get("saml_provider_sso_target_url") != null && !jsonObj.get("saml_provider_sso_target_url").isJsonNull()) && !jsonObj.get("saml_provider_sso_target_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saml_provider_sso_target_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saml_provider_sso_target_url").toString()));
      }
      if ((jsonObj.get("scim_authentication_method") != null && !jsonObj.get("scim_authentication_method").isJsonNull()) && !jsonObj.get("scim_authentication_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scim_authentication_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scim_authentication_method").toString()));
      }
      // validate the optional field `scim_authentication_method`
      if (jsonObj.get("scim_authentication_method") != null && !jsonObj.get("scim_authentication_method").isJsonNull()) {
        ScimAuthenticationMethodEnum.validateJsonElement(jsonObj.get("scim_authentication_method"));
      }
      if ((jsonObj.get("scim_oauth_access_token") != null && !jsonObj.get("scim_oauth_access_token").isJsonNull()) && !jsonObj.get("scim_oauth_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scim_oauth_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scim_oauth_access_token").toString()));
      }
      if ((jsonObj.get("scim_oauth_access_token_expires_at") != null && !jsonObj.get("scim_oauth_access_token_expires_at").isJsonNull()) && !jsonObj.get("scim_oauth_access_token_expires_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scim_oauth_access_token_expires_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scim_oauth_access_token_expires_at").toString()));
      }
      if ((jsonObj.get("scim_username") != null && !jsonObj.get("scim_username").isJsonNull()) && !jsonObj.get("scim_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scim_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scim_username").toString()));
      }
      if ((jsonObj.get("subdomain") != null && !jsonObj.get("subdomain").isJsonNull()) && !jsonObj.get("subdomain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subdomain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subdomain").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SsoStrategyEntity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SsoStrategyEntity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SsoStrategyEntity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SsoStrategyEntity.class));

       return (TypeAdapter<T>) new TypeAdapter<SsoStrategyEntity>() {
           @Override
           public void write(JsonWriter out, SsoStrategyEntity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SsoStrategyEntity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SsoStrategyEntity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SsoStrategyEntity
   * @throws IOException if the JSON string is invalid with respect to SsoStrategyEntity
   */
  public static SsoStrategyEntity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SsoStrategyEntity.class);
  }

  /**
   * Convert an instance of SsoStrategyEntity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

