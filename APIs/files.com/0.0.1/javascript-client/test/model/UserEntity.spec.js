/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FilesComApi);
  }
}(this, function(expect, FilesComApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FilesComApi.UserEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserEntity', function() {
    it('should create an instance of UserEntity', function() {
      // uncomment below and update the code to test UserEntity
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be.a(FilesComApi.UserEntity);
    });

    it('should have the property active2fa (base name: "active_2fa")', function() {
      // uncomment below and update the code to test the property active2fa
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property adminGroupIds (base name: "admin_group_ids")', function() {
      // uncomment below and update the code to test the property adminGroupIds
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property allowedIps (base name: "allowed_ips")', function() {
      // uncomment below and update the code to test the property allowedIps
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property apiKeysCount (base name: "api_keys_count")', function() {
      // uncomment below and update the code to test the property apiKeysCount
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property attachmentsPermission (base name: "attachments_permission")', function() {
      // uncomment below and update the code to test the property attachmentsPermission
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property authenticateUntil (base name: "authenticate_until")', function() {
      // uncomment below and update the code to test the property authenticateUntil
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property authenticationMethod (base name: "authentication_method")', function() {
      // uncomment below and update the code to test the property authenticationMethod
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property avatarUrl (base name: "avatar_url")', function() {
      // uncomment below and update the code to test the property avatarUrl
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property billingPermission (base name: "billing_permission")', function() {
      // uncomment below and update the code to test the property billingPermission
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property bypassInactiveDisable (base name: "bypass_inactive_disable")', function() {
      // uncomment below and update the code to test the property bypassInactiveDisable
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property bypassSiteAllowedIps (base name: "bypass_site_allowed_ips")', function() {
      // uncomment below and update the code to test the property bypassSiteAllowedIps
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property davPermission (base name: "dav_permission")', function() {
      // uncomment below and update the code to test the property davPermission
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property daysRemainingUntilPasswordExpire (base name: "days_remaining_until_password_expire")', function() {
      // uncomment below and update the code to test the property daysRemainingUntilPasswordExpire
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property disabled (base name: "disabled")', function() {
      // uncomment below and update the code to test the property disabled
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property externallyManaged (base name: "externally_managed")', function() {
      // uncomment below and update the code to test the property externallyManaged
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property firstLoginAt (base name: "first_login_at")', function() {
      // uncomment below and update the code to test the property firstLoginAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property ftpPermission (base name: "ftp_permission")', function() {
      // uncomment below and update the code to test the property ftpPermission
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property groupIds (base name: "group_ids")', function() {
      // uncomment below and update the code to test the property groupIds
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property headerText (base name: "header_text")', function() {
      // uncomment below and update the code to test the property headerText
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lastActiveAt (base name: "last_active_at")', function() {
      // uncomment below and update the code to test the property lastActiveAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lastApiUseAt (base name: "last_api_use_at")', function() {
      // uncomment below and update the code to test the property lastApiUseAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lastDavLoginAt (base name: "last_dav_login_at")', function() {
      // uncomment below and update the code to test the property lastDavLoginAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lastDesktopLoginAt (base name: "last_desktop_login_at")', function() {
      // uncomment below and update the code to test the property lastDesktopLoginAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lastFtpLoginAt (base name: "last_ftp_login_at")', function() {
      // uncomment below and update the code to test the property lastFtpLoginAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lastLoginAt (base name: "last_login_at")', function() {
      // uncomment below and update the code to test the property lastLoginAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lastProtocolCipher (base name: "last_protocol_cipher")', function() {
      // uncomment below and update the code to test the property lastProtocolCipher
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lastRestapiLoginAt (base name: "last_restapi_login_at")', function() {
      // uncomment below and update the code to test the property lastRestapiLoginAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lastSftpLoginAt (base name: "last_sftp_login_at")', function() {
      // uncomment below and update the code to test the property lastSftpLoginAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lastWebLoginAt (base name: "last_web_login_at")', function() {
      // uncomment below and update the code to test the property lastWebLoginAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property lockoutExpires (base name: "lockout_expires")', function() {
      // uncomment below and update the code to test the property lockoutExpires
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property notificationDailySendTime (base name: "notification_daily_send_time")', function() {
      // uncomment below and update the code to test the property notificationDailySendTime
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property officeIntegrationEnabled (base name: "office_integration_enabled")', function() {
      // uncomment below and update the code to test the property officeIntegrationEnabled
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordExpireAt (base name: "password_expire_at")', function() {
      // uncomment below and update the code to test the property passwordExpireAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordExpired (base name: "password_expired")', function() {
      // uncomment below and update the code to test the property passwordExpired
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordSetAt (base name: "password_set_at")', function() {
      // uncomment below and update the code to test the property passwordSetAt
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordValidityDays (base name: "password_validity_days")', function() {
      // uncomment below and update the code to test the property passwordValidityDays
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property publicKeysCount (base name: "public_keys_count")', function() {
      // uncomment below and update the code to test the property publicKeysCount
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property receiveAdminAlerts (base name: "receive_admin_alerts")', function() {
      // uncomment below and update the code to test the property receiveAdminAlerts
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property require2fa (base name: "require_2fa")', function() {
      // uncomment below and update the code to test the property require2fa
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property requirePasswordChange (base name: "require_password_change")', function() {
      // uncomment below and update the code to test the property requirePasswordChange
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property restapiPermission (base name: "restapi_permission")', function() {
      // uncomment below and update the code to test the property restapiPermission
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property selfManaged (base name: "self_managed")', function() {
      // uncomment below and update the code to test the property selfManaged
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property sftpPermission (base name: "sftp_permission")', function() {
      // uncomment below and update the code to test the property sftpPermission
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property siteAdmin (base name: "site_admin")', function() {
      // uncomment below and update the code to test the property siteAdmin
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property skipWelcomeScreen (base name: "skip_welcome_screen")', function() {
      // uncomment below and update the code to test the property skipWelcomeScreen
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property sslRequired (base name: "ssl_required")', function() {
      // uncomment below and update the code to test the property sslRequired
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property ssoStrategyId (base name: "sso_strategy_id")', function() {
      // uncomment below and update the code to test the property ssoStrategyId
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property subscribeToNewsletter (base name: "subscribe_to_newsletter")', function() {
      // uncomment below and update the code to test the property subscribeToNewsletter
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "time_zone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property typeOf2fa (base name: "type_of_2fa")', function() {
      // uncomment below and update the code to test the property typeOf2fa
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property userRoot (base name: "user_root")', function() {
      // uncomment below and update the code to test the property userRoot
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new FilesComApi.UserEntity();
      //expect(instance).to.be();
    });

  });

}));
