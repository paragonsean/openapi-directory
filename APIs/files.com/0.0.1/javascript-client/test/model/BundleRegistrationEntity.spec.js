/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FilesComApi);
  }
}(this, function(expect, FilesComApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FilesComApi.BundleRegistrationEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BundleRegistrationEntity', function() {
    it('should create an instance of BundleRegistrationEntity', function() {
      // uncomment below and update the code to test BundleRegistrationEntity
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be.a(FilesComApi.BundleRegistrationEntity);
    });

    it('should have the property bundleCode (base name: "bundle_code")', function() {
      // uncomment below and update the code to test the property bundleCode
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property bundleId (base name: "bundle_id")', function() {
      // uncomment below and update the code to test the property bundleId
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property bundleRecipientId (base name: "bundle_recipient_id")', function() {
      // uncomment below and update the code to test the property bundleRecipientId
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property clickwrapBody (base name: "clickwrap_body")', function() {
      // uncomment below and update the code to test the property clickwrapBody
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property formFieldData (base name: "form_field_data")', function() {
      // uncomment below and update the code to test the property formFieldData
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property formFieldSetId (base name: "form_field_set_id")', function() {
      // uncomment below and update the code to test the property formFieldSetId
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property inboxCode (base name: "inbox_code")', function() {
      // uncomment below and update the code to test the property inboxCode
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new FilesComApi.BundleRegistrationEntity();
      //expect(instance).to.be();
    });

  });

}));
