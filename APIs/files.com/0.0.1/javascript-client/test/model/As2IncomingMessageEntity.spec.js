/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FilesComApi);
  }
}(this, function(expect, FilesComApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FilesComApi.As2IncomingMessageEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('As2IncomingMessageEntity', function() {
    it('should create an instance of As2IncomingMessageEntity', function() {
      // uncomment below and update the code to test As2IncomingMessageEntity
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be.a(FilesComApi.As2IncomingMessageEntity);
    });

    it('should have the property activityLog (base name: "activity_log")', function() {
      // uncomment below and update the code to test the property activityLog
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property as2From (base name: "as2_from")', function() {
      // uncomment below and update the code to test the property as2From
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property as2PartnerId (base name: "as2_partner_id")', function() {
      // uncomment below and update the code to test the property as2PartnerId
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property as2StationId (base name: "as2_station_id")', function() {
      // uncomment below and update the code to test the property as2StationId
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property as2To (base name: "as2_to")', function() {
      // uncomment below and update the code to test the property as2To
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property attachmentFilename (base name: "attachment_filename")', function() {
      // uncomment below and update the code to test the property attachmentFilename
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property bodySize (base name: "body_size")', function() {
      // uncomment below and update the code to test the property bodySize
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property contentType (base name: "content_type")', function() {
      // uncomment below and update the code to test the property contentType
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property encryptedUri (base name: "encrypted_uri")', function() {
      // uncomment below and update the code to test the property encryptedUri
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property hexRecipientSerial (base name: "hex_recipient_serial")', function() {
      // uncomment below and update the code to test the property hexRecipientSerial
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property httpHeaders (base name: "http_headers")', function() {
      // uncomment below and update the code to test the property httpHeaders
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property httpResponseCode (base name: "http_response_code")', function() {
      // uncomment below and update the code to test the property httpResponseCode
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property httpResponseHeaders (base name: "http_response_headers")', function() {
      // uncomment below and update the code to test the property httpResponseHeaders
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property mdnResponseUri (base name: "mdn_response_uri")', function() {
      // uncomment below and update the code to test the property mdnResponseUri
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property messageDecrypted (base name: "message_decrypted")', function() {
      // uncomment below and update the code to test the property messageDecrypted
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property messageId (base name: "message_id")', function() {
      // uncomment below and update the code to test the property messageId
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property messageMdnReturned (base name: "message_mdn_returned")', function() {
      // uncomment below and update the code to test the property messageMdnReturned
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property messageProcessingSuccess (base name: "message_processing_success")', function() {
      // uncomment below and update the code to test the property messageProcessingSuccess
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property messageReceived (base name: "message_received")', function() {
      // uncomment below and update the code to test the property messageReceived
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property messageSignatureVerified (base name: "message_signature_verified")', function() {
      // uncomment below and update the code to test the property messageSignatureVerified
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property mic (base name: "mic")', function() {
      // uncomment below and update the code to test the property mic
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property micAlgo (base name: "mic_algo")', function() {
      // uncomment below and update the code to test the property micAlgo
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property processingResult (base name: "processing_result")', function() {
      // uncomment below and update the code to test the property processingResult
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property processingResultDescription (base name: "processing_result_description")', function() {
      // uncomment below and update the code to test the property processingResultDescription
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property rawUri (base name: "raw_uri")', function() {
      // uncomment below and update the code to test the property rawUri
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property recipientIssuer (base name: "recipient_issuer")', function() {
      // uncomment below and update the code to test the property recipientIssuer
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property recipientSerial (base name: "recipient_serial")', function() {
      // uncomment below and update the code to test the property recipientSerial
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property smimeSignedUri (base name: "smime_signed_uri")', function() {
      // uncomment below and update the code to test the property smimeSignedUri
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property smimeUri (base name: "smime_uri")', function() {
      // uncomment below and update the code to test the property smimeUri
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property subject (base name: "subject")', function() {
      // uncomment below and update the code to test the property subject
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

    it('should have the property uuid (base name: "uuid")', function() {
      // uncomment below and update the code to test the property uuid
      //var instance = new FilesComApi.As2IncomingMessageEntity();
      //expect(instance).to.be();
    });

  });

}));
