/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FilesComApi);
  }
}(this, function(expect, FilesComApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FilesComApi.FileUploadPartEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FileUploadPartEntity', function() {
    it('should create an instance of FileUploadPartEntity', function() {
      // uncomment below and update the code to test FileUploadPartEntity
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be.a(FilesComApi.FileUploadPartEntity);
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property askAboutOverwrites (base name: "ask_about_overwrites")', function() {
      // uncomment below and update the code to test the property askAboutOverwrites
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property availableParts (base name: "available_parts")', function() {
      // uncomment below and update the code to test the property availableParts
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property expires (base name: "expires")', function() {
      // uncomment below and update the code to test the property expires
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property headers (base name: "headers")', function() {
      // uncomment below and update the code to test the property headers
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property httpMethod (base name: "http_method")', function() {
      // uncomment below and update the code to test the property httpMethod
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property nextPartsize (base name: "next_partsize")', function() {
      // uncomment below and update the code to test the property nextPartsize
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property parallelParts (base name: "parallel_parts")', function() {
      // uncomment below and update the code to test the property parallelParts
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property partNumber (base name: "part_number")', function() {
      // uncomment below and update the code to test the property partNumber
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property partsize (base name: "partsize")', function() {
      // uncomment below and update the code to test the property partsize
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property ref (base name: "ref")', function() {
      // uncomment below and update the code to test the property ref
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property retryParts (base name: "retry_parts")', function() {
      // uncomment below and update the code to test the property retryParts
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property send (base name: "send")', function() {
      // uncomment below and update the code to test the property send
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

    it('should have the property uploadUri (base name: "upload_uri")', function() {
      // uncomment below and update the code to test the property uploadUri
      //var instance = new FilesComApi.FileUploadPartEntity();
      //expect(instance).to.be();
    });

  });

}));
