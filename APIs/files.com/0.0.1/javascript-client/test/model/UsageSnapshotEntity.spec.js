/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FilesComApi);
  }
}(this, function(expect, FilesComApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FilesComApi.UsageSnapshotEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsageSnapshotEntity', function() {
    it('should create an instance of UsageSnapshotEntity', function() {
      // uncomment below and update the code to test UsageSnapshotEntity
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be.a(FilesComApi.UsageSnapshotEntity);
    });

    it('should have the property bytesSent (base name: "bytes_sent")', function() {
      // uncomment below and update the code to test the property bytesSent
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property currentStorage (base name: "current_storage")', function() {
      // uncomment below and update the code to test the property currentStorage
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property deletedFilesCountedInMinimum (base name: "deleted_files_counted_in_minimum")', function() {
      // uncomment below and update the code to test the property deletedFilesCountedInMinimum
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property deletedFilesStorage (base name: "deleted_files_storage")', function() {
      // uncomment below and update the code to test the property deletedFilesStorage
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property endAt (base name: "end_at")', function() {
      // uncomment below and update the code to test the property endAt
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property highWaterStorage (base name: "high_water_storage")', function() {
      // uncomment below and update the code to test the property highWaterStorage
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property highWaterUserCount (base name: "high_water_user_count")', function() {
      // uncomment below and update the code to test the property highWaterUserCount
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property rootStorage (base name: "root_storage")', function() {
      // uncomment below and update the code to test the property rootStorage
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property startAt (base name: "start_at")', function() {
      // uncomment below and update the code to test the property startAt
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property syncBytesReceived (base name: "sync_bytes_received")', function() {
      // uncomment below and update the code to test the property syncBytesReceived
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property syncBytesSent (base name: "sync_bytes_sent")', function() {
      // uncomment below and update the code to test the property syncBytesSent
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property totalBillableTransferUsage (base name: "total_billable_transfer_usage")', function() {
      // uncomment below and update the code to test the property totalBillableTransferUsage
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property totalBillableUsage (base name: "total_billable_usage")', function() {
      // uncomment below and update the code to test the property totalBillableUsage
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

    it('should have the property usageByTopLevelDir (base name: "usage_by_top_level_dir")', function() {
      // uncomment below and update the code to test the property usageByTopLevelDir
      //var instance = new FilesComApi.UsageSnapshotEntity();
      //expect(instance).to.be();
    });

  });

}));
