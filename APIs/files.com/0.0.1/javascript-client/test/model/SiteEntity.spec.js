/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FilesComApi);
  }
}(this, function(expect, FilesComApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FilesComApi.SiteEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SiteEntity', function() {
    it('should create an instance of SiteEntity', function() {
      // uncomment below and update the code to test SiteEntity
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be.a(FilesComApi.SiteEntity);
    });

    it('should have the property activeSftpHostKeyId (base name: "active_sftp_host_key_id")', function() {
      // uncomment below and update the code to test the property activeSftpHostKeyId
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property adminUserId (base name: "admin_user_id")', function() {
      // uncomment below and update the code to test the property adminUserId
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property allowBundleNames (base name: "allow_bundle_names")', function() {
      // uncomment below and update the code to test the property allowBundleNames
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property allowed2faMethodBypassForFtpSftpDav (base name: "allowed_2fa_method_bypass_for_ftp_sftp_dav")', function() {
      // uncomment below and update the code to test the property allowed2faMethodBypassForFtpSftpDav
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property allowed2faMethodSms (base name: "allowed_2fa_method_sms")', function() {
      // uncomment below and update the code to test the property allowed2faMethodSms
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property allowed2faMethodTotp (base name: "allowed_2fa_method_totp")', function() {
      // uncomment below and update the code to test the property allowed2faMethodTotp
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property allowed2faMethodU2f (base name: "allowed_2fa_method_u2f")', function() {
      // uncomment below and update the code to test the property allowed2faMethodU2f
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property allowed2faMethodWebauthn (base name: "allowed_2fa_method_webauthn")', function() {
      // uncomment below and update the code to test the property allowed2faMethodWebauthn
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property allowed2faMethodYubi (base name: "allowed_2fa_method_yubi")', function() {
      // uncomment below and update the code to test the property allowed2faMethodYubi
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property allowedCountries (base name: "allowed_countries")', function() {
      // uncomment below and update the code to test the property allowedCountries
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property allowedIps (base name: "allowed_ips")', function() {
      // uncomment below and update the code to test the property allowedIps
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property askAboutOverwrites (base name: "ask_about_overwrites")', function() {
      // uncomment below and update the code to test the property askAboutOverwrites
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property bundleActivityNotifications (base name: "bundle_activity_notifications")', function() {
      // uncomment below and update the code to test the property bundleActivityNotifications
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property bundleExpiration (base name: "bundle_expiration")', function() {
      // uncomment below and update the code to test the property bundleExpiration
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property bundlePasswordRequired (base name: "bundle_password_required")', function() {
      // uncomment below and update the code to test the property bundlePasswordRequired
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property bundleRegistrationNotifications (base name: "bundle_registration_notifications")', function() {
      // uncomment below and update the code to test the property bundleRegistrationNotifications
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property bundleRequireShareRecipient (base name: "bundle_require_share_recipient")', function() {
      // uncomment below and update the code to test the property bundleRequireShareRecipient
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property bundleUploadReceiptNotifications (base name: "bundle_upload_receipt_notifications")', function() {
      // uncomment below and update the code to test the property bundleUploadReceiptNotifications
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property bundleWatermarkAttachment (base name: "bundle_watermark_attachment")', function() {
      // uncomment below and update the code to test the property bundleWatermarkAttachment
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property bundleWatermarkValue (base name: "bundle_watermark_value")', function() {
      // uncomment below and update the code to test the property bundleWatermarkValue
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property color2Left (base name: "color2_left")', function() {
      // uncomment below and update the code to test the property color2Left
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property color2Link (base name: "color2_link")', function() {
      // uncomment below and update the code to test the property color2Link
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property color2Text (base name: "color2_text")', function() {
      // uncomment below and update the code to test the property color2Text
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property color2Top (base name: "color2_top")', function() {
      // uncomment below and update the code to test the property color2Top
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property color2TopText (base name: "color2_top_text")', function() {
      // uncomment below and update the code to test the property color2TopText
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property contactName (base name: "contact_name")', function() {
      // uncomment below and update the code to test the property contactName
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property customNamespace (base name: "custom_namespace")', function() {
      // uncomment below and update the code to test the property customNamespace
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property daysToRetainBackups (base name: "days_to_retain_backups")', function() {
      // uncomment below and update the code to test the property daysToRetainBackups
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property defaultTimeZone (base name: "default_time_zone")', function() {
      // uncomment below and update the code to test the property defaultTimeZone
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property desktopApp (base name: "desktop_app")', function() {
      // uncomment below and update the code to test the property desktopApp
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property desktopAppSessionIpPinning (base name: "desktop_app_session_ip_pinning")', function() {
      // uncomment below and update the code to test the property desktopAppSessionIpPinning
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property desktopAppSessionLifetime (base name: "desktop_app_session_lifetime")', function() {
      // uncomment below and update the code to test the property desktopAppSessionLifetime
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property disableFilesCertificateGeneration (base name: "disable_files_certificate_generation")', function() {
      // uncomment below and update the code to test the property disableFilesCertificateGeneration
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property disableNotifications (base name: "disable_notifications")', function() {
      // uncomment below and update the code to test the property disableNotifications
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property disablePasswordReset (base name: "disable_password_reset")', function() {
      // uncomment below and update the code to test the property disablePasswordReset
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property disableUsersFromInactivityPeriodDays (base name: "disable_users_from_inactivity_period_days")', function() {
      // uncomment below and update the code to test the property disableUsersFromInactivityPeriodDays
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property disallowedCountries (base name: "disallowed_countries")', function() {
      // uncomment below and update the code to test the property disallowedCountries
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property domain (base name: "domain")', function() {
      // uncomment below and update the code to test the property domain
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property domainHstsHeader (base name: "domain_hsts_header")', function() {
      // uncomment below and update the code to test the property domainHstsHeader
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property domainLetsencryptChain (base name: "domain_letsencrypt_chain")', function() {
      // uncomment below and update the code to test the property domainLetsencryptChain
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property folderPermissionsGroupsOnly (base name: "folder_permissions_groups_only")', function() {
      // uncomment below and update the code to test the property folderPermissionsGroupsOnly
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ftpEnabled (base name: "ftp_enabled")', function() {
      // uncomment below and update the code to test the property ftpEnabled
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property hipaa (base name: "hipaa")', function() {
      // uncomment below and update the code to test the property hipaa
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property icon128 (base name: "icon128")', function() {
      // uncomment below and update the code to test the property icon128
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property icon16 (base name: "icon16")', function() {
      // uncomment below and update the code to test the property icon16
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property icon32 (base name: "icon32")', function() {
      // uncomment below and update the code to test the property icon32
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property icon48 (base name: "icon48")', function() {
      // uncomment below and update the code to test the property icon48
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property immutableFilesSetAt (base name: "immutable_files_set_at")', function() {
      // uncomment below and update the code to test the property immutableFilesSetAt
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property includePasswordInWelcomeEmail (base name: "include_password_in_welcome_email")', function() {
      // uncomment below and update the code to test the property includePasswordInWelcomeEmail
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapBaseDn (base name: "ldap_base_dn")', function() {
      // uncomment below and update the code to test the property ldapBaseDn
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapDomain (base name: "ldap_domain")', function() {
      // uncomment below and update the code to test the property ldapDomain
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapEnabled (base name: "ldap_enabled")', function() {
      // uncomment below and update the code to test the property ldapEnabled
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapGroupAction (base name: "ldap_group_action")', function() {
      // uncomment below and update the code to test the property ldapGroupAction
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapGroupExclusion (base name: "ldap_group_exclusion")', function() {
      // uncomment below and update the code to test the property ldapGroupExclusion
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapGroupInclusion (base name: "ldap_group_inclusion")', function() {
      // uncomment below and update the code to test the property ldapGroupInclusion
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapHost (base name: "ldap_host")', function() {
      // uncomment below and update the code to test the property ldapHost
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapHost2 (base name: "ldap_host_2")', function() {
      // uncomment below and update the code to test the property ldapHost2
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapHost3 (base name: "ldap_host_3")', function() {
      // uncomment below and update the code to test the property ldapHost3
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapPort (base name: "ldap_port")', function() {
      // uncomment below and update the code to test the property ldapPort
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapSecure (base name: "ldap_secure")', function() {
      // uncomment below and update the code to test the property ldapSecure
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapType (base name: "ldap_type")', function() {
      // uncomment below and update the code to test the property ldapType
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapUserAction (base name: "ldap_user_action")', function() {
      // uncomment below and update the code to test the property ldapUserAction
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapUserIncludeGroups (base name: "ldap_user_include_groups")', function() {
      // uncomment below and update the code to test the property ldapUserIncludeGroups
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapUsername (base name: "ldap_username")', function() {
      // uncomment below and update the code to test the property ldapUsername
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapUsernameField (base name: "ldap_username_field")', function() {
      // uncomment below and update the code to test the property ldapUsernameField
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property loginHelpText (base name: "login_help_text")', function() {
      // uncomment below and update the code to test the property loginHelpText
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property maxPriorPasswords (base name: "max_prior_passwords")', function() {
      // uncomment below and update the code to test the property maxPriorPasswords
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property mobileApp (base name: "mobile_app")', function() {
      // uncomment below and update the code to test the property mobileApp
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property mobileAppSessionIpPinning (base name: "mobile_app_session_ip_pinning")', function() {
      // uncomment below and update the code to test the property mobileAppSessionIpPinning
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property mobileAppSessionLifetime (base name: "mobile_app_session_lifetime")', function() {
      // uncomment below and update the code to test the property mobileAppSessionLifetime
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property motdText (base name: "motd_text")', function() {
      // uncomment below and update the code to test the property motdText
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property motdUseForFtp (base name: "motd_use_for_ftp")', function() {
      // uncomment below and update the code to test the property motdUseForFtp
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property motdUseForSftp (base name: "motd_use_for_sftp")', function() {
      // uncomment below and update the code to test the property motdUseForSftp
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property nextBillingAmount (base name: "next_billing_amount")', function() {
      // uncomment below and update the code to test the property nextBillingAmount
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property nextBillingDate (base name: "next_billing_date")', function() {
      // uncomment below and update the code to test the property nextBillingDate
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property nonSsoGroupsAllowed (base name: "non_sso_groups_allowed")', function() {
      // uncomment below and update the code to test the property nonSsoGroupsAllowed
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property nonSsoUsersAllowed (base name: "non_sso_users_allowed")', function() {
      // uncomment below and update the code to test the property nonSsoUsersAllowed
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property officeIntegrationAvailable (base name: "office_integration_available")', function() {
      // uncomment below and update the code to test the property officeIntegrationAvailable
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property officeIntegrationType (base name: "office_integration_type")', function() {
      // uncomment below and update the code to test the property officeIntegrationType
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property oncehubLink (base name: "oncehub_link")', function() {
      // uncomment below and update the code to test the property oncehubLink
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property optOutGlobal (base name: "opt_out_global")', function() {
      // uncomment below and update the code to test the property optOutGlobal
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property overdue (base name: "overdue")', function() {
      // uncomment below and update the code to test the property overdue
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordMinLength (base name: "password_min_length")', function() {
      // uncomment below and update the code to test the property passwordMinLength
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordRequireLetter (base name: "password_require_letter")', function() {
      // uncomment below and update the code to test the property passwordRequireLetter
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordRequireMixed (base name: "password_require_mixed")', function() {
      // uncomment below and update the code to test the property passwordRequireMixed
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordRequireNumber (base name: "password_require_number")', function() {
      // uncomment below and update the code to test the property passwordRequireNumber
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordRequireSpecial (base name: "password_require_special")', function() {
      // uncomment below and update the code to test the property passwordRequireSpecial
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordRequireUnbreached (base name: "password_require_unbreached")', function() {
      // uncomment below and update the code to test the property passwordRequireUnbreached
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordRequirementsApplyToBundles (base name: "password_requirements_apply_to_bundles")', function() {
      // uncomment below and update the code to test the property passwordRequirementsApplyToBundles
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property passwordValidityDays (base name: "password_validity_days")', function() {
      // uncomment below and update the code to test the property passwordValidityDays
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property pinAllRemoteServersToSiteRegion (base name: "pin_all_remote_servers_to_site_region")', function() {
      // uncomment below and update the code to test the property pinAllRemoteServersToSiteRegion
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property replyToEmail (base name: "reply_to_email")', function() {
      // uncomment below and update the code to test the property replyToEmail
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property require2fa (base name: "require_2fa")', function() {
      // uncomment below and update the code to test the property require2fa
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property require2faStopTime (base name: "require_2fa_stop_time")', function() {
      // uncomment below and update the code to test the property require2faStopTime
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property require2faUserType (base name: "require_2fa_user_type")', function() {
      // uncomment below and update the code to test the property require2faUserType
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property session (base name: "session")', function() {
      // uncomment below and update the code to test the property session
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property sessionExpiry (base name: "session_expiry")', function() {
      // uncomment below and update the code to test the property sessionExpiry
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property sessionExpiryMinutes (base name: "session_expiry_minutes")', function() {
      // uncomment below and update the code to test the property sessionExpiryMinutes
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property sessionPinnedByIp (base name: "session_pinned_by_ip")', function() {
      // uncomment below and update the code to test the property sessionPinnedByIp
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property sftpEnabled (base name: "sftp_enabled")', function() {
      // uncomment below and update the code to test the property sftpEnabled
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property sftpHostKeyType (base name: "sftp_host_key_type")', function() {
      // uncomment below and update the code to test the property sftpHostKeyType
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property sftpInsecureCiphers (base name: "sftp_insecure_ciphers")', function() {
      // uncomment below and update the code to test the property sftpInsecureCiphers
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property sftpUserRootEnabled (base name: "sftp_user_root_enabled")', function() {
      // uncomment below and update the code to test the property sftpUserRootEnabled
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property sharingEnabled (base name: "sharing_enabled")', function() {
      // uncomment below and update the code to test the property sharingEnabled
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property showRequestAccessLink (base name: "show_request_access_link")', function() {
      // uncomment below and update the code to test the property showRequestAccessLink
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property siteFooter (base name: "site_footer")', function() {
      // uncomment below and update the code to test the property siteFooter
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property siteHeader (base name: "site_header")', function() {
      // uncomment below and update the code to test the property siteHeader
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property smtpAddress (base name: "smtp_address")', function() {
      // uncomment below and update the code to test the property smtpAddress
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property smtpAuthentication (base name: "smtp_authentication")', function() {
      // uncomment below and update the code to test the property smtpAuthentication
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property smtpFrom (base name: "smtp_from")', function() {
      // uncomment below and update the code to test the property smtpFrom
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property smtpPort (base name: "smtp_port")', function() {
      // uncomment below and update the code to test the property smtpPort
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property smtpUsername (base name: "smtp_username")', function() {
      // uncomment below and update the code to test the property smtpUsername
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property sslRequired (base name: "ssl_required")', function() {
      // uncomment below and update the code to test the property sslRequired
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property subdomain (base name: "subdomain")', function() {
      // uncomment below and update the code to test the property subdomain
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property switchToPlanDate (base name: "switch_to_plan_date")', function() {
      // uncomment below and update the code to test the property switchToPlanDate
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property tlsDisabled (base name: "tls_disabled")', function() {
      // uncomment below and update the code to test the property tlsDisabled
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property trialDaysLeft (base name: "trial_days_left")', function() {
      // uncomment below and update the code to test the property trialDaysLeft
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property trialUntil (base name: "trial_until")', function() {
      // uncomment below and update the code to test the property trialUntil
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property uploadsViaEmailAuthentication (base name: "uploads_via_email_authentication")', function() {
      // uncomment below and update the code to test the property uploadsViaEmailAuthentication
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property useProvidedModifiedAt (base name: "use_provided_modified_at")', function() {
      // uncomment below and update the code to test the property useProvidedModifiedAt
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property userLockout (base name: "user_lockout")', function() {
      // uncomment below and update the code to test the property userLockout
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property userLockoutLockPeriod (base name: "user_lockout_lock_period")', function() {
      // uncomment below and update the code to test the property userLockoutLockPeriod
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property userLockoutTries (base name: "user_lockout_tries")', function() {
      // uncomment below and update the code to test the property userLockoutTries
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property userLockoutWithin (base name: "user_lockout_within")', function() {
      // uncomment below and update the code to test the property userLockoutWithin
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property userRequestsEnabled (base name: "user_requests_enabled")', function() {
      // uncomment below and update the code to test the property userRequestsEnabled
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property userRequestsNotifyAdmins (base name: "user_requests_notify_admins")', function() {
      // uncomment below and update the code to test the property userRequestsNotifyAdmins
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property welcomeCustomText (base name: "welcome_custom_text")', function() {
      // uncomment below and update the code to test the property welcomeCustomText
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property welcomeEmailCc (base name: "welcome_email_cc")', function() {
      // uncomment below and update the code to test the property welcomeEmailCc
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property welcomeEmailEnabled (base name: "welcome_email_enabled")', function() {
      // uncomment below and update the code to test the property welcomeEmailEnabled
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property welcomeEmailSubject (base name: "welcome_email_subject")', function() {
      // uncomment below and update the code to test the property welcomeEmailSubject
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property welcomeScreen (base name: "welcome_screen")', function() {
      // uncomment below and update the code to test the property welcomeScreen
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

    it('should have the property windowsModeFtp (base name: "windows_mode_ftp")', function() {
      // uncomment below and update the code to test the property windowsModeFtp
      //var instance = new FilesComApi.SiteEntity();
      //expect(instance).to.be();
    });

  });

}));
