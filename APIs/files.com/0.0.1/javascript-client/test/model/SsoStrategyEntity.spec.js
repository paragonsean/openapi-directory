/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FilesComApi);
  }
}(this, function(expect, FilesComApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FilesComApi.SsoStrategyEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SsoStrategyEntity', function() {
    it('should create an instance of SsoStrategyEntity', function() {
      // uncomment below and update the code to test SsoStrategyEntity
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be.a(FilesComApi.SsoStrategyEntity);
    });

    it('should have the property deprovisionBehavior (base name: "deprovision_behavior")', function() {
      // uncomment below and update the code to test the property deprovisionBehavior
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property deprovisionGroups (base name: "deprovision_groups")', function() {
      // uncomment below and update the code to test the property deprovisionGroups
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property deprovisionUsers (base name: "deprovision_users")', function() {
      // uncomment below and update the code to test the property deprovisionUsers
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property label (base name: "label")', function() {
      // uncomment below and update the code to test the property label
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapBaseDn (base name: "ldap_base_dn")', function() {
      // uncomment below and update the code to test the property ldapBaseDn
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapDomain (base name: "ldap_domain")', function() {
      // uncomment below and update the code to test the property ldapDomain
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapHost (base name: "ldap_host")', function() {
      // uncomment below and update the code to test the property ldapHost
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapHost2 (base name: "ldap_host_2")', function() {
      // uncomment below and update the code to test the property ldapHost2
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapHost3 (base name: "ldap_host_3")', function() {
      // uncomment below and update the code to test the property ldapHost3
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapPort (base name: "ldap_port")', function() {
      // uncomment below and update the code to test the property ldapPort
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapSecure (base name: "ldap_secure")', function() {
      // uncomment below and update the code to test the property ldapSecure
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapUsername (base name: "ldap_username")', function() {
      // uncomment below and update the code to test the property ldapUsername
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property ldapUsernameField (base name: "ldap_username_field")', function() {
      // uncomment below and update the code to test the property ldapUsernameField
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property logoUrl (base name: "logo_url")', function() {
      // uncomment below and update the code to test the property logoUrl
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property protocol (base name: "protocol")', function() {
      // uncomment below and update the code to test the property protocol
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provider (base name: "provider")', function() {
      // uncomment below and update the code to test the property provider
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionAttachmentsPermission (base name: "provision_attachments_permission")', function() {
      // uncomment below and update the code to test the property provisionAttachmentsPermission
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionCompany (base name: "provision_company")', function() {
      // uncomment below and update the code to test the property provisionCompany
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionDavPermission (base name: "provision_dav_permission")', function() {
      // uncomment below and update the code to test the property provisionDavPermission
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionEmailSignupGroups (base name: "provision_email_signup_groups")', function() {
      // uncomment below and update the code to test the property provisionEmailSignupGroups
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionFtpPermission (base name: "provision_ftp_permission")', function() {
      // uncomment below and update the code to test the property provisionFtpPermission
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionGroupDefault (base name: "provision_group_default")', function() {
      // uncomment below and update the code to test the property provisionGroupDefault
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionGroupExclusion (base name: "provision_group_exclusion")', function() {
      // uncomment below and update the code to test the property provisionGroupExclusion
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionGroupInclusion (base name: "provision_group_inclusion")', function() {
      // uncomment below and update the code to test the property provisionGroupInclusion
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionGroupRequired (base name: "provision_group_required")', function() {
      // uncomment below and update the code to test the property provisionGroupRequired
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionGroups (base name: "provision_groups")', function() {
      // uncomment below and update the code to test the property provisionGroups
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionSftpPermission (base name: "provision_sftp_permission")', function() {
      // uncomment below and update the code to test the property provisionSftpPermission
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionSiteAdminGroups (base name: "provision_site_admin_groups")', function() {
      // uncomment below and update the code to test the property provisionSiteAdminGroups
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionTimeZone (base name: "provision_time_zone")', function() {
      // uncomment below and update the code to test the property provisionTimeZone
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property provisionUsers (base name: "provision_users")', function() {
      // uncomment below and update the code to test the property provisionUsers
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property samlProviderCertFingerprint (base name: "saml_provider_cert_fingerprint")', function() {
      // uncomment below and update the code to test the property samlProviderCertFingerprint
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property samlProviderIssuerUrl (base name: "saml_provider_issuer_url")', function() {
      // uncomment below and update the code to test the property samlProviderIssuerUrl
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property samlProviderMetadataContent (base name: "saml_provider_metadata_content")', function() {
      // uncomment below and update the code to test the property samlProviderMetadataContent
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property samlProviderMetadataUrl (base name: "saml_provider_metadata_url")', function() {
      // uncomment below and update the code to test the property samlProviderMetadataUrl
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property samlProviderSloTargetUrl (base name: "saml_provider_slo_target_url")', function() {
      // uncomment below and update the code to test the property samlProviderSloTargetUrl
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property samlProviderSsoTargetUrl (base name: "saml_provider_sso_target_url")', function() {
      // uncomment below and update the code to test the property samlProviderSsoTargetUrl
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property scimAuthenticationMethod (base name: "scim_authentication_method")', function() {
      // uncomment below and update the code to test the property scimAuthenticationMethod
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property scimOauthAccessToken (base name: "scim_oauth_access_token")', function() {
      // uncomment below and update the code to test the property scimOauthAccessToken
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property scimOauthAccessTokenExpiresAt (base name: "scim_oauth_access_token_expires_at")', function() {
      // uncomment below and update the code to test the property scimOauthAccessTokenExpiresAt
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property scimUsername (base name: "scim_username")', function() {
      // uncomment below and update the code to test the property scimUsername
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

    it('should have the property subdomain (base name: "subdomain")', function() {
      // uncomment below and update the code to test the property subdomain
      //var instance = new FilesComApi.SsoStrategyEntity();
      //expect(instance).to.be();
    });

  });

}));
