/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FilesComApi);
  }
}(this, function(expect, FilesComApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FilesComApi.GroupsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GroupsApi', function() {
    describe('deleteGroupsGroupIdMembershipsUserId', function() {
      it('should call deleteGroupsGroupIdMembershipsUserId successfully', function(done) {
        //uncomment below and update the code to test deleteGroupsGroupIdMembershipsUserId
        //instance.deleteGroupsGroupIdMembershipsUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGroupsId', function() {
      it('should call deleteGroupsId successfully', function(done) {
        //uncomment below and update the code to test deleteGroupsId
        //instance.deleteGroupsId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroups', function() {
      it('should call getGroups successfully', function(done) {
        //uncomment below and update the code to test getGroups
        //instance.getGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupsGroupIdPermissions', function() {
      it('should call getGroupsGroupIdPermissions successfully', function(done) {
        //uncomment below and update the code to test getGroupsGroupIdPermissions
        //instance.getGroupsGroupIdPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupsGroupIdUsers', function() {
      it('should call getGroupsGroupIdUsers successfully', function(done) {
        //uncomment below and update the code to test getGroupsGroupIdUsers
        //instance.getGroupsGroupIdUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupsId', function() {
      it('should call getGroupsId successfully', function(done) {
        //uncomment below and update the code to test getGroupsId
        //instance.getGroupsId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchGroupsGroupIdMembershipsUserId', function() {
      it('should call patchGroupsGroupIdMembershipsUserId successfully', function(done) {
        //uncomment below and update the code to test patchGroupsGroupIdMembershipsUserId
        //instance.patchGroupsGroupIdMembershipsUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchGroupsId', function() {
      it('should call patchGroupsId successfully', function(done) {
        //uncomment below and update the code to test patchGroupsId
        //instance.patchGroupsId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGroups', function() {
      it('should call postGroups successfully', function(done) {
        //uncomment below and update the code to test postGroups
        //instance.postGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postGroupsGroupIdUsers', function() {
      it('should call postGroupsGroupIdUsers successfully', function(done) {
        //uncomment below and update the code to test postGroupsGroupIdUsers
        //instance.postGroupsGroupIdUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
