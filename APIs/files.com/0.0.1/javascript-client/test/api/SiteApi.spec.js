/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FilesComApi);
  }
}(this, function(expect, FilesComApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FilesComApi.SiteApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SiteApi', function() {
    describe('getSite', function() {
      it('should call getSite successfully', function(done) {
        //uncomment below and update the code to test getSite
        //instance.getSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteApiKeys', function() {
      it('should call getSiteApiKeys successfully', function(done) {
        //uncomment below and update the code to test getSiteApiKeys
        //instance.getSiteApiKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteDnsRecords', function() {
      it('should call getSiteDnsRecords successfully', function(done) {
        //uncomment below and update the code to test getSiteDnsRecords
        //instance.getSiteDnsRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteIpAddresses', function() {
      it('should call getSiteIpAddresses successfully', function(done) {
        //uncomment below and update the code to test getSiteIpAddresses
        //instance.getSiteIpAddresses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteUsage', function() {
      it('should call getSiteUsage successfully', function(done) {
        //uncomment below and update the code to test getSiteUsage
        //instance.getSiteUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchSite', function() {
      it('should call patchSite successfully', function(done) {
        //uncomment below and update the code to test patchSite
        //instance.patchSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postSiteApiKeys', function() {
      it('should call postSiteApiKeys successfully', function(done) {
        //uncomment below and update the code to test postSiteApiKeys
        //instance.postSiteApiKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postSiteTestWebhook', function() {
      it('should call postSiteTestWebhook successfully', function(done) {
        //uncomment below and update the code to test postSiteTestWebhook
        //instance.postSiteTestWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
