/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ActionNotificationExportEntity from '../model/ActionNotificationExportEntity';

/**
* ActionNotificationExports service.
* @module api/ActionNotificationExportsApi
* @version 0.0.1
*/
export default class ActionNotificationExportsApi {

    /**
    * Constructs a new ActionNotificationExportsApi. 
    * @alias module:api/ActionNotificationExportsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getActionNotificationExportsId operation.
     * @callback module:api/ActionNotificationExportsApi~getActionNotificationExportsIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActionNotificationExportEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Show Action Notification Export
     * Show Action Notification Export
     * @param {Number} id Action Notification Export ID.
     * @param {module:api/ActionNotificationExportsApi~getActionNotificationExportsIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActionNotificationExportEntity}
     */
    getActionNotificationExportsId(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getActionNotificationExportsId");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActionNotificationExportEntity;
      return this.apiClient.callApi(
        '/action_notification_exports/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postActionNotificationExports operation.
     * @callback module:api/ActionNotificationExportsApi~postActionNotificationExportsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActionNotificationExportEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Action Notification Export
     * Create Action Notification Export
     * @param {Object} opts Optional parameters
     * @param {Date} [endAt] End date/time of export range.
     * @param {String} [queryFolder] Return notifications that were triggered by actions in this folder.
     * @param {String} [queryMessage] Error message associated with the request, if any.
     * @param {String} [queryPath] Return notifications that were triggered by actions on this specific path.
     * @param {String} [queryRequestMethod] The HTTP request method used by the webhook.
     * @param {String} [queryRequestUrl] The target webhook URL.
     * @param {String} [queryStatus] The HTTP status returned from the server in response to the webhook request.
     * @param {Boolean} [querySuccess] true if the webhook request succeeded (i.e. returned a 200 or 204 response status). false otherwise.
     * @param {Date} [startAt] Start date/time of export range.
     * @param {Number} [userId] User ID.  Provide a value of `0` to operate the current session's user.
     * @param {module:api/ActionNotificationExportsApi~postActionNotificationExportsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActionNotificationExportEntity}
     */
    postActionNotificationExports(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'end_at': opts['endAt'],
        'query_folder': opts['queryFolder'],
        'query_message': opts['queryMessage'],
        'query_path': opts['queryPath'],
        'query_request_method': opts['queryRequestMethod'],
        'query_request_url': opts['queryRequestUrl'],
        'query_status': opts['queryStatus'],
        'query_success': opts['querySuccess'],
        'start_at': opts['startAt'],
        'user_id': opts['userId']
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = ActionNotificationExportEntity;
      return this.apiClient.callApi(
        '/action_notification_exports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
