/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HistoryExportEntity from '../model/HistoryExportEntity';

/**
* HistoryExports service.
* @module api/HistoryExportsApi
* @version 0.0.1
*/
export default class HistoryExportsApi {

    /**
    * Constructs a new HistoryExportsApi. 
    * @alias module:api/HistoryExportsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getHistoryExportsId operation.
     * @callback module:api/HistoryExportsApi~getHistoryExportsIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HistoryExportEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Show History Export
     * Show History Export
     * @param {Number} id History Export ID.
     * @param {module:api/HistoryExportsApi~getHistoryExportsIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HistoryExportEntity}
     */
    getHistoryExportsId(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getHistoryExportsId");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = HistoryExportEntity;
      return this.apiClient.callApi(
        '/history_exports/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postHistoryExports operation.
     * @callback module:api/HistoryExportsApi~postHistoryExportsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HistoryExportEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create History Export
     * Create History Export
     * @param {Object} opts Optional parameters
     * @param {Date} [endAt] End date/time of export range.
     * @param {String} [queryAction] Filter results by this this action type. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`
     * @param {String} [queryDestination] Return results that are file moves with this path as destination.
     * @param {String} [queryFailureType] If searching for Histories about login failures, this parameter restricts results to failures of this specific type.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`
     * @param {String} [queryFileId] Return results that are file actions related to the file indicated by this File ID
     * @param {String} [queryFolder] Return results that are file actions related to files or folders inside this folder path.
     * @param {String} [queryInterface] Filter results by this this interface type. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`
     * @param {String} [queryIp] Filter results by this IP address.
     * @param {String} [queryParentId] Return results that are file actions inside the parent folder specified by this folder ID
     * @param {String} [queryPath] Return results that are file actions related to this path.
     * @param {String} [querySrc] Return results that are file moves originating from this path.
     * @param {String} [queryTargetId] If searching for Histories about specific objects (such as Users, or API Keys), this paremeter restricts results to objects that match this ID.
     * @param {String} [queryTargetName] If searching for Histories about Users, Groups or other objects with names, this parameter restricts results to objects with this name/username.
     * @param {String} [queryTargetPermission] If searching for Histories about Permisisons, this parameter restricts results to permissions of this level.
     * @param {String} [queryTargetPermissionSet] If searching for Histories about API keys, this parameter restricts results to API keys with this permission set.
     * @param {String} [queryTargetPlatform] If searching for Histories about API keys, this parameter restricts results to API keys associated with this platform.
     * @param {String} [queryTargetUserId] If searching for Histories about API keys, this parameter restricts results to API keys created by/for this user ID.
     * @param {String} [queryTargetUsername] If searching for Histories about API keys, this parameter restricts results to API keys created by/for this username.
     * @param {String} [queryUserId] Return results that are actions performed by the user indiciated by this User ID
     * @param {String} [queryUsername] Filter results by this username.
     * @param {Date} [startAt] Start date/time of export range.
     * @param {Number} [userId] User ID.  Provide a value of `0` to operate the current session's user.
     * @param {module:api/HistoryExportsApi~postHistoryExportsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HistoryExportEntity}
     */
    postHistoryExports(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'end_at': opts['endAt'],
        'query_action': opts['queryAction'],
        'query_destination': opts['queryDestination'],
        'query_failure_type': opts['queryFailureType'],
        'query_file_id': opts['queryFileId'],
        'query_folder': opts['queryFolder'],
        'query_interface': opts['queryInterface'],
        'query_ip': opts['queryIp'],
        'query_parent_id': opts['queryParentId'],
        'query_path': opts['queryPath'],
        'query_src': opts['querySrc'],
        'query_target_id': opts['queryTargetId'],
        'query_target_name': opts['queryTargetName'],
        'query_target_permission': opts['queryTargetPermission'],
        'query_target_permission_set': opts['queryTargetPermissionSet'],
        'query_target_platform': opts['queryTargetPlatform'],
        'query_target_user_id': opts['queryTargetUserId'],
        'query_target_username': opts['queryTargetUsername'],
        'query_user_id': opts['queryUserId'],
        'query_username': opts['queryUsername'],
        'start_at': opts['startAt'],
        'user_id': opts['userId']
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = HistoryExportEntity;
      return this.apiClient.callApi(
        '/history_exports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
