/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import WebhookTestEntity from '../model/WebhookTestEntity';

/**
* WebhookTests service.
* @module api/WebhookTestsApi
* @version 0.0.1
*/
export default class WebhookTestsApi {

    /**
    * Constructs a new WebhookTestsApi. 
    * @alias module:api/WebhookTestsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postWebhookTests operation.
     * @callback module:api/WebhookTestsApi~postWebhookTestsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebhookTestEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Webhook Test
     * Create Webhook Test
     * @param {String} url URL for testing the webhook.
     * @param {Object} opts Optional parameters
     * @param {String} [action] action for test body
     * @param {Object.<String, Object>} [body] Additional body parameters.
     * @param {String} [encoding] HTTP encoding method.  Can be JSON, XML, or RAW (form data).
     * @param {Boolean} [fileAsBody] Send the file data as the request body?
     * @param {String} [fileFormField] Send the file data as a named parameter in the request POST body
     * @param {Object.<String, Object>} [headers] Additional request headers.
     * @param {String} [method] HTTP method(GET or POST).
     * @param {String} [rawBody] raw body text
     * @param {module:api/WebhookTestsApi~postWebhookTestsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebhookTestEntity}
     */
    postWebhookTests(url, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'url' is set
      if (url === undefined || url === null) {
        throw new Error("Missing the required parameter 'url' when calling postWebhookTests");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'action': opts['action'],
        'body': opts['body'],
        'encoding': opts['encoding'],
        'file_as_body': opts['fileAsBody'],
        'file_form_field': opts['fileFormField'],
        'headers': opts['headers'],
        'method': opts['method'],
        'raw_body': opts['rawBody'],
        'url': url
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = WebhookTestEntity;
      return this.apiClient.callApi(
        '/webhook_tests', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
