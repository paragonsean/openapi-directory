/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiKeyEntity from '../model/ApiKeyEntity';

/**
* ApiKey service.
* @module api/ApiKeyApi
* @version 0.0.1
*/
export default class ApiKeyApi {

    /**
    * Constructs a new ApiKeyApi. 
    * @alias module:api/ApiKeyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiKeyDeleteCurrent operation.
     * @callback module:api/ApiKeyApi~apiKeyDeleteCurrentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete current API key.  (Requires current API connection to be using an API key.)
     * Delete current API key.  (Requires current API connection to be using an API key.)
     * @param {module:api/ApiKeyApi~apiKeyDeleteCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiKeyDeleteCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api_key', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiKeyFindCurrent operation.
     * @callback module:api/ApiKeyApi~apiKeyFindCurrentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiKeyEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Show information about current API key.  (Requires current API connection to be using an API key.)
     * Show information about current API key.  (Requires current API connection to be using an API key.)
     * @param {module:api/ApiKeyApi~apiKeyFindCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiKeyEntity}
     */
    apiKeyFindCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiKeyEntity;
      return this.apiClient.callApi(
        '/api_key', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiKeyUpdateCurrent operation.
     * @callback module:api/ApiKeyApi~apiKeyUpdateCurrentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiKeyEntity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update current API key.  (Requires current API connection to be using an API key.)
     * Update current API key.  (Requires current API connection to be using an API key.)
     * @param {Object} opts Optional parameters
     * @param {Date} [expiresAt] API Key expiration date
     * @param {String} [name] Internal name for the API Key.  For your use.
     * @param {module:model/String} [permissionSet] Permissions for this API Key.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations).  Additional permission sets may become available in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know.
     * @param {module:api/ApiKeyApi~apiKeyUpdateCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiKeyEntity}
     */
    apiKeyUpdateCurrent(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'expires_at': opts['expiresAt'],
        'name': opts['name'],
        'permission_set': opts['permissionSet']
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = ApiKeyEntity;
      return this.apiClient.callApi(
        '/api_key', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
