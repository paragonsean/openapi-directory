/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BundleRecipientEntity model module.
 * @module model/BundleRecipientEntity
 * @version 0.0.1
 */
class BundleRecipientEntity {
    /**
     * Constructs a new <code>BundleRecipientEntity</code>.
     * List Bundle Recipients
     * @alias module:model/BundleRecipientEntity
     */
    constructor() { 
        
        BundleRecipientEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BundleRecipientEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BundleRecipientEntity} obj Optional instance to populate.
     * @return {module:model/BundleRecipientEntity} The populated <code>BundleRecipientEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BundleRecipientEntity();

            if (data.hasOwnProperty('company')) {
                obj['company'] = ApiClient.convertToType(data['company'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('recipient')) {
                obj['recipient'] = ApiClient.convertToType(data['recipient'], 'String');
            }
            if (data.hasOwnProperty('sent_at')) {
                obj['sent_at'] = ApiClient.convertToType(data['sent_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BundleRecipientEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BundleRecipientEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['company'] && !(typeof data['company'] === 'string' || data['company'] instanceof String)) {
            throw new Error("Expected the field `company` to be a primitive type in the JSON string but got " + data['company']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['note'] && !(typeof data['note'] === 'string' || data['note'] instanceof String)) {
            throw new Error("Expected the field `note` to be a primitive type in the JSON string but got " + data['note']);
        }
        // ensure the json data is a string
        if (data['recipient'] && !(typeof data['recipient'] === 'string' || data['recipient'] instanceof String)) {
            throw new Error("Expected the field `recipient` to be a primitive type in the JSON string but got " + data['recipient']);
        }

        return true;
    }


}



/**
 * The recipient's company.
 * @member {String} company
 */
BundleRecipientEntity.prototype['company'] = undefined;

/**
 * The recipient's name.
 * @member {String} name
 */
BundleRecipientEntity.prototype['name'] = undefined;

/**
 * A note sent to the recipient with the bundle.
 * @member {String} note
 */
BundleRecipientEntity.prototype['note'] = undefined;

/**
 * The recipient's email address.
 * @member {String} recipient
 */
BundleRecipientEntity.prototype['recipient'] = undefined;

/**
 * When the Bundle was shared with this recipient.
 * @member {Date} sent_at
 */
BundleRecipientEntity.prototype['sent_at'] = undefined;






export default BundleRecipientEntity;

