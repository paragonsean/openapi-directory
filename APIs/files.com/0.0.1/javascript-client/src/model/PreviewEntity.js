/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PreviewEntity model module.
 * @module model/PreviewEntity
 * @version 0.0.1
 */
class PreviewEntity {
    /**
     * Constructs a new <code>PreviewEntity</code>.
     * @alias module:model/PreviewEntity
     */
    constructor() { 
        
        PreviewEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PreviewEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PreviewEntity} obj Optional instance to populate.
     * @return {module:model/PreviewEntity} The populated <code>PreviewEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PreviewEntity();

            if (data.hasOwnProperty('download_uri')) {
                obj['download_uri'] = ApiClient.convertToType(data['download_uri'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PreviewEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PreviewEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['download_uri'] && !(typeof data['download_uri'] === 'string' || data['download_uri'] instanceof String)) {
            throw new Error("Expected the field `download_uri` to be a primitive type in the JSON string but got " + data['download_uri']);
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Link to download preview
 * @member {String} download_uri
 */
PreviewEntity.prototype['download_uri'] = undefined;

/**
 * Preview ID
 * @member {Number} id
 */
PreviewEntity.prototype['id'] = undefined;

/**
 * Preview size
 * @member {String} size
 */
PreviewEntity.prototype['size'] = undefined;

/**
 * Preview status.  Can be invalid, not_generated, generating, complete, or file_too_large
 * @member {String} status
 */
PreviewEntity.prototype['status'] = undefined;

/**
 * Preview type. Can be image, pdf, pdf_native, video, or audio
 * @member {String} type
 */
PreviewEntity.prototype['type'] = undefined;






export default PreviewEntity;

