/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AutomationEntity model module.
 * @module model/AutomationEntity
 * @version 0.0.1
 */
class AutomationEntity {
    /**
     * Constructs a new <code>AutomationEntity</code>.
     * List Automations
     * @alias module:model/AutomationEntity
     */
    constructor() { 
        
        AutomationEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutomationEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutomationEntity} obj Optional instance to populate.
     * @return {module:model/AutomationEntity} The populated <code>AutomationEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutomationEntity();

            if (data.hasOwnProperty('automation')) {
                obj['automation'] = ApiClient.convertToType(data['automation'], 'String');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('destination_replace_from')) {
                obj['destination_replace_from'] = ApiClient.convertToType(data['destination_replace_from'], 'String');
            }
            if (data.hasOwnProperty('destination_replace_to')) {
                obj['destination_replace_to'] = ApiClient.convertToType(data['destination_replace_to'], 'String');
            }
            if (data.hasOwnProperty('destinations')) {
                obj['destinations'] = ApiClient.convertToType(data['destinations'], ['String']);
            }
            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('group_ids')) {
                obj['group_ids'] = ApiClient.convertToType(data['group_ids'], ['Number']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ApiClient.convertToType(data['interval'], 'String');
            }
            if (data.hasOwnProperty('last_modified_at')) {
                obj['last_modified_at'] = ApiClient.convertToType(data['last_modified_at'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('recurring_day')) {
                obj['recurring_day'] = ApiClient.convertToType(data['recurring_day'], 'Number');
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = ApiClient.convertToType(data['schedule'], Object);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('sync_ids')) {
                obj['sync_ids'] = ApiClient.convertToType(data['sync_ids'], ['Number']);
            }
            if (data.hasOwnProperty('trigger')) {
                obj['trigger'] = ApiClient.convertToType(data['trigger'], 'String');
            }
            if (data.hasOwnProperty('trigger_actions')) {
                obj['trigger_actions'] = ApiClient.convertToType(data['trigger_actions'], ['String']);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('user_ids')) {
                obj['user_ids'] = ApiClient.convertToType(data['user_ids'], ['Number']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
            if (data.hasOwnProperty('webhook_url')) {
                obj['webhook_url'] = ApiClient.convertToType(data['webhook_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutomationEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutomationEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['automation'] && !(typeof data['automation'] === 'string' || data['automation'] instanceof String)) {
            throw new Error("Expected the field `automation` to be a primitive type in the JSON string but got " + data['automation']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['destination_replace_from'] && !(typeof data['destination_replace_from'] === 'string' || data['destination_replace_from'] instanceof String)) {
            throw new Error("Expected the field `destination_replace_from` to be a primitive type in the JSON string but got " + data['destination_replace_from']);
        }
        // ensure the json data is a string
        if (data['destination_replace_to'] && !(typeof data['destination_replace_to'] === 'string' || data['destination_replace_to'] instanceof String)) {
            throw new Error("Expected the field `destination_replace_to` to be a primitive type in the JSON string but got " + data['destination_replace_to']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['destinations'])) {
            throw new Error("Expected the field `destinations` to be an array in the JSON data but got " + data['destinations']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['group_ids'])) {
            throw new Error("Expected the field `group_ids` to be an array in the JSON data but got " + data['group_ids']);
        }
        // ensure the json data is a string
        if (data['interval'] && !(typeof data['interval'] === 'string' || data['interval'] instanceof String)) {
            throw new Error("Expected the field `interval` to be a primitive type in the JSON string but got " + data['interval']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sync_ids'])) {
            throw new Error("Expected the field `sync_ids` to be an array in the JSON data but got " + data['sync_ids']);
        }
        // ensure the json data is a string
        if (data['trigger'] && !(typeof data['trigger'] === 'string' || data['trigger'] instanceof String)) {
            throw new Error("Expected the field `trigger` to be a primitive type in the JSON string but got " + data['trigger']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['trigger_actions'])) {
            throw new Error("Expected the field `trigger_actions` to be an array in the JSON data but got " + data['trigger_actions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['user_ids'])) {
            throw new Error("Expected the field `user_ids` to be an array in the JSON data but got " + data['user_ids']);
        }
        // ensure the json data is a string
        if (data['webhook_url'] && !(typeof data['webhook_url'] === 'string' || data['webhook_url'] instanceof String)) {
            throw new Error("Expected the field `webhook_url` to be a primitive type in the JSON string but got " + data['webhook_url']);
        }

        return true;
    }


}



/**
 * Automation type
 * @member {module:model/AutomationEntity.AutomationEnum} automation
 */
AutomationEntity.prototype['automation'] = undefined;

/**
 * Indicates if the automation has been deleted.
 * @member {Boolean} deleted
 */
AutomationEntity.prototype['deleted'] = undefined;

/**
 * Description for the this Automation.
 * @member {String} description
 */
AutomationEntity.prototype['description'] = undefined;

/**
 * If set, this string in the destination path will be replaced with the value in `destination_replace_to`.
 * @member {String} destination_replace_from
 */
AutomationEntity.prototype['destination_replace_from'] = undefined;

/**
 * If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here.
 * @member {String} destination_replace_to
 */
AutomationEntity.prototype['destination_replace_to'] = undefined;

/**
 * Destination Path
 * @member {Array.<String>} destinations
 */
AutomationEntity.prototype['destinations'] = undefined;

/**
 * If true, this automation will not run.
 * @member {Boolean} disabled
 */
AutomationEntity.prototype['disabled'] = undefined;

/**
 * IDs of Groups for the Automation (i.e. who to Request File from)
 * @member {Array.<Number>} group_ids
 */
AutomationEntity.prototype['group_ids'] = undefined;

/**
 * Automation ID
 * @member {Number} id
 */
AutomationEntity.prototype['id'] = undefined;

/**
 * If trigger is `daily`, this specifies how often to run this automation.  One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`
 * @member {String} interval
 */
AutomationEntity.prototype['interval'] = undefined;

/**
 * Time when automation was last modified. Does not change for name or description updates.
 * @member {Date} last_modified_at
 */
AutomationEntity.prototype['last_modified_at'] = undefined;

/**
 * Name for this automation.
 * @member {String} name
 */
AutomationEntity.prototype['name'] = undefined;

/**
 * Path on which this Automation runs.  Supports globs.
 * @member {String} path
 */
AutomationEntity.prototype['path'] = undefined;

/**
 * If trigger type is `daily`, this specifies a day number to run in one of the supported intervals: `week`, `month`, `quarter`, `year`.
 * @member {Number} recurring_day
 */
AutomationEntity.prototype['recurring_day'] = undefined;

/**
 * If trigger is `custom_schedule`, Custom schedule description for when the automation should be run.
 * @member {Object} schedule
 */
AutomationEntity.prototype['schedule'] = undefined;

/**
 * Source Path
 * @member {String} source
 */
AutomationEntity.prototype['source'] = undefined;

/**
 * IDs of remote sync folder behaviors to run by this Automation
 * @member {Array.<Number>} sync_ids
 */
AutomationEntity.prototype['sync_ids'] = undefined;

/**
 * How this automation is triggered to run. One of: `realtime`, `daily`, `custom_schedule`, `webhook`, `email`, or `action`.
 * @member {module:model/AutomationEntity.TriggerEnum} trigger
 */
AutomationEntity.prototype['trigger'] = undefined;

/**
 * If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy
 * @member {Array.<String>} trigger_actions
 */
AutomationEntity.prototype['trigger_actions'] = undefined;

/**
 * User ID of the Automation's creator.
 * @member {Number} user_id
 */
AutomationEntity.prototype['user_id'] = undefined;

/**
 * IDs of Users for the Automation (i.e. who to Request File from)
 * @member {Array.<Number>} user_ids
 */
AutomationEntity.prototype['user_ids'] = undefined;

/**
 * A Hash of attributes specific to the automation type.
 * @member {Object} value
 */
AutomationEntity.prototype['value'] = undefined;

/**
 * If trigger is `webhook`, this is the URL of the webhook to trigger the Automation.
 * @member {String} webhook_url
 */
AutomationEntity.prototype['webhook_url'] = undefined;





/**
 * Allowed values for the <code>automation</code> property.
 * @enum {String}
 * @readonly
 */
AutomationEntity['AutomationEnum'] = {

    /**
     * value: "create_folder"
     * @const
     */
    "create_folder": "create_folder",

    /**
     * value: "request_file"
     * @const
     */
    "request_file": "request_file",

    /**
     * value: "request_move"
     * @const
     */
    "request_move": "request_move",

    /**
     * value: "copy_newest_file"
     * @const
     */
    "copy_newest_file": "copy_newest_file",

    /**
     * value: "delete_file"
     * @const
     */
    "delete_file": "delete_file",

    /**
     * value: "copy_file"
     * @const
     */
    "copy_file": "copy_file",

    /**
     * value: "move_file"
     * @const
     */
    "move_file": "move_file",

    /**
     * value: "as2_send"
     * @const
     */
    "as2_send": "as2_send",

    /**
     * value: "run_sync"
     * @const
     */
    "run_sync": "run_sync"
};


/**
 * Allowed values for the <code>trigger</code> property.
 * @enum {String}
 * @readonly
 */
AutomationEntity['TriggerEnum'] = {

    /**
     * value: "realtime"
     * @const
     */
    "realtime": "realtime",

    /**
     * value: "daily"
     * @const
     */
    "daily": "daily",

    /**
     * value: "custom_schedule"
     * @const
     */
    "custom_schedule": "custom_schedule",

    /**
     * value: "webhook"
     * @const
     */
    "webhook": "webhook",

    /**
     * value: "email"
     * @const
     */
    "email": "email",

    /**
     * value: "action"
     * @const
     */
    "action": "action"
};



export default AutomationEntity;

