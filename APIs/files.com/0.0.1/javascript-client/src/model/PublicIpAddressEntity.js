/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PublicIpAddressEntity model module.
 * @module model/PublicIpAddressEntity
 * @version 0.0.1
 */
class PublicIpAddressEntity {
    /**
     * Constructs a new <code>PublicIpAddressEntity</code>.
     * List all possible public IP addresses
     * @alias module:model/PublicIpAddressEntity
     */
    constructor() { 
        
        PublicIpAddressEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PublicIpAddressEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublicIpAddressEntity} obj Optional instance to populate.
     * @return {module:model/PublicIpAddressEntity} The populated <code>PublicIpAddressEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublicIpAddressEntity();

            if (data.hasOwnProperty('ftp_enabled')) {
                obj['ftp_enabled'] = ApiClient.convertToType(data['ftp_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('ip_address')) {
                obj['ip_address'] = ApiClient.convertToType(data['ip_address'], 'String');
            }
            if (data.hasOwnProperty('server_name')) {
                obj['server_name'] = ApiClient.convertToType(data['server_name'], 'String');
            }
            if (data.hasOwnProperty('sftp_enabled')) {
                obj['sftp_enabled'] = ApiClient.convertToType(data['sftp_enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublicIpAddressEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublicIpAddressEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ip_address'] && !(typeof data['ip_address'] === 'string' || data['ip_address'] instanceof String)) {
            throw new Error("Expected the field `ip_address` to be a primitive type in the JSON string but got " + data['ip_address']);
        }
        // ensure the json data is a string
        if (data['server_name'] && !(typeof data['server_name'] === 'string' || data['server_name'] instanceof String)) {
            throw new Error("Expected the field `server_name` to be a primitive type in the JSON string but got " + data['server_name']);
        }

        return true;
    }


}



/**
 * @member {Boolean} ftp_enabled
 */
PublicIpAddressEntity.prototype['ftp_enabled'] = undefined;

/**
 * The public IP address.
 * @member {String} ip_address
 */
PublicIpAddressEntity.prototype['ip_address'] = undefined;

/**
 * The name of the frontend server.
 * @member {String} server_name
 */
PublicIpAddressEntity.prototype['server_name'] = undefined;

/**
 * @member {Boolean} sftp_enabled
 */
PublicIpAddressEntity.prototype['sftp_enabled'] = undefined;






export default PublicIpAddressEntity;

