/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RequestEntity model module.
 * @module model/RequestEntity
 * @version 0.0.1
 */
class RequestEntity {
    /**
     * Constructs a new <code>RequestEntity</code>.
     * List Requests
     * @alias module:model/RequestEntity
     */
    constructor() { 
        
        RequestEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RequestEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestEntity} obj Optional instance to populate.
     * @return {module:model/RequestEntity} The populated <code>RequestEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestEntity();

            if (data.hasOwnProperty('automation_id')) {
                obj['automation_id'] = ApiClient.convertToType(data['automation_id'], 'String');
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('user_display_name')) {
                obj['user_display_name'] = ApiClient.convertToType(data['user_display_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RequestEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RequestEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['automation_id'] && !(typeof data['automation_id'] === 'string' || data['automation_id'] instanceof String)) {
            throw new Error("Expected the field `automation_id` to be a primitive type in the JSON string but got " + data['automation_id']);
        }
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['user_display_name'] && !(typeof data['user_display_name'] === 'string' || data['user_display_name'] instanceof String)) {
            throw new Error("Expected the field `user_display_name` to be a primitive type in the JSON string but got " + data['user_display_name']);
        }

        return true;
    }


}



/**
 * ID of automation that created request
 * @member {String} automation_id
 */
RequestEntity.prototype['automation_id'] = undefined;

/**
 * Destination filename
 * @member {String} destination
 */
RequestEntity.prototype['destination'] = undefined;

/**
 * Request ID
 * @member {Number} id
 */
RequestEntity.prototype['id'] = undefined;

/**
 * Folder path
 * @member {String} path
 */
RequestEntity.prototype['path'] = undefined;

/**
 * Source filename, if applicable
 * @member {String} source
 */
RequestEntity.prototype['source'] = undefined;

/**
 * User making the request (if applicable)
 * @member {String} user_display_name
 */
RequestEntity.prototype['user_display_name'] = undefined;






export default RequestEntity;

