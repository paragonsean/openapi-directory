/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiKeyEntity model module.
 * @module model/ApiKeyEntity
 * @version 0.0.1
 */
class ApiKeyEntity {
    /**
     * Constructs a new <code>ApiKeyEntity</code>.
     * List Api Keys
     * @alias module:model/ApiKeyEntity
     */
    constructor() { 
        
        ApiKeyEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiKeyEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiKeyEntity} obj Optional instance to populate.
     * @return {module:model/ApiKeyEntity} The populated <code>ApiKeyEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiKeyEntity();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('descriptive_label')) {
                obj['descriptive_label'] = ApiClient.convertToType(data['descriptive_label'], 'String');
            }
            if (data.hasOwnProperty('expires_at')) {
                obj['expires_at'] = ApiClient.convertToType(data['expires_at'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('last_use_at')) {
                obj['last_use_at'] = ApiClient.convertToType(data['last_use_at'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('permission_set')) {
                obj['permission_set'] = ApiClient.convertToType(data['permission_set'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiKeyEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiKeyEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['descriptive_label'] && !(typeof data['descriptive_label'] === 'string' || data['descriptive_label'] instanceof String)) {
            throw new Error("Expected the field `descriptive_label` to be a primitive type in the JSON string but got " + data['descriptive_label']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['permission_set'] && !(typeof data['permission_set'] === 'string' || data['permission_set'] instanceof String)) {
            throw new Error("Expected the field `permission_set` to be a primitive type in the JSON string but got " + data['permission_set']);
        }
        // ensure the json data is a string
        if (data['platform'] && !(typeof data['platform'] === 'string' || data['platform'] instanceof String)) {
            throw new Error("Expected the field `platform` to be a primitive type in the JSON string but got " + data['platform']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Time which API Key was created
 * @member {Date} created_at
 */
ApiKeyEntity.prototype['created_at'] = undefined;

/**
 * User-supplied description of API key.
 * @member {String} description
 */
ApiKeyEntity.prototype['description'] = undefined;

/**
 * Unique label that describes this API key.  Useful for external systems where you may have API keys from multiple accounts and want a human-readable label for each key.
 * @member {String} descriptive_label
 */
ApiKeyEntity.prototype['descriptive_label'] = undefined;

/**
 * API Key expiration date
 * @member {Date} expires_at
 */
ApiKeyEntity.prototype['expires_at'] = undefined;

/**
 * API Key ID
 * @member {Number} id
 */
ApiKeyEntity.prototype['id'] = undefined;

/**
 * API Key actual key string
 * @member {String} key
 */
ApiKeyEntity.prototype['key'] = undefined;

/**
 * API Key last used - note this value is only updated once per 3 hour period, so the 'actual' time of last use may be up to 3 hours later than this timestamp.
 * @member {Date} last_use_at
 */
ApiKeyEntity.prototype['last_use_at'] = undefined;

/**
 * Internal name for the API Key.  For your use.
 * @member {String} name
 */
ApiKeyEntity.prototype['name'] = undefined;

/**
 * Folder path restriction for this api key.
 * @member {String} path
 */
ApiKeyEntity.prototype['path'] = undefined;

/**
 * Permissions for this API Key.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations).  Additional permission sets may become available in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know.
 * @member {module:model/ApiKeyEntity.PermissionSetEnum} permission_set
 */
ApiKeyEntity.prototype['permission_set'] = undefined;

/**
 * If this API key represents a Desktop app, what platform was it created on?
 * @member {String} platform
 */
ApiKeyEntity.prototype['platform'] = undefined;

/**
 * URL for API host.
 * @member {String} url
 */
ApiKeyEntity.prototype['url'] = undefined;

/**
 * User ID for the owner of this API Key.  May be blank for Site-wide API Keys.
 * @member {Number} user_id
 */
ApiKeyEntity.prototype['user_id'] = undefined;





/**
 * Allowed values for the <code>permission_set</code> property.
 * @enum {String}
 * @readonly
 */
ApiKeyEntity['PermissionSetEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "full"
     * @const
     */
    "full": "full",

    /**
     * value: "desktop_app"
     * @const
     */
    "desktop_app": "desktop_app",

    /**
     * value: "sync_app"
     * @const
     */
    "sync_app": "sync_app",

    /**
     * value: "office_integration"
     * @const
     */
    "office_integration": "office_integration",

    /**
     * value: "mobile_app"
     * @const
     */
    "mobile_app": "mobile_app"
};



export default ApiKeyEntity;

