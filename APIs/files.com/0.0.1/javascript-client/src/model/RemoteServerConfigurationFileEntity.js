/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RemoteServerConfigurationFileEntity model module.
 * @module model/RemoteServerConfigurationFileEntity
 * @version 0.0.1
 */
class RemoteServerConfigurationFileEntity {
    /**
     * Constructs a new <code>RemoteServerConfigurationFileEntity</code>.
     * Download configuration file (required for some Remote Server integrations, such as the Files.com Agent)
     * @alias module:model/RemoteServerConfigurationFileEntity
     */
    constructor() { 
        
        RemoteServerConfigurationFileEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RemoteServerConfigurationFileEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoteServerConfigurationFileEntity} obj Optional instance to populate.
     * @return {module:model/RemoteServerConfigurationFileEntity} The populated <code>RemoteServerConfigurationFileEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoteServerConfigurationFileEntity();

            if (data.hasOwnProperty('api_token')) {
                obj['api_token'] = ApiClient.convertToType(data['api_token'], 'String');
            }
            if (data.hasOwnProperty('config_version')) {
                obj['config_version'] = ApiClient.convertToType(data['config_version'], 'String');
            }
            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('permission_set')) {
                obj['permission_set'] = ApiClient.convertToType(data['permission_set'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('private_key')) {
                obj['private_key'] = ApiClient.convertToType(data['private_key'], 'String');
            }
            if (data.hasOwnProperty('public_key')) {
                obj['public_key'] = ApiClient.convertToType(data['public_key'], 'String');
            }
            if (data.hasOwnProperty('root')) {
                obj['root'] = ApiClient.convertToType(data['root'], 'String');
            }
            if (data.hasOwnProperty('server_host_key')) {
                obj['server_host_key'] = ApiClient.convertToType(data['server_host_key'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('subdomain')) {
                obj['subdomain'] = ApiClient.convertToType(data['subdomain'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoteServerConfigurationFileEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoteServerConfigurationFileEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['api_token'] && !(typeof data['api_token'] === 'string' || data['api_token'] instanceof String)) {
            throw new Error("Expected the field `api_token` to be a primitive type in the JSON string but got " + data['api_token']);
        }
        // ensure the json data is a string
        if (data['config_version'] && !(typeof data['config_version'] === 'string' || data['config_version'] instanceof String)) {
            throw new Error("Expected the field `config_version` to be a primitive type in the JSON string but got " + data['config_version']);
        }
        // ensure the json data is a string
        if (data['hostname'] && !(typeof data['hostname'] === 'string' || data['hostname'] instanceof String)) {
            throw new Error("Expected the field `hostname` to be a primitive type in the JSON string but got " + data['hostname']);
        }
        // ensure the json data is a string
        if (data['permission_set'] && !(typeof data['permission_set'] === 'string' || data['permission_set'] instanceof String)) {
            throw new Error("Expected the field `permission_set` to be a primitive type in the JSON string but got " + data['permission_set']);
        }
        // ensure the json data is a string
        if (data['private_key'] && !(typeof data['private_key'] === 'string' || data['private_key'] instanceof String)) {
            throw new Error("Expected the field `private_key` to be a primitive type in the JSON string but got " + data['private_key']);
        }
        // ensure the json data is a string
        if (data['public_key'] && !(typeof data['public_key'] === 'string' || data['public_key'] instanceof String)) {
            throw new Error("Expected the field `public_key` to be a primitive type in the JSON string but got " + data['public_key']);
        }
        // ensure the json data is a string
        if (data['root'] && !(typeof data['root'] === 'string' || data['root'] instanceof String)) {
            throw new Error("Expected the field `root` to be a primitive type in the JSON string but got " + data['root']);
        }
        // ensure the json data is a string
        if (data['server_host_key'] && !(typeof data['server_host_key'] === 'string' || data['server_host_key'] instanceof String)) {
            throw new Error("Expected the field `server_host_key` to be a primitive type in the JSON string but got " + data['server_host_key']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['subdomain'] && !(typeof data['subdomain'] === 'string' || data['subdomain'] instanceof String)) {
            throw new Error("Expected the field `subdomain` to be a primitive type in the JSON string but got " + data['subdomain']);
        }

        return true;
    }


}



/**
 * Files Agent API Token
 * @member {String} api_token
 */
RemoteServerConfigurationFileEntity.prototype['api_token'] = undefined;

/**
 * agent config version
 * @member {String} config_version
 */
RemoteServerConfigurationFileEntity.prototype['config_version'] = undefined;

/**
 * @member {String} hostname
 */
RemoteServerConfigurationFileEntity.prototype['hostname'] = undefined;

/**
 * Agent ID
 * @member {Number} id
 */
RemoteServerConfigurationFileEntity.prototype['id'] = undefined;

/**
 * 
 * @member {String} permission_set
 */
RemoteServerConfigurationFileEntity.prototype['permission_set'] = undefined;

/**
 * Incoming port for files agent connections
 * @member {Number} port
 */
RemoteServerConfigurationFileEntity.prototype['port'] = undefined;

/**
 * private key
 * @member {String} private_key
 */
RemoteServerConfigurationFileEntity.prototype['private_key'] = undefined;

/**
 * public key
 * @member {String} public_key
 */
RemoteServerConfigurationFileEntity.prototype['public_key'] = undefined;

/**
 * Agent local root path
 * @member {String} root
 */
RemoteServerConfigurationFileEntity.prototype['root'] = undefined;

/**
 * @member {String} server_host_key
 */
RemoteServerConfigurationFileEntity.prototype['server_host_key'] = undefined;

/**
 * either running or shutdown
 * @member {String} status
 */
RemoteServerConfigurationFileEntity.prototype['status'] = undefined;

/**
 * @member {String} subdomain
 */
RemoteServerConfigurationFileEntity.prototype['subdomain'] = undefined;






export default RemoteServerConfigurationFileEntity;

