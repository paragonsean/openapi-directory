/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SessionEntity model module.
 * @module model/SessionEntity
 * @version 0.0.1
 */
class SessionEntity {
    /**
     * Constructs a new <code>SessionEntity</code>.
     * Create user session (log in)
     * @alias module:model/SessionEntity
     */
    constructor() { 
        
        SessionEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SessionEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SessionEntity} obj Optional instance to populate.
     * @return {module:model/SessionEntity} The populated <code>SessionEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SessionEntity();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('read_only')) {
                obj['read_only'] = ApiClient.convertToType(data['read_only'], 'Boolean');
            }
            if (data.hasOwnProperty('sftp_insecure_ciphers')) {
                obj['sftp_insecure_ciphers'] = ApiClient.convertToType(data['sftp_insecure_ciphers'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SessionEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SessionEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }

        return true;
    }


}



/**
 * Session ID
 * @member {String} id
 */
SessionEntity.prototype['id'] = undefined;

/**
 * Session language
 * @member {String} language
 */
SessionEntity.prototype['language'] = undefined;

/**
 * Is this session read only?
 * @member {Boolean} read_only
 */
SessionEntity.prototype['read_only'] = undefined;

/**
 * Are insecure SFTP ciphers allowed for this user? (If this is set to true, the site administrator has signaled that it is ok to use less secure SSH ciphers for this user.)
 * @member {Boolean} sftp_insecure_ciphers
 */
SessionEntity.prototype['sftp_insecure_ciphers'] = undefined;






export default SessionEntity;

