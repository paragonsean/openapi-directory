/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InboxRegistrationEntity model module.
 * @module model/InboxRegistrationEntity
 * @version 0.0.1
 */
class InboxRegistrationEntity {
    /**
     * Constructs a new <code>InboxRegistrationEntity</code>.
     * List Inbox Registrations
     * @alias module:model/InboxRegistrationEntity
     */
    constructor() { 
        
        InboxRegistrationEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InboxRegistrationEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InboxRegistrationEntity} obj Optional instance to populate.
     * @return {module:model/InboxRegistrationEntity} The populated <code>InboxRegistrationEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InboxRegistrationEntity();

            if (data.hasOwnProperty('clickwrap_body')) {
                obj['clickwrap_body'] = ApiClient.convertToType(data['clickwrap_body'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = ApiClient.convertToType(data['company'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('form_field_data')) {
                obj['form_field_data'] = ApiClient.convertToType(data['form_field_data'], Object);
            }
            if (data.hasOwnProperty('form_field_set_id')) {
                obj['form_field_set_id'] = ApiClient.convertToType(data['form_field_set_id'], 'Number');
            }
            if (data.hasOwnProperty('inbox_id')) {
                obj['inbox_id'] = ApiClient.convertToType(data['inbox_id'], 'Number');
            }
            if (data.hasOwnProperty('inbox_recipient_id')) {
                obj['inbox_recipient_id'] = ApiClient.convertToType(data['inbox_recipient_id'], 'Number');
            }
            if (data.hasOwnProperty('inbox_title')) {
                obj['inbox_title'] = ApiClient.convertToType(data['inbox_title'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InboxRegistrationEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InboxRegistrationEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clickwrap_body'] && !(typeof data['clickwrap_body'] === 'string' || data['clickwrap_body'] instanceof String)) {
            throw new Error("Expected the field `clickwrap_body` to be a primitive type in the JSON string but got " + data['clickwrap_body']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['company'] && !(typeof data['company'] === 'string' || data['company'] instanceof String)) {
            throw new Error("Expected the field `company` to be a primitive type in the JSON string but got " + data['company']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['inbox_title'] && !(typeof data['inbox_title'] === 'string' || data['inbox_title'] instanceof String)) {
            throw new Error("Expected the field `inbox_title` to be a primitive type in the JSON string but got " + data['inbox_title']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Clickwrap text that was shown to the registrant
 * @member {String} clickwrap_body
 */
InboxRegistrationEntity.prototype['clickwrap_body'] = undefined;

/**
 * Registration cookie code
 * @member {String} code
 */
InboxRegistrationEntity.prototype['code'] = undefined;

/**
 * Registrant company name
 * @member {String} company
 */
InboxRegistrationEntity.prototype['company'] = undefined;

/**
 * Registration creation date/time
 * @member {Date} created_at
 */
InboxRegistrationEntity.prototype['created_at'] = undefined;

/**
 * Registrant email address
 * @member {String} email
 */
InboxRegistrationEntity.prototype['email'] = undefined;

/**
 * Data for form field set with form field ids as keys and user data as values
 * @member {Object} form_field_data
 */
InboxRegistrationEntity.prototype['form_field_data'] = undefined;

/**
 * Id of associated form field set
 * @member {Number} form_field_set_id
 */
InboxRegistrationEntity.prototype['form_field_set_id'] = undefined;

/**
 * Id of associated inbox
 * @member {Number} inbox_id
 */
InboxRegistrationEntity.prototype['inbox_id'] = undefined;

/**
 * Id of associated inbox recipient
 * @member {Number} inbox_recipient_id
 */
InboxRegistrationEntity.prototype['inbox_recipient_id'] = undefined;

/**
 * Title of associated inbox
 * @member {String} inbox_title
 */
InboxRegistrationEntity.prototype['inbox_title'] = undefined;

/**
 * Registrant name
 * @member {String} name
 */
InboxRegistrationEntity.prototype['name'] = undefined;






export default InboxRegistrationEntity;

