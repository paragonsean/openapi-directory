/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HistoryExportResultEntity model module.
 * @module model/HistoryExportResultEntity
 * @version 0.0.1
 */
class HistoryExportResultEntity {
    /**
     * Constructs a new <code>HistoryExportResultEntity</code>.
     * List History Export Results
     * @alias module:model/HistoryExportResultEntity
     */
    constructor() { 
        
        HistoryExportResultEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistoryExportResultEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryExportResultEntity} obj Optional instance to populate.
     * @return {module:model/HistoryExportResultEntity} The populated <code>HistoryExportResultEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryExportResultEntity();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('created_at_iso8601')) {
                obj['created_at_iso8601'] = ApiClient.convertToType(data['created_at_iso8601'], 'Number');
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('failure_type')) {
                obj['failure_type'] = ApiClient.convertToType(data['failure_type'], 'String');
            }
            if (data.hasOwnProperty('file_id')) {
                obj['file_id'] = ApiClient.convertToType(data['file_id'], 'Number');
            }
            if (data.hasOwnProperty('folder')) {
                obj['folder'] = ApiClient.convertToType(data['folder'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('interface')) {
                obj['interface'] = ApiClient.convertToType(data['interface'], 'String');
            }
            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'Number');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('src')) {
                obj['src'] = ApiClient.convertToType(data['src'], 'String');
            }
            if (data.hasOwnProperty('target_expires_at')) {
                obj['target_expires_at'] = ApiClient.convertToType(data['target_expires_at'], 'Number');
            }
            if (data.hasOwnProperty('target_id')) {
                obj['target_id'] = ApiClient.convertToType(data['target_id'], 'Number');
            }
            if (data.hasOwnProperty('target_name')) {
                obj['target_name'] = ApiClient.convertToType(data['target_name'], 'String');
            }
            if (data.hasOwnProperty('target_permission')) {
                obj['target_permission'] = ApiClient.convertToType(data['target_permission'], 'String');
            }
            if (data.hasOwnProperty('target_permission_set')) {
                obj['target_permission_set'] = ApiClient.convertToType(data['target_permission_set'], 'String');
            }
            if (data.hasOwnProperty('target_platform')) {
                obj['target_platform'] = ApiClient.convertToType(data['target_platform'], 'String');
            }
            if (data.hasOwnProperty('target_recursive')) {
                obj['target_recursive'] = ApiClient.convertToType(data['target_recursive'], 'Boolean');
            }
            if (data.hasOwnProperty('target_user_id')) {
                obj['target_user_id'] = ApiClient.convertToType(data['target_user_id'], 'Number');
            }
            if (data.hasOwnProperty('target_username')) {
                obj['target_username'] = ApiClient.convertToType(data['target_username'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryExportResultEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryExportResultEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // ensure the json data is a string
        if (data['failure_type'] && !(typeof data['failure_type'] === 'string' || data['failure_type'] instanceof String)) {
            throw new Error("Expected the field `failure_type` to be a primitive type in the JSON string but got " + data['failure_type']);
        }
        // ensure the json data is a string
        if (data['folder'] && !(typeof data['folder'] === 'string' || data['folder'] instanceof String)) {
            throw new Error("Expected the field `folder` to be a primitive type in the JSON string but got " + data['folder']);
        }
        // ensure the json data is a string
        if (data['interface'] && !(typeof data['interface'] === 'string' || data['interface'] instanceof String)) {
            throw new Error("Expected the field `interface` to be a primitive type in the JSON string but got " + data['interface']);
        }
        // ensure the json data is a string
        if (data['ip'] && !(typeof data['ip'] === 'string' || data['ip'] instanceof String)) {
            throw new Error("Expected the field `ip` to be a primitive type in the JSON string but got " + data['ip']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['src'] && !(typeof data['src'] === 'string' || data['src'] instanceof String)) {
            throw new Error("Expected the field `src` to be a primitive type in the JSON string but got " + data['src']);
        }
        // ensure the json data is a string
        if (data['target_name'] && !(typeof data['target_name'] === 'string' || data['target_name'] instanceof String)) {
            throw new Error("Expected the field `target_name` to be a primitive type in the JSON string but got " + data['target_name']);
        }
        // ensure the json data is a string
        if (data['target_permission'] && !(typeof data['target_permission'] === 'string' || data['target_permission'] instanceof String)) {
            throw new Error("Expected the field `target_permission` to be a primitive type in the JSON string but got " + data['target_permission']);
        }
        // ensure the json data is a string
        if (data['target_permission_set'] && !(typeof data['target_permission_set'] === 'string' || data['target_permission_set'] instanceof String)) {
            throw new Error("Expected the field `target_permission_set` to be a primitive type in the JSON string but got " + data['target_permission_set']);
        }
        // ensure the json data is a string
        if (data['target_platform'] && !(typeof data['target_platform'] === 'string' || data['target_platform'] instanceof String)) {
            throw new Error("Expected the field `target_platform` to be a primitive type in the JSON string but got " + data['target_platform']);
        }
        // ensure the json data is a string
        if (data['target_username'] && !(typeof data['target_username'] === 'string' || data['target_username'] instanceof String)) {
            throw new Error("Expected the field `target_username` to be a primitive type in the JSON string but got " + data['target_username']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * What action was taken. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`
 * @member {String} action
 */
HistoryExportResultEntity.prototype['action'] = undefined;

/**
 * When the action happened
 * @member {Number} created_at
 */
HistoryExportResultEntity.prototype['created_at'] = undefined;

/**
 * When the action happened, in ISO8601 format.
 * @member {Number} created_at_iso8601
 */
HistoryExportResultEntity.prototype['created_at_iso8601'] = undefined;

/**
 * File moved to this destination folder
 * @member {String} destination
 */
HistoryExportResultEntity.prototype['destination'] = undefined;

/**
 * The type of login failure, if applicable.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`
 * @member {String} failure_type
 */
HistoryExportResultEntity.prototype['failure_type'] = undefined;

/**
 * File ID related to the action
 * @member {Number} file_id
 */
HistoryExportResultEntity.prototype['file_id'] = undefined;

/**
 * Folder in which the action occurred
 * @member {String} folder
 */
HistoryExportResultEntity.prototype['folder'] = undefined;

/**
 * Action ID
 * @member {Number} id
 */
HistoryExportResultEntity.prototype['id'] = undefined;

/**
 * Inteface through which the action was taken. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`
 * @member {String} interface
 */
HistoryExportResultEntity.prototype['interface'] = undefined;

/**
 * Client IP that performed the action
 * @member {String} ip
 */
HistoryExportResultEntity.prototype['ip'] = undefined;

/**
 * ID of the parent folder
 * @member {Number} parent_id
 */
HistoryExportResultEntity.prototype['parent_id'] = undefined;

/**
 * Path of the related action
 * @member {String} path
 */
HistoryExportResultEntity.prototype['path'] = undefined;

/**
 * File move originated from this path
 * @member {String} src
 */
HistoryExportResultEntity.prototype['src'] = undefined;

/**
 * If searching for Histories about API keys, this is when the API key will expire
 * @member {Number} target_expires_at
 */
HistoryExportResultEntity.prototype['target_expires_at'] = undefined;

/**
 * ID of the object (such as Users, or API Keys) on which the action was taken
 * @member {Number} target_id
 */
HistoryExportResultEntity.prototype['target_id'] = undefined;

/**
 * Name of the User, Group or other object with a name related to this action
 * @member {String} target_name
 */
HistoryExportResultEntity.prototype['target_name'] = undefined;

/**
 * Permission level of the action
 * @member {String} target_permission
 */
HistoryExportResultEntity.prototype['target_permission'] = undefined;

/**
 * If searching for Histories about API keys, this represents the permission set of the associated  API key
 * @member {String} target_permission_set
 */
HistoryExportResultEntity.prototype['target_permission_set'] = undefined;

/**
 * If searching for Histories about API keys, this is the platform on which the action was taken
 * @member {String} target_platform
 */
HistoryExportResultEntity.prototype['target_platform'] = undefined;

/**
 * Whether or not the action was recursive
 * @member {Boolean} target_recursive
 */
HistoryExportResultEntity.prototype['target_recursive'] = undefined;

/**
 * If searching for Histories about API keys, this is the User ID on which the action was taken
 * @member {Number} target_user_id
 */
HistoryExportResultEntity.prototype['target_user_id'] = undefined;

/**
 * If searching for Histories about API keys, this is the username on which the action was taken
 * @member {String} target_username
 */
HistoryExportResultEntity.prototype['target_username'] = undefined;

/**
 * User ID
 * @member {Number} user_id
 */
HistoryExportResultEntity.prototype['user_id'] = undefined;

/**
 * Username of the user that performed the action
 * @member {String} username
 */
HistoryExportResultEntity.prototype['username'] = undefined;






export default HistoryExportResultEntity;

