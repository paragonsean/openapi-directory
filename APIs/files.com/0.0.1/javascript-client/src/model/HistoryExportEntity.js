/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HistoryExportEntity model module.
 * @module model/HistoryExportEntity
 * @version 0.0.1
 */
class HistoryExportEntity {
    /**
     * Constructs a new <code>HistoryExportEntity</code>.
     * Show History Export
     * @alias module:model/HistoryExportEntity
     */
    constructor() { 
        
        HistoryExportEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistoryExportEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryExportEntity} obj Optional instance to populate.
     * @return {module:model/HistoryExportEntity} The populated <code>HistoryExportEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryExportEntity();

            if (data.hasOwnProperty('end_at')) {
                obj['end_at'] = ApiClient.convertToType(data['end_at'], 'Date');
            }
            if (data.hasOwnProperty('history_version')) {
                obj['history_version'] = ApiClient.convertToType(data['history_version'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('query_action')) {
                obj['query_action'] = ApiClient.convertToType(data['query_action'], 'String');
            }
            if (data.hasOwnProperty('query_destination')) {
                obj['query_destination'] = ApiClient.convertToType(data['query_destination'], 'String');
            }
            if (data.hasOwnProperty('query_failure_type')) {
                obj['query_failure_type'] = ApiClient.convertToType(data['query_failure_type'], 'String');
            }
            if (data.hasOwnProperty('query_file_id')) {
                obj['query_file_id'] = ApiClient.convertToType(data['query_file_id'], 'String');
            }
            if (data.hasOwnProperty('query_folder')) {
                obj['query_folder'] = ApiClient.convertToType(data['query_folder'], 'String');
            }
            if (data.hasOwnProperty('query_interface')) {
                obj['query_interface'] = ApiClient.convertToType(data['query_interface'], 'String');
            }
            if (data.hasOwnProperty('query_ip')) {
                obj['query_ip'] = ApiClient.convertToType(data['query_ip'], 'String');
            }
            if (data.hasOwnProperty('query_parent_id')) {
                obj['query_parent_id'] = ApiClient.convertToType(data['query_parent_id'], 'String');
            }
            if (data.hasOwnProperty('query_path')) {
                obj['query_path'] = ApiClient.convertToType(data['query_path'], 'String');
            }
            if (data.hasOwnProperty('query_src')) {
                obj['query_src'] = ApiClient.convertToType(data['query_src'], 'String');
            }
            if (data.hasOwnProperty('query_target_id')) {
                obj['query_target_id'] = ApiClient.convertToType(data['query_target_id'], 'String');
            }
            if (data.hasOwnProperty('query_target_name')) {
                obj['query_target_name'] = ApiClient.convertToType(data['query_target_name'], 'String');
            }
            if (data.hasOwnProperty('query_target_permission')) {
                obj['query_target_permission'] = ApiClient.convertToType(data['query_target_permission'], 'String');
            }
            if (data.hasOwnProperty('query_target_permission_set')) {
                obj['query_target_permission_set'] = ApiClient.convertToType(data['query_target_permission_set'], 'String');
            }
            if (data.hasOwnProperty('query_target_platform')) {
                obj['query_target_platform'] = ApiClient.convertToType(data['query_target_platform'], 'String');
            }
            if (data.hasOwnProperty('query_target_user_id')) {
                obj['query_target_user_id'] = ApiClient.convertToType(data['query_target_user_id'], 'String');
            }
            if (data.hasOwnProperty('query_target_username')) {
                obj['query_target_username'] = ApiClient.convertToType(data['query_target_username'], 'String');
            }
            if (data.hasOwnProperty('query_user_id')) {
                obj['query_user_id'] = ApiClient.convertToType(data['query_user_id'], 'String');
            }
            if (data.hasOwnProperty('query_username')) {
                obj['query_username'] = ApiClient.convertToType(data['query_username'], 'String');
            }
            if (data.hasOwnProperty('results_url')) {
                obj['results_url'] = ApiClient.convertToType(data['results_url'], 'String');
            }
            if (data.hasOwnProperty('start_at')) {
                obj['start_at'] = ApiClient.convertToType(data['start_at'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryExportEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryExportEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['history_version'] && !(typeof data['history_version'] === 'string' || data['history_version'] instanceof String)) {
            throw new Error("Expected the field `history_version` to be a primitive type in the JSON string but got " + data['history_version']);
        }
        // ensure the json data is a string
        if (data['query_action'] && !(typeof data['query_action'] === 'string' || data['query_action'] instanceof String)) {
            throw new Error("Expected the field `query_action` to be a primitive type in the JSON string but got " + data['query_action']);
        }
        // ensure the json data is a string
        if (data['query_destination'] && !(typeof data['query_destination'] === 'string' || data['query_destination'] instanceof String)) {
            throw new Error("Expected the field `query_destination` to be a primitive type in the JSON string but got " + data['query_destination']);
        }
        // ensure the json data is a string
        if (data['query_failure_type'] && !(typeof data['query_failure_type'] === 'string' || data['query_failure_type'] instanceof String)) {
            throw new Error("Expected the field `query_failure_type` to be a primitive type in the JSON string but got " + data['query_failure_type']);
        }
        // ensure the json data is a string
        if (data['query_file_id'] && !(typeof data['query_file_id'] === 'string' || data['query_file_id'] instanceof String)) {
            throw new Error("Expected the field `query_file_id` to be a primitive type in the JSON string but got " + data['query_file_id']);
        }
        // ensure the json data is a string
        if (data['query_folder'] && !(typeof data['query_folder'] === 'string' || data['query_folder'] instanceof String)) {
            throw new Error("Expected the field `query_folder` to be a primitive type in the JSON string but got " + data['query_folder']);
        }
        // ensure the json data is a string
        if (data['query_interface'] && !(typeof data['query_interface'] === 'string' || data['query_interface'] instanceof String)) {
            throw new Error("Expected the field `query_interface` to be a primitive type in the JSON string but got " + data['query_interface']);
        }
        // ensure the json data is a string
        if (data['query_ip'] && !(typeof data['query_ip'] === 'string' || data['query_ip'] instanceof String)) {
            throw new Error("Expected the field `query_ip` to be a primitive type in the JSON string but got " + data['query_ip']);
        }
        // ensure the json data is a string
        if (data['query_parent_id'] && !(typeof data['query_parent_id'] === 'string' || data['query_parent_id'] instanceof String)) {
            throw new Error("Expected the field `query_parent_id` to be a primitive type in the JSON string but got " + data['query_parent_id']);
        }
        // ensure the json data is a string
        if (data['query_path'] && !(typeof data['query_path'] === 'string' || data['query_path'] instanceof String)) {
            throw new Error("Expected the field `query_path` to be a primitive type in the JSON string but got " + data['query_path']);
        }
        // ensure the json data is a string
        if (data['query_src'] && !(typeof data['query_src'] === 'string' || data['query_src'] instanceof String)) {
            throw new Error("Expected the field `query_src` to be a primitive type in the JSON string but got " + data['query_src']);
        }
        // ensure the json data is a string
        if (data['query_target_id'] && !(typeof data['query_target_id'] === 'string' || data['query_target_id'] instanceof String)) {
            throw new Error("Expected the field `query_target_id` to be a primitive type in the JSON string but got " + data['query_target_id']);
        }
        // ensure the json data is a string
        if (data['query_target_name'] && !(typeof data['query_target_name'] === 'string' || data['query_target_name'] instanceof String)) {
            throw new Error("Expected the field `query_target_name` to be a primitive type in the JSON string but got " + data['query_target_name']);
        }
        // ensure the json data is a string
        if (data['query_target_permission'] && !(typeof data['query_target_permission'] === 'string' || data['query_target_permission'] instanceof String)) {
            throw new Error("Expected the field `query_target_permission` to be a primitive type in the JSON string but got " + data['query_target_permission']);
        }
        // ensure the json data is a string
        if (data['query_target_permission_set'] && !(typeof data['query_target_permission_set'] === 'string' || data['query_target_permission_set'] instanceof String)) {
            throw new Error("Expected the field `query_target_permission_set` to be a primitive type in the JSON string but got " + data['query_target_permission_set']);
        }
        // ensure the json data is a string
        if (data['query_target_platform'] && !(typeof data['query_target_platform'] === 'string' || data['query_target_platform'] instanceof String)) {
            throw new Error("Expected the field `query_target_platform` to be a primitive type in the JSON string but got " + data['query_target_platform']);
        }
        // ensure the json data is a string
        if (data['query_target_user_id'] && !(typeof data['query_target_user_id'] === 'string' || data['query_target_user_id'] instanceof String)) {
            throw new Error("Expected the field `query_target_user_id` to be a primitive type in the JSON string but got " + data['query_target_user_id']);
        }
        // ensure the json data is a string
        if (data['query_target_username'] && !(typeof data['query_target_username'] === 'string' || data['query_target_username'] instanceof String)) {
            throw new Error("Expected the field `query_target_username` to be a primitive type in the JSON string but got " + data['query_target_username']);
        }
        // ensure the json data is a string
        if (data['query_user_id'] && !(typeof data['query_user_id'] === 'string' || data['query_user_id'] instanceof String)) {
            throw new Error("Expected the field `query_user_id` to be a primitive type in the JSON string but got " + data['query_user_id']);
        }
        // ensure the json data is a string
        if (data['query_username'] && !(typeof data['query_username'] === 'string' || data['query_username'] instanceof String)) {
            throw new Error("Expected the field `query_username` to be a primitive type in the JSON string but got " + data['query_username']);
        }
        // ensure the json data is a string
        if (data['results_url'] && !(typeof data['results_url'] === 'string' || data['results_url'] instanceof String)) {
            throw new Error("Expected the field `results_url` to be a primitive type in the JSON string but got " + data['results_url']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * End date/time of export range.
 * @member {Date} end_at
 */
HistoryExportEntity.prototype['end_at'] = undefined;

/**
 * Version of the history for the export.
 * @member {String} history_version
 */
HistoryExportEntity.prototype['history_version'] = undefined;

/**
 * History Export ID
 * @member {Number} id
 */
HistoryExportEntity.prototype['id'] = undefined;

/**
 * Filter results by this this action type. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`
 * @member {String} query_action
 */
HistoryExportEntity.prototype['query_action'] = undefined;

/**
 * Return results that are file moves with this path as destination.
 * @member {String} query_destination
 */
HistoryExportEntity.prototype['query_destination'] = undefined;

/**
 * If searching for Histories about login failures, this parameter restricts results to failures of this specific type.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`
 * @member {String} query_failure_type
 */
HistoryExportEntity.prototype['query_failure_type'] = undefined;

/**
 * Return results that are file actions related to the file indicated by this File ID
 * @member {String} query_file_id
 */
HistoryExportEntity.prototype['query_file_id'] = undefined;

/**
 * Return results that are file actions related to files or folders inside this folder path.
 * @member {String} query_folder
 */
HistoryExportEntity.prototype['query_folder'] = undefined;

/**
 * Filter results by this this interface type. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`
 * @member {String} query_interface
 */
HistoryExportEntity.prototype['query_interface'] = undefined;

/**
 * Filter results by this IP address.
 * @member {String} query_ip
 */
HistoryExportEntity.prototype['query_ip'] = undefined;

/**
 * Return results that are file actions inside the parent folder specified by this folder ID
 * @member {String} query_parent_id
 */
HistoryExportEntity.prototype['query_parent_id'] = undefined;

/**
 * Return results that are file actions related to this path.
 * @member {String} query_path
 */
HistoryExportEntity.prototype['query_path'] = undefined;

/**
 * Return results that are file moves originating from this path.
 * @member {String} query_src
 */
HistoryExportEntity.prototype['query_src'] = undefined;

/**
 * If searching for Histories about specific objects (such as Users, or API Keys), this paremeter restricts results to objects that match this ID.
 * @member {String} query_target_id
 */
HistoryExportEntity.prototype['query_target_id'] = undefined;

/**
 * If searching for Histories about Users, Groups or other objects with names, this parameter restricts results to objects with this name/username.
 * @member {String} query_target_name
 */
HistoryExportEntity.prototype['query_target_name'] = undefined;

/**
 * If searching for Histories about Permisisons, this parameter restricts results to permissions of this level.
 * @member {String} query_target_permission
 */
HistoryExportEntity.prototype['query_target_permission'] = undefined;

/**
 * If searching for Histories about API keys, this parameter restricts results to API keys with this permission set.
 * @member {String} query_target_permission_set
 */
HistoryExportEntity.prototype['query_target_permission_set'] = undefined;

/**
 * If searching for Histories about API keys, this parameter restricts results to API keys associated with this platform.
 * @member {String} query_target_platform
 */
HistoryExportEntity.prototype['query_target_platform'] = undefined;

/**
 * If searching for Histories about API keys, this parameter restricts results to API keys created by/for this user ID.
 * @member {String} query_target_user_id
 */
HistoryExportEntity.prototype['query_target_user_id'] = undefined;

/**
 * If searching for Histories about API keys, this parameter restricts results to API keys created by/for this username.
 * @member {String} query_target_username
 */
HistoryExportEntity.prototype['query_target_username'] = undefined;

/**
 * Return results that are actions performed by the user indiciated by this User ID
 * @member {String} query_user_id
 */
HistoryExportEntity.prototype['query_user_id'] = undefined;

/**
 * Filter results by this username.
 * @member {String} query_username
 */
HistoryExportEntity.prototype['query_username'] = undefined;

/**
 * If `status` is `ready`, this will be a URL where all the results can be downloaded at once as a CSV.
 * @member {String} results_url
 */
HistoryExportEntity.prototype['results_url'] = undefined;

/**
 * Start date/time of export range.
 * @member {Date} start_at
 */
HistoryExportEntity.prototype['start_at'] = undefined;

/**
 * Status of export.  Will be: `building`, `ready`, or `failed`
 * @member {String} status
 */
HistoryExportEntity.prototype['status'] = undefined;






export default HistoryExportEntity;

