/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RemoteServerEntity model module.
 * @module model/RemoteServerEntity
 * @version 0.0.1
 */
class RemoteServerEntity {
    /**
     * Constructs a new <code>RemoteServerEntity</code>.
     * Create Remote Server
     * @alias module:model/RemoteServerEntity
     */
    constructor() { 
        
        RemoteServerEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RemoteServerEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoteServerEntity} obj Optional instance to populate.
     * @return {module:model/RemoteServerEntity} The populated <code>RemoteServerEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoteServerEntity();

            if (data.hasOwnProperty('auth_account_name')) {
                obj['auth_account_name'] = ApiClient.convertToType(data['auth_account_name'], 'String');
            }
            if (data.hasOwnProperty('auth_setup_link')) {
                obj['auth_setup_link'] = ApiClient.convertToType(data['auth_setup_link'], 'String');
            }
            if (data.hasOwnProperty('auth_status')) {
                obj['auth_status'] = ApiClient.convertToType(data['auth_status'], 'String');
            }
            if (data.hasOwnProperty('authentication_method')) {
                obj['authentication_method'] = ApiClient.convertToType(data['authentication_method'], 'String');
            }
            if (data.hasOwnProperty('aws_access_key')) {
                obj['aws_access_key'] = ApiClient.convertToType(data['aws_access_key'], 'String');
            }
            if (data.hasOwnProperty('azure_blob_storage_account')) {
                obj['azure_blob_storage_account'] = ApiClient.convertToType(data['azure_blob_storage_account'], 'String');
            }
            if (data.hasOwnProperty('azure_blob_storage_container')) {
                obj['azure_blob_storage_container'] = ApiClient.convertToType(data['azure_blob_storage_container'], 'String');
            }
            if (data.hasOwnProperty('azure_blob_storage_sas_token')) {
                obj['azure_blob_storage_sas_token'] = ApiClient.convertToType(data['azure_blob_storage_sas_token'], 'String');
            }
            if (data.hasOwnProperty('azure_files_storage_account')) {
                obj['azure_files_storage_account'] = ApiClient.convertToType(data['azure_files_storage_account'], 'String');
            }
            if (data.hasOwnProperty('azure_files_storage_sas_token')) {
                obj['azure_files_storage_sas_token'] = ApiClient.convertToType(data['azure_files_storage_sas_token'], 'String');
            }
            if (data.hasOwnProperty('azure_files_storage_share_name')) {
                obj['azure_files_storage_share_name'] = ApiClient.convertToType(data['azure_files_storage_share_name'], 'String');
            }
            if (data.hasOwnProperty('backblaze_b2_bucket')) {
                obj['backblaze_b2_bucket'] = ApiClient.convertToType(data['backblaze_b2_bucket'], 'String');
            }
            if (data.hasOwnProperty('backblaze_b2_s3_endpoint')) {
                obj['backblaze_b2_s3_endpoint'] = ApiClient.convertToType(data['backblaze_b2_s3_endpoint'], 'String');
            }
            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('enable_dedicated_ips')) {
                obj['enable_dedicated_ips'] = ApiClient.convertToType(data['enable_dedicated_ips'], 'Boolean');
            }
            if (data.hasOwnProperty('filebase_access_key')) {
                obj['filebase_access_key'] = ApiClient.convertToType(data['filebase_access_key'], 'String');
            }
            if (data.hasOwnProperty('filebase_bucket')) {
                obj['filebase_bucket'] = ApiClient.convertToType(data['filebase_bucket'], 'String');
            }
            if (data.hasOwnProperty('files_agent_api_token')) {
                obj['files_agent_api_token'] = ApiClient.convertToType(data['files_agent_api_token'], 'String');
            }
            if (data.hasOwnProperty('files_agent_permission_set')) {
                obj['files_agent_permission_set'] = ApiClient.convertToType(data['files_agent_permission_set'], 'String');
            }
            if (data.hasOwnProperty('files_agent_root')) {
                obj['files_agent_root'] = ApiClient.convertToType(data['files_agent_root'], 'String');
            }
            if (data.hasOwnProperty('google_cloud_storage_bucket')) {
                obj['google_cloud_storage_bucket'] = ApiClient.convertToType(data['google_cloud_storage_bucket'], 'String');
            }
            if (data.hasOwnProperty('google_cloud_storage_project_id')) {
                obj['google_cloud_storage_project_id'] = ApiClient.convertToType(data['google_cloud_storage_project_id'], 'String');
            }
            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('max_connections')) {
                obj['max_connections'] = ApiClient.convertToType(data['max_connections'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('one_drive_account_type')) {
                obj['one_drive_account_type'] = ApiClient.convertToType(data['one_drive_account_type'], 'String');
            }
            if (data.hasOwnProperty('pin_to_site_region')) {
                obj['pin_to_site_region'] = ApiClient.convertToType(data['pin_to_site_region'], 'Boolean');
            }
            if (data.hasOwnProperty('pinned_region')) {
                obj['pinned_region'] = ApiClient.convertToType(data['pinned_region'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('rackspace_container')) {
                obj['rackspace_container'] = ApiClient.convertToType(data['rackspace_container'], 'String');
            }
            if (data.hasOwnProperty('rackspace_region')) {
                obj['rackspace_region'] = ApiClient.convertToType(data['rackspace_region'], 'String');
            }
            if (data.hasOwnProperty('rackspace_username')) {
                obj['rackspace_username'] = ApiClient.convertToType(data['rackspace_username'], 'String');
            }
            if (data.hasOwnProperty('remote_home_path')) {
                obj['remote_home_path'] = ApiClient.convertToType(data['remote_home_path'], 'String');
            }
            if (data.hasOwnProperty('s3_bucket')) {
                obj['s3_bucket'] = ApiClient.convertToType(data['s3_bucket'], 'String');
            }
            if (data.hasOwnProperty('s3_compatible_access_key')) {
                obj['s3_compatible_access_key'] = ApiClient.convertToType(data['s3_compatible_access_key'], 'String');
            }
            if (data.hasOwnProperty('s3_compatible_bucket')) {
                obj['s3_compatible_bucket'] = ApiClient.convertToType(data['s3_compatible_bucket'], 'String');
            }
            if (data.hasOwnProperty('s3_compatible_endpoint')) {
                obj['s3_compatible_endpoint'] = ApiClient.convertToType(data['s3_compatible_endpoint'], 'String');
            }
            if (data.hasOwnProperty('s3_compatible_region')) {
                obj['s3_compatible_region'] = ApiClient.convertToType(data['s3_compatible_region'], 'String');
            }
            if (data.hasOwnProperty('s3_region')) {
                obj['s3_region'] = ApiClient.convertToType(data['s3_region'], 'String');
            }
            if (data.hasOwnProperty('server_certificate')) {
                obj['server_certificate'] = ApiClient.convertToType(data['server_certificate'], 'String');
            }
            if (data.hasOwnProperty('server_host_key')) {
                obj['server_host_key'] = ApiClient.convertToType(data['server_host_key'], 'String');
            }
            if (data.hasOwnProperty('server_type')) {
                obj['server_type'] = ApiClient.convertToType(data['server_type'], 'String');
            }
            if (data.hasOwnProperty('ssl')) {
                obj['ssl'] = ApiClient.convertToType(data['ssl'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('wasabi_access_key')) {
                obj['wasabi_access_key'] = ApiClient.convertToType(data['wasabi_access_key'], 'String');
            }
            if (data.hasOwnProperty('wasabi_bucket')) {
                obj['wasabi_bucket'] = ApiClient.convertToType(data['wasabi_bucket'], 'String');
            }
            if (data.hasOwnProperty('wasabi_region')) {
                obj['wasabi_region'] = ApiClient.convertToType(data['wasabi_region'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoteServerEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoteServerEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['auth_account_name'] && !(typeof data['auth_account_name'] === 'string' || data['auth_account_name'] instanceof String)) {
            throw new Error("Expected the field `auth_account_name` to be a primitive type in the JSON string but got " + data['auth_account_name']);
        }
        // ensure the json data is a string
        if (data['auth_setup_link'] && !(typeof data['auth_setup_link'] === 'string' || data['auth_setup_link'] instanceof String)) {
            throw new Error("Expected the field `auth_setup_link` to be a primitive type in the JSON string but got " + data['auth_setup_link']);
        }
        // ensure the json data is a string
        if (data['auth_status'] && !(typeof data['auth_status'] === 'string' || data['auth_status'] instanceof String)) {
            throw new Error("Expected the field `auth_status` to be a primitive type in the JSON string but got " + data['auth_status']);
        }
        // ensure the json data is a string
        if (data['authentication_method'] && !(typeof data['authentication_method'] === 'string' || data['authentication_method'] instanceof String)) {
            throw new Error("Expected the field `authentication_method` to be a primitive type in the JSON string but got " + data['authentication_method']);
        }
        // ensure the json data is a string
        if (data['aws_access_key'] && !(typeof data['aws_access_key'] === 'string' || data['aws_access_key'] instanceof String)) {
            throw new Error("Expected the field `aws_access_key` to be a primitive type in the JSON string but got " + data['aws_access_key']);
        }
        // ensure the json data is a string
        if (data['azure_blob_storage_account'] && !(typeof data['azure_blob_storage_account'] === 'string' || data['azure_blob_storage_account'] instanceof String)) {
            throw new Error("Expected the field `azure_blob_storage_account` to be a primitive type in the JSON string but got " + data['azure_blob_storage_account']);
        }
        // ensure the json data is a string
        if (data['azure_blob_storage_container'] && !(typeof data['azure_blob_storage_container'] === 'string' || data['azure_blob_storage_container'] instanceof String)) {
            throw new Error("Expected the field `azure_blob_storage_container` to be a primitive type in the JSON string but got " + data['azure_blob_storage_container']);
        }
        // ensure the json data is a string
        if (data['azure_blob_storage_sas_token'] && !(typeof data['azure_blob_storage_sas_token'] === 'string' || data['azure_blob_storage_sas_token'] instanceof String)) {
            throw new Error("Expected the field `azure_blob_storage_sas_token` to be a primitive type in the JSON string but got " + data['azure_blob_storage_sas_token']);
        }
        // ensure the json data is a string
        if (data['azure_files_storage_account'] && !(typeof data['azure_files_storage_account'] === 'string' || data['azure_files_storage_account'] instanceof String)) {
            throw new Error("Expected the field `azure_files_storage_account` to be a primitive type in the JSON string but got " + data['azure_files_storage_account']);
        }
        // ensure the json data is a string
        if (data['azure_files_storage_sas_token'] && !(typeof data['azure_files_storage_sas_token'] === 'string' || data['azure_files_storage_sas_token'] instanceof String)) {
            throw new Error("Expected the field `azure_files_storage_sas_token` to be a primitive type in the JSON string but got " + data['azure_files_storage_sas_token']);
        }
        // ensure the json data is a string
        if (data['azure_files_storage_share_name'] && !(typeof data['azure_files_storage_share_name'] === 'string' || data['azure_files_storage_share_name'] instanceof String)) {
            throw new Error("Expected the field `azure_files_storage_share_name` to be a primitive type in the JSON string but got " + data['azure_files_storage_share_name']);
        }
        // ensure the json data is a string
        if (data['backblaze_b2_bucket'] && !(typeof data['backblaze_b2_bucket'] === 'string' || data['backblaze_b2_bucket'] instanceof String)) {
            throw new Error("Expected the field `backblaze_b2_bucket` to be a primitive type in the JSON string but got " + data['backblaze_b2_bucket']);
        }
        // ensure the json data is a string
        if (data['backblaze_b2_s3_endpoint'] && !(typeof data['backblaze_b2_s3_endpoint'] === 'string' || data['backblaze_b2_s3_endpoint'] instanceof String)) {
            throw new Error("Expected the field `backblaze_b2_s3_endpoint` to be a primitive type in the JSON string but got " + data['backblaze_b2_s3_endpoint']);
        }
        // ensure the json data is a string
        if (data['filebase_access_key'] && !(typeof data['filebase_access_key'] === 'string' || data['filebase_access_key'] instanceof String)) {
            throw new Error("Expected the field `filebase_access_key` to be a primitive type in the JSON string but got " + data['filebase_access_key']);
        }
        // ensure the json data is a string
        if (data['filebase_bucket'] && !(typeof data['filebase_bucket'] === 'string' || data['filebase_bucket'] instanceof String)) {
            throw new Error("Expected the field `filebase_bucket` to be a primitive type in the JSON string but got " + data['filebase_bucket']);
        }
        // ensure the json data is a string
        if (data['files_agent_api_token'] && !(typeof data['files_agent_api_token'] === 'string' || data['files_agent_api_token'] instanceof String)) {
            throw new Error("Expected the field `files_agent_api_token` to be a primitive type in the JSON string but got " + data['files_agent_api_token']);
        }
        // ensure the json data is a string
        if (data['files_agent_permission_set'] && !(typeof data['files_agent_permission_set'] === 'string' || data['files_agent_permission_set'] instanceof String)) {
            throw new Error("Expected the field `files_agent_permission_set` to be a primitive type in the JSON string but got " + data['files_agent_permission_set']);
        }
        // ensure the json data is a string
        if (data['files_agent_root'] && !(typeof data['files_agent_root'] === 'string' || data['files_agent_root'] instanceof String)) {
            throw new Error("Expected the field `files_agent_root` to be a primitive type in the JSON string but got " + data['files_agent_root']);
        }
        // ensure the json data is a string
        if (data['google_cloud_storage_bucket'] && !(typeof data['google_cloud_storage_bucket'] === 'string' || data['google_cloud_storage_bucket'] instanceof String)) {
            throw new Error("Expected the field `google_cloud_storage_bucket` to be a primitive type in the JSON string but got " + data['google_cloud_storage_bucket']);
        }
        // ensure the json data is a string
        if (data['google_cloud_storage_project_id'] && !(typeof data['google_cloud_storage_project_id'] === 'string' || data['google_cloud_storage_project_id'] instanceof String)) {
            throw new Error("Expected the field `google_cloud_storage_project_id` to be a primitive type in the JSON string but got " + data['google_cloud_storage_project_id']);
        }
        // ensure the json data is a string
        if (data['hostname'] && !(typeof data['hostname'] === 'string' || data['hostname'] instanceof String)) {
            throw new Error("Expected the field `hostname` to be a primitive type in the JSON string but got " + data['hostname']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['one_drive_account_type'] && !(typeof data['one_drive_account_type'] === 'string' || data['one_drive_account_type'] instanceof String)) {
            throw new Error("Expected the field `one_drive_account_type` to be a primitive type in the JSON string but got " + data['one_drive_account_type']);
        }
        // ensure the json data is a string
        if (data['pinned_region'] && !(typeof data['pinned_region'] === 'string' || data['pinned_region'] instanceof String)) {
            throw new Error("Expected the field `pinned_region` to be a primitive type in the JSON string but got " + data['pinned_region']);
        }
        // ensure the json data is a string
        if (data['rackspace_container'] && !(typeof data['rackspace_container'] === 'string' || data['rackspace_container'] instanceof String)) {
            throw new Error("Expected the field `rackspace_container` to be a primitive type in the JSON string but got " + data['rackspace_container']);
        }
        // ensure the json data is a string
        if (data['rackspace_region'] && !(typeof data['rackspace_region'] === 'string' || data['rackspace_region'] instanceof String)) {
            throw new Error("Expected the field `rackspace_region` to be a primitive type in the JSON string but got " + data['rackspace_region']);
        }
        // ensure the json data is a string
        if (data['rackspace_username'] && !(typeof data['rackspace_username'] === 'string' || data['rackspace_username'] instanceof String)) {
            throw new Error("Expected the field `rackspace_username` to be a primitive type in the JSON string but got " + data['rackspace_username']);
        }
        // ensure the json data is a string
        if (data['remote_home_path'] && !(typeof data['remote_home_path'] === 'string' || data['remote_home_path'] instanceof String)) {
            throw new Error("Expected the field `remote_home_path` to be a primitive type in the JSON string but got " + data['remote_home_path']);
        }
        // ensure the json data is a string
        if (data['s3_bucket'] && !(typeof data['s3_bucket'] === 'string' || data['s3_bucket'] instanceof String)) {
            throw new Error("Expected the field `s3_bucket` to be a primitive type in the JSON string but got " + data['s3_bucket']);
        }
        // ensure the json data is a string
        if (data['s3_compatible_access_key'] && !(typeof data['s3_compatible_access_key'] === 'string' || data['s3_compatible_access_key'] instanceof String)) {
            throw new Error("Expected the field `s3_compatible_access_key` to be a primitive type in the JSON string but got " + data['s3_compatible_access_key']);
        }
        // ensure the json data is a string
        if (data['s3_compatible_bucket'] && !(typeof data['s3_compatible_bucket'] === 'string' || data['s3_compatible_bucket'] instanceof String)) {
            throw new Error("Expected the field `s3_compatible_bucket` to be a primitive type in the JSON string but got " + data['s3_compatible_bucket']);
        }
        // ensure the json data is a string
        if (data['s3_compatible_endpoint'] && !(typeof data['s3_compatible_endpoint'] === 'string' || data['s3_compatible_endpoint'] instanceof String)) {
            throw new Error("Expected the field `s3_compatible_endpoint` to be a primitive type in the JSON string but got " + data['s3_compatible_endpoint']);
        }
        // ensure the json data is a string
        if (data['s3_compatible_region'] && !(typeof data['s3_compatible_region'] === 'string' || data['s3_compatible_region'] instanceof String)) {
            throw new Error("Expected the field `s3_compatible_region` to be a primitive type in the JSON string but got " + data['s3_compatible_region']);
        }
        // ensure the json data is a string
        if (data['s3_region'] && !(typeof data['s3_region'] === 'string' || data['s3_region'] instanceof String)) {
            throw new Error("Expected the field `s3_region` to be a primitive type in the JSON string but got " + data['s3_region']);
        }
        // ensure the json data is a string
        if (data['server_certificate'] && !(typeof data['server_certificate'] === 'string' || data['server_certificate'] instanceof String)) {
            throw new Error("Expected the field `server_certificate` to be a primitive type in the JSON string but got " + data['server_certificate']);
        }
        // ensure the json data is a string
        if (data['server_host_key'] && !(typeof data['server_host_key'] === 'string' || data['server_host_key'] instanceof String)) {
            throw new Error("Expected the field `server_host_key` to be a primitive type in the JSON string but got " + data['server_host_key']);
        }
        // ensure the json data is a string
        if (data['server_type'] && !(typeof data['server_type'] === 'string' || data['server_type'] instanceof String)) {
            throw new Error("Expected the field `server_type` to be a primitive type in the JSON string but got " + data['server_type']);
        }
        // ensure the json data is a string
        if (data['ssl'] && !(typeof data['ssl'] === 'string' || data['ssl'] instanceof String)) {
            throw new Error("Expected the field `ssl` to be a primitive type in the JSON string but got " + data['ssl']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // ensure the json data is a string
        if (data['wasabi_access_key'] && !(typeof data['wasabi_access_key'] === 'string' || data['wasabi_access_key'] instanceof String)) {
            throw new Error("Expected the field `wasabi_access_key` to be a primitive type in the JSON string but got " + data['wasabi_access_key']);
        }
        // ensure the json data is a string
        if (data['wasabi_bucket'] && !(typeof data['wasabi_bucket'] === 'string' || data['wasabi_bucket'] instanceof String)) {
            throw new Error("Expected the field `wasabi_bucket` to be a primitive type in the JSON string but got " + data['wasabi_bucket']);
        }
        // ensure the json data is a string
        if (data['wasabi_region'] && !(typeof data['wasabi_region'] === 'string' || data['wasabi_region'] instanceof String)) {
            throw new Error("Expected the field `wasabi_region` to be a primitive type in the JSON string but got " + data['wasabi_region']);
        }

        return true;
    }


}



/**
 * Describes the authorized account
 * @member {String} auth_account_name
 */
RemoteServerEntity.prototype['auth_account_name'] = undefined;

/**
 * Returns link to login with an Oauth provider
 * @member {String} auth_setup_link
 */
RemoteServerEntity.prototype['auth_setup_link'] = undefined;

/**
 * Either `in_setup` or `complete`
 * @member {module:model/RemoteServerEntity.AuthStatusEnum} auth_status
 */
RemoteServerEntity.prototype['auth_status'] = undefined;

/**
 * Type of authentication method
 * @member {String} authentication_method
 */
RemoteServerEntity.prototype['authentication_method'] = undefined;

/**
 * AWS Access Key.
 * @member {String} aws_access_key
 */
RemoteServerEntity.prototype['aws_access_key'] = undefined;

/**
 * Azure Blob Storage Account name
 * @member {String} azure_blob_storage_account
 */
RemoteServerEntity.prototype['azure_blob_storage_account'] = undefined;

/**
 * Azure Blob Storage Container name
 * @member {String} azure_blob_storage_container
 */
RemoteServerEntity.prototype['azure_blob_storage_container'] = undefined;

/**
 * Shared Access Signature (SAS) token
 * @member {String} azure_blob_storage_sas_token
 */
RemoteServerEntity.prototype['azure_blob_storage_sas_token'] = undefined;

/**
 * Azure File Storage Account name
 * @member {String} azure_files_storage_account
 */
RemoteServerEntity.prototype['azure_files_storage_account'] = undefined;

/**
 * Shared Access Signature (SAS) token
 * @member {String} azure_files_storage_sas_token
 */
RemoteServerEntity.prototype['azure_files_storage_sas_token'] = undefined;

/**
 * Azure File Storage Share name
 * @member {String} azure_files_storage_share_name
 */
RemoteServerEntity.prototype['azure_files_storage_share_name'] = undefined;

/**
 * Backblaze B2 Cloud Storage Bucket name
 * @member {String} backblaze_b2_bucket
 */
RemoteServerEntity.prototype['backblaze_b2_bucket'] = undefined;

/**
 * Backblaze B2 Cloud Storage S3 Endpoint
 * @member {String} backblaze_b2_s3_endpoint
 */
RemoteServerEntity.prototype['backblaze_b2_s3_endpoint'] = undefined;

/**
 * If true, this server has been disabled due to failures.  Make any change or set disabled to false to clear this flag.
 * @member {Boolean} disabled
 */
RemoteServerEntity.prototype['disabled'] = undefined;

/**
 * `true` if remote server only accepts connections from dedicated IPs
 * @member {Boolean} enable_dedicated_ips
 */
RemoteServerEntity.prototype['enable_dedicated_ips'] = undefined;

/**
 * Filebase Access Key.
 * @member {String} filebase_access_key
 */
RemoteServerEntity.prototype['filebase_access_key'] = undefined;

/**
 * Filebase Bucket name
 * @member {String} filebase_bucket
 */
RemoteServerEntity.prototype['filebase_bucket'] = undefined;

/**
 * Files Agent API Token
 * @member {String} files_agent_api_token
 */
RemoteServerEntity.prototype['files_agent_api_token'] = undefined;

/**
 * Local permissions for files agent. read_only, write_only, or read_write
 * @member {module:model/RemoteServerEntity.FilesAgentPermissionSetEnum} files_agent_permission_set
 */
RemoteServerEntity.prototype['files_agent_permission_set'] = undefined;

/**
 * Agent local root path
 * @member {String} files_agent_root
 */
RemoteServerEntity.prototype['files_agent_root'] = undefined;

/**
 * Google Cloud Storage bucket name
 * @member {String} google_cloud_storage_bucket
 */
RemoteServerEntity.prototype['google_cloud_storage_bucket'] = undefined;

/**
 * Google Cloud Project ID
 * @member {String} google_cloud_storage_project_id
 */
RemoteServerEntity.prototype['google_cloud_storage_project_id'] = undefined;

/**
 * Hostname or IP address
 * @member {String} hostname
 */
RemoteServerEntity.prototype['hostname'] = undefined;

/**
 * Remote server ID
 * @member {Number} id
 */
RemoteServerEntity.prototype['id'] = undefined;

/**
 * Max number of parallel connections.  Ignored for S3 connections (we will parallelize these as much as possible).
 * @member {Number} max_connections
 */
RemoteServerEntity.prototype['max_connections'] = undefined;

/**
 * Internal name for your reference
 * @member {String} name
 */
RemoteServerEntity.prototype['name'] = undefined;

/**
 * Either personal or business_other account types
 * @member {module:model/RemoteServerEntity.OneDriveAccountTypeEnum} one_drive_account_type
 */
RemoteServerEntity.prototype['one_drive_account_type'] = undefined;

/**
 * If true, we will ensure that all communications with this remote server are made through the primary region of the site.  This setting can also be overridden by a sitewide setting which will force it to true.
 * @member {Boolean} pin_to_site_region
 */
RemoteServerEntity.prototype['pin_to_site_region'] = undefined;

/**
 * If set, all communciations with this remote server are made through the provided region.
 * @member {String} pinned_region
 */
RemoteServerEntity.prototype['pinned_region'] = undefined;

/**
 * Port for remote server.  Not needed for S3.
 * @member {Number} port
 */
RemoteServerEntity.prototype['port'] = undefined;

/**
 * The name of the container (top level directory) where files will sync.
 * @member {String} rackspace_container
 */
RemoteServerEntity.prototype['rackspace_container'] = undefined;

/**
 * Three letter airport code for Rackspace region. See https://support.rackspace.com/how-to/about-regions/
 * @member {String} rackspace_region
 */
RemoteServerEntity.prototype['rackspace_region'] = undefined;

/**
 * Rackspace username used to login to the Rackspace Cloud Control Panel.
 * @member {String} rackspace_username
 */
RemoteServerEntity.prototype['rackspace_username'] = undefined;

/**
 * Initial home folder on remote server
 * @member {String} remote_home_path
 */
RemoteServerEntity.prototype['remote_home_path'] = undefined;

/**
 * S3 bucket name
 * @member {String} s3_bucket
 */
RemoteServerEntity.prototype['s3_bucket'] = undefined;

/**
 * S3-compatible Access Key.
 * @member {String} s3_compatible_access_key
 */
RemoteServerEntity.prototype['s3_compatible_access_key'] = undefined;

/**
 * S3-compatible Bucket name
 * @member {String} s3_compatible_bucket
 */
RemoteServerEntity.prototype['s3_compatible_bucket'] = undefined;

/**
 * S3-compatible endpoint
 * @member {String} s3_compatible_endpoint
 */
RemoteServerEntity.prototype['s3_compatible_endpoint'] = undefined;

/**
 * S3-compatible endpoint
 * @member {String} s3_compatible_region
 */
RemoteServerEntity.prototype['s3_compatible_region'] = undefined;

/**
 * S3 region
 * @member {String} s3_region
 */
RemoteServerEntity.prototype['s3_region'] = undefined;

/**
 * Remote server certificate
 * @member {module:model/RemoteServerEntity.ServerCertificateEnum} server_certificate
 */
RemoteServerEntity.prototype['server_certificate'] = undefined;

/**
 * Remote server SSH Host Key. If provided, we will require that the server host key matches the provided key. Uses OpenSSH format similar to what would go into ~/.ssh/known_hosts
 * @member {String} server_host_key
 */
RemoteServerEntity.prototype['server_host_key'] = undefined;

/**
 * Remote server type.
 * @member {module:model/RemoteServerEntity.ServerTypeEnum} server_type
 */
RemoteServerEntity.prototype['server_type'] = undefined;

/**
 * Should we require SSL?
 * @member {module:model/RemoteServerEntity.SslEnum} ssl
 */
RemoteServerEntity.prototype['ssl'] = undefined;

/**
 * Remote server username.  Not needed for S3 buckets.
 * @member {String} username
 */
RemoteServerEntity.prototype['username'] = undefined;

/**
 * Wasabi access key.
 * @member {String} wasabi_access_key
 */
RemoteServerEntity.prototype['wasabi_access_key'] = undefined;

/**
 * Wasabi Bucket name
 * @member {String} wasabi_bucket
 */
RemoteServerEntity.prototype['wasabi_bucket'] = undefined;

/**
 * Wasabi region
 * @member {String} wasabi_region
 */
RemoteServerEntity.prototype['wasabi_region'] = undefined;





/**
 * Allowed values for the <code>auth_status</code> property.
 * @enum {String}
 * @readonly
 */
RemoteServerEntity['AuthStatusEnum'] = {

    /**
     * value: "not_applicable"
     * @const
     */
    "not_applicable": "not_applicable",

    /**
     * value: "in_setup"
     * @const
     */
    "in_setup": "in_setup",

    /**
     * value: "complete"
     * @const
     */
    "complete": "complete",

    /**
     * value: "reauthenticate"
     * @const
     */
    "reauthenticate": "reauthenticate"
};


/**
 * Allowed values for the <code>files_agent_permission_set</code> property.
 * @enum {String}
 * @readonly
 */
RemoteServerEntity['FilesAgentPermissionSetEnum'] = {

    /**
     * value: "read_write"
     * @const
     */
    "read_write": "read_write",

    /**
     * value: "read_only"
     * @const
     */
    "read_only": "read_only",

    /**
     * value: "write_only"
     * @const
     */
    "write_only": "write_only"
};


/**
 * Allowed values for the <code>one_drive_account_type</code> property.
 * @enum {String}
 * @readonly
 */
RemoteServerEntity['OneDriveAccountTypeEnum'] = {

    /**
     * value: "personal"
     * @const
     */
    "personal": "personal",

    /**
     * value: "business_other"
     * @const
     */
    "business_other": "business_other"
};


/**
 * Allowed values for the <code>server_certificate</code> property.
 * @enum {String}
 * @readonly
 */
RemoteServerEntity['ServerCertificateEnum'] = {

    /**
     * value: "require_match"
     * @const
     */
    "require_match": "require_match",

    /**
     * value: "allow_any"
     * @const
     */
    "allow_any": "allow_any"
};


/**
 * Allowed values for the <code>server_type</code> property.
 * @enum {String}
 * @readonly
 */
RemoteServerEntity['ServerTypeEnum'] = {

    /**
     * value: "ftp"
     * @const
     */
    "ftp": "ftp",

    /**
     * value: "sftp"
     * @const
     */
    "sftp": "sftp",

    /**
     * value: "s3"
     * @const
     */
    "s3": "s3",

    /**
     * value: "google_cloud_storage"
     * @const
     */
    "google_cloud_storage": "google_cloud_storage",

    /**
     * value: "webdav"
     * @const
     */
    "webdav": "webdav",

    /**
     * value: "wasabi"
     * @const
     */
    "wasabi": "wasabi",

    /**
     * value: "backblaze_b2"
     * @const
     */
    "backblaze_b2": "backblaze_b2",

    /**
     * value: "one_drive"
     * @const
     */
    "one_drive": "one_drive",

    /**
     * value: "rackspace"
     * @const
     */
    "rackspace": "rackspace",

    /**
     * value: "box"
     * @const
     */
    "box": "box",

    /**
     * value: "dropbox"
     * @const
     */
    "dropbox": "dropbox",

    /**
     * value: "google_drive"
     * @const
     */
    "google_drive": "google_drive",

    /**
     * value: "azure"
     * @const
     */
    "azure": "azure",

    /**
     * value: "sharepoint"
     * @const
     */
    "sharepoint": "sharepoint",

    /**
     * value: "s3_compatible"
     * @const
     */
    "s3_compatible": "s3_compatible",

    /**
     * value: "azure_files"
     * @const
     */
    "azure_files": "azure_files",

    /**
     * value: "files_agent"
     * @const
     */
    "files_agent": "files_agent",

    /**
     * value: "filebase"
     * @const
     */
    "filebase": "filebase"
};


/**
 * Allowed values for the <code>ssl</code> property.
 * @enum {String}
 * @readonly
 */
RemoteServerEntity['SslEnum'] = {

    /**
     * value: "if_available"
     * @const
     */
    "if_available": "if_available",

    /**
     * value: "require"
     * @const
     */
    "require": "require",

    /**
     * value: "require_implicit"
     * @const
     */
    "require_implicit": "require_implicit",

    /**
     * value: "never"
     * @const
     */
    "never": "never"
};



export default RemoteServerEntity;

