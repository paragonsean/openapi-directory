/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SsoStrategyEntity model module.
 * @module model/SsoStrategyEntity
 * @version 0.0.1
 */
class SsoStrategyEntity {
    /**
     * Constructs a new <code>SsoStrategyEntity</code>.
     * List Sso Strategies
     * @alias module:model/SsoStrategyEntity
     */
    constructor() { 
        
        SsoStrategyEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SsoStrategyEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SsoStrategyEntity} obj Optional instance to populate.
     * @return {module:model/SsoStrategyEntity} The populated <code>SsoStrategyEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SsoStrategyEntity();

            if (data.hasOwnProperty('deprovision_behavior')) {
                obj['deprovision_behavior'] = ApiClient.convertToType(data['deprovision_behavior'], 'String');
            }
            if (data.hasOwnProperty('deprovision_groups')) {
                obj['deprovision_groups'] = ApiClient.convertToType(data['deprovision_groups'], 'Boolean');
            }
            if (data.hasOwnProperty('deprovision_users')) {
                obj['deprovision_users'] = ApiClient.convertToType(data['deprovision_users'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('ldap_base_dn')) {
                obj['ldap_base_dn'] = ApiClient.convertToType(data['ldap_base_dn'], 'String');
            }
            if (data.hasOwnProperty('ldap_domain')) {
                obj['ldap_domain'] = ApiClient.convertToType(data['ldap_domain'], 'String');
            }
            if (data.hasOwnProperty('ldap_host')) {
                obj['ldap_host'] = ApiClient.convertToType(data['ldap_host'], 'String');
            }
            if (data.hasOwnProperty('ldap_host_2')) {
                obj['ldap_host_2'] = ApiClient.convertToType(data['ldap_host_2'], 'String');
            }
            if (data.hasOwnProperty('ldap_host_3')) {
                obj['ldap_host_3'] = ApiClient.convertToType(data['ldap_host_3'], 'String');
            }
            if (data.hasOwnProperty('ldap_port')) {
                obj['ldap_port'] = ApiClient.convertToType(data['ldap_port'], 'Number');
            }
            if (data.hasOwnProperty('ldap_secure')) {
                obj['ldap_secure'] = ApiClient.convertToType(data['ldap_secure'], 'Boolean');
            }
            if (data.hasOwnProperty('ldap_username')) {
                obj['ldap_username'] = ApiClient.convertToType(data['ldap_username'], 'String');
            }
            if (data.hasOwnProperty('ldap_username_field')) {
                obj['ldap_username_field'] = ApiClient.convertToType(data['ldap_username_field'], 'String');
            }
            if (data.hasOwnProperty('logo_url')) {
                obj['logo_url'] = ApiClient.convertToType(data['logo_url'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('provision_attachments_permission')) {
                obj['provision_attachments_permission'] = ApiClient.convertToType(data['provision_attachments_permission'], 'Boolean');
            }
            if (data.hasOwnProperty('provision_company')) {
                obj['provision_company'] = ApiClient.convertToType(data['provision_company'], 'String');
            }
            if (data.hasOwnProperty('provision_dav_permission')) {
                obj['provision_dav_permission'] = ApiClient.convertToType(data['provision_dav_permission'], 'Boolean');
            }
            if (data.hasOwnProperty('provision_email_signup_groups')) {
                obj['provision_email_signup_groups'] = ApiClient.convertToType(data['provision_email_signup_groups'], 'String');
            }
            if (data.hasOwnProperty('provision_ftp_permission')) {
                obj['provision_ftp_permission'] = ApiClient.convertToType(data['provision_ftp_permission'], 'Boolean');
            }
            if (data.hasOwnProperty('provision_group_default')) {
                obj['provision_group_default'] = ApiClient.convertToType(data['provision_group_default'], 'String');
            }
            if (data.hasOwnProperty('provision_group_exclusion')) {
                obj['provision_group_exclusion'] = ApiClient.convertToType(data['provision_group_exclusion'], 'String');
            }
            if (data.hasOwnProperty('provision_group_inclusion')) {
                obj['provision_group_inclusion'] = ApiClient.convertToType(data['provision_group_inclusion'], 'String');
            }
            if (data.hasOwnProperty('provision_group_required')) {
                obj['provision_group_required'] = ApiClient.convertToType(data['provision_group_required'], 'String');
            }
            if (data.hasOwnProperty('provision_groups')) {
                obj['provision_groups'] = ApiClient.convertToType(data['provision_groups'], 'Boolean');
            }
            if (data.hasOwnProperty('provision_sftp_permission')) {
                obj['provision_sftp_permission'] = ApiClient.convertToType(data['provision_sftp_permission'], 'Boolean');
            }
            if (data.hasOwnProperty('provision_site_admin_groups')) {
                obj['provision_site_admin_groups'] = ApiClient.convertToType(data['provision_site_admin_groups'], 'String');
            }
            if (data.hasOwnProperty('provision_time_zone')) {
                obj['provision_time_zone'] = ApiClient.convertToType(data['provision_time_zone'], 'String');
            }
            if (data.hasOwnProperty('provision_users')) {
                obj['provision_users'] = ApiClient.convertToType(data['provision_users'], 'Boolean');
            }
            if (data.hasOwnProperty('saml_provider_cert_fingerprint')) {
                obj['saml_provider_cert_fingerprint'] = ApiClient.convertToType(data['saml_provider_cert_fingerprint'], 'String');
            }
            if (data.hasOwnProperty('saml_provider_issuer_url')) {
                obj['saml_provider_issuer_url'] = ApiClient.convertToType(data['saml_provider_issuer_url'], 'String');
            }
            if (data.hasOwnProperty('saml_provider_metadata_content')) {
                obj['saml_provider_metadata_content'] = ApiClient.convertToType(data['saml_provider_metadata_content'], 'String');
            }
            if (data.hasOwnProperty('saml_provider_metadata_url')) {
                obj['saml_provider_metadata_url'] = ApiClient.convertToType(data['saml_provider_metadata_url'], 'String');
            }
            if (data.hasOwnProperty('saml_provider_slo_target_url')) {
                obj['saml_provider_slo_target_url'] = ApiClient.convertToType(data['saml_provider_slo_target_url'], 'String');
            }
            if (data.hasOwnProperty('saml_provider_sso_target_url')) {
                obj['saml_provider_sso_target_url'] = ApiClient.convertToType(data['saml_provider_sso_target_url'], 'String');
            }
            if (data.hasOwnProperty('scim_authentication_method')) {
                obj['scim_authentication_method'] = ApiClient.convertToType(data['scim_authentication_method'], 'String');
            }
            if (data.hasOwnProperty('scim_oauth_access_token')) {
                obj['scim_oauth_access_token'] = ApiClient.convertToType(data['scim_oauth_access_token'], 'String');
            }
            if (data.hasOwnProperty('scim_oauth_access_token_expires_at')) {
                obj['scim_oauth_access_token_expires_at'] = ApiClient.convertToType(data['scim_oauth_access_token_expires_at'], 'String');
            }
            if (data.hasOwnProperty('scim_username')) {
                obj['scim_username'] = ApiClient.convertToType(data['scim_username'], 'String');
            }
            if (data.hasOwnProperty('subdomain')) {
                obj['subdomain'] = ApiClient.convertToType(data['subdomain'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SsoStrategyEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SsoStrategyEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deprovision_behavior'] && !(typeof data['deprovision_behavior'] === 'string' || data['deprovision_behavior'] instanceof String)) {
            throw new Error("Expected the field `deprovision_behavior` to be a primitive type in the JSON string but got " + data['deprovision_behavior']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['ldap_base_dn'] && !(typeof data['ldap_base_dn'] === 'string' || data['ldap_base_dn'] instanceof String)) {
            throw new Error("Expected the field `ldap_base_dn` to be a primitive type in the JSON string but got " + data['ldap_base_dn']);
        }
        // ensure the json data is a string
        if (data['ldap_domain'] && !(typeof data['ldap_domain'] === 'string' || data['ldap_domain'] instanceof String)) {
            throw new Error("Expected the field `ldap_domain` to be a primitive type in the JSON string but got " + data['ldap_domain']);
        }
        // ensure the json data is a string
        if (data['ldap_host'] && !(typeof data['ldap_host'] === 'string' || data['ldap_host'] instanceof String)) {
            throw new Error("Expected the field `ldap_host` to be a primitive type in the JSON string but got " + data['ldap_host']);
        }
        // ensure the json data is a string
        if (data['ldap_host_2'] && !(typeof data['ldap_host_2'] === 'string' || data['ldap_host_2'] instanceof String)) {
            throw new Error("Expected the field `ldap_host_2` to be a primitive type in the JSON string but got " + data['ldap_host_2']);
        }
        // ensure the json data is a string
        if (data['ldap_host_3'] && !(typeof data['ldap_host_3'] === 'string' || data['ldap_host_3'] instanceof String)) {
            throw new Error("Expected the field `ldap_host_3` to be a primitive type in the JSON string but got " + data['ldap_host_3']);
        }
        // ensure the json data is a string
        if (data['ldap_username'] && !(typeof data['ldap_username'] === 'string' || data['ldap_username'] instanceof String)) {
            throw new Error("Expected the field `ldap_username` to be a primitive type in the JSON string but got " + data['ldap_username']);
        }
        // ensure the json data is a string
        if (data['ldap_username_field'] && !(typeof data['ldap_username_field'] === 'string' || data['ldap_username_field'] instanceof String)) {
            throw new Error("Expected the field `ldap_username_field` to be a primitive type in the JSON string but got " + data['ldap_username_field']);
        }
        // ensure the json data is a string
        if (data['logo_url'] && !(typeof data['logo_url'] === 'string' || data['logo_url'] instanceof String)) {
            throw new Error("Expected the field `logo_url` to be a primitive type in the JSON string but got " + data['logo_url']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['provision_company'] && !(typeof data['provision_company'] === 'string' || data['provision_company'] instanceof String)) {
            throw new Error("Expected the field `provision_company` to be a primitive type in the JSON string but got " + data['provision_company']);
        }
        // ensure the json data is a string
        if (data['provision_email_signup_groups'] && !(typeof data['provision_email_signup_groups'] === 'string' || data['provision_email_signup_groups'] instanceof String)) {
            throw new Error("Expected the field `provision_email_signup_groups` to be a primitive type in the JSON string but got " + data['provision_email_signup_groups']);
        }
        // ensure the json data is a string
        if (data['provision_group_default'] && !(typeof data['provision_group_default'] === 'string' || data['provision_group_default'] instanceof String)) {
            throw new Error("Expected the field `provision_group_default` to be a primitive type in the JSON string but got " + data['provision_group_default']);
        }
        // ensure the json data is a string
        if (data['provision_group_exclusion'] && !(typeof data['provision_group_exclusion'] === 'string' || data['provision_group_exclusion'] instanceof String)) {
            throw new Error("Expected the field `provision_group_exclusion` to be a primitive type in the JSON string but got " + data['provision_group_exclusion']);
        }
        // ensure the json data is a string
        if (data['provision_group_inclusion'] && !(typeof data['provision_group_inclusion'] === 'string' || data['provision_group_inclusion'] instanceof String)) {
            throw new Error("Expected the field `provision_group_inclusion` to be a primitive type in the JSON string but got " + data['provision_group_inclusion']);
        }
        // ensure the json data is a string
        if (data['provision_group_required'] && !(typeof data['provision_group_required'] === 'string' || data['provision_group_required'] instanceof String)) {
            throw new Error("Expected the field `provision_group_required` to be a primitive type in the JSON string but got " + data['provision_group_required']);
        }
        // ensure the json data is a string
        if (data['provision_site_admin_groups'] && !(typeof data['provision_site_admin_groups'] === 'string' || data['provision_site_admin_groups'] instanceof String)) {
            throw new Error("Expected the field `provision_site_admin_groups` to be a primitive type in the JSON string but got " + data['provision_site_admin_groups']);
        }
        // ensure the json data is a string
        if (data['provision_time_zone'] && !(typeof data['provision_time_zone'] === 'string' || data['provision_time_zone'] instanceof String)) {
            throw new Error("Expected the field `provision_time_zone` to be a primitive type in the JSON string but got " + data['provision_time_zone']);
        }
        // ensure the json data is a string
        if (data['saml_provider_cert_fingerprint'] && !(typeof data['saml_provider_cert_fingerprint'] === 'string' || data['saml_provider_cert_fingerprint'] instanceof String)) {
            throw new Error("Expected the field `saml_provider_cert_fingerprint` to be a primitive type in the JSON string but got " + data['saml_provider_cert_fingerprint']);
        }
        // ensure the json data is a string
        if (data['saml_provider_issuer_url'] && !(typeof data['saml_provider_issuer_url'] === 'string' || data['saml_provider_issuer_url'] instanceof String)) {
            throw new Error("Expected the field `saml_provider_issuer_url` to be a primitive type in the JSON string but got " + data['saml_provider_issuer_url']);
        }
        // ensure the json data is a string
        if (data['saml_provider_metadata_content'] && !(typeof data['saml_provider_metadata_content'] === 'string' || data['saml_provider_metadata_content'] instanceof String)) {
            throw new Error("Expected the field `saml_provider_metadata_content` to be a primitive type in the JSON string but got " + data['saml_provider_metadata_content']);
        }
        // ensure the json data is a string
        if (data['saml_provider_metadata_url'] && !(typeof data['saml_provider_metadata_url'] === 'string' || data['saml_provider_metadata_url'] instanceof String)) {
            throw new Error("Expected the field `saml_provider_metadata_url` to be a primitive type in the JSON string but got " + data['saml_provider_metadata_url']);
        }
        // ensure the json data is a string
        if (data['saml_provider_slo_target_url'] && !(typeof data['saml_provider_slo_target_url'] === 'string' || data['saml_provider_slo_target_url'] instanceof String)) {
            throw new Error("Expected the field `saml_provider_slo_target_url` to be a primitive type in the JSON string but got " + data['saml_provider_slo_target_url']);
        }
        // ensure the json data is a string
        if (data['saml_provider_sso_target_url'] && !(typeof data['saml_provider_sso_target_url'] === 'string' || data['saml_provider_sso_target_url'] instanceof String)) {
            throw new Error("Expected the field `saml_provider_sso_target_url` to be a primitive type in the JSON string but got " + data['saml_provider_sso_target_url']);
        }
        // ensure the json data is a string
        if (data['scim_authentication_method'] && !(typeof data['scim_authentication_method'] === 'string' || data['scim_authentication_method'] instanceof String)) {
            throw new Error("Expected the field `scim_authentication_method` to be a primitive type in the JSON string but got " + data['scim_authentication_method']);
        }
        // ensure the json data is a string
        if (data['scim_oauth_access_token'] && !(typeof data['scim_oauth_access_token'] === 'string' || data['scim_oauth_access_token'] instanceof String)) {
            throw new Error("Expected the field `scim_oauth_access_token` to be a primitive type in the JSON string but got " + data['scim_oauth_access_token']);
        }
        // ensure the json data is a string
        if (data['scim_oauth_access_token_expires_at'] && !(typeof data['scim_oauth_access_token_expires_at'] === 'string' || data['scim_oauth_access_token_expires_at'] instanceof String)) {
            throw new Error("Expected the field `scim_oauth_access_token_expires_at` to be a primitive type in the JSON string but got " + data['scim_oauth_access_token_expires_at']);
        }
        // ensure the json data is a string
        if (data['scim_username'] && !(typeof data['scim_username'] === 'string' || data['scim_username'] instanceof String)) {
            throw new Error("Expected the field `scim_username` to be a primitive type in the JSON string but got " + data['scim_username']);
        }
        // ensure the json data is a string
        if (data['subdomain'] && !(typeof data['subdomain'] === 'string' || data['subdomain'] instanceof String)) {
            throw new Error("Expected the field `subdomain` to be a primitive type in the JSON string but got " + data['subdomain']);
        }

        return true;
    }


}



/**
 * Method used for deprovisioning users.
 * @member {module:model/SsoStrategyEntity.DeprovisionBehaviorEnum} deprovision_behavior
 */
SsoStrategyEntity.prototype['deprovision_behavior'] = undefined;

/**
 * Auto-deprovision group membership based on group memberships on the SSO side?
 * @member {Boolean} deprovision_groups
 */
SsoStrategyEntity.prototype['deprovision_groups'] = undefined;

/**
 * Auto-deprovision users?
 * @member {Boolean} deprovision_users
 */
SsoStrategyEntity.prototype['deprovision_users'] = undefined;

/**
 * Is strategy enabled?  This may become automatically set to `false` after a high number and duration of failures.
 * @member {Boolean} enabled
 */
SsoStrategyEntity.prototype['enabled'] = undefined;

/**
 * ID
 * @member {Number} id
 */
SsoStrategyEntity.prototype['id'] = undefined;

/**
 * Custom label for the SSO provider on the login page.
 * @member {String} label
 */
SsoStrategyEntity.prototype['label'] = undefined;

/**
 * Base DN for looking up users in LDAP server
 * @member {String} ldap_base_dn
 */
SsoStrategyEntity.prototype['ldap_base_dn'] = undefined;

/**
 * Domain name that will be appended to LDAP usernames
 * @member {String} ldap_domain
 */
SsoStrategyEntity.prototype['ldap_domain'] = undefined;

/**
 * LDAP host
 * @member {String} ldap_host
 */
SsoStrategyEntity.prototype['ldap_host'] = undefined;

/**
 * LDAP backup host
 * @member {String} ldap_host_2
 */
SsoStrategyEntity.prototype['ldap_host_2'] = undefined;

/**
 * LDAP backup host
 * @member {String} ldap_host_3
 */
SsoStrategyEntity.prototype['ldap_host_3'] = undefined;

/**
 * LDAP port
 * @member {Number} ldap_port
 */
SsoStrategyEntity.prototype['ldap_port'] = undefined;

/**
 * Use secure LDAP?
 * @member {Boolean} ldap_secure
 */
SsoStrategyEntity.prototype['ldap_secure'] = undefined;

/**
 * Username for signing in to LDAP server.
 * @member {String} ldap_username
 */
SsoStrategyEntity.prototype['ldap_username'] = undefined;

/**
 * LDAP username field
 * @member {module:model/SsoStrategyEntity.LdapUsernameFieldEnum} ldap_username_field
 */
SsoStrategyEntity.prototype['ldap_username_field'] = undefined;

/**
 * URL holding a custom logo for the SSO provider on the login page.
 * @member {String} logo_url
 */
SsoStrategyEntity.prototype['logo_url'] = undefined;

/**
 * SSO Protocol
 * @member {module:model/SsoStrategyEntity.ProtocolEnum} protocol
 */
SsoStrategyEntity.prototype['protocol'] = undefined;

/**
 * Provider name
 * @member {module:model/SsoStrategyEntity.ProviderEnum} provider
 */
SsoStrategyEntity.prototype['provider'] = undefined;

/**
 * DEPRECATED: Auto-provisioned users get Sharing permission. Use a Group with the Bundle permission instead.
 * @member {Boolean} provision_attachments_permission
 */
SsoStrategyEntity.prototype['provision_attachments_permission'] = undefined;

/**
 * Default company for auto provisioned users.
 * @member {String} provision_company
 */
SsoStrategyEntity.prototype['provision_company'] = undefined;

/**
 * Auto-provisioned users get WebDAV permission?
 * @member {Boolean} provision_dav_permission
 */
SsoStrategyEntity.prototype['provision_dav_permission'] = undefined;

/**
 * Comma-separated list of group names whose members will be created with email_signup authentication.
 * @member {String} provision_email_signup_groups
 */
SsoStrategyEntity.prototype['provision_email_signup_groups'] = undefined;

/**
 * Auto-provisioned users get FTP permission?
 * @member {Boolean} provision_ftp_permission
 */
SsoStrategyEntity.prototype['provision_ftp_permission'] = undefined;

/**
 * Comma-separated list of group names for groups to automatically add all auto-provisioned users to.
 * @member {String} provision_group_default
 */
SsoStrategyEntity.prototype['provision_group_default'] = undefined;

/**
 * Comma-separated list of group names for groups (with optional wildcards) that will be excluded from auto-provisioning.
 * @member {String} provision_group_exclusion
 */
SsoStrategyEntity.prototype['provision_group_exclusion'] = undefined;

/**
 * Comma-separated list of group names for groups (with optional wildcards) that will be auto-provisioned.
 * @member {String} provision_group_inclusion
 */
SsoStrategyEntity.prototype['provision_group_inclusion'] = undefined;

/**
 * Comma or newline separated list of group names (with optional wildcards) to require membership for user provisioning.
 * @member {String} provision_group_required
 */
SsoStrategyEntity.prototype['provision_group_required'] = undefined;

/**
 * Auto-provision group membership based on group memberships on the SSO side?
 * @member {Boolean} provision_groups
 */
SsoStrategyEntity.prototype['provision_groups'] = undefined;

/**
 * Auto-provisioned users get SFTP permission?
 * @member {Boolean} provision_sftp_permission
 */
SsoStrategyEntity.prototype['provision_sftp_permission'] = undefined;

/**
 * Comma-separated list of group names whose members will be created as Site Admins.
 * @member {String} provision_site_admin_groups
 */
SsoStrategyEntity.prototype['provision_site_admin_groups'] = undefined;

/**
 * Default time zone for auto provisioned users.
 * @member {String} provision_time_zone
 */
SsoStrategyEntity.prototype['provision_time_zone'] = undefined;

/**
 * Auto-provision users?
 * @member {Boolean} provision_users
 */
SsoStrategyEntity.prototype['provision_users'] = undefined;

/**
 * Identity provider sha256 cert fingerprint if saml_provider_metadata_url is not available.
 * @member {String} saml_provider_cert_fingerprint
 */
SsoStrategyEntity.prototype['saml_provider_cert_fingerprint'] = undefined;

/**
 * Identity provider issuer url
 * @member {String} saml_provider_issuer_url
 */
SsoStrategyEntity.prototype['saml_provider_issuer_url'] = undefined;

/**
 * Custom identity provider metadata
 * @member {String} saml_provider_metadata_content
 */
SsoStrategyEntity.prototype['saml_provider_metadata_content'] = undefined;

/**
 * Metadata URL for the SAML identity provider
 * @member {String} saml_provider_metadata_url
 */
SsoStrategyEntity.prototype['saml_provider_metadata_url'] = undefined;

/**
 * Identity provider SLO endpoint
 * @member {String} saml_provider_slo_target_url
 */
SsoStrategyEntity.prototype['saml_provider_slo_target_url'] = undefined;

/**
 * Identity provider SSO endpoint if saml_provider_metadata_url is not available.
 * @member {String} saml_provider_sso_target_url
 */
SsoStrategyEntity.prototype['saml_provider_sso_target_url'] = undefined;

/**
 * SCIM authentication type.
 * @member {module:model/SsoStrategyEntity.ScimAuthenticationMethodEnum} scim_authentication_method
 */
SsoStrategyEntity.prototype['scim_authentication_method'] = undefined;

/**
 * SCIM OAuth Access Token.
 * @member {String} scim_oauth_access_token
 */
SsoStrategyEntity.prototype['scim_oauth_access_token'] = undefined;

/**
 * SCIM OAuth Access Token Expiration Time.
 * @member {String} scim_oauth_access_token_expires_at
 */
SsoStrategyEntity.prototype['scim_oauth_access_token_expires_at'] = undefined;

/**
 * SCIM username.
 * @member {String} scim_username
 */
SsoStrategyEntity.prototype['scim_username'] = undefined;

/**
 * Subdomain
 * @member {String} subdomain
 */
SsoStrategyEntity.prototype['subdomain'] = undefined;





/**
 * Allowed values for the <code>deprovision_behavior</code> property.
 * @enum {String}
 * @readonly
 */
SsoStrategyEntity['DeprovisionBehaviorEnum'] = {

    /**
     * value: "disable"
     * @const
     */
    "disable": "disable",

    /**
     * value: "delete"
     * @const
     */
    "delete": "delete"
};


/**
 * Allowed values for the <code>ldap_username_field</code> property.
 * @enum {String}
 * @readonly
 */
SsoStrategyEntity['LdapUsernameFieldEnum'] = {

    /**
     * value: "sAMAccountName"
     * @const
     */
    "sAMAccountName": "sAMAccountName",

    /**
     * value: "userPrincipalName"
     * @const
     */
    "userPrincipalName": "userPrincipalName"
};


/**
 * Allowed values for the <code>protocol</code> property.
 * @enum {String}
 * @readonly
 */
SsoStrategyEntity['ProtocolEnum'] = {

    /**
     * value: "oauth2"
     * @const
     */
    "oauth2": "oauth2",

    /**
     * value: "_unused_openid2"
     * @const
     */
    "_unused_openid2": "_unused_openid2",

    /**
     * value: "saml"
     * @const
     */
    "saml": "saml",

    /**
     * value: "active_directory"
     * @const
     */
    "active_directory": "active_directory",

    /**
     * value: "open_ldap"
     * @const
     */
    "open_ldap": "open_ldap",

    /**
     * value: "scim"
     * @const
     */
    "scim": "scim"
};


/**
 * Allowed values for the <code>provider</code> property.
 * @enum {String}
 * @readonly
 */
SsoStrategyEntity['ProviderEnum'] = {

    /**
     * value: "google"
     * @const
     */
    "google": "google",

    /**
     * value: "auth0"
     * @const
     */
    "auth0": "auth0",

    /**
     * value: "okta"
     * @const
     */
    "okta": "okta",

    /**
     * value: "atlassian"
     * @const
     */
    "atlassian": "atlassian",

    /**
     * value: "azure"
     * @const
     */
    "azure": "azure",

    /**
     * value: "box"
     * @const
     */
    "box": "box",

    /**
     * value: "dropbox"
     * @const
     */
    "dropbox": "dropbox",

    /**
     * value: "slack"
     * @const
     */
    "slack": "slack",

    /**
     * value: "_unused_ubuntu"
     * @const
     */
    "_unused_ubuntu": "_unused_ubuntu",

    /**
     * value: "onelogin"
     * @const
     */
    "onelogin": "onelogin",

    /**
     * value: "saml"
     * @const
     */
    "saml": "saml",

    /**
     * value: "idaptive"
     * @const
     */
    "idaptive": "idaptive",

    /**
     * value: "ldap"
     * @const
     */
    "ldap": "ldap",

    /**
     * value: "scim"
     * @const
     */
    "scim": "scim"
};


/**
 * Allowed values for the <code>scim_authentication_method</code> property.
 * @enum {String}
 * @readonly
 */
SsoStrategyEntity['ScimAuthenticationMethodEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "basic"
     * @const
     */
    "basic": "basic",

    /**
     * value: "token"
     * @const
     */
    "token": "token"
};



export default SsoStrategyEntity;

