/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PreviewEntity from './PreviewEntity';

/**
 * The FileEntity model module.
 * @module model/FileEntity
 * @version 0.0.1
 */
class FileEntity {
    /**
     * Constructs a new <code>FileEntity</code>.
     * List Folders by path
     * @alias module:model/FileEntity
     */
    constructor() { 
        
        FileEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileEntity} obj Optional instance to populate.
     * @return {module:model/FileEntity} The populated <code>FileEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileEntity();

            if (data.hasOwnProperty('crc32')) {
                obj['crc32'] = ApiClient.convertToType(data['crc32'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('download_uri')) {
                obj['download_uri'] = ApiClient.convertToType(data['download_uri'], 'String');
            }
            if (data.hasOwnProperty('is_locked')) {
                obj['is_locked'] = ApiClient.convertToType(data['is_locked'], 'Boolean');
            }
            if (data.hasOwnProperty('md5')) {
                obj['md5'] = ApiClient.convertToType(data['md5'], 'String');
            }
            if (data.hasOwnProperty('mime_type')) {
                obj['mime_type'] = ApiClient.convertToType(data['mime_type'], 'String');
            }
            if (data.hasOwnProperty('mtime')) {
                obj['mtime'] = ApiClient.convertToType(data['mtime'], 'Date');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], 'String');
            }
            if (data.hasOwnProperty('preview')) {
                obj['preview'] = PreviewEntity.constructFromObject(data['preview']);
            }
            if (data.hasOwnProperty('preview_id')) {
                obj['preview_id'] = ApiClient.convertToType(data['preview_id'], 'Number');
            }
            if (data.hasOwnProperty('priority_color')) {
                obj['priority_color'] = ApiClient.convertToType(data['priority_color'], 'String');
            }
            if (data.hasOwnProperty('provided_mtime')) {
                obj['provided_mtime'] = ApiClient.convertToType(data['provided_mtime'], 'Date');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('subfolders_locked?')) {
                obj['subfolders_locked?'] = ApiClient.convertToType(data['subfolders_locked?'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['crc32'] && !(typeof data['crc32'] === 'string' || data['crc32'] instanceof String)) {
            throw new Error("Expected the field `crc32` to be a primitive type in the JSON string but got " + data['crc32']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['download_uri'] && !(typeof data['download_uri'] === 'string' || data['download_uri'] instanceof String)) {
            throw new Error("Expected the field `download_uri` to be a primitive type in the JSON string but got " + data['download_uri']);
        }
        // ensure the json data is a string
        if (data['md5'] && !(typeof data['md5'] === 'string' || data['md5'] instanceof String)) {
            throw new Error("Expected the field `md5` to be a primitive type in the JSON string but got " + data['md5']);
        }
        // ensure the json data is a string
        if (data['mime_type'] && !(typeof data['mime_type'] === 'string' || data['mime_type'] instanceof String)) {
            throw new Error("Expected the field `mime_type` to be a primitive type in the JSON string but got " + data['mime_type']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['permissions'] && !(typeof data['permissions'] === 'string' || data['permissions'] instanceof String)) {
            throw new Error("Expected the field `permissions` to be a primitive type in the JSON string but got " + data['permissions']);
        }
        // validate the optional field `preview`
        if (data['preview']) { // data not null
          PreviewEntity.validateJSON(data['preview']);
        }
        // ensure the json data is a string
        if (data['priority_color'] && !(typeof data['priority_color'] === 'string' || data['priority_color'] instanceof String)) {
            throw new Error("Expected the field `priority_color` to be a primitive type in the JSON string but got " + data['priority_color']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * File CRC32 checksum. This is sometimes delayed, so if you get a blank response, wait and try again.
 * @member {String} crc32
 */
FileEntity.prototype['crc32'] = undefined;

/**
 * File created date/time
 * @member {Date} created_at
 */
FileEntity.prototype['created_at'] = undefined;

/**
 * File/Folder display name
 * @member {String} display_name
 */
FileEntity.prototype['display_name'] = undefined;

/**
 * Link to download file. Provided only in response to a download request.
 * @member {String} download_uri
 */
FileEntity.prototype['download_uri'] = undefined;

/**
 * Is this folder locked and unable to be modified?
 * @member {Boolean} is_locked
 */
FileEntity.prototype['is_locked'] = undefined;

/**
 * File MD5 checksum. This is sometimes delayed, so if you get a blank response, wait and try again.
 * @member {String} md5
 */
FileEntity.prototype['md5'] = undefined;

/**
 * MIME Type.  This is determined by the filename extension and is not stored separately internally.
 * @member {String} mime_type
 */
FileEntity.prototype['mime_type'] = undefined;

/**
 * File last modified date/time, according to the server.  This is the timestamp of the last Files.com operation of the file, regardless of what modified timestamp was sent.
 * @member {Date} mtime
 */
FileEntity.prototype['mtime'] = undefined;

/**
 * File/Folder path
 * @member {String} path
 */
FileEntity.prototype['path'] = undefined;

/**
 * A short string representing the current user's permissions.  Can be `r`,`w`,`d`, `l` or any combination
 * @member {String} permissions
 */
FileEntity.prototype['permissions'] = undefined;

/**
 * @member {module:model/PreviewEntity} preview
 */
FileEntity.prototype['preview'] = undefined;

/**
 * File preview ID
 * @member {Number} preview_id
 */
FileEntity.prototype['preview_id'] = undefined;

/**
 * Bookmark/priority color of file/folder
 * @member {String} priority_color
 */
FileEntity.prototype['priority_color'] = undefined;

/**
 * File last modified date/time, according to the client who set it.  Files.com allows desktop, FTP, SFTP, and WebDAV clients to set modified at times.  This allows Desktop<->Cloud syncing to preserve modified at times.
 * @member {Date} provided_mtime
 */
FileEntity.prototype['provided_mtime'] = undefined;

/**
 * Region location
 * @member {String} region
 */
FileEntity.prototype['region'] = undefined;

/**
 * File/Folder size
 * @member {Number} size
 */
FileEntity.prototype['size'] = undefined;

/**
 * Are subfolders locked and unable to be modified?
 * @member {Boolean} subfolders_locked?
 */
FileEntity.prototype['subfolders_locked?'] = undefined;

/**
 * Type: `directory` or `file`.
 * @member {String} type
 */
FileEntity.prototype['type'] = undefined;






export default FileEntity;

