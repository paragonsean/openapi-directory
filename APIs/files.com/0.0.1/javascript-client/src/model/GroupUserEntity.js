/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GroupUserEntity model module.
 * @module model/GroupUserEntity
 * @version 0.0.1
 */
class GroupUserEntity {
    /**
     * Constructs a new <code>GroupUserEntity</code>.
     * Create Group User
     * @alias module:model/GroupUserEntity
     */
    constructor() { 
        
        GroupUserEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupUserEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupUserEntity} obj Optional instance to populate.
     * @return {module:model/GroupUserEntity} The populated <code>GroupUserEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupUserEntity();

            if (data.hasOwnProperty('admin')) {
                obj['admin'] = ApiClient.convertToType(data['admin'], 'Boolean');
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'Number');
            }
            if (data.hasOwnProperty('group_name')) {
                obj['group_name'] = ApiClient.convertToType(data['group_name'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('usernames')) {
                obj['usernames'] = ApiClient.convertToType(data['usernames'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupUserEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupUserEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['group_name'] && !(typeof data['group_name'] === 'string' || data['group_name'] instanceof String)) {
            throw new Error("Expected the field `group_name` to be a primitive type in the JSON string but got " + data['group_name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['usernames'])) {
            throw new Error("Expected the field `usernames` to be an array in the JSON data but got " + data['usernames']);
        }

        return true;
    }


}



/**
 * Is this user an administrator of this group?
 * @member {Boolean} admin
 */
GroupUserEntity.prototype['admin'] = undefined;

/**
 * Group ID
 * @member {Number} group_id
 */
GroupUserEntity.prototype['group_id'] = undefined;

/**
 * Group name
 * @member {String} group_name
 */
GroupUserEntity.prototype['group_name'] = undefined;

/**
 * User ID
 * @member {Number} user_id
 */
GroupUserEntity.prototype['user_id'] = undefined;

/**
 * A list of usernames for users in this group
 * @member {Array.<String>} usernames
 */
GroupUserEntity.prototype['usernames'] = undefined;






export default GroupUserEntity;

