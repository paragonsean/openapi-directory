/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IpAddressEntity model module.
 * @module model/IpAddressEntity
 * @version 0.0.1
 */
class IpAddressEntity {
    /**
     * Constructs a new <code>IpAddressEntity</code>.
     * List IP Addresses associated with the current site
     * @alias module:model/IpAddressEntity
     */
    constructor() { 
        
        IpAddressEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IpAddressEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IpAddressEntity} obj Optional instance to populate.
     * @return {module:model/IpAddressEntity} The populated <code>IpAddressEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IpAddressEntity();

            if (data.hasOwnProperty('associated_with')) {
                obj['associated_with'] = ApiClient.convertToType(data['associated_with'], 'String');
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('ip_addresses')) {
                obj['ip_addresses'] = ApiClient.convertToType(data['ip_addresses'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IpAddressEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IpAddressEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['associated_with'] && !(typeof data['associated_with'] === 'string' || data['associated_with'] instanceof String)) {
            throw new Error("Expected the field `associated_with` to be a primitive type in the JSON string but got " + data['associated_with']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ip_addresses'])) {
            throw new Error("Expected the field `ip_addresses` to be an array in the JSON data but got " + data['ip_addresses']);
        }

        return true;
    }


}



/**
 * The object that this public IP address list is associated with.
 * @member {String} associated_with
 */
IpAddressEntity.prototype['associated_with'] = undefined;

/**
 * Group ID
 * @member {Number} group_id
 */
IpAddressEntity.prototype['group_id'] = undefined;

/**
 * Unique label for list; used by Zapier and other integrations.
 * @member {String} id
 */
IpAddressEntity.prototype['id'] = undefined;

/**
 * A list of IP addresses.
 * @member {Array.<String>} ip_addresses
 */
IpAddressEntity.prototype['ip_addresses'] = undefined;






export default IpAddressEntity;

