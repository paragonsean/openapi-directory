/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoEntity from './AutoEntity';
import ErrorsEntity from './ErrorsEntity';

/**
 * The StatusEntity model module.
 * @module model/StatusEntity
 * @version 0.0.1
 */
class StatusEntity {
    /**
     * Constructs a new <code>StatusEntity</code>.
     * Test webhook.
     * @alias module:model/StatusEntity
     */
    constructor() { 
        
        StatusEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StatusEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatusEntity} obj Optional instance to populate.
     * @return {module:model/StatusEntity} The populated <code>StatusEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatusEntity();

            if (data.hasOwnProperty('clickwrap_body')) {
                obj['clickwrap_body'] = ApiClient.convertToType(data['clickwrap_body'], 'String');
            }
            if (data.hasOwnProperty('clickwrap_id')) {
                obj['clickwrap_id'] = ApiClient.convertToType(data['clickwrap_id'], 'Number');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'Number');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = AutoEntity.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [ErrorsEntity]);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatusEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatusEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clickwrap_body'] && !(typeof data['clickwrap_body'] === 'string' || data['clickwrap_body'] instanceof String)) {
            throw new Error("Expected the field `clickwrap_body` to be a primitive type in the JSON string but got " + data['clickwrap_body']);
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          AutoEntity.validateJSON(data['data']);
        }
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                ErrorsEntity.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Required Clickwrap body
 * @member {String} clickwrap_body
 */
StatusEntity.prototype['clickwrap_body'] = undefined;

/**
 * Required Clickwrap id
 * @member {Number} clickwrap_id
 */
StatusEntity.prototype['clickwrap_id'] = undefined;

/**
 * Status HTTP code
 * @member {Number} code
 */
StatusEntity.prototype['code'] = undefined;

/**
 * @member {module:model/AutoEntity} data
 */
StatusEntity.prototype['data'] = undefined;

/**
 * A list of api errors
 * @member {Array.<module:model/ErrorsEntity>} errors
 */
StatusEntity.prototype['errors'] = undefined;

/**
 * Error message
 * @member {String} message
 */
StatusEntity.prototype['message'] = undefined;

/**
 * Status message
 * @member {String} status
 */
StatusEntity.prototype['status'] = undefined;






export default StatusEntity;

