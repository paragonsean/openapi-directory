/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PatchFormFieldSetsFormFieldsInner from './PatchFormFieldSetsFormFieldsInner';

/**
 * The PostFormFieldSets model module.
 * @module model/PostFormFieldSets
 * @version 0.0.1
 */
class PostFormFieldSets {
    /**
     * Constructs a new <code>PostFormFieldSets</code>.
     * Create Form Field Set
     * @alias module:model/PostFormFieldSets
     */
    constructor() { 
        
        PostFormFieldSets.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostFormFieldSets</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostFormFieldSets} obj Optional instance to populate.
     * @return {module:model/PostFormFieldSets} The populated <code>PostFormFieldSets</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostFormFieldSets();

            if (data.hasOwnProperty('form_fields')) {
                obj['form_fields'] = ApiClient.convertToType(data['form_fields'], [PatchFormFieldSetsFormFieldsInner]);
            }
            if (data.hasOwnProperty('skip_company')) {
                obj['skip_company'] = ApiClient.convertToType(data['skip_company'], 'Boolean');
            }
            if (data.hasOwnProperty('skip_email')) {
                obj['skip_email'] = ApiClient.convertToType(data['skip_email'], 'Boolean');
            }
            if (data.hasOwnProperty('skip_name')) {
                obj['skip_name'] = ApiClient.convertToType(data['skip_name'], 'Boolean');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostFormFieldSets</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostFormFieldSets</code>.
     */
    static validateJSON(data) {
        if (data['form_fields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['form_fields'])) {
                throw new Error("Expected the field `form_fields` to be an array in the JSON data but got " + data['form_fields']);
            }
            // validate the optional field `form_fields` (array)
            for (const item of data['form_fields']) {
                PatchFormFieldSetsFormFieldsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/PatchFormFieldSetsFormFieldsInner>} form_fields
 */
PostFormFieldSets.prototype['form_fields'] = undefined;

/**
 * Skip validating company
 * @member {Boolean} skip_company
 */
PostFormFieldSets.prototype['skip_company'] = undefined;

/**
 * Skip validating form email
 * @member {Boolean} skip_email
 */
PostFormFieldSets.prototype['skip_email'] = undefined;

/**
 * Skip validating form name
 * @member {Boolean} skip_name
 */
PostFormFieldSets.prototype['skip_name'] = undefined;

/**
 * Title to be displayed
 * @member {String} title
 */
PostFormFieldSets.prototype['title'] = undefined;

/**
 * User ID.  Provide a value of `0` to operate the current session's user.
 * @member {Number} user_id
 */
PostFormFieldSets.prototype['user_id'] = undefined;






export default PostFormFieldSets;

