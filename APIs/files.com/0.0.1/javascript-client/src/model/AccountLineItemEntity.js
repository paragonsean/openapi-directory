/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvoiceLineItemEntity from './InvoiceLineItemEntity';
import PaymentLineItemEntity from './PaymentLineItemEntity';

/**
 * The AccountLineItemEntity model module.
 * @module model/AccountLineItemEntity
 * @version 0.0.1
 */
class AccountLineItemEntity {
    /**
     * Constructs a new <code>AccountLineItemEntity</code>.
     * List Payments
     * @alias module:model/AccountLineItemEntity
     */
    constructor() { 
        
        AccountLineItemEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountLineItemEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountLineItemEntity} obj Optional instance to populate.
     * @return {module:model/AccountLineItemEntity} The populated <code>AccountLineItemEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountLineItemEntity();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('download_uri')) {
                obj['download_uri'] = ApiClient.convertToType(data['download_uri'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('invoice_line_items')) {
                obj['invoice_line_items'] = ApiClient.convertToType(data['invoice_line_items'], [InvoiceLineItemEntity]);
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('payment_line_items')) {
                obj['payment_line_items'] = ApiClient.convertToType(data['payment_line_items'], [PaymentLineItemEntity]);
            }
            if (data.hasOwnProperty('payment_reversed_at')) {
                obj['payment_reversed_at'] = ApiClient.convertToType(data['payment_reversed_at'], 'Date');
            }
            if (data.hasOwnProperty('payment_type')) {
                obj['payment_type'] = ApiClient.convertToType(data['payment_type'], 'String');
            }
            if (data.hasOwnProperty('site_name')) {
                obj['site_name'] = ApiClient.convertToType(data['site_name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountLineItemEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountLineItemEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['download_uri'] && !(typeof data['download_uri'] === 'string' || data['download_uri'] instanceof String)) {
            throw new Error("Expected the field `download_uri` to be a primitive type in the JSON string but got " + data['download_uri']);
        }
        if (data['invoice_line_items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['invoice_line_items'])) {
                throw new Error("Expected the field `invoice_line_items` to be an array in the JSON data but got " + data['invoice_line_items']);
            }
            // validate the optional field `invoice_line_items` (array)
            for (const item of data['invoice_line_items']) {
                InvoiceLineItemEntity.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        if (data['payment_line_items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['payment_line_items'])) {
                throw new Error("Expected the field `payment_line_items` to be an array in the JSON data but got " + data['payment_line_items']);
            }
            // validate the optional field `payment_line_items` (array)
            for (const item of data['payment_line_items']) {
                PaymentLineItemEntity.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['payment_type'] && !(typeof data['payment_type'] === 'string' || data['payment_type'] instanceof String)) {
            throw new Error("Expected the field `payment_type` to be a primitive type in the JSON string but got " + data['payment_type']);
        }
        // ensure the json data is a string
        if (data['site_name'] && !(typeof data['site_name'] === 'string' || data['site_name'] instanceof String)) {
            throw new Error("Expected the field `site_name` to be a primitive type in the JSON string but got " + data['site_name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Line item amount
 * @member {Number} amount
 */
AccountLineItemEntity.prototype['amount'] = undefined;

/**
 * Line item balance
 * @member {Number} balance
 */
AccountLineItemEntity.prototype['balance'] = undefined;

/**
 * Line item created at
 * @member {Date} created_at
 */
AccountLineItemEntity.prototype['created_at'] = undefined;

/**
 * Line item currency
 * @member {String} currency
 */
AccountLineItemEntity.prototype['currency'] = undefined;

/**
 * Line item download uri
 * @member {String} download_uri
 */
AccountLineItemEntity.prototype['download_uri'] = undefined;

/**
 * Line item Id
 * @member {Number} id
 */
AccountLineItemEntity.prototype['id'] = undefined;

/**
 * Associated invoice line items
 * @member {Array.<module:model/InvoiceLineItemEntity>} invoice_line_items
 */
AccountLineItemEntity.prototype['invoice_line_items'] = undefined;

/**
 * Line item payment method
 * @member {String} method
 */
AccountLineItemEntity.prototype['method'] = undefined;

/**
 * Associated payment line items
 * @member {Array.<module:model/PaymentLineItemEntity>} payment_line_items
 */
AccountLineItemEntity.prototype['payment_line_items'] = undefined;

/**
 * Date/time payment was reversed if applicable
 * @member {Date} payment_reversed_at
 */
AccountLineItemEntity.prototype['payment_reversed_at'] = undefined;

/**
 * Type of payment if applicable
 * @member {String} payment_type
 */
AccountLineItemEntity.prototype['payment_type'] = undefined;

/**
 * Site name this line item is for
 * @member {String} site_name
 */
AccountLineItemEntity.prototype['site_name'] = undefined;

/**
 * Type of line item, either payment or invoice
 * @member {String} type
 */
AccountLineItemEntity.prototype['type'] = undefined;

/**
 * Line item updated at
 * @member {Date} updated_at
 */
AccountLineItemEntity.prototype['updated_at'] = undefined;






export default AccountLineItemEntity;

