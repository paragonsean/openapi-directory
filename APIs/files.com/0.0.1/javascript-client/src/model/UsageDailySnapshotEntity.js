/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UsageDailySnapshotEntity model module.
 * @module model/UsageDailySnapshotEntity
 * @version 0.0.1
 */
class UsageDailySnapshotEntity {
    /**
     * Constructs a new <code>UsageDailySnapshotEntity</code>.
     * List Usage Daily Snapshots
     * @alias module:model/UsageDailySnapshotEntity
     */
    constructor() { 
        
        UsageDailySnapshotEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UsageDailySnapshotEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsageDailySnapshotEntity} obj Optional instance to populate.
     * @return {module:model/UsageDailySnapshotEntity} The populated <code>UsageDailySnapshotEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsageDailySnapshotEntity();

            if (data.hasOwnProperty('api_usage_available')) {
                obj['api_usage_available'] = ApiClient.convertToType(data['api_usage_available'], 'Boolean');
            }
            if (data.hasOwnProperty('current_storage')) {
                obj['current_storage'] = ApiClient.convertToType(data['current_storage'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('deleted_files_counted_in_minimum')) {
                obj['deleted_files_counted_in_minimum'] = ApiClient.convertToType(data['deleted_files_counted_in_minimum'], 'Number');
            }
            if (data.hasOwnProperty('deleted_files_storage')) {
                obj['deleted_files_storage'] = ApiClient.convertToType(data['deleted_files_storage'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('read_api_usage')) {
                obj['read_api_usage'] = ApiClient.convertToType(data['read_api_usage'], 'Number');
            }
            if (data.hasOwnProperty('root_storage')) {
                obj['root_storage'] = ApiClient.convertToType(data['root_storage'], 'Number');
            }
            if (data.hasOwnProperty('usage_by_top_level_dir')) {
                obj['usage_by_top_level_dir'] = ApiClient.convertToType(data['usage_by_top_level_dir'], Object);
            }
            if (data.hasOwnProperty('user_count')) {
                obj['user_count'] = ApiClient.convertToType(data['user_count'], 'Number');
            }
            if (data.hasOwnProperty('write_api_usage')) {
                obj['write_api_usage'] = ApiClient.convertToType(data['write_api_usage'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsageDailySnapshotEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsageDailySnapshotEntity</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * True if the API usage fields `read_api_usage` and `write_api_usage` can be relied upon.  If this is false, we suggest hiding that value from any UI.
 * @member {Boolean} api_usage_available
 */
UsageDailySnapshotEntity.prototype['api_usage_available'] = undefined;

/**
 * GB of Files Native Storage used on this day.
 * @member {Number} current_storage
 */
UsageDailySnapshotEntity.prototype['current_storage'] = undefined;

/**
 * The date of this usage record
 * @member {Date} date
 */
UsageDailySnapshotEntity.prototype['date'] = undefined;

/**
 * GB of Files Native Storage used on this day for files that have been permanently deleted but were uploaded less than 30 days ago, and are still billable.
 * @member {Number} deleted_files_counted_in_minimum
 */
UsageDailySnapshotEntity.prototype['deleted_files_counted_in_minimum'] = undefined;

/**
 * GB of Files Native Storage used on this day for files that have been deleted and are stored as backups.
 * @member {Number} deleted_files_storage
 */
UsageDailySnapshotEntity.prototype['deleted_files_storage'] = undefined;

/**
 * ID of the usage record
 * @member {Number} id
 */
UsageDailySnapshotEntity.prototype['id'] = undefined;

/**
 * Read API Calls used on this day. Note: only updated for days before the current day.
 * @member {Number} read_api_usage
 */
UsageDailySnapshotEntity.prototype['read_api_usage'] = undefined;

/**
 * GB of Files Native Storage used for the root folder.  Included here because this value will not be part of `usage_by_top_level_dir`
 * @member {Number} root_storage
 */
UsageDailySnapshotEntity.prototype['root_storage'] = undefined;

/**
 * Usage broken down by each top-level folder
 * @member {Object} usage_by_top_level_dir
 */
UsageDailySnapshotEntity.prototype['usage_by_top_level_dir'] = undefined;

/**
 * Number of billable users as of this day.
 * @member {Number} user_count
 */
UsageDailySnapshotEntity.prototype['user_count'] = undefined;

/**
 * Write API Calls used on this day. Note: only updated for days before the current day.
 * @member {Number} write_api_usage
 */
UsageDailySnapshotEntity.prototype['write_api_usage'] = undefined;






export default UsageDailySnapshotEntity;

