/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActionEntity model module.
 * @module model/ActionEntity
 * @version 0.0.1
 */
class ActionEntity {
    /**
     * Constructs a new <code>ActionEntity</code>.
     * List site full action history.
     * @alias module:model/ActionEntity
     */
    constructor() { 
        
        ActionEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActionEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionEntity} obj Optional instance to populate.
     * @return {module:model/ActionEntity} The populated <code>ActionEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionEntity();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('failure_type')) {
                obj['failure_type'] = ApiClient.convertToType(data['failure_type'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('interface')) {
                obj['interface'] = ApiClient.convertToType(data['interface'], 'String');
            }
            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('targets')) {
                obj['targets'] = ApiClient.convertToType(data['targets'], [Object]);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('when')) {
                obj['when'] = ApiClient.convertToType(data['when'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        // ensure the json data is a string
        if (data['failure_type'] && !(typeof data['failure_type'] === 'string' || data['failure_type'] instanceof String)) {
            throw new Error("Expected the field `failure_type` to be a primitive type in the JSON string but got " + data['failure_type']);
        }
        // ensure the json data is a string
        if (data['interface'] && !(typeof data['interface'] === 'string' || data['interface'] instanceof String)) {
            throw new Error("Expected the field `interface` to be a primitive type in the JSON string but got " + data['interface']);
        }
        // ensure the json data is a string
        if (data['ip'] && !(typeof data['ip'] === 'string' || data['ip'] instanceof String)) {
            throw new Error("Expected the field `ip` to be a primitive type in the JSON string but got " + data['ip']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targets'])) {
            throw new Error("Expected the field `targets` to be an array in the JSON data but got " + data['targets']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * Type of action
 * @member {module:model/ActionEntity.ActionEnum} action
 */
ActionEntity.prototype['action'] = undefined;

/**
 * The destination path for this action, if applicable
 * @member {String} destination
 */
ActionEntity.prototype['destination'] = undefined;

/**
 * Friendly displayed output
 * @member {String} display
 */
ActionEntity.prototype['display'] = undefined;

/**
 * Failure type.  If action was a user login or session failure, why did it fail?
 * @member {module:model/ActionEntity.FailureTypeEnum} failure_type
 */
ActionEntity.prototype['failure_type'] = undefined;

/**
 * Action ID
 * @member {Number} id
 */
ActionEntity.prototype['id'] = undefined;

/**
 * Interface on which this action occurred.
 * @member {module:model/ActionEntity.InterfaceEnum} interface
 */
ActionEntity.prototype['interface'] = undefined;

/**
 * IP Address that performed this action
 * @member {String} ip
 */
ActionEntity.prototype['ip'] = undefined;

/**
 * Path
 * @member {String} path
 */
ActionEntity.prototype['path'] = undefined;

/**
 * The source path for this action, if applicable
 * @member {String} source
 */
ActionEntity.prototype['source'] = undefined;

/**
 * Targets
 * @member {Array.<Object>} targets
 */
ActionEntity.prototype['targets'] = undefined;

/**
 * User ID
 * @member {Number} user_id
 */
ActionEntity.prototype['user_id'] = undefined;

/**
 * Username
 * @member {String} username
 */
ActionEntity.prototype['username'] = undefined;

/**
 * Action occurrence date/time
 * @member {Date} when
 */
ActionEntity.prototype['when'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
ActionEntity['ActionEnum'] = {

    /**
     * value: "create"
     * @const
     */
    "create": "create",

    /**
     * value: "read"
     * @const
     */
    "read": "read",

    /**
     * value: "update"
     * @const
     */
    "update": "update",

    /**
     * value: "destroy"
     * @const
     */
    "destroy": "destroy",

    /**
     * value: "move"
     * @const
     */
    "move": "move",

    /**
     * value: "login"
     * @const
     */
    "login": "login",

    /**
     * value: "failedlogin"
     * @const
     */
    "failedlogin": "failedlogin",

    /**
     * value: "copy"
     * @const
     */
    "copy": "copy",

    /**
     * value: "user_create"
     * @const
     */
    "user_create": "user_create",

    /**
     * value: "user_update"
     * @const
     */
    "user_update": "user_update",

    /**
     * value: "user_destroy"
     * @const
     */
    "user_destroy": "user_destroy",

    /**
     * value: "group_create"
     * @const
     */
    "group_create": "group_create",

    /**
     * value: "group_update"
     * @const
     */
    "group_update": "group_update",

    /**
     * value: "group_destroy"
     * @const
     */
    "group_destroy": "group_destroy",

    /**
     * value: "permission_create"
     * @const
     */
    "permission_create": "permission_create",

    /**
     * value: "permission_destroy"
     * @const
     */
    "permission_destroy": "permission_destroy",

    /**
     * value: "api_key_create"
     * @const
     */
    "api_key_create": "api_key_create",

    /**
     * value: "api_key_update"
     * @const
     */
    "api_key_update": "api_key_update",

    /**
     * value: "api_key_destroy"
     * @const
     */
    "api_key_destroy": "api_key_destroy"
};


/**
 * Allowed values for the <code>failure_type</code> property.
 * @enum {String}
 * @readonly
 */
ActionEntity['FailureTypeEnum'] = {

    /**
     * value: "expired_trial"
     * @const
     */
    "expired_trial": "expired_trial",

    /**
     * value: "account_overdue"
     * @const
     */
    "account_overdue": "account_overdue",

    /**
     * value: "locked_out"
     * @const
     */
    "locked_out": "locked_out",

    /**
     * value: "ip_mismatch"
     * @const
     */
    "ip_mismatch": "ip_mismatch",

    /**
     * value: "password_mismatch"
     * @const
     */
    "password_mismatch": "password_mismatch",

    /**
     * value: "site_mismatch"
     * @const
     */
    "site_mismatch": "site_mismatch",

    /**
     * value: "username_not_found"
     * @const
     */
    "username_not_found": "username_not_found",

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "no_ftp_permission"
     * @const
     */
    "no_ftp_permission": "no_ftp_permission",

    /**
     * value: "no_web_permission"
     * @const
     */
    "no_web_permission": "no_web_permission",

    /**
     * value: "no_directory"
     * @const
     */
    "no_directory": "no_directory",

    /**
     * value: "errno_enoent"
     * @const
     */
    "errno_enoent": "errno_enoent",

    /**
     * value: "no_sftp_permission"
     * @const
     */
    "no_sftp_permission": "no_sftp_permission",

    /**
     * value: "no_dav_permission"
     * @const
     */
    "no_dav_permission": "no_dav_permission",

    /**
     * value: "no_restapi_permission"
     * @const
     */
    "no_restapi_permission": "no_restapi_permission",

    /**
     * value: "key_mismatch"
     * @const
     */
    "key_mismatch": "key_mismatch",

    /**
     * value: "region_mismatch"
     * @const
     */
    "region_mismatch": "region_mismatch",

    /**
     * value: "expired_access"
     * @const
     */
    "expired_access": "expired_access",

    /**
     * value: "desktop_ip_mismatch"
     * @const
     */
    "desktop_ip_mismatch": "desktop_ip_mismatch",

    /**
     * value: "desktop_api_key_not_used_quickly_enough"
     * @const
     */
    "desktop_api_key_not_used_quickly_enough": "desktop_api_key_not_used_quickly_enough",

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",

    /**
     * value: "country_mismatch"
     * @const
     */
    "country_mismatch": "country_mismatch"
};


/**
 * Allowed values for the <code>interface</code> property.
 * @enum {String}
 * @readonly
 */
ActionEntity['InterfaceEnum'] = {

    /**
     * value: "web"
     * @const
     */
    "web": "web",

    /**
     * value: "ftp"
     * @const
     */
    "ftp": "ftp",

    /**
     * value: "robot"
     * @const
     */
    "robot": "robot",

    /**
     * value: "jsapi"
     * @const
     */
    "jsapi": "jsapi",

    /**
     * value: "webdesktopapi"
     * @const
     */
    "webdesktopapi": "webdesktopapi",

    /**
     * value: "sftp"
     * @const
     */
    "sftp": "sftp",

    /**
     * value: "dav"
     * @const
     */
    "dav": "dav",

    /**
     * value: "desktop"
     * @const
     */
    "desktop": "desktop",

    /**
     * value: "restapi"
     * @const
     */
    "restapi": "restapi",

    /**
     * value: "scim"
     * @const
     */
    "scim": "scim",

    /**
     * value: "office"
     * @const
     */
    "office": "office",

    /**
     * value: "mobile"
     * @const
     */
    "mobile": "mobile",

    /**
     * value: "as2"
     * @const
     */
    "as2": "as2",

    /**
     * value: "inbound_email"
     * @const
     */
    "inbound_email": "inbound_email",

    /**
     * value: "remote"
     * @const
     */
    "remote": "remote"
};



export default ActionEntity;

