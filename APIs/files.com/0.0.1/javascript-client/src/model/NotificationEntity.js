/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NotificationEntity model module.
 * @module model/NotificationEntity
 * @version 0.0.1
 */
class NotificationEntity {
    /**
     * Constructs a new <code>NotificationEntity</code>.
     * List Notifications
     * @alias module:model/NotificationEntity
     */
    constructor() { 
        
        NotificationEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NotificationEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationEntity} obj Optional instance to populate.
     * @return {module:model/NotificationEntity} The populated <code>NotificationEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationEntity();

            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'Number');
            }
            if (data.hasOwnProperty('group_name')) {
                obj['group_name'] = ApiClient.convertToType(data['group_name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('notify_on_copy')) {
                obj['notify_on_copy'] = ApiClient.convertToType(data['notify_on_copy'], 'Boolean');
            }
            if (data.hasOwnProperty('notify_on_delete')) {
                obj['notify_on_delete'] = ApiClient.convertToType(data['notify_on_delete'], 'Boolean');
            }
            if (data.hasOwnProperty('notify_on_download')) {
                obj['notify_on_download'] = ApiClient.convertToType(data['notify_on_download'], 'Boolean');
            }
            if (data.hasOwnProperty('notify_on_move')) {
                obj['notify_on_move'] = ApiClient.convertToType(data['notify_on_move'], 'Boolean');
            }
            if (data.hasOwnProperty('notify_on_upload')) {
                obj['notify_on_upload'] = ApiClient.convertToType(data['notify_on_upload'], 'Boolean');
            }
            if (data.hasOwnProperty('notify_user_actions')) {
                obj['notify_user_actions'] = ApiClient.convertToType(data['notify_user_actions'], 'Boolean');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('recursive')) {
                obj['recursive'] = ApiClient.convertToType(data['recursive'], 'Boolean');
            }
            if (data.hasOwnProperty('send_interval')) {
                obj['send_interval'] = ApiClient.convertToType(data['send_interval'], 'String');
            }
            if (data.hasOwnProperty('suppressed_email')) {
                obj['suppressed_email'] = ApiClient.convertToType(data['suppressed_email'], 'Boolean');
            }
            if (data.hasOwnProperty('trigger_by_share_recipients')) {
                obj['trigger_by_share_recipients'] = ApiClient.convertToType(data['trigger_by_share_recipients'], 'Boolean');
            }
            if (data.hasOwnProperty('triggering_filenames')) {
                obj['triggering_filenames'] = ApiClient.convertToType(data['triggering_filenames'], ['String']);
            }
            if (data.hasOwnProperty('triggering_group_ids')) {
                obj['triggering_group_ids'] = ApiClient.convertToType(data['triggering_group_ids'], ['Number']);
            }
            if (data.hasOwnProperty('triggering_user_ids')) {
                obj['triggering_user_ids'] = ApiClient.convertToType(data['triggering_user_ids'], ['Number']);
            }
            if (data.hasOwnProperty('unsubscribed')) {
                obj['unsubscribed'] = ApiClient.convertToType(data['unsubscribed'], 'Boolean');
            }
            if (data.hasOwnProperty('unsubscribed_reason')) {
                obj['unsubscribed_reason'] = ApiClient.convertToType(data['unsubscribed_reason'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['group_name'] && !(typeof data['group_name'] === 'string' || data['group_name'] instanceof String)) {
            throw new Error("Expected the field `group_name` to be a primitive type in the JSON string but got " + data['group_name']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['send_interval'] && !(typeof data['send_interval'] === 'string' || data['send_interval'] instanceof String)) {
            throw new Error("Expected the field `send_interval` to be a primitive type in the JSON string but got " + data['send_interval']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['triggering_filenames'])) {
            throw new Error("Expected the field `triggering_filenames` to be an array in the JSON data but got " + data['triggering_filenames']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['triggering_group_ids'])) {
            throw new Error("Expected the field `triggering_group_ids` to be an array in the JSON data but got " + data['triggering_group_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['triggering_user_ids'])) {
            throw new Error("Expected the field `triggering_user_ids` to be an array in the JSON data but got " + data['triggering_user_ids']);
        }
        // ensure the json data is a string
        if (data['unsubscribed_reason'] && !(typeof data['unsubscribed_reason'] === 'string' || data['unsubscribed_reason'] instanceof String)) {
            throw new Error("Expected the field `unsubscribed_reason` to be a primitive type in the JSON string but got " + data['unsubscribed_reason']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * Notification group id
 * @member {Number} group_id
 */
NotificationEntity.prototype['group_id'] = undefined;

/**
 * Group name if applicable
 * @member {String} group_name
 */
NotificationEntity.prototype['group_name'] = undefined;

/**
 * Notification ID
 * @member {Number} id
 */
NotificationEntity.prototype['id'] = undefined;

/**
 * Custom message to include in notification emails.
 * @member {String} message
 */
NotificationEntity.prototype['message'] = undefined;

/**
 * Triggers notification when copying files to this path
 * @member {Boolean} notify_on_copy
 */
NotificationEntity.prototype['notify_on_copy'] = undefined;

/**
 * Triggers notification when deleting files from this path
 * @member {Boolean} notify_on_delete
 */
NotificationEntity.prototype['notify_on_delete'] = undefined;

/**
 * Triggers notification when downloading files from this path
 * @member {Boolean} notify_on_download
 */
NotificationEntity.prototype['notify_on_download'] = undefined;

/**
 * Triggers notification when moving files to this path
 * @member {Boolean} notify_on_move
 */
NotificationEntity.prototype['notify_on_move'] = undefined;

/**
 * Triggers notification when uploading new files to this path
 * @member {Boolean} notify_on_upload
 */
NotificationEntity.prototype['notify_on_upload'] = undefined;

/**
 * Trigger notification on notification user actions?
 * @member {Boolean} notify_user_actions
 */
NotificationEntity.prototype['notify_user_actions'] = undefined;

/**
 * Folder path to notify on
 * @member {String} path
 */
NotificationEntity.prototype['path'] = undefined;

/**
 * Enable notifications for each subfolder in this path
 * @member {Boolean} recursive
 */
NotificationEntity.prototype['recursive'] = undefined;

/**
 * The time interval that notifications are aggregated to
 * @member {module:model/NotificationEntity.SendIntervalEnum} send_interval
 */
NotificationEntity.prototype['send_interval'] = undefined;

/**
 * If true, it means that the recipient at this user's email address has manually unsubscribed from all emails, or had their email \"hard bounce\", which means that we are unable to send mail to this user's current email address. Notifications will resume if the user changes their email address.
 * @member {Boolean} suppressed_email
 */
NotificationEntity.prototype['suppressed_email'] = undefined;

/**
 * Notify when actions are performed by a share recipient?
 * @member {Boolean} trigger_by_share_recipients
 */
NotificationEntity.prototype['trigger_by_share_recipients'] = undefined;

/**
 * Array of filenames (possibly with wildcards) to match for action path
 * @member {Array.<String>} triggering_filenames
 */
NotificationEntity.prototype['triggering_filenames'] = undefined;

/**
 * Only notify on actions made by a member of one of the specified groups
 * @member {Array.<Number>} triggering_group_ids
 */
NotificationEntity.prototype['triggering_group_ids'] = undefined;

/**
 * Only notify on actions made one of the specified users
 * @member {Array.<Number>} triggering_user_ids
 */
NotificationEntity.prototype['triggering_user_ids'] = undefined;

/**
 * Is the user unsubscribed from this notification?
 * @member {Boolean} unsubscribed
 */
NotificationEntity.prototype['unsubscribed'] = undefined;

/**
 * The reason that the user unsubscribed
 * @member {module:model/NotificationEntity.UnsubscribedReasonEnum} unsubscribed_reason
 */
NotificationEntity.prototype['unsubscribed_reason'] = undefined;

/**
 * Notification user ID
 * @member {Number} user_id
 */
NotificationEntity.prototype['user_id'] = undefined;

/**
 * Notification username
 * @member {String} username
 */
NotificationEntity.prototype['username'] = undefined;





/**
 * Allowed values for the <code>send_interval</code> property.
 * @enum {String}
 * @readonly
 */
NotificationEntity['SendIntervalEnum'] = {

    /**
     * value: "five_minutes"
     * @const
     */
    "five_minutes": "five_minutes",

    /**
     * value: "fifteen_minutes"
     * @const
     */
    "fifteen_minutes": "fifteen_minutes",

    /**
     * value: "hourly"
     * @const
     */
    "hourly": "hourly",

    /**
     * value: "daily"
     * @const
     */
    "daily": "daily"
};


/**
 * Allowed values for the <code>unsubscribed_reason</code> property.
 * @enum {String}
 * @readonly
 */
NotificationEntity['UnsubscribedReasonEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "unsubscribe_link_clicked"
     * @const
     */
    "unsubscribe_link_clicked": "unsubscribe_link_clicked",

    /**
     * value: "mail_bounced"
     * @const
     */
    "mail_bounced": "mail_bounced",

    /**
     * value: "mail_marked_as_spam"
     * @const
     */
    "mail_marked_as_spam": "mail_marked_as_spam"
};



export default NotificationEntity;

