/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GroupEntity model module.
 * @module model/GroupEntity
 * @version 0.0.1
 */
class GroupEntity {
    /**
     * Constructs a new <code>GroupEntity</code>.
     * List Groups
     * @alias module:model/GroupEntity
     */
    constructor() { 
        
        GroupEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupEntity} obj Optional instance to populate.
     * @return {module:model/GroupEntity} The populated <code>GroupEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupEntity();

            if (data.hasOwnProperty('admin_ids')) {
                obj['admin_ids'] = ApiClient.convertToType(data['admin_ids'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('user_ids')) {
                obj['user_ids'] = ApiClient.convertToType(data['user_ids'], 'String');
            }
            if (data.hasOwnProperty('usernames')) {
                obj['usernames'] = ApiClient.convertToType(data['usernames'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['admin_ids'] && !(typeof data['admin_ids'] === 'string' || data['admin_ids'] instanceof String)) {
            throw new Error("Expected the field `admin_ids` to be a primitive type in the JSON string but got " + data['admin_ids']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }
        // ensure the json data is a string
        if (data['user_ids'] && !(typeof data['user_ids'] === 'string' || data['user_ids'] instanceof String)) {
            throw new Error("Expected the field `user_ids` to be a primitive type in the JSON string but got " + data['user_ids']);
        }
        // ensure the json data is a string
        if (data['usernames'] && !(typeof data['usernames'] === 'string' || data['usernames'] instanceof String)) {
            throw new Error("Expected the field `usernames` to be a primitive type in the JSON string but got " + data['usernames']);
        }

        return true;
    }


}



/**
 * Comma-delimited list of user IDs who are group administrators (separated by commas)
 * @member {String} admin_ids
 */
GroupEntity.prototype['admin_ids'] = undefined;

/**
 * Group ID
 * @member {Number} id
 */
GroupEntity.prototype['id'] = undefined;

/**
 * Group name
 * @member {String} name
 */
GroupEntity.prototype['name'] = undefined;

/**
 * Notes about this group
 * @member {String} notes
 */
GroupEntity.prototype['notes'] = undefined;

/**
 * Comma-delimited list of user IDs who belong to this group (separated by commas)
 * @member {String} user_ids
 */
GroupEntity.prototype['user_ids'] = undefined;

/**
 * Comma-delimited list of usernames who belong to this group (separated by commas)
 * @member {String} usernames
 */
GroupEntity.prototype['usernames'] = undefined;






export default GroupEntity;

