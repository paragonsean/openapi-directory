/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The As2OutgoingMessageEntity model module.
 * @module model/As2OutgoingMessageEntity
 * @version 0.0.1
 */
class As2OutgoingMessageEntity {
    /**
     * Constructs a new <code>As2OutgoingMessageEntity</code>.
     * List As2 Outgoing Messages
     * @alias module:model/As2OutgoingMessageEntity
     */
    constructor() { 
        
        As2OutgoingMessageEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>As2OutgoingMessageEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/As2OutgoingMessageEntity} obj Optional instance to populate.
     * @return {module:model/As2OutgoingMessageEntity} The populated <code>As2OutgoingMessageEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new As2OutgoingMessageEntity();

            if (data.hasOwnProperty('activity_log')) {
                obj['activity_log'] = ApiClient.convertToType(data['activity_log'], 'String');
            }
            if (data.hasOwnProperty('as2_from')) {
                obj['as2_from'] = ApiClient.convertToType(data['as2_from'], 'String');
            }
            if (data.hasOwnProperty('as2_partner_id')) {
                obj['as2_partner_id'] = ApiClient.convertToType(data['as2_partner_id'], 'Number');
            }
            if (data.hasOwnProperty('as2_station_id')) {
                obj['as2_station_id'] = ApiClient.convertToType(data['as2_station_id'], 'Number');
            }
            if (data.hasOwnProperty('as2_to')) {
                obj['as2_to'] = ApiClient.convertToType(data['as2_to'], 'String');
            }
            if (data.hasOwnProperty('attachment_filename')) {
                obj['attachment_filename'] = ApiClient.convertToType(data['attachment_filename'], 'String');
            }
            if (data.hasOwnProperty('body_size')) {
                obj['body_size'] = ApiClient.convertToType(data['body_size'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('encrypted_uri')) {
                obj['encrypted_uri'] = ApiClient.convertToType(data['encrypted_uri'], 'String');
            }
            if (data.hasOwnProperty('http_headers')) {
                obj['http_headers'] = ApiClient.convertToType(data['http_headers'], Object);
            }
            if (data.hasOwnProperty('http_response_code')) {
                obj['http_response_code'] = ApiClient.convertToType(data['http_response_code'], 'String');
            }
            if (data.hasOwnProperty('http_response_headers')) {
                obj['http_response_headers'] = ApiClient.convertToType(data['http_response_headers'], Object);
            }
            if (data.hasOwnProperty('http_transmission_duration')) {
                obj['http_transmission_duration'] = ApiClient.convertToType(data['http_transmission_duration'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('mdn_message_id_matched')) {
                obj['mdn_message_id_matched'] = ApiClient.convertToType(data['mdn_message_id_matched'], 'Boolean');
            }
            if (data.hasOwnProperty('mdn_mic_matched')) {
                obj['mdn_mic_matched'] = ApiClient.convertToType(data['mdn_mic_matched'], 'Boolean');
            }
            if (data.hasOwnProperty('mdn_processing_success')) {
                obj['mdn_processing_success'] = ApiClient.convertToType(data['mdn_processing_success'], 'Boolean');
            }
            if (data.hasOwnProperty('mdn_received')) {
                obj['mdn_received'] = ApiClient.convertToType(data['mdn_received'], 'Boolean');
            }
            if (data.hasOwnProperty('mdn_response_uri')) {
                obj['mdn_response_uri'] = ApiClient.convertToType(data['mdn_response_uri'], 'String');
            }
            if (data.hasOwnProperty('mdn_signature_verified')) {
                obj['mdn_signature_verified'] = ApiClient.convertToType(data['mdn_signature_verified'], 'Boolean');
            }
            if (data.hasOwnProperty('mdn_valid')) {
                obj['mdn_valid'] = ApiClient.convertToType(data['mdn_valid'], 'Boolean');
            }
            if (data.hasOwnProperty('message_id')) {
                obj['message_id'] = ApiClient.convertToType(data['message_id'], 'String');
            }
            if (data.hasOwnProperty('mic')) {
                obj['mic'] = ApiClient.convertToType(data['mic'], 'String');
            }
            if (data.hasOwnProperty('mic_sha_256')) {
                obj['mic_sha_256'] = ApiClient.convertToType(data['mic_sha_256'], 'String');
            }
            if (data.hasOwnProperty('processing_result')) {
                obj['processing_result'] = ApiClient.convertToType(data['processing_result'], 'String');
            }
            if (data.hasOwnProperty('processing_result_description')) {
                obj['processing_result_description'] = ApiClient.convertToType(data['processing_result_description'], 'String');
            }
            if (data.hasOwnProperty('raw_uri')) {
                obj['raw_uri'] = ApiClient.convertToType(data['raw_uri'], 'String');
            }
            if (data.hasOwnProperty('smime_signed_uri')) {
                obj['smime_signed_uri'] = ApiClient.convertToType(data['smime_signed_uri'], 'String');
            }
            if (data.hasOwnProperty('smime_uri')) {
                obj['smime_uri'] = ApiClient.convertToType(data['smime_uri'], 'String');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>As2OutgoingMessageEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>As2OutgoingMessageEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activity_log'] && !(typeof data['activity_log'] === 'string' || data['activity_log'] instanceof String)) {
            throw new Error("Expected the field `activity_log` to be a primitive type in the JSON string but got " + data['activity_log']);
        }
        // ensure the json data is a string
        if (data['as2_from'] && !(typeof data['as2_from'] === 'string' || data['as2_from'] instanceof String)) {
            throw new Error("Expected the field `as2_from` to be a primitive type in the JSON string but got " + data['as2_from']);
        }
        // ensure the json data is a string
        if (data['as2_to'] && !(typeof data['as2_to'] === 'string' || data['as2_to'] instanceof String)) {
            throw new Error("Expected the field `as2_to` to be a primitive type in the JSON string but got " + data['as2_to']);
        }
        // ensure the json data is a string
        if (data['attachment_filename'] && !(typeof data['attachment_filename'] === 'string' || data['attachment_filename'] instanceof String)) {
            throw new Error("Expected the field `attachment_filename` to be a primitive type in the JSON string but got " + data['attachment_filename']);
        }
        // ensure the json data is a string
        if (data['body_size'] && !(typeof data['body_size'] === 'string' || data['body_size'] instanceof String)) {
            throw new Error("Expected the field `body_size` to be a primitive type in the JSON string but got " + data['body_size']);
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        // ensure the json data is a string
        if (data['encrypted_uri'] && !(typeof data['encrypted_uri'] === 'string' || data['encrypted_uri'] instanceof String)) {
            throw new Error("Expected the field `encrypted_uri` to be a primitive type in the JSON string but got " + data['encrypted_uri']);
        }
        // ensure the json data is a string
        if (data['http_response_code'] && !(typeof data['http_response_code'] === 'string' || data['http_response_code'] instanceof String)) {
            throw new Error("Expected the field `http_response_code` to be a primitive type in the JSON string but got " + data['http_response_code']);
        }
        // ensure the json data is a string
        if (data['mdn_response_uri'] && !(typeof data['mdn_response_uri'] === 'string' || data['mdn_response_uri'] instanceof String)) {
            throw new Error("Expected the field `mdn_response_uri` to be a primitive type in the JSON string but got " + data['mdn_response_uri']);
        }
        // ensure the json data is a string
        if (data['message_id'] && !(typeof data['message_id'] === 'string' || data['message_id'] instanceof String)) {
            throw new Error("Expected the field `message_id` to be a primitive type in the JSON string but got " + data['message_id']);
        }
        // ensure the json data is a string
        if (data['mic'] && !(typeof data['mic'] === 'string' || data['mic'] instanceof String)) {
            throw new Error("Expected the field `mic` to be a primitive type in the JSON string but got " + data['mic']);
        }
        // ensure the json data is a string
        if (data['mic_sha_256'] && !(typeof data['mic_sha_256'] === 'string' || data['mic_sha_256'] instanceof String)) {
            throw new Error("Expected the field `mic_sha_256` to be a primitive type in the JSON string but got " + data['mic_sha_256']);
        }
        // ensure the json data is a string
        if (data['processing_result'] && !(typeof data['processing_result'] === 'string' || data['processing_result'] instanceof String)) {
            throw new Error("Expected the field `processing_result` to be a primitive type in the JSON string but got " + data['processing_result']);
        }
        // ensure the json data is a string
        if (data['processing_result_description'] && !(typeof data['processing_result_description'] === 'string' || data['processing_result_description'] instanceof String)) {
            throw new Error("Expected the field `processing_result_description` to be a primitive type in the JSON string but got " + data['processing_result_description']);
        }
        // ensure the json data is a string
        if (data['raw_uri'] && !(typeof data['raw_uri'] === 'string' || data['raw_uri'] instanceof String)) {
            throw new Error("Expected the field `raw_uri` to be a primitive type in the JSON string but got " + data['raw_uri']);
        }
        // ensure the json data is a string
        if (data['smime_signed_uri'] && !(typeof data['smime_signed_uri'] === 'string' || data['smime_signed_uri'] instanceof String)) {
            throw new Error("Expected the field `smime_signed_uri` to be a primitive type in the JSON string but got " + data['smime_signed_uri']);
        }
        // ensure the json data is a string
        if (data['smime_uri'] && !(typeof data['smime_uri'] === 'string' || data['smime_uri'] instanceof String)) {
            throw new Error("Expected the field `smime_uri` to be a primitive type in the JSON string but got " + data['smime_uri']);
        }
        // ensure the json data is a string
        if (data['uuid'] && !(typeof data['uuid'] === 'string' || data['uuid'] instanceof String)) {
            throw new Error("Expected the field `uuid` to be a primitive type in the JSON string but got " + data['uuid']);
        }

        return true;
    }


}



/**
 * JSON Structure of the activity log.
 * @member {String} activity_log
 */
As2OutgoingMessageEntity.prototype['activity_log'] = undefined;

/**
 * AS2 FROM
 * @member {String} as2_from
 */
As2OutgoingMessageEntity.prototype['as2_from'] = undefined;

/**
 * Id of the AS2 Partner associated with this message.
 * @member {Number} as2_partner_id
 */
As2OutgoingMessageEntity.prototype['as2_partner_id'] = undefined;

/**
 * Id of the AS2 Station associated with this message.
 * @member {Number} as2_station_id
 */
As2OutgoingMessageEntity.prototype['as2_station_id'] = undefined;

/**
 * AS2 TO
 * @member {String} as2_to
 */
As2OutgoingMessageEntity.prototype['as2_to'] = undefined;

/**
 * Filename of the file being sent.
 * @member {String} attachment_filename
 */
As2OutgoingMessageEntity.prototype['attachment_filename'] = undefined;

/**
 * Encrypted Payload Body Size
 * @member {String} body_size
 */
As2OutgoingMessageEntity.prototype['body_size'] = undefined;

/**
 * Message creation date/time
 * @member {Date} created_at
 */
As2OutgoingMessageEntity.prototype['created_at'] = undefined;

/**
 * Date Header
 * @member {String} date
 */
As2OutgoingMessageEntity.prototype['date'] = undefined;

/**
 * URL to download the encrypted signed smime that is to sent as AS2 body
 * @member {String} encrypted_uri
 */
As2OutgoingMessageEntity.prototype['encrypted_uri'] = undefined;

/**
 * HTTP Headers sent with this message.
 * @member {Object} http_headers
 */
As2OutgoingMessageEntity.prototype['http_headers'] = undefined;

/**
 * HTTP Response Code received for this message
 * @member {String} http_response_code
 */
As2OutgoingMessageEntity.prototype['http_response_code'] = undefined;

/**
 * HTTP Headers received for this message.
 * @member {Object} http_response_headers
 */
As2OutgoingMessageEntity.prototype['http_response_headers'] = undefined;

/**
 * HTTP transmission duration in seceonds
 * @member {Number} http_transmission_duration
 */
As2OutgoingMessageEntity.prototype['http_transmission_duration'] = undefined;

/**
 * Id of the AS2 Partner.
 * @member {Number} id
 */
As2OutgoingMessageEntity.prototype['id'] = undefined;

/**
 * MDN message id matched?
 * @member {Boolean} mdn_message_id_matched
 */
As2OutgoingMessageEntity.prototype['mdn_message_id_matched'] = undefined;

/**
 * MDN MIC matched?
 * @member {Boolean} mdn_mic_matched
 */
As2OutgoingMessageEntity.prototype['mdn_mic_matched'] = undefined;

/**
 * MDN disposition indicate a successful processing?
 * @member {Boolean} mdn_processing_success
 */
As2OutgoingMessageEntity.prototype['mdn_processing_success'] = undefined;

/**
 * Did the partner give a response body?
 * @member {Boolean} mdn_received
 */
As2OutgoingMessageEntity.prototype['mdn_received'] = undefined;

/**
 * URL to download the http response body
 * @member {String} mdn_response_uri
 */
As2OutgoingMessageEntity.prototype['mdn_response_uri'] = undefined;

/**
 * MDN signature verified?
 * @member {Boolean} mdn_signature_verified
 */
As2OutgoingMessageEntity.prototype['mdn_signature_verified'] = undefined;

/**
 * Is the response in MDN format?
 * @member {Boolean} mdn_valid
 */
As2OutgoingMessageEntity.prototype['mdn_valid'] = undefined;

/**
 * AS2 Message Id
 * @member {String} message_id
 */
As2OutgoingMessageEntity.prototype['message_id'] = undefined;

/**
 * AS2 Message Integrity Check SHA1
 * @member {String} mic
 */
As2OutgoingMessageEntity.prototype['mic'] = undefined;

/**
 * AS2 Message Integrity Check SHA256
 * @member {String} mic_sha_256
 */
As2OutgoingMessageEntity.prototype['mic_sha_256'] = undefined;

/**
 * Result of processing.
 * @member {module:model/As2OutgoingMessageEntity.ProcessingResultEnum} processing_result
 */
As2OutgoingMessageEntity.prototype['processing_result'] = undefined;

/**
 * Result of processing description.
 * @member {String} processing_result_description
 */
As2OutgoingMessageEntity.prototype['processing_result_description'] = undefined;

/**
 * URL to download the original file contents
 * @member {String} raw_uri
 */
As2OutgoingMessageEntity.prototype['raw_uri'] = undefined;

/**
 * URL to download the file contents as smime with signature
 * @member {String} smime_signed_uri
 */
As2OutgoingMessageEntity.prototype['smime_signed_uri'] = undefined;

/**
 * URL to download the file contents encoded as smime
 * @member {String} smime_uri
 */
As2OutgoingMessageEntity.prototype['smime_uri'] = undefined;

/**
 * UUID assigned to this message.
 * @member {String} uuid
 */
As2OutgoingMessageEntity.prototype['uuid'] = undefined;





/**
 * Allowed values for the <code>processing_result</code> property.
 * @enum {String}
 * @readonly
 */
As2OutgoingMessageEntity['ProcessingResultEnum'] = {

    /**
     * value: "not_started"
     * @const
     */
    "not_started": "not_started",

    /**
     * value: "send_failed"
     * @const
     */
    "send_failed": "send_failed",

    /**
     * value: "send_success"
     * @const
     */
    "send_success": "send_success",

    /**
     * value: "send_success_mdn_invalid"
     * @const
     */
    "send_success_mdn_invalid": "send_success_mdn_invalid",

    /**
     * value: "send_success_mic_mismatch"
     * @const
     */
    "send_success_mic_mismatch": "send_success_mic_mismatch",

    /**
     * value: "send_success_message_id_mismatch"
     * @const
     */
    "send_success_message_id_mismatch": "send_success_message_id_mismatch",

    /**
     * value: "send_success_signature_mismatch"
     * @const
     */
    "send_success_signature_mismatch": "send_success_signature_mismatch",

    /**
     * value: "send_success_processing_failure"
     * @const
     */
    "send_success_processing_failure": "send_success_processing_failure",

    /**
     * value: "send_failed_unknown_host"
     * @const
     */
    "send_failed_unknown_host": "send_failed_unknown_host",

    /**
     * value: "send_failed_bad_http_response_code"
     * @const
     */
    "send_failed_bad_http_response_code": "send_failed_bad_http_response_code",

    /**
     * value: "send_failed_ssl_error"
     * @const
     */
    "send_failed_ssl_error": "send_failed_ssl_error",

    /**
     * value: "send_failed_connection_refused"
     * @const
     */
    "send_failed_connection_refused": "send_failed_connection_refused"
};



export default As2OutgoingMessageEntity;

