/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MessageCommentEntity from './MessageCommentEntity';

/**
 * The MessageEntity model module.
 * @module model/MessageEntity
 * @version 0.0.1
 */
class MessageEntity {
    /**
     * Constructs a new <code>MessageEntity</code>.
     * List Messages
     * @alias module:model/MessageEntity
     */
    constructor() { 
        
        MessageEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessageEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageEntity} obj Optional instance to populate.
     * @return {module:model/MessageEntity} The populated <code>MessageEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageEntity();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], [MessageCommentEntity]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessageEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessageEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        if (data['comments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['comments'])) {
                throw new Error("Expected the field `comments` to be an array in the JSON data but got " + data['comments']);
            }
            // validate the optional field `comments` (array)
            for (const item of data['comments']) {
                MessageCommentEntity.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }

        return true;
    }


}



/**
 * Message body.
 * @member {String} body
 */
MessageEntity.prototype['body'] = undefined;

/**
 * Comments.
 * @member {Array.<module:model/MessageCommentEntity>} comments
 */
MessageEntity.prototype['comments'] = undefined;

/**
 * Message ID
 * @member {Number} id
 */
MessageEntity.prototype['id'] = undefined;

/**
 * Message subject.
 * @member {String} subject
 */
MessageEntity.prototype['subject'] = undefined;






export default MessageEntity;

