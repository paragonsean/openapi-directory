/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIpAddressEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIpAddressEntity::OAIIpAddressEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIpAddressEntity::OAIIpAddressEntity() {
    this->initializeModel();
}

OAIIpAddressEntity::~OAIIpAddressEntity() {}

void OAIIpAddressEntity::initializeModel() {

    m_associated_with_isSet = false;
    m_associated_with_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_ip_addresses_isSet = false;
    m_ip_addresses_isValid = false;
}

void OAIIpAddressEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIpAddressEntity::fromJsonObject(QJsonObject json) {

    m_associated_with_isValid = ::OpenAPI::fromJsonValue(m_associated_with, json[QString("associated_with")]);
    m_associated_with_isSet = !json[QString("associated_with")].isNull() && m_associated_with_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_ip_addresses_isValid = ::OpenAPI::fromJsonValue(m_ip_addresses, json[QString("ip_addresses")]);
    m_ip_addresses_isSet = !json[QString("ip_addresses")].isNull() && m_ip_addresses_isValid;
}

QString OAIIpAddressEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIpAddressEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_associated_with_isSet) {
        obj.insert(QString("associated_with"), ::OpenAPI::toJsonValue(m_associated_with));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_ip_addresses.size() > 0) {
        obj.insert(QString("ip_addresses"), ::OpenAPI::toJsonValue(m_ip_addresses));
    }
    return obj;
}

QString OAIIpAddressEntity::getAssociatedWith() const {
    return m_associated_with;
}
void OAIIpAddressEntity::setAssociatedWith(const QString &associated_with) {
    m_associated_with = associated_with;
    m_associated_with_isSet = true;
}

bool OAIIpAddressEntity::is_associated_with_Set() const{
    return m_associated_with_isSet;
}

bool OAIIpAddressEntity::is_associated_with_Valid() const{
    return m_associated_with_isValid;
}

qint32 OAIIpAddressEntity::getGroupId() const {
    return m_group_id;
}
void OAIIpAddressEntity::setGroupId(const qint32 &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIIpAddressEntity::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIIpAddressEntity::is_group_id_Valid() const{
    return m_group_id_isValid;
}

QString OAIIpAddressEntity::getId() const {
    return m_id;
}
void OAIIpAddressEntity::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIIpAddressEntity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIIpAddressEntity::is_id_Valid() const{
    return m_id_isValid;
}

QList<QString> OAIIpAddressEntity::getIpAddresses() const {
    return m_ip_addresses;
}
void OAIIpAddressEntity::setIpAddresses(const QList<QString> &ip_addresses) {
    m_ip_addresses = ip_addresses;
    m_ip_addresses_isSet = true;
}

bool OAIIpAddressEntity::is_ip_addresses_Set() const{
    return m_ip_addresses_isSet;
}

bool OAIIpAddressEntity::is_ip_addresses_Valid() const{
    return m_ip_addresses_isValid;
}

bool OAIIpAddressEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_associated_with_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIpAddressEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
