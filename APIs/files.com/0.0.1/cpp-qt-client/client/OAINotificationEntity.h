/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotificationEntity.h
 *
 * List Notifications
 */

#ifndef OAINotificationEntity_H
#define OAINotificationEntity_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINotificationEntity : public OAIObject {
public:
    OAINotificationEntity();
    OAINotificationEntity(QString json);
    ~OAINotificationEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getGroupId() const;
    void setGroupId(const qint32 &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    QString getGroupName() const;
    void setGroupName(const QString &group_name);
    bool is_group_name_Set() const;
    bool is_group_name_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    bool isNotifyOnCopy() const;
    void setNotifyOnCopy(const bool &notify_on_copy);
    bool is_notify_on_copy_Set() const;
    bool is_notify_on_copy_Valid() const;

    bool isNotifyOnDelete() const;
    void setNotifyOnDelete(const bool &notify_on_delete);
    bool is_notify_on_delete_Set() const;
    bool is_notify_on_delete_Valid() const;

    bool isNotifyOnDownload() const;
    void setNotifyOnDownload(const bool &notify_on_download);
    bool is_notify_on_download_Set() const;
    bool is_notify_on_download_Valid() const;

    bool isNotifyOnMove() const;
    void setNotifyOnMove(const bool &notify_on_move);
    bool is_notify_on_move_Set() const;
    bool is_notify_on_move_Valid() const;

    bool isNotifyOnUpload() const;
    void setNotifyOnUpload(const bool &notify_on_upload);
    bool is_notify_on_upload_Set() const;
    bool is_notify_on_upload_Valid() const;

    bool isNotifyUserActions() const;
    void setNotifyUserActions(const bool &notify_user_actions);
    bool is_notify_user_actions_Set() const;
    bool is_notify_user_actions_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    bool isRecursive() const;
    void setRecursive(const bool &recursive);
    bool is_recursive_Set() const;
    bool is_recursive_Valid() const;

    QString getSendInterval() const;
    void setSendInterval(const QString &send_interval);
    bool is_send_interval_Set() const;
    bool is_send_interval_Valid() const;

    bool isSuppressedEmail() const;
    void setSuppressedEmail(const bool &suppressed_email);
    bool is_suppressed_email_Set() const;
    bool is_suppressed_email_Valid() const;

    bool isTriggerByShareRecipients() const;
    void setTriggerByShareRecipients(const bool &trigger_by_share_recipients);
    bool is_trigger_by_share_recipients_Set() const;
    bool is_trigger_by_share_recipients_Valid() const;

    QList<QString> getTriggeringFilenames() const;
    void setTriggeringFilenames(const QList<QString> &triggering_filenames);
    bool is_triggering_filenames_Set() const;
    bool is_triggering_filenames_Valid() const;

    QList<qint32> getTriggeringGroupIds() const;
    void setTriggeringGroupIds(const QList<qint32> &triggering_group_ids);
    bool is_triggering_group_ids_Set() const;
    bool is_triggering_group_ids_Valid() const;

    QList<qint32> getTriggeringUserIds() const;
    void setTriggeringUserIds(const QList<qint32> &triggering_user_ids);
    bool is_triggering_user_ids_Set() const;
    bool is_triggering_user_ids_Valid() const;

    bool isUnsubscribed() const;
    void setUnsubscribed(const bool &unsubscribed);
    bool is_unsubscribed_Set() const;
    bool is_unsubscribed_Valid() const;

    QString getUnsubscribedReason() const;
    void setUnsubscribedReason(const QString &unsubscribed_reason);
    bool is_unsubscribed_reason_Set() const;
    bool is_unsubscribed_reason_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    QString m_group_name;
    bool m_group_name_isSet;
    bool m_group_name_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    bool m_notify_on_copy;
    bool m_notify_on_copy_isSet;
    bool m_notify_on_copy_isValid;

    bool m_notify_on_delete;
    bool m_notify_on_delete_isSet;
    bool m_notify_on_delete_isValid;

    bool m_notify_on_download;
    bool m_notify_on_download_isSet;
    bool m_notify_on_download_isValid;

    bool m_notify_on_move;
    bool m_notify_on_move_isSet;
    bool m_notify_on_move_isValid;

    bool m_notify_on_upload;
    bool m_notify_on_upload_isSet;
    bool m_notify_on_upload_isValid;

    bool m_notify_user_actions;
    bool m_notify_user_actions_isSet;
    bool m_notify_user_actions_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    bool m_recursive;
    bool m_recursive_isSet;
    bool m_recursive_isValid;

    QString m_send_interval;
    bool m_send_interval_isSet;
    bool m_send_interval_isValid;

    bool m_suppressed_email;
    bool m_suppressed_email_isSet;
    bool m_suppressed_email_isValid;

    bool m_trigger_by_share_recipients;
    bool m_trigger_by_share_recipients_isSet;
    bool m_trigger_by_share_recipients_isValid;

    QList<QString> m_triggering_filenames;
    bool m_triggering_filenames_isSet;
    bool m_triggering_filenames_isValid;

    QList<qint32> m_triggering_group_ids;
    bool m_triggering_group_ids_isSet;
    bool m_triggering_group_ids_isValid;

    QList<qint32> m_triggering_user_ids;
    bool m_triggering_user_ids_isSet;
    bool m_triggering_user_ids_isValid;

    bool m_unsubscribed;
    bool m_unsubscribed_isSet;
    bool m_unsubscribed_isValid;

    QString m_unsubscribed_reason;
    bool m_unsubscribed_reason_isSet;
    bool m_unsubscribed_reason_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotificationEntity)

#endif // OAINotificationEntity_H
