/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISiteEntity.h
 *
 * Show site settings
 */

#ifndef OAISiteEntity_H
#define OAISiteEntity_H

#include <QJsonObject>

#include "OAIImageEntity.h"
#include "OAIObject.h"
#include "OAISessionEntity.h"
#include "OAIUserEntity.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageEntity;
class OAISessionEntity;
class OAIUserEntity;

class OAISiteEntity : public OAIObject {
public:
    OAISiteEntity();
    OAISiteEntity(QString json);
    ~OAISiteEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActiveSftpHostKeyId() const;
    void setActiveSftpHostKeyId(const qint32 &active_sftp_host_key_id);
    bool is_active_sftp_host_key_id_Set() const;
    bool is_active_sftp_host_key_id_Valid() const;

    qint32 getAdminUserId() const;
    void setAdminUserId(const qint32 &admin_user_id);
    bool is_admin_user_id_Set() const;
    bool is_admin_user_id_Valid() const;

    bool isAllowBundleNames() const;
    void setAllowBundleNames(const bool &allow_bundle_names);
    bool is_allow_bundle_names_Set() const;
    bool is_allow_bundle_names_Valid() const;

    bool isAllowed2faMethodBypassForFtpSftpDav() const;
    void setAllowed2faMethodBypassForFtpSftpDav(const bool &allowed_2fa_method_bypass_for_ftp_sftp_dav);
    bool is_allowed_2fa_method_bypass_for_ftp_sftp_dav_Set() const;
    bool is_allowed_2fa_method_bypass_for_ftp_sftp_dav_Valid() const;

    bool isAllowed2faMethodSms() const;
    void setAllowed2faMethodSms(const bool &allowed_2fa_method_sms);
    bool is_allowed_2fa_method_sms_Set() const;
    bool is_allowed_2fa_method_sms_Valid() const;

    bool isAllowed2faMethodTotp() const;
    void setAllowed2faMethodTotp(const bool &allowed_2fa_method_totp);
    bool is_allowed_2fa_method_totp_Set() const;
    bool is_allowed_2fa_method_totp_Valid() const;

    bool isAllowed2faMethodU2f() const;
    void setAllowed2faMethodU2f(const bool &allowed_2fa_method_u2f);
    bool is_allowed_2fa_method_u2f_Set() const;
    bool is_allowed_2fa_method_u2f_Valid() const;

    bool isAllowed2faMethodWebauthn() const;
    void setAllowed2faMethodWebauthn(const bool &allowed_2fa_method_webauthn);
    bool is_allowed_2fa_method_webauthn_Set() const;
    bool is_allowed_2fa_method_webauthn_Valid() const;

    bool isAllowed2faMethodYubi() const;
    void setAllowed2faMethodYubi(const bool &allowed_2fa_method_yubi);
    bool is_allowed_2fa_method_yubi_Set() const;
    bool is_allowed_2fa_method_yubi_Valid() const;

    QString getAllowedCountries() const;
    void setAllowedCountries(const QString &allowed_countries);
    bool is_allowed_countries_Set() const;
    bool is_allowed_countries_Valid() const;

    QString getAllowedIps() const;
    void setAllowedIps(const QString &allowed_ips);
    bool is_allowed_ips_Set() const;
    bool is_allowed_ips_Valid() const;

    bool isAskAboutOverwrites() const;
    void setAskAboutOverwrites(const bool &ask_about_overwrites);
    bool is_ask_about_overwrites_Set() const;
    bool is_ask_about_overwrites_Valid() const;

    QString getBundleActivityNotifications() const;
    void setBundleActivityNotifications(const QString &bundle_activity_notifications);
    bool is_bundle_activity_notifications_Set() const;
    bool is_bundle_activity_notifications_Valid() const;

    qint32 getBundleExpiration() const;
    void setBundleExpiration(const qint32 &bundle_expiration);
    bool is_bundle_expiration_Set() const;
    bool is_bundle_expiration_Valid() const;

    bool isBundlePasswordRequired() const;
    void setBundlePasswordRequired(const bool &bundle_password_required);
    bool is_bundle_password_required_Set() const;
    bool is_bundle_password_required_Valid() const;

    QString getBundleRegistrationNotifications() const;
    void setBundleRegistrationNotifications(const QString &bundle_registration_notifications);
    bool is_bundle_registration_notifications_Set() const;
    bool is_bundle_registration_notifications_Valid() const;

    bool isBundleRequireShareRecipient() const;
    void setBundleRequireShareRecipient(const bool &bundle_require_share_recipient);
    bool is_bundle_require_share_recipient_Set() const;
    bool is_bundle_require_share_recipient_Valid() const;

    QString getBundleUploadReceiptNotifications() const;
    void setBundleUploadReceiptNotifications(const QString &bundle_upload_receipt_notifications);
    bool is_bundle_upload_receipt_notifications_Set() const;
    bool is_bundle_upload_receipt_notifications_Valid() const;

    OAIImageEntity getBundleWatermarkAttachment() const;
    void setBundleWatermarkAttachment(const OAIImageEntity &bundle_watermark_attachment);
    bool is_bundle_watermark_attachment_Set() const;
    bool is_bundle_watermark_attachment_Valid() const;

    OAIObject getBundleWatermarkValue() const;
    void setBundleWatermarkValue(const OAIObject &bundle_watermark_value);
    bool is_bundle_watermark_value_Set() const;
    bool is_bundle_watermark_value_Valid() const;

    QString getColor2Left() const;
    void setColor2Left(const QString &color2_left);
    bool is_color2_left_Set() const;
    bool is_color2_left_Valid() const;

    QString getColor2Link() const;
    void setColor2Link(const QString &color2_link);
    bool is_color2_link_Set() const;
    bool is_color2_link_Valid() const;

    QString getColor2Text() const;
    void setColor2Text(const QString &color2_text);
    bool is_color2_text_Set() const;
    bool is_color2_text_Valid() const;

    QString getColor2Top() const;
    void setColor2Top(const QString &color2_top);
    bool is_color2_top_Set() const;
    bool is_color2_top_Valid() const;

    QString getColor2TopText() const;
    void setColor2TopText(const QString &color2_top_text);
    bool is_color2_top_text_Set() const;
    bool is_color2_top_text_Valid() const;

    QString getContactName() const;
    void setContactName(const QString &contact_name);
    bool is_contact_name_Set() const;
    bool is_contact_name_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    bool isCustomNamespace() const;
    void setCustomNamespace(const bool &custom_namespace);
    bool is_custom_namespace_Set() const;
    bool is_custom_namespace_Valid() const;

    qint32 getDaysToRetainBackups() const;
    void setDaysToRetainBackups(const qint32 &days_to_retain_backups);
    bool is_days_to_retain_backups_Set() const;
    bool is_days_to_retain_backups_Valid() const;

    QString getDefaultTimeZone() const;
    void setDefaultTimeZone(const QString &default_time_zone);
    bool is_default_time_zone_Set() const;
    bool is_default_time_zone_Valid() const;

    bool isDesktopApp() const;
    void setDesktopApp(const bool &desktop_app);
    bool is_desktop_app_Set() const;
    bool is_desktop_app_Valid() const;

    bool isDesktopAppSessionIpPinning() const;
    void setDesktopAppSessionIpPinning(const bool &desktop_app_session_ip_pinning);
    bool is_desktop_app_session_ip_pinning_Set() const;
    bool is_desktop_app_session_ip_pinning_Valid() const;

    qint32 getDesktopAppSessionLifetime() const;
    void setDesktopAppSessionLifetime(const qint32 &desktop_app_session_lifetime);
    bool is_desktop_app_session_lifetime_Set() const;
    bool is_desktop_app_session_lifetime_Valid() const;

    bool isDisableFilesCertificateGeneration() const;
    void setDisableFilesCertificateGeneration(const bool &disable_files_certificate_generation);
    bool is_disable_files_certificate_generation_Set() const;
    bool is_disable_files_certificate_generation_Valid() const;

    bool isDisableNotifications() const;
    void setDisableNotifications(const bool &disable_notifications);
    bool is_disable_notifications_Set() const;
    bool is_disable_notifications_Valid() const;

    bool isDisablePasswordReset() const;
    void setDisablePasswordReset(const bool &disable_password_reset);
    bool is_disable_password_reset_Set() const;
    bool is_disable_password_reset_Valid() const;

    qint32 getDisableUsersFromInactivityPeriodDays() const;
    void setDisableUsersFromInactivityPeriodDays(const qint32 &disable_users_from_inactivity_period_days);
    bool is_disable_users_from_inactivity_period_days_Set() const;
    bool is_disable_users_from_inactivity_period_days_Valid() const;

    QString getDisallowedCountries() const;
    void setDisallowedCountries(const QString &disallowed_countries);
    bool is_disallowed_countries_Set() const;
    bool is_disallowed_countries_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    bool isDomainHstsHeader() const;
    void setDomainHstsHeader(const bool &domain_hsts_header);
    bool is_domain_hsts_header_Set() const;
    bool is_domain_hsts_header_Valid() const;

    QString getDomainLetsencryptChain() const;
    void setDomainLetsencryptChain(const QString &domain_letsencrypt_chain);
    bool is_domain_letsencrypt_chain_Set() const;
    bool is_domain_letsencrypt_chain_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    bool isFolderPermissionsGroupsOnly() const;
    void setFolderPermissionsGroupsOnly(const bool &folder_permissions_groups_only);
    bool is_folder_permissions_groups_only_Set() const;
    bool is_folder_permissions_groups_only_Valid() const;

    bool isFtpEnabled() const;
    void setFtpEnabled(const bool &ftp_enabled);
    bool is_ftp_enabled_Set() const;
    bool is_ftp_enabled_Valid() const;

    bool isHipaa() const;
    void setHipaa(const bool &hipaa);
    bool is_hipaa_Set() const;
    bool is_hipaa_Valid() const;

    OAIImageEntity getIcon128() const;
    void setIcon128(const OAIImageEntity &icon128);
    bool is_icon128_Set() const;
    bool is_icon128_Valid() const;

    OAIImageEntity getIcon16() const;
    void setIcon16(const OAIImageEntity &icon16);
    bool is_icon16_Set() const;
    bool is_icon16_Valid() const;

    OAIImageEntity getIcon32() const;
    void setIcon32(const OAIImageEntity &icon32);
    bool is_icon32_Set() const;
    bool is_icon32_Valid() const;

    OAIImageEntity getIcon48() const;
    void setIcon48(const OAIImageEntity &icon48);
    bool is_icon48_Set() const;
    bool is_icon48_Valid() const;

    QDateTime getImmutableFilesSetAt() const;
    void setImmutableFilesSetAt(const QDateTime &immutable_files_set_at);
    bool is_immutable_files_set_at_Set() const;
    bool is_immutable_files_set_at_Valid() const;

    bool isIncludePasswordInWelcomeEmail() const;
    void setIncludePasswordInWelcomeEmail(const bool &include_password_in_welcome_email);
    bool is_include_password_in_welcome_email_Set() const;
    bool is_include_password_in_welcome_email_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getLdapBaseDn() const;
    void setLdapBaseDn(const QString &ldap_base_dn);
    bool is_ldap_base_dn_Set() const;
    bool is_ldap_base_dn_Valid() const;

    QString getLdapDomain() const;
    void setLdapDomain(const QString &ldap_domain);
    bool is_ldap_domain_Set() const;
    bool is_ldap_domain_Valid() const;

    bool isLdapEnabled() const;
    void setLdapEnabled(const bool &ldap_enabled);
    bool is_ldap_enabled_Set() const;
    bool is_ldap_enabled_Valid() const;

    QString getLdapGroupAction() const;
    void setLdapGroupAction(const QString &ldap_group_action);
    bool is_ldap_group_action_Set() const;
    bool is_ldap_group_action_Valid() const;

    QString getLdapGroupExclusion() const;
    void setLdapGroupExclusion(const QString &ldap_group_exclusion);
    bool is_ldap_group_exclusion_Set() const;
    bool is_ldap_group_exclusion_Valid() const;

    QString getLdapGroupInclusion() const;
    void setLdapGroupInclusion(const QString &ldap_group_inclusion);
    bool is_ldap_group_inclusion_Set() const;
    bool is_ldap_group_inclusion_Valid() const;

    QString getLdapHost() const;
    void setLdapHost(const QString &ldap_host);
    bool is_ldap_host_Set() const;
    bool is_ldap_host_Valid() const;

    QString getLdapHost2() const;
    void setLdapHost2(const QString &ldap_host_2);
    bool is_ldap_host_2_Set() const;
    bool is_ldap_host_2_Valid() const;

    QString getLdapHost3() const;
    void setLdapHost3(const QString &ldap_host_3);
    bool is_ldap_host_3_Set() const;
    bool is_ldap_host_3_Valid() const;

    qint32 getLdapPort() const;
    void setLdapPort(const qint32 &ldap_port);
    bool is_ldap_port_Set() const;
    bool is_ldap_port_Valid() const;

    bool isLdapSecure() const;
    void setLdapSecure(const bool &ldap_secure);
    bool is_ldap_secure_Set() const;
    bool is_ldap_secure_Valid() const;

    QString getLdapType() const;
    void setLdapType(const QString &ldap_type);
    bool is_ldap_type_Set() const;
    bool is_ldap_type_Valid() const;

    QString getLdapUserAction() const;
    void setLdapUserAction(const QString &ldap_user_action);
    bool is_ldap_user_action_Set() const;
    bool is_ldap_user_action_Valid() const;

    QString getLdapUserIncludeGroups() const;
    void setLdapUserIncludeGroups(const QString &ldap_user_include_groups);
    bool is_ldap_user_include_groups_Set() const;
    bool is_ldap_user_include_groups_Valid() const;

    QString getLdapUsername() const;
    void setLdapUsername(const QString &ldap_username);
    bool is_ldap_username_Set() const;
    bool is_ldap_username_Valid() const;

    QString getLdapUsernameField() const;
    void setLdapUsernameField(const QString &ldap_username_field);
    bool is_ldap_username_field_Set() const;
    bool is_ldap_username_field_Valid() const;

    QString getLoginHelpText() const;
    void setLoginHelpText(const QString &login_help_text);
    bool is_login_help_text_Set() const;
    bool is_login_help_text_Valid() const;

    OAIImageEntity getLogo() const;
    void setLogo(const OAIImageEntity &logo);
    bool is_logo_Set() const;
    bool is_logo_Valid() const;

    qint32 getMaxPriorPasswords() const;
    void setMaxPriorPasswords(const qint32 &max_prior_passwords);
    bool is_max_prior_passwords_Set() const;
    bool is_max_prior_passwords_Valid() const;

    bool isMobileApp() const;
    void setMobileApp(const bool &mobile_app);
    bool is_mobile_app_Set() const;
    bool is_mobile_app_Valid() const;

    bool isMobileAppSessionIpPinning() const;
    void setMobileAppSessionIpPinning(const bool &mobile_app_session_ip_pinning);
    bool is_mobile_app_session_ip_pinning_Set() const;
    bool is_mobile_app_session_ip_pinning_Valid() const;

    qint32 getMobileAppSessionLifetime() const;
    void setMobileAppSessionLifetime(const qint32 &mobile_app_session_lifetime);
    bool is_mobile_app_session_lifetime_Set() const;
    bool is_mobile_app_session_lifetime_Valid() const;

    QString getMotdText() const;
    void setMotdText(const QString &motd_text);
    bool is_motd_text_Set() const;
    bool is_motd_text_Valid() const;

    bool isMotdUseForFtp() const;
    void setMotdUseForFtp(const bool &motd_use_for_ftp);
    bool is_motd_use_for_ftp_Set() const;
    bool is_motd_use_for_ftp_Valid() const;

    bool isMotdUseForSftp() const;
    void setMotdUseForSftp(const bool &motd_use_for_sftp);
    bool is_motd_use_for_sftp_Set() const;
    bool is_motd_use_for_sftp_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getNextBillingAmount() const;
    void setNextBillingAmount(const double &next_billing_amount);
    bool is_next_billing_amount_Set() const;
    bool is_next_billing_amount_Valid() const;

    QString getNextBillingDate() const;
    void setNextBillingDate(const QString &next_billing_date);
    bool is_next_billing_date_Set() const;
    bool is_next_billing_date_Valid() const;

    bool isNonSsoGroupsAllowed() const;
    void setNonSsoGroupsAllowed(const bool &non_sso_groups_allowed);
    bool is_non_sso_groups_allowed_Set() const;
    bool is_non_sso_groups_allowed_Valid() const;

    bool isNonSsoUsersAllowed() const;
    void setNonSsoUsersAllowed(const bool &non_sso_users_allowed);
    bool is_non_sso_users_allowed_Set() const;
    bool is_non_sso_users_allowed_Valid() const;

    bool isOfficeIntegrationAvailable() const;
    void setOfficeIntegrationAvailable(const bool &office_integration_available);
    bool is_office_integration_available_Set() const;
    bool is_office_integration_available_Valid() const;

    QString getOfficeIntegrationType() const;
    void setOfficeIntegrationType(const QString &office_integration_type);
    bool is_office_integration_type_Set() const;
    bool is_office_integration_type_Valid() const;

    QString getOncehubLink() const;
    void setOncehubLink(const QString &oncehub_link);
    bool is_oncehub_link_Set() const;
    bool is_oncehub_link_Valid() const;

    bool isOptOutGlobal() const;
    void setOptOutGlobal(const bool &opt_out_global);
    bool is_opt_out_global_Set() const;
    bool is_opt_out_global_Valid() const;

    bool isOverdue() const;
    void setOverdue(const bool &overdue);
    bool is_overdue_Set() const;
    bool is_overdue_Valid() const;

    qint32 getPasswordMinLength() const;
    void setPasswordMinLength(const qint32 &password_min_length);
    bool is_password_min_length_Set() const;
    bool is_password_min_length_Valid() const;

    bool isPasswordRequireLetter() const;
    void setPasswordRequireLetter(const bool &password_require_letter);
    bool is_password_require_letter_Set() const;
    bool is_password_require_letter_Valid() const;

    bool isPasswordRequireMixed() const;
    void setPasswordRequireMixed(const bool &password_require_mixed);
    bool is_password_require_mixed_Set() const;
    bool is_password_require_mixed_Valid() const;

    bool isPasswordRequireNumber() const;
    void setPasswordRequireNumber(const bool &password_require_number);
    bool is_password_require_number_Set() const;
    bool is_password_require_number_Valid() const;

    bool isPasswordRequireSpecial() const;
    void setPasswordRequireSpecial(const bool &password_require_special);
    bool is_password_require_special_Set() const;
    bool is_password_require_special_Valid() const;

    bool isPasswordRequireUnbreached() const;
    void setPasswordRequireUnbreached(const bool &password_require_unbreached);
    bool is_password_require_unbreached_Set() const;
    bool is_password_require_unbreached_Valid() const;

    bool isPasswordRequirementsApplyToBundles() const;
    void setPasswordRequirementsApplyToBundles(const bool &password_requirements_apply_to_bundles);
    bool is_password_requirements_apply_to_bundles_Set() const;
    bool is_password_requirements_apply_to_bundles_Valid() const;

    qint32 getPasswordValidityDays() const;
    void setPasswordValidityDays(const qint32 &password_validity_days);
    bool is_password_validity_days_Set() const;
    bool is_password_validity_days_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    bool isPinAllRemoteServersToSiteRegion() const;
    void setPinAllRemoteServersToSiteRegion(const bool &pin_all_remote_servers_to_site_region);
    bool is_pin_all_remote_servers_to_site_region_Set() const;
    bool is_pin_all_remote_servers_to_site_region_Valid() const;

    QString getReplyToEmail() const;
    void setReplyToEmail(const QString &reply_to_email);
    bool is_reply_to_email_Set() const;
    bool is_reply_to_email_Valid() const;

    bool isRequire2fa() const;
    void setRequire2fa(const bool &require_2fa);
    bool is_require_2fa_Set() const;
    bool is_require_2fa_Valid() const;

    QDateTime getRequire2faStopTime() const;
    void setRequire2faStopTime(const QDateTime &require_2fa_stop_time);
    bool is_require_2fa_stop_time_Set() const;
    bool is_require_2fa_stop_time_Valid() const;

    QString getRequire2faUserType() const;
    void setRequire2faUserType(const QString &require_2fa_user_type);
    bool is_require_2fa_user_type_Set() const;
    bool is_require_2fa_user_type_Valid() const;

    OAISessionEntity getSession() const;
    void setSession(const OAISessionEntity &session);
    bool is_session_Set() const;
    bool is_session_Valid() const;

    double getSessionExpiry() const;
    void setSessionExpiry(const double &session_expiry);
    bool is_session_expiry_Set() const;
    bool is_session_expiry_Valid() const;

    qint32 getSessionExpiryMinutes() const;
    void setSessionExpiryMinutes(const qint32 &session_expiry_minutes);
    bool is_session_expiry_minutes_Set() const;
    bool is_session_expiry_minutes_Valid() const;

    bool isSessionPinnedByIp() const;
    void setSessionPinnedByIp(const bool &session_pinned_by_ip);
    bool is_session_pinned_by_ip_Set() const;
    bool is_session_pinned_by_ip_Valid() const;

    bool isSftpEnabled() const;
    void setSftpEnabled(const bool &sftp_enabled);
    bool is_sftp_enabled_Set() const;
    bool is_sftp_enabled_Valid() const;

    QString getSftpHostKeyType() const;
    void setSftpHostKeyType(const QString &sftp_host_key_type);
    bool is_sftp_host_key_type_Set() const;
    bool is_sftp_host_key_type_Valid() const;

    bool isSftpInsecureCiphers() const;
    void setSftpInsecureCiphers(const bool &sftp_insecure_ciphers);
    bool is_sftp_insecure_ciphers_Set() const;
    bool is_sftp_insecure_ciphers_Valid() const;

    bool isSftpUserRootEnabled() const;
    void setSftpUserRootEnabled(const bool &sftp_user_root_enabled);
    bool is_sftp_user_root_enabled_Set() const;
    bool is_sftp_user_root_enabled_Valid() const;

    bool isSharingEnabled() const;
    void setSharingEnabled(const bool &sharing_enabled);
    bool is_sharing_enabled_Set() const;
    bool is_sharing_enabled_Valid() const;

    bool isShowRequestAccessLink() const;
    void setShowRequestAccessLink(const bool &show_request_access_link);
    bool is_show_request_access_link_Set() const;
    bool is_show_request_access_link_Valid() const;

    QString getSiteFooter() const;
    void setSiteFooter(const QString &site_footer);
    bool is_site_footer_Set() const;
    bool is_site_footer_Valid() const;

    QString getSiteHeader() const;
    void setSiteHeader(const QString &site_header);
    bool is_site_header_Set() const;
    bool is_site_header_Valid() const;

    QString getSmtpAddress() const;
    void setSmtpAddress(const QString &smtp_address);
    bool is_smtp_address_Set() const;
    bool is_smtp_address_Valid() const;

    QString getSmtpAuthentication() const;
    void setSmtpAuthentication(const QString &smtp_authentication);
    bool is_smtp_authentication_Set() const;
    bool is_smtp_authentication_Valid() const;

    QString getSmtpFrom() const;
    void setSmtpFrom(const QString &smtp_from);
    bool is_smtp_from_Set() const;
    bool is_smtp_from_Valid() const;

    qint32 getSmtpPort() const;
    void setSmtpPort(const qint32 &smtp_port);
    bool is_smtp_port_Set() const;
    bool is_smtp_port_Valid() const;

    QString getSmtpUsername() const;
    void setSmtpUsername(const QString &smtp_username);
    bool is_smtp_username_Set() const;
    bool is_smtp_username_Valid() const;

    bool isSslRequired() const;
    void setSslRequired(const bool &ssl_required);
    bool is_ssl_required_Set() const;
    bool is_ssl_required_Valid() const;

    QString getSubdomain() const;
    void setSubdomain(const QString &subdomain);
    bool is_subdomain_Set() const;
    bool is_subdomain_Valid() const;

    QDateTime getSwitchToPlanDate() const;
    void setSwitchToPlanDate(const QDateTime &switch_to_plan_date);
    bool is_switch_to_plan_date_Set() const;
    bool is_switch_to_plan_date_Valid() const;

    bool isTlsDisabled() const;
    void setTlsDisabled(const bool &tls_disabled);
    bool is_tls_disabled_Set() const;
    bool is_tls_disabled_Valid() const;

    qint32 getTrialDaysLeft() const;
    void setTrialDaysLeft(const qint32 &trial_days_left);
    bool is_trial_days_left_Set() const;
    bool is_trial_days_left_Valid() const;

    QDateTime getTrialUntil() const;
    void setTrialUntil(const QDateTime &trial_until);
    bool is_trial_until_Set() const;
    bool is_trial_until_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    bool isUploadsViaEmailAuthentication() const;
    void setUploadsViaEmailAuthentication(const bool &uploads_via_email_authentication);
    bool is_uploads_via_email_authentication_Set() const;
    bool is_uploads_via_email_authentication_Valid() const;

    bool isUseProvidedModifiedAt() const;
    void setUseProvidedModifiedAt(const bool &use_provided_modified_at);
    bool is_use_provided_modified_at_Set() const;
    bool is_use_provided_modified_at_Valid() const;

    OAIUserEntity getUser() const;
    void setUser(const OAIUserEntity &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    bool isUserLockout() const;
    void setUserLockout(const bool &user_lockout);
    bool is_user_lockout_Set() const;
    bool is_user_lockout_Valid() const;

    qint32 getUserLockoutLockPeriod() const;
    void setUserLockoutLockPeriod(const qint32 &user_lockout_lock_period);
    bool is_user_lockout_lock_period_Set() const;
    bool is_user_lockout_lock_period_Valid() const;

    qint32 getUserLockoutTries() const;
    void setUserLockoutTries(const qint32 &user_lockout_tries);
    bool is_user_lockout_tries_Set() const;
    bool is_user_lockout_tries_Valid() const;

    qint32 getUserLockoutWithin() const;
    void setUserLockoutWithin(const qint32 &user_lockout_within);
    bool is_user_lockout_within_Set() const;
    bool is_user_lockout_within_Valid() const;

    bool isUserRequestsEnabled() const;
    void setUserRequestsEnabled(const bool &user_requests_enabled);
    bool is_user_requests_enabled_Set() const;
    bool is_user_requests_enabled_Valid() const;

    bool isUserRequestsNotifyAdmins() const;
    void setUserRequestsNotifyAdmins(const bool &user_requests_notify_admins);
    bool is_user_requests_notify_admins_Set() const;
    bool is_user_requests_notify_admins_Valid() const;

    QString getWelcomeCustomText() const;
    void setWelcomeCustomText(const QString &welcome_custom_text);
    bool is_welcome_custom_text_Set() const;
    bool is_welcome_custom_text_Valid() const;

    QString getWelcomeEmailCc() const;
    void setWelcomeEmailCc(const QString &welcome_email_cc);
    bool is_welcome_email_cc_Set() const;
    bool is_welcome_email_cc_Valid() const;

    bool isWelcomeEmailEnabled() const;
    void setWelcomeEmailEnabled(const bool &welcome_email_enabled);
    bool is_welcome_email_enabled_Set() const;
    bool is_welcome_email_enabled_Valid() const;

    QString getWelcomeEmailSubject() const;
    void setWelcomeEmailSubject(const QString &welcome_email_subject);
    bool is_welcome_email_subject_Set() const;
    bool is_welcome_email_subject_Valid() const;

    QString getWelcomeScreen() const;
    void setWelcomeScreen(const QString &welcome_screen);
    bool is_welcome_screen_Set() const;
    bool is_welcome_screen_Valid() const;

    bool isWindowsModeFtp() const;
    void setWindowsModeFtp(const bool &windows_mode_ftp);
    bool is_windows_mode_ftp_Set() const;
    bool is_windows_mode_ftp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_active_sftp_host_key_id;
    bool m_active_sftp_host_key_id_isSet;
    bool m_active_sftp_host_key_id_isValid;

    qint32 m_admin_user_id;
    bool m_admin_user_id_isSet;
    bool m_admin_user_id_isValid;

    bool m_allow_bundle_names;
    bool m_allow_bundle_names_isSet;
    bool m_allow_bundle_names_isValid;

    bool m_allowed_2fa_method_bypass_for_ftp_sftp_dav;
    bool m_allowed_2fa_method_bypass_for_ftp_sftp_dav_isSet;
    bool m_allowed_2fa_method_bypass_for_ftp_sftp_dav_isValid;

    bool m_allowed_2fa_method_sms;
    bool m_allowed_2fa_method_sms_isSet;
    bool m_allowed_2fa_method_sms_isValid;

    bool m_allowed_2fa_method_totp;
    bool m_allowed_2fa_method_totp_isSet;
    bool m_allowed_2fa_method_totp_isValid;

    bool m_allowed_2fa_method_u2f;
    bool m_allowed_2fa_method_u2f_isSet;
    bool m_allowed_2fa_method_u2f_isValid;

    bool m_allowed_2fa_method_webauthn;
    bool m_allowed_2fa_method_webauthn_isSet;
    bool m_allowed_2fa_method_webauthn_isValid;

    bool m_allowed_2fa_method_yubi;
    bool m_allowed_2fa_method_yubi_isSet;
    bool m_allowed_2fa_method_yubi_isValid;

    QString m_allowed_countries;
    bool m_allowed_countries_isSet;
    bool m_allowed_countries_isValid;

    QString m_allowed_ips;
    bool m_allowed_ips_isSet;
    bool m_allowed_ips_isValid;

    bool m_ask_about_overwrites;
    bool m_ask_about_overwrites_isSet;
    bool m_ask_about_overwrites_isValid;

    QString m_bundle_activity_notifications;
    bool m_bundle_activity_notifications_isSet;
    bool m_bundle_activity_notifications_isValid;

    qint32 m_bundle_expiration;
    bool m_bundle_expiration_isSet;
    bool m_bundle_expiration_isValid;

    bool m_bundle_password_required;
    bool m_bundle_password_required_isSet;
    bool m_bundle_password_required_isValid;

    QString m_bundle_registration_notifications;
    bool m_bundle_registration_notifications_isSet;
    bool m_bundle_registration_notifications_isValid;

    bool m_bundle_require_share_recipient;
    bool m_bundle_require_share_recipient_isSet;
    bool m_bundle_require_share_recipient_isValid;

    QString m_bundle_upload_receipt_notifications;
    bool m_bundle_upload_receipt_notifications_isSet;
    bool m_bundle_upload_receipt_notifications_isValid;

    OAIImageEntity m_bundle_watermark_attachment;
    bool m_bundle_watermark_attachment_isSet;
    bool m_bundle_watermark_attachment_isValid;

    OAIObject m_bundle_watermark_value;
    bool m_bundle_watermark_value_isSet;
    bool m_bundle_watermark_value_isValid;

    QString m_color2_left;
    bool m_color2_left_isSet;
    bool m_color2_left_isValid;

    QString m_color2_link;
    bool m_color2_link_isSet;
    bool m_color2_link_isValid;

    QString m_color2_text;
    bool m_color2_text_isSet;
    bool m_color2_text_isValid;

    QString m_color2_top;
    bool m_color2_top_isSet;
    bool m_color2_top_isValid;

    QString m_color2_top_text;
    bool m_color2_top_text_isSet;
    bool m_color2_top_text_isValid;

    QString m_contact_name;
    bool m_contact_name_isSet;
    bool m_contact_name_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    bool m_custom_namespace;
    bool m_custom_namespace_isSet;
    bool m_custom_namespace_isValid;

    qint32 m_days_to_retain_backups;
    bool m_days_to_retain_backups_isSet;
    bool m_days_to_retain_backups_isValid;

    QString m_default_time_zone;
    bool m_default_time_zone_isSet;
    bool m_default_time_zone_isValid;

    bool m_desktop_app;
    bool m_desktop_app_isSet;
    bool m_desktop_app_isValid;

    bool m_desktop_app_session_ip_pinning;
    bool m_desktop_app_session_ip_pinning_isSet;
    bool m_desktop_app_session_ip_pinning_isValid;

    qint32 m_desktop_app_session_lifetime;
    bool m_desktop_app_session_lifetime_isSet;
    bool m_desktop_app_session_lifetime_isValid;

    bool m_disable_files_certificate_generation;
    bool m_disable_files_certificate_generation_isSet;
    bool m_disable_files_certificate_generation_isValid;

    bool m_disable_notifications;
    bool m_disable_notifications_isSet;
    bool m_disable_notifications_isValid;

    bool m_disable_password_reset;
    bool m_disable_password_reset_isSet;
    bool m_disable_password_reset_isValid;

    qint32 m_disable_users_from_inactivity_period_days;
    bool m_disable_users_from_inactivity_period_days_isSet;
    bool m_disable_users_from_inactivity_period_days_isValid;

    QString m_disallowed_countries;
    bool m_disallowed_countries_isSet;
    bool m_disallowed_countries_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    bool m_domain_hsts_header;
    bool m_domain_hsts_header_isSet;
    bool m_domain_hsts_header_isValid;

    QString m_domain_letsencrypt_chain;
    bool m_domain_letsencrypt_chain_isSet;
    bool m_domain_letsencrypt_chain_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    bool m_folder_permissions_groups_only;
    bool m_folder_permissions_groups_only_isSet;
    bool m_folder_permissions_groups_only_isValid;

    bool m_ftp_enabled;
    bool m_ftp_enabled_isSet;
    bool m_ftp_enabled_isValid;

    bool m_hipaa;
    bool m_hipaa_isSet;
    bool m_hipaa_isValid;

    OAIImageEntity m_icon128;
    bool m_icon128_isSet;
    bool m_icon128_isValid;

    OAIImageEntity m_icon16;
    bool m_icon16_isSet;
    bool m_icon16_isValid;

    OAIImageEntity m_icon32;
    bool m_icon32_isSet;
    bool m_icon32_isValid;

    OAIImageEntity m_icon48;
    bool m_icon48_isSet;
    bool m_icon48_isValid;

    QDateTime m_immutable_files_set_at;
    bool m_immutable_files_set_at_isSet;
    bool m_immutable_files_set_at_isValid;

    bool m_include_password_in_welcome_email;
    bool m_include_password_in_welcome_email_isSet;
    bool m_include_password_in_welcome_email_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_ldap_base_dn;
    bool m_ldap_base_dn_isSet;
    bool m_ldap_base_dn_isValid;

    QString m_ldap_domain;
    bool m_ldap_domain_isSet;
    bool m_ldap_domain_isValid;

    bool m_ldap_enabled;
    bool m_ldap_enabled_isSet;
    bool m_ldap_enabled_isValid;

    QString m_ldap_group_action;
    bool m_ldap_group_action_isSet;
    bool m_ldap_group_action_isValid;

    QString m_ldap_group_exclusion;
    bool m_ldap_group_exclusion_isSet;
    bool m_ldap_group_exclusion_isValid;

    QString m_ldap_group_inclusion;
    bool m_ldap_group_inclusion_isSet;
    bool m_ldap_group_inclusion_isValid;

    QString m_ldap_host;
    bool m_ldap_host_isSet;
    bool m_ldap_host_isValid;

    QString m_ldap_host_2;
    bool m_ldap_host_2_isSet;
    bool m_ldap_host_2_isValid;

    QString m_ldap_host_3;
    bool m_ldap_host_3_isSet;
    bool m_ldap_host_3_isValid;

    qint32 m_ldap_port;
    bool m_ldap_port_isSet;
    bool m_ldap_port_isValid;

    bool m_ldap_secure;
    bool m_ldap_secure_isSet;
    bool m_ldap_secure_isValid;

    QString m_ldap_type;
    bool m_ldap_type_isSet;
    bool m_ldap_type_isValid;

    QString m_ldap_user_action;
    bool m_ldap_user_action_isSet;
    bool m_ldap_user_action_isValid;

    QString m_ldap_user_include_groups;
    bool m_ldap_user_include_groups_isSet;
    bool m_ldap_user_include_groups_isValid;

    QString m_ldap_username;
    bool m_ldap_username_isSet;
    bool m_ldap_username_isValid;

    QString m_ldap_username_field;
    bool m_ldap_username_field_isSet;
    bool m_ldap_username_field_isValid;

    QString m_login_help_text;
    bool m_login_help_text_isSet;
    bool m_login_help_text_isValid;

    OAIImageEntity m_logo;
    bool m_logo_isSet;
    bool m_logo_isValid;

    qint32 m_max_prior_passwords;
    bool m_max_prior_passwords_isSet;
    bool m_max_prior_passwords_isValid;

    bool m_mobile_app;
    bool m_mobile_app_isSet;
    bool m_mobile_app_isValid;

    bool m_mobile_app_session_ip_pinning;
    bool m_mobile_app_session_ip_pinning_isSet;
    bool m_mobile_app_session_ip_pinning_isValid;

    qint32 m_mobile_app_session_lifetime;
    bool m_mobile_app_session_lifetime_isSet;
    bool m_mobile_app_session_lifetime_isValid;

    QString m_motd_text;
    bool m_motd_text_isSet;
    bool m_motd_text_isValid;

    bool m_motd_use_for_ftp;
    bool m_motd_use_for_ftp_isSet;
    bool m_motd_use_for_ftp_isValid;

    bool m_motd_use_for_sftp;
    bool m_motd_use_for_sftp_isSet;
    bool m_motd_use_for_sftp_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_next_billing_amount;
    bool m_next_billing_amount_isSet;
    bool m_next_billing_amount_isValid;

    QString m_next_billing_date;
    bool m_next_billing_date_isSet;
    bool m_next_billing_date_isValid;

    bool m_non_sso_groups_allowed;
    bool m_non_sso_groups_allowed_isSet;
    bool m_non_sso_groups_allowed_isValid;

    bool m_non_sso_users_allowed;
    bool m_non_sso_users_allowed_isSet;
    bool m_non_sso_users_allowed_isValid;

    bool m_office_integration_available;
    bool m_office_integration_available_isSet;
    bool m_office_integration_available_isValid;

    QString m_office_integration_type;
    bool m_office_integration_type_isSet;
    bool m_office_integration_type_isValid;

    QString m_oncehub_link;
    bool m_oncehub_link_isSet;
    bool m_oncehub_link_isValid;

    bool m_opt_out_global;
    bool m_opt_out_global_isSet;
    bool m_opt_out_global_isValid;

    bool m_overdue;
    bool m_overdue_isSet;
    bool m_overdue_isValid;

    qint32 m_password_min_length;
    bool m_password_min_length_isSet;
    bool m_password_min_length_isValid;

    bool m_password_require_letter;
    bool m_password_require_letter_isSet;
    bool m_password_require_letter_isValid;

    bool m_password_require_mixed;
    bool m_password_require_mixed_isSet;
    bool m_password_require_mixed_isValid;

    bool m_password_require_number;
    bool m_password_require_number_isSet;
    bool m_password_require_number_isValid;

    bool m_password_require_special;
    bool m_password_require_special_isSet;
    bool m_password_require_special_isValid;

    bool m_password_require_unbreached;
    bool m_password_require_unbreached_isSet;
    bool m_password_require_unbreached_isValid;

    bool m_password_requirements_apply_to_bundles;
    bool m_password_requirements_apply_to_bundles_isSet;
    bool m_password_requirements_apply_to_bundles_isValid;

    qint32 m_password_validity_days;
    bool m_password_validity_days_isSet;
    bool m_password_validity_days_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    bool m_pin_all_remote_servers_to_site_region;
    bool m_pin_all_remote_servers_to_site_region_isSet;
    bool m_pin_all_remote_servers_to_site_region_isValid;

    QString m_reply_to_email;
    bool m_reply_to_email_isSet;
    bool m_reply_to_email_isValid;

    bool m_require_2fa;
    bool m_require_2fa_isSet;
    bool m_require_2fa_isValid;

    QDateTime m_require_2fa_stop_time;
    bool m_require_2fa_stop_time_isSet;
    bool m_require_2fa_stop_time_isValid;

    QString m_require_2fa_user_type;
    bool m_require_2fa_user_type_isSet;
    bool m_require_2fa_user_type_isValid;

    OAISessionEntity m_session;
    bool m_session_isSet;
    bool m_session_isValid;

    double m_session_expiry;
    bool m_session_expiry_isSet;
    bool m_session_expiry_isValid;

    qint32 m_session_expiry_minutes;
    bool m_session_expiry_minutes_isSet;
    bool m_session_expiry_minutes_isValid;

    bool m_session_pinned_by_ip;
    bool m_session_pinned_by_ip_isSet;
    bool m_session_pinned_by_ip_isValid;

    bool m_sftp_enabled;
    bool m_sftp_enabled_isSet;
    bool m_sftp_enabled_isValid;

    QString m_sftp_host_key_type;
    bool m_sftp_host_key_type_isSet;
    bool m_sftp_host_key_type_isValid;

    bool m_sftp_insecure_ciphers;
    bool m_sftp_insecure_ciphers_isSet;
    bool m_sftp_insecure_ciphers_isValid;

    bool m_sftp_user_root_enabled;
    bool m_sftp_user_root_enabled_isSet;
    bool m_sftp_user_root_enabled_isValid;

    bool m_sharing_enabled;
    bool m_sharing_enabled_isSet;
    bool m_sharing_enabled_isValid;

    bool m_show_request_access_link;
    bool m_show_request_access_link_isSet;
    bool m_show_request_access_link_isValid;

    QString m_site_footer;
    bool m_site_footer_isSet;
    bool m_site_footer_isValid;

    QString m_site_header;
    bool m_site_header_isSet;
    bool m_site_header_isValid;

    QString m_smtp_address;
    bool m_smtp_address_isSet;
    bool m_smtp_address_isValid;

    QString m_smtp_authentication;
    bool m_smtp_authentication_isSet;
    bool m_smtp_authentication_isValid;

    QString m_smtp_from;
    bool m_smtp_from_isSet;
    bool m_smtp_from_isValid;

    qint32 m_smtp_port;
    bool m_smtp_port_isSet;
    bool m_smtp_port_isValid;

    QString m_smtp_username;
    bool m_smtp_username_isSet;
    bool m_smtp_username_isValid;

    bool m_ssl_required;
    bool m_ssl_required_isSet;
    bool m_ssl_required_isValid;

    QString m_subdomain;
    bool m_subdomain_isSet;
    bool m_subdomain_isValid;

    QDateTime m_switch_to_plan_date;
    bool m_switch_to_plan_date_isSet;
    bool m_switch_to_plan_date_isValid;

    bool m_tls_disabled;
    bool m_tls_disabled_isSet;
    bool m_tls_disabled_isValid;

    qint32 m_trial_days_left;
    bool m_trial_days_left_isSet;
    bool m_trial_days_left_isValid;

    QDateTime m_trial_until;
    bool m_trial_until_isSet;
    bool m_trial_until_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    bool m_uploads_via_email_authentication;
    bool m_uploads_via_email_authentication_isSet;
    bool m_uploads_via_email_authentication_isValid;

    bool m_use_provided_modified_at;
    bool m_use_provided_modified_at_isSet;
    bool m_use_provided_modified_at_isValid;

    OAIUserEntity m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    bool m_user_lockout;
    bool m_user_lockout_isSet;
    bool m_user_lockout_isValid;

    qint32 m_user_lockout_lock_period;
    bool m_user_lockout_lock_period_isSet;
    bool m_user_lockout_lock_period_isValid;

    qint32 m_user_lockout_tries;
    bool m_user_lockout_tries_isSet;
    bool m_user_lockout_tries_isValid;

    qint32 m_user_lockout_within;
    bool m_user_lockout_within_isSet;
    bool m_user_lockout_within_isValid;

    bool m_user_requests_enabled;
    bool m_user_requests_enabled_isSet;
    bool m_user_requests_enabled_isValid;

    bool m_user_requests_notify_admins;
    bool m_user_requests_notify_admins_isSet;
    bool m_user_requests_notify_admins_isValid;

    QString m_welcome_custom_text;
    bool m_welcome_custom_text_isSet;
    bool m_welcome_custom_text_isValid;

    QString m_welcome_email_cc;
    bool m_welcome_email_cc_isSet;
    bool m_welcome_email_cc_isValid;

    bool m_welcome_email_enabled;
    bool m_welcome_email_enabled_isSet;
    bool m_welcome_email_enabled_isValid;

    QString m_welcome_email_subject;
    bool m_welcome_email_subject_isSet;
    bool m_welcome_email_subject_isValid;

    QString m_welcome_screen;
    bool m_welcome_screen_isSet;
    bool m_welcome_screen_isValid;

    bool m_windows_mode_ftp;
    bool m_windows_mode_ftp_isSet;
    bool m_windows_mode_ftp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISiteEntity)

#endif // OAISiteEntity_H
