/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBundleDownloadEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBundleDownloadEntity::OAIBundleDownloadEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBundleDownloadEntity::OAIBundleDownloadEntity() {
    this->initializeModel();
}

OAIBundleDownloadEntity::~OAIBundleDownloadEntity() {}

void OAIBundleDownloadEntity::initializeModel() {

    m_bundle_registration_isSet = false;
    m_bundle_registration_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_download_method_isSet = false;
    m_download_method_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;
}

void OAIBundleDownloadEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBundleDownloadEntity::fromJsonObject(QJsonObject json) {

    m_bundle_registration_isValid = ::OpenAPI::fromJsonValue(m_bundle_registration, json[QString("bundle_registration")]);
    m_bundle_registration_isSet = !json[QString("bundle_registration")].isNull() && m_bundle_registration_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_download_method_isValid = ::OpenAPI::fromJsonValue(m_download_method, json[QString("download_method")]);
    m_download_method_isSet = !json[QString("download_method")].isNull() && m_download_method_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;
}

QString OAIBundleDownloadEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBundleDownloadEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_bundle_registration.isSet()) {
        obj.insert(QString("bundle_registration"), ::OpenAPI::toJsonValue(m_bundle_registration));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_download_method_isSet) {
        obj.insert(QString("download_method"), ::OpenAPI::toJsonValue(m_download_method));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    return obj;
}

OAIBundleRegistrationEntity OAIBundleDownloadEntity::getBundleRegistration() const {
    return m_bundle_registration;
}
void OAIBundleDownloadEntity::setBundleRegistration(const OAIBundleRegistrationEntity &bundle_registration) {
    m_bundle_registration = bundle_registration;
    m_bundle_registration_isSet = true;
}

bool OAIBundleDownloadEntity::is_bundle_registration_Set() const{
    return m_bundle_registration_isSet;
}

bool OAIBundleDownloadEntity::is_bundle_registration_Valid() const{
    return m_bundle_registration_isValid;
}

QDateTime OAIBundleDownloadEntity::getCreatedAt() const {
    return m_created_at;
}
void OAIBundleDownloadEntity::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIBundleDownloadEntity::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIBundleDownloadEntity::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIBundleDownloadEntity::getDownloadMethod() const {
    return m_download_method;
}
void OAIBundleDownloadEntity::setDownloadMethod(const QString &download_method) {
    m_download_method = download_method;
    m_download_method_isSet = true;
}

bool OAIBundleDownloadEntity::is_download_method_Set() const{
    return m_download_method_isSet;
}

bool OAIBundleDownloadEntity::is_download_method_Valid() const{
    return m_download_method_isValid;
}

QString OAIBundleDownloadEntity::getPath() const {
    return m_path;
}
void OAIBundleDownloadEntity::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIBundleDownloadEntity::is_path_Set() const{
    return m_path_isSet;
}

bool OAIBundleDownloadEntity::is_path_Valid() const{
    return m_path_isValid;
}

bool OAIBundleDownloadEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bundle_registration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBundleDownloadEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
