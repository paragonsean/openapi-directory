/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionNotificationExportEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionNotificationExportEntity::OAIActionNotificationExportEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionNotificationExportEntity::OAIActionNotificationExportEntity() {
    this->initializeModel();
}

OAIActionNotificationExportEntity::~OAIActionNotificationExportEntity() {}

void OAIActionNotificationExportEntity::initializeModel() {

    m_end_at_isSet = false;
    m_end_at_isValid = false;

    m_export_version_isSet = false;
    m_export_version_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_query_folder_isSet = false;
    m_query_folder_isValid = false;

    m_query_message_isSet = false;
    m_query_message_isValid = false;

    m_query_path_isSet = false;
    m_query_path_isValid = false;

    m_query_request_method_isSet = false;
    m_query_request_method_isValid = false;

    m_query_request_url_isSet = false;
    m_query_request_url_isValid = false;

    m_query_status_isSet = false;
    m_query_status_isValid = false;

    m_query_success_isSet = false;
    m_query_success_isValid = false;

    m_results_url_isSet = false;
    m_results_url_isValid = false;

    m_start_at_isSet = false;
    m_start_at_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIActionNotificationExportEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionNotificationExportEntity::fromJsonObject(QJsonObject json) {

    m_end_at_isValid = ::OpenAPI::fromJsonValue(m_end_at, json[QString("end_at")]);
    m_end_at_isSet = !json[QString("end_at")].isNull() && m_end_at_isValid;

    m_export_version_isValid = ::OpenAPI::fromJsonValue(m_export_version, json[QString("export_version")]);
    m_export_version_isSet = !json[QString("export_version")].isNull() && m_export_version_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_query_folder_isValid = ::OpenAPI::fromJsonValue(m_query_folder, json[QString("query_folder")]);
    m_query_folder_isSet = !json[QString("query_folder")].isNull() && m_query_folder_isValid;

    m_query_message_isValid = ::OpenAPI::fromJsonValue(m_query_message, json[QString("query_message")]);
    m_query_message_isSet = !json[QString("query_message")].isNull() && m_query_message_isValid;

    m_query_path_isValid = ::OpenAPI::fromJsonValue(m_query_path, json[QString("query_path")]);
    m_query_path_isSet = !json[QString("query_path")].isNull() && m_query_path_isValid;

    m_query_request_method_isValid = ::OpenAPI::fromJsonValue(m_query_request_method, json[QString("query_request_method")]);
    m_query_request_method_isSet = !json[QString("query_request_method")].isNull() && m_query_request_method_isValid;

    m_query_request_url_isValid = ::OpenAPI::fromJsonValue(m_query_request_url, json[QString("query_request_url")]);
    m_query_request_url_isSet = !json[QString("query_request_url")].isNull() && m_query_request_url_isValid;

    m_query_status_isValid = ::OpenAPI::fromJsonValue(m_query_status, json[QString("query_status")]);
    m_query_status_isSet = !json[QString("query_status")].isNull() && m_query_status_isValid;

    m_query_success_isValid = ::OpenAPI::fromJsonValue(m_query_success, json[QString("query_success")]);
    m_query_success_isSet = !json[QString("query_success")].isNull() && m_query_success_isValid;

    m_results_url_isValid = ::OpenAPI::fromJsonValue(m_results_url, json[QString("results_url")]);
    m_results_url_isSet = !json[QString("results_url")].isNull() && m_results_url_isValid;

    m_start_at_isValid = ::OpenAPI::fromJsonValue(m_start_at, json[QString("start_at")]);
    m_start_at_isSet = !json[QString("start_at")].isNull() && m_start_at_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIActionNotificationExportEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionNotificationExportEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_end_at_isSet) {
        obj.insert(QString("end_at"), ::OpenAPI::toJsonValue(m_end_at));
    }
    if (m_export_version_isSet) {
        obj.insert(QString("export_version"), ::OpenAPI::toJsonValue(m_export_version));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_query_folder_isSet) {
        obj.insert(QString("query_folder"), ::OpenAPI::toJsonValue(m_query_folder));
    }
    if (m_query_message_isSet) {
        obj.insert(QString("query_message"), ::OpenAPI::toJsonValue(m_query_message));
    }
    if (m_query_path_isSet) {
        obj.insert(QString("query_path"), ::OpenAPI::toJsonValue(m_query_path));
    }
    if (m_query_request_method_isSet) {
        obj.insert(QString("query_request_method"), ::OpenAPI::toJsonValue(m_query_request_method));
    }
    if (m_query_request_url_isSet) {
        obj.insert(QString("query_request_url"), ::OpenAPI::toJsonValue(m_query_request_url));
    }
    if (m_query_status_isSet) {
        obj.insert(QString("query_status"), ::OpenAPI::toJsonValue(m_query_status));
    }
    if (m_query_success_isSet) {
        obj.insert(QString("query_success"), ::OpenAPI::toJsonValue(m_query_success));
    }
    if (m_results_url_isSet) {
        obj.insert(QString("results_url"), ::OpenAPI::toJsonValue(m_results_url));
    }
    if (m_start_at_isSet) {
        obj.insert(QString("start_at"), ::OpenAPI::toJsonValue(m_start_at));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIActionNotificationExportEntity::getEndAt() const {
    return m_end_at;
}
void OAIActionNotificationExportEntity::setEndAt(const QDateTime &end_at) {
    m_end_at = end_at;
    m_end_at_isSet = true;
}

bool OAIActionNotificationExportEntity::is_end_at_Set() const{
    return m_end_at_isSet;
}

bool OAIActionNotificationExportEntity::is_end_at_Valid() const{
    return m_end_at_isValid;
}

QString OAIActionNotificationExportEntity::getExportVersion() const {
    return m_export_version;
}
void OAIActionNotificationExportEntity::setExportVersion(const QString &export_version) {
    m_export_version = export_version;
    m_export_version_isSet = true;
}

bool OAIActionNotificationExportEntity::is_export_version_Set() const{
    return m_export_version_isSet;
}

bool OAIActionNotificationExportEntity::is_export_version_Valid() const{
    return m_export_version_isValid;
}

qint32 OAIActionNotificationExportEntity::getId() const {
    return m_id;
}
void OAIActionNotificationExportEntity::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIActionNotificationExportEntity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIActionNotificationExportEntity::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIActionNotificationExportEntity::getQueryFolder() const {
    return m_query_folder;
}
void OAIActionNotificationExportEntity::setQueryFolder(const QString &query_folder) {
    m_query_folder = query_folder;
    m_query_folder_isSet = true;
}

bool OAIActionNotificationExportEntity::is_query_folder_Set() const{
    return m_query_folder_isSet;
}

bool OAIActionNotificationExportEntity::is_query_folder_Valid() const{
    return m_query_folder_isValid;
}

QString OAIActionNotificationExportEntity::getQueryMessage() const {
    return m_query_message;
}
void OAIActionNotificationExportEntity::setQueryMessage(const QString &query_message) {
    m_query_message = query_message;
    m_query_message_isSet = true;
}

bool OAIActionNotificationExportEntity::is_query_message_Set() const{
    return m_query_message_isSet;
}

bool OAIActionNotificationExportEntity::is_query_message_Valid() const{
    return m_query_message_isValid;
}

QString OAIActionNotificationExportEntity::getQueryPath() const {
    return m_query_path;
}
void OAIActionNotificationExportEntity::setQueryPath(const QString &query_path) {
    m_query_path = query_path;
    m_query_path_isSet = true;
}

bool OAIActionNotificationExportEntity::is_query_path_Set() const{
    return m_query_path_isSet;
}

bool OAIActionNotificationExportEntity::is_query_path_Valid() const{
    return m_query_path_isValid;
}

QString OAIActionNotificationExportEntity::getQueryRequestMethod() const {
    return m_query_request_method;
}
void OAIActionNotificationExportEntity::setQueryRequestMethod(const QString &query_request_method) {
    m_query_request_method = query_request_method;
    m_query_request_method_isSet = true;
}

bool OAIActionNotificationExportEntity::is_query_request_method_Set() const{
    return m_query_request_method_isSet;
}

bool OAIActionNotificationExportEntity::is_query_request_method_Valid() const{
    return m_query_request_method_isValid;
}

QString OAIActionNotificationExportEntity::getQueryRequestUrl() const {
    return m_query_request_url;
}
void OAIActionNotificationExportEntity::setQueryRequestUrl(const QString &query_request_url) {
    m_query_request_url = query_request_url;
    m_query_request_url_isSet = true;
}

bool OAIActionNotificationExportEntity::is_query_request_url_Set() const{
    return m_query_request_url_isSet;
}

bool OAIActionNotificationExportEntity::is_query_request_url_Valid() const{
    return m_query_request_url_isValid;
}

QString OAIActionNotificationExportEntity::getQueryStatus() const {
    return m_query_status;
}
void OAIActionNotificationExportEntity::setQueryStatus(const QString &query_status) {
    m_query_status = query_status;
    m_query_status_isSet = true;
}

bool OAIActionNotificationExportEntity::is_query_status_Set() const{
    return m_query_status_isSet;
}

bool OAIActionNotificationExportEntity::is_query_status_Valid() const{
    return m_query_status_isValid;
}

bool OAIActionNotificationExportEntity::isQuerySuccess() const {
    return m_query_success;
}
void OAIActionNotificationExportEntity::setQuerySuccess(const bool &query_success) {
    m_query_success = query_success;
    m_query_success_isSet = true;
}

bool OAIActionNotificationExportEntity::is_query_success_Set() const{
    return m_query_success_isSet;
}

bool OAIActionNotificationExportEntity::is_query_success_Valid() const{
    return m_query_success_isValid;
}

QString OAIActionNotificationExportEntity::getResultsUrl() const {
    return m_results_url;
}
void OAIActionNotificationExportEntity::setResultsUrl(const QString &results_url) {
    m_results_url = results_url;
    m_results_url_isSet = true;
}

bool OAIActionNotificationExportEntity::is_results_url_Set() const{
    return m_results_url_isSet;
}

bool OAIActionNotificationExportEntity::is_results_url_Valid() const{
    return m_results_url_isValid;
}

QDateTime OAIActionNotificationExportEntity::getStartAt() const {
    return m_start_at;
}
void OAIActionNotificationExportEntity::setStartAt(const QDateTime &start_at) {
    m_start_at = start_at;
    m_start_at_isSet = true;
}

bool OAIActionNotificationExportEntity::is_start_at_Set() const{
    return m_start_at_isSet;
}

bool OAIActionNotificationExportEntity::is_start_at_Valid() const{
    return m_start_at_isValid;
}

QString OAIActionNotificationExportEntity::getStatus() const {
    return m_status;
}
void OAIActionNotificationExportEntity::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIActionNotificationExportEntity::is_status_Set() const{
    return m_status_isSet;
}

bool OAIActionNotificationExportEntity::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIActionNotificationExportEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_folder_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_request_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_request_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_success_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionNotificationExportEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
