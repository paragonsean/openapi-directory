/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionNotificationExportResultEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionNotificationExportResultEntity::OAIActionNotificationExportResultEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionNotificationExportResultEntity::OAIActionNotificationExportResultEntity() {
    this->initializeModel();
}

OAIActionNotificationExportResultEntity::~OAIActionNotificationExportResultEntity() {}

void OAIActionNotificationExportResultEntity::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_folder_isSet = false;
    m_folder_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_request_headers_isSet = false;
    m_request_headers_isValid = false;

    m_request_method_isSet = false;
    m_request_method_isValid = false;

    m_request_url_isSet = false;
    m_request_url_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_success_isSet = false;
    m_success_isValid = false;
}

void OAIActionNotificationExportResultEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionNotificationExportResultEntity::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_folder_isValid = ::OpenAPI::fromJsonValue(m_folder, json[QString("folder")]);
    m_folder_isSet = !json[QString("folder")].isNull() && m_folder_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_request_headers_isValid = ::OpenAPI::fromJsonValue(m_request_headers, json[QString("request_headers")]);
    m_request_headers_isSet = !json[QString("request_headers")].isNull() && m_request_headers_isValid;

    m_request_method_isValid = ::OpenAPI::fromJsonValue(m_request_method, json[QString("request_method")]);
    m_request_method_isSet = !json[QString("request_method")].isNull() && m_request_method_isValid;

    m_request_url_isValid = ::OpenAPI::fromJsonValue(m_request_url, json[QString("request_url")]);
    m_request_url_isSet = !json[QString("request_url")].isNull() && m_request_url_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_success_isValid = ::OpenAPI::fromJsonValue(m_success, json[QString("success")]);
    m_success_isSet = !json[QString("success")].isNull() && m_success_isValid;
}

QString OAIActionNotificationExportResultEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionNotificationExportResultEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_folder_isSet) {
        obj.insert(QString("folder"), ::OpenAPI::toJsonValue(m_folder));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_request_headers_isSet) {
        obj.insert(QString("request_headers"), ::OpenAPI::toJsonValue(m_request_headers));
    }
    if (m_request_method_isSet) {
        obj.insert(QString("request_method"), ::OpenAPI::toJsonValue(m_request_method));
    }
    if (m_request_url_isSet) {
        obj.insert(QString("request_url"), ::OpenAPI::toJsonValue(m_request_url));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_success_isSet) {
        obj.insert(QString("success"), ::OpenAPI::toJsonValue(m_success));
    }
    return obj;
}

qint32 OAIActionNotificationExportResultEntity::getCreatedAt() const {
    return m_created_at;
}
void OAIActionNotificationExportResultEntity::setCreatedAt(const qint32 &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIActionNotificationExportResultEntity::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIActionNotificationExportResultEntity::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIActionNotificationExportResultEntity::getFolder() const {
    return m_folder;
}
void OAIActionNotificationExportResultEntity::setFolder(const QString &folder) {
    m_folder = folder;
    m_folder_isSet = true;
}

bool OAIActionNotificationExportResultEntity::is_folder_Set() const{
    return m_folder_isSet;
}

bool OAIActionNotificationExportResultEntity::is_folder_Valid() const{
    return m_folder_isValid;
}

qint32 OAIActionNotificationExportResultEntity::getId() const {
    return m_id;
}
void OAIActionNotificationExportResultEntity::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIActionNotificationExportResultEntity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIActionNotificationExportResultEntity::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIActionNotificationExportResultEntity::getMessage() const {
    return m_message;
}
void OAIActionNotificationExportResultEntity::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIActionNotificationExportResultEntity::is_message_Set() const{
    return m_message_isSet;
}

bool OAIActionNotificationExportResultEntity::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIActionNotificationExportResultEntity::getPath() const {
    return m_path;
}
void OAIActionNotificationExportResultEntity::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIActionNotificationExportResultEntity::is_path_Set() const{
    return m_path_isSet;
}

bool OAIActionNotificationExportResultEntity::is_path_Valid() const{
    return m_path_isValid;
}

QString OAIActionNotificationExportResultEntity::getRequestHeaders() const {
    return m_request_headers;
}
void OAIActionNotificationExportResultEntity::setRequestHeaders(const QString &request_headers) {
    m_request_headers = request_headers;
    m_request_headers_isSet = true;
}

bool OAIActionNotificationExportResultEntity::is_request_headers_Set() const{
    return m_request_headers_isSet;
}

bool OAIActionNotificationExportResultEntity::is_request_headers_Valid() const{
    return m_request_headers_isValid;
}

QString OAIActionNotificationExportResultEntity::getRequestMethod() const {
    return m_request_method;
}
void OAIActionNotificationExportResultEntity::setRequestMethod(const QString &request_method) {
    m_request_method = request_method;
    m_request_method_isSet = true;
}

bool OAIActionNotificationExportResultEntity::is_request_method_Set() const{
    return m_request_method_isSet;
}

bool OAIActionNotificationExportResultEntity::is_request_method_Valid() const{
    return m_request_method_isValid;
}

QString OAIActionNotificationExportResultEntity::getRequestUrl() const {
    return m_request_url;
}
void OAIActionNotificationExportResultEntity::setRequestUrl(const QString &request_url) {
    m_request_url = request_url;
    m_request_url_isSet = true;
}

bool OAIActionNotificationExportResultEntity::is_request_url_Set() const{
    return m_request_url_isSet;
}

bool OAIActionNotificationExportResultEntity::is_request_url_Valid() const{
    return m_request_url_isValid;
}

qint32 OAIActionNotificationExportResultEntity::getStatus() const {
    return m_status;
}
void OAIActionNotificationExportResultEntity::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIActionNotificationExportResultEntity::is_status_Set() const{
    return m_status_isSet;
}

bool OAIActionNotificationExportResultEntity::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIActionNotificationExportResultEntity::isSuccess() const {
    return m_success;
}
void OAIActionNotificationExportResultEntity::setSuccess(const bool &success) {
    m_success = success;
    m_success_isSet = true;
}

bool OAIActionNotificationExportResultEntity::is_success_Set() const{
    return m_success_isSet;
}

bool OAIActionNotificationExportResultEntity::is_success_Valid() const{
    return m_success_isValid;
}

bool OAIActionNotificationExportResultEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_folder_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_headers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_success_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionNotificationExportResultEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
