/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFileEntity.h
 *
 * List Folders by path
 */

#ifndef OAIFileEntity_H
#define OAIFileEntity_H

#include <QJsonObject>

#include "OAIPreviewEntity.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPreviewEntity;

class OAIFileEntity : public OAIObject {
public:
    OAIFileEntity();
    OAIFileEntity(QString json);
    ~OAIFileEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCrc32() const;
    void setCrc32(const QString &crc32);
    bool is_crc32_Set() const;
    bool is_crc32_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getDownloadUri() const;
    void setDownloadUri(const QString &download_uri);
    bool is_download_uri_Set() const;
    bool is_download_uri_Valid() const;

    bool isIsLocked() const;
    void setIsLocked(const bool &is_locked);
    bool is_is_locked_Set() const;
    bool is_is_locked_Valid() const;

    QString getMd5() const;
    void setMd5(const QString &md5);
    bool is_md5_Set() const;
    bool is_md5_Valid() const;

    QString getMimeType() const;
    void setMimeType(const QString &mime_type);
    bool is_mime_type_Set() const;
    bool is_mime_type_Valid() const;

    QDateTime getMtime() const;
    void setMtime(const QDateTime &mtime);
    bool is_mtime_Set() const;
    bool is_mtime_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getPermissions() const;
    void setPermissions(const QString &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    OAIPreviewEntity getPreview() const;
    void setPreview(const OAIPreviewEntity &preview);
    bool is_preview_Set() const;
    bool is_preview_Valid() const;

    qint32 getPreviewId() const;
    void setPreviewId(const qint32 &preview_id);
    bool is_preview_id_Set() const;
    bool is_preview_id_Valid() const;

    QString getPriorityColor() const;
    void setPriorityColor(const QString &priority_color);
    bool is_priority_color_Set() const;
    bool is_priority_color_Valid() const;

    QDateTime getProvidedMtime() const;
    void setProvidedMtime(const QDateTime &provided_mtime);
    bool is_provided_mtime_Set() const;
    bool is_provided_mtime_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    bool isSubfoldersLocked() const;
    void setSubfoldersLocked(const bool &subfolders_locked);
    bool is_subfolders_locked_Set() const;
    bool is_subfolders_locked_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_crc32;
    bool m_crc32_isSet;
    bool m_crc32_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_download_uri;
    bool m_download_uri_isSet;
    bool m_download_uri_isValid;

    bool m_is_locked;
    bool m_is_locked_isSet;
    bool m_is_locked_isValid;

    QString m_md5;
    bool m_md5_isSet;
    bool m_md5_isValid;

    QString m_mime_type;
    bool m_mime_type_isSet;
    bool m_mime_type_isValid;

    QDateTime m_mtime;
    bool m_mtime_isSet;
    bool m_mtime_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    OAIPreviewEntity m_preview;
    bool m_preview_isSet;
    bool m_preview_isValid;

    qint32 m_preview_id;
    bool m_preview_id_isSet;
    bool m_preview_id_isValid;

    QString m_priority_color;
    bool m_priority_color_isSet;
    bool m_priority_color_isValid;

    QDateTime m_provided_mtime;
    bool m_provided_mtime_isSet;
    bool m_provided_mtime_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    bool m_subfolders_locked;
    bool m_subfolders_locked_isSet;
    bool m_subfolders_locked_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFileEntity)

#endif // OAIFileEntity_H
