/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountLineItemEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountLineItemEntity::OAIAccountLineItemEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountLineItemEntity::OAIAccountLineItemEntity() {
    this->initializeModel();
}

OAIAccountLineItemEntity::~OAIAccountLineItemEntity() {}

void OAIAccountLineItemEntity::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_download_uri_isSet = false;
    m_download_uri_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_invoice_line_items_isSet = false;
    m_invoice_line_items_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_payment_line_items_isSet = false;
    m_payment_line_items_isValid = false;

    m_payment_reversed_at_isSet = false;
    m_payment_reversed_at_isValid = false;

    m_payment_type_isSet = false;
    m_payment_type_isValid = false;

    m_site_name_isSet = false;
    m_site_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIAccountLineItemEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountLineItemEntity::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("balance")]);
    m_balance_isSet = !json[QString("balance")].isNull() && m_balance_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_download_uri_isValid = ::OpenAPI::fromJsonValue(m_download_uri, json[QString("download_uri")]);
    m_download_uri_isSet = !json[QString("download_uri")].isNull() && m_download_uri_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_invoice_line_items_isValid = ::OpenAPI::fromJsonValue(m_invoice_line_items, json[QString("invoice_line_items")]);
    m_invoice_line_items_isSet = !json[QString("invoice_line_items")].isNull() && m_invoice_line_items_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_payment_line_items_isValid = ::OpenAPI::fromJsonValue(m_payment_line_items, json[QString("payment_line_items")]);
    m_payment_line_items_isSet = !json[QString("payment_line_items")].isNull() && m_payment_line_items_isValid;

    m_payment_reversed_at_isValid = ::OpenAPI::fromJsonValue(m_payment_reversed_at, json[QString("payment_reversed_at")]);
    m_payment_reversed_at_isSet = !json[QString("payment_reversed_at")].isNull() && m_payment_reversed_at_isValid;

    m_payment_type_isValid = ::OpenAPI::fromJsonValue(m_payment_type, json[QString("payment_type")]);
    m_payment_type_isSet = !json[QString("payment_type")].isNull() && m_payment_type_isValid;

    m_site_name_isValid = ::OpenAPI::fromJsonValue(m_site_name, json[QString("site_name")]);
    m_site_name_isSet = !json[QString("site_name")].isNull() && m_site_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAIAccountLineItemEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountLineItemEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_balance_isSet) {
        obj.insert(QString("balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_download_uri_isSet) {
        obj.insert(QString("download_uri"), ::OpenAPI::toJsonValue(m_download_uri));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_invoice_line_items.size() > 0) {
        obj.insert(QString("invoice_line_items"), ::OpenAPI::toJsonValue(m_invoice_line_items));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_payment_line_items.size() > 0) {
        obj.insert(QString("payment_line_items"), ::OpenAPI::toJsonValue(m_payment_line_items));
    }
    if (m_payment_reversed_at_isSet) {
        obj.insert(QString("payment_reversed_at"), ::OpenAPI::toJsonValue(m_payment_reversed_at));
    }
    if (m_payment_type_isSet) {
        obj.insert(QString("payment_type"), ::OpenAPI::toJsonValue(m_payment_type));
    }
    if (m_site_name_isSet) {
        obj.insert(QString("site_name"), ::OpenAPI::toJsonValue(m_site_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

double OAIAccountLineItemEntity::getAmount() const {
    return m_amount;
}
void OAIAccountLineItemEntity::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIAccountLineItemEntity::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIAccountLineItemEntity::is_amount_Valid() const{
    return m_amount_isValid;
}

double OAIAccountLineItemEntity::getBalance() const {
    return m_balance;
}
void OAIAccountLineItemEntity::setBalance(const double &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAIAccountLineItemEntity::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAIAccountLineItemEntity::is_balance_Valid() const{
    return m_balance_isValid;
}

QDateTime OAIAccountLineItemEntity::getCreatedAt() const {
    return m_created_at;
}
void OAIAccountLineItemEntity::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIAccountLineItemEntity::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIAccountLineItemEntity::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIAccountLineItemEntity::getCurrency() const {
    return m_currency;
}
void OAIAccountLineItemEntity::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIAccountLineItemEntity::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIAccountLineItemEntity::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAIAccountLineItemEntity::getDownloadUri() const {
    return m_download_uri;
}
void OAIAccountLineItemEntity::setDownloadUri(const QString &download_uri) {
    m_download_uri = download_uri;
    m_download_uri_isSet = true;
}

bool OAIAccountLineItemEntity::is_download_uri_Set() const{
    return m_download_uri_isSet;
}

bool OAIAccountLineItemEntity::is_download_uri_Valid() const{
    return m_download_uri_isValid;
}

qint32 OAIAccountLineItemEntity::getId() const {
    return m_id;
}
void OAIAccountLineItemEntity::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAccountLineItemEntity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAccountLineItemEntity::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAIInvoiceLineItemEntity> OAIAccountLineItemEntity::getInvoiceLineItems() const {
    return m_invoice_line_items;
}
void OAIAccountLineItemEntity::setInvoiceLineItems(const QList<OAIInvoiceLineItemEntity> &invoice_line_items) {
    m_invoice_line_items = invoice_line_items;
    m_invoice_line_items_isSet = true;
}

bool OAIAccountLineItemEntity::is_invoice_line_items_Set() const{
    return m_invoice_line_items_isSet;
}

bool OAIAccountLineItemEntity::is_invoice_line_items_Valid() const{
    return m_invoice_line_items_isValid;
}

QString OAIAccountLineItemEntity::getMethod() const {
    return m_method;
}
void OAIAccountLineItemEntity::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIAccountLineItemEntity::is_method_Set() const{
    return m_method_isSet;
}

bool OAIAccountLineItemEntity::is_method_Valid() const{
    return m_method_isValid;
}

QList<OAIPaymentLineItemEntity> OAIAccountLineItemEntity::getPaymentLineItems() const {
    return m_payment_line_items;
}
void OAIAccountLineItemEntity::setPaymentLineItems(const QList<OAIPaymentLineItemEntity> &payment_line_items) {
    m_payment_line_items = payment_line_items;
    m_payment_line_items_isSet = true;
}

bool OAIAccountLineItemEntity::is_payment_line_items_Set() const{
    return m_payment_line_items_isSet;
}

bool OAIAccountLineItemEntity::is_payment_line_items_Valid() const{
    return m_payment_line_items_isValid;
}

QDateTime OAIAccountLineItemEntity::getPaymentReversedAt() const {
    return m_payment_reversed_at;
}
void OAIAccountLineItemEntity::setPaymentReversedAt(const QDateTime &payment_reversed_at) {
    m_payment_reversed_at = payment_reversed_at;
    m_payment_reversed_at_isSet = true;
}

bool OAIAccountLineItemEntity::is_payment_reversed_at_Set() const{
    return m_payment_reversed_at_isSet;
}

bool OAIAccountLineItemEntity::is_payment_reversed_at_Valid() const{
    return m_payment_reversed_at_isValid;
}

QString OAIAccountLineItemEntity::getPaymentType() const {
    return m_payment_type;
}
void OAIAccountLineItemEntity::setPaymentType(const QString &payment_type) {
    m_payment_type = payment_type;
    m_payment_type_isSet = true;
}

bool OAIAccountLineItemEntity::is_payment_type_Set() const{
    return m_payment_type_isSet;
}

bool OAIAccountLineItemEntity::is_payment_type_Valid() const{
    return m_payment_type_isValid;
}

QString OAIAccountLineItemEntity::getSiteName() const {
    return m_site_name;
}
void OAIAccountLineItemEntity::setSiteName(const QString &site_name) {
    m_site_name = site_name;
    m_site_name_isSet = true;
}

bool OAIAccountLineItemEntity::is_site_name_Set() const{
    return m_site_name_isSet;
}

bool OAIAccountLineItemEntity::is_site_name_Valid() const{
    return m_site_name_isValid;
}

QString OAIAccountLineItemEntity::getType() const {
    return m_type;
}
void OAIAccountLineItemEntity::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAccountLineItemEntity::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAccountLineItemEntity::is_type_Valid() const{
    return m_type_isValid;
}

QDateTime OAIAccountLineItemEntity::getUpdatedAt() const {
    return m_updated_at;
}
void OAIAccountLineItemEntity::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIAccountLineItemEntity::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIAccountLineItemEntity::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIAccountLineItemEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_line_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_line_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_reversed_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_site_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountLineItemEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
