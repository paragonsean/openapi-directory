/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutomationRunEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutomationRunEntity::OAIAutomationRunEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutomationRunEntity::OAIAutomationRunEntity() {
    this->initializeModel();
}

OAIAutomationRunEntity::~OAIAutomationRunEntity() {}

void OAIAutomationRunEntity::initializeModel() {

    m_automation_id_isSet = false;
    m_automation_id_isValid = false;

    m_completed_at_isSet = false;
    m_completed_at_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_messages_url_isSet = false;
    m_status_messages_url_isValid = false;
}

void OAIAutomationRunEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutomationRunEntity::fromJsonObject(QJsonObject json) {

    m_automation_id_isValid = ::OpenAPI::fromJsonValue(m_automation_id, json[QString("automation_id")]);
    m_automation_id_isSet = !json[QString("automation_id")].isNull() && m_automation_id_isValid;

    m_completed_at_isValid = ::OpenAPI::fromJsonValue(m_completed_at, json[QString("completed_at")]);
    m_completed_at_isSet = !json[QString("completed_at")].isNull() && m_completed_at_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_messages_url_isValid = ::OpenAPI::fromJsonValue(m_status_messages_url, json[QString("status_messages_url")]);
    m_status_messages_url_isSet = !json[QString("status_messages_url")].isNull() && m_status_messages_url_isValid;
}

QString OAIAutomationRunEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutomationRunEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_automation_id_isSet) {
        obj.insert(QString("automation_id"), ::OpenAPI::toJsonValue(m_automation_id));
    }
    if (m_completed_at_isSet) {
        obj.insert(QString("completed_at"), ::OpenAPI::toJsonValue(m_completed_at));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_messages_url_isSet) {
        obj.insert(QString("status_messages_url"), ::OpenAPI::toJsonValue(m_status_messages_url));
    }
    return obj;
}

qint32 OAIAutomationRunEntity::getAutomationId() const {
    return m_automation_id;
}
void OAIAutomationRunEntity::setAutomationId(const qint32 &automation_id) {
    m_automation_id = automation_id;
    m_automation_id_isSet = true;
}

bool OAIAutomationRunEntity::is_automation_id_Set() const{
    return m_automation_id_isSet;
}

bool OAIAutomationRunEntity::is_automation_id_Valid() const{
    return m_automation_id_isValid;
}

QDateTime OAIAutomationRunEntity::getCompletedAt() const {
    return m_completed_at;
}
void OAIAutomationRunEntity::setCompletedAt(const QDateTime &completed_at) {
    m_completed_at = completed_at;
    m_completed_at_isSet = true;
}

bool OAIAutomationRunEntity::is_completed_at_Set() const{
    return m_completed_at_isSet;
}

bool OAIAutomationRunEntity::is_completed_at_Valid() const{
    return m_completed_at_isValid;
}

QDateTime OAIAutomationRunEntity::getCreatedAt() const {
    return m_created_at;
}
void OAIAutomationRunEntity::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIAutomationRunEntity::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIAutomationRunEntity::is_created_at_Valid() const{
    return m_created_at_isValid;
}

qint32 OAIAutomationRunEntity::getId() const {
    return m_id;
}
void OAIAutomationRunEntity::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAutomationRunEntity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAutomationRunEntity::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAutomationRunEntity::getStatus() const {
    return m_status;
}
void OAIAutomationRunEntity::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAutomationRunEntity::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAutomationRunEntity::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIAutomationRunEntity::getStatusMessagesUrl() const {
    return m_status_messages_url;
}
void OAIAutomationRunEntity::setStatusMessagesUrl(const QString &status_messages_url) {
    m_status_messages_url = status_messages_url;
    m_status_messages_url_isSet = true;
}

bool OAIAutomationRunEntity::is_status_messages_url_Set() const{
    return m_status_messages_url_isSet;
}

bool OAIAutomationRunEntity::is_status_messages_url_Valid() const{
    return m_status_messages_url_isValid;
}

bool OAIAutomationRunEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_messages_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutomationRunEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
