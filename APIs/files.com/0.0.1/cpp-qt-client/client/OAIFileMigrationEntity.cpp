/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileMigrationEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileMigrationEntity::OAIFileMigrationEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileMigrationEntity::OAIFileMigrationEntity() {
    this->initializeModel();
}

OAIFileMigrationEntity::~OAIFileMigrationEntity() {}

void OAIFileMigrationEntity::initializeModel() {

    m_dest_path_isSet = false;
    m_dest_path_isValid = false;

    m_files_moved_isSet = false;
    m_files_moved_isValid = false;

    m_files_total_isSet = false;
    m_files_total_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_log_url_isSet = false;
    m_log_url_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIFileMigrationEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileMigrationEntity::fromJsonObject(QJsonObject json) {

    m_dest_path_isValid = ::OpenAPI::fromJsonValue(m_dest_path, json[QString("dest_path")]);
    m_dest_path_isSet = !json[QString("dest_path")].isNull() && m_dest_path_isValid;

    m_files_moved_isValid = ::OpenAPI::fromJsonValue(m_files_moved, json[QString("files_moved")]);
    m_files_moved_isSet = !json[QString("files_moved")].isNull() && m_files_moved_isValid;

    m_files_total_isValid = ::OpenAPI::fromJsonValue(m_files_total, json[QString("files_total")]);
    m_files_total_isSet = !json[QString("files_total")].isNull() && m_files_total_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_log_url_isValid = ::OpenAPI::fromJsonValue(m_log_url, json[QString("log_url")]);
    m_log_url_isSet = !json[QString("log_url")].isNull() && m_log_url_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIFileMigrationEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileMigrationEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_dest_path_isSet) {
        obj.insert(QString("dest_path"), ::OpenAPI::toJsonValue(m_dest_path));
    }
    if (m_files_moved_isSet) {
        obj.insert(QString("files_moved"), ::OpenAPI::toJsonValue(m_files_moved));
    }
    if (m_files_total_isSet) {
        obj.insert(QString("files_total"), ::OpenAPI::toJsonValue(m_files_total));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_log_url_isSet) {
        obj.insert(QString("log_url"), ::OpenAPI::toJsonValue(m_log_url));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIFileMigrationEntity::getDestPath() const {
    return m_dest_path;
}
void OAIFileMigrationEntity::setDestPath(const QString &dest_path) {
    m_dest_path = dest_path;
    m_dest_path_isSet = true;
}

bool OAIFileMigrationEntity::is_dest_path_Set() const{
    return m_dest_path_isSet;
}

bool OAIFileMigrationEntity::is_dest_path_Valid() const{
    return m_dest_path_isValid;
}

qint32 OAIFileMigrationEntity::getFilesMoved() const {
    return m_files_moved;
}
void OAIFileMigrationEntity::setFilesMoved(const qint32 &files_moved) {
    m_files_moved = files_moved;
    m_files_moved_isSet = true;
}

bool OAIFileMigrationEntity::is_files_moved_Set() const{
    return m_files_moved_isSet;
}

bool OAIFileMigrationEntity::is_files_moved_Valid() const{
    return m_files_moved_isValid;
}

qint32 OAIFileMigrationEntity::getFilesTotal() const {
    return m_files_total;
}
void OAIFileMigrationEntity::setFilesTotal(const qint32 &files_total) {
    m_files_total = files_total;
    m_files_total_isSet = true;
}

bool OAIFileMigrationEntity::is_files_total_Set() const{
    return m_files_total_isSet;
}

bool OAIFileMigrationEntity::is_files_total_Valid() const{
    return m_files_total_isValid;
}

qint32 OAIFileMigrationEntity::getId() const {
    return m_id;
}
void OAIFileMigrationEntity::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIFileMigrationEntity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIFileMigrationEntity::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIFileMigrationEntity::getLogUrl() const {
    return m_log_url;
}
void OAIFileMigrationEntity::setLogUrl(const QString &log_url) {
    m_log_url = log_url;
    m_log_url_isSet = true;
}

bool OAIFileMigrationEntity::is_log_url_Set() const{
    return m_log_url_isSet;
}

bool OAIFileMigrationEntity::is_log_url_Valid() const{
    return m_log_url_isValid;
}

QString OAIFileMigrationEntity::getOperation() const {
    return m_operation;
}
void OAIFileMigrationEntity::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIFileMigrationEntity::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIFileMigrationEntity::is_operation_Valid() const{
    return m_operation_isValid;
}

QString OAIFileMigrationEntity::getPath() const {
    return m_path;
}
void OAIFileMigrationEntity::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIFileMigrationEntity::is_path_Set() const{
    return m_path_isSet;
}

bool OAIFileMigrationEntity::is_path_Valid() const{
    return m_path_isValid;
}

QString OAIFileMigrationEntity::getRegion() const {
    return m_region;
}
void OAIFileMigrationEntity::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIFileMigrationEntity::is_region_Set() const{
    return m_region_isSet;
}

bool OAIFileMigrationEntity::is_region_Valid() const{
    return m_region_isValid;
}

QString OAIFileMigrationEntity::getStatus() const {
    return m_status;
}
void OAIFileMigrationEntity::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIFileMigrationEntity::is_status_Set() const{
    return m_status_isSet;
}

bool OAIFileMigrationEntity::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIFileMigrationEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dest_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_files_moved_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_files_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileMigrationEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
