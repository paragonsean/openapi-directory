/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceLineItemEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceLineItemEntity::OAIInvoiceLineItemEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceLineItemEntity::OAIInvoiceLineItemEntity() {
    this->initializeModel();
}

OAIInvoiceLineItemEntity::~OAIInvoiceLineItemEntity() {}

void OAIInvoiceLineItemEntity::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_plan_isSet = false;
    m_plan_isValid = false;

    m_service_end_at_isSet = false;
    m_service_end_at_isValid = false;

    m_service_start_at_isSet = false;
    m_service_start_at_isValid = false;

    m_site_isSet = false;
    m_site_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIInvoiceLineItemEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceLineItemEntity::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_plan_isValid = ::OpenAPI::fromJsonValue(m_plan, json[QString("plan")]);
    m_plan_isSet = !json[QString("plan")].isNull() && m_plan_isValid;

    m_service_end_at_isValid = ::OpenAPI::fromJsonValue(m_service_end_at, json[QString("service_end_at")]);
    m_service_end_at_isSet = !json[QString("service_end_at")].isNull() && m_service_end_at_isValid;

    m_service_start_at_isValid = ::OpenAPI::fromJsonValue(m_service_start_at, json[QString("service_start_at")]);
    m_service_start_at_isSet = !json[QString("service_start_at")].isNull() && m_service_start_at_isValid;

    m_site_isValid = ::OpenAPI::fromJsonValue(m_site, json[QString("site")]);
    m_site_isSet = !json[QString("site")].isNull() && m_site_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAIInvoiceLineItemEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceLineItemEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_plan_isSet) {
        obj.insert(QString("plan"), ::OpenAPI::toJsonValue(m_plan));
    }
    if (m_service_end_at_isSet) {
        obj.insert(QString("service_end_at"), ::OpenAPI::toJsonValue(m_service_end_at));
    }
    if (m_service_start_at_isSet) {
        obj.insert(QString("service_start_at"), ::OpenAPI::toJsonValue(m_service_start_at));
    }
    if (m_site_isSet) {
        obj.insert(QString("site"), ::OpenAPI::toJsonValue(m_site));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

double OAIInvoiceLineItemEntity::getAmount() const {
    return m_amount;
}
void OAIInvoiceLineItemEntity::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIInvoiceLineItemEntity::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIInvoiceLineItemEntity::is_amount_Valid() const{
    return m_amount_isValid;
}

QDateTime OAIInvoiceLineItemEntity::getCreatedAt() const {
    return m_created_at;
}
void OAIInvoiceLineItemEntity::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIInvoiceLineItemEntity::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIInvoiceLineItemEntity::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIInvoiceLineItemEntity::getDescription() const {
    return m_description;
}
void OAIInvoiceLineItemEntity::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIInvoiceLineItemEntity::is_description_Set() const{
    return m_description_isSet;
}

bool OAIInvoiceLineItemEntity::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIInvoiceLineItemEntity::getPlan() const {
    return m_plan;
}
void OAIInvoiceLineItemEntity::setPlan(const QString &plan) {
    m_plan = plan;
    m_plan_isSet = true;
}

bool OAIInvoiceLineItemEntity::is_plan_Set() const{
    return m_plan_isSet;
}

bool OAIInvoiceLineItemEntity::is_plan_Valid() const{
    return m_plan_isValid;
}

QDateTime OAIInvoiceLineItemEntity::getServiceEndAt() const {
    return m_service_end_at;
}
void OAIInvoiceLineItemEntity::setServiceEndAt(const QDateTime &service_end_at) {
    m_service_end_at = service_end_at;
    m_service_end_at_isSet = true;
}

bool OAIInvoiceLineItemEntity::is_service_end_at_Set() const{
    return m_service_end_at_isSet;
}

bool OAIInvoiceLineItemEntity::is_service_end_at_Valid() const{
    return m_service_end_at_isValid;
}

QDateTime OAIInvoiceLineItemEntity::getServiceStartAt() const {
    return m_service_start_at;
}
void OAIInvoiceLineItemEntity::setServiceStartAt(const QDateTime &service_start_at) {
    m_service_start_at = service_start_at;
    m_service_start_at_isSet = true;
}

bool OAIInvoiceLineItemEntity::is_service_start_at_Set() const{
    return m_service_start_at_isSet;
}

bool OAIInvoiceLineItemEntity::is_service_start_at_Valid() const{
    return m_service_start_at_isValid;
}

QString OAIInvoiceLineItemEntity::getSite() const {
    return m_site;
}
void OAIInvoiceLineItemEntity::setSite(const QString &site) {
    m_site = site;
    m_site_isSet = true;
}

bool OAIInvoiceLineItemEntity::is_site_Set() const{
    return m_site_isSet;
}

bool OAIInvoiceLineItemEntity::is_site_Valid() const{
    return m_site_isValid;
}

QString OAIInvoiceLineItemEntity::getType() const {
    return m_type;
}
void OAIInvoiceLineItemEntity::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIInvoiceLineItemEntity::is_type_Set() const{
    return m_type_isSet;
}

bool OAIInvoiceLineItemEntity::is_type_Valid() const{
    return m_type_isValid;
}

QDateTime OAIInvoiceLineItemEntity::getUpdatedAt() const {
    return m_updated_at;
}
void OAIInvoiceLineItemEntity::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIInvoiceLineItemEntity::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIInvoiceLineItemEntity::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIInvoiceLineItemEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_plan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_end_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_start_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_site_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceLineItemEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
