/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppEntity::OAIAppEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppEntity::OAIAppEntity() {
    this->initializeModel();
}

OAIAppEntity::~OAIAppEntity() {}

void OAIAppEntity::initializeModel() {

    m_app_type_isSet = false;
    m_app_type_isValid = false;

    m_documentation_links_isSet = false;
    m_documentation_links_isValid = false;

    m_extended_description_isSet = false;
    m_extended_description_isValid = false;

    m_external_homepage_url_isSet = false;
    m_external_homepage_url_isValid = false;

    m_featured_isSet = false;
    m_featured_isValid = false;

    m_folder_behavior_type_isSet = false;
    m_folder_behavior_type_isValid = false;

    m_icon_url_isSet = false;
    m_icon_url_isValid = false;

    m_logo_thumbnail_url_isSet = false;
    m_logo_thumbnail_url_isValid = false;

    m_logo_url_isSet = false;
    m_logo_url_isValid = false;

    m_marketing_youtube_url_isSet = false;
    m_marketing_youtube_url_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_remote_server_type_isSet = false;
    m_remote_server_type_isValid = false;

    m_screenshot_list_urls_isSet = false;
    m_screenshot_list_urls_isValid = false;

    m_short_description_isSet = false;
    m_short_description_isValid = false;

    m_sso_strategy_type_isSet = false;
    m_sso_strategy_type_isValid = false;

    m_tutorial_youtube_url_isSet = false;
    m_tutorial_youtube_url_isValid = false;
}

void OAIAppEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppEntity::fromJsonObject(QJsonObject json) {

    m_app_type_isValid = ::OpenAPI::fromJsonValue(m_app_type, json[QString("app_type")]);
    m_app_type_isSet = !json[QString("app_type")].isNull() && m_app_type_isValid;

    m_documentation_links_isValid = ::OpenAPI::fromJsonValue(m_documentation_links, json[QString("documentation_links")]);
    m_documentation_links_isSet = !json[QString("documentation_links")].isNull() && m_documentation_links_isValid;

    m_extended_description_isValid = ::OpenAPI::fromJsonValue(m_extended_description, json[QString("extended_description")]);
    m_extended_description_isSet = !json[QString("extended_description")].isNull() && m_extended_description_isValid;

    m_external_homepage_url_isValid = ::OpenAPI::fromJsonValue(m_external_homepage_url, json[QString("external_homepage_url")]);
    m_external_homepage_url_isSet = !json[QString("external_homepage_url")].isNull() && m_external_homepage_url_isValid;

    m_featured_isValid = ::OpenAPI::fromJsonValue(m_featured, json[QString("featured")]);
    m_featured_isSet = !json[QString("featured")].isNull() && m_featured_isValid;

    m_folder_behavior_type_isValid = ::OpenAPI::fromJsonValue(m_folder_behavior_type, json[QString("folder_behavior_type")]);
    m_folder_behavior_type_isSet = !json[QString("folder_behavior_type")].isNull() && m_folder_behavior_type_isValid;

    m_icon_url_isValid = ::OpenAPI::fromJsonValue(m_icon_url, json[QString("icon_url")]);
    m_icon_url_isSet = !json[QString("icon_url")].isNull() && m_icon_url_isValid;

    m_logo_thumbnail_url_isValid = ::OpenAPI::fromJsonValue(m_logo_thumbnail_url, json[QString("logo_thumbnail_url")]);
    m_logo_thumbnail_url_isSet = !json[QString("logo_thumbnail_url")].isNull() && m_logo_thumbnail_url_isValid;

    m_logo_url_isValid = ::OpenAPI::fromJsonValue(m_logo_url, json[QString("logo_url")]);
    m_logo_url_isSet = !json[QString("logo_url")].isNull() && m_logo_url_isValid;

    m_marketing_youtube_url_isValid = ::OpenAPI::fromJsonValue(m_marketing_youtube_url, json[QString("marketing_youtube_url")]);
    m_marketing_youtube_url_isSet = !json[QString("marketing_youtube_url")].isNull() && m_marketing_youtube_url_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_remote_server_type_isValid = ::OpenAPI::fromJsonValue(m_remote_server_type, json[QString("remote_server_type")]);
    m_remote_server_type_isSet = !json[QString("remote_server_type")].isNull() && m_remote_server_type_isValid;

    m_screenshot_list_urls_isValid = ::OpenAPI::fromJsonValue(m_screenshot_list_urls, json[QString("screenshot_list_urls")]);
    m_screenshot_list_urls_isSet = !json[QString("screenshot_list_urls")].isNull() && m_screenshot_list_urls_isValid;

    m_short_description_isValid = ::OpenAPI::fromJsonValue(m_short_description, json[QString("short_description")]);
    m_short_description_isSet = !json[QString("short_description")].isNull() && m_short_description_isValid;

    m_sso_strategy_type_isValid = ::OpenAPI::fromJsonValue(m_sso_strategy_type, json[QString("sso_strategy_type")]);
    m_sso_strategy_type_isSet = !json[QString("sso_strategy_type")].isNull() && m_sso_strategy_type_isValid;

    m_tutorial_youtube_url_isValid = ::OpenAPI::fromJsonValue(m_tutorial_youtube_url, json[QString("tutorial_youtube_url")]);
    m_tutorial_youtube_url_isSet = !json[QString("tutorial_youtube_url")].isNull() && m_tutorial_youtube_url_isValid;
}

QString OAIAppEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_app_type_isSet) {
        obj.insert(QString("app_type"), ::OpenAPI::toJsonValue(m_app_type));
    }
    if (m_documentation_links_isSet) {
        obj.insert(QString("documentation_links"), ::OpenAPI::toJsonValue(m_documentation_links));
    }
    if (m_extended_description_isSet) {
        obj.insert(QString("extended_description"), ::OpenAPI::toJsonValue(m_extended_description));
    }
    if (m_external_homepage_url_isSet) {
        obj.insert(QString("external_homepage_url"), ::OpenAPI::toJsonValue(m_external_homepage_url));
    }
    if (m_featured_isSet) {
        obj.insert(QString("featured"), ::OpenAPI::toJsonValue(m_featured));
    }
    if (m_folder_behavior_type_isSet) {
        obj.insert(QString("folder_behavior_type"), ::OpenAPI::toJsonValue(m_folder_behavior_type));
    }
    if (m_icon_url_isSet) {
        obj.insert(QString("icon_url"), ::OpenAPI::toJsonValue(m_icon_url));
    }
    if (m_logo_thumbnail_url_isSet) {
        obj.insert(QString("logo_thumbnail_url"), ::OpenAPI::toJsonValue(m_logo_thumbnail_url));
    }
    if (m_logo_url_isSet) {
        obj.insert(QString("logo_url"), ::OpenAPI::toJsonValue(m_logo_url));
    }
    if (m_marketing_youtube_url_isSet) {
        obj.insert(QString("marketing_youtube_url"), ::OpenAPI::toJsonValue(m_marketing_youtube_url));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_remote_server_type_isSet) {
        obj.insert(QString("remote_server_type"), ::OpenAPI::toJsonValue(m_remote_server_type));
    }
    if (m_screenshot_list_urls.size() > 0) {
        obj.insert(QString("screenshot_list_urls"), ::OpenAPI::toJsonValue(m_screenshot_list_urls));
    }
    if (m_short_description_isSet) {
        obj.insert(QString("short_description"), ::OpenAPI::toJsonValue(m_short_description));
    }
    if (m_sso_strategy_type_isSet) {
        obj.insert(QString("sso_strategy_type"), ::OpenAPI::toJsonValue(m_sso_strategy_type));
    }
    if (m_tutorial_youtube_url_isSet) {
        obj.insert(QString("tutorial_youtube_url"), ::OpenAPI::toJsonValue(m_tutorial_youtube_url));
    }
    return obj;
}

QString OAIAppEntity::getAppType() const {
    return m_app_type;
}
void OAIAppEntity::setAppType(const QString &app_type) {
    m_app_type = app_type;
    m_app_type_isSet = true;
}

bool OAIAppEntity::is_app_type_Set() const{
    return m_app_type_isSet;
}

bool OAIAppEntity::is_app_type_Valid() const{
    return m_app_type_isValid;
}

OAIObject OAIAppEntity::getDocumentationLinks() const {
    return m_documentation_links;
}
void OAIAppEntity::setDocumentationLinks(const OAIObject &documentation_links) {
    m_documentation_links = documentation_links;
    m_documentation_links_isSet = true;
}

bool OAIAppEntity::is_documentation_links_Set() const{
    return m_documentation_links_isSet;
}

bool OAIAppEntity::is_documentation_links_Valid() const{
    return m_documentation_links_isValid;
}

QString OAIAppEntity::getExtendedDescription() const {
    return m_extended_description;
}
void OAIAppEntity::setExtendedDescription(const QString &extended_description) {
    m_extended_description = extended_description;
    m_extended_description_isSet = true;
}

bool OAIAppEntity::is_extended_description_Set() const{
    return m_extended_description_isSet;
}

bool OAIAppEntity::is_extended_description_Valid() const{
    return m_extended_description_isValid;
}

QString OAIAppEntity::getExternalHomepageUrl() const {
    return m_external_homepage_url;
}
void OAIAppEntity::setExternalHomepageUrl(const QString &external_homepage_url) {
    m_external_homepage_url = external_homepage_url;
    m_external_homepage_url_isSet = true;
}

bool OAIAppEntity::is_external_homepage_url_Set() const{
    return m_external_homepage_url_isSet;
}

bool OAIAppEntity::is_external_homepage_url_Valid() const{
    return m_external_homepage_url_isValid;
}

bool OAIAppEntity::isFeatured() const {
    return m_featured;
}
void OAIAppEntity::setFeatured(const bool &featured) {
    m_featured = featured;
    m_featured_isSet = true;
}

bool OAIAppEntity::is_featured_Set() const{
    return m_featured_isSet;
}

bool OAIAppEntity::is_featured_Valid() const{
    return m_featured_isValid;
}

QString OAIAppEntity::getFolderBehaviorType() const {
    return m_folder_behavior_type;
}
void OAIAppEntity::setFolderBehaviorType(const QString &folder_behavior_type) {
    m_folder_behavior_type = folder_behavior_type;
    m_folder_behavior_type_isSet = true;
}

bool OAIAppEntity::is_folder_behavior_type_Set() const{
    return m_folder_behavior_type_isSet;
}

bool OAIAppEntity::is_folder_behavior_type_Valid() const{
    return m_folder_behavior_type_isValid;
}

QString OAIAppEntity::getIconUrl() const {
    return m_icon_url;
}
void OAIAppEntity::setIconUrl(const QString &icon_url) {
    m_icon_url = icon_url;
    m_icon_url_isSet = true;
}

bool OAIAppEntity::is_icon_url_Set() const{
    return m_icon_url_isSet;
}

bool OAIAppEntity::is_icon_url_Valid() const{
    return m_icon_url_isValid;
}

QString OAIAppEntity::getLogoThumbnailUrl() const {
    return m_logo_thumbnail_url;
}
void OAIAppEntity::setLogoThumbnailUrl(const QString &logo_thumbnail_url) {
    m_logo_thumbnail_url = logo_thumbnail_url;
    m_logo_thumbnail_url_isSet = true;
}

bool OAIAppEntity::is_logo_thumbnail_url_Set() const{
    return m_logo_thumbnail_url_isSet;
}

bool OAIAppEntity::is_logo_thumbnail_url_Valid() const{
    return m_logo_thumbnail_url_isValid;
}

QString OAIAppEntity::getLogoUrl() const {
    return m_logo_url;
}
void OAIAppEntity::setLogoUrl(const QString &logo_url) {
    m_logo_url = logo_url;
    m_logo_url_isSet = true;
}

bool OAIAppEntity::is_logo_url_Set() const{
    return m_logo_url_isSet;
}

bool OAIAppEntity::is_logo_url_Valid() const{
    return m_logo_url_isValid;
}

QString OAIAppEntity::getMarketingYoutubeUrl() const {
    return m_marketing_youtube_url;
}
void OAIAppEntity::setMarketingYoutubeUrl(const QString &marketing_youtube_url) {
    m_marketing_youtube_url = marketing_youtube_url;
    m_marketing_youtube_url_isSet = true;
}

bool OAIAppEntity::is_marketing_youtube_url_Set() const{
    return m_marketing_youtube_url_isSet;
}

bool OAIAppEntity::is_marketing_youtube_url_Valid() const{
    return m_marketing_youtube_url_isValid;
}

QString OAIAppEntity::getName() const {
    return m_name;
}
void OAIAppEntity::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAppEntity::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAppEntity::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAppEntity::getRemoteServerType() const {
    return m_remote_server_type;
}
void OAIAppEntity::setRemoteServerType(const QString &remote_server_type) {
    m_remote_server_type = remote_server_type;
    m_remote_server_type_isSet = true;
}

bool OAIAppEntity::is_remote_server_type_Set() const{
    return m_remote_server_type_isSet;
}

bool OAIAppEntity::is_remote_server_type_Valid() const{
    return m_remote_server_type_isValid;
}

QList<QString> OAIAppEntity::getScreenshotListUrls() const {
    return m_screenshot_list_urls;
}
void OAIAppEntity::setScreenshotListUrls(const QList<QString> &screenshot_list_urls) {
    m_screenshot_list_urls = screenshot_list_urls;
    m_screenshot_list_urls_isSet = true;
}

bool OAIAppEntity::is_screenshot_list_urls_Set() const{
    return m_screenshot_list_urls_isSet;
}

bool OAIAppEntity::is_screenshot_list_urls_Valid() const{
    return m_screenshot_list_urls_isValid;
}

QString OAIAppEntity::getShortDescription() const {
    return m_short_description;
}
void OAIAppEntity::setShortDescription(const QString &short_description) {
    m_short_description = short_description;
    m_short_description_isSet = true;
}

bool OAIAppEntity::is_short_description_Set() const{
    return m_short_description_isSet;
}

bool OAIAppEntity::is_short_description_Valid() const{
    return m_short_description_isValid;
}

QString OAIAppEntity::getSsoStrategyType() const {
    return m_sso_strategy_type;
}
void OAIAppEntity::setSsoStrategyType(const QString &sso_strategy_type) {
    m_sso_strategy_type = sso_strategy_type;
    m_sso_strategy_type_isSet = true;
}

bool OAIAppEntity::is_sso_strategy_type_Set() const{
    return m_sso_strategy_type_isSet;
}

bool OAIAppEntity::is_sso_strategy_type_Valid() const{
    return m_sso_strategy_type_isValid;
}

QString OAIAppEntity::getTutorialYoutubeUrl() const {
    return m_tutorial_youtube_url;
}
void OAIAppEntity::setTutorialYoutubeUrl(const QString &tutorial_youtube_url) {
    m_tutorial_youtube_url = tutorial_youtube_url;
    m_tutorial_youtube_url_isSet = true;
}

bool OAIAppEntity::is_tutorial_youtube_url_Set() const{
    return m_tutorial_youtube_url_isSet;
}

bool OAIAppEntity::is_tutorial_youtube_url_Valid() const{
    return m_tutorial_youtube_url_isValid;
}

bool OAIAppEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_documentation_links_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extended_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_homepage_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_featured_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_folder_behavior_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_thumbnail_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketing_youtube_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remote_server_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_screenshot_list_urls.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sso_strategy_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tutorial_youtube_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
