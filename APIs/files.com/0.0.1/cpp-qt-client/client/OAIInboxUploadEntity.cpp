/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInboxUploadEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInboxUploadEntity::OAIInboxUploadEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInboxUploadEntity::OAIInboxUploadEntity() {
    this->initializeModel();
}

OAIInboxUploadEntity::~OAIInboxUploadEntity() {}

void OAIInboxUploadEntity::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_inbox_registration_isSet = false;
    m_inbox_registration_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;
}

void OAIInboxUploadEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInboxUploadEntity::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_inbox_registration_isValid = ::OpenAPI::fromJsonValue(m_inbox_registration, json[QString("inbox_registration")]);
    m_inbox_registration_isSet = !json[QString("inbox_registration")].isNull() && m_inbox_registration_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;
}

QString OAIInboxUploadEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInboxUploadEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_inbox_registration.isSet()) {
        obj.insert(QString("inbox_registration"), ::OpenAPI::toJsonValue(m_inbox_registration));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    return obj;
}

QDateTime OAIInboxUploadEntity::getCreatedAt() const {
    return m_created_at;
}
void OAIInboxUploadEntity::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIInboxUploadEntity::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIInboxUploadEntity::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIInboxRegistrationEntity OAIInboxUploadEntity::getInboxRegistration() const {
    return m_inbox_registration;
}
void OAIInboxUploadEntity::setInboxRegistration(const OAIInboxRegistrationEntity &inbox_registration) {
    m_inbox_registration = inbox_registration;
    m_inbox_registration_isSet = true;
}

bool OAIInboxUploadEntity::is_inbox_registration_Set() const{
    return m_inbox_registration_isSet;
}

bool OAIInboxUploadEntity::is_inbox_registration_Valid() const{
    return m_inbox_registration_isValid;
}

QString OAIInboxUploadEntity::getPath() const {
    return m_path;
}
void OAIInboxUploadEntity::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIInboxUploadEntity::is_path_Set() const{
    return m_path_isSet;
}

bool OAIInboxUploadEntity::is_path_Valid() const{
    return m_path_isValid;
}

bool OAIInboxUploadEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inbox_registration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInboxUploadEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
