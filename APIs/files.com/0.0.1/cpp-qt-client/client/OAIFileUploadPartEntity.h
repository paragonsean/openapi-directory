/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFileUploadPartEntity.h
 *
 * Begin file upload
 */

#ifndef OAIFileUploadPartEntity_H
#define OAIFileUploadPartEntity_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFileUploadPartEntity : public OAIObject {
public:
    OAIFileUploadPartEntity();
    OAIFileUploadPartEntity(QString json);
    ~OAIFileUploadPartEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    bool isAskAboutOverwrites() const;
    void setAskAboutOverwrites(const bool &ask_about_overwrites);
    bool is_ask_about_overwrites_Set() const;
    bool is_ask_about_overwrites_Valid() const;

    qint32 getAvailableParts() const;
    void setAvailableParts(const qint32 &available_parts);
    bool is_available_parts_Set() const;
    bool is_available_parts_Valid() const;

    QString getExpires() const;
    void setExpires(const QString &expires);
    bool is_expires_Set() const;
    bool is_expires_Valid() const;

    OAIObject getHeaders() const;
    void setHeaders(const OAIObject &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getHttpMethod() const;
    void setHttpMethod(const QString &http_method);
    bool is_http_method_Set() const;
    bool is_http_method_Valid() const;

    qint32 getNextPartsize() const;
    void setNextPartsize(const qint32 &next_partsize);
    bool is_next_partsize_Set() const;
    bool is_next_partsize_Valid() const;

    bool isParallelParts() const;
    void setParallelParts(const bool &parallel_parts);
    bool is_parallel_parts_Set() const;
    bool is_parallel_parts_Valid() const;

    OAIObject getParameters() const;
    void setParameters(const OAIObject &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    qint32 getPartNumber() const;
    void setPartNumber(const qint32 &part_number);
    bool is_part_number_Set() const;
    bool is_part_number_Valid() const;

    qint32 getPartsize() const;
    void setPartsize(const qint32 &partsize);
    bool is_partsize_Set() const;
    bool is_partsize_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getRef() const;
    void setRef(const QString &ref);
    bool is_ref_Set() const;
    bool is_ref_Valid() const;

    bool isRetryParts() const;
    void setRetryParts(const bool &retry_parts);
    bool is_retry_parts_Set() const;
    bool is_retry_parts_Valid() const;

    OAIObject getSend() const;
    void setSend(const OAIObject &send);
    bool is_send_Set() const;
    bool is_send_Valid() const;

    QString getUploadUri() const;
    void setUploadUri(const QString &upload_uri);
    bool is_upload_uri_Set() const;
    bool is_upload_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    bool m_ask_about_overwrites;
    bool m_ask_about_overwrites_isSet;
    bool m_ask_about_overwrites_isValid;

    qint32 m_available_parts;
    bool m_available_parts_isSet;
    bool m_available_parts_isValid;

    QString m_expires;
    bool m_expires_isSet;
    bool m_expires_isValid;

    OAIObject m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_http_method;
    bool m_http_method_isSet;
    bool m_http_method_isValid;

    qint32 m_next_partsize;
    bool m_next_partsize_isSet;
    bool m_next_partsize_isValid;

    bool m_parallel_parts;
    bool m_parallel_parts_isSet;
    bool m_parallel_parts_isValid;

    OAIObject m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    qint32 m_part_number;
    bool m_part_number_isSet;
    bool m_part_number_isValid;

    qint32 m_partsize;
    bool m_partsize_isSet;
    bool m_partsize_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_ref;
    bool m_ref_isSet;
    bool m_ref_isValid;

    bool m_retry_parts;
    bool m_retry_parts_isSet;
    bool m_retry_parts_isValid;

    OAIObject m_send;
    bool m_send_isSet;
    bool m_send_isValid;

    QString m_upload_uri;
    bool m_upload_uri_isSet;
    bool m_upload_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFileUploadPartEntity)

#endif // OAIFileUploadPartEntity_H
