/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserEntity.h
 *
 * Create User
 */

#ifndef OAIUserEntity_H
#define OAIUserEntity_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserEntity : public OAIObject {
public:
    OAIUserEntity();
    OAIUserEntity(QString json);
    ~OAIUserEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive2fa() const;
    void setActive2fa(const bool &active_2fa);
    bool is_active_2fa_Set() const;
    bool is_active_2fa_Valid() const;

    QList<qint32> getAdminGroupIds() const;
    void setAdminGroupIds(const QList<qint32> &admin_group_ids);
    bool is_admin_group_ids_Set() const;
    bool is_admin_group_ids_Valid() const;

    QString getAllowedIps() const;
    void setAllowedIps(const QString &allowed_ips);
    bool is_allowed_ips_Set() const;
    bool is_allowed_ips_Valid() const;

    qint32 getApiKeysCount() const;
    void setApiKeysCount(const qint32 &api_keys_count);
    bool is_api_keys_count_Set() const;
    bool is_api_keys_count_Valid() const;

    bool isAttachmentsPermission() const;
    void setAttachmentsPermission(const bool &attachments_permission);
    bool is_attachments_permission_Set() const;
    bool is_attachments_permission_Valid() const;

    QDateTime getAuthenticateUntil() const;
    void setAuthenticateUntil(const QDateTime &authenticate_until);
    bool is_authenticate_until_Set() const;
    bool is_authenticate_until_Valid() const;

    QString getAuthenticationMethod() const;
    void setAuthenticationMethod(const QString &authentication_method);
    bool is_authentication_method_Set() const;
    bool is_authentication_method_Valid() const;

    QString getAvatarUrl() const;
    void setAvatarUrl(const QString &avatar_url);
    bool is_avatar_url_Set() const;
    bool is_avatar_url_Valid() const;

    bool isBillingPermission() const;
    void setBillingPermission(const bool &billing_permission);
    bool is_billing_permission_Set() const;
    bool is_billing_permission_Valid() const;

    bool isBypassInactiveDisable() const;
    void setBypassInactiveDisable(const bool &bypass_inactive_disable);
    bool is_bypass_inactive_disable_Set() const;
    bool is_bypass_inactive_disable_Valid() const;

    bool isBypassSiteAllowedIps() const;
    void setBypassSiteAllowedIps(const bool &bypass_site_allowed_ips);
    bool is_bypass_site_allowed_ips_Set() const;
    bool is_bypass_site_allowed_ips_Valid() const;

    QString getCompany() const;
    void setCompany(const QString &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isDavPermission() const;
    void setDavPermission(const bool &dav_permission);
    bool is_dav_permission_Set() const;
    bool is_dav_permission_Valid() const;

    qint32 getDaysRemainingUntilPasswordExpire() const;
    void setDaysRemainingUntilPasswordExpire(const qint32 &days_remaining_until_password_expire);
    bool is_days_remaining_until_password_expire_Set() const;
    bool is_days_remaining_until_password_expire_Valid() const;

    bool isDisabled() const;
    void setDisabled(const bool &disabled);
    bool is_disabled_Set() const;
    bool is_disabled_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    bool isExternallyManaged() const;
    void setExternallyManaged(const bool &externally_managed);
    bool is_externally_managed_Set() const;
    bool is_externally_managed_Valid() const;

    QDateTime getFirstLoginAt() const;
    void setFirstLoginAt(const QDateTime &first_login_at);
    bool is_first_login_at_Set() const;
    bool is_first_login_at_Valid() const;

    bool isFtpPermission() const;
    void setFtpPermission(const bool &ftp_permission);
    bool is_ftp_permission_Set() const;
    bool is_ftp_permission_Valid() const;

    QString getGroupIds() const;
    void setGroupIds(const QString &group_ids);
    bool is_group_ids_Set() const;
    bool is_group_ids_Valid() const;

    QString getHeaderText() const;
    void setHeaderText(const QString &header_text);
    bool is_header_text_Set() const;
    bool is_header_text_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QDateTime getLastActiveAt() const;
    void setLastActiveAt(const QDateTime &last_active_at);
    bool is_last_active_at_Set() const;
    bool is_last_active_at_Valid() const;

    QDateTime getLastApiUseAt() const;
    void setLastApiUseAt(const QDateTime &last_api_use_at);
    bool is_last_api_use_at_Set() const;
    bool is_last_api_use_at_Valid() const;

    QDateTime getLastDavLoginAt() const;
    void setLastDavLoginAt(const QDateTime &last_dav_login_at);
    bool is_last_dav_login_at_Set() const;
    bool is_last_dav_login_at_Valid() const;

    QDateTime getLastDesktopLoginAt() const;
    void setLastDesktopLoginAt(const QDateTime &last_desktop_login_at);
    bool is_last_desktop_login_at_Set() const;
    bool is_last_desktop_login_at_Valid() const;

    QDateTime getLastFtpLoginAt() const;
    void setLastFtpLoginAt(const QDateTime &last_ftp_login_at);
    bool is_last_ftp_login_at_Set() const;
    bool is_last_ftp_login_at_Valid() const;

    QDateTime getLastLoginAt() const;
    void setLastLoginAt(const QDateTime &last_login_at);
    bool is_last_login_at_Set() const;
    bool is_last_login_at_Valid() const;

    QString getLastProtocolCipher() const;
    void setLastProtocolCipher(const QString &last_protocol_cipher);
    bool is_last_protocol_cipher_Set() const;
    bool is_last_protocol_cipher_Valid() const;

    QDateTime getLastRestapiLoginAt() const;
    void setLastRestapiLoginAt(const QDateTime &last_restapi_login_at);
    bool is_last_restapi_login_at_Set() const;
    bool is_last_restapi_login_at_Valid() const;

    QDateTime getLastSftpLoginAt() const;
    void setLastSftpLoginAt(const QDateTime &last_sftp_login_at);
    bool is_last_sftp_login_at_Set() const;
    bool is_last_sftp_login_at_Valid() const;

    QDateTime getLastWebLoginAt() const;
    void setLastWebLoginAt(const QDateTime &last_web_login_at);
    bool is_last_web_login_at_Set() const;
    bool is_last_web_login_at_Valid() const;

    QDateTime getLockoutExpires() const;
    void setLockoutExpires(const QDateTime &lockout_expires);
    bool is_lockout_expires_Set() const;
    bool is_lockout_expires_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    qint32 getNotificationDailySendTime() const;
    void setNotificationDailySendTime(const qint32 &notification_daily_send_time);
    bool is_notification_daily_send_time_Set() const;
    bool is_notification_daily_send_time_Valid() const;

    bool isOfficeIntegrationEnabled() const;
    void setOfficeIntegrationEnabled(const bool &office_integration_enabled);
    bool is_office_integration_enabled_Set() const;
    bool is_office_integration_enabled_Valid() const;

    QDateTime getPasswordExpireAt() const;
    void setPasswordExpireAt(const QDateTime &password_expire_at);
    bool is_password_expire_at_Set() const;
    bool is_password_expire_at_Valid() const;

    bool isPasswordExpired() const;
    void setPasswordExpired(const bool &password_expired);
    bool is_password_expired_Set() const;
    bool is_password_expired_Valid() const;

    QDateTime getPasswordSetAt() const;
    void setPasswordSetAt(const QDateTime &password_set_at);
    bool is_password_set_at_Set() const;
    bool is_password_set_at_Valid() const;

    qint32 getPasswordValidityDays() const;
    void setPasswordValidityDays(const qint32 &password_validity_days);
    bool is_password_validity_days_Set() const;
    bool is_password_validity_days_Valid() const;

    qint32 getPublicKeysCount() const;
    void setPublicKeysCount(const qint32 &public_keys_count);
    bool is_public_keys_count_Set() const;
    bool is_public_keys_count_Valid() const;

    bool isReceiveAdminAlerts() const;
    void setReceiveAdminAlerts(const bool &receive_admin_alerts);
    bool is_receive_admin_alerts_Set() const;
    bool is_receive_admin_alerts_Valid() const;

    QString getRequire2fa() const;
    void setRequire2fa(const QString &require_2fa);
    bool is_require_2fa_Set() const;
    bool is_require_2fa_Valid() const;

    bool isRequirePasswordChange() const;
    void setRequirePasswordChange(const bool &require_password_change);
    bool is_require_password_change_Set() const;
    bool is_require_password_change_Valid() const;

    bool isRestapiPermission() const;
    void setRestapiPermission(const bool &restapi_permission);
    bool is_restapi_permission_Set() const;
    bool is_restapi_permission_Valid() const;

    bool isSelfManaged() const;
    void setSelfManaged(const bool &self_managed);
    bool is_self_managed_Set() const;
    bool is_self_managed_Valid() const;

    bool isSftpPermission() const;
    void setSftpPermission(const bool &sftp_permission);
    bool is_sftp_permission_Set() const;
    bool is_sftp_permission_Valid() const;

    bool isSiteAdmin() const;
    void setSiteAdmin(const bool &site_admin);
    bool is_site_admin_Set() const;
    bool is_site_admin_Valid() const;

    bool isSkipWelcomeScreen() const;
    void setSkipWelcomeScreen(const bool &skip_welcome_screen);
    bool is_skip_welcome_screen_Set() const;
    bool is_skip_welcome_screen_Valid() const;

    QString getSslRequired() const;
    void setSslRequired(const QString &ssl_required);
    bool is_ssl_required_Set() const;
    bool is_ssl_required_Valid() const;

    qint32 getSsoStrategyId() const;
    void setSsoStrategyId(const qint32 &sso_strategy_id);
    bool is_sso_strategy_id_Set() const;
    bool is_sso_strategy_id_Valid() const;

    bool isSubscribeToNewsletter() const;
    void setSubscribeToNewsletter(const bool &subscribe_to_newsletter);
    bool is_subscribe_to_newsletter_Set() const;
    bool is_subscribe_to_newsletter_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QString getTypeOf2fa() const;
    void setTypeOf2fa(const QString &type_of_2fa);
    bool is_type_of_2fa_Set() const;
    bool is_type_of_2fa_Valid() const;

    QString getUserRoot() const;
    void setUserRoot(const QString &user_root);
    bool is_user_root_Set() const;
    bool is_user_root_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active_2fa;
    bool m_active_2fa_isSet;
    bool m_active_2fa_isValid;

    QList<qint32> m_admin_group_ids;
    bool m_admin_group_ids_isSet;
    bool m_admin_group_ids_isValid;

    QString m_allowed_ips;
    bool m_allowed_ips_isSet;
    bool m_allowed_ips_isValid;

    qint32 m_api_keys_count;
    bool m_api_keys_count_isSet;
    bool m_api_keys_count_isValid;

    bool m_attachments_permission;
    bool m_attachments_permission_isSet;
    bool m_attachments_permission_isValid;

    QDateTime m_authenticate_until;
    bool m_authenticate_until_isSet;
    bool m_authenticate_until_isValid;

    QString m_authentication_method;
    bool m_authentication_method_isSet;
    bool m_authentication_method_isValid;

    QString m_avatar_url;
    bool m_avatar_url_isSet;
    bool m_avatar_url_isValid;

    bool m_billing_permission;
    bool m_billing_permission_isSet;
    bool m_billing_permission_isValid;

    bool m_bypass_inactive_disable;
    bool m_bypass_inactive_disable_isSet;
    bool m_bypass_inactive_disable_isValid;

    bool m_bypass_site_allowed_ips;
    bool m_bypass_site_allowed_ips_isSet;
    bool m_bypass_site_allowed_ips_isValid;

    QString m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_dav_permission;
    bool m_dav_permission_isSet;
    bool m_dav_permission_isValid;

    qint32 m_days_remaining_until_password_expire;
    bool m_days_remaining_until_password_expire_isSet;
    bool m_days_remaining_until_password_expire_isValid;

    bool m_disabled;
    bool m_disabled_isSet;
    bool m_disabled_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    bool m_externally_managed;
    bool m_externally_managed_isSet;
    bool m_externally_managed_isValid;

    QDateTime m_first_login_at;
    bool m_first_login_at_isSet;
    bool m_first_login_at_isValid;

    bool m_ftp_permission;
    bool m_ftp_permission_isSet;
    bool m_ftp_permission_isValid;

    QString m_group_ids;
    bool m_group_ids_isSet;
    bool m_group_ids_isValid;

    QString m_header_text;
    bool m_header_text_isSet;
    bool m_header_text_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QDateTime m_last_active_at;
    bool m_last_active_at_isSet;
    bool m_last_active_at_isValid;

    QDateTime m_last_api_use_at;
    bool m_last_api_use_at_isSet;
    bool m_last_api_use_at_isValid;

    QDateTime m_last_dav_login_at;
    bool m_last_dav_login_at_isSet;
    bool m_last_dav_login_at_isValid;

    QDateTime m_last_desktop_login_at;
    bool m_last_desktop_login_at_isSet;
    bool m_last_desktop_login_at_isValid;

    QDateTime m_last_ftp_login_at;
    bool m_last_ftp_login_at_isSet;
    bool m_last_ftp_login_at_isValid;

    QDateTime m_last_login_at;
    bool m_last_login_at_isSet;
    bool m_last_login_at_isValid;

    QString m_last_protocol_cipher;
    bool m_last_protocol_cipher_isSet;
    bool m_last_protocol_cipher_isValid;

    QDateTime m_last_restapi_login_at;
    bool m_last_restapi_login_at_isSet;
    bool m_last_restapi_login_at_isValid;

    QDateTime m_last_sftp_login_at;
    bool m_last_sftp_login_at_isSet;
    bool m_last_sftp_login_at_isValid;

    QDateTime m_last_web_login_at;
    bool m_last_web_login_at_isSet;
    bool m_last_web_login_at_isValid;

    QDateTime m_lockout_expires;
    bool m_lockout_expires_isSet;
    bool m_lockout_expires_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    qint32 m_notification_daily_send_time;
    bool m_notification_daily_send_time_isSet;
    bool m_notification_daily_send_time_isValid;

    bool m_office_integration_enabled;
    bool m_office_integration_enabled_isSet;
    bool m_office_integration_enabled_isValid;

    QDateTime m_password_expire_at;
    bool m_password_expire_at_isSet;
    bool m_password_expire_at_isValid;

    bool m_password_expired;
    bool m_password_expired_isSet;
    bool m_password_expired_isValid;

    QDateTime m_password_set_at;
    bool m_password_set_at_isSet;
    bool m_password_set_at_isValid;

    qint32 m_password_validity_days;
    bool m_password_validity_days_isSet;
    bool m_password_validity_days_isValid;

    qint32 m_public_keys_count;
    bool m_public_keys_count_isSet;
    bool m_public_keys_count_isValid;

    bool m_receive_admin_alerts;
    bool m_receive_admin_alerts_isSet;
    bool m_receive_admin_alerts_isValid;

    QString m_require_2fa;
    bool m_require_2fa_isSet;
    bool m_require_2fa_isValid;

    bool m_require_password_change;
    bool m_require_password_change_isSet;
    bool m_require_password_change_isValid;

    bool m_restapi_permission;
    bool m_restapi_permission_isSet;
    bool m_restapi_permission_isValid;

    bool m_self_managed;
    bool m_self_managed_isSet;
    bool m_self_managed_isValid;

    bool m_sftp_permission;
    bool m_sftp_permission_isSet;
    bool m_sftp_permission_isValid;

    bool m_site_admin;
    bool m_site_admin_isSet;
    bool m_site_admin_isValid;

    bool m_skip_welcome_screen;
    bool m_skip_welcome_screen_isSet;
    bool m_skip_welcome_screen_isValid;

    QString m_ssl_required;
    bool m_ssl_required_isSet;
    bool m_ssl_required_isValid;

    qint32 m_sso_strategy_id;
    bool m_sso_strategy_id_isSet;
    bool m_sso_strategy_id_isValid;

    bool m_subscribe_to_newsletter;
    bool m_subscribe_to_newsletter_isSet;
    bool m_subscribe_to_newsletter_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QString m_type_of_2fa;
    bool m_type_of_2fa_isSet;
    bool m_type_of_2fa_isValid;

    QString m_user_root;
    bool m_user_root_isSet;
    bool m_user_root_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserEntity)

#endif // OAIUserEntity_H
