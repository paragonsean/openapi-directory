/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActionNotificationExportEntity.h
 *
 * Show Action Notification Export
 */

#ifndef OAIActionNotificationExportEntity_H
#define OAIActionNotificationExportEntity_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIActionNotificationExportEntity : public OAIObject {
public:
    OAIActionNotificationExportEntity();
    OAIActionNotificationExportEntity(QString json);
    ~OAIActionNotificationExportEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getEndAt() const;
    void setEndAt(const QDateTime &end_at);
    bool is_end_at_Set() const;
    bool is_end_at_Valid() const;

    QString getExportVersion() const;
    void setExportVersion(const QString &export_version);
    bool is_export_version_Set() const;
    bool is_export_version_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getQueryFolder() const;
    void setQueryFolder(const QString &query_folder);
    bool is_query_folder_Set() const;
    bool is_query_folder_Valid() const;

    QString getQueryMessage() const;
    void setQueryMessage(const QString &query_message);
    bool is_query_message_Set() const;
    bool is_query_message_Valid() const;

    QString getQueryPath() const;
    void setQueryPath(const QString &query_path);
    bool is_query_path_Set() const;
    bool is_query_path_Valid() const;

    QString getQueryRequestMethod() const;
    void setQueryRequestMethod(const QString &query_request_method);
    bool is_query_request_method_Set() const;
    bool is_query_request_method_Valid() const;

    QString getQueryRequestUrl() const;
    void setQueryRequestUrl(const QString &query_request_url);
    bool is_query_request_url_Set() const;
    bool is_query_request_url_Valid() const;

    QString getQueryStatus() const;
    void setQueryStatus(const QString &query_status);
    bool is_query_status_Set() const;
    bool is_query_status_Valid() const;

    bool isQuerySuccess() const;
    void setQuerySuccess(const bool &query_success);
    bool is_query_success_Set() const;
    bool is_query_success_Valid() const;

    QString getResultsUrl() const;
    void setResultsUrl(const QString &results_url);
    bool is_results_url_Set() const;
    bool is_results_url_Valid() const;

    QDateTime getStartAt() const;
    void setStartAt(const QDateTime &start_at);
    bool is_start_at_Set() const;
    bool is_start_at_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_end_at;
    bool m_end_at_isSet;
    bool m_end_at_isValid;

    QString m_export_version;
    bool m_export_version_isSet;
    bool m_export_version_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_query_folder;
    bool m_query_folder_isSet;
    bool m_query_folder_isValid;

    QString m_query_message;
    bool m_query_message_isSet;
    bool m_query_message_isValid;

    QString m_query_path;
    bool m_query_path_isSet;
    bool m_query_path_isValid;

    QString m_query_request_method;
    bool m_query_request_method_isSet;
    bool m_query_request_method_isValid;

    QString m_query_request_url;
    bool m_query_request_url_isSet;
    bool m_query_request_url_isValid;

    QString m_query_status;
    bool m_query_status_isSet;
    bool m_query_status_isValid;

    bool m_query_success;
    bool m_query_success_isSet;
    bool m_query_success_isValid;

    QString m_results_url;
    bool m_results_url_isSet;
    bool m_results_url_isValid;

    QDateTime m_start_at;
    bool m_start_at_isSet;
    bool m_start_at_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActionNotificationExportEntity)

#endif // OAIActionNotificationExportEntity_H
