/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInboxRecipientEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInboxRecipientEntity::OAIInboxRecipientEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInboxRecipientEntity::OAIInboxRecipientEntity() {
    this->initializeModel();
}

OAIInboxRecipientEntity::~OAIInboxRecipientEntity() {}

void OAIInboxRecipientEntity::initializeModel() {

    m_company_isSet = false;
    m_company_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_note_isSet = false;
    m_note_isValid = false;

    m_recipient_isSet = false;
    m_recipient_isValid = false;

    m_sent_at_isSet = false;
    m_sent_at_isValid = false;
}

void OAIInboxRecipientEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInboxRecipientEntity::fromJsonObject(QJsonObject json) {

    m_company_isValid = ::OpenAPI::fromJsonValue(m_company, json[QString("company")]);
    m_company_isSet = !json[QString("company")].isNull() && m_company_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("note")]);
    m_note_isSet = !json[QString("note")].isNull() && m_note_isValid;

    m_recipient_isValid = ::OpenAPI::fromJsonValue(m_recipient, json[QString("recipient")]);
    m_recipient_isSet = !json[QString("recipient")].isNull() && m_recipient_isValid;

    m_sent_at_isValid = ::OpenAPI::fromJsonValue(m_sent_at, json[QString("sent_at")]);
    m_sent_at_isSet = !json[QString("sent_at")].isNull() && m_sent_at_isValid;
}

QString OAIInboxRecipientEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInboxRecipientEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_company_isSet) {
        obj.insert(QString("company"), ::OpenAPI::toJsonValue(m_company));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_note_isSet) {
        obj.insert(QString("note"), ::OpenAPI::toJsonValue(m_note));
    }
    if (m_recipient_isSet) {
        obj.insert(QString("recipient"), ::OpenAPI::toJsonValue(m_recipient));
    }
    if (m_sent_at_isSet) {
        obj.insert(QString("sent_at"), ::OpenAPI::toJsonValue(m_sent_at));
    }
    return obj;
}

QString OAIInboxRecipientEntity::getCompany() const {
    return m_company;
}
void OAIInboxRecipientEntity::setCompany(const QString &company) {
    m_company = company;
    m_company_isSet = true;
}

bool OAIInboxRecipientEntity::is_company_Set() const{
    return m_company_isSet;
}

bool OAIInboxRecipientEntity::is_company_Valid() const{
    return m_company_isValid;
}

QString OAIInboxRecipientEntity::getName() const {
    return m_name;
}
void OAIInboxRecipientEntity::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIInboxRecipientEntity::is_name_Set() const{
    return m_name_isSet;
}

bool OAIInboxRecipientEntity::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIInboxRecipientEntity::getNote() const {
    return m_note;
}
void OAIInboxRecipientEntity::setNote(const QString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAIInboxRecipientEntity::is_note_Set() const{
    return m_note_isSet;
}

bool OAIInboxRecipientEntity::is_note_Valid() const{
    return m_note_isValid;
}

QString OAIInboxRecipientEntity::getRecipient() const {
    return m_recipient;
}
void OAIInboxRecipientEntity::setRecipient(const QString &recipient) {
    m_recipient = recipient;
    m_recipient_isSet = true;
}

bool OAIInboxRecipientEntity::is_recipient_Set() const{
    return m_recipient_isSet;
}

bool OAIInboxRecipientEntity::is_recipient_Valid() const{
    return m_recipient_isValid;
}

QDateTime OAIInboxRecipientEntity::getSentAt() const {
    return m_sent_at;
}
void OAIInboxRecipientEntity::setSentAt(const QDateTime &sent_at) {
    m_sent_at = sent_at;
    m_sent_at_isSet = true;
}

bool OAIInboxRecipientEntity::is_sent_at_Set() const{
    return m_sent_at_isSet;
}

bool OAIInboxRecipientEntity::is_sent_at_Valid() const{
    return m_sent_at_isValid;
}

bool OAIInboxRecipientEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sent_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInboxRecipientEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
