/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroupEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroupEntity::OAIGroupEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroupEntity::OAIGroupEntity() {
    this->initializeModel();
}

OAIGroupEntity::~OAIGroupEntity() {}

void OAIGroupEntity::initializeModel() {

    m_admin_ids_isSet = false;
    m_admin_ids_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_user_ids_isSet = false;
    m_user_ids_isValid = false;

    m_usernames_isSet = false;
    m_usernames_isValid = false;
}

void OAIGroupEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroupEntity::fromJsonObject(QJsonObject json) {

    m_admin_ids_isValid = ::OpenAPI::fromJsonValue(m_admin_ids, json[QString("admin_ids")]);
    m_admin_ids_isSet = !json[QString("admin_ids")].isNull() && m_admin_ids_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;

    m_user_ids_isValid = ::OpenAPI::fromJsonValue(m_user_ids, json[QString("user_ids")]);
    m_user_ids_isSet = !json[QString("user_ids")].isNull() && m_user_ids_isValid;

    m_usernames_isValid = ::OpenAPI::fromJsonValue(m_usernames, json[QString("usernames")]);
    m_usernames_isSet = !json[QString("usernames")].isNull() && m_usernames_isValid;
}

QString OAIGroupEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroupEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_ids_isSet) {
        obj.insert(QString("admin_ids"), ::OpenAPI::toJsonValue(m_admin_ids));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_notes_isSet) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_user_ids_isSet) {
        obj.insert(QString("user_ids"), ::OpenAPI::toJsonValue(m_user_ids));
    }
    if (m_usernames_isSet) {
        obj.insert(QString("usernames"), ::OpenAPI::toJsonValue(m_usernames));
    }
    return obj;
}

QString OAIGroupEntity::getAdminIds() const {
    return m_admin_ids;
}
void OAIGroupEntity::setAdminIds(const QString &admin_ids) {
    m_admin_ids = admin_ids;
    m_admin_ids_isSet = true;
}

bool OAIGroupEntity::is_admin_ids_Set() const{
    return m_admin_ids_isSet;
}

bool OAIGroupEntity::is_admin_ids_Valid() const{
    return m_admin_ids_isValid;
}

qint32 OAIGroupEntity::getId() const {
    return m_id;
}
void OAIGroupEntity::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGroupEntity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGroupEntity::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGroupEntity::getName() const {
    return m_name;
}
void OAIGroupEntity::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGroupEntity::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGroupEntity::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGroupEntity::getNotes() const {
    return m_notes;
}
void OAIGroupEntity::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAIGroupEntity::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAIGroupEntity::is_notes_Valid() const{
    return m_notes_isValid;
}

QString OAIGroupEntity::getUserIds() const {
    return m_user_ids;
}
void OAIGroupEntity::setUserIds(const QString &user_ids) {
    m_user_ids = user_ids;
    m_user_ids_isSet = true;
}

bool OAIGroupEntity::is_user_ids_Set() const{
    return m_user_ids_isSet;
}

bool OAIGroupEntity::is_user_ids_Valid() const{
    return m_user_ids_isValid;
}

QString OAIGroupEntity::getUsernames() const {
    return m_usernames;
}
void OAIGroupEntity::setUsernames(const QString &usernames) {
    m_usernames = usernames;
    m_usernames_isSet = true;
}

bool OAIGroupEntity::is_usernames_Set() const{
    return m_usernames_isSet;
}

bool OAIGroupEntity::is_usernames_Valid() const{
    return m_usernames_isValid;
}

bool OAIGroupEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_ids_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_ids_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usernames_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroupEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
