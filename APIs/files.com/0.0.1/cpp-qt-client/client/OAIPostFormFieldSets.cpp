/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostFormFieldSets.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostFormFieldSets::OAIPostFormFieldSets(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostFormFieldSets::OAIPostFormFieldSets() {
    this->initializeModel();
}

OAIPostFormFieldSets::~OAIPostFormFieldSets() {}

void OAIPostFormFieldSets::initializeModel() {

    m_form_fields_isSet = false;
    m_form_fields_isValid = false;

    m_skip_company_isSet = false;
    m_skip_company_isValid = false;

    m_skip_email_isSet = false;
    m_skip_email_isValid = false;

    m_skip_name_isSet = false;
    m_skip_name_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAIPostFormFieldSets::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostFormFieldSets::fromJsonObject(QJsonObject json) {

    m_form_fields_isValid = ::OpenAPI::fromJsonValue(m_form_fields, json[QString("form_fields")]);
    m_form_fields_isSet = !json[QString("form_fields")].isNull() && m_form_fields_isValid;

    m_skip_company_isValid = ::OpenAPI::fromJsonValue(m_skip_company, json[QString("skip_company")]);
    m_skip_company_isSet = !json[QString("skip_company")].isNull() && m_skip_company_isValid;

    m_skip_email_isValid = ::OpenAPI::fromJsonValue(m_skip_email, json[QString("skip_email")]);
    m_skip_email_isSet = !json[QString("skip_email")].isNull() && m_skip_email_isValid;

    m_skip_name_isValid = ::OpenAPI::fromJsonValue(m_skip_name, json[QString("skip_name")]);
    m_skip_name_isSet = !json[QString("skip_name")].isNull() && m_skip_name_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("user_id")]);
    m_user_id_isSet = !json[QString("user_id")].isNull() && m_user_id_isValid;
}

QString OAIPostFormFieldSets::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostFormFieldSets::asJsonObject() const {
    QJsonObject obj;
    if (m_form_fields.size() > 0) {
        obj.insert(QString("form_fields"), ::OpenAPI::toJsonValue(m_form_fields));
    }
    if (m_skip_company_isSet) {
        obj.insert(QString("skip_company"), ::OpenAPI::toJsonValue(m_skip_company));
    }
    if (m_skip_email_isSet) {
        obj.insert(QString("skip_email"), ::OpenAPI::toJsonValue(m_skip_email));
    }
    if (m_skip_name_isSet) {
        obj.insert(QString("skip_name"), ::OpenAPI::toJsonValue(m_skip_name));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("user_id"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QList<OAIPatchFormFieldSets_form_fields_inner> OAIPostFormFieldSets::getFormFields() const {
    return m_form_fields;
}
void OAIPostFormFieldSets::setFormFields(const QList<OAIPatchFormFieldSets_form_fields_inner> &form_fields) {
    m_form_fields = form_fields;
    m_form_fields_isSet = true;
}

bool OAIPostFormFieldSets::is_form_fields_Set() const{
    return m_form_fields_isSet;
}

bool OAIPostFormFieldSets::is_form_fields_Valid() const{
    return m_form_fields_isValid;
}

bool OAIPostFormFieldSets::isSkipCompany() const {
    return m_skip_company;
}
void OAIPostFormFieldSets::setSkipCompany(const bool &skip_company) {
    m_skip_company = skip_company;
    m_skip_company_isSet = true;
}

bool OAIPostFormFieldSets::is_skip_company_Set() const{
    return m_skip_company_isSet;
}

bool OAIPostFormFieldSets::is_skip_company_Valid() const{
    return m_skip_company_isValid;
}

bool OAIPostFormFieldSets::isSkipEmail() const {
    return m_skip_email;
}
void OAIPostFormFieldSets::setSkipEmail(const bool &skip_email) {
    m_skip_email = skip_email;
    m_skip_email_isSet = true;
}

bool OAIPostFormFieldSets::is_skip_email_Set() const{
    return m_skip_email_isSet;
}

bool OAIPostFormFieldSets::is_skip_email_Valid() const{
    return m_skip_email_isValid;
}

bool OAIPostFormFieldSets::isSkipName() const {
    return m_skip_name;
}
void OAIPostFormFieldSets::setSkipName(const bool &skip_name) {
    m_skip_name = skip_name;
    m_skip_name_isSet = true;
}

bool OAIPostFormFieldSets::is_skip_name_Set() const{
    return m_skip_name_isSet;
}

bool OAIPostFormFieldSets::is_skip_name_Valid() const{
    return m_skip_name_isValid;
}

QString OAIPostFormFieldSets::getTitle() const {
    return m_title;
}
void OAIPostFormFieldSets::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIPostFormFieldSets::is_title_Set() const{
    return m_title_isSet;
}

bool OAIPostFormFieldSets::is_title_Valid() const{
    return m_title_isValid;
}

qint32 OAIPostFormFieldSets::getUserId() const {
    return m_user_id;
}
void OAIPostFormFieldSets::setUserId(const qint32 &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIPostFormFieldSets::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIPostFormFieldSets::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAIPostFormFieldSets::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_form_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostFormFieldSets::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
