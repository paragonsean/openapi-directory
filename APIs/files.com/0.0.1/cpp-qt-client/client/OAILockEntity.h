/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILockEntity.h
 *
 * List Locks by path
 */

#ifndef OAILockEntity_H
#define OAILockEntity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILockEntity : public OAIObject {
public:
    OAILockEntity();
    OAILockEntity(QString json);
    ~OAILockEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowAccessByAnyUser() const;
    void setAllowAccessByAnyUser(const bool &allow_access_by_any_user);
    bool is_allow_access_by_any_user_Set() const;
    bool is_allow_access_by_any_user_Valid() const;

    QString getDepth() const;
    void setDepth(const QString &depth);
    bool is_depth_Set() const;
    bool is_depth_Valid() const;

    bool isExclusive() const;
    void setExclusive(const bool &exclusive);
    bool is_exclusive_Set() const;
    bool is_exclusive_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    bool isRecursive() const;
    void setRecursive(const bool &recursive);
    bool is_recursive_Set() const;
    bool is_recursive_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_access_by_any_user;
    bool m_allow_access_by_any_user_isSet;
    bool m_allow_access_by_any_user_isValid;

    QString m_depth;
    bool m_depth_isSet;
    bool m_depth_isValid;

    bool m_exclusive;
    bool m_exclusive_isSet;
    bool m_exclusive_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    bool m_recursive;
    bool m_recursive_isSet;
    bool m_recursive_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILockEntity)

#endif // OAILockEntity_H
