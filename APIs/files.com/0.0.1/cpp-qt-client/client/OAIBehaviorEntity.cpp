/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBehaviorEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBehaviorEntity::OAIBehaviorEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBehaviorEntity::OAIBehaviorEntity() {
    this->initializeModel();
}

OAIBehaviorEntity::~OAIBehaviorEntity() {}

void OAIBehaviorEntity::initializeModel() {

    m_attachment_url_isSet = false;
    m_attachment_url_isValid = false;

    m_behavior_isSet = false;
    m_behavior_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIBehaviorEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBehaviorEntity::fromJsonObject(QJsonObject json) {

    m_attachment_url_isValid = ::OpenAPI::fromJsonValue(m_attachment_url, json[QString("attachment_url")]);
    m_attachment_url_isSet = !json[QString("attachment_url")].isNull() && m_attachment_url_isValid;

    m_behavior_isValid = ::OpenAPI::fromJsonValue(m_behavior, json[QString("behavior")]);
    m_behavior_isSet = !json[QString("behavior")].isNull() && m_behavior_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIBehaviorEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBehaviorEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_attachment_url_isSet) {
        obj.insert(QString("attachment_url"), ::OpenAPI::toJsonValue(m_attachment_url));
    }
    if (m_behavior_isSet) {
        obj.insert(QString("behavior"), ::OpenAPI::toJsonValue(m_behavior));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIBehaviorEntity::getAttachmentUrl() const {
    return m_attachment_url;
}
void OAIBehaviorEntity::setAttachmentUrl(const QString &attachment_url) {
    m_attachment_url = attachment_url;
    m_attachment_url_isSet = true;
}

bool OAIBehaviorEntity::is_attachment_url_Set() const{
    return m_attachment_url_isSet;
}

bool OAIBehaviorEntity::is_attachment_url_Valid() const{
    return m_attachment_url_isValid;
}

QString OAIBehaviorEntity::getBehavior() const {
    return m_behavior;
}
void OAIBehaviorEntity::setBehavior(const QString &behavior) {
    m_behavior = behavior;
    m_behavior_isSet = true;
}

bool OAIBehaviorEntity::is_behavior_Set() const{
    return m_behavior_isSet;
}

bool OAIBehaviorEntity::is_behavior_Valid() const{
    return m_behavior_isValid;
}

QString OAIBehaviorEntity::getDescription() const {
    return m_description;
}
void OAIBehaviorEntity::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIBehaviorEntity::is_description_Set() const{
    return m_description_isSet;
}

bool OAIBehaviorEntity::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAIBehaviorEntity::getId() const {
    return m_id;
}
void OAIBehaviorEntity::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBehaviorEntity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBehaviorEntity::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIBehaviorEntity::getName() const {
    return m_name;
}
void OAIBehaviorEntity::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBehaviorEntity::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBehaviorEntity::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIBehaviorEntity::getPath() const {
    return m_path;
}
void OAIBehaviorEntity::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIBehaviorEntity::is_path_Set() const{
    return m_path_isSet;
}

bool OAIBehaviorEntity::is_path_Valid() const{
    return m_path_isValid;
}

OAIObject OAIBehaviorEntity::getValue() const {
    return m_value;
}
void OAIBehaviorEntity::setValue(const OAIObject &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIBehaviorEntity::is_value_Set() const{
    return m_value_isSet;
}

bool OAIBehaviorEntity::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIBehaviorEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attachment_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_behavior_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBehaviorEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
