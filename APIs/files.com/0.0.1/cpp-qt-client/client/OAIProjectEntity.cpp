/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectEntity::OAIProjectEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectEntity::OAIProjectEntity() {
    this->initializeModel();
}

OAIProjectEntity::~OAIProjectEntity() {}

void OAIProjectEntity::initializeModel() {

    m_global_access_isSet = false;
    m_global_access_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIProjectEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectEntity::fromJsonObject(QJsonObject json) {

    m_global_access_isValid = ::OpenAPI::fromJsonValue(m_global_access, json[QString("global_access")]);
    m_global_access_isSet = !json[QString("global_access")].isNull() && m_global_access_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIProjectEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_global_access_isSet) {
        obj.insert(QString("global_access"), ::OpenAPI::toJsonValue(m_global_access));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAIProjectEntity::getGlobalAccess() const {
    return m_global_access;
}
void OAIProjectEntity::setGlobalAccess(const QString &global_access) {
    m_global_access = global_access;
    m_global_access_isSet = true;
}

bool OAIProjectEntity::is_global_access_Set() const{
    return m_global_access_isSet;
}

bool OAIProjectEntity::is_global_access_Valid() const{
    return m_global_access_isValid;
}

qint32 OAIProjectEntity::getId() const {
    return m_id;
}
void OAIProjectEntity::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProjectEntity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProjectEntity::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIProjectEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_global_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
