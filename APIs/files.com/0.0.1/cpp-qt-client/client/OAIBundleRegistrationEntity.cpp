/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBundleRegistrationEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBundleRegistrationEntity::OAIBundleRegistrationEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBundleRegistrationEntity::OAIBundleRegistrationEntity() {
    this->initializeModel();
}

OAIBundleRegistrationEntity::~OAIBundleRegistrationEntity() {}

void OAIBundleRegistrationEntity::initializeModel() {

    m_bundle_code_isSet = false;
    m_bundle_code_isValid = false;

    m_bundle_id_isSet = false;
    m_bundle_id_isValid = false;

    m_bundle_recipient_id_isSet = false;
    m_bundle_recipient_id_isValid = false;

    m_clickwrap_body_isSet = false;
    m_clickwrap_body_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_company_isSet = false;
    m_company_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_form_field_data_isSet = false;
    m_form_field_data_isValid = false;

    m_form_field_set_id_isSet = false;
    m_form_field_set_id_isValid = false;

    m_inbox_code_isSet = false;
    m_inbox_code_isValid = false;

    m_ip_isSet = false;
    m_ip_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIBundleRegistrationEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBundleRegistrationEntity::fromJsonObject(QJsonObject json) {

    m_bundle_code_isValid = ::OpenAPI::fromJsonValue(m_bundle_code, json[QString("bundle_code")]);
    m_bundle_code_isSet = !json[QString("bundle_code")].isNull() && m_bundle_code_isValid;

    m_bundle_id_isValid = ::OpenAPI::fromJsonValue(m_bundle_id, json[QString("bundle_id")]);
    m_bundle_id_isSet = !json[QString("bundle_id")].isNull() && m_bundle_id_isValid;

    m_bundle_recipient_id_isValid = ::OpenAPI::fromJsonValue(m_bundle_recipient_id, json[QString("bundle_recipient_id")]);
    m_bundle_recipient_id_isSet = !json[QString("bundle_recipient_id")].isNull() && m_bundle_recipient_id_isValid;

    m_clickwrap_body_isValid = ::OpenAPI::fromJsonValue(m_clickwrap_body, json[QString("clickwrap_body")]);
    m_clickwrap_body_isSet = !json[QString("clickwrap_body")].isNull() && m_clickwrap_body_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_company_isValid = ::OpenAPI::fromJsonValue(m_company, json[QString("company")]);
    m_company_isSet = !json[QString("company")].isNull() && m_company_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_form_field_data_isValid = ::OpenAPI::fromJsonValue(m_form_field_data, json[QString("form_field_data")]);
    m_form_field_data_isSet = !json[QString("form_field_data")].isNull() && m_form_field_data_isValid;

    m_form_field_set_id_isValid = ::OpenAPI::fromJsonValue(m_form_field_set_id, json[QString("form_field_set_id")]);
    m_form_field_set_id_isSet = !json[QString("form_field_set_id")].isNull() && m_form_field_set_id_isValid;

    m_inbox_code_isValid = ::OpenAPI::fromJsonValue(m_inbox_code, json[QString("inbox_code")]);
    m_inbox_code_isSet = !json[QString("inbox_code")].isNull() && m_inbox_code_isValid;

    m_ip_isValid = ::OpenAPI::fromJsonValue(m_ip, json[QString("ip")]);
    m_ip_isSet = !json[QString("ip")].isNull() && m_ip_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIBundleRegistrationEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBundleRegistrationEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_bundle_code_isSet) {
        obj.insert(QString("bundle_code"), ::OpenAPI::toJsonValue(m_bundle_code));
    }
    if (m_bundle_id_isSet) {
        obj.insert(QString("bundle_id"), ::OpenAPI::toJsonValue(m_bundle_id));
    }
    if (m_bundle_recipient_id_isSet) {
        obj.insert(QString("bundle_recipient_id"), ::OpenAPI::toJsonValue(m_bundle_recipient_id));
    }
    if (m_clickwrap_body_isSet) {
        obj.insert(QString("clickwrap_body"), ::OpenAPI::toJsonValue(m_clickwrap_body));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_company_isSet) {
        obj.insert(QString("company"), ::OpenAPI::toJsonValue(m_company));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_form_field_data_isSet) {
        obj.insert(QString("form_field_data"), ::OpenAPI::toJsonValue(m_form_field_data));
    }
    if (m_form_field_set_id_isSet) {
        obj.insert(QString("form_field_set_id"), ::OpenAPI::toJsonValue(m_form_field_set_id));
    }
    if (m_inbox_code_isSet) {
        obj.insert(QString("inbox_code"), ::OpenAPI::toJsonValue(m_inbox_code));
    }
    if (m_ip_isSet) {
        obj.insert(QString("ip"), ::OpenAPI::toJsonValue(m_ip));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIBundleRegistrationEntity::getBundleCode() const {
    return m_bundle_code;
}
void OAIBundleRegistrationEntity::setBundleCode(const QString &bundle_code) {
    m_bundle_code = bundle_code;
    m_bundle_code_isSet = true;
}

bool OAIBundleRegistrationEntity::is_bundle_code_Set() const{
    return m_bundle_code_isSet;
}

bool OAIBundleRegistrationEntity::is_bundle_code_Valid() const{
    return m_bundle_code_isValid;
}

qint32 OAIBundleRegistrationEntity::getBundleId() const {
    return m_bundle_id;
}
void OAIBundleRegistrationEntity::setBundleId(const qint32 &bundle_id) {
    m_bundle_id = bundle_id;
    m_bundle_id_isSet = true;
}

bool OAIBundleRegistrationEntity::is_bundle_id_Set() const{
    return m_bundle_id_isSet;
}

bool OAIBundleRegistrationEntity::is_bundle_id_Valid() const{
    return m_bundle_id_isValid;
}

qint32 OAIBundleRegistrationEntity::getBundleRecipientId() const {
    return m_bundle_recipient_id;
}
void OAIBundleRegistrationEntity::setBundleRecipientId(const qint32 &bundle_recipient_id) {
    m_bundle_recipient_id = bundle_recipient_id;
    m_bundle_recipient_id_isSet = true;
}

bool OAIBundleRegistrationEntity::is_bundle_recipient_id_Set() const{
    return m_bundle_recipient_id_isSet;
}

bool OAIBundleRegistrationEntity::is_bundle_recipient_id_Valid() const{
    return m_bundle_recipient_id_isValid;
}

QString OAIBundleRegistrationEntity::getClickwrapBody() const {
    return m_clickwrap_body;
}
void OAIBundleRegistrationEntity::setClickwrapBody(const QString &clickwrap_body) {
    m_clickwrap_body = clickwrap_body;
    m_clickwrap_body_isSet = true;
}

bool OAIBundleRegistrationEntity::is_clickwrap_body_Set() const{
    return m_clickwrap_body_isSet;
}

bool OAIBundleRegistrationEntity::is_clickwrap_body_Valid() const{
    return m_clickwrap_body_isValid;
}

QString OAIBundleRegistrationEntity::getCode() const {
    return m_code;
}
void OAIBundleRegistrationEntity::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIBundleRegistrationEntity::is_code_Set() const{
    return m_code_isSet;
}

bool OAIBundleRegistrationEntity::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIBundleRegistrationEntity::getCompany() const {
    return m_company;
}
void OAIBundleRegistrationEntity::setCompany(const QString &company) {
    m_company = company;
    m_company_isSet = true;
}

bool OAIBundleRegistrationEntity::is_company_Set() const{
    return m_company_isSet;
}

bool OAIBundleRegistrationEntity::is_company_Valid() const{
    return m_company_isValid;
}

QDateTime OAIBundleRegistrationEntity::getCreatedAt() const {
    return m_created_at;
}
void OAIBundleRegistrationEntity::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIBundleRegistrationEntity::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIBundleRegistrationEntity::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIBundleRegistrationEntity::getEmail() const {
    return m_email;
}
void OAIBundleRegistrationEntity::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIBundleRegistrationEntity::is_email_Set() const{
    return m_email_isSet;
}

bool OAIBundleRegistrationEntity::is_email_Valid() const{
    return m_email_isValid;
}

OAIObject OAIBundleRegistrationEntity::getFormFieldData() const {
    return m_form_field_data;
}
void OAIBundleRegistrationEntity::setFormFieldData(const OAIObject &form_field_data) {
    m_form_field_data = form_field_data;
    m_form_field_data_isSet = true;
}

bool OAIBundleRegistrationEntity::is_form_field_data_Set() const{
    return m_form_field_data_isSet;
}

bool OAIBundleRegistrationEntity::is_form_field_data_Valid() const{
    return m_form_field_data_isValid;
}

qint32 OAIBundleRegistrationEntity::getFormFieldSetId() const {
    return m_form_field_set_id;
}
void OAIBundleRegistrationEntity::setFormFieldSetId(const qint32 &form_field_set_id) {
    m_form_field_set_id = form_field_set_id;
    m_form_field_set_id_isSet = true;
}

bool OAIBundleRegistrationEntity::is_form_field_set_id_Set() const{
    return m_form_field_set_id_isSet;
}

bool OAIBundleRegistrationEntity::is_form_field_set_id_Valid() const{
    return m_form_field_set_id_isValid;
}

QString OAIBundleRegistrationEntity::getInboxCode() const {
    return m_inbox_code;
}
void OAIBundleRegistrationEntity::setInboxCode(const QString &inbox_code) {
    m_inbox_code = inbox_code;
    m_inbox_code_isSet = true;
}

bool OAIBundleRegistrationEntity::is_inbox_code_Set() const{
    return m_inbox_code_isSet;
}

bool OAIBundleRegistrationEntity::is_inbox_code_Valid() const{
    return m_inbox_code_isValid;
}

QString OAIBundleRegistrationEntity::getIp() const {
    return m_ip;
}
void OAIBundleRegistrationEntity::setIp(const QString &ip) {
    m_ip = ip;
    m_ip_isSet = true;
}

bool OAIBundleRegistrationEntity::is_ip_Set() const{
    return m_ip_isSet;
}

bool OAIBundleRegistrationEntity::is_ip_Valid() const{
    return m_ip_isValid;
}

QString OAIBundleRegistrationEntity::getName() const {
    return m_name;
}
void OAIBundleRegistrationEntity::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBundleRegistrationEntity::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBundleRegistrationEntity::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIBundleRegistrationEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bundle_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bundle_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bundle_recipient_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_clickwrap_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_field_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_field_set_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inbox_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBundleRegistrationEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
