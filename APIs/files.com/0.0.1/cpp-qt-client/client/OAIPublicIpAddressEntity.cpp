/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicIpAddressEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicIpAddressEntity::OAIPublicIpAddressEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicIpAddressEntity::OAIPublicIpAddressEntity() {
    this->initializeModel();
}

OAIPublicIpAddressEntity::~OAIPublicIpAddressEntity() {}

void OAIPublicIpAddressEntity::initializeModel() {

    m_ftp_enabled_isSet = false;
    m_ftp_enabled_isValid = false;

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_server_name_isSet = false;
    m_server_name_isValid = false;

    m_sftp_enabled_isSet = false;
    m_sftp_enabled_isValid = false;
}

void OAIPublicIpAddressEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicIpAddressEntity::fromJsonObject(QJsonObject json) {

    m_ftp_enabled_isValid = ::OpenAPI::fromJsonValue(m_ftp_enabled, json[QString("ftp_enabled")]);
    m_ftp_enabled_isSet = !json[QString("ftp_enabled")].isNull() && m_ftp_enabled_isValid;

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ip_address")]);
    m_ip_address_isSet = !json[QString("ip_address")].isNull() && m_ip_address_isValid;

    m_server_name_isValid = ::OpenAPI::fromJsonValue(m_server_name, json[QString("server_name")]);
    m_server_name_isSet = !json[QString("server_name")].isNull() && m_server_name_isValid;

    m_sftp_enabled_isValid = ::OpenAPI::fromJsonValue(m_sftp_enabled, json[QString("sftp_enabled")]);
    m_sftp_enabled_isSet = !json[QString("sftp_enabled")].isNull() && m_sftp_enabled_isValid;
}

QString OAIPublicIpAddressEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicIpAddressEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_ftp_enabled_isSet) {
        obj.insert(QString("ftp_enabled"), ::OpenAPI::toJsonValue(m_ftp_enabled));
    }
    if (m_ip_address_isSet) {
        obj.insert(QString("ip_address"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_server_name_isSet) {
        obj.insert(QString("server_name"), ::OpenAPI::toJsonValue(m_server_name));
    }
    if (m_sftp_enabled_isSet) {
        obj.insert(QString("sftp_enabled"), ::OpenAPI::toJsonValue(m_sftp_enabled));
    }
    return obj;
}

bool OAIPublicIpAddressEntity::isFtpEnabled() const {
    return m_ftp_enabled;
}
void OAIPublicIpAddressEntity::setFtpEnabled(const bool &ftp_enabled) {
    m_ftp_enabled = ftp_enabled;
    m_ftp_enabled_isSet = true;
}

bool OAIPublicIpAddressEntity::is_ftp_enabled_Set() const{
    return m_ftp_enabled_isSet;
}

bool OAIPublicIpAddressEntity::is_ftp_enabled_Valid() const{
    return m_ftp_enabled_isValid;
}

QString OAIPublicIpAddressEntity::getIpAddress() const {
    return m_ip_address;
}
void OAIPublicIpAddressEntity::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIPublicIpAddressEntity::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIPublicIpAddressEntity::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

QString OAIPublicIpAddressEntity::getServerName() const {
    return m_server_name;
}
void OAIPublicIpAddressEntity::setServerName(const QString &server_name) {
    m_server_name = server_name;
    m_server_name_isSet = true;
}

bool OAIPublicIpAddressEntity::is_server_name_Set() const{
    return m_server_name_isSet;
}

bool OAIPublicIpAddressEntity::is_server_name_Valid() const{
    return m_server_name_isValid;
}

bool OAIPublicIpAddressEntity::isSftpEnabled() const {
    return m_sftp_enabled;
}
void OAIPublicIpAddressEntity::setSftpEnabled(const bool &sftp_enabled) {
    m_sftp_enabled = sftp_enabled;
    m_sftp_enabled_isSet = true;
}

bool OAIPublicIpAddressEntity::is_sftp_enabled_Set() const{
    return m_sftp_enabled_isSet;
}

bool OAIPublicIpAddressEntity::is_sftp_enabled_Valid() const{
    return m_sftp_enabled_isValid;
}

bool OAIPublicIpAddressEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ftp_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_server_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sftp_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicIpAddressEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
