/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISettingsChangeEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISettingsChangeEntity::OAISettingsChangeEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISettingsChangeEntity::OAISettingsChangeEntity() {
    this->initializeModel();
}

OAISettingsChangeEntity::~OAISettingsChangeEntity() {}

void OAISettingsChangeEntity::initializeModel() {

    m_changes_isSet = false;
    m_changes_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_user_is_files_support_isSet = false;
    m_user_is_files_support_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAISettingsChangeEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISettingsChangeEntity::fromJsonObject(QJsonObject json) {

    m_changes_isValid = ::OpenAPI::fromJsonValue(m_changes, json[QString("changes")]);
    m_changes_isSet = !json[QString("changes")].isNull() && m_changes_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("user_id")]);
    m_user_id_isSet = !json[QString("user_id")].isNull() && m_user_id_isValid;

    m_user_is_files_support_isValid = ::OpenAPI::fromJsonValue(m_user_is_files_support, json[QString("user_is_files_support")]);
    m_user_is_files_support_isSet = !json[QString("user_is_files_support")].isNull() && m_user_is_files_support_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAISettingsChangeEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISettingsChangeEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_changes.size() > 0) {
        obj.insert(QString("changes"), ::OpenAPI::toJsonValue(m_changes));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("user_id"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_user_is_files_support_isSet) {
        obj.insert(QString("user_is_files_support"), ::OpenAPI::toJsonValue(m_user_is_files_support));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QList<QString> OAISettingsChangeEntity::getChanges() const {
    return m_changes;
}
void OAISettingsChangeEntity::setChanges(const QList<QString> &changes) {
    m_changes = changes;
    m_changes_isSet = true;
}

bool OAISettingsChangeEntity::is_changes_Set() const{
    return m_changes_isSet;
}

bool OAISettingsChangeEntity::is_changes_Valid() const{
    return m_changes_isValid;
}

QDateTime OAISettingsChangeEntity::getCreatedAt() const {
    return m_created_at;
}
void OAISettingsChangeEntity::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAISettingsChangeEntity::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAISettingsChangeEntity::is_created_at_Valid() const{
    return m_created_at_isValid;
}

qint32 OAISettingsChangeEntity::getUserId() const {
    return m_user_id;
}
void OAISettingsChangeEntity::setUserId(const qint32 &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAISettingsChangeEntity::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAISettingsChangeEntity::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAISettingsChangeEntity::isUserIsFilesSupport() const {
    return m_user_is_files_support;
}
void OAISettingsChangeEntity::setUserIsFilesSupport(const bool &user_is_files_support) {
    m_user_is_files_support = user_is_files_support;
    m_user_is_files_support_isSet = true;
}

bool OAISettingsChangeEntity::is_user_is_files_support_Set() const{
    return m_user_is_files_support_isSet;
}

bool OAISettingsChangeEntity::is_user_is_files_support_Valid() const{
    return m_user_is_files_support_isValid;
}

QString OAISettingsChangeEntity::getUsername() const {
    return m_username;
}
void OAISettingsChangeEntity::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAISettingsChangeEntity::is_username_Set() const{
    return m_username_isSet;
}

bool OAISettingsChangeEntity::is_username_Valid() const{
    return m_username_isValid;
}

bool OAISettingsChangeEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_changes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_is_files_support_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISettingsChangeEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
