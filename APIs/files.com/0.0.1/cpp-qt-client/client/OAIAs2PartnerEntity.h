/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAs2PartnerEntity.h
 *
 * Create As2 Partner
 */

#ifndef OAIAs2PartnerEntity_H
#define OAIAs2PartnerEntity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAs2PartnerEntity : public OAIObject {
public:
    OAIAs2PartnerEntity();
    OAIAs2PartnerEntity(QString json);
    ~OAIAs2PartnerEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAs2StationId() const;
    void setAs2StationId(const qint32 &as2_station_id);
    bool is_as2_station_id_Set() const;
    bool is_as2_station_id_Valid() const;

    bool isEnableDedicatedIps() const;
    void setEnableDedicatedIps(const bool &enable_dedicated_ips);
    bool is_enable_dedicated_ips_Set() const;
    bool is_enable_dedicated_ips_Valid() const;

    QString getHexPublicCertificateSerial() const;
    void setHexPublicCertificateSerial(const QString &hex_public_certificate_serial);
    bool is_hex_public_certificate_serial_Set() const;
    bool is_hex_public_certificate_serial_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPublicCertificateIssuer() const;
    void setPublicCertificateIssuer(const QString &public_certificate_issuer);
    bool is_public_certificate_issuer_Set() const;
    bool is_public_certificate_issuer_Valid() const;

    QString getPublicCertificateMd5() const;
    void setPublicCertificateMd5(const QString &public_certificate_md5);
    bool is_public_certificate_md5_Set() const;
    bool is_public_certificate_md5_Valid() const;

    QString getPublicCertificateNotAfter() const;
    void setPublicCertificateNotAfter(const QString &public_certificate_not_after);
    bool is_public_certificate_not_after_Set() const;
    bool is_public_certificate_not_after_Valid() const;

    QString getPublicCertificateNotBefore() const;
    void setPublicCertificateNotBefore(const QString &public_certificate_not_before);
    bool is_public_certificate_not_before_Set() const;
    bool is_public_certificate_not_before_Valid() const;

    QString getPublicCertificateSerial() const;
    void setPublicCertificateSerial(const QString &public_certificate_serial);
    bool is_public_certificate_serial_Set() const;
    bool is_public_certificate_serial_Valid() const;

    QString getPublicCertificateSubject() const;
    void setPublicCertificateSubject(const QString &public_certificate_subject);
    bool is_public_certificate_subject_Set() const;
    bool is_public_certificate_subject_Valid() const;

    QString getServerCertificate() const;
    void setServerCertificate(const QString &server_certificate);
    bool is_server_certificate_Set() const;
    bool is_server_certificate_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_as2_station_id;
    bool m_as2_station_id_isSet;
    bool m_as2_station_id_isValid;

    bool m_enable_dedicated_ips;
    bool m_enable_dedicated_ips_isSet;
    bool m_enable_dedicated_ips_isValid;

    QString m_hex_public_certificate_serial;
    bool m_hex_public_certificate_serial_isSet;
    bool m_hex_public_certificate_serial_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_public_certificate_issuer;
    bool m_public_certificate_issuer_isSet;
    bool m_public_certificate_issuer_isValid;

    QString m_public_certificate_md5;
    bool m_public_certificate_md5_isSet;
    bool m_public_certificate_md5_isValid;

    QString m_public_certificate_not_after;
    bool m_public_certificate_not_after_isSet;
    bool m_public_certificate_not_after_isValid;

    QString m_public_certificate_not_before;
    bool m_public_certificate_not_before_isSet;
    bool m_public_certificate_not_before_isValid;

    QString m_public_certificate_serial;
    bool m_public_certificate_serial_isSet;
    bool m_public_certificate_serial_isValid;

    QString m_public_certificate_subject;
    bool m_public_certificate_subject_isSet;
    bool m_public_certificate_subject_isValid;

    QString m_server_certificate;
    bool m_server_certificate_isSet;
    bool m_server_certificate_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAs2PartnerEntity)

#endif // OAIAs2PartnerEntity_H
