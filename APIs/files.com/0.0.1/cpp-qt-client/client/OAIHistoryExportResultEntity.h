/**
 * Files.com API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@files.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHistoryExportResultEntity.h
 *
 * List History Export Results
 */

#ifndef OAIHistoryExportResultEntity_H
#define OAIHistoryExportResultEntity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHistoryExportResultEntity : public OAIObject {
public:
    OAIHistoryExportResultEntity();
    OAIHistoryExportResultEntity(QString json);
    ~OAIHistoryExportResultEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    qint32 getCreatedAt() const;
    void setCreatedAt(const qint32 &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getCreatedAtIso8601() const;
    void setCreatedAtIso8601(const qint32 &created_at_iso8601);
    bool is_created_at_iso8601_Set() const;
    bool is_created_at_iso8601_Valid() const;

    QString getDestination() const;
    void setDestination(const QString &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    QString getFailureType() const;
    void setFailureType(const QString &failure_type);
    bool is_failure_type_Set() const;
    bool is_failure_type_Valid() const;

    qint32 getFileId() const;
    void setFileId(const qint32 &file_id);
    bool is_file_id_Set() const;
    bool is_file_id_Valid() const;

    QString getFolder() const;
    void setFolder(const QString &folder);
    bool is_folder_Set() const;
    bool is_folder_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInterface() const;
    void setInterface(const QString &interface);
    bool is_interface_Set() const;
    bool is_interface_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    qint32 getParentId() const;
    void setParentId(const qint32 &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getSrc() const;
    void setSrc(const QString &src);
    bool is_src_Set() const;
    bool is_src_Valid() const;

    qint32 getTargetExpiresAt() const;
    void setTargetExpiresAt(const qint32 &target_expires_at);
    bool is_target_expires_at_Set() const;
    bool is_target_expires_at_Valid() const;

    qint32 getTargetId() const;
    void setTargetId(const qint32 &target_id);
    bool is_target_id_Set() const;
    bool is_target_id_Valid() const;

    QString getTargetName() const;
    void setTargetName(const QString &target_name);
    bool is_target_name_Set() const;
    bool is_target_name_Valid() const;

    QString getTargetPermission() const;
    void setTargetPermission(const QString &target_permission);
    bool is_target_permission_Set() const;
    bool is_target_permission_Valid() const;

    QString getTargetPermissionSet() const;
    void setTargetPermissionSet(const QString &target_permission_set);
    bool is_target_permission_set_Set() const;
    bool is_target_permission_set_Valid() const;

    QString getTargetPlatform() const;
    void setTargetPlatform(const QString &target_platform);
    bool is_target_platform_Set() const;
    bool is_target_platform_Valid() const;

    bool isTargetRecursive() const;
    void setTargetRecursive(const bool &target_recursive);
    bool is_target_recursive_Set() const;
    bool is_target_recursive_Valid() const;

    qint32 getTargetUserId() const;
    void setTargetUserId(const qint32 &target_user_id);
    bool is_target_user_id_Set() const;
    bool is_target_user_id_Valid() const;

    QString getTargetUsername() const;
    void setTargetUsername(const QString &target_username);
    bool is_target_username_Set() const;
    bool is_target_username_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    qint32 m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_created_at_iso8601;
    bool m_created_at_iso8601_isSet;
    bool m_created_at_iso8601_isValid;

    QString m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    QString m_failure_type;
    bool m_failure_type_isSet;
    bool m_failure_type_isValid;

    qint32 m_file_id;
    bool m_file_id_isSet;
    bool m_file_id_isValid;

    QString m_folder;
    bool m_folder_isSet;
    bool m_folder_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_interface;
    bool m_interface_isSet;
    bool m_interface_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    qint32 m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_src;
    bool m_src_isSet;
    bool m_src_isValid;

    qint32 m_target_expires_at;
    bool m_target_expires_at_isSet;
    bool m_target_expires_at_isValid;

    qint32 m_target_id;
    bool m_target_id_isSet;
    bool m_target_id_isValid;

    QString m_target_name;
    bool m_target_name_isSet;
    bool m_target_name_isValid;

    QString m_target_permission;
    bool m_target_permission_isSet;
    bool m_target_permission_isValid;

    QString m_target_permission_set;
    bool m_target_permission_set_isSet;
    bool m_target_permission_set_isValid;

    QString m_target_platform;
    bool m_target_platform_isSet;
    bool m_target_platform_isValid;

    bool m_target_recursive;
    bool m_target_recursive_isSet;
    bool m_target_recursive_isValid;

    qint32 m_target_user_id;
    bool m_target_user_id_isSet;
    bool m_target_user_id_isValid;

    QString m_target_username;
    bool m_target_username_isSet;
    bool m_target_username_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHistoryExportResultEntity)

#endif // OAIHistoryExportResultEntity_H
