/*
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SummarizeHotelViewsResponse
 */
public class SummarizeHotelViewsResponseTest {
    private final SummarizeHotelViewsResponse model = new SummarizeHotelViewsResponse();

    /**
     * Model tests for SummarizeHotelViewsResponse
     */
    @Test
    public void testSummarizeHotelViewsResponse() {
        // TODO: test SummarizeHotelViewsResponse
    }

    /**
     * Test the property 'lastFeedSubmissionTime'
     */
    @Test
    public void lastFeedSubmissionTimeTest() {
        // TODO: test lastFeedSubmissionTime
    }

    /**
     * Test the property 'lastManifestUpdateTime'
     */
    @Test
    public void lastManifestUpdateTimeTest() {
        // TODO: test lastManifestUpdateTime
    }

    /**
     * Test the property 'liveOnGooglePropertyCount'
     */
    @Test
    public void liveOnGooglePropertyCountTest() {
        // TODO: test liveOnGooglePropertyCount
    }

    /**
     * Test the property 'matchedPropertyCount'
     */
    @Test
    public void matchedPropertyCountTest() {
        // TODO: test matchedPropertyCount
    }

    /**
     * Test the property 'overclusteredPropertyCount'
     */
    @Test
    public void overclusteredPropertyCountTest() {
        // TODO: test overclusteredPropertyCount
    }

    /**
     * Test the property 'overclusteredPropertyWithErrorsCount'
     */
    @Test
    public void overclusteredPropertyWithErrorsCountTest() {
        // TODO: test overclusteredPropertyWithErrorsCount
    }

    /**
     * Test the property 'unmatchedPropertyCount'
     */
    @Test
    public void unmatchedPropertyCountTest() {
        // TODO: test unmatchedPropertyCount
    }

    /**
     * Test the property 'unmatchedPropertyWithErrorsCount'
     */
    @Test
    public void unmatchedPropertyWithErrorsCountTest() {
        // TODO: test unmatchedPropertyWithErrorsCount
    }

}
