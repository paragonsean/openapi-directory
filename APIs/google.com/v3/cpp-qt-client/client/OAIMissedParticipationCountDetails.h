/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMissedParticipationCountDetails.h
 *
 * Missed participation count broken down by reason.
 */

#ifndef OAIMissedParticipationCountDetails_H
#define OAIMissedParticipationCountDetails_H

#include <QJsonObject>

#include "OAINoPriceCountDetails.h"
#include "OAIPriceMissingCountDetails.h"
#include "OAIPriceProblemCountDetails.h"
#include "OAIPriceUnavailableCountDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINoPriceCountDetails;
class OAIPriceMissingCountDetails;
class OAIPriceProblemCountDetails;
class OAIPriceUnavailableCountDetails;

class OAIMissedParticipationCountDetails : public OAIObject {
public:
    OAIMissedParticipationCountDetails();
    OAIMissedParticipationCountDetails(QString json);
    ~OAIMissedParticipationCountDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHotelSuspendedCount() const;
    void setHotelSuspendedCount(const QString &hotel_suspended_count);
    bool is_hotel_suspended_count_Set() const;
    bool is_hotel_suspended_count_Valid() const;

    QString getNoAvailabilityCount() const;
    void setNoAvailabilityCount(const QString &no_availability_count);
    bool is_no_availability_count_Set() const;
    bool is_no_availability_count_Valid() const;

    QString getNoLandingPageCount() const;
    void setNoLandingPageCount(const QString &no_landing_page_count);
    bool is_no_landing_page_count_Set() const;
    bool is_no_landing_page_count_Valid() const;

    QString getNoPriceCount() const;
    void setNoPriceCount(const QString &no_price_count);
    bool is_no_price_count_Set() const;
    bool is_no_price_count_Valid() const;

    OAINoPriceCountDetails getNoPriceCountDetails() const;
    void setNoPriceCountDetails(const OAINoPriceCountDetails &no_price_count_details);
    bool is_no_price_count_details_Set() const;
    bool is_no_price_count_details_Valid() const;

    QString getNoTaxBreakdownCount() const;
    void setNoTaxBreakdownCount(const QString &no_tax_breakdown_count);
    bool is_no_tax_breakdown_count_Set() const;
    bool is_no_tax_breakdown_count_Valid() const;

    QString getOtherReasonCount() const;
    void setOtherReasonCount(const QString &other_reason_count);
    bool is_other_reason_count_Set() const;
    bool is_other_reason_count_Valid() const;

    QString getPriceMissingCount() const;
    void setPriceMissingCount(const QString &price_missing_count);
    bool is_price_missing_count_Set() const;
    bool is_price_missing_count_Valid() const;

    OAIPriceMissingCountDetails getPriceMissingCountDetails() const;
    void setPriceMissingCountDetails(const OAIPriceMissingCountDetails &price_missing_count_details);
    bool is_price_missing_count_details_Set() const;
    bool is_price_missing_count_details_Valid() const;

    QString getPriceProblemCount() const;
    void setPriceProblemCount(const QString &price_problem_count);
    bool is_price_problem_count_Set() const;
    bool is_price_problem_count_Valid() const;

    OAIPriceProblemCountDetails getPriceProblemCountDetails() const;
    void setPriceProblemCountDetails(const OAIPriceProblemCountDetails &price_problem_count_details);
    bool is_price_problem_count_details_Set() const;
    bool is_price_problem_count_details_Valid() const;

    QString getPriceUnavailableCount() const;
    void setPriceUnavailableCount(const QString &price_unavailable_count);
    bool is_price_unavailable_count_Set() const;
    bool is_price_unavailable_count_Valid() const;

    OAIPriceUnavailableCountDetails getPriceUnavailableCountDetails() const;
    void setPriceUnavailableCountDetails(const OAIPriceUnavailableCountDetails &price_unavailable_count_details);
    bool is_price_unavailable_count_details_Set() const;
    bool is_price_unavailable_count_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_hotel_suspended_count;
    bool m_hotel_suspended_count_isSet;
    bool m_hotel_suspended_count_isValid;

    QString m_no_availability_count;
    bool m_no_availability_count_isSet;
    bool m_no_availability_count_isValid;

    QString m_no_landing_page_count;
    bool m_no_landing_page_count_isSet;
    bool m_no_landing_page_count_isValid;

    QString m_no_price_count;
    bool m_no_price_count_isSet;
    bool m_no_price_count_isValid;

    OAINoPriceCountDetails m_no_price_count_details;
    bool m_no_price_count_details_isSet;
    bool m_no_price_count_details_isValid;

    QString m_no_tax_breakdown_count;
    bool m_no_tax_breakdown_count_isSet;
    bool m_no_tax_breakdown_count_isValid;

    QString m_other_reason_count;
    bool m_other_reason_count_isSet;
    bool m_other_reason_count_isValid;

    QString m_price_missing_count;
    bool m_price_missing_count_isSet;
    bool m_price_missing_count_isValid;

    OAIPriceMissingCountDetails m_price_missing_count_details;
    bool m_price_missing_count_details_isSet;
    bool m_price_missing_count_details_isValid;

    QString m_price_problem_count;
    bool m_price_problem_count_isSet;
    bool m_price_problem_count_isValid;

    OAIPriceProblemCountDetails m_price_problem_count_details;
    bool m_price_problem_count_details_isSet;
    bool m_price_problem_count_details_isValid;

    QString m_price_unavailable_count;
    bool m_price_unavailable_count_isSet;
    bool m_price_unavailable_count_isValid;

    OAIPriceUnavailableCountDetails m_price_unavailable_count_details;
    bool m_price_unavailable_count_details_isSet;
    bool m_price_unavailable_count_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMissedParticipationCountDetails)

#endif // OAIMissedParticipationCountDetails_H
