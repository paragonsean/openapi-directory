/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListHotelViewsResponse.h
 *
 * Response message for HotelViewService.ListHotelViews.
 */

#ifndef OAIListHotelViewsResponse_H
#define OAIListHotelViewsResponse_H

#include <QJsonObject>

#include "OAIHotelView.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHotelView;

class OAIListHotelViewsResponse : public OAIObject {
public:
    OAIListHotelViewsResponse();
    OAIListHotelViewsResponse(QString json);
    ~OAIListHotelViewsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIHotelView> getHotelViews() const;
    void setHotelViews(const QList<OAIHotelView> &hotel_views);
    bool is_hotel_views_Set() const;
    bool is_hotel_views_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIHotelView> m_hotel_views;
    bool m_hotel_views_isSet;
    bool m_hotel_views_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListHotelViewsResponse)

#endif // OAIListHotelViewsResponse_H
