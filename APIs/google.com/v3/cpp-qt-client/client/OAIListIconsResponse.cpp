/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListIconsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListIconsResponse::OAIListIconsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListIconsResponse::OAIListIconsResponse() {
    this->initializeModel();
}

OAIListIconsResponse::~OAIListIconsResponse() {}

void OAIListIconsResponse::initializeModel() {

    m_icons_isSet = false;
    m_icons_isValid = false;
}

void OAIListIconsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListIconsResponse::fromJsonObject(QJsonObject json) {

    m_icons_isValid = ::OpenAPI::fromJsonValue(m_icons, json[QString("icons")]);
    m_icons_isSet = !json[QString("icons")].isNull() && m_icons_isValid;
}

QString OAIListIconsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListIconsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_icons.size() > 0) {
        obj.insert(QString("icons"), ::OpenAPI::toJsonValue(m_icons));
    }
    return obj;
}

QList<OAIIcon> OAIListIconsResponse::getIcons() const {
    return m_icons;
}
void OAIListIconsResponse::setIcons(const QList<OAIIcon> &icons) {
    m_icons = icons;
    m_icons_isSet = true;
}

bool OAIListIconsResponse::is_icons_Set() const{
    return m_icons_isSet;
}

bool OAIListIconsResponse::is_icons_Valid() const{
    return m_icons_isValid;
}

bool OAIListIconsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_icons.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListIconsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
