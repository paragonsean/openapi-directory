/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPropertyPerformanceResult.h
 *
 * Represents a result from querying for the property performance report for an account.
 */

#ifndef OAIPropertyPerformanceResult_H
#define OAIPropertyPerformanceResult_H

#include <QJsonObject>

#include "OAIDate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDate;

class OAIPropertyPerformanceResult : public OAIObject {
public:
    OAIPropertyPerformanceResult();
    OAIPropertyPerformanceResult(QString json);
    ~OAIPropertyPerformanceResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdsClickCount() const;
    void setAdsClickCount(const QString &ads_click_count);
    bool is_ads_click_count_Set() const;
    bool is_ads_click_count_Valid() const;

    double getAdsClickthroughRate() const;
    void setAdsClickthroughRate(const double &ads_clickthrough_rate);
    bool is_ads_clickthrough_rate_Set() const;
    bool is_ads_clickthrough_rate_Valid() const;

    QString getAdsImpressionCount() const;
    void setAdsImpressionCount(const QString &ads_impression_count);
    bool is_ads_impression_count_Set() const;
    bool is_ads_impression_count_Valid() const;

    QString getAdvanceBookingWindow() const;
    void setAdvanceBookingWindow(const QString &advance_booking_window);
    bool is_advance_booking_window_Set() const;
    bool is_advance_booking_window_Valid() const;

    QString getBrand() const;
    void setBrand(const QString &brand);
    bool is_brand_Set() const;
    bool is_brand_Valid() const;

    QString getClickCount() const;
    void setClickCount(const QString &click_count);
    bool is_click_count_Set() const;
    bool is_click_count_Valid() const;

    double getClickthroughRate() const;
    void setClickthroughRate(const double &clickthrough_rate);
    bool is_clickthrough_rate_Set() const;
    bool is_clickthrough_rate_Valid() const;

    OAIDate getDate() const;
    void setDate(const OAIDate &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDeviceType() const;
    void setDeviceType(const QString &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    bool isHighIntentUsers() const;
    void setHighIntentUsers(const bool &high_intent_users);
    bool is_high_intent_users_Set() const;
    bool is_high_intent_users_Valid() const;

    QString getImpressionCount() const;
    void setImpressionCount(const QString &impression_count);
    bool is_impression_count_Set() const;
    bool is_impression_count_Valid() const;

    QString getLengthOfStay() const;
    void setLengthOfStay(const QString &length_of_stay);
    bool is_length_of_stay_Set() const;
    bool is_length_of_stay_Valid() const;

    QString getOccupancy() const;
    void setOccupancy(const QString &occupancy);
    bool is_occupancy_Set() const;
    bool is_occupancy_Valid() const;

    QString getPartnerPropertyDisplayName() const;
    void setPartnerPropertyDisplayName(const QString &partner_property_display_name);
    bool is_partner_property_display_name_Set() const;
    bool is_partner_property_display_name_Valid() const;

    QString getPartnerPropertyId() const;
    void setPartnerPropertyId(const QString &partner_property_id);
    bool is_partner_property_id_Set() const;
    bool is_partner_property_id_Valid() const;

    QString getPropertyRegionCode() const;
    void setPropertyRegionCode(const QString &property_region_code);
    bool is_property_region_code_Set() const;
    bool is_property_region_code_Valid() const;

    QString getUserRegionCode() const;
    void setUserRegionCode(const QString &user_region_code);
    bool is_user_region_code_Set() const;
    bool is_user_region_code_Valid() const;

    QString getVrWebsiteButtonClicks() const;
    void setVrWebsiteButtonClicks(const QString &vr_website_button_clicks);
    bool is_vr_website_button_clicks_Set() const;
    bool is_vr_website_button_clicks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ads_click_count;
    bool m_ads_click_count_isSet;
    bool m_ads_click_count_isValid;

    double m_ads_clickthrough_rate;
    bool m_ads_clickthrough_rate_isSet;
    bool m_ads_clickthrough_rate_isValid;

    QString m_ads_impression_count;
    bool m_ads_impression_count_isSet;
    bool m_ads_impression_count_isValid;

    QString m_advance_booking_window;
    bool m_advance_booking_window_isSet;
    bool m_advance_booking_window_isValid;

    QString m_brand;
    bool m_brand_isSet;
    bool m_brand_isValid;

    QString m_click_count;
    bool m_click_count_isSet;
    bool m_click_count_isValid;

    double m_clickthrough_rate;
    bool m_clickthrough_rate_isSet;
    bool m_clickthrough_rate_isValid;

    OAIDate m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    bool m_high_intent_users;
    bool m_high_intent_users_isSet;
    bool m_high_intent_users_isValid;

    QString m_impression_count;
    bool m_impression_count_isSet;
    bool m_impression_count_isValid;

    QString m_length_of_stay;
    bool m_length_of_stay_isSet;
    bool m_length_of_stay_isValid;

    QString m_occupancy;
    bool m_occupancy_isSet;
    bool m_occupancy_isValid;

    QString m_partner_property_display_name;
    bool m_partner_property_display_name_isSet;
    bool m_partner_property_display_name_isValid;

    QString m_partner_property_id;
    bool m_partner_property_id_isSet;
    bool m_partner_property_id_isValid;

    QString m_property_region_code;
    bool m_property_region_code_isSet;
    bool m_property_region_code_isValid;

    QString m_user_region_code;
    bool m_user_region_code_isSet;
    bool m_user_region_code_isValid;

    QString m_vr_website_button_clicks;
    bool m_vr_website_button_clicks_isSet;
    bool m_vr_website_button_clicks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPropertyPerformanceResult)

#endif // OAIPropertyPerformanceResult_H
