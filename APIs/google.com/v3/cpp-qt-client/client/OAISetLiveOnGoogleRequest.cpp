/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISetLiveOnGoogleRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISetLiveOnGoogleRequest::OAISetLiveOnGoogleRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISetLiveOnGoogleRequest::OAISetLiveOnGoogleRequest() {
    this->initializeModel();
}

OAISetLiveOnGoogleRequest::~OAISetLiveOnGoogleRequest() {}

void OAISetLiveOnGoogleRequest::initializeModel() {

    m_live_on_google_isSet = false;
    m_live_on_google_isValid = false;

    m_partner_hotel_ids_isSet = false;
    m_partner_hotel_ids_isValid = false;
}

void OAISetLiveOnGoogleRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISetLiveOnGoogleRequest::fromJsonObject(QJsonObject json) {

    m_live_on_google_isValid = ::OpenAPI::fromJsonValue(m_live_on_google, json[QString("liveOnGoogle")]);
    m_live_on_google_isSet = !json[QString("liveOnGoogle")].isNull() && m_live_on_google_isValid;

    m_partner_hotel_ids_isValid = ::OpenAPI::fromJsonValue(m_partner_hotel_ids, json[QString("partnerHotelIds")]);
    m_partner_hotel_ids_isSet = !json[QString("partnerHotelIds")].isNull() && m_partner_hotel_ids_isValid;
}

QString OAISetLiveOnGoogleRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISetLiveOnGoogleRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_live_on_google_isSet) {
        obj.insert(QString("liveOnGoogle"), ::OpenAPI::toJsonValue(m_live_on_google));
    }
    if (m_partner_hotel_ids.size() > 0) {
        obj.insert(QString("partnerHotelIds"), ::OpenAPI::toJsonValue(m_partner_hotel_ids));
    }
    return obj;
}

bool OAISetLiveOnGoogleRequest::isLiveOnGoogle() const {
    return m_live_on_google;
}
void OAISetLiveOnGoogleRequest::setLiveOnGoogle(const bool &live_on_google) {
    m_live_on_google = live_on_google;
    m_live_on_google_isSet = true;
}

bool OAISetLiveOnGoogleRequest::is_live_on_google_Set() const{
    return m_live_on_google_isSet;
}

bool OAISetLiveOnGoogleRequest::is_live_on_google_Valid() const{
    return m_live_on_google_isValid;
}

QList<QString> OAISetLiveOnGoogleRequest::getPartnerHotelIds() const {
    return m_partner_hotel_ids;
}
void OAISetLiveOnGoogleRequest::setPartnerHotelIds(const QList<QString> &partner_hotel_ids) {
    m_partner_hotel_ids = partner_hotel_ids;
    m_partner_hotel_ids_isSet = true;
}

bool OAISetLiveOnGoogleRequest::is_partner_hotel_ids_Set() const{
    return m_partner_hotel_ids_isSet;
}

bool OAISetLiveOnGoogleRequest::is_partner_hotel_ids_Valid() const{
    return m_partner_hotel_ids_isValid;
}

bool OAISetLiveOnGoogleRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_live_on_google_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partner_hotel_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISetLiveOnGoogleRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
