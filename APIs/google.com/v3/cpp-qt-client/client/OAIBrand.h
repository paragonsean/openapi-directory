/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBrand.h
 *
 * Brand-level icon and display name configuration. Once approved, the icon and display name appear in the search results for properties that the partner has assigned to this brand.
 */

#ifndef OAIBrand_H
#define OAIBrand_H

#include <QJsonObject>

#include "OAIDisplayNameDisapprovalReason.h"
#include "OAILocalizedText.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILocalizedText;
class OAIDisplayNameDisapprovalReason;

class OAIBrand : public OAIObject {
public:
    OAIBrand();
    OAIBrand(QString json);
    ~OAIBrand() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAILocalizedText> getActiveDisplayNames() const;
    void setActiveDisplayNames(const QList<OAILocalizedText> &active_display_names);
    bool is_active_display_names_Set() const;
    bool is_active_display_names_Valid() const;

    QString getActiveIcon() const;
    void setActiveIcon(const QString &active_icon);
    bool is_active_icon_Set() const;
    bool is_active_icon_Valid() const;

    QString getActiveIconUri() const;
    void setActiveIconUri(const QString &active_icon_uri);
    bool is_active_icon_uri_Set() const;
    bool is_active_icon_uri_Valid() const;

    QList<OAIDisplayNameDisapprovalReason> getDisplayNameDisapprovalReason() const;
    void setDisplayNameDisapprovalReason(const QList<OAIDisplayNameDisapprovalReason> &display_name_disapproval_reason);
    bool is_display_name_disapproval_reason_Set() const;
    bool is_display_name_disapproval_reason_Valid() const;

    QString getDisplayNameState() const;
    void setDisplayNameState(const QString &display_name_state);
    bool is_display_name_state_Set() const;
    bool is_display_name_state_Valid() const;

    QList<OAILocalizedText> getDisplayNames() const;
    void setDisplayNames(const QList<OAILocalizedText> &display_names);
    bool is_display_names_Set() const;
    bool is_display_names_Valid() const;

    QString getIcon() const;
    void setIcon(const QString &icon);
    bool is_icon_Set() const;
    bool is_icon_Valid() const;

    QList<QString> getIconDisapprovalReasons() const;
    void setIconDisapprovalReasons(const QList<QString> &icon_disapproval_reasons);
    bool is_icon_disapproval_reasons_Set() const;
    bool is_icon_disapproval_reasons_Valid() const;

    QString getIconState() const;
    void setIconState(const QString &icon_state);
    bool is_icon_state_Set() const;
    bool is_icon_state_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPropertyCount() const;
    void setPropertyCount(const QString &property_count);
    bool is_property_count_Set() const;
    bool is_property_count_Valid() const;

    QList<OAILocalizedText> getSubmittedDisplayNames() const;
    void setSubmittedDisplayNames(const QList<OAILocalizedText> &submitted_display_names);
    bool is_submitted_display_names_Set() const;
    bool is_submitted_display_names_Valid() const;

    QString getSubmittedIcon() const;
    void setSubmittedIcon(const QString &submitted_icon);
    bool is_submitted_icon_Set() const;
    bool is_submitted_icon_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAILocalizedText> m_active_display_names;
    bool m_active_display_names_isSet;
    bool m_active_display_names_isValid;

    QString m_active_icon;
    bool m_active_icon_isSet;
    bool m_active_icon_isValid;

    QString m_active_icon_uri;
    bool m_active_icon_uri_isSet;
    bool m_active_icon_uri_isValid;

    QList<OAIDisplayNameDisapprovalReason> m_display_name_disapproval_reason;
    bool m_display_name_disapproval_reason_isSet;
    bool m_display_name_disapproval_reason_isValid;

    QString m_display_name_state;
    bool m_display_name_state_isSet;
    bool m_display_name_state_isValid;

    QList<OAILocalizedText> m_display_names;
    bool m_display_names_isSet;
    bool m_display_names_isValid;

    QString m_icon;
    bool m_icon_isSet;
    bool m_icon_isValid;

    QList<QString> m_icon_disapproval_reasons;
    bool m_icon_disapproval_reasons_isSet;
    bool m_icon_disapproval_reasons_isValid;

    QString m_icon_state;
    bool m_icon_state_isSet;
    bool m_icon_state_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_property_count;
    bool m_property_count_isSet;
    bool m_property_count_isValid;

    QList<OAILocalizedText> m_submitted_display_names;
    bool m_submitted_display_names_isSet;
    bool m_submitted_display_names_isValid;

    QString m_submitted_icon;
    bool m_submitted_icon_isSet;
    bool m_submitted_icon_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBrand)

#endif // OAIBrand_H
