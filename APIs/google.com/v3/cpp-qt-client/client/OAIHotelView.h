/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHotelView.h
 *
 * A hotel view.
 */

#ifndef OAIHotelView_H
#define OAIHotelView_H

#include <QJsonObject>

#include "OAIDataIssueDetail.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataIssueDetail;

class OAIHotelView : public OAIObject {
public:
    OAIHotelView();
    OAIHotelView(QString json);
    ~OAIHotelView() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDataIssueDetail> getDataIssueDetail() const;
    void setDataIssueDetail(const QList<OAIDataIssueDetail> &data_issue_detail);
    bool is_data_issue_detail_Set() const;
    bool is_data_issue_detail_Valid() const;

    QList<QString> getDataIssues() const;
    void setDataIssues(const QList<QString> &data_issues);
    bool is_data_issues_Set() const;
    bool is_data_issues_Valid() const;

    QString getGoogleClusterId() const;
    void setGoogleClusterId(const QString &google_cluster_id);
    bool is_google_cluster_id_Set() const;
    bool is_google_cluster_id_Valid() const;

    QString getGoogleHotelDisplayName() const;
    void setGoogleHotelDisplayName(const QString &google_hotel_display_name);
    bool is_google_hotel_display_name_Set() const;
    bool is_google_hotel_display_name_Valid() const;

    QString getGoogleHotelId() const;
    void setGoogleHotelId(const QString &google_hotel_id);
    bool is_google_hotel_id_Set() const;
    bool is_google_hotel_id_Valid() const;

    bool isLiveOnGoogle() const;
    void setLiveOnGoogle(const bool &live_on_google);
    bool is_live_on_google_Set() const;
    bool is_live_on_google_Valid() const;

    QString getMatchStatus() const;
    void setMatchStatus(const QString &match_status);
    bool is_match_status_Set() const;
    bool is_match_status_Valid() const;

    QList<QString> getOverclusteredPartnerHotelIds() const;
    void setOverclusteredPartnerHotelIds(const QList<QString> &overclustered_partner_hotel_ids);
    bool is_overclustered_partner_hotel_ids_Set() const;
    bool is_overclustered_partner_hotel_ids_Valid() const;

    QString getPartnerHotelDisplayName() const;
    void setPartnerHotelDisplayName(const QString &partner_hotel_display_name);
    bool is_partner_hotel_display_name_Set() const;
    bool is_partner_hotel_display_name_Valid() const;

    QString getPartnerHotelId() const;
    void setPartnerHotelId(const QString &partner_hotel_id);
    bool is_partner_hotel_id_Set() const;
    bool is_partner_hotel_id_Valid() const;

    QString getPrimaryOverclusteredPartnerHotelId() const;
    void setPrimaryOverclusteredPartnerHotelId(const QString &primary_overclustered_partner_hotel_id);
    bool is_primary_overclustered_partner_hotel_id_Set() const;
    bool is_primary_overclustered_partner_hotel_id_Valid() const;

    QString getPropertyDetails() const;
    void setPropertyDetails(const QString &property_details);
    bool is_property_details_Set() const;
    bool is_property_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDataIssueDetail> m_data_issue_detail;
    bool m_data_issue_detail_isSet;
    bool m_data_issue_detail_isValid;

    QList<QString> m_data_issues;
    bool m_data_issues_isSet;
    bool m_data_issues_isValid;

    QString m_google_cluster_id;
    bool m_google_cluster_id_isSet;
    bool m_google_cluster_id_isValid;

    QString m_google_hotel_display_name;
    bool m_google_hotel_display_name_isSet;
    bool m_google_hotel_display_name_isValid;

    QString m_google_hotel_id;
    bool m_google_hotel_id_isSet;
    bool m_google_hotel_id_isValid;

    bool m_live_on_google;
    bool m_live_on_google_isSet;
    bool m_live_on_google_isValid;

    QString m_match_status;
    bool m_match_status_isSet;
    bool m_match_status_isValid;

    QList<QString> m_overclustered_partner_hotel_ids;
    bool m_overclustered_partner_hotel_ids_isSet;
    bool m_overclustered_partner_hotel_ids_isValid;

    QString m_partner_hotel_display_name;
    bool m_partner_hotel_display_name_isSet;
    bool m_partner_hotel_display_name_isValid;

    QString m_partner_hotel_id;
    bool m_partner_hotel_id_isSet;
    bool m_partner_hotel_id_isValid;

    QString m_primary_overclustered_partner_hotel_id;
    bool m_primary_overclustered_partner_hotel_id_isSet;
    bool m_primary_overclustered_partner_hotel_id_isValid;

    QString m_property_details;
    bool m_property_details_isSet;
    bool m_property_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHotelView)

#endif // OAIHotelView_H
