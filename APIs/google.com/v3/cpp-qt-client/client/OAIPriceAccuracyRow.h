/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPriceAccuracyRow.h
 *
 * A price accuracy row.
 */

#ifndef OAIPriceAccuracyRow_H
#define OAIPriceAccuracyRow_H

#include <QJsonObject>

#include "OAIDate.h"
#include "OAIPriceRecord.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPriceRecord;
class OAIDate;

class OAIPriceAccuracyRow : public OAIObject {
public:
    OAIPriceAccuracyRow();
    OAIPriceAccuracyRow(QString json);
    ~OAIPriceAccuracyRow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAdultOccupancy() const;
    void setAdultOccupancy(const qint32 &adult_occupancy);
    bool is_adult_occupancy_Set() const;
    bool is_adult_occupancy_Valid() const;

    bool isAffectsScore() const;
    void setAffectsScore(const bool &affects_score);
    bool is_affects_score_Set() const;
    bool is_affects_score_Valid() const;

    OAIPriceRecord getCachedPriceRecord() const;
    void setCachedPriceRecord(const OAIPriceRecord &cached_price_record);
    bool is_cached_price_record_Set() const;
    bool is_cached_price_record_Valid() const;

    OAIDate getCheckinDate() const;
    void setCheckinDate(const OAIDate &checkin_date);
    bool is_checkin_date_Set() const;
    bool is_checkin_date_Valid() const;

    qint32 getChildOccupancy() const;
    void setChildOccupancy(const qint32 &child_occupancy);
    bool is_child_occupancy_Set() const;
    bool is_child_occupancy_Valid() const;

    QString getCorrectionTime() const;
    void setCorrectionTime(const QString &correction_time);
    bool is_correction_time_Set() const;
    bool is_correction_time_Valid() const;

    QString getDeviceType() const;
    void setDeviceType(const QString &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    OAIPriceRecord getFetchedPriceRecord() const;
    void setFetchedPriceRecord(const OAIPriceRecord &fetched_price_record);
    bool is_fetched_price_record_Set() const;
    bool is_fetched_price_record_Valid() const;

    QString getFinalDomain() const;
    void setFinalDomain(const QString &final_domain);
    bool is_final_domain_Set() const;
    bool is_final_domain_Valid() const;

    QString getHotel() const;
    void setHotel(const QString &hotel);
    bool is_hotel_Set() const;
    bool is_hotel_Valid() const;

    QString getHotelCountryCode() const;
    void setHotelCountryCode(const QString &hotel_country_code);
    bool is_hotel_country_code_Set() const;
    bool is_hotel_country_code_Valid() const;

    qint32 getLengthOfStayDays() const;
    void setLengthOfStayDays(const qint32 &length_of_stay_days);
    bool is_length_of_stay_days_Set() const;
    bool is_length_of_stay_days_Valid() const;

    QString getMismatchReason() const;
    void setMismatchReason(const QString &mismatch_reason);
    bool is_mismatch_reason_Set() const;
    bool is_mismatch_reason_Valid() const;

    QString getRateRuleId() const;
    void setRateRuleId(const QString &rate_rule_id);
    bool is_rate_rule_id_Set() const;
    bool is_rate_rule_id_Valid() const;

    QString getSignalSource() const;
    void setSignalSource(const QString &signal_source);
    bool is_signal_source_Set() const;
    bool is_signal_source_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getUserRegionCode() const;
    void setUserRegionCode(const QString &user_region_code);
    bool is_user_region_code_Set() const;
    bool is_user_region_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_adult_occupancy;
    bool m_adult_occupancy_isSet;
    bool m_adult_occupancy_isValid;

    bool m_affects_score;
    bool m_affects_score_isSet;
    bool m_affects_score_isValid;

    OAIPriceRecord m_cached_price_record;
    bool m_cached_price_record_isSet;
    bool m_cached_price_record_isValid;

    OAIDate m_checkin_date;
    bool m_checkin_date_isSet;
    bool m_checkin_date_isValid;

    qint32 m_child_occupancy;
    bool m_child_occupancy_isSet;
    bool m_child_occupancy_isValid;

    QString m_correction_time;
    bool m_correction_time_isSet;
    bool m_correction_time_isValid;

    QString m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    OAIPriceRecord m_fetched_price_record;
    bool m_fetched_price_record_isSet;
    bool m_fetched_price_record_isValid;

    QString m_final_domain;
    bool m_final_domain_isSet;
    bool m_final_domain_isValid;

    QString m_hotel;
    bool m_hotel_isSet;
    bool m_hotel_isValid;

    QString m_hotel_country_code;
    bool m_hotel_country_code_isSet;
    bool m_hotel_country_code_isValid;

    qint32 m_length_of_stay_days;
    bool m_length_of_stay_days_isSet;
    bool m_length_of_stay_days_isValid;

    QString m_mismatch_reason;
    bool m_mismatch_reason_isSet;
    bool m_mismatch_reason_isValid;

    QString m_rate_rule_id;
    bool m_rate_rule_id_isSet;
    bool m_rate_rule_id_isValid;

    QString m_signal_source;
    bool m_signal_source_isSet;
    bool m_signal_source_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_user_region_code;
    bool m_user_region_code_isSet;
    bool m_user_region_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPriceAccuracyRow)

#endif // OAIPriceAccuracyRow_H
