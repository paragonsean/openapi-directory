/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINoPriceCountDetails.h
 *
 * The reasons that contributed to the no price count and the total count for each reason.
 */

#ifndef OAINoPriceCountDetails_H
#define OAINoPriceCountDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINoPriceCountDetails : public OAIObject {
public:
    OAINoPriceCountDetails();
    OAINoPriceCountDetails(QString json);
    ~OAINoPriceCountDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLivePricingConfigIssueCount() const;
    void setLivePricingConfigIssueCount(const QString &live_pricing_config_issue_count);
    bool is_live_pricing_config_issue_count_Set() const;
    bool is_live_pricing_config_issue_count_Valid() const;

    QString getLivePricingNotAvailableCount() const;
    void setLivePricingNotAvailableCount(const QString &live_pricing_not_available_count);
    bool is_live_pricing_not_available_count_Set() const;
    bool is_live_pricing_not_available_count_Valid() const;

    QString getLivePricingNotTriggeredCount() const;
    void setLivePricingNotTriggeredCount(const QString &live_pricing_not_triggered_count);
    bool is_live_pricing_not_triggered_count_Set() const;
    bool is_live_pricing_not_triggered_count_Valid() const;

    QString getLivePricingOtherReasonCount() const;
    void setLivePricingOtherReasonCount(const QString &live_pricing_other_reason_count);
    bool is_live_pricing_other_reason_count_Set() const;
    bool is_live_pricing_other_reason_count_Valid() const;

    QString getLivePricingTechnicalIssueCount() const;
    void setLivePricingTechnicalIssueCount(const QString &live_pricing_technical_issue_count);
    bool is_live_pricing_technical_issue_count_Set() const;
    bool is_live_pricing_technical_issue_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_live_pricing_config_issue_count;
    bool m_live_pricing_config_issue_count_isSet;
    bool m_live_pricing_config_issue_count_isValid;

    QString m_live_pricing_not_available_count;
    bool m_live_pricing_not_available_count_isSet;
    bool m_live_pricing_not_available_count_isValid;

    QString m_live_pricing_not_triggered_count;
    bool m_live_pricing_not_triggered_count_isSet;
    bool m_live_pricing_not_triggered_count_isValid;

    QString m_live_pricing_other_reason_count;
    bool m_live_pricing_other_reason_count_isSet;
    bool m_live_pricing_other_reason_count_isValid;

    QString m_live_pricing_technical_issue_count;
    bool m_live_pricing_technical_issue_count_isSet;
    bool m_live_pricing_technical_issue_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINoPriceCountDetails)

#endif // OAINoPriceCountDetails_H
