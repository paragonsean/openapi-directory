/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateReconciliationReportResponse.h
 *
 * Response message for ReconciliationReportService.CreateReconciliationReport.
 */

#ifndef OAICreateReconciliationReportResponse_H
#define OAICreateReconciliationReportResponse_H

#include <QJsonObject>

#include "OAIReconciliationReport.h"
#include "OAIReconciliationReportValidationIssue.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReconciliationReportValidationIssue;
class OAIReconciliationReport;

class OAICreateReconciliationReportResponse : public OAIObject {
public:
    OAICreateReconciliationReportResponse();
    OAICreateReconciliationReportResponse(QString json);
    ~OAICreateReconciliationReportResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIReconciliationReportValidationIssue> getIssues() const;
    void setIssues(const QList<OAIReconciliationReportValidationIssue> &issues);
    bool is_issues_Set() const;
    bool is_issues_Valid() const;

    OAIReconciliationReport getReconciliationReport() const;
    void setReconciliationReport(const OAIReconciliationReport &reconciliation_report);
    bool is_reconciliation_report_Set() const;
    bool is_reconciliation_report_Valid() const;

    qint32 getSuccessfulRecordCount() const;
    void setSuccessfulRecordCount(const qint32 &successful_record_count);
    bool is_successful_record_count_Set() const;
    bool is_successful_record_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIReconciliationReportValidationIssue> m_issues;
    bool m_issues_isSet;
    bool m_issues_isValid;

    OAIReconciliationReport m_reconciliation_report;
    bool m_reconciliation_report_isSet;
    bool m_reconciliation_report_isValid;

    qint32 m_successful_record_count;
    bool m_successful_record_count_isSet;
    bool m_successful_record_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateReconciliationReportResponse)

#endif // OAICreateReconciliationReportResponse_H
