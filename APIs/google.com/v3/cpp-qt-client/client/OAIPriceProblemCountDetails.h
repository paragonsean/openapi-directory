/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPriceProblemCountDetails.h
 *
 * The reasons that contributed to the price problem count and the total count for each reason.
 */

#ifndef OAIPriceProblemCountDetails_H
#define OAIPriceProblemCountDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPriceProblemCountDetails : public OAIObject {
public:
    OAIPriceProblemCountDetails();
    OAIPriceProblemCountDetails(QString json);
    ~OAIPriceProblemCountDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHotelSuspendedCount() const;
    void setHotelSuspendedCount(const QString &hotel_suspended_count);
    bool is_hotel_suspended_count_Set() const;
    bool is_hotel_suspended_count_Valid() const;

    QString getPriceUnusuallyHighCount() const;
    void setPriceUnusuallyHighCount(const QString &price_unusually_high_count);
    bool is_price_unusually_high_count_Set() const;
    bool is_price_unusually_high_count_Valid() const;

    QString getPriceUnusuallyLowCount() const;
    void setPriceUnusuallyLowCount(const QString &price_unusually_low_count);
    bool is_price_unusually_low_count_Set() const;
    bool is_price_unusually_low_count_Valid() const;

    QString getTaxesAndFeesMissingCount() const;
    void setTaxesAndFeesMissingCount(const QString &taxes_and_fees_missing_count);
    bool is_taxes_and_fees_missing_count_Set() const;
    bool is_taxes_and_fees_missing_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_hotel_suspended_count;
    bool m_hotel_suspended_count_isSet;
    bool m_hotel_suspended_count_isValid;

    QString m_price_unusually_high_count;
    bool m_price_unusually_high_count_isSet;
    bool m_price_unusually_high_count_isValid;

    QString m_price_unusually_low_count;
    bool m_price_unusually_low_count_isSet;
    bool m_price_unusually_low_count_isValid;

    QString m_taxes_and_fees_missing_count;
    bool m_taxes_and_fees_missing_count_isSet;
    bool m_taxes_and_fees_missing_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPriceProblemCountDetails)

#endif // OAIPriceProblemCountDetails_H
