# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.price_accuracy_row import PriceAccuracyRow
from openapi_server import util


class PriceAccuracyView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, results: List[PriceAccuracyRow]=None):
        """PriceAccuracyView - a model defined in OpenAPI

        :param name: The name of this PriceAccuracyView.
        :param results: The results of this PriceAccuracyView.
        """
        self.openapi_types = {
            'name': str,
            'results': List[PriceAccuracyRow]
        }

        self.attribute_map = {
            'name': 'name',
            'results': 'results'
        }

        self._name = name
        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PriceAccuracyView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PriceAccuracyView of this PriceAccuracyView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PriceAccuracyView.

        Resource name should be in the format `accounts/{account_id}/priceAccuracyViews/{report_date}`.

        :return: The name of this PriceAccuracyView.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PriceAccuracyView.

        Resource name should be in the format `accounts/{account_id}/priceAccuracyViews/{report_date}`.

        :param name: The name of this PriceAccuracyView.
        :type name: str
        """

        self._name = name

    @property
    def results(self):
        """Gets the results of this PriceAccuracyView.

        The list of rows that match the query.

        :return: The results of this PriceAccuracyView.
        :rtype: List[PriceAccuracyRow]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this PriceAccuracyView.

        The list of rows that match the query.

        :param results: The results of this PriceAccuracyView.
        :type results: List[PriceAccuracyRow]
        """

        self._results = results
