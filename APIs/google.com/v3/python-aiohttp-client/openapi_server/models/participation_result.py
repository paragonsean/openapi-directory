# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key import Key
from openapi_server.models.missed_participation_count_details import MissedParticipationCountDetails
from openapi_server import util


class ParticipationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: Key=None, missed_participation_count: str=None, missed_participation_count_details: MissedParticipationCountDetails=None, opportunity_count: str=None, participation_count: str=None, participation_percent: float=None, partner_hotel_display_name: str=None):
        """ParticipationResult - a model defined in OpenAPI

        :param key: The key of this ParticipationResult.
        :param missed_participation_count: The missed_participation_count of this ParticipationResult.
        :param missed_participation_count_details: The missed_participation_count_details of this ParticipationResult.
        :param opportunity_count: The opportunity_count of this ParticipationResult.
        :param participation_count: The participation_count of this ParticipationResult.
        :param participation_percent: The participation_percent of this ParticipationResult.
        :param partner_hotel_display_name: The partner_hotel_display_name of this ParticipationResult.
        """
        self.openapi_types = {
            'key': Key,
            'missed_participation_count': str,
            'missed_participation_count_details': MissedParticipationCountDetails,
            'opportunity_count': str,
            'participation_count': str,
            'participation_percent': float,
            'partner_hotel_display_name': str
        }

        self.attribute_map = {
            'key': 'key',
            'missed_participation_count': 'missedParticipationCount',
            'missed_participation_count_details': 'missedParticipationCountDetails',
            'opportunity_count': 'opportunityCount',
            'participation_count': 'participationCount',
            'participation_percent': 'participationPercent',
            'partner_hotel_display_name': 'partnerHotelDisplayName'
        }

        self._key = key
        self._missed_participation_count = missed_participation_count
        self._missed_participation_count_details = missed_participation_count_details
        self._opportunity_count = opportunity_count
        self._participation_count = participation_count
        self._participation_percent = participation_percent
        self._partner_hotel_display_name = partner_hotel_display_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParticipationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParticipationResult of this ParticipationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this ParticipationResult.


        :return: The key of this ParticipationResult.
        :rtype: Key
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ParticipationResult.


        :param key: The key of this ParticipationResult.
        :type key: Key
        """

        self._key = key

    @property
    def missed_participation_count(self):
        """Gets the missed_participation_count of this ParticipationResult.

        The total number of opportunities **not** eligible for the Google Ads auction process. Comprised of the following: * Landing page missing * Price missing * Price problem * Price unavailable * Other

        :return: The missed_participation_count of this ParticipationResult.
        :rtype: str
        """
        return self._missed_participation_count

    @missed_participation_count.setter
    def missed_participation_count(self, missed_participation_count):
        """Sets the missed_participation_count of this ParticipationResult.

        The total number of opportunities **not** eligible for the Google Ads auction process. Comprised of the following: * Landing page missing * Price missing * Price problem * Price unavailable * Other

        :param missed_participation_count: The missed_participation_count of this ParticipationResult.
        :type missed_participation_count: str
        """

        self._missed_participation_count = missed_participation_count

    @property
    def missed_participation_count_details(self):
        """Gets the missed_participation_count_details of this ParticipationResult.


        :return: The missed_participation_count_details of this ParticipationResult.
        :rtype: MissedParticipationCountDetails
        """
        return self._missed_participation_count_details

    @missed_participation_count_details.setter
    def missed_participation_count_details(self, missed_participation_count_details):
        """Sets the missed_participation_count_details of this ParticipationResult.


        :param missed_participation_count_details: The missed_participation_count_details of this ParticipationResult.
        :type missed_participation_count_details: MissedParticipationCountDetails
        """

        self._missed_participation_count_details = missed_participation_count_details

    @property
    def opportunity_count(self):
        """Gets the opportunity_count of this ParticipationResult.

        For a specific hotel, the total number of opportunities that were available. Opportunities are the total number of instances when a hotel ad could have been displayed to a user.

        :return: The opportunity_count of this ParticipationResult.
        :rtype: str
        """
        return self._opportunity_count

    @opportunity_count.setter
    def opportunity_count(self, opportunity_count):
        """Sets the opportunity_count of this ParticipationResult.

        For a specific hotel, the total number of opportunities that were available. Opportunities are the total number of instances when a hotel ad could have been displayed to a user.

        :param opportunity_count: The opportunity_count of this ParticipationResult.
        :type opportunity_count: str
        """

        self._opportunity_count = opportunity_count

    @property
    def participation_count(self):
        """Gets the participation_count of this ParticipationResult.

        The total number of opportunities for which you were eligible to enter in the Google Ads auction process.

        :return: The participation_count of this ParticipationResult.
        :rtype: str
        """
        return self._participation_count

    @participation_count.setter
    def participation_count(self, participation_count):
        """Sets the participation_count of this ParticipationResult.

        The total number of opportunities for which you were eligible to enter in the Google Ads auction process.

        :param participation_count: The participation_count of this ParticipationResult.
        :type participation_count: str
        """

        self._participation_count = participation_count

    @property
    def participation_percent(self):
        """Gets the participation_percent of this ParticipationResult.

        The percentage rate of participation where the number of successfully participated opportunities is divided by the total number of opportunities. For example, if a property was eligible to enter the Google Ads auction 90 times out of 100 opportunities, the participation rate is 90%.

        :return: The participation_percent of this ParticipationResult.
        :rtype: float
        """
        return self._participation_percent

    @participation_percent.setter
    def participation_percent(self, participation_percent):
        """Sets the participation_percent of this ParticipationResult.

        The percentage rate of participation where the number of successfully participated opportunities is divided by the total number of opportunities. For example, if a property was eligible to enter the Google Ads auction 90 times out of 100 opportunities, the participation rate is 90%.

        :param participation_percent: The participation_percent of this ParticipationResult.
        :type participation_percent: float
        """

        self._participation_percent = participation_percent

    @property
    def partner_hotel_display_name(self):
        """Gets the partner_hotel_display_name of this ParticipationResult.

        Partner's hotel display name. This field is only populated when the result is aggregated by `partnerHotelId`.

        :return: The partner_hotel_display_name of this ParticipationResult.
        :rtype: str
        """
        return self._partner_hotel_display_name

    @partner_hotel_display_name.setter
    def partner_hotel_display_name(self, partner_hotel_display_name):
        """Sets the partner_hotel_display_name of this ParticipationResult.

        Partner's hotel display name. This field is only populated when the result is aggregated by `partnerHotelId`.

        :param partner_hotel_display_name: The partner_hotel_display_name of this ParticipationResult.
        :type partner_hotel_display_name: str
        """

        self._partner_hotel_display_name = partner_hotel_display_name
