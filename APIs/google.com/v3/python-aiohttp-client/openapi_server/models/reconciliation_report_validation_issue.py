# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReconciliationReportValidationIssue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, field_name: str=None, line_num: int=None):
        """ReconciliationReportValidationIssue - a model defined in OpenAPI

        :param description: The description of this ReconciliationReportValidationIssue.
        :param field_name: The field_name of this ReconciliationReportValidationIssue.
        :param line_num: The line_num of this ReconciliationReportValidationIssue.
        """
        self.openapi_types = {
            'description': str,
            'field_name': str,
            'line_num': int
        }

        self.attribute_map = {
            'description': 'description',
            'field_name': 'fieldName',
            'line_num': 'lineNum'
        }

        self._description = description
        self._field_name = field_name
        self._line_num = line_num

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReconciliationReportValidationIssue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReconciliationReportValidationIssue of this ReconciliationReportValidationIssue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ReconciliationReportValidationIssue.

        Text description of the issue, typically including what was seen and why it was invalid.

        :return: The description of this ReconciliationReportValidationIssue.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ReconciliationReportValidationIssue.

        Text description of the issue, typically including what was seen and why it was invalid.

        :param description: The description of this ReconciliationReportValidationIssue.
        :type description: str
        """

        self._description = description

    @property
    def field_name(self):
        """Gets the field_name of this ReconciliationReportValidationIssue.

        Name of the invalid field. If no field name is given, this issue applies to the whole line (or file).

        :return: The field_name of this ReconciliationReportValidationIssue.
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name):
        """Sets the field_name of this ReconciliationReportValidationIssue.

        Name of the invalid field. If no field name is given, this issue applies to the whole line (or file).

        :param field_name: The field_name of this ReconciliationReportValidationIssue.
        :type field_name: str
        """

        self._field_name = field_name

    @property
    def line_num(self):
        """Gets the line_num of this ReconciliationReportValidationIssue.

        The line number on which the issue was detected. If this field is 0, the issue applies to the whole file.

        :return: The line_num of this ReconciliationReportValidationIssue.
        :rtype: int
        """
        return self._line_num

    @line_num.setter
    def line_num(self, line_num):
        """Sets the line_num of this ReconciliationReportValidationIssue.

        The line number on which the issue was detected. If this field is 0, the issue applies to the whole file.

        :param line_num: The line_num of this ReconciliationReportValidationIssue.
        :type line_num: int
        """

        self._line_num = line_num
