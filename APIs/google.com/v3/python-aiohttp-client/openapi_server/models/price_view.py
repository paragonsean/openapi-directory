# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hotel_price_per_itinerary import HotelPricePerItinerary
from openapi_server import util


class PriceView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, per_itinerary_prices: List[HotelPricePerItinerary]=None):
        """PriceView - a model defined in OpenAPI

        :param name: The name of this PriceView.
        :param per_itinerary_prices: The per_itinerary_prices of this PriceView.
        """
        self.openapi_types = {
            'name': str,
            'per_itinerary_prices': List[HotelPricePerItinerary]
        }

        self.attribute_map = {
            'name': 'name',
            'per_itinerary_prices': 'perItineraryPrices'
        }

        self._name = name
        self._per_itinerary_prices = per_itinerary_prices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PriceView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PriceView of this PriceView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PriceView.

        Resource name in the format `accounts/{account_id}/priceViews/{partner_hotel_id}`.

        :return: The name of this PriceView.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PriceView.

        Resource name in the format `accounts/{account_id}/priceViews/{partner_hotel_id}`.

        :param name: The name of this PriceView.
        :type name: str
        """

        self._name = name

    @property
    def per_itinerary_prices(self):
        """Gets the per_itinerary_prices of this PriceView.

        Price for each itinerary.

        :return: The per_itinerary_prices of this PriceView.
        :rtype: List[HotelPricePerItinerary]
        """
        return self._per_itinerary_prices

    @per_itinerary_prices.setter
    def per_itinerary_prices(self, per_itinerary_prices):
        """Sets the per_itinerary_prices of this PriceView.

        Price for each itinerary.

        :param per_itinerary_prices: The per_itinerary_prices of this PriceView.
        :type per_itinerary_prices: List[HotelPricePerItinerary]
        """

        self._per_itinerary_prices = per_itinerary_prices
