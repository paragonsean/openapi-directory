# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReconciliationReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contents: str=None, file_name: str=None, name: str=None):
        """ReconciliationReport - a model defined in OpenAPI

        :param contents: The contents of this ReconciliationReport.
        :param file_name: The file_name of this ReconciliationReport.
        :param name: The name of this ReconciliationReport.
        """
        self.openapi_types = {
            'contents': str,
            'file_name': str,
            'name': str
        }

        self.attribute_map = {
            'contents': 'contents',
            'file_name': 'fileName',
            'name': 'name'
        }

        self._contents = contents
        self._file_name = file_name
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReconciliationReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReconciliationReport of this ReconciliationReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contents(self):
        """Gets the contents of this ReconciliationReport.

        Required. The contents of the commission report. Report contents must conform to the requirements specified in [Reconciliation reports] (//support.google.com/hotelprices/answer/7019060#creating).

        :return: The contents of this ReconciliationReport.
        :rtype: str
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this ReconciliationReport.

        Required. The contents of the commission report. Report contents must conform to the requirements specified in [Reconciliation reports] (//support.google.com/hotelprices/answer/7019060#creating).

        :param contents: The contents of this ReconciliationReport.
        :type contents: str
        """

        self._contents = contents

    @property
    def file_name(self):
        """Gets the file_name of this ReconciliationReport.

        Required. Desired filename of the reconciliation report.

        :return: The file_name of this ReconciliationReport.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this ReconciliationReport.

        Required. Desired filename of the reconciliation report.

        :param file_name: The file_name of this ReconciliationReport.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def name(self):
        """Gets the name of this ReconciliationReport.

        Resource name in the format `accounts/{account_id}/reconciliationReports/{datetime}~{filename}`. The value for `{datetime}` must be from 0001-01-01T00:00:00 to 9999-12-31T23:59:59 inclusive.

        :return: The name of this ReconciliationReport.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReconciliationReport.

        Resource name in the format `accounts/{account_id}/reconciliationReports/{datetime}~{filename}`. The value for `{datetime}` must be from 0001-01-01T00:00:00 to 9999-12-31T23:59:59 inclusive.

        :param name: The name of this ReconciliationReport.
        :type name: str
        """

        self._name = name
