# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server import util


class FreeBookingLinksResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, click_count: str=None, _date: ModelDate=None, device_type: str=None, partner_hotel_display_name: str=None, partner_hotel_id: str=None, user_region_code: str=None):
        """FreeBookingLinksResult - a model defined in OpenAPI

        :param click_count: The click_count of this FreeBookingLinksResult.
        :param _date: The _date of this FreeBookingLinksResult.
        :param device_type: The device_type of this FreeBookingLinksResult.
        :param partner_hotel_display_name: The partner_hotel_display_name of this FreeBookingLinksResult.
        :param partner_hotel_id: The partner_hotel_id of this FreeBookingLinksResult.
        :param user_region_code: The user_region_code of this FreeBookingLinksResult.
        """
        self.openapi_types = {
            'click_count': str,
            '_date': ModelDate,
            'device_type': str,
            'partner_hotel_display_name': str,
            'partner_hotel_id': str,
            'user_region_code': str
        }

        self.attribute_map = {
            'click_count': 'clickCount',
            '_date': 'date',
            'device_type': 'deviceType',
            'partner_hotel_display_name': 'partnerHotelDisplayName',
            'partner_hotel_id': 'partnerHotelId',
            'user_region_code': 'userRegionCode'
        }

        self._click_count = click_count
        self.__date = _date
        self._device_type = device_type
        self._partner_hotel_display_name = partner_hotel_display_name
        self._partner_hotel_id = partner_hotel_id
        self._user_region_code = user_region_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FreeBookingLinksResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FreeBookingLinksResult of this FreeBookingLinksResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def click_count(self):
        """Gets the click_count of this FreeBookingLinksResult.

        The total number of clicks that were recorded for this result.

        :return: The click_count of this FreeBookingLinksResult.
        :rtype: str
        """
        return self._click_count

    @click_count.setter
    def click_count(self, click_count):
        """Sets the click_count of this FreeBookingLinksResult.

        The total number of clicks that were recorded for this result.

        :param click_count: The click_count of this FreeBookingLinksResult.
        :type click_count: str
        """

        self._click_count = click_count

    @property
    def _date(self):
        """Gets the _date of this FreeBookingLinksResult.


        :return: The _date of this FreeBookingLinksResult.
        :rtype: ModelDate
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this FreeBookingLinksResult.


        :param _date: The _date of this FreeBookingLinksResult.
        :type _date: ModelDate
        """

        self.__date = _date

    @property
    def device_type(self):
        """Gets the device_type of this FreeBookingLinksResult.

        The user’s device type. Only present if `deviceType` is specified in `aggregateBy` in the request.

        :return: The device_type of this FreeBookingLinksResult.
        :rtype: str
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this FreeBookingLinksResult.

        The user’s device type. Only present if `deviceType` is specified in `aggregateBy` in the request.

        :param device_type: The device_type of this FreeBookingLinksResult.
        :type device_type: str
        """
        allowed_values = ["DEVICE_UNSPECIFIED", "DEVICE_UNKNOWN", "DESKTOP", "MOBILE", "TABLET"]  # noqa: E501
        if device_type not in allowed_values:
            raise ValueError(
                "Invalid value for `device_type` ({0}), must be one of {1}"
                .format(device_type, allowed_values)
            )

        self._device_type = device_type

    @property
    def partner_hotel_display_name(self):
        """Gets the partner_hotel_display_name of this FreeBookingLinksResult.

        Partner's hotel name. Only present if `partnerHotelDisplayName` is specified in `aggregateBy` in the request.

        :return: The partner_hotel_display_name of this FreeBookingLinksResult.
        :rtype: str
        """
        return self._partner_hotel_display_name

    @partner_hotel_display_name.setter
    def partner_hotel_display_name(self, partner_hotel_display_name):
        """Sets the partner_hotel_display_name of this FreeBookingLinksResult.

        Partner's hotel name. Only present if `partnerHotelDisplayName` is specified in `aggregateBy` in the request.

        :param partner_hotel_display_name: The partner_hotel_display_name of this FreeBookingLinksResult.
        :type partner_hotel_display_name: str
        """

        self._partner_hotel_display_name = partner_hotel_display_name

    @property
    def partner_hotel_id(self):
        """Gets the partner_hotel_id of this FreeBookingLinksResult.

        Partner's hotel ID. Only present if `partnerHotelId` is specified in `aggregateBy` in the request.

        :return: The partner_hotel_id of this FreeBookingLinksResult.
        :rtype: str
        """
        return self._partner_hotel_id

    @partner_hotel_id.setter
    def partner_hotel_id(self, partner_hotel_id):
        """Sets the partner_hotel_id of this FreeBookingLinksResult.

        Partner's hotel ID. Only present if `partnerHotelId` is specified in `aggregateBy` in the request.

        :param partner_hotel_id: The partner_hotel_id of this FreeBookingLinksResult.
        :type partner_hotel_id: str
        """

        self._partner_hotel_id = partner_hotel_id

    @property
    def user_region_code(self):
        """Gets the user_region_code of this FreeBookingLinksResult.

        ISO 3116 region code of the country/region of the user. Only present if `userRegionCode` is specified in `aggregateBy` in the request

        :return: The user_region_code of this FreeBookingLinksResult.
        :rtype: str
        """
        return self._user_region_code

    @user_region_code.setter
    def user_region_code(self, user_region_code):
        """Sets the user_region_code of this FreeBookingLinksResult.

        ISO 3116 region code of the country/region of the user. Only present if `userRegionCode` is specified in `aggregateBy` in the request

        :param user_region_code: The user_region_code of this FreeBookingLinksResult.
        :type user_region_code: str
        """

        self._user_region_code = user_region_code
