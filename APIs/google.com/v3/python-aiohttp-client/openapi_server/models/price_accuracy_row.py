# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server.models.price_record import PriceRecord
from openapi_server import util


class PriceAccuracyRow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adult_occupancy: int=None, affects_score: bool=None, cached_price_record: PriceRecord=None, checkin_date: ModelDate=None, child_occupancy: int=None, correction_time: str=None, device_type: str=None, fetched_price_record: PriceRecord=None, final_domain: str=None, hotel: str=None, hotel_country_code: str=None, length_of_stay_days: int=None, mismatch_reason: str=None, rate_rule_id: str=None, signal_source: str=None, url: str=None, user_region_code: str=None):
        """PriceAccuracyRow - a model defined in OpenAPI

        :param adult_occupancy: The adult_occupancy of this PriceAccuracyRow.
        :param affects_score: The affects_score of this PriceAccuracyRow.
        :param cached_price_record: The cached_price_record of this PriceAccuracyRow.
        :param checkin_date: The checkin_date of this PriceAccuracyRow.
        :param child_occupancy: The child_occupancy of this PriceAccuracyRow.
        :param correction_time: The correction_time of this PriceAccuracyRow.
        :param device_type: The device_type of this PriceAccuracyRow.
        :param fetched_price_record: The fetched_price_record of this PriceAccuracyRow.
        :param final_domain: The final_domain of this PriceAccuracyRow.
        :param hotel: The hotel of this PriceAccuracyRow.
        :param hotel_country_code: The hotel_country_code of this PriceAccuracyRow.
        :param length_of_stay_days: The length_of_stay_days of this PriceAccuracyRow.
        :param mismatch_reason: The mismatch_reason of this PriceAccuracyRow.
        :param rate_rule_id: The rate_rule_id of this PriceAccuracyRow.
        :param signal_source: The signal_source of this PriceAccuracyRow.
        :param url: The url of this PriceAccuracyRow.
        :param user_region_code: The user_region_code of this PriceAccuracyRow.
        """
        self.openapi_types = {
            'adult_occupancy': int,
            'affects_score': bool,
            'cached_price_record': PriceRecord,
            'checkin_date': ModelDate,
            'child_occupancy': int,
            'correction_time': str,
            'device_type': str,
            'fetched_price_record': PriceRecord,
            'final_domain': str,
            'hotel': str,
            'hotel_country_code': str,
            'length_of_stay_days': int,
            'mismatch_reason': str,
            'rate_rule_id': str,
            'signal_source': str,
            'url': str,
            'user_region_code': str
        }

        self.attribute_map = {
            'adult_occupancy': 'adultOccupancy',
            'affects_score': 'affectsScore',
            'cached_price_record': 'cachedPriceRecord',
            'checkin_date': 'checkinDate',
            'child_occupancy': 'childOccupancy',
            'correction_time': 'correctionTime',
            'device_type': 'deviceType',
            'fetched_price_record': 'fetchedPriceRecord',
            'final_domain': 'finalDomain',
            'hotel': 'hotel',
            'hotel_country_code': 'hotelCountryCode',
            'length_of_stay_days': 'lengthOfStayDays',
            'mismatch_reason': 'mismatchReason',
            'rate_rule_id': 'rateRuleId',
            'signal_source': 'signalSource',
            'url': 'url',
            'user_region_code': 'userRegionCode'
        }

        self._adult_occupancy = adult_occupancy
        self._affects_score = affects_score
        self._cached_price_record = cached_price_record
        self._checkin_date = checkin_date
        self._child_occupancy = child_occupancy
        self._correction_time = correction_time
        self._device_type = device_type
        self._fetched_price_record = fetched_price_record
        self._final_domain = final_domain
        self._hotel = hotel
        self._hotel_country_code = hotel_country_code
        self._length_of_stay_days = length_of_stay_days
        self._mismatch_reason = mismatch_reason
        self._rate_rule_id = rate_rule_id
        self._signal_source = signal_source
        self._url = url
        self._user_region_code = user_region_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PriceAccuracyRow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PriceAccuracyRow of this PriceAccuracyRow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adult_occupancy(self):
        """Gets the adult_occupancy of this PriceAccuracyRow.

        The number of adults in the occupancy details of the validation query.

        :return: The adult_occupancy of this PriceAccuracyRow.
        :rtype: int
        """
        return self._adult_occupancy

    @adult_occupancy.setter
    def adult_occupancy(self, adult_occupancy):
        """Sets the adult_occupancy of this PriceAccuracyRow.

        The number of adults in the occupancy details of the validation query.

        :param adult_occupancy: The adult_occupancy of this PriceAccuracyRow.
        :type adult_occupancy: int
        """

        self._adult_occupancy = adult_occupancy

    @property
    def affects_score(self):
        """Gets the affects_score of this PriceAccuracyRow.

        True if this row affects the placement of a price. This field has been renamed to “Affects placement” in Hotel Center.

        :return: The affects_score of this PriceAccuracyRow.
        :rtype: bool
        """
        return self._affects_score

    @affects_score.setter
    def affects_score(self, affects_score):
        """Sets the affects_score of this PriceAccuracyRow.

        True if this row affects the placement of a price. This field has been renamed to “Affects placement” in Hotel Center.

        :param affects_score: The affects_score of this PriceAccuracyRow.
        :type affects_score: bool
        """

        self._affects_score = affects_score

    @property
    def cached_price_record(self):
        """Gets the cached_price_record of this PriceAccuracyRow.


        :return: The cached_price_record of this PriceAccuracyRow.
        :rtype: PriceRecord
        """
        return self._cached_price_record

    @cached_price_record.setter
    def cached_price_record(self, cached_price_record):
        """Sets the cached_price_record of this PriceAccuracyRow.


        :param cached_price_record: The cached_price_record of this PriceAccuracyRow.
        :type cached_price_record: PriceRecord
        """

        self._cached_price_record = cached_price_record

    @property
    def checkin_date(self):
        """Gets the checkin_date of this PriceAccuracyRow.


        :return: The checkin_date of this PriceAccuracyRow.
        :rtype: ModelDate
        """
        return self._checkin_date

    @checkin_date.setter
    def checkin_date(self, checkin_date):
        """Sets the checkin_date of this PriceAccuracyRow.


        :param checkin_date: The checkin_date of this PriceAccuracyRow.
        :type checkin_date: ModelDate
        """

        self._checkin_date = checkin_date

    @property
    def child_occupancy(self):
        """Gets the child_occupancy of this PriceAccuracyRow.

        The number of children in the occupancy details of the validation query.

        :return: The child_occupancy of this PriceAccuracyRow.
        :rtype: int
        """
        return self._child_occupancy

    @child_occupancy.setter
    def child_occupancy(self, child_occupancy):
        """Sets the child_occupancy of this PriceAccuracyRow.

        The number of children in the occupancy details of the validation query.

        :param child_occupancy: The child_occupancy of this PriceAccuracyRow.
        :type child_occupancy: int
        """

        self._child_occupancy = child_occupancy

    @property
    def correction_time(self):
        """Gets the correction_time of this PriceAccuracyRow.

        Time at which an incorrect price is updated to a correct price.

        :return: The correction_time of this PriceAccuracyRow.
        :rtype: str
        """
        return self._correction_time

    @correction_time.setter
    def correction_time(self, correction_time):
        """Sets the correction_time of this PriceAccuracyRow.

        Time at which an incorrect price is updated to a correct price.

        :param correction_time: The correction_time of this PriceAccuracyRow.
        :type correction_time: str
        """

        self._correction_time = correction_time

    @property
    def device_type(self):
        """Gets the device_type of this PriceAccuracyRow.

        The user's device type.

        :return: The device_type of this PriceAccuracyRow.
        :rtype: str
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this PriceAccuracyRow.

        The user's device type.

        :param device_type: The device_type of this PriceAccuracyRow.
        :type device_type: str
        """
        allowed_values = ["DEVICE_UNSPECIFIED", "DEVICE_UNKNOWN", "DESKTOP", "MOBILE", "TABLET"]  # noqa: E501
        if device_type not in allowed_values:
            raise ValueError(
                "Invalid value for `device_type` ({0}), must be one of {1}"
                .format(device_type, allowed_values)
            )

        self._device_type = device_type

    @property
    def fetched_price_record(self):
        """Gets the fetched_price_record of this PriceAccuracyRow.


        :return: The fetched_price_record of this PriceAccuracyRow.
        :rtype: PriceRecord
        """
        return self._fetched_price_record

    @fetched_price_record.setter
    def fetched_price_record(self, fetched_price_record):
        """Sets the fetched_price_record of this PriceAccuracyRow.


        :param fetched_price_record: The fetched_price_record of this PriceAccuracyRow.
        :type fetched_price_record: PriceRecord
        """

        self._fetched_price_record = fetched_price_record

    @property
    def final_domain(self):
        """Gets the final_domain of this PriceAccuracyRow.

        The domain of the final page from which prices are read.

        :return: The final_domain of this PriceAccuracyRow.
        :rtype: str
        """
        return self._final_domain

    @final_domain.setter
    def final_domain(self, final_domain):
        """Sets the final_domain of this PriceAccuracyRow.

        The domain of the final page from which prices are read.

        :param final_domain: The final_domain of this PriceAccuracyRow.
        :type final_domain: str
        """

        self._final_domain = final_domain

    @property
    def hotel(self):
        """Gets the hotel of this PriceAccuracyRow.

        Partner-defined hotel ID.

        :return: The hotel of this PriceAccuracyRow.
        :rtype: str
        """
        return self._hotel

    @hotel.setter
    def hotel(self, hotel):
        """Sets the hotel of this PriceAccuracyRow.

        Partner-defined hotel ID.

        :param hotel: The hotel of this PriceAccuracyRow.
        :type hotel: str
        """

        self._hotel = hotel

    @property
    def hotel_country_code(self):
        """Gets the hotel_country_code of this PriceAccuracyRow.

        The country of the hotel (based on address).

        :return: The hotel_country_code of this PriceAccuracyRow.
        :rtype: str
        """
        return self._hotel_country_code

    @hotel_country_code.setter
    def hotel_country_code(self, hotel_country_code):
        """Sets the hotel_country_code of this PriceAccuracyRow.

        The country of the hotel (based on address).

        :param hotel_country_code: The hotel_country_code of this PriceAccuracyRow.
        :type hotel_country_code: str
        """

        self._hotel_country_code = hotel_country_code

    @property
    def length_of_stay_days(self):
        """Gets the length_of_stay_days of this PriceAccuracyRow.

        Length of stay.

        :return: The length_of_stay_days of this PriceAccuracyRow.
        :rtype: int
        """
        return self._length_of_stay_days

    @length_of_stay_days.setter
    def length_of_stay_days(self, length_of_stay_days):
        """Sets the length_of_stay_days of this PriceAccuracyRow.

        Length of stay.

        :param length_of_stay_days: The length_of_stay_days of this PriceAccuracyRow.
        :type length_of_stay_days: int
        """

        self._length_of_stay_days = length_of_stay_days

    @property
    def mismatch_reason(self):
        """Gets the mismatch_reason of this PriceAccuracyRow.

        The reason why the fetched price didn't match the cached price.

        :return: The mismatch_reason of this PriceAccuracyRow.
        :rtype: str
        """
        return self._mismatch_reason

    @mismatch_reason.setter
    def mismatch_reason(self, mismatch_reason):
        """Sets the mismatch_reason of this PriceAccuracyRow.

        The reason why the fetched price didn't match the cached price.

        :param mismatch_reason: The mismatch_reason of this PriceAccuracyRow.
        :type mismatch_reason: str
        """
        allowed_values = ["MISMATCH_REASON_UNSPECIFIED", "MISMATCH_REASON_UNKNOWN", "TAX_MISMATCH", "ROOM_UNAVAILABLE", "SITE_ERROR", "PRICE_FEED_DELAYED", "DISCOUNT_MISSING", "INCORRECT_DISCOUNT_VALUE", "WRONG_ITINERARY"]  # noqa: E501
        if mismatch_reason not in allowed_values:
            raise ValueError(
                "Invalid value for `mismatch_reason` ({0}), must be one of {1}"
                .format(mismatch_reason, allowed_values)
            )

        self._mismatch_reason = mismatch_reason

    @property
    def rate_rule_id(self):
        """Gets the rate_rule_id of this PriceAccuracyRow.

        The rate rule of the advertised price for non-public rates.

        :return: The rate_rule_id of this PriceAccuracyRow.
        :rtype: str
        """
        return self._rate_rule_id

    @rate_rule_id.setter
    def rate_rule_id(self, rate_rule_id):
        """Sets the rate_rule_id of this PriceAccuracyRow.

        The rate rule of the advertised price for non-public rates.

        :param rate_rule_id: The rate_rule_id of this PriceAccuracyRow.
        :type rate_rule_id: str
        """

        self._rate_rule_id = rate_rule_id

    @property
    def signal_source(self):
        """Gets the signal_source of this PriceAccuracyRow.

        Source of the price accuracy signal.

        :return: The signal_source of this PriceAccuracyRow.
        :rtype: str
        """
        return self._signal_source

    @signal_source.setter
    def signal_source(self, signal_source):
        """Sets the signal_source of this PriceAccuracyRow.

        Source of the price accuracy signal.

        :param signal_source: The signal_source of this PriceAccuracyRow.
        :type signal_source: str
        """
        allowed_values = ["SIGNAL_SOURCE_UNSPECIFIED", "SIGNAL_SOURCE_UNKNOWN", "FETCHED", "PIXEL"]  # noqa: E501
        if signal_source not in allowed_values:
            raise ValueError(
                "Invalid value for `signal_source` ({0}), must be one of {1}"
                .format(signal_source, allowed_values)
            )

        self._signal_source = signal_source

    @property
    def url(self):
        """Gets the url of this PriceAccuracyRow.

        Initial URL visited on the partner website.

        :return: The url of this PriceAccuracyRow.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PriceAccuracyRow.

        Initial URL visited on the partner website.

        :param url: The url of this PriceAccuracyRow.
        :type url: str
        """

        self._url = url

    @property
    def user_region_code(self):
        """Gets the user_region_code of this PriceAccuracyRow.

        The user's region.

        :return: The user_region_code of this PriceAccuracyRow.
        :rtype: str
        """
        return self._user_region_code

    @user_region_code.setter
    def user_region_code(self, user_region_code):
        """Sets the user_region_code of this PriceAccuracyRow.

        The user's region.

        :param user_region_code: The user_region_code of this PriceAccuracyRow.
        :type user_region_code: str
        """

        self._user_region_code = user_region_code
