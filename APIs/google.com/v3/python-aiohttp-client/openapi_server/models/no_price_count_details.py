# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NoPriceCountDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, live_pricing_config_issue_count: str=None, live_pricing_not_available_count: str=None, live_pricing_not_triggered_count: str=None, live_pricing_other_reason_count: str=None, live_pricing_technical_issue_count: str=None):
        """NoPriceCountDetails - a model defined in OpenAPI

        :param live_pricing_config_issue_count: The live_pricing_config_issue_count of this NoPriceCountDetails.
        :param live_pricing_not_available_count: The live_pricing_not_available_count of this NoPriceCountDetails.
        :param live_pricing_not_triggered_count: The live_pricing_not_triggered_count of this NoPriceCountDetails.
        :param live_pricing_other_reason_count: The live_pricing_other_reason_count of this NoPriceCountDetails.
        :param live_pricing_technical_issue_count: The live_pricing_technical_issue_count of this NoPriceCountDetails.
        """
        self.openapi_types = {
            'live_pricing_config_issue_count': str,
            'live_pricing_not_available_count': str,
            'live_pricing_not_triggered_count': str,
            'live_pricing_other_reason_count': str,
            'live_pricing_technical_issue_count': str
        }

        self.attribute_map = {
            'live_pricing_config_issue_count': 'livePricingConfigIssueCount',
            'live_pricing_not_available_count': 'livePricingNotAvailableCount',
            'live_pricing_not_triggered_count': 'livePricingNotTriggeredCount',
            'live_pricing_other_reason_count': 'livePricingOtherReasonCount',
            'live_pricing_technical_issue_count': 'livePricingTechnicalIssueCount'
        }

        self._live_pricing_config_issue_count = live_pricing_config_issue_count
        self._live_pricing_not_available_count = live_pricing_not_available_count
        self._live_pricing_not_triggered_count = live_pricing_not_triggered_count
        self._live_pricing_other_reason_count = live_pricing_other_reason_count
        self._live_pricing_technical_issue_count = live_pricing_technical_issue_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NoPriceCountDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NoPriceCountDetails of this NoPriceCountDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def live_pricing_config_issue_count(self):
        """Gets the live_pricing_config_issue_count of this NoPriceCountDetails.

        The total number of missed participation due to live pricing not being triggered for any of the following reasons: * You didn't have live pricing configured for these searches. * You restricted Google from accessing the hotel itinerary in question.

        :return: The live_pricing_config_issue_count of this NoPriceCountDetails.
        :rtype: str
        """
        return self._live_pricing_config_issue_count

    @live_pricing_config_issue_count.setter
    def live_pricing_config_issue_count(self, live_pricing_config_issue_count):
        """Sets the live_pricing_config_issue_count of this NoPriceCountDetails.

        The total number of missed participation due to live pricing not being triggered for any of the following reasons: * You didn't have live pricing configured for these searches. * You restricted Google from accessing the hotel itinerary in question.

        :param live_pricing_config_issue_count: The live_pricing_config_issue_count of this NoPriceCountDetails.
        :type live_pricing_config_issue_count: str
        """

        self._live_pricing_config_issue_count = live_pricing_config_issue_count

    @property
    def live_pricing_not_available_count(self):
        """Gets the live_pricing_not_available_count of this NoPriceCountDetails.

        The total number of missed participation due to live pricing being unavailable. Live pricing will not be triggered for certain default itineraries or UIs. In this scenario, partners will need a cached price to participate.

        :return: The live_pricing_not_available_count of this NoPriceCountDetails.
        :rtype: str
        """
        return self._live_pricing_not_available_count

    @live_pricing_not_available_count.setter
    def live_pricing_not_available_count(self, live_pricing_not_available_count):
        """Sets the live_pricing_not_available_count of this NoPriceCountDetails.

        The total number of missed participation due to live pricing being unavailable. Live pricing will not be triggered for certain default itineraries or UIs. In this scenario, partners will need a cached price to participate.

        :param live_pricing_not_available_count: The live_pricing_not_available_count of this NoPriceCountDetails.
        :type live_pricing_not_available_count: str
        """

        self._live_pricing_not_available_count = live_pricing_not_available_count

    @property
    def live_pricing_not_triggered_count(self):
        """Gets the live_pricing_not_triggered_count of this NoPriceCountDetails.

        The total number of missed participation due to live pricing not being triggered for any of the following reasons: * You didn't set a bid. * You didn't have a valid landing page. * There weren't enough prices in the cache.

        :return: The live_pricing_not_triggered_count of this NoPriceCountDetails.
        :rtype: str
        """
        return self._live_pricing_not_triggered_count

    @live_pricing_not_triggered_count.setter
    def live_pricing_not_triggered_count(self, live_pricing_not_triggered_count):
        """Sets the live_pricing_not_triggered_count of this NoPriceCountDetails.

        The total number of missed participation due to live pricing not being triggered for any of the following reasons: * You didn't set a bid. * You didn't have a valid landing page. * There weren't enough prices in the cache.

        :param live_pricing_not_triggered_count: The live_pricing_not_triggered_count of this NoPriceCountDetails.
        :type live_pricing_not_triggered_count: str
        """

        self._live_pricing_not_triggered_count = live_pricing_not_triggered_count

    @property
    def live_pricing_other_reason_count(self):
        """Gets the live_pricing_other_reason_count of this NoPriceCountDetails.

        The number of missed participations due to other issues with live pricing.

        :return: The live_pricing_other_reason_count of this NoPriceCountDetails.
        :rtype: str
        """
        return self._live_pricing_other_reason_count

    @live_pricing_other_reason_count.setter
    def live_pricing_other_reason_count(self, live_pricing_other_reason_count):
        """Sets the live_pricing_other_reason_count of this NoPriceCountDetails.

        The number of missed participations due to other issues with live pricing.

        :param live_pricing_other_reason_count: The live_pricing_other_reason_count of this NoPriceCountDetails.
        :type live_pricing_other_reason_count: str
        """

        self._live_pricing_other_reason_count = live_pricing_other_reason_count

    @property
    def live_pricing_technical_issue_count(self):
        """Gets the live_pricing_technical_issue_count of this NoPriceCountDetails.

        The total number of missed participation due to technical issues with live pricing for any of the following reasons: * You didn’t respond quickly enough and exceeded the response deadline (around 4000 milliseconds). * You returned an error. * Your response was malformed.

        :return: The live_pricing_technical_issue_count of this NoPriceCountDetails.
        :rtype: str
        """
        return self._live_pricing_technical_issue_count

    @live_pricing_technical_issue_count.setter
    def live_pricing_technical_issue_count(self, live_pricing_technical_issue_count):
        """Sets the live_pricing_technical_issue_count of this NoPriceCountDetails.

        The total number of missed participation due to technical issues with live pricing for any of the following reasons: * You didn’t respond quickly enough and exceeded the response deadline (around 4000 milliseconds). * You returned an error. * Your response was malformed.

        :param live_pricing_technical_issue_count: The live_pricing_technical_issue_count of this NoPriceCountDetails.
        :type live_pricing_technical_issue_count: str
        """

        self._live_pricing_technical_issue_count = live_pricing_technical_issue_count
