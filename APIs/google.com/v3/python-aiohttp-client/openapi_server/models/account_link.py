# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_link_target import AccountLinkTarget
from openapi_server import util


class AccountLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_link_target: AccountLinkTarget=None, google_ads_customer_name: str=None, name: str=None, status: str=None):
        """AccountLink - a model defined in OpenAPI

        :param account_link_target: The account_link_target of this AccountLink.
        :param google_ads_customer_name: The google_ads_customer_name of this AccountLink.
        :param name: The name of this AccountLink.
        :param status: The status of this AccountLink.
        """
        self.openapi_types = {
            'account_link_target': AccountLinkTarget,
            'google_ads_customer_name': str,
            'name': str,
            'status': str
        }

        self.attribute_map = {
            'account_link_target': 'accountLinkTarget',
            'google_ads_customer_name': 'googleAdsCustomerName',
            'name': 'name',
            'status': 'status'
        }

        self._account_link_target = account_link_target
        self._google_ads_customer_name = google_ads_customer_name
        self._name = name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountLink of this AccountLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_link_target(self):
        """Gets the account_link_target of this AccountLink.


        :return: The account_link_target of this AccountLink.
        :rtype: AccountLinkTarget
        """
        return self._account_link_target

    @account_link_target.setter
    def account_link_target(self, account_link_target):
        """Sets the account_link_target of this AccountLink.


        :param account_link_target: The account_link_target of this AccountLink.
        :type account_link_target: AccountLinkTarget
        """

        self._account_link_target = account_link_target

    @property
    def google_ads_customer_name(self):
        """Gets the google_ads_customer_name of this AccountLink.

        Required for CREATE requests. The value representing the Google Ads customer ID in the format `customers/{google_ads_customer_id}`. For example: `customers/0123456789`. Note that the `googleAdsCustomerName` field is not returned in responses to GET requests.

        :return: The google_ads_customer_name of this AccountLink.
        :rtype: str
        """
        return self._google_ads_customer_name

    @google_ads_customer_name.setter
    def google_ads_customer_name(self, google_ads_customer_name):
        """Sets the google_ads_customer_name of this AccountLink.

        Required for CREATE requests. The value representing the Google Ads customer ID in the format `customers/{google_ads_customer_id}`. For example: `customers/0123456789`. Note that the `googleAdsCustomerName` field is not returned in responses to GET requests.

        :param google_ads_customer_name: The google_ads_customer_name of this AccountLink.
        :type google_ads_customer_name: str
        """

        self._google_ads_customer_name = google_ads_customer_name

    @property
    def name(self):
        """Gets the name of this AccountLink.

        The resource name for the account link in the format `accounts/{account_id}/accountLinks/{account_link_id}`.

        :return: The name of this AccountLink.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AccountLink.

        The resource name for the account link in the format `accounts/{account_id}/accountLinks/{account_link_id}`.

        :param name: The name of this AccountLink.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this AccountLink.

        The current status of the account link.

        :return: The status of this AccountLink.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AccountLink.

        The current status of the account link.

        :param status: The status of this AccountLink.
        :type status: str
        """
        allowed_values = ["ACCOUNT_LINK_STATUS_UNSPECIFIED", "ACCOUNT_LINK_STATUS_UNKNOWN", "REQUESTED_FROM_HOTEL_CENTER", "REQUESTED_FROM_GOOGLE_ADS", "APPROVED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
