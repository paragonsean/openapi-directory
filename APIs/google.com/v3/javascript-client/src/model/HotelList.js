/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HotelList model module.
 * @module model/HotelList
 * @version v3
 */
class HotelList {
    /**
     * Constructs a new <code>HotelList</code>.
     * The properties in the Hotel Center account that can be managed with the Google Ads account.
     * @alias module:model/HotelList
     */
    constructor() { 
        
        HotelList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HotelList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HotelList} obj Optional instance to populate.
     * @return {module:model/HotelList} The populated <code>HotelList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HotelList();

            if (data.hasOwnProperty('partnerHotelIds')) {
                obj['partnerHotelIds'] = ApiClient.convertToType(data['partnerHotelIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HotelList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HotelList</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['partnerHotelIds'])) {
            throw new Error("Expected the field `partnerHotelIds` to be an array in the JSON data but got " + data['partnerHotelIds']);
        }

        return true;
    }


}



/**
 * Hotel IDs.
 * @member {Array.<String>} partnerHotelIds
 */
HotelList.prototype['partnerHotelIds'] = undefined;






export default HotelList;

