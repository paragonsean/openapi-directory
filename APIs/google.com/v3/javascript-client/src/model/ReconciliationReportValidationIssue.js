/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReconciliationReportValidationIssue model module.
 * @module model/ReconciliationReportValidationIssue
 * @version v3
 */
class ReconciliationReportValidationIssue {
    /**
     * Constructs a new <code>ReconciliationReportValidationIssue</code>.
     * Represents an issue encountered when validating a reconciliation report.
     * @alias module:model/ReconciliationReportValidationIssue
     */
    constructor() { 
        
        ReconciliationReportValidationIssue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReconciliationReportValidationIssue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReconciliationReportValidationIssue} obj Optional instance to populate.
     * @return {module:model/ReconciliationReportValidationIssue} The populated <code>ReconciliationReportValidationIssue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReconciliationReportValidationIssue();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('fieldName')) {
                obj['fieldName'] = ApiClient.convertToType(data['fieldName'], 'String');
            }
            if (data.hasOwnProperty('lineNum')) {
                obj['lineNum'] = ApiClient.convertToType(data['lineNum'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReconciliationReportValidationIssue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReconciliationReportValidationIssue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['fieldName'] && !(typeof data['fieldName'] === 'string' || data['fieldName'] instanceof String)) {
            throw new Error("Expected the field `fieldName` to be a primitive type in the JSON string but got " + data['fieldName']);
        }

        return true;
    }


}



/**
 * Text description of the issue, typically including what was seen and why it was invalid.
 * @member {String} description
 */
ReconciliationReportValidationIssue.prototype['description'] = undefined;

/**
 * Name of the invalid field. If no field name is given, this issue applies to the whole line (or file).
 * @member {String} fieldName
 */
ReconciliationReportValidationIssue.prototype['fieldName'] = undefined;

/**
 * The line number on which the issue was detected. If this field is 0, the issue applies to the whole file.
 * @member {Number} lineNum
 */
ReconciliationReportValidationIssue.prototype['lineNum'] = undefined;






export default ReconciliationReportValidationIssue;

