/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PriceMissingCountDetails model module.
 * @module model/PriceMissingCountDetails
 * @version v3
 */
class PriceMissingCountDetails {
    /**
     * Constructs a new <code>PriceMissingCountDetails</code>.
     * The reasons that contributed to the price missing count and the total count for each reason.
     * @alias module:model/PriceMissingCountDetails
     */
    constructor() { 
        
        PriceMissingCountDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PriceMissingCountDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PriceMissingCountDetails} obj Optional instance to populate.
     * @return {module:model/PriceMissingCountDetails} The populated <code>PriceMissingCountDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PriceMissingCountDetails();

            if (data.hasOwnProperty('bandwidthDepletedCount')) {
                obj['bandwidthDepletedCount'] = ApiClient.convertToType(data['bandwidthDepletedCount'], 'String');
            }
            if (data.hasOwnProperty('cacheRateMissingCount')) {
                obj['cacheRateMissingCount'] = ApiClient.convertToType(data['cacheRateMissingCount'], 'String');
            }
            if (data.hasOwnProperty('itineraryBlockedCount')) {
                obj['itineraryBlockedCount'] = ApiClient.convertToType(data['itineraryBlockedCount'], 'String');
            }
            if (data.hasOwnProperty('livePricingErrorCount')) {
                obj['livePricingErrorCount'] = ApiClient.convertToType(data['livePricingErrorCount'], 'String');
            }
            if (data.hasOwnProperty('livePricingNotSetupCount')) {
                obj['livePricingNotSetupCount'] = ApiClient.convertToType(data['livePricingNotSetupCount'], 'String');
            }
            if (data.hasOwnProperty('livePricingTimeoutCount')) {
                obj['livePricingTimeoutCount'] = ApiClient.convertToType(data['livePricingTimeoutCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PriceMissingCountDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PriceMissingCountDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bandwidthDepletedCount'] && !(typeof data['bandwidthDepletedCount'] === 'string' || data['bandwidthDepletedCount'] instanceof String)) {
            throw new Error("Expected the field `bandwidthDepletedCount` to be a primitive type in the JSON string but got " + data['bandwidthDepletedCount']);
        }
        // ensure the json data is a string
        if (data['cacheRateMissingCount'] && !(typeof data['cacheRateMissingCount'] === 'string' || data['cacheRateMissingCount'] instanceof String)) {
            throw new Error("Expected the field `cacheRateMissingCount` to be a primitive type in the JSON string but got " + data['cacheRateMissingCount']);
        }
        // ensure the json data is a string
        if (data['itineraryBlockedCount'] && !(typeof data['itineraryBlockedCount'] === 'string' || data['itineraryBlockedCount'] instanceof String)) {
            throw new Error("Expected the field `itineraryBlockedCount` to be a primitive type in the JSON string but got " + data['itineraryBlockedCount']);
        }
        // ensure the json data is a string
        if (data['livePricingErrorCount'] && !(typeof data['livePricingErrorCount'] === 'string' || data['livePricingErrorCount'] instanceof String)) {
            throw new Error("Expected the field `livePricingErrorCount` to be a primitive type in the JSON string but got " + data['livePricingErrorCount']);
        }
        // ensure the json data is a string
        if (data['livePricingNotSetupCount'] && !(typeof data['livePricingNotSetupCount'] === 'string' || data['livePricingNotSetupCount'] instanceof String)) {
            throw new Error("Expected the field `livePricingNotSetupCount` to be a primitive type in the JSON string but got " + data['livePricingNotSetupCount']);
        }
        // ensure the json data is a string
        if (data['livePricingTimeoutCount'] && !(typeof data['livePricingTimeoutCount'] === 'string' || data['livePricingTimeoutCount'] instanceof String)) {
            throw new Error("Expected the field `livePricingTimeoutCount` to be a primitive type in the JSON string but got " + data['livePricingTimeoutCount']);
        }

        return true;
    }


}



/**
 * No price was cached for this itinerary, and there was no live query quota remaining.
 * @member {String} bandwidthDepletedCount
 */
PriceMissingCountDetails.prototype['bandwidthDepletedCount'] = undefined;

/**
 * No price exists in the cache for this itinerary. A live query was not done due to page constraints.
 * @member {String} cacheRateMissingCount
 */
PriceMissingCountDetails.prototype['cacheRateMissingCount'] = undefined;

/**
 * The itinerary was outside of your basic parameters, so no price was pulled for the itinerary from either live query or cache fill.
 * @member {String} itineraryBlockedCount
 */
PriceMissingCountDetails.prototype['itineraryBlockedCount'] = undefined;

/**
 * No price was cached for this itinerary. A live query did not time out, but your system returned an error.
 * @member {String} livePricingErrorCount
 */
PriceMissingCountDetails.prototype['livePricingErrorCount'] = undefined;

/**
 * No price was cached for this itinerary, and live query was not configured for this account.
 * @member {String} livePricingNotSetupCount
 */
PriceMissingCountDetails.prototype['livePricingNotSetupCount'] = undefined;

/**
 * No price was cached for this itinerary, and a live query sent to your system timed out.
 * @member {String} livePricingTimeoutCount
 */
PriceMissingCountDetails.prototype['livePricingTimeoutCount'] = undefined;






export default PriceMissingCountDetails;

