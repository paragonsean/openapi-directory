/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SummarizeHotelViewsResponse model module.
 * @module model/SummarizeHotelViewsResponse
 * @version v3
 */
class SummarizeHotelViewsResponse {
    /**
     * Constructs a new <code>SummarizeHotelViewsResponse</code>.
     * Response message for HotelViewService.SummarizeHotelViews.
     * @alias module:model/SummarizeHotelViewsResponse
     */
    constructor() { 
        
        SummarizeHotelViewsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SummarizeHotelViewsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SummarizeHotelViewsResponse} obj Optional instance to populate.
     * @return {module:model/SummarizeHotelViewsResponse} The populated <code>SummarizeHotelViewsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SummarizeHotelViewsResponse();

            if (data.hasOwnProperty('lastFeedSubmissionTime')) {
                obj['lastFeedSubmissionTime'] = ApiClient.convertToType(data['lastFeedSubmissionTime'], 'String');
            }
            if (data.hasOwnProperty('lastManifestUpdateTime')) {
                obj['lastManifestUpdateTime'] = ApiClient.convertToType(data['lastManifestUpdateTime'], 'String');
            }
            if (data.hasOwnProperty('liveOnGooglePropertyCount')) {
                obj['liveOnGooglePropertyCount'] = ApiClient.convertToType(data['liveOnGooglePropertyCount'], 'String');
            }
            if (data.hasOwnProperty('matchedPropertyCount')) {
                obj['matchedPropertyCount'] = ApiClient.convertToType(data['matchedPropertyCount'], 'String');
            }
            if (data.hasOwnProperty('overclusteredPropertyCount')) {
                obj['overclusteredPropertyCount'] = ApiClient.convertToType(data['overclusteredPropertyCount'], 'String');
            }
            if (data.hasOwnProperty('overclusteredPropertyWithErrorsCount')) {
                obj['overclusteredPropertyWithErrorsCount'] = ApiClient.convertToType(data['overclusteredPropertyWithErrorsCount'], 'String');
            }
            if (data.hasOwnProperty('unmatchedPropertyCount')) {
                obj['unmatchedPropertyCount'] = ApiClient.convertToType(data['unmatchedPropertyCount'], 'String');
            }
            if (data.hasOwnProperty('unmatchedPropertyWithErrorsCount')) {
                obj['unmatchedPropertyWithErrorsCount'] = ApiClient.convertToType(data['unmatchedPropertyWithErrorsCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SummarizeHotelViewsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SummarizeHotelViewsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lastFeedSubmissionTime'] && !(typeof data['lastFeedSubmissionTime'] === 'string' || data['lastFeedSubmissionTime'] instanceof String)) {
            throw new Error("Expected the field `lastFeedSubmissionTime` to be a primitive type in the JSON string but got " + data['lastFeedSubmissionTime']);
        }
        // ensure the json data is a string
        if (data['lastManifestUpdateTime'] && !(typeof data['lastManifestUpdateTime'] === 'string' || data['lastManifestUpdateTime'] instanceof String)) {
            throw new Error("Expected the field `lastManifestUpdateTime` to be a primitive type in the JSON string but got " + data['lastManifestUpdateTime']);
        }
        // ensure the json data is a string
        if (data['liveOnGooglePropertyCount'] && !(typeof data['liveOnGooglePropertyCount'] === 'string' || data['liveOnGooglePropertyCount'] instanceof String)) {
            throw new Error("Expected the field `liveOnGooglePropertyCount` to be a primitive type in the JSON string but got " + data['liveOnGooglePropertyCount']);
        }
        // ensure the json data is a string
        if (data['matchedPropertyCount'] && !(typeof data['matchedPropertyCount'] === 'string' || data['matchedPropertyCount'] instanceof String)) {
            throw new Error("Expected the field `matchedPropertyCount` to be a primitive type in the JSON string but got " + data['matchedPropertyCount']);
        }
        // ensure the json data is a string
        if (data['overclusteredPropertyCount'] && !(typeof data['overclusteredPropertyCount'] === 'string' || data['overclusteredPropertyCount'] instanceof String)) {
            throw new Error("Expected the field `overclusteredPropertyCount` to be a primitive type in the JSON string but got " + data['overclusteredPropertyCount']);
        }
        // ensure the json data is a string
        if (data['overclusteredPropertyWithErrorsCount'] && !(typeof data['overclusteredPropertyWithErrorsCount'] === 'string' || data['overclusteredPropertyWithErrorsCount'] instanceof String)) {
            throw new Error("Expected the field `overclusteredPropertyWithErrorsCount` to be a primitive type in the JSON string but got " + data['overclusteredPropertyWithErrorsCount']);
        }
        // ensure the json data is a string
        if (data['unmatchedPropertyCount'] && !(typeof data['unmatchedPropertyCount'] === 'string' || data['unmatchedPropertyCount'] instanceof String)) {
            throw new Error("Expected the field `unmatchedPropertyCount` to be a primitive type in the JSON string but got " + data['unmatchedPropertyCount']);
        }
        // ensure the json data is a string
        if (data['unmatchedPropertyWithErrorsCount'] && !(typeof data['unmatchedPropertyWithErrorsCount'] === 'string' || data['unmatchedPropertyWithErrorsCount'] instanceof String)) {
            throw new Error("Expected the field `unmatchedPropertyWithErrorsCount` to be a primitive type in the JSON string but got " + data['unmatchedPropertyWithErrorsCount']);
        }

        return true;
    }


}



/**
 * Timestamp of the last hotel feed submission.
 * @member {String} lastFeedSubmissionTime
 */
SummarizeHotelViewsResponse.prototype['lastFeedSubmissionTime'] = undefined;

/**
 * Timestamp of the last hotel manifest update.
 * @member {String} lastManifestUpdateTime
 */
SummarizeHotelViewsResponse.prototype['lastManifestUpdateTime'] = undefined;

/**
 * The number of properties that are Live on Google.
 * @member {String} liveOnGooglePropertyCount
 */
SummarizeHotelViewsResponse.prototype['liveOnGooglePropertyCount'] = undefined;

/**
 * The number of properties that match Google's manifest.
 * @member {String} matchedPropertyCount
 */
SummarizeHotelViewsResponse.prototype['matchedPropertyCount'] = undefined;

/**
 * The number of hotels that are considered overclustered.
 * @member {String} overclusteredPropertyCount
 */
SummarizeHotelViewsResponse.prototype['overclusteredPropertyCount'] = undefined;

/**
 * The number of overclustered properties that have data-related errors.
 * @member {String} overclusteredPropertyWithErrorsCount
 */
SummarizeHotelViewsResponse.prototype['overclusteredPropertyWithErrorsCount'] = undefined;

/**
 * The number of properties that are considered unmatched.
 * @member {String} unmatchedPropertyCount
 */
SummarizeHotelViewsResponse.prototype['unmatchedPropertyCount'] = undefined;

/**
 * The number of unmatched properties that have data-related errors.
 * @member {String} unmatchedPropertyWithErrorsCount
 */
SummarizeHotelViewsResponse.prototype['unmatchedPropertyWithErrorsCount'] = undefined;






export default SummarizeHotelViewsResponse;

