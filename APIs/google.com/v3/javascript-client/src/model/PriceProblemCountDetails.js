/**
 * Travel Partner API
 * The Travel Partner API provides you with a RESTful interface to the Google Hotel Center platform. It enables an app to efficiently retrieve and change Hotel Center data, and is thus suitable for managing large or complex accounts.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PriceProblemCountDetails model module.
 * @module model/PriceProblemCountDetails
 * @version v3
 */
class PriceProblemCountDetails {
    /**
     * Constructs a new <code>PriceProblemCountDetails</code>.
     * The reasons that contributed to the price problem count and the total count for each reason.
     * @alias module:model/PriceProblemCountDetails
     */
    constructor() { 
        
        PriceProblemCountDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PriceProblemCountDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PriceProblemCountDetails} obj Optional instance to populate.
     * @return {module:model/PriceProblemCountDetails} The populated <code>PriceProblemCountDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PriceProblemCountDetails();

            if (data.hasOwnProperty('hotelSuspendedCount')) {
                obj['hotelSuspendedCount'] = ApiClient.convertToType(data['hotelSuspendedCount'], 'String');
            }
            if (data.hasOwnProperty('priceUnusuallyHighCount')) {
                obj['priceUnusuallyHighCount'] = ApiClient.convertToType(data['priceUnusuallyHighCount'], 'String');
            }
            if (data.hasOwnProperty('priceUnusuallyLowCount')) {
                obj['priceUnusuallyLowCount'] = ApiClient.convertToType(data['priceUnusuallyLowCount'], 'String');
            }
            if (data.hasOwnProperty('taxesAndFeesMissingCount')) {
                obj['taxesAndFeesMissingCount'] = ApiClient.convertToType(data['taxesAndFeesMissingCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PriceProblemCountDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PriceProblemCountDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hotelSuspendedCount'] && !(typeof data['hotelSuspendedCount'] === 'string' || data['hotelSuspendedCount'] instanceof String)) {
            throw new Error("Expected the field `hotelSuspendedCount` to be a primitive type in the JSON string but got " + data['hotelSuspendedCount']);
        }
        // ensure the json data is a string
        if (data['priceUnusuallyHighCount'] && !(typeof data['priceUnusuallyHighCount'] === 'string' || data['priceUnusuallyHighCount'] instanceof String)) {
            throw new Error("Expected the field `priceUnusuallyHighCount` to be a primitive type in the JSON string but got " + data['priceUnusuallyHighCount']);
        }
        // ensure the json data is a string
        if (data['priceUnusuallyLowCount'] && !(typeof data['priceUnusuallyLowCount'] === 'string' || data['priceUnusuallyLowCount'] instanceof String)) {
            throw new Error("Expected the field `priceUnusuallyLowCount` to be a primitive type in the JSON string but got " + data['priceUnusuallyLowCount']);
        }
        // ensure the json data is a string
        if (data['taxesAndFeesMissingCount'] && !(typeof data['taxesAndFeesMissingCount'] === 'string' || data['taxesAndFeesMissingCount'] instanceof String)) {
            throw new Error("Expected the field `taxesAndFeesMissingCount` to be a primitive type in the JSON string but got " + data['taxesAndFeesMissingCount']);
        }

        return true;
    }


}



/**
 * The hotel was suspended. This may be due to persistent problems in areas such as incorrect taxes and fees.
 * @member {String} hotelSuspendedCount
 */
PriceProblemCountDetails.prototype['hotelSuspendedCount'] = undefined;

/**
 * The price given for this itinerary seemed oddly high compared to regional trends.
 * @member {String} priceUnusuallyHighCount
 */
PriceProblemCountDetails.prototype['priceUnusuallyHighCount'] = undefined;

/**
 * The price given for this itinerary seemed oddly low compared to regional trends.
 * @member {String} priceUnusuallyLowCount
 */
PriceProblemCountDetails.prototype['priceUnusuallyLowCount'] = undefined;

/**
 * Taxes and fees were missing from pricing.
 * @member {String} taxesAndFeesMissingCount
 */
PriceProblemCountDetails.prototype['taxesAndFeesMissingCount'] = undefined;






export default PriceProblemCountDetails;

