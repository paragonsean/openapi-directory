/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetSovereigntyStructures200Ok {
  public static final String SERIALIZED_NAME_ALLIANCE_ID = "alliance_id";
  @SerializedName(SERIALIZED_NAME_ALLIANCE_ID)
  private Integer allianceId;

  public static final String SERIALIZED_NAME_SOLAR_SYSTEM_ID = "solar_system_id";
  @SerializedName(SERIALIZED_NAME_SOLAR_SYSTEM_ID)
  private Integer solarSystemId;

  public static final String SERIALIZED_NAME_STRUCTURE_ID = "structure_id";
  @SerializedName(SERIALIZED_NAME_STRUCTURE_ID)
  private Long structureId;

  public static final String SERIALIZED_NAME_STRUCTURE_TYPE_ID = "structure_type_id";
  @SerializedName(SERIALIZED_NAME_STRUCTURE_TYPE_ID)
  private Integer structureTypeId;

  public static final String SERIALIZED_NAME_VULNERABILITY_OCCUPANCY_LEVEL = "vulnerability_occupancy_level";
  @SerializedName(SERIALIZED_NAME_VULNERABILITY_OCCUPANCY_LEVEL)
  private Float vulnerabilityOccupancyLevel;

  public static final String SERIALIZED_NAME_VULNERABLE_END_TIME = "vulnerable_end_time";
  @SerializedName(SERIALIZED_NAME_VULNERABLE_END_TIME)
  private OffsetDateTime vulnerableEndTime;

  public static final String SERIALIZED_NAME_VULNERABLE_START_TIME = "vulnerable_start_time";
  @SerializedName(SERIALIZED_NAME_VULNERABLE_START_TIME)
  private OffsetDateTime vulnerableStartTime;

  public GetSovereigntyStructures200Ok() {
  }

  public GetSovereigntyStructures200Ok allianceId(Integer allianceId) {
    this.allianceId = allianceId;
    return this;
  }

  /**
   * The alliance that owns the structure. 
   * @return allianceId
   */
  @javax.annotation.Nonnull
  public Integer getAllianceId() {
    return allianceId;
  }

  public void setAllianceId(Integer allianceId) {
    this.allianceId = allianceId;
  }


  public GetSovereigntyStructures200Ok solarSystemId(Integer solarSystemId) {
    this.solarSystemId = solarSystemId;
    return this;
  }

  /**
   * Solar system in which the structure is located. 
   * @return solarSystemId
   */
  @javax.annotation.Nonnull
  public Integer getSolarSystemId() {
    return solarSystemId;
  }

  public void setSolarSystemId(Integer solarSystemId) {
    this.solarSystemId = solarSystemId;
  }


  public GetSovereigntyStructures200Ok structureId(Long structureId) {
    this.structureId = structureId;
    return this;
  }

  /**
   * Unique item ID for this structure.
   * @return structureId
   */
  @javax.annotation.Nonnull
  public Long getStructureId() {
    return structureId;
  }

  public void setStructureId(Long structureId) {
    this.structureId = structureId;
  }


  public GetSovereigntyStructures200Ok structureTypeId(Integer structureTypeId) {
    this.structureTypeId = structureTypeId;
    return this;
  }

  /**
   * A reference to the type of structure this is. 
   * @return structureTypeId
   */
  @javax.annotation.Nonnull
  public Integer getStructureTypeId() {
    return structureTypeId;
  }

  public void setStructureTypeId(Integer structureTypeId) {
    this.structureTypeId = structureTypeId;
  }


  public GetSovereigntyStructures200Ok vulnerabilityOccupancyLevel(Float vulnerabilityOccupancyLevel) {
    this.vulnerabilityOccupancyLevel = vulnerabilityOccupancyLevel;
    return this;
  }

  /**
   * The occupancy level for the next or current vulnerability window. This takes into account all development indexes and capital system bonuses. Also known as Activity Defense Multiplier from in the client. It increases the time that attackers must spend using their entosis links on the structure. 
   * @return vulnerabilityOccupancyLevel
   */
  @javax.annotation.Nullable
  public Float getVulnerabilityOccupancyLevel() {
    return vulnerabilityOccupancyLevel;
  }

  public void setVulnerabilityOccupancyLevel(Float vulnerabilityOccupancyLevel) {
    this.vulnerabilityOccupancyLevel = vulnerabilityOccupancyLevel;
  }


  public GetSovereigntyStructures200Ok vulnerableEndTime(OffsetDateTime vulnerableEndTime) {
    this.vulnerableEndTime = vulnerableEndTime;
    return this;
  }

  /**
   * The time at which the next or current vulnerability window ends. At the end of a vulnerability window the next window is recalculated and locked in along with the vulnerabilityOccupancyLevel. If the structure is not in 100% entosis control of the defender, it will go in to &#39;overtime&#39; and stay vulnerable for as long as that situation persists. Only once the defenders have 100% entosis control and has the vulnerableEndTime passed does the vulnerability interval expire and a new one is calculated. 
   * @return vulnerableEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getVulnerableEndTime() {
    return vulnerableEndTime;
  }

  public void setVulnerableEndTime(OffsetDateTime vulnerableEndTime) {
    this.vulnerableEndTime = vulnerableEndTime;
  }


  public GetSovereigntyStructures200Ok vulnerableStartTime(OffsetDateTime vulnerableStartTime) {
    this.vulnerableStartTime = vulnerableStartTime;
    return this;
  }

  /**
   * The next time at which the structure will become vulnerable. Or the start time of the current window if current time is between this and vulnerableEndTime. 
   * @return vulnerableStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getVulnerableStartTime() {
    return vulnerableStartTime;
  }

  public void setVulnerableStartTime(OffsetDateTime vulnerableStartTime) {
    this.vulnerableStartTime = vulnerableStartTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSovereigntyStructures200Ok getSovereigntyStructures200Ok = (GetSovereigntyStructures200Ok) o;
    return Objects.equals(this.allianceId, getSovereigntyStructures200Ok.allianceId) &&
        Objects.equals(this.solarSystemId, getSovereigntyStructures200Ok.solarSystemId) &&
        Objects.equals(this.structureId, getSovereigntyStructures200Ok.structureId) &&
        Objects.equals(this.structureTypeId, getSovereigntyStructures200Ok.structureTypeId) &&
        Objects.equals(this.vulnerabilityOccupancyLevel, getSovereigntyStructures200Ok.vulnerabilityOccupancyLevel) &&
        Objects.equals(this.vulnerableEndTime, getSovereigntyStructures200Ok.vulnerableEndTime) &&
        Objects.equals(this.vulnerableStartTime, getSovereigntyStructures200Ok.vulnerableStartTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allianceId, solarSystemId, structureId, structureTypeId, vulnerabilityOccupancyLevel, vulnerableEndTime, vulnerableStartTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSovereigntyStructures200Ok {\n");
    sb.append("    allianceId: ").append(toIndentedString(allianceId)).append("\n");
    sb.append("    solarSystemId: ").append(toIndentedString(solarSystemId)).append("\n");
    sb.append("    structureId: ").append(toIndentedString(structureId)).append("\n");
    sb.append("    structureTypeId: ").append(toIndentedString(structureTypeId)).append("\n");
    sb.append("    vulnerabilityOccupancyLevel: ").append(toIndentedString(vulnerabilityOccupancyLevel)).append("\n");
    sb.append("    vulnerableEndTime: ").append(toIndentedString(vulnerableEndTime)).append("\n");
    sb.append("    vulnerableStartTime: ").append(toIndentedString(vulnerableStartTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alliance_id");
    openapiFields.add("solar_system_id");
    openapiFields.add("structure_id");
    openapiFields.add("structure_type_id");
    openapiFields.add("vulnerability_occupancy_level");
    openapiFields.add("vulnerable_end_time");
    openapiFields.add("vulnerable_start_time");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("alliance_id");
    openapiRequiredFields.add("solar_system_id");
    openapiRequiredFields.add("structure_id");
    openapiRequiredFields.add("structure_type_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetSovereigntyStructures200Ok
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetSovereigntyStructures200Ok.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetSovereigntyStructures200Ok is not found in the empty JSON string", GetSovereigntyStructures200Ok.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetSovereigntyStructures200Ok.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetSovereigntyStructures200Ok` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetSovereigntyStructures200Ok.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetSovereigntyStructures200Ok.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetSovereigntyStructures200Ok' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetSovereigntyStructures200Ok> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetSovereigntyStructures200Ok.class));

       return (TypeAdapter<T>) new TypeAdapter<GetSovereigntyStructures200Ok>() {
           @Override
           public void write(JsonWriter out, GetSovereigntyStructures200Ok value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetSovereigntyStructures200Ok read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetSovereigntyStructures200Ok given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetSovereigntyStructures200Ok
   * @throws IOException if the JSON string is invalid with respect to GetSovereigntyStructures200Ok
   */
  public static GetSovereigntyStructures200Ok fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetSovereigntyStructures200Ok.class);
  }

  /**
   * Convert an instance of GetSovereigntyStructures200Ok to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

