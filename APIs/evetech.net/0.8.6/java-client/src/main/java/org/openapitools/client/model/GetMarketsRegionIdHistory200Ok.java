/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMarketsRegionIdHistory200Ok {
  public static final String SERIALIZED_NAME_AVERAGE = "average";
  @SerializedName(SERIALIZED_NAME_AVERAGE)
  private Double average;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private LocalDate date;

  public static final String SERIALIZED_NAME_HIGHEST = "highest";
  @SerializedName(SERIALIZED_NAME_HIGHEST)
  private Double highest;

  public static final String SERIALIZED_NAME_LOWEST = "lowest";
  @SerializedName(SERIALIZED_NAME_LOWEST)
  private Double lowest;

  public static final String SERIALIZED_NAME_ORDER_COUNT = "order_count";
  @SerializedName(SERIALIZED_NAME_ORDER_COUNT)
  private Long orderCount;

  public static final String SERIALIZED_NAME_VOLUME = "volume";
  @SerializedName(SERIALIZED_NAME_VOLUME)
  private Long volume;

  public GetMarketsRegionIdHistory200Ok() {
  }

  public GetMarketsRegionIdHistory200Ok average(Double average) {
    this.average = average;
    return this;
  }

  /**
   * average number
   * @return average
   */
  @javax.annotation.Nonnull
  public Double getAverage() {
    return average;
  }

  public void setAverage(Double average) {
    this.average = average;
  }


  public GetMarketsRegionIdHistory200Ok date(LocalDate date) {
    this.date = date;
    return this;
  }

  /**
   * The date of this historical statistic entry
   * @return date
   */
  @javax.annotation.Nonnull
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }


  public GetMarketsRegionIdHistory200Ok highest(Double highest) {
    this.highest = highest;
    return this;
  }

  /**
   * highest number
   * @return highest
   */
  @javax.annotation.Nonnull
  public Double getHighest() {
    return highest;
  }

  public void setHighest(Double highest) {
    this.highest = highest;
  }


  public GetMarketsRegionIdHistory200Ok lowest(Double lowest) {
    this.lowest = lowest;
    return this;
  }

  /**
   * lowest number
   * @return lowest
   */
  @javax.annotation.Nonnull
  public Double getLowest() {
    return lowest;
  }

  public void setLowest(Double lowest) {
    this.lowest = lowest;
  }


  public GetMarketsRegionIdHistory200Ok orderCount(Long orderCount) {
    this.orderCount = orderCount;
    return this;
  }

  /**
   * Total number of orders happened that day
   * @return orderCount
   */
  @javax.annotation.Nonnull
  public Long getOrderCount() {
    return orderCount;
  }

  public void setOrderCount(Long orderCount) {
    this.orderCount = orderCount;
  }


  public GetMarketsRegionIdHistory200Ok volume(Long volume) {
    this.volume = volume;
    return this;
  }

  /**
   * Total
   * @return volume
   */
  @javax.annotation.Nonnull
  public Long getVolume() {
    return volume;
  }

  public void setVolume(Long volume) {
    this.volume = volume;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMarketsRegionIdHistory200Ok getMarketsRegionIdHistory200Ok = (GetMarketsRegionIdHistory200Ok) o;
    return Objects.equals(this.average, getMarketsRegionIdHistory200Ok.average) &&
        Objects.equals(this.date, getMarketsRegionIdHistory200Ok.date) &&
        Objects.equals(this.highest, getMarketsRegionIdHistory200Ok.highest) &&
        Objects.equals(this.lowest, getMarketsRegionIdHistory200Ok.lowest) &&
        Objects.equals(this.orderCount, getMarketsRegionIdHistory200Ok.orderCount) &&
        Objects.equals(this.volume, getMarketsRegionIdHistory200Ok.volume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(average, date, highest, lowest, orderCount, volume);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMarketsRegionIdHistory200Ok {\n");
    sb.append("    average: ").append(toIndentedString(average)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    highest: ").append(toIndentedString(highest)).append("\n");
    sb.append("    lowest: ").append(toIndentedString(lowest)).append("\n");
    sb.append("    orderCount: ").append(toIndentedString(orderCount)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("average");
    openapiFields.add("date");
    openapiFields.add("highest");
    openapiFields.add("lowest");
    openapiFields.add("order_count");
    openapiFields.add("volume");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("average");
    openapiRequiredFields.add("date");
    openapiRequiredFields.add("highest");
    openapiRequiredFields.add("lowest");
    openapiRequiredFields.add("order_count");
    openapiRequiredFields.add("volume");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMarketsRegionIdHistory200Ok
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMarketsRegionIdHistory200Ok.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMarketsRegionIdHistory200Ok is not found in the empty JSON string", GetMarketsRegionIdHistory200Ok.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMarketsRegionIdHistory200Ok.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMarketsRegionIdHistory200Ok` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetMarketsRegionIdHistory200Ok.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMarketsRegionIdHistory200Ok.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMarketsRegionIdHistory200Ok' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMarketsRegionIdHistory200Ok> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMarketsRegionIdHistory200Ok.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMarketsRegionIdHistory200Ok>() {
           @Override
           public void write(JsonWriter out, GetMarketsRegionIdHistory200Ok value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMarketsRegionIdHistory200Ok read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMarketsRegionIdHistory200Ok given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMarketsRegionIdHistory200Ok
   * @throws IOException if the JSON string is invalid with respect to GetMarketsRegionIdHistory200Ok
   */
  public static GetMarketsRegionIdHistory200Ok fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMarketsRegionIdHistory200Ok.class);
  }

  /**
   * Convert an instance of GetMarketsRegionIdHistory200Ok to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

