/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetFwLeaderboardsCorporationsActiveTotalActiveTotal1;
import org.openapitools.client.model.GetFwLeaderboardsCorporationsLastWeekLastWeek1;
import org.openapitools.client.model.GetFwLeaderboardsCorporationsYesterdayYesterday1;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Top 10 rankings of corporations by victory points from yesterday, last week and in total
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetFwLeaderboardsCorporationsVictoryPoints {
  public static final String SERIALIZED_NAME_ACTIVE_TOTAL = "active_total";
  @SerializedName(SERIALIZED_NAME_ACTIVE_TOTAL)
  private List<GetFwLeaderboardsCorporationsActiveTotalActiveTotal1> activeTotal = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_WEEK = "last_week";
  @SerializedName(SERIALIZED_NAME_LAST_WEEK)
  private List<GetFwLeaderboardsCorporationsLastWeekLastWeek1> lastWeek = new ArrayList<>();

  public static final String SERIALIZED_NAME_YESTERDAY = "yesterday";
  @SerializedName(SERIALIZED_NAME_YESTERDAY)
  private List<GetFwLeaderboardsCorporationsYesterdayYesterday1> yesterday = new ArrayList<>();

  public GetFwLeaderboardsCorporationsVictoryPoints() {
  }

  public GetFwLeaderboardsCorporationsVictoryPoints activeTotal(List<GetFwLeaderboardsCorporationsActiveTotalActiveTotal1> activeTotal) {
    this.activeTotal = activeTotal;
    return this;
  }

  public GetFwLeaderboardsCorporationsVictoryPoints addActiveTotalItem(GetFwLeaderboardsCorporationsActiveTotalActiveTotal1 activeTotalItem) {
    if (this.activeTotal == null) {
      this.activeTotal = new ArrayList<>();
    }
    this.activeTotal.add(activeTotalItem);
    return this;
  }

  /**
   * Top 10 ranking of corporations active in faction warfare by total victory points. A corporation is considered \&quot;active\&quot; if they have participated in faction warfare in the past 14 days
   * @return activeTotal
   */
  @javax.annotation.Nonnull
  public List<GetFwLeaderboardsCorporationsActiveTotalActiveTotal1> getActiveTotal() {
    return activeTotal;
  }

  public void setActiveTotal(List<GetFwLeaderboardsCorporationsActiveTotalActiveTotal1> activeTotal) {
    this.activeTotal = activeTotal;
  }


  public GetFwLeaderboardsCorporationsVictoryPoints lastWeek(List<GetFwLeaderboardsCorporationsLastWeekLastWeek1> lastWeek) {
    this.lastWeek = lastWeek;
    return this;
  }

  public GetFwLeaderboardsCorporationsVictoryPoints addLastWeekItem(GetFwLeaderboardsCorporationsLastWeekLastWeek1 lastWeekItem) {
    if (this.lastWeek == null) {
      this.lastWeek = new ArrayList<>();
    }
    this.lastWeek.add(lastWeekItem);
    return this;
  }

  /**
   * Top 10 ranking of corporations by victory points in the past week
   * @return lastWeek
   */
  @javax.annotation.Nonnull
  public List<GetFwLeaderboardsCorporationsLastWeekLastWeek1> getLastWeek() {
    return lastWeek;
  }

  public void setLastWeek(List<GetFwLeaderboardsCorporationsLastWeekLastWeek1> lastWeek) {
    this.lastWeek = lastWeek;
  }


  public GetFwLeaderboardsCorporationsVictoryPoints yesterday(List<GetFwLeaderboardsCorporationsYesterdayYesterday1> yesterday) {
    this.yesterday = yesterday;
    return this;
  }

  public GetFwLeaderboardsCorporationsVictoryPoints addYesterdayItem(GetFwLeaderboardsCorporationsYesterdayYesterday1 yesterdayItem) {
    if (this.yesterday == null) {
      this.yesterday = new ArrayList<>();
    }
    this.yesterday.add(yesterdayItem);
    return this;
  }

  /**
   * Top 10 ranking of corporations by victory points in the past day
   * @return yesterday
   */
  @javax.annotation.Nonnull
  public List<GetFwLeaderboardsCorporationsYesterdayYesterday1> getYesterday() {
    return yesterday;
  }

  public void setYesterday(List<GetFwLeaderboardsCorporationsYesterdayYesterday1> yesterday) {
    this.yesterday = yesterday;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetFwLeaderboardsCorporationsVictoryPoints getFwLeaderboardsCorporationsVictoryPoints = (GetFwLeaderboardsCorporationsVictoryPoints) o;
    return Objects.equals(this.activeTotal, getFwLeaderboardsCorporationsVictoryPoints.activeTotal) &&
        Objects.equals(this.lastWeek, getFwLeaderboardsCorporationsVictoryPoints.lastWeek) &&
        Objects.equals(this.yesterday, getFwLeaderboardsCorporationsVictoryPoints.yesterday);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeTotal, lastWeek, yesterday);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetFwLeaderboardsCorporationsVictoryPoints {\n");
    sb.append("    activeTotal: ").append(toIndentedString(activeTotal)).append("\n");
    sb.append("    lastWeek: ").append(toIndentedString(lastWeek)).append("\n");
    sb.append("    yesterday: ").append(toIndentedString(yesterday)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active_total");
    openapiFields.add("last_week");
    openapiFields.add("yesterday");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("active_total");
    openapiRequiredFields.add("last_week");
    openapiRequiredFields.add("yesterday");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetFwLeaderboardsCorporationsVictoryPoints
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetFwLeaderboardsCorporationsVictoryPoints.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetFwLeaderboardsCorporationsVictoryPoints is not found in the empty JSON string", GetFwLeaderboardsCorporationsVictoryPoints.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetFwLeaderboardsCorporationsVictoryPoints.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetFwLeaderboardsCorporationsVictoryPoints` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetFwLeaderboardsCorporationsVictoryPoints.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("active_total").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `active_total` to be an array in the JSON string but got `%s`", jsonObj.get("active_total").toString()));
      }

      JsonArray jsonArrayactiveTotal = jsonObj.getAsJsonArray("active_total");
      // validate the required field `active_total` (array)
      for (int i = 0; i < jsonArrayactiveTotal.size(); i++) {
        GetFwLeaderboardsCorporationsActiveTotalActiveTotal1.validateJsonElement(jsonArrayactiveTotal.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("last_week").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_week` to be an array in the JSON string but got `%s`", jsonObj.get("last_week").toString()));
      }

      JsonArray jsonArraylastWeek = jsonObj.getAsJsonArray("last_week");
      // validate the required field `last_week` (array)
      for (int i = 0; i < jsonArraylastWeek.size(); i++) {
        GetFwLeaderboardsCorporationsLastWeekLastWeek1.validateJsonElement(jsonArraylastWeek.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("yesterday").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `yesterday` to be an array in the JSON string but got `%s`", jsonObj.get("yesterday").toString()));
      }

      JsonArray jsonArrayyesterday = jsonObj.getAsJsonArray("yesterday");
      // validate the required field `yesterday` (array)
      for (int i = 0; i < jsonArrayyesterday.size(); i++) {
        GetFwLeaderboardsCorporationsYesterdayYesterday1.validateJsonElement(jsonArrayyesterday.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetFwLeaderboardsCorporationsVictoryPoints.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetFwLeaderboardsCorporationsVictoryPoints' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetFwLeaderboardsCorporationsVictoryPoints> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetFwLeaderboardsCorporationsVictoryPoints.class));

       return (TypeAdapter<T>) new TypeAdapter<GetFwLeaderboardsCorporationsVictoryPoints>() {
           @Override
           public void write(JsonWriter out, GetFwLeaderboardsCorporationsVictoryPoints value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetFwLeaderboardsCorporationsVictoryPoints read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetFwLeaderboardsCorporationsVictoryPoints given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetFwLeaderboardsCorporationsVictoryPoints
   * @throws IOException if the JSON string is invalid with respect to GetFwLeaderboardsCorporationsVictoryPoints
   */
  public static GetFwLeaderboardsCorporationsVictoryPoints fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetFwLeaderboardsCorporationsVictoryPoints.class);
  }

  /**
   * Convert an instance of GetFwLeaderboardsCorporationsVictoryPoints to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

