/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetFleetsFleetIdWingsSquad;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetFleetsFleetIdWings200Ok {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SQUADS = "squads";
  @SerializedName(SERIALIZED_NAME_SQUADS)
  private List<GetFleetsFleetIdWingsSquad> squads = new ArrayList<>();

  public GetFleetsFleetIdWings200Ok() {
  }

  public GetFleetsFleetIdWings200Ok id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * id integer
   * @return id
   */
  @javax.annotation.Nonnull
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  public GetFleetsFleetIdWings200Ok name(String name) {
    this.name = name;
    return this;
  }

  /**
   * name string
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetFleetsFleetIdWings200Ok squads(List<GetFleetsFleetIdWingsSquad> squads) {
    this.squads = squads;
    return this;
  }

  public GetFleetsFleetIdWings200Ok addSquadsItem(GetFleetsFleetIdWingsSquad squadsItem) {
    if (this.squads == null) {
      this.squads = new ArrayList<>();
    }
    this.squads.add(squadsItem);
    return this;
  }

  /**
   * squads array
   * @return squads
   */
  @javax.annotation.Nonnull
  public List<GetFleetsFleetIdWingsSquad> getSquads() {
    return squads;
  }

  public void setSquads(List<GetFleetsFleetIdWingsSquad> squads) {
    this.squads = squads;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetFleetsFleetIdWings200Ok getFleetsFleetIdWings200Ok = (GetFleetsFleetIdWings200Ok) o;
    return Objects.equals(this.id, getFleetsFleetIdWings200Ok.id) &&
        Objects.equals(this.name, getFleetsFleetIdWings200Ok.name) &&
        Objects.equals(this.squads, getFleetsFleetIdWings200Ok.squads);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, squads);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetFleetsFleetIdWings200Ok {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    squads: ").append(toIndentedString(squads)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("squads");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("squads");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetFleetsFleetIdWings200Ok
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetFleetsFleetIdWings200Ok.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetFleetsFleetIdWings200Ok is not found in the empty JSON string", GetFleetsFleetIdWings200Ok.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetFleetsFleetIdWings200Ok.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetFleetsFleetIdWings200Ok` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetFleetsFleetIdWings200Ok.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("squads").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `squads` to be an array in the JSON string but got `%s`", jsonObj.get("squads").toString()));
      }

      JsonArray jsonArraysquads = jsonObj.getAsJsonArray("squads");
      // validate the required field `squads` (array)
      for (int i = 0; i < jsonArraysquads.size(); i++) {
        GetFleetsFleetIdWingsSquad.validateJsonElement(jsonArraysquads.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetFleetsFleetIdWings200Ok.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetFleetsFleetIdWings200Ok' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetFleetsFleetIdWings200Ok> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetFleetsFleetIdWings200Ok.class));

       return (TypeAdapter<T>) new TypeAdapter<GetFleetsFleetIdWings200Ok>() {
           @Override
           public void write(JsonWriter out, GetFleetsFleetIdWings200Ok value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetFleetsFleetIdWings200Ok read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetFleetsFleetIdWings200Ok given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetFleetsFleetIdWings200Ok
   * @throws IOException if the JSON string is invalid with respect to GetFleetsFleetIdWings200Ok
   */
  public static GetFleetsFleetIdWings200Ok fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetFleetsFleetIdWings200Ok.class);
  }

  /**
   * Convert an instance of GetFleetsFleetIdWings200Ok to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

