/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetSovereigntyMap200Ok {
  public static final String SERIALIZED_NAME_ALLIANCE_ID = "alliance_id";
  @SerializedName(SERIALIZED_NAME_ALLIANCE_ID)
  private Integer allianceId;

  public static final String SERIALIZED_NAME_CORPORATION_ID = "corporation_id";
  @SerializedName(SERIALIZED_NAME_CORPORATION_ID)
  private Integer corporationId;

  public static final String SERIALIZED_NAME_FACTION_ID = "faction_id";
  @SerializedName(SERIALIZED_NAME_FACTION_ID)
  private Integer factionId;

  public static final String SERIALIZED_NAME_SYSTEM_ID = "system_id";
  @SerializedName(SERIALIZED_NAME_SYSTEM_ID)
  private Integer systemId;

  public GetSovereigntyMap200Ok() {
  }

  public GetSovereigntyMap200Ok allianceId(Integer allianceId) {
    this.allianceId = allianceId;
    return this;
  }

  /**
   * alliance_id integer
   * @return allianceId
   */
  @javax.annotation.Nullable
  public Integer getAllianceId() {
    return allianceId;
  }

  public void setAllianceId(Integer allianceId) {
    this.allianceId = allianceId;
  }


  public GetSovereigntyMap200Ok corporationId(Integer corporationId) {
    this.corporationId = corporationId;
    return this;
  }

  /**
   * corporation_id integer
   * @return corporationId
   */
  @javax.annotation.Nullable
  public Integer getCorporationId() {
    return corporationId;
  }

  public void setCorporationId(Integer corporationId) {
    this.corporationId = corporationId;
  }


  public GetSovereigntyMap200Ok factionId(Integer factionId) {
    this.factionId = factionId;
    return this;
  }

  /**
   * faction_id integer
   * @return factionId
   */
  @javax.annotation.Nullable
  public Integer getFactionId() {
    return factionId;
  }

  public void setFactionId(Integer factionId) {
    this.factionId = factionId;
  }


  public GetSovereigntyMap200Ok systemId(Integer systemId) {
    this.systemId = systemId;
    return this;
  }

  /**
   * system_id integer
   * @return systemId
   */
  @javax.annotation.Nonnull
  public Integer getSystemId() {
    return systemId;
  }

  public void setSystemId(Integer systemId) {
    this.systemId = systemId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSovereigntyMap200Ok getSovereigntyMap200Ok = (GetSovereigntyMap200Ok) o;
    return Objects.equals(this.allianceId, getSovereigntyMap200Ok.allianceId) &&
        Objects.equals(this.corporationId, getSovereigntyMap200Ok.corporationId) &&
        Objects.equals(this.factionId, getSovereigntyMap200Ok.factionId) &&
        Objects.equals(this.systemId, getSovereigntyMap200Ok.systemId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allianceId, corporationId, factionId, systemId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSovereigntyMap200Ok {\n");
    sb.append("    allianceId: ").append(toIndentedString(allianceId)).append("\n");
    sb.append("    corporationId: ").append(toIndentedString(corporationId)).append("\n");
    sb.append("    factionId: ").append(toIndentedString(factionId)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alliance_id");
    openapiFields.add("corporation_id");
    openapiFields.add("faction_id");
    openapiFields.add("system_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("system_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetSovereigntyMap200Ok
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetSovereigntyMap200Ok.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetSovereigntyMap200Ok is not found in the empty JSON string", GetSovereigntyMap200Ok.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetSovereigntyMap200Ok.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetSovereigntyMap200Ok` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetSovereigntyMap200Ok.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetSovereigntyMap200Ok.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetSovereigntyMap200Ok' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetSovereigntyMap200Ok> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetSovereigntyMap200Ok.class));

       return (TypeAdapter<T>) new TypeAdapter<GetSovereigntyMap200Ok>() {
           @Override
           public void write(JsonWriter out, GetSovereigntyMap200Ok value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetSovereigntyMap200Ok read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetSovereigntyMap200Ok given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetSovereigntyMap200Ok
   * @throws IOException if the JSON string is invalid with respect to GetSovereigntyMap200Ok
   */
  public static GetSovereigntyMap200Ok fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetSovereigntyMap200Ok.class);
  }

  /**
   * Convert an instance of GetSovereigntyMap200Ok to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

