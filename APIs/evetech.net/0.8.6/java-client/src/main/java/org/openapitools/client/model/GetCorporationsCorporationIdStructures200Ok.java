/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetCorporationsCorporationIdStructuresService;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetCorporationsCorporationIdStructures200Ok {
  public static final String SERIALIZED_NAME_CORPORATION_ID = "corporation_id";
  @SerializedName(SERIALIZED_NAME_CORPORATION_ID)
  private Integer corporationId;

  public static final String SERIALIZED_NAME_FUEL_EXPIRES = "fuel_expires";
  @SerializedName(SERIALIZED_NAME_FUEL_EXPIRES)
  private OffsetDateTime fuelExpires;

  public static final String SERIALIZED_NAME_NEXT_REINFORCE_APPLY = "next_reinforce_apply";
  @SerializedName(SERIALIZED_NAME_NEXT_REINFORCE_APPLY)
  private OffsetDateTime nextReinforceApply;

  public static final String SERIALIZED_NAME_NEXT_REINFORCE_HOUR = "next_reinforce_hour";
  @SerializedName(SERIALIZED_NAME_NEXT_REINFORCE_HOUR)
  private Integer nextReinforceHour;

  public static final String SERIALIZED_NAME_NEXT_REINFORCE_WEEKDAY = "next_reinforce_weekday";
  @SerializedName(SERIALIZED_NAME_NEXT_REINFORCE_WEEKDAY)
  private Integer nextReinforceWeekday;

  public static final String SERIALIZED_NAME_PROFILE_ID = "profile_id";
  @SerializedName(SERIALIZED_NAME_PROFILE_ID)
  private Integer profileId;

  public static final String SERIALIZED_NAME_REINFORCE_HOUR = "reinforce_hour";
  @SerializedName(SERIALIZED_NAME_REINFORCE_HOUR)
  private Integer reinforceHour;

  public static final String SERIALIZED_NAME_REINFORCE_WEEKDAY = "reinforce_weekday";
  @SerializedName(SERIALIZED_NAME_REINFORCE_WEEKDAY)
  private Integer reinforceWeekday;

  public static final String SERIALIZED_NAME_SERVICES = "services";
  @SerializedName(SERIALIZED_NAME_SERVICES)
  private List<GetCorporationsCorporationIdStructuresService> services = new ArrayList<>();

  /**
   * state string
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ANCHOR_VULNERABLE("anchor_vulnerable"),
    
    ANCHORING("anchoring"),
    
    ARMOR_REINFORCE("armor_reinforce"),
    
    ARMOR_VULNERABLE("armor_vulnerable"),
    
    FITTING_INVULNERABLE("fitting_invulnerable"),
    
    HULL_REINFORCE("hull_reinforce"),
    
    HULL_VULNERABLE("hull_vulnerable"),
    
    ONLINE_DEPRECATED("online_deprecated"),
    
    ONLINING_VULNERABLE("onlining_vulnerable"),
    
    SHIELD_VULNERABLE("shield_vulnerable"),
    
    UNANCHORED("unanchored"),
    
    UNKNOWN("unknown");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_STATE_TIMER_END = "state_timer_end";
  @SerializedName(SERIALIZED_NAME_STATE_TIMER_END)
  private OffsetDateTime stateTimerEnd;

  public static final String SERIALIZED_NAME_STATE_TIMER_START = "state_timer_start";
  @SerializedName(SERIALIZED_NAME_STATE_TIMER_START)
  private OffsetDateTime stateTimerStart;

  public static final String SERIALIZED_NAME_STRUCTURE_ID = "structure_id";
  @SerializedName(SERIALIZED_NAME_STRUCTURE_ID)
  private Long structureId;

  public static final String SERIALIZED_NAME_SYSTEM_ID = "system_id";
  @SerializedName(SERIALIZED_NAME_SYSTEM_ID)
  private Integer systemId;

  public static final String SERIALIZED_NAME_TYPE_ID = "type_id";
  @SerializedName(SERIALIZED_NAME_TYPE_ID)
  private Integer typeId;

  public static final String SERIALIZED_NAME_UNANCHORS_AT = "unanchors_at";
  @SerializedName(SERIALIZED_NAME_UNANCHORS_AT)
  private OffsetDateTime unanchorsAt;

  public GetCorporationsCorporationIdStructures200Ok() {
  }

  public GetCorporationsCorporationIdStructures200Ok corporationId(Integer corporationId) {
    this.corporationId = corporationId;
    return this;
  }

  /**
   * ID of the corporation that owns the structure
   * @return corporationId
   */
  @javax.annotation.Nonnull
  public Integer getCorporationId() {
    return corporationId;
  }

  public void setCorporationId(Integer corporationId) {
    this.corporationId = corporationId;
  }


  public GetCorporationsCorporationIdStructures200Ok fuelExpires(OffsetDateTime fuelExpires) {
    this.fuelExpires = fuelExpires;
    return this;
  }

  /**
   * Date on which the structure will run out of fuel
   * @return fuelExpires
   */
  @javax.annotation.Nullable
  public OffsetDateTime getFuelExpires() {
    return fuelExpires;
  }

  public void setFuelExpires(OffsetDateTime fuelExpires) {
    this.fuelExpires = fuelExpires;
  }


  public GetCorporationsCorporationIdStructures200Ok nextReinforceApply(OffsetDateTime nextReinforceApply) {
    this.nextReinforceApply = nextReinforceApply;
    return this;
  }

  /**
   * The date and time when the structure&#39;s newly requested reinforcement times (e.g. next_reinforce_hour and next_reinforce_day) will take effect
   * @return nextReinforceApply
   */
  @javax.annotation.Nullable
  public OffsetDateTime getNextReinforceApply() {
    return nextReinforceApply;
  }

  public void setNextReinforceApply(OffsetDateTime nextReinforceApply) {
    this.nextReinforceApply = nextReinforceApply;
  }


  public GetCorporationsCorporationIdStructures200Ok nextReinforceHour(Integer nextReinforceHour) {
    this.nextReinforceHour = nextReinforceHour;
    return this;
  }

  /**
   * The requested change to reinforce_hour that will take effect at the time shown by next_reinforce_apply
   * minimum: 0
   * maximum: 23
   * @return nextReinforceHour
   */
  @javax.annotation.Nullable
  public Integer getNextReinforceHour() {
    return nextReinforceHour;
  }

  public void setNextReinforceHour(Integer nextReinforceHour) {
    this.nextReinforceHour = nextReinforceHour;
  }


  public GetCorporationsCorporationIdStructures200Ok nextReinforceWeekday(Integer nextReinforceWeekday) {
    this.nextReinforceWeekday = nextReinforceWeekday;
    return this;
  }

  /**
   * The requested change to reinforce_weekday that will take effect at the time shown by next_reinforce_apply
   * minimum: 0
   * maximum: 6
   * @return nextReinforceWeekday
   */
  @javax.annotation.Nullable
  public Integer getNextReinforceWeekday() {
    return nextReinforceWeekday;
  }

  public void setNextReinforceWeekday(Integer nextReinforceWeekday) {
    this.nextReinforceWeekday = nextReinforceWeekday;
  }


  public GetCorporationsCorporationIdStructures200Ok profileId(Integer profileId) {
    this.profileId = profileId;
    return this;
  }

  /**
   * The id of the ACL profile for this citadel
   * @return profileId
   */
  @javax.annotation.Nonnull
  public Integer getProfileId() {
    return profileId;
  }

  public void setProfileId(Integer profileId) {
    this.profileId = profileId;
  }


  public GetCorporationsCorporationIdStructures200Ok reinforceHour(Integer reinforceHour) {
    this.reinforceHour = reinforceHour;
    return this;
  }

  /**
   * The hour of day that determines the four hour window when the structure will randomly exit its reinforcement periods and become vulnerable to attack against its armor and/or hull. The structure will become vulnerable at a random time that is +/- 2 hours centered on the value of this property
   * minimum: 0
   * maximum: 23
   * @return reinforceHour
   */
  @javax.annotation.Nonnull
  public Integer getReinforceHour() {
    return reinforceHour;
  }

  public void setReinforceHour(Integer reinforceHour) {
    this.reinforceHour = reinforceHour;
  }


  public GetCorporationsCorporationIdStructures200Ok reinforceWeekday(Integer reinforceWeekday) {
    this.reinforceWeekday = reinforceWeekday;
    return this;
  }

  /**
   * The day of the week when the structure exits its final reinforcement period and becomes vulnerable to attack against its hull. Monday is 0 and Sunday is 6
   * minimum: 0
   * maximum: 6
   * @return reinforceWeekday
   */
  @javax.annotation.Nonnull
  public Integer getReinforceWeekday() {
    return reinforceWeekday;
  }

  public void setReinforceWeekday(Integer reinforceWeekday) {
    this.reinforceWeekday = reinforceWeekday;
  }


  public GetCorporationsCorporationIdStructures200Ok services(List<GetCorporationsCorporationIdStructuresService> services) {
    this.services = services;
    return this;
  }

  public GetCorporationsCorporationIdStructures200Ok addServicesItem(GetCorporationsCorporationIdStructuresService servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<>();
    }
    this.services.add(servicesItem);
    return this;
  }

  /**
   * Contains a list of service upgrades, and their state
   * @return services
   */
  @javax.annotation.Nullable
  public List<GetCorporationsCorporationIdStructuresService> getServices() {
    return services;
  }

  public void setServices(List<GetCorporationsCorporationIdStructuresService> services) {
    this.services = services;
  }


  public GetCorporationsCorporationIdStructures200Ok state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * state string
   * @return state
   */
  @javax.annotation.Nonnull
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  public GetCorporationsCorporationIdStructures200Ok stateTimerEnd(OffsetDateTime stateTimerEnd) {
    this.stateTimerEnd = stateTimerEnd;
    return this;
  }

  /**
   * Date at which the structure will move to it&#39;s next state
   * @return stateTimerEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStateTimerEnd() {
    return stateTimerEnd;
  }

  public void setStateTimerEnd(OffsetDateTime stateTimerEnd) {
    this.stateTimerEnd = stateTimerEnd;
  }


  public GetCorporationsCorporationIdStructures200Ok stateTimerStart(OffsetDateTime stateTimerStart) {
    this.stateTimerStart = stateTimerStart;
    return this;
  }

  /**
   * Date at which the structure entered it&#39;s current state
   * @return stateTimerStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStateTimerStart() {
    return stateTimerStart;
  }

  public void setStateTimerStart(OffsetDateTime stateTimerStart) {
    this.stateTimerStart = stateTimerStart;
  }


  public GetCorporationsCorporationIdStructures200Ok structureId(Long structureId) {
    this.structureId = structureId;
    return this;
  }

  /**
   * The Item ID of the structure
   * @return structureId
   */
  @javax.annotation.Nonnull
  public Long getStructureId() {
    return structureId;
  }

  public void setStructureId(Long structureId) {
    this.structureId = structureId;
  }


  public GetCorporationsCorporationIdStructures200Ok systemId(Integer systemId) {
    this.systemId = systemId;
    return this;
  }

  /**
   * The solar system the structure is in
   * @return systemId
   */
  @javax.annotation.Nonnull
  public Integer getSystemId() {
    return systemId;
  }

  public void setSystemId(Integer systemId) {
    this.systemId = systemId;
  }


  public GetCorporationsCorporationIdStructures200Ok typeId(Integer typeId) {
    this.typeId = typeId;
    return this;
  }

  /**
   * The type id of the structure
   * @return typeId
   */
  @javax.annotation.Nonnull
  public Integer getTypeId() {
    return typeId;
  }

  public void setTypeId(Integer typeId) {
    this.typeId = typeId;
  }


  public GetCorporationsCorporationIdStructures200Ok unanchorsAt(OffsetDateTime unanchorsAt) {
    this.unanchorsAt = unanchorsAt;
    return this;
  }

  /**
   * Date at which the structure will unanchor
   * @return unanchorsAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUnanchorsAt() {
    return unanchorsAt;
  }

  public void setUnanchorsAt(OffsetDateTime unanchorsAt) {
    this.unanchorsAt = unanchorsAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCorporationsCorporationIdStructures200Ok getCorporationsCorporationIdStructures200Ok = (GetCorporationsCorporationIdStructures200Ok) o;
    return Objects.equals(this.corporationId, getCorporationsCorporationIdStructures200Ok.corporationId) &&
        Objects.equals(this.fuelExpires, getCorporationsCorporationIdStructures200Ok.fuelExpires) &&
        Objects.equals(this.nextReinforceApply, getCorporationsCorporationIdStructures200Ok.nextReinforceApply) &&
        Objects.equals(this.nextReinforceHour, getCorporationsCorporationIdStructures200Ok.nextReinforceHour) &&
        Objects.equals(this.nextReinforceWeekday, getCorporationsCorporationIdStructures200Ok.nextReinforceWeekday) &&
        Objects.equals(this.profileId, getCorporationsCorporationIdStructures200Ok.profileId) &&
        Objects.equals(this.reinforceHour, getCorporationsCorporationIdStructures200Ok.reinforceHour) &&
        Objects.equals(this.reinforceWeekday, getCorporationsCorporationIdStructures200Ok.reinforceWeekday) &&
        Objects.equals(this.services, getCorporationsCorporationIdStructures200Ok.services) &&
        Objects.equals(this.state, getCorporationsCorporationIdStructures200Ok.state) &&
        Objects.equals(this.stateTimerEnd, getCorporationsCorporationIdStructures200Ok.stateTimerEnd) &&
        Objects.equals(this.stateTimerStart, getCorporationsCorporationIdStructures200Ok.stateTimerStart) &&
        Objects.equals(this.structureId, getCorporationsCorporationIdStructures200Ok.structureId) &&
        Objects.equals(this.systemId, getCorporationsCorporationIdStructures200Ok.systemId) &&
        Objects.equals(this.typeId, getCorporationsCorporationIdStructures200Ok.typeId) &&
        Objects.equals(this.unanchorsAt, getCorporationsCorporationIdStructures200Ok.unanchorsAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(corporationId, fuelExpires, nextReinforceApply, nextReinforceHour, nextReinforceWeekday, profileId, reinforceHour, reinforceWeekday, services, state, stateTimerEnd, stateTimerStart, structureId, systemId, typeId, unanchorsAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCorporationsCorporationIdStructures200Ok {\n");
    sb.append("    corporationId: ").append(toIndentedString(corporationId)).append("\n");
    sb.append("    fuelExpires: ").append(toIndentedString(fuelExpires)).append("\n");
    sb.append("    nextReinforceApply: ").append(toIndentedString(nextReinforceApply)).append("\n");
    sb.append("    nextReinforceHour: ").append(toIndentedString(nextReinforceHour)).append("\n");
    sb.append("    nextReinforceWeekday: ").append(toIndentedString(nextReinforceWeekday)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    reinforceHour: ").append(toIndentedString(reinforceHour)).append("\n");
    sb.append("    reinforceWeekday: ").append(toIndentedString(reinforceWeekday)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateTimerEnd: ").append(toIndentedString(stateTimerEnd)).append("\n");
    sb.append("    stateTimerStart: ").append(toIndentedString(stateTimerStart)).append("\n");
    sb.append("    structureId: ").append(toIndentedString(structureId)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("    unanchorsAt: ").append(toIndentedString(unanchorsAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("corporation_id");
    openapiFields.add("fuel_expires");
    openapiFields.add("next_reinforce_apply");
    openapiFields.add("next_reinforce_hour");
    openapiFields.add("next_reinforce_weekday");
    openapiFields.add("profile_id");
    openapiFields.add("reinforce_hour");
    openapiFields.add("reinforce_weekday");
    openapiFields.add("services");
    openapiFields.add("state");
    openapiFields.add("state_timer_end");
    openapiFields.add("state_timer_start");
    openapiFields.add("structure_id");
    openapiFields.add("system_id");
    openapiFields.add("type_id");
    openapiFields.add("unanchors_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("corporation_id");
    openapiRequiredFields.add("profile_id");
    openapiRequiredFields.add("reinforce_hour");
    openapiRequiredFields.add("reinforce_weekday");
    openapiRequiredFields.add("state");
    openapiRequiredFields.add("structure_id");
    openapiRequiredFields.add("system_id");
    openapiRequiredFields.add("type_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetCorporationsCorporationIdStructures200Ok
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetCorporationsCorporationIdStructures200Ok.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetCorporationsCorporationIdStructures200Ok is not found in the empty JSON string", GetCorporationsCorporationIdStructures200Ok.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetCorporationsCorporationIdStructures200Ok.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetCorporationsCorporationIdStructures200Ok` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetCorporationsCorporationIdStructures200Ok.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("services") != null && !jsonObj.get("services").isJsonNull()) {
        JsonArray jsonArrayservices = jsonObj.getAsJsonArray("services");
        if (jsonArrayservices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("services").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `services` to be an array in the JSON string but got `%s`", jsonObj.get("services").toString()));
          }

          // validate the optional field `services` (array)
          for (int i = 0; i < jsonArrayservices.size(); i++) {
            GetCorporationsCorporationIdStructuresService.validateJsonElement(jsonArrayservices.get(i));
          };
        }
      }
      if (!jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the required field `state`
      StateEnum.validateJsonElement(jsonObj.get("state"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetCorporationsCorporationIdStructures200Ok.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetCorporationsCorporationIdStructures200Ok' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetCorporationsCorporationIdStructures200Ok> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetCorporationsCorporationIdStructures200Ok.class));

       return (TypeAdapter<T>) new TypeAdapter<GetCorporationsCorporationIdStructures200Ok>() {
           @Override
           public void write(JsonWriter out, GetCorporationsCorporationIdStructures200Ok value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetCorporationsCorporationIdStructures200Ok read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetCorporationsCorporationIdStructures200Ok given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetCorporationsCorporationIdStructures200Ok
   * @throws IOException if the JSON string is invalid with respect to GetCorporationsCorporationIdStructures200Ok
   */
  public static GetCorporationsCorporationIdStructures200Ok fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetCorporationsCorporationIdStructures200Ok.class);
  }

  /**
   * Convert an instance of GetCorporationsCorporationIdStructures200Ok to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

