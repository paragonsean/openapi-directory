/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The aggressor corporation or alliance that declared this war, only contains either corporation_id or alliance_id
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetWarsWarIdAggressor {
  public static final String SERIALIZED_NAME_ALLIANCE_ID = "alliance_id";
  @SerializedName(SERIALIZED_NAME_ALLIANCE_ID)
  private Integer allianceId;

  public static final String SERIALIZED_NAME_CORPORATION_ID = "corporation_id";
  @SerializedName(SERIALIZED_NAME_CORPORATION_ID)
  private Integer corporationId;

  public static final String SERIALIZED_NAME_ISK_DESTROYED = "isk_destroyed";
  @SerializedName(SERIALIZED_NAME_ISK_DESTROYED)
  private Float iskDestroyed;

  public static final String SERIALIZED_NAME_SHIPS_KILLED = "ships_killed";
  @SerializedName(SERIALIZED_NAME_SHIPS_KILLED)
  private Integer shipsKilled;

  public GetWarsWarIdAggressor() {
  }

  public GetWarsWarIdAggressor allianceId(Integer allianceId) {
    this.allianceId = allianceId;
    return this;
  }

  /**
   * Alliance ID if and only if the aggressor is an alliance
   * @return allianceId
   */
  @javax.annotation.Nullable
  public Integer getAllianceId() {
    return allianceId;
  }

  public void setAllianceId(Integer allianceId) {
    this.allianceId = allianceId;
  }


  public GetWarsWarIdAggressor corporationId(Integer corporationId) {
    this.corporationId = corporationId;
    return this;
  }

  /**
   * Corporation ID if and only if the aggressor is a corporation
   * @return corporationId
   */
  @javax.annotation.Nullable
  public Integer getCorporationId() {
    return corporationId;
  }

  public void setCorporationId(Integer corporationId) {
    this.corporationId = corporationId;
  }


  public GetWarsWarIdAggressor iskDestroyed(Float iskDestroyed) {
    this.iskDestroyed = iskDestroyed;
    return this;
  }

  /**
   * ISK value of ships the aggressor has destroyed
   * @return iskDestroyed
   */
  @javax.annotation.Nonnull
  public Float getIskDestroyed() {
    return iskDestroyed;
  }

  public void setIskDestroyed(Float iskDestroyed) {
    this.iskDestroyed = iskDestroyed;
  }


  public GetWarsWarIdAggressor shipsKilled(Integer shipsKilled) {
    this.shipsKilled = shipsKilled;
    return this;
  }

  /**
   * The number of ships the aggressor has killed
   * @return shipsKilled
   */
  @javax.annotation.Nonnull
  public Integer getShipsKilled() {
    return shipsKilled;
  }

  public void setShipsKilled(Integer shipsKilled) {
    this.shipsKilled = shipsKilled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetWarsWarIdAggressor getWarsWarIdAggressor = (GetWarsWarIdAggressor) o;
    return Objects.equals(this.allianceId, getWarsWarIdAggressor.allianceId) &&
        Objects.equals(this.corporationId, getWarsWarIdAggressor.corporationId) &&
        Objects.equals(this.iskDestroyed, getWarsWarIdAggressor.iskDestroyed) &&
        Objects.equals(this.shipsKilled, getWarsWarIdAggressor.shipsKilled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allianceId, corporationId, iskDestroyed, shipsKilled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetWarsWarIdAggressor {\n");
    sb.append("    allianceId: ").append(toIndentedString(allianceId)).append("\n");
    sb.append("    corporationId: ").append(toIndentedString(corporationId)).append("\n");
    sb.append("    iskDestroyed: ").append(toIndentedString(iskDestroyed)).append("\n");
    sb.append("    shipsKilled: ").append(toIndentedString(shipsKilled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alliance_id");
    openapiFields.add("corporation_id");
    openapiFields.add("isk_destroyed");
    openapiFields.add("ships_killed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("isk_destroyed");
    openapiRequiredFields.add("ships_killed");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetWarsWarIdAggressor
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetWarsWarIdAggressor.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetWarsWarIdAggressor is not found in the empty JSON string", GetWarsWarIdAggressor.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetWarsWarIdAggressor.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetWarsWarIdAggressor` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetWarsWarIdAggressor.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetWarsWarIdAggressor.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetWarsWarIdAggressor' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetWarsWarIdAggressor> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetWarsWarIdAggressor.class));

       return (TypeAdapter<T>) new TypeAdapter<GetWarsWarIdAggressor>() {
           @Override
           public void write(JsonWriter out, GetWarsWarIdAggressor value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetWarsWarIdAggressor read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetWarsWarIdAggressor given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetWarsWarIdAggressor
   * @throws IOException if the JSON string is invalid with respect to GetWarsWarIdAggressor
   */
  public static GetWarsWarIdAggressor fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetWarsWarIdAggressor.class);
  }

  /**
   * Convert an instance of GetWarsWarIdAggressor to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

