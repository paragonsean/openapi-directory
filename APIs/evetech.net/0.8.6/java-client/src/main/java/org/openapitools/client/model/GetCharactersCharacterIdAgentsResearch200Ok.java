/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetCharactersCharacterIdAgentsResearch200Ok {
  public static final String SERIALIZED_NAME_AGENT_ID = "agent_id";
  @SerializedName(SERIALIZED_NAME_AGENT_ID)
  private Integer agentId;

  public static final String SERIALIZED_NAME_POINTS_PER_DAY = "points_per_day";
  @SerializedName(SERIALIZED_NAME_POINTS_PER_DAY)
  private Float pointsPerDay;

  public static final String SERIALIZED_NAME_REMAINDER_POINTS = "remainder_points";
  @SerializedName(SERIALIZED_NAME_REMAINDER_POINTS)
  private Float remainderPoints;

  public static final String SERIALIZED_NAME_SKILL_TYPE_ID = "skill_type_id";
  @SerializedName(SERIALIZED_NAME_SKILL_TYPE_ID)
  private Integer skillTypeId;

  public static final String SERIALIZED_NAME_STARTED_AT = "started_at";
  @SerializedName(SERIALIZED_NAME_STARTED_AT)
  private OffsetDateTime startedAt;

  public GetCharactersCharacterIdAgentsResearch200Ok() {
  }

  public GetCharactersCharacterIdAgentsResearch200Ok agentId(Integer agentId) {
    this.agentId = agentId;
    return this;
  }

  /**
   * agent_id integer
   * @return agentId
   */
  @javax.annotation.Nonnull
  public Integer getAgentId() {
    return agentId;
  }

  public void setAgentId(Integer agentId) {
    this.agentId = agentId;
  }


  public GetCharactersCharacterIdAgentsResearch200Ok pointsPerDay(Float pointsPerDay) {
    this.pointsPerDay = pointsPerDay;
    return this;
  }

  /**
   * points_per_day number
   * @return pointsPerDay
   */
  @javax.annotation.Nonnull
  public Float getPointsPerDay() {
    return pointsPerDay;
  }

  public void setPointsPerDay(Float pointsPerDay) {
    this.pointsPerDay = pointsPerDay;
  }


  public GetCharactersCharacterIdAgentsResearch200Ok remainderPoints(Float remainderPoints) {
    this.remainderPoints = remainderPoints;
    return this;
  }

  /**
   * remainder_points number
   * @return remainderPoints
   */
  @javax.annotation.Nonnull
  public Float getRemainderPoints() {
    return remainderPoints;
  }

  public void setRemainderPoints(Float remainderPoints) {
    this.remainderPoints = remainderPoints;
  }


  public GetCharactersCharacterIdAgentsResearch200Ok skillTypeId(Integer skillTypeId) {
    this.skillTypeId = skillTypeId;
    return this;
  }

  /**
   * skill_type_id integer
   * @return skillTypeId
   */
  @javax.annotation.Nonnull
  public Integer getSkillTypeId() {
    return skillTypeId;
  }

  public void setSkillTypeId(Integer skillTypeId) {
    this.skillTypeId = skillTypeId;
  }


  public GetCharactersCharacterIdAgentsResearch200Ok startedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
    return this;
  }

  /**
   * started_at string
   * @return startedAt
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCharactersCharacterIdAgentsResearch200Ok getCharactersCharacterIdAgentsResearch200Ok = (GetCharactersCharacterIdAgentsResearch200Ok) o;
    return Objects.equals(this.agentId, getCharactersCharacterIdAgentsResearch200Ok.agentId) &&
        Objects.equals(this.pointsPerDay, getCharactersCharacterIdAgentsResearch200Ok.pointsPerDay) &&
        Objects.equals(this.remainderPoints, getCharactersCharacterIdAgentsResearch200Ok.remainderPoints) &&
        Objects.equals(this.skillTypeId, getCharactersCharacterIdAgentsResearch200Ok.skillTypeId) &&
        Objects.equals(this.startedAt, getCharactersCharacterIdAgentsResearch200Ok.startedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentId, pointsPerDay, remainderPoints, skillTypeId, startedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCharactersCharacterIdAgentsResearch200Ok {\n");
    sb.append("    agentId: ").append(toIndentedString(agentId)).append("\n");
    sb.append("    pointsPerDay: ").append(toIndentedString(pointsPerDay)).append("\n");
    sb.append("    remainderPoints: ").append(toIndentedString(remainderPoints)).append("\n");
    sb.append("    skillTypeId: ").append(toIndentedString(skillTypeId)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agent_id");
    openapiFields.add("points_per_day");
    openapiFields.add("remainder_points");
    openapiFields.add("skill_type_id");
    openapiFields.add("started_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("agent_id");
    openapiRequiredFields.add("points_per_day");
    openapiRequiredFields.add("remainder_points");
    openapiRequiredFields.add("skill_type_id");
    openapiRequiredFields.add("started_at");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetCharactersCharacterIdAgentsResearch200Ok
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetCharactersCharacterIdAgentsResearch200Ok.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetCharactersCharacterIdAgentsResearch200Ok is not found in the empty JSON string", GetCharactersCharacterIdAgentsResearch200Ok.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetCharactersCharacterIdAgentsResearch200Ok.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetCharactersCharacterIdAgentsResearch200Ok` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetCharactersCharacterIdAgentsResearch200Ok.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetCharactersCharacterIdAgentsResearch200Ok.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetCharactersCharacterIdAgentsResearch200Ok' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetCharactersCharacterIdAgentsResearch200Ok> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetCharactersCharacterIdAgentsResearch200Ok.class));

       return (TypeAdapter<T>) new TypeAdapter<GetCharactersCharacterIdAgentsResearch200Ok>() {
           @Override
           public void write(JsonWriter out, GetCharactersCharacterIdAgentsResearch200Ok value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetCharactersCharacterIdAgentsResearch200Ok read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetCharactersCharacterIdAgentsResearch200Ok given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetCharactersCharacterIdAgentsResearch200Ok
   * @throws IOException if the JSON string is invalid with respect to GetCharactersCharacterIdAgentsResearch200Ok
   */
  public static GetCharactersCharacterIdAgentsResearch200Ok fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetCharactersCharacterIdAgentsResearch200Ok.class);
  }

  /**
   * Convert an instance of GetCharactersCharacterIdAgentsResearch200Ok to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

