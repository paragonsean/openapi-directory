/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PostUniverseIdsAgent;
import org.openapitools.client.model.PostUniverseIdsAlliance;
import org.openapitools.client.model.PostUniverseIdsCharacter;
import org.openapitools.client.model.PostUniverseIdsConstellation;
import org.openapitools.client.model.PostUniverseIdsCorporation;
import org.openapitools.client.model.PostUniverseIdsFaction;
import org.openapitools.client.model.PostUniverseIdsInventoryType;
import org.openapitools.client.model.PostUniverseIdsRegion;
import org.openapitools.client.model.PostUniverseIdsStation;
import org.openapitools.client.model.PostUniverseIdsSystem;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PostUniverseIdsOk {
  public static final String SERIALIZED_NAME_AGENTS = "agents";
  @SerializedName(SERIALIZED_NAME_AGENTS)
  private List<PostUniverseIdsAgent> agents = new ArrayList<>();

  public static final String SERIALIZED_NAME_ALLIANCES = "alliances";
  @SerializedName(SERIALIZED_NAME_ALLIANCES)
  private List<PostUniverseIdsAlliance> alliances = new ArrayList<>();

  public static final String SERIALIZED_NAME_CHARACTERS = "characters";
  @SerializedName(SERIALIZED_NAME_CHARACTERS)
  private List<PostUniverseIdsCharacter> characters = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONSTELLATIONS = "constellations";
  @SerializedName(SERIALIZED_NAME_CONSTELLATIONS)
  private List<PostUniverseIdsConstellation> constellations = new ArrayList<>();

  public static final String SERIALIZED_NAME_CORPORATIONS = "corporations";
  @SerializedName(SERIALIZED_NAME_CORPORATIONS)
  private List<PostUniverseIdsCorporation> corporations = new ArrayList<>();

  public static final String SERIALIZED_NAME_FACTIONS = "factions";
  @SerializedName(SERIALIZED_NAME_FACTIONS)
  private List<PostUniverseIdsFaction> factions = new ArrayList<>();

  public static final String SERIALIZED_NAME_INVENTORY_TYPES = "inventory_types";
  @SerializedName(SERIALIZED_NAME_INVENTORY_TYPES)
  private List<PostUniverseIdsInventoryType> inventoryTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_REGIONS = "regions";
  @SerializedName(SERIALIZED_NAME_REGIONS)
  private List<PostUniverseIdsRegion> regions = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATIONS = "stations";
  @SerializedName(SERIALIZED_NAME_STATIONS)
  private List<PostUniverseIdsStation> stations = new ArrayList<>();

  public static final String SERIALIZED_NAME_SYSTEMS = "systems";
  @SerializedName(SERIALIZED_NAME_SYSTEMS)
  private List<PostUniverseIdsSystem> systems = new ArrayList<>();

  public PostUniverseIdsOk() {
  }

  public PostUniverseIdsOk agents(List<PostUniverseIdsAgent> agents) {
    this.agents = agents;
    return this;
  }

  public PostUniverseIdsOk addAgentsItem(PostUniverseIdsAgent agentsItem) {
    if (this.agents == null) {
      this.agents = new ArrayList<>();
    }
    this.agents.add(agentsItem);
    return this;
  }

  /**
   * agents array
   * @return agents
   */
  @javax.annotation.Nullable
  public List<PostUniverseIdsAgent> getAgents() {
    return agents;
  }

  public void setAgents(List<PostUniverseIdsAgent> agents) {
    this.agents = agents;
  }


  public PostUniverseIdsOk alliances(List<PostUniverseIdsAlliance> alliances) {
    this.alliances = alliances;
    return this;
  }

  public PostUniverseIdsOk addAlliancesItem(PostUniverseIdsAlliance alliancesItem) {
    if (this.alliances == null) {
      this.alliances = new ArrayList<>();
    }
    this.alliances.add(alliancesItem);
    return this;
  }

  /**
   * alliances array
   * @return alliances
   */
  @javax.annotation.Nullable
  public List<PostUniverseIdsAlliance> getAlliances() {
    return alliances;
  }

  public void setAlliances(List<PostUniverseIdsAlliance> alliances) {
    this.alliances = alliances;
  }


  public PostUniverseIdsOk characters(List<PostUniverseIdsCharacter> characters) {
    this.characters = characters;
    return this;
  }

  public PostUniverseIdsOk addCharactersItem(PostUniverseIdsCharacter charactersItem) {
    if (this.characters == null) {
      this.characters = new ArrayList<>();
    }
    this.characters.add(charactersItem);
    return this;
  }

  /**
   * characters array
   * @return characters
   */
  @javax.annotation.Nullable
  public List<PostUniverseIdsCharacter> getCharacters() {
    return characters;
  }

  public void setCharacters(List<PostUniverseIdsCharacter> characters) {
    this.characters = characters;
  }


  public PostUniverseIdsOk constellations(List<PostUniverseIdsConstellation> constellations) {
    this.constellations = constellations;
    return this;
  }

  public PostUniverseIdsOk addConstellationsItem(PostUniverseIdsConstellation constellationsItem) {
    if (this.constellations == null) {
      this.constellations = new ArrayList<>();
    }
    this.constellations.add(constellationsItem);
    return this;
  }

  /**
   * constellations array
   * @return constellations
   */
  @javax.annotation.Nullable
  public List<PostUniverseIdsConstellation> getConstellations() {
    return constellations;
  }

  public void setConstellations(List<PostUniverseIdsConstellation> constellations) {
    this.constellations = constellations;
  }


  public PostUniverseIdsOk corporations(List<PostUniverseIdsCorporation> corporations) {
    this.corporations = corporations;
    return this;
  }

  public PostUniverseIdsOk addCorporationsItem(PostUniverseIdsCorporation corporationsItem) {
    if (this.corporations == null) {
      this.corporations = new ArrayList<>();
    }
    this.corporations.add(corporationsItem);
    return this;
  }

  /**
   * corporations array
   * @return corporations
   */
  @javax.annotation.Nullable
  public List<PostUniverseIdsCorporation> getCorporations() {
    return corporations;
  }

  public void setCorporations(List<PostUniverseIdsCorporation> corporations) {
    this.corporations = corporations;
  }


  public PostUniverseIdsOk factions(List<PostUniverseIdsFaction> factions) {
    this.factions = factions;
    return this;
  }

  public PostUniverseIdsOk addFactionsItem(PostUniverseIdsFaction factionsItem) {
    if (this.factions == null) {
      this.factions = new ArrayList<>();
    }
    this.factions.add(factionsItem);
    return this;
  }

  /**
   * factions array
   * @return factions
   */
  @javax.annotation.Nullable
  public List<PostUniverseIdsFaction> getFactions() {
    return factions;
  }

  public void setFactions(List<PostUniverseIdsFaction> factions) {
    this.factions = factions;
  }


  public PostUniverseIdsOk inventoryTypes(List<PostUniverseIdsInventoryType> inventoryTypes) {
    this.inventoryTypes = inventoryTypes;
    return this;
  }

  public PostUniverseIdsOk addInventoryTypesItem(PostUniverseIdsInventoryType inventoryTypesItem) {
    if (this.inventoryTypes == null) {
      this.inventoryTypes = new ArrayList<>();
    }
    this.inventoryTypes.add(inventoryTypesItem);
    return this;
  }

  /**
   * inventory_types array
   * @return inventoryTypes
   */
  @javax.annotation.Nullable
  public List<PostUniverseIdsInventoryType> getInventoryTypes() {
    return inventoryTypes;
  }

  public void setInventoryTypes(List<PostUniverseIdsInventoryType> inventoryTypes) {
    this.inventoryTypes = inventoryTypes;
  }


  public PostUniverseIdsOk regions(List<PostUniverseIdsRegion> regions) {
    this.regions = regions;
    return this;
  }

  public PostUniverseIdsOk addRegionsItem(PostUniverseIdsRegion regionsItem) {
    if (this.regions == null) {
      this.regions = new ArrayList<>();
    }
    this.regions.add(regionsItem);
    return this;
  }

  /**
   * regions array
   * @return regions
   */
  @javax.annotation.Nullable
  public List<PostUniverseIdsRegion> getRegions() {
    return regions;
  }

  public void setRegions(List<PostUniverseIdsRegion> regions) {
    this.regions = regions;
  }


  public PostUniverseIdsOk stations(List<PostUniverseIdsStation> stations) {
    this.stations = stations;
    return this;
  }

  public PostUniverseIdsOk addStationsItem(PostUniverseIdsStation stationsItem) {
    if (this.stations == null) {
      this.stations = new ArrayList<>();
    }
    this.stations.add(stationsItem);
    return this;
  }

  /**
   * stations array
   * @return stations
   */
  @javax.annotation.Nullable
  public List<PostUniverseIdsStation> getStations() {
    return stations;
  }

  public void setStations(List<PostUniverseIdsStation> stations) {
    this.stations = stations;
  }


  public PostUniverseIdsOk systems(List<PostUniverseIdsSystem> systems) {
    this.systems = systems;
    return this;
  }

  public PostUniverseIdsOk addSystemsItem(PostUniverseIdsSystem systemsItem) {
    if (this.systems == null) {
      this.systems = new ArrayList<>();
    }
    this.systems.add(systemsItem);
    return this;
  }

  /**
   * systems array
   * @return systems
   */
  @javax.annotation.Nullable
  public List<PostUniverseIdsSystem> getSystems() {
    return systems;
  }

  public void setSystems(List<PostUniverseIdsSystem> systems) {
    this.systems = systems;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostUniverseIdsOk postUniverseIdsOk = (PostUniverseIdsOk) o;
    return Objects.equals(this.agents, postUniverseIdsOk.agents) &&
        Objects.equals(this.alliances, postUniverseIdsOk.alliances) &&
        Objects.equals(this.characters, postUniverseIdsOk.characters) &&
        Objects.equals(this.constellations, postUniverseIdsOk.constellations) &&
        Objects.equals(this.corporations, postUniverseIdsOk.corporations) &&
        Objects.equals(this.factions, postUniverseIdsOk.factions) &&
        Objects.equals(this.inventoryTypes, postUniverseIdsOk.inventoryTypes) &&
        Objects.equals(this.regions, postUniverseIdsOk.regions) &&
        Objects.equals(this.stations, postUniverseIdsOk.stations) &&
        Objects.equals(this.systems, postUniverseIdsOk.systems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agents, alliances, characters, constellations, corporations, factions, inventoryTypes, regions, stations, systems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostUniverseIdsOk {\n");
    sb.append("    agents: ").append(toIndentedString(agents)).append("\n");
    sb.append("    alliances: ").append(toIndentedString(alliances)).append("\n");
    sb.append("    characters: ").append(toIndentedString(characters)).append("\n");
    sb.append("    constellations: ").append(toIndentedString(constellations)).append("\n");
    sb.append("    corporations: ").append(toIndentedString(corporations)).append("\n");
    sb.append("    factions: ").append(toIndentedString(factions)).append("\n");
    sb.append("    inventoryTypes: ").append(toIndentedString(inventoryTypes)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    stations: ").append(toIndentedString(stations)).append("\n");
    sb.append("    systems: ").append(toIndentedString(systems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agents");
    openapiFields.add("alliances");
    openapiFields.add("characters");
    openapiFields.add("constellations");
    openapiFields.add("corporations");
    openapiFields.add("factions");
    openapiFields.add("inventory_types");
    openapiFields.add("regions");
    openapiFields.add("stations");
    openapiFields.add("systems");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PostUniverseIdsOk
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PostUniverseIdsOk.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PostUniverseIdsOk is not found in the empty JSON string", PostUniverseIdsOk.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PostUniverseIdsOk.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PostUniverseIdsOk` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("agents") != null && !jsonObj.get("agents").isJsonNull()) {
        JsonArray jsonArrayagents = jsonObj.getAsJsonArray("agents");
        if (jsonArrayagents != null) {
          // ensure the json data is an array
          if (!jsonObj.get("agents").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `agents` to be an array in the JSON string but got `%s`", jsonObj.get("agents").toString()));
          }

          // validate the optional field `agents` (array)
          for (int i = 0; i < jsonArrayagents.size(); i++) {
            PostUniverseIdsAgent.validateJsonElement(jsonArrayagents.get(i));
          };
        }
      }
      if (jsonObj.get("alliances") != null && !jsonObj.get("alliances").isJsonNull()) {
        JsonArray jsonArrayalliances = jsonObj.getAsJsonArray("alliances");
        if (jsonArrayalliances != null) {
          // ensure the json data is an array
          if (!jsonObj.get("alliances").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `alliances` to be an array in the JSON string but got `%s`", jsonObj.get("alliances").toString()));
          }

          // validate the optional field `alliances` (array)
          for (int i = 0; i < jsonArrayalliances.size(); i++) {
            PostUniverseIdsAlliance.validateJsonElement(jsonArrayalliances.get(i));
          };
        }
      }
      if (jsonObj.get("characters") != null && !jsonObj.get("characters").isJsonNull()) {
        JsonArray jsonArraycharacters = jsonObj.getAsJsonArray("characters");
        if (jsonArraycharacters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("characters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `characters` to be an array in the JSON string but got `%s`", jsonObj.get("characters").toString()));
          }

          // validate the optional field `characters` (array)
          for (int i = 0; i < jsonArraycharacters.size(); i++) {
            PostUniverseIdsCharacter.validateJsonElement(jsonArraycharacters.get(i));
          };
        }
      }
      if (jsonObj.get("constellations") != null && !jsonObj.get("constellations").isJsonNull()) {
        JsonArray jsonArrayconstellations = jsonObj.getAsJsonArray("constellations");
        if (jsonArrayconstellations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("constellations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `constellations` to be an array in the JSON string but got `%s`", jsonObj.get("constellations").toString()));
          }

          // validate the optional field `constellations` (array)
          for (int i = 0; i < jsonArrayconstellations.size(); i++) {
            PostUniverseIdsConstellation.validateJsonElement(jsonArrayconstellations.get(i));
          };
        }
      }
      if (jsonObj.get("corporations") != null && !jsonObj.get("corporations").isJsonNull()) {
        JsonArray jsonArraycorporations = jsonObj.getAsJsonArray("corporations");
        if (jsonArraycorporations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("corporations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `corporations` to be an array in the JSON string but got `%s`", jsonObj.get("corporations").toString()));
          }

          // validate the optional field `corporations` (array)
          for (int i = 0; i < jsonArraycorporations.size(); i++) {
            PostUniverseIdsCorporation.validateJsonElement(jsonArraycorporations.get(i));
          };
        }
      }
      if (jsonObj.get("factions") != null && !jsonObj.get("factions").isJsonNull()) {
        JsonArray jsonArrayfactions = jsonObj.getAsJsonArray("factions");
        if (jsonArrayfactions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("factions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `factions` to be an array in the JSON string but got `%s`", jsonObj.get("factions").toString()));
          }

          // validate the optional field `factions` (array)
          for (int i = 0; i < jsonArrayfactions.size(); i++) {
            PostUniverseIdsFaction.validateJsonElement(jsonArrayfactions.get(i));
          };
        }
      }
      if (jsonObj.get("inventory_types") != null && !jsonObj.get("inventory_types").isJsonNull()) {
        JsonArray jsonArrayinventoryTypes = jsonObj.getAsJsonArray("inventory_types");
        if (jsonArrayinventoryTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inventory_types").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inventory_types` to be an array in the JSON string but got `%s`", jsonObj.get("inventory_types").toString()));
          }

          // validate the optional field `inventory_types` (array)
          for (int i = 0; i < jsonArrayinventoryTypes.size(); i++) {
            PostUniverseIdsInventoryType.validateJsonElement(jsonArrayinventoryTypes.get(i));
          };
        }
      }
      if (jsonObj.get("regions") != null && !jsonObj.get("regions").isJsonNull()) {
        JsonArray jsonArrayregions = jsonObj.getAsJsonArray("regions");
        if (jsonArrayregions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("regions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `regions` to be an array in the JSON string but got `%s`", jsonObj.get("regions").toString()));
          }

          // validate the optional field `regions` (array)
          for (int i = 0; i < jsonArrayregions.size(); i++) {
            PostUniverseIdsRegion.validateJsonElement(jsonArrayregions.get(i));
          };
        }
      }
      if (jsonObj.get("stations") != null && !jsonObj.get("stations").isJsonNull()) {
        JsonArray jsonArraystations = jsonObj.getAsJsonArray("stations");
        if (jsonArraystations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("stations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `stations` to be an array in the JSON string but got `%s`", jsonObj.get("stations").toString()));
          }

          // validate the optional field `stations` (array)
          for (int i = 0; i < jsonArraystations.size(); i++) {
            PostUniverseIdsStation.validateJsonElement(jsonArraystations.get(i));
          };
        }
      }
      if (jsonObj.get("systems") != null && !jsonObj.get("systems").isJsonNull()) {
        JsonArray jsonArraysystems = jsonObj.getAsJsonArray("systems");
        if (jsonArraysystems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("systems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `systems` to be an array in the JSON string but got `%s`", jsonObj.get("systems").toString()));
          }

          // validate the optional field `systems` (array)
          for (int i = 0; i < jsonArraysystems.size(); i++) {
            PostUniverseIdsSystem.validateJsonElement(jsonArraysystems.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PostUniverseIdsOk.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PostUniverseIdsOk' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PostUniverseIdsOk> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PostUniverseIdsOk.class));

       return (TypeAdapter<T>) new TypeAdapter<PostUniverseIdsOk>() {
           @Override
           public void write(JsonWriter out, PostUniverseIdsOk value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PostUniverseIdsOk read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PostUniverseIdsOk given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PostUniverseIdsOk
   * @throws IOException if the JSON string is invalid with respect to PostUniverseIdsOk
   */
  public static PostUniverseIdsOk fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PostUniverseIdsOk.class);
  }

  /**
   * Convert an instance of PostUniverseIdsOk to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

