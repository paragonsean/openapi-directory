/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetCorporationsCorporationIdCustomsOffices200Ok {
  public static final String SERIALIZED_NAME_ALLIANCE_TAX_RATE = "alliance_tax_rate";
  @SerializedName(SERIALIZED_NAME_ALLIANCE_TAX_RATE)
  private Float allianceTaxRate;

  public static final String SERIALIZED_NAME_ALLOW_ACCESS_WITH_STANDINGS = "allow_access_with_standings";
  @SerializedName(SERIALIZED_NAME_ALLOW_ACCESS_WITH_STANDINGS)
  private Boolean allowAccessWithStandings;

  public static final String SERIALIZED_NAME_ALLOW_ALLIANCE_ACCESS = "allow_alliance_access";
  @SerializedName(SERIALIZED_NAME_ALLOW_ALLIANCE_ACCESS)
  private Boolean allowAllianceAccess;

  public static final String SERIALIZED_NAME_BAD_STANDING_TAX_RATE = "bad_standing_tax_rate";
  @SerializedName(SERIALIZED_NAME_BAD_STANDING_TAX_RATE)
  private Float badStandingTaxRate;

  public static final String SERIALIZED_NAME_CORPORATION_TAX_RATE = "corporation_tax_rate";
  @SerializedName(SERIALIZED_NAME_CORPORATION_TAX_RATE)
  private Float corporationTaxRate;

  public static final String SERIALIZED_NAME_EXCELLENT_STANDING_TAX_RATE = "excellent_standing_tax_rate";
  @SerializedName(SERIALIZED_NAME_EXCELLENT_STANDING_TAX_RATE)
  private Float excellentStandingTaxRate;

  public static final String SERIALIZED_NAME_GOOD_STANDING_TAX_RATE = "good_standing_tax_rate";
  @SerializedName(SERIALIZED_NAME_GOOD_STANDING_TAX_RATE)
  private Float goodStandingTaxRate;

  public static final String SERIALIZED_NAME_NEUTRAL_STANDING_TAX_RATE = "neutral_standing_tax_rate";
  @SerializedName(SERIALIZED_NAME_NEUTRAL_STANDING_TAX_RATE)
  private Float neutralStandingTaxRate;

  public static final String SERIALIZED_NAME_OFFICE_ID = "office_id";
  @SerializedName(SERIALIZED_NAME_OFFICE_ID)
  private Long officeId;

  public static final String SERIALIZED_NAME_REINFORCE_EXIT_END = "reinforce_exit_end";
  @SerializedName(SERIALIZED_NAME_REINFORCE_EXIT_END)
  private Integer reinforceExitEnd;

  public static final String SERIALIZED_NAME_REINFORCE_EXIT_START = "reinforce_exit_start";
  @SerializedName(SERIALIZED_NAME_REINFORCE_EXIT_START)
  private Integer reinforceExitStart;

  /**
   * Access is allowed only for entities with this level of standing or better
   */
  @JsonAdapter(StandingLevelEnum.Adapter.class)
  public enum StandingLevelEnum {
    BAD("bad"),
    
    EXCELLENT("excellent"),
    
    GOOD("good"),
    
    NEUTRAL("neutral"),
    
    TERRIBLE("terrible");

    private String value;

    StandingLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StandingLevelEnum fromValue(String value) {
      for (StandingLevelEnum b : StandingLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StandingLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StandingLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StandingLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StandingLevelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StandingLevelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STANDING_LEVEL = "standing_level";
  @SerializedName(SERIALIZED_NAME_STANDING_LEVEL)
  private StandingLevelEnum standingLevel;

  public static final String SERIALIZED_NAME_SYSTEM_ID = "system_id";
  @SerializedName(SERIALIZED_NAME_SYSTEM_ID)
  private Integer systemId;

  public static final String SERIALIZED_NAME_TERRIBLE_STANDING_TAX_RATE = "terrible_standing_tax_rate";
  @SerializedName(SERIALIZED_NAME_TERRIBLE_STANDING_TAX_RATE)
  private Float terribleStandingTaxRate;

  public GetCorporationsCorporationIdCustomsOffices200Ok() {
  }

  public GetCorporationsCorporationIdCustomsOffices200Ok allianceTaxRate(Float allianceTaxRate) {
    this.allianceTaxRate = allianceTaxRate;
    return this;
  }

  /**
   * Only present if alliance access is allowed
   * @return allianceTaxRate
   */
  @javax.annotation.Nullable
  public Float getAllianceTaxRate() {
    return allianceTaxRate;
  }

  public void setAllianceTaxRate(Float allianceTaxRate) {
    this.allianceTaxRate = allianceTaxRate;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok allowAccessWithStandings(Boolean allowAccessWithStandings) {
    this.allowAccessWithStandings = allowAccessWithStandings;
    return this;
  }

  /**
   * standing_level and any standing related tax rate only present when this is true
   * @return allowAccessWithStandings
   */
  @javax.annotation.Nonnull
  public Boolean getAllowAccessWithStandings() {
    return allowAccessWithStandings;
  }

  public void setAllowAccessWithStandings(Boolean allowAccessWithStandings) {
    this.allowAccessWithStandings = allowAccessWithStandings;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok allowAllianceAccess(Boolean allowAllianceAccess) {
    this.allowAllianceAccess = allowAllianceAccess;
    return this;
  }

  /**
   * allow_alliance_access boolean
   * @return allowAllianceAccess
   */
  @javax.annotation.Nonnull
  public Boolean getAllowAllianceAccess() {
    return allowAllianceAccess;
  }

  public void setAllowAllianceAccess(Boolean allowAllianceAccess) {
    this.allowAllianceAccess = allowAllianceAccess;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok badStandingTaxRate(Float badStandingTaxRate) {
    this.badStandingTaxRate = badStandingTaxRate;
    return this;
  }

  /**
   * bad_standing_tax_rate number
   * @return badStandingTaxRate
   */
  @javax.annotation.Nullable
  public Float getBadStandingTaxRate() {
    return badStandingTaxRate;
  }

  public void setBadStandingTaxRate(Float badStandingTaxRate) {
    this.badStandingTaxRate = badStandingTaxRate;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok corporationTaxRate(Float corporationTaxRate) {
    this.corporationTaxRate = corporationTaxRate;
    return this;
  }

  /**
   * corporation_tax_rate number
   * @return corporationTaxRate
   */
  @javax.annotation.Nullable
  public Float getCorporationTaxRate() {
    return corporationTaxRate;
  }

  public void setCorporationTaxRate(Float corporationTaxRate) {
    this.corporationTaxRate = corporationTaxRate;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok excellentStandingTaxRate(Float excellentStandingTaxRate) {
    this.excellentStandingTaxRate = excellentStandingTaxRate;
    return this;
  }

  /**
   * Tax rate for entities with excellent level of standing, only present if this level is allowed, same for all other standing related tax rates
   * @return excellentStandingTaxRate
   */
  @javax.annotation.Nullable
  public Float getExcellentStandingTaxRate() {
    return excellentStandingTaxRate;
  }

  public void setExcellentStandingTaxRate(Float excellentStandingTaxRate) {
    this.excellentStandingTaxRate = excellentStandingTaxRate;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok goodStandingTaxRate(Float goodStandingTaxRate) {
    this.goodStandingTaxRate = goodStandingTaxRate;
    return this;
  }

  /**
   * good_standing_tax_rate number
   * @return goodStandingTaxRate
   */
  @javax.annotation.Nullable
  public Float getGoodStandingTaxRate() {
    return goodStandingTaxRate;
  }

  public void setGoodStandingTaxRate(Float goodStandingTaxRate) {
    this.goodStandingTaxRate = goodStandingTaxRate;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok neutralStandingTaxRate(Float neutralStandingTaxRate) {
    this.neutralStandingTaxRate = neutralStandingTaxRate;
    return this;
  }

  /**
   * neutral_standing_tax_rate number
   * @return neutralStandingTaxRate
   */
  @javax.annotation.Nullable
  public Float getNeutralStandingTaxRate() {
    return neutralStandingTaxRate;
  }

  public void setNeutralStandingTaxRate(Float neutralStandingTaxRate) {
    this.neutralStandingTaxRate = neutralStandingTaxRate;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok officeId(Long officeId) {
    this.officeId = officeId;
    return this;
  }

  /**
   * unique ID of this customs office
   * @return officeId
   */
  @javax.annotation.Nonnull
  public Long getOfficeId() {
    return officeId;
  }

  public void setOfficeId(Long officeId) {
    this.officeId = officeId;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok reinforceExitEnd(Integer reinforceExitEnd) {
    this.reinforceExitEnd = reinforceExitEnd;
    return this;
  }

  /**
   * reinforce_exit_end integer
   * minimum: 0
   * maximum: 23
   * @return reinforceExitEnd
   */
  @javax.annotation.Nonnull
  public Integer getReinforceExitEnd() {
    return reinforceExitEnd;
  }

  public void setReinforceExitEnd(Integer reinforceExitEnd) {
    this.reinforceExitEnd = reinforceExitEnd;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok reinforceExitStart(Integer reinforceExitStart) {
    this.reinforceExitStart = reinforceExitStart;
    return this;
  }

  /**
   * Together with reinforce_exit_end, marks a 2-hour period where this customs office could exit reinforcement mode during the day after initial attack
   * minimum: 0
   * maximum: 23
   * @return reinforceExitStart
   */
  @javax.annotation.Nonnull
  public Integer getReinforceExitStart() {
    return reinforceExitStart;
  }

  public void setReinforceExitStart(Integer reinforceExitStart) {
    this.reinforceExitStart = reinforceExitStart;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok standingLevel(StandingLevelEnum standingLevel) {
    this.standingLevel = standingLevel;
    return this;
  }

  /**
   * Access is allowed only for entities with this level of standing or better
   * @return standingLevel
   */
  @javax.annotation.Nullable
  public StandingLevelEnum getStandingLevel() {
    return standingLevel;
  }

  public void setStandingLevel(StandingLevelEnum standingLevel) {
    this.standingLevel = standingLevel;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok systemId(Integer systemId) {
    this.systemId = systemId;
    return this;
  }

  /**
   * ID of the solar system this customs office is located in
   * @return systemId
   */
  @javax.annotation.Nonnull
  public Integer getSystemId() {
    return systemId;
  }

  public void setSystemId(Integer systemId) {
    this.systemId = systemId;
  }


  public GetCorporationsCorporationIdCustomsOffices200Ok terribleStandingTaxRate(Float terribleStandingTaxRate) {
    this.terribleStandingTaxRate = terribleStandingTaxRate;
    return this;
  }

  /**
   * terrible_standing_tax_rate number
   * @return terribleStandingTaxRate
   */
  @javax.annotation.Nullable
  public Float getTerribleStandingTaxRate() {
    return terribleStandingTaxRate;
  }

  public void setTerribleStandingTaxRate(Float terribleStandingTaxRate) {
    this.terribleStandingTaxRate = terribleStandingTaxRate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCorporationsCorporationIdCustomsOffices200Ok getCorporationsCorporationIdCustomsOffices200Ok = (GetCorporationsCorporationIdCustomsOffices200Ok) o;
    return Objects.equals(this.allianceTaxRate, getCorporationsCorporationIdCustomsOffices200Ok.allianceTaxRate) &&
        Objects.equals(this.allowAccessWithStandings, getCorporationsCorporationIdCustomsOffices200Ok.allowAccessWithStandings) &&
        Objects.equals(this.allowAllianceAccess, getCorporationsCorporationIdCustomsOffices200Ok.allowAllianceAccess) &&
        Objects.equals(this.badStandingTaxRate, getCorporationsCorporationIdCustomsOffices200Ok.badStandingTaxRate) &&
        Objects.equals(this.corporationTaxRate, getCorporationsCorporationIdCustomsOffices200Ok.corporationTaxRate) &&
        Objects.equals(this.excellentStandingTaxRate, getCorporationsCorporationIdCustomsOffices200Ok.excellentStandingTaxRate) &&
        Objects.equals(this.goodStandingTaxRate, getCorporationsCorporationIdCustomsOffices200Ok.goodStandingTaxRate) &&
        Objects.equals(this.neutralStandingTaxRate, getCorporationsCorporationIdCustomsOffices200Ok.neutralStandingTaxRate) &&
        Objects.equals(this.officeId, getCorporationsCorporationIdCustomsOffices200Ok.officeId) &&
        Objects.equals(this.reinforceExitEnd, getCorporationsCorporationIdCustomsOffices200Ok.reinforceExitEnd) &&
        Objects.equals(this.reinforceExitStart, getCorporationsCorporationIdCustomsOffices200Ok.reinforceExitStart) &&
        Objects.equals(this.standingLevel, getCorporationsCorporationIdCustomsOffices200Ok.standingLevel) &&
        Objects.equals(this.systemId, getCorporationsCorporationIdCustomsOffices200Ok.systemId) &&
        Objects.equals(this.terribleStandingTaxRate, getCorporationsCorporationIdCustomsOffices200Ok.terribleStandingTaxRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allianceTaxRate, allowAccessWithStandings, allowAllianceAccess, badStandingTaxRate, corporationTaxRate, excellentStandingTaxRate, goodStandingTaxRate, neutralStandingTaxRate, officeId, reinforceExitEnd, reinforceExitStart, standingLevel, systemId, terribleStandingTaxRate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCorporationsCorporationIdCustomsOffices200Ok {\n");
    sb.append("    allianceTaxRate: ").append(toIndentedString(allianceTaxRate)).append("\n");
    sb.append("    allowAccessWithStandings: ").append(toIndentedString(allowAccessWithStandings)).append("\n");
    sb.append("    allowAllianceAccess: ").append(toIndentedString(allowAllianceAccess)).append("\n");
    sb.append("    badStandingTaxRate: ").append(toIndentedString(badStandingTaxRate)).append("\n");
    sb.append("    corporationTaxRate: ").append(toIndentedString(corporationTaxRate)).append("\n");
    sb.append("    excellentStandingTaxRate: ").append(toIndentedString(excellentStandingTaxRate)).append("\n");
    sb.append("    goodStandingTaxRate: ").append(toIndentedString(goodStandingTaxRate)).append("\n");
    sb.append("    neutralStandingTaxRate: ").append(toIndentedString(neutralStandingTaxRate)).append("\n");
    sb.append("    officeId: ").append(toIndentedString(officeId)).append("\n");
    sb.append("    reinforceExitEnd: ").append(toIndentedString(reinforceExitEnd)).append("\n");
    sb.append("    reinforceExitStart: ").append(toIndentedString(reinforceExitStart)).append("\n");
    sb.append("    standingLevel: ").append(toIndentedString(standingLevel)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    terribleStandingTaxRate: ").append(toIndentedString(terribleStandingTaxRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alliance_tax_rate");
    openapiFields.add("allow_access_with_standings");
    openapiFields.add("allow_alliance_access");
    openapiFields.add("bad_standing_tax_rate");
    openapiFields.add("corporation_tax_rate");
    openapiFields.add("excellent_standing_tax_rate");
    openapiFields.add("good_standing_tax_rate");
    openapiFields.add("neutral_standing_tax_rate");
    openapiFields.add("office_id");
    openapiFields.add("reinforce_exit_end");
    openapiFields.add("reinforce_exit_start");
    openapiFields.add("standing_level");
    openapiFields.add("system_id");
    openapiFields.add("terrible_standing_tax_rate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("allow_access_with_standings");
    openapiRequiredFields.add("allow_alliance_access");
    openapiRequiredFields.add("office_id");
    openapiRequiredFields.add("reinforce_exit_end");
    openapiRequiredFields.add("reinforce_exit_start");
    openapiRequiredFields.add("system_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetCorporationsCorporationIdCustomsOffices200Ok
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetCorporationsCorporationIdCustomsOffices200Ok.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetCorporationsCorporationIdCustomsOffices200Ok is not found in the empty JSON string", GetCorporationsCorporationIdCustomsOffices200Ok.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetCorporationsCorporationIdCustomsOffices200Ok.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetCorporationsCorporationIdCustomsOffices200Ok` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetCorporationsCorporationIdCustomsOffices200Ok.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("standing_level") != null && !jsonObj.get("standing_level").isJsonNull()) && !jsonObj.get("standing_level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `standing_level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("standing_level").toString()));
      }
      // validate the optional field `standing_level`
      if (jsonObj.get("standing_level") != null && !jsonObj.get("standing_level").isJsonNull()) {
        StandingLevelEnum.validateJsonElement(jsonObj.get("standing_level"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetCorporationsCorporationIdCustomsOffices200Ok.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetCorporationsCorporationIdCustomsOffices200Ok' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetCorporationsCorporationIdCustomsOffices200Ok> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetCorporationsCorporationIdCustomsOffices200Ok.class));

       return (TypeAdapter<T>) new TypeAdapter<GetCorporationsCorporationIdCustomsOffices200Ok>() {
           @Override
           public void write(JsonWriter out, GetCorporationsCorporationIdCustomsOffices200Ok value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetCorporationsCorporationIdCustomsOffices200Ok read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetCorporationsCorporationIdCustomsOffices200Ok given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetCorporationsCorporationIdCustomsOffices200Ok
   * @throws IOException if the JSON string is invalid with respect to GetCorporationsCorporationIdCustomsOffices200Ok
   */
  public static GetCorporationsCorporationIdCustomsOffices200Ok fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetCorporationsCorporationIdCustomsOffices200Ok.class);
  }

  /**
   * Convert an instance of GetCorporationsCorporationIdCustomsOffices200Ok to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

