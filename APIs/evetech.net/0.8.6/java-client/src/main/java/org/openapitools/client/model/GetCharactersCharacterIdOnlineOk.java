/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetCharactersCharacterIdOnlineOk {
  public static final String SERIALIZED_NAME_LAST_LOGIN = "last_login";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN)
  private OffsetDateTime lastLogin;

  public static final String SERIALIZED_NAME_LAST_LOGOUT = "last_logout";
  @SerializedName(SERIALIZED_NAME_LAST_LOGOUT)
  private OffsetDateTime lastLogout;

  public static final String SERIALIZED_NAME_LOGINS = "logins";
  @SerializedName(SERIALIZED_NAME_LOGINS)
  private Integer logins;

  public static final String SERIALIZED_NAME_ONLINE = "online";
  @SerializedName(SERIALIZED_NAME_ONLINE)
  private Boolean online;

  public GetCharactersCharacterIdOnlineOk() {
  }

  public GetCharactersCharacterIdOnlineOk lastLogin(OffsetDateTime lastLogin) {
    this.lastLogin = lastLogin;
    return this;
  }

  /**
   * Timestamp of the last login
   * @return lastLogin
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastLogin() {
    return lastLogin;
  }

  public void setLastLogin(OffsetDateTime lastLogin) {
    this.lastLogin = lastLogin;
  }


  public GetCharactersCharacterIdOnlineOk lastLogout(OffsetDateTime lastLogout) {
    this.lastLogout = lastLogout;
    return this;
  }

  /**
   * Timestamp of the last logout
   * @return lastLogout
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastLogout() {
    return lastLogout;
  }

  public void setLastLogout(OffsetDateTime lastLogout) {
    this.lastLogout = lastLogout;
  }


  public GetCharactersCharacterIdOnlineOk logins(Integer logins) {
    this.logins = logins;
    return this;
  }

  /**
   * Total number of times the character has logged in
   * @return logins
   */
  @javax.annotation.Nullable
  public Integer getLogins() {
    return logins;
  }

  public void setLogins(Integer logins) {
    this.logins = logins;
  }


  public GetCharactersCharacterIdOnlineOk online(Boolean online) {
    this.online = online;
    return this;
  }

  /**
   * If the character is online
   * @return online
   */
  @javax.annotation.Nonnull
  public Boolean getOnline() {
    return online;
  }

  public void setOnline(Boolean online) {
    this.online = online;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCharactersCharacterIdOnlineOk getCharactersCharacterIdOnlineOk = (GetCharactersCharacterIdOnlineOk) o;
    return Objects.equals(this.lastLogin, getCharactersCharacterIdOnlineOk.lastLogin) &&
        Objects.equals(this.lastLogout, getCharactersCharacterIdOnlineOk.lastLogout) &&
        Objects.equals(this.logins, getCharactersCharacterIdOnlineOk.logins) &&
        Objects.equals(this.online, getCharactersCharacterIdOnlineOk.online);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastLogin, lastLogout, logins, online);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCharactersCharacterIdOnlineOk {\n");
    sb.append("    lastLogin: ").append(toIndentedString(lastLogin)).append("\n");
    sb.append("    lastLogout: ").append(toIndentedString(lastLogout)).append("\n");
    sb.append("    logins: ").append(toIndentedString(logins)).append("\n");
    sb.append("    online: ").append(toIndentedString(online)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("last_login");
    openapiFields.add("last_logout");
    openapiFields.add("logins");
    openapiFields.add("online");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("online");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetCharactersCharacterIdOnlineOk
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetCharactersCharacterIdOnlineOk.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetCharactersCharacterIdOnlineOk is not found in the empty JSON string", GetCharactersCharacterIdOnlineOk.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetCharactersCharacterIdOnlineOk.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetCharactersCharacterIdOnlineOk` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetCharactersCharacterIdOnlineOk.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetCharactersCharacterIdOnlineOk.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetCharactersCharacterIdOnlineOk' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetCharactersCharacterIdOnlineOk> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetCharactersCharacterIdOnlineOk.class));

       return (TypeAdapter<T>) new TypeAdapter<GetCharactersCharacterIdOnlineOk>() {
           @Override
           public void write(JsonWriter out, GetCharactersCharacterIdOnlineOk value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetCharactersCharacterIdOnlineOk read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetCharactersCharacterIdOnlineOk given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetCharactersCharacterIdOnlineOk
   * @throws IOException if the JSON string is invalid with respect to GetCharactersCharacterIdOnlineOk
   */
  public static GetCharactersCharacterIdOnlineOk fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetCharactersCharacterIdOnlineOk.class);
  }

  /**
   * Convert an instance of GetCharactersCharacterIdOnlineOk to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

