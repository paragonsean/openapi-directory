/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetUniverseBloodlines200Ok {
  public static final String SERIALIZED_NAME_BLOODLINE_ID = "bloodline_id";
  @SerializedName(SERIALIZED_NAME_BLOODLINE_ID)
  private Integer bloodlineId;

  public static final String SERIALIZED_NAME_CHARISMA = "charisma";
  @SerializedName(SERIALIZED_NAME_CHARISMA)
  private Integer charisma;

  public static final String SERIALIZED_NAME_CORPORATION_ID = "corporation_id";
  @SerializedName(SERIALIZED_NAME_CORPORATION_ID)
  private Integer corporationId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_INTELLIGENCE = "intelligence";
  @SerializedName(SERIALIZED_NAME_INTELLIGENCE)
  private Integer intelligence;

  public static final String SERIALIZED_NAME_MEMORY = "memory";
  @SerializedName(SERIALIZED_NAME_MEMORY)
  private Integer memory;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERCEPTION = "perception";
  @SerializedName(SERIALIZED_NAME_PERCEPTION)
  private Integer perception;

  public static final String SERIALIZED_NAME_RACE_ID = "race_id";
  @SerializedName(SERIALIZED_NAME_RACE_ID)
  private Integer raceId;

  public static final String SERIALIZED_NAME_SHIP_TYPE_ID = "ship_type_id";
  @SerializedName(SERIALIZED_NAME_SHIP_TYPE_ID)
  private Integer shipTypeId;

  public static final String SERIALIZED_NAME_WILLPOWER = "willpower";
  @SerializedName(SERIALIZED_NAME_WILLPOWER)
  private Integer willpower;

  public GetUniverseBloodlines200Ok() {
  }

  public GetUniverseBloodlines200Ok bloodlineId(Integer bloodlineId) {
    this.bloodlineId = bloodlineId;
    return this;
  }

  /**
   * bloodline_id integer
   * @return bloodlineId
   */
  @javax.annotation.Nonnull
  public Integer getBloodlineId() {
    return bloodlineId;
  }

  public void setBloodlineId(Integer bloodlineId) {
    this.bloodlineId = bloodlineId;
  }


  public GetUniverseBloodlines200Ok charisma(Integer charisma) {
    this.charisma = charisma;
    return this;
  }

  /**
   * charisma integer
   * @return charisma
   */
  @javax.annotation.Nonnull
  public Integer getCharisma() {
    return charisma;
  }

  public void setCharisma(Integer charisma) {
    this.charisma = charisma;
  }


  public GetUniverseBloodlines200Ok corporationId(Integer corporationId) {
    this.corporationId = corporationId;
    return this;
  }

  /**
   * corporation_id integer
   * @return corporationId
   */
  @javax.annotation.Nonnull
  public Integer getCorporationId() {
    return corporationId;
  }

  public void setCorporationId(Integer corporationId) {
    this.corporationId = corporationId;
  }


  public GetUniverseBloodlines200Ok description(String description) {
    this.description = description;
    return this;
  }

  /**
   * description string
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetUniverseBloodlines200Ok intelligence(Integer intelligence) {
    this.intelligence = intelligence;
    return this;
  }

  /**
   * intelligence integer
   * @return intelligence
   */
  @javax.annotation.Nonnull
  public Integer getIntelligence() {
    return intelligence;
  }

  public void setIntelligence(Integer intelligence) {
    this.intelligence = intelligence;
  }


  public GetUniverseBloodlines200Ok memory(Integer memory) {
    this.memory = memory;
    return this;
  }

  /**
   * memory integer
   * @return memory
   */
  @javax.annotation.Nonnull
  public Integer getMemory() {
    return memory;
  }

  public void setMemory(Integer memory) {
    this.memory = memory;
  }


  public GetUniverseBloodlines200Ok name(String name) {
    this.name = name;
    return this;
  }

  /**
   * name string
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetUniverseBloodlines200Ok perception(Integer perception) {
    this.perception = perception;
    return this;
  }

  /**
   * perception integer
   * @return perception
   */
  @javax.annotation.Nonnull
  public Integer getPerception() {
    return perception;
  }

  public void setPerception(Integer perception) {
    this.perception = perception;
  }


  public GetUniverseBloodlines200Ok raceId(Integer raceId) {
    this.raceId = raceId;
    return this;
  }

  /**
   * race_id integer
   * @return raceId
   */
  @javax.annotation.Nonnull
  public Integer getRaceId() {
    return raceId;
  }

  public void setRaceId(Integer raceId) {
    this.raceId = raceId;
  }


  public GetUniverseBloodlines200Ok shipTypeId(Integer shipTypeId) {
    this.shipTypeId = shipTypeId;
    return this;
  }

  /**
   * ship_type_id integer
   * @return shipTypeId
   */
  @javax.annotation.Nonnull
  public Integer getShipTypeId() {
    return shipTypeId;
  }

  public void setShipTypeId(Integer shipTypeId) {
    this.shipTypeId = shipTypeId;
  }


  public GetUniverseBloodlines200Ok willpower(Integer willpower) {
    this.willpower = willpower;
    return this;
  }

  /**
   * willpower integer
   * @return willpower
   */
  @javax.annotation.Nonnull
  public Integer getWillpower() {
    return willpower;
  }

  public void setWillpower(Integer willpower) {
    this.willpower = willpower;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetUniverseBloodlines200Ok getUniverseBloodlines200Ok = (GetUniverseBloodlines200Ok) o;
    return Objects.equals(this.bloodlineId, getUniverseBloodlines200Ok.bloodlineId) &&
        Objects.equals(this.charisma, getUniverseBloodlines200Ok.charisma) &&
        Objects.equals(this.corporationId, getUniverseBloodlines200Ok.corporationId) &&
        Objects.equals(this.description, getUniverseBloodlines200Ok.description) &&
        Objects.equals(this.intelligence, getUniverseBloodlines200Ok.intelligence) &&
        Objects.equals(this.memory, getUniverseBloodlines200Ok.memory) &&
        Objects.equals(this.name, getUniverseBloodlines200Ok.name) &&
        Objects.equals(this.perception, getUniverseBloodlines200Ok.perception) &&
        Objects.equals(this.raceId, getUniverseBloodlines200Ok.raceId) &&
        Objects.equals(this.shipTypeId, getUniverseBloodlines200Ok.shipTypeId) &&
        Objects.equals(this.willpower, getUniverseBloodlines200Ok.willpower);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bloodlineId, charisma, corporationId, description, intelligence, memory, name, perception, raceId, shipTypeId, willpower);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetUniverseBloodlines200Ok {\n");
    sb.append("    bloodlineId: ").append(toIndentedString(bloodlineId)).append("\n");
    sb.append("    charisma: ").append(toIndentedString(charisma)).append("\n");
    sb.append("    corporationId: ").append(toIndentedString(corporationId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    intelligence: ").append(toIndentedString(intelligence)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    perception: ").append(toIndentedString(perception)).append("\n");
    sb.append("    raceId: ").append(toIndentedString(raceId)).append("\n");
    sb.append("    shipTypeId: ").append(toIndentedString(shipTypeId)).append("\n");
    sb.append("    willpower: ").append(toIndentedString(willpower)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bloodline_id");
    openapiFields.add("charisma");
    openapiFields.add("corporation_id");
    openapiFields.add("description");
    openapiFields.add("intelligence");
    openapiFields.add("memory");
    openapiFields.add("name");
    openapiFields.add("perception");
    openapiFields.add("race_id");
    openapiFields.add("ship_type_id");
    openapiFields.add("willpower");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("bloodline_id");
    openapiRequiredFields.add("charisma");
    openapiRequiredFields.add("corporation_id");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("intelligence");
    openapiRequiredFields.add("memory");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("perception");
    openapiRequiredFields.add("race_id");
    openapiRequiredFields.add("ship_type_id");
    openapiRequiredFields.add("willpower");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetUniverseBloodlines200Ok
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetUniverseBloodlines200Ok.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetUniverseBloodlines200Ok is not found in the empty JSON string", GetUniverseBloodlines200Ok.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetUniverseBloodlines200Ok.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetUniverseBloodlines200Ok` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetUniverseBloodlines200Ok.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetUniverseBloodlines200Ok.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetUniverseBloodlines200Ok' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetUniverseBloodlines200Ok> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetUniverseBloodlines200Ok.class));

       return (TypeAdapter<T>) new TypeAdapter<GetUniverseBloodlines200Ok>() {
           @Override
           public void write(JsonWriter out, GetUniverseBloodlines200Ok value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetUniverseBloodlines200Ok read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetUniverseBloodlines200Ok given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetUniverseBloodlines200Ok
   * @throws IOException if the JSON string is invalid with respect to GetUniverseBloodlines200Ok
   */
  public static GetUniverseBloodlines200Ok fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetUniverseBloodlines200Ok.class);
  }

  /**
   * Convert an instance of GetUniverseBloodlines200Ok to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

