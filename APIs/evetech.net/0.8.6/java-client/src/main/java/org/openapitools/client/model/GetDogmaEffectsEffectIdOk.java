/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetDogmaEffectsEffectIdModifier;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetDogmaEffectsEffectIdOk {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISALLOW_AUTO_REPEAT = "disallow_auto_repeat";
  @SerializedName(SERIALIZED_NAME_DISALLOW_AUTO_REPEAT)
  private Boolean disallowAutoRepeat;

  public static final String SERIALIZED_NAME_DISCHARGE_ATTRIBUTE_ID = "discharge_attribute_id";
  @SerializedName(SERIALIZED_NAME_DISCHARGE_ATTRIBUTE_ID)
  private Integer dischargeAttributeId;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_DURATION_ATTRIBUTE_ID = "duration_attribute_id";
  @SerializedName(SERIALIZED_NAME_DURATION_ATTRIBUTE_ID)
  private Integer durationAttributeId;

  public static final String SERIALIZED_NAME_EFFECT_CATEGORY = "effect_category";
  @SerializedName(SERIALIZED_NAME_EFFECT_CATEGORY)
  private Integer effectCategory;

  public static final String SERIALIZED_NAME_EFFECT_ID = "effect_id";
  @SerializedName(SERIALIZED_NAME_EFFECT_ID)
  private Integer effectId;

  public static final String SERIALIZED_NAME_ELECTRONIC_CHANCE = "electronic_chance";
  @SerializedName(SERIALIZED_NAME_ELECTRONIC_CHANCE)
  private Boolean electronicChance;

  public static final String SERIALIZED_NAME_FALLOFF_ATTRIBUTE_ID = "falloff_attribute_id";
  @SerializedName(SERIALIZED_NAME_FALLOFF_ATTRIBUTE_ID)
  private Integer falloffAttributeId;

  public static final String SERIALIZED_NAME_ICON_ID = "icon_id";
  @SerializedName(SERIALIZED_NAME_ICON_ID)
  private Integer iconId;

  public static final String SERIALIZED_NAME_IS_ASSISTANCE = "is_assistance";
  @SerializedName(SERIALIZED_NAME_IS_ASSISTANCE)
  private Boolean isAssistance;

  public static final String SERIALIZED_NAME_IS_OFFENSIVE = "is_offensive";
  @SerializedName(SERIALIZED_NAME_IS_OFFENSIVE)
  private Boolean isOffensive;

  public static final String SERIALIZED_NAME_IS_WARP_SAFE = "is_warp_safe";
  @SerializedName(SERIALIZED_NAME_IS_WARP_SAFE)
  private Boolean isWarpSafe;

  public static final String SERIALIZED_NAME_MODIFIERS = "modifiers";
  @SerializedName(SERIALIZED_NAME_MODIFIERS)
  private List<GetDogmaEffectsEffectIdModifier> modifiers = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POST_EXPRESSION = "post_expression";
  @SerializedName(SERIALIZED_NAME_POST_EXPRESSION)
  private Integer postExpression;

  public static final String SERIALIZED_NAME_PRE_EXPRESSION = "pre_expression";
  @SerializedName(SERIALIZED_NAME_PRE_EXPRESSION)
  private Integer preExpression;

  public static final String SERIALIZED_NAME_PUBLISHED = "published";
  @SerializedName(SERIALIZED_NAME_PUBLISHED)
  private Boolean published;

  public static final String SERIALIZED_NAME_RANGE_ATTRIBUTE_ID = "range_attribute_id";
  @SerializedName(SERIALIZED_NAME_RANGE_ATTRIBUTE_ID)
  private Integer rangeAttributeId;

  public static final String SERIALIZED_NAME_RANGE_CHANCE = "range_chance";
  @SerializedName(SERIALIZED_NAME_RANGE_CHANCE)
  private Boolean rangeChance;

  public static final String SERIALIZED_NAME_TRACKING_SPEED_ATTRIBUTE_ID = "tracking_speed_attribute_id";
  @SerializedName(SERIALIZED_NAME_TRACKING_SPEED_ATTRIBUTE_ID)
  private Integer trackingSpeedAttributeId;

  public GetDogmaEffectsEffectIdOk() {
  }

  public GetDogmaEffectsEffectIdOk description(String description) {
    this.description = description;
    return this;
  }

  /**
   * description string
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetDogmaEffectsEffectIdOk disallowAutoRepeat(Boolean disallowAutoRepeat) {
    this.disallowAutoRepeat = disallowAutoRepeat;
    return this;
  }

  /**
   * disallow_auto_repeat boolean
   * @return disallowAutoRepeat
   */
  @javax.annotation.Nullable
  public Boolean getDisallowAutoRepeat() {
    return disallowAutoRepeat;
  }

  public void setDisallowAutoRepeat(Boolean disallowAutoRepeat) {
    this.disallowAutoRepeat = disallowAutoRepeat;
  }


  public GetDogmaEffectsEffectIdOk dischargeAttributeId(Integer dischargeAttributeId) {
    this.dischargeAttributeId = dischargeAttributeId;
    return this;
  }

  /**
   * discharge_attribute_id integer
   * @return dischargeAttributeId
   */
  @javax.annotation.Nullable
  public Integer getDischargeAttributeId() {
    return dischargeAttributeId;
  }

  public void setDischargeAttributeId(Integer dischargeAttributeId) {
    this.dischargeAttributeId = dischargeAttributeId;
  }


  public GetDogmaEffectsEffectIdOk displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * display_name string
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GetDogmaEffectsEffectIdOk durationAttributeId(Integer durationAttributeId) {
    this.durationAttributeId = durationAttributeId;
    return this;
  }

  /**
   * duration_attribute_id integer
   * @return durationAttributeId
   */
  @javax.annotation.Nullable
  public Integer getDurationAttributeId() {
    return durationAttributeId;
  }

  public void setDurationAttributeId(Integer durationAttributeId) {
    this.durationAttributeId = durationAttributeId;
  }


  public GetDogmaEffectsEffectIdOk effectCategory(Integer effectCategory) {
    this.effectCategory = effectCategory;
    return this;
  }

  /**
   * effect_category integer
   * @return effectCategory
   */
  @javax.annotation.Nullable
  public Integer getEffectCategory() {
    return effectCategory;
  }

  public void setEffectCategory(Integer effectCategory) {
    this.effectCategory = effectCategory;
  }


  public GetDogmaEffectsEffectIdOk effectId(Integer effectId) {
    this.effectId = effectId;
    return this;
  }

  /**
   * effect_id integer
   * @return effectId
   */
  @javax.annotation.Nonnull
  public Integer getEffectId() {
    return effectId;
  }

  public void setEffectId(Integer effectId) {
    this.effectId = effectId;
  }


  public GetDogmaEffectsEffectIdOk electronicChance(Boolean electronicChance) {
    this.electronicChance = electronicChance;
    return this;
  }

  /**
   * electronic_chance boolean
   * @return electronicChance
   */
  @javax.annotation.Nullable
  public Boolean getElectronicChance() {
    return electronicChance;
  }

  public void setElectronicChance(Boolean electronicChance) {
    this.electronicChance = electronicChance;
  }


  public GetDogmaEffectsEffectIdOk falloffAttributeId(Integer falloffAttributeId) {
    this.falloffAttributeId = falloffAttributeId;
    return this;
  }

  /**
   * falloff_attribute_id integer
   * @return falloffAttributeId
   */
  @javax.annotation.Nullable
  public Integer getFalloffAttributeId() {
    return falloffAttributeId;
  }

  public void setFalloffAttributeId(Integer falloffAttributeId) {
    this.falloffAttributeId = falloffAttributeId;
  }


  public GetDogmaEffectsEffectIdOk iconId(Integer iconId) {
    this.iconId = iconId;
    return this;
  }

  /**
   * icon_id integer
   * @return iconId
   */
  @javax.annotation.Nullable
  public Integer getIconId() {
    return iconId;
  }

  public void setIconId(Integer iconId) {
    this.iconId = iconId;
  }


  public GetDogmaEffectsEffectIdOk isAssistance(Boolean isAssistance) {
    this.isAssistance = isAssistance;
    return this;
  }

  /**
   * is_assistance boolean
   * @return isAssistance
   */
  @javax.annotation.Nullable
  public Boolean getIsAssistance() {
    return isAssistance;
  }

  public void setIsAssistance(Boolean isAssistance) {
    this.isAssistance = isAssistance;
  }


  public GetDogmaEffectsEffectIdOk isOffensive(Boolean isOffensive) {
    this.isOffensive = isOffensive;
    return this;
  }

  /**
   * is_offensive boolean
   * @return isOffensive
   */
  @javax.annotation.Nullable
  public Boolean getIsOffensive() {
    return isOffensive;
  }

  public void setIsOffensive(Boolean isOffensive) {
    this.isOffensive = isOffensive;
  }


  public GetDogmaEffectsEffectIdOk isWarpSafe(Boolean isWarpSafe) {
    this.isWarpSafe = isWarpSafe;
    return this;
  }

  /**
   * is_warp_safe boolean
   * @return isWarpSafe
   */
  @javax.annotation.Nullable
  public Boolean getIsWarpSafe() {
    return isWarpSafe;
  }

  public void setIsWarpSafe(Boolean isWarpSafe) {
    this.isWarpSafe = isWarpSafe;
  }


  public GetDogmaEffectsEffectIdOk modifiers(List<GetDogmaEffectsEffectIdModifier> modifiers) {
    this.modifiers = modifiers;
    return this;
  }

  public GetDogmaEffectsEffectIdOk addModifiersItem(GetDogmaEffectsEffectIdModifier modifiersItem) {
    if (this.modifiers == null) {
      this.modifiers = new ArrayList<>();
    }
    this.modifiers.add(modifiersItem);
    return this;
  }

  /**
   * modifiers array
   * @return modifiers
   */
  @javax.annotation.Nullable
  public List<GetDogmaEffectsEffectIdModifier> getModifiers() {
    return modifiers;
  }

  public void setModifiers(List<GetDogmaEffectsEffectIdModifier> modifiers) {
    this.modifiers = modifiers;
  }


  public GetDogmaEffectsEffectIdOk name(String name) {
    this.name = name;
    return this;
  }

  /**
   * name string
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetDogmaEffectsEffectIdOk postExpression(Integer postExpression) {
    this.postExpression = postExpression;
    return this;
  }

  /**
   * post_expression integer
   * @return postExpression
   */
  @javax.annotation.Nullable
  public Integer getPostExpression() {
    return postExpression;
  }

  public void setPostExpression(Integer postExpression) {
    this.postExpression = postExpression;
  }


  public GetDogmaEffectsEffectIdOk preExpression(Integer preExpression) {
    this.preExpression = preExpression;
    return this;
  }

  /**
   * pre_expression integer
   * @return preExpression
   */
  @javax.annotation.Nullable
  public Integer getPreExpression() {
    return preExpression;
  }

  public void setPreExpression(Integer preExpression) {
    this.preExpression = preExpression;
  }


  public GetDogmaEffectsEffectIdOk published(Boolean published) {
    this.published = published;
    return this;
  }

  /**
   * published boolean
   * @return published
   */
  @javax.annotation.Nullable
  public Boolean getPublished() {
    return published;
  }

  public void setPublished(Boolean published) {
    this.published = published;
  }


  public GetDogmaEffectsEffectIdOk rangeAttributeId(Integer rangeAttributeId) {
    this.rangeAttributeId = rangeAttributeId;
    return this;
  }

  /**
   * range_attribute_id integer
   * @return rangeAttributeId
   */
  @javax.annotation.Nullable
  public Integer getRangeAttributeId() {
    return rangeAttributeId;
  }

  public void setRangeAttributeId(Integer rangeAttributeId) {
    this.rangeAttributeId = rangeAttributeId;
  }


  public GetDogmaEffectsEffectIdOk rangeChance(Boolean rangeChance) {
    this.rangeChance = rangeChance;
    return this;
  }

  /**
   * range_chance boolean
   * @return rangeChance
   */
  @javax.annotation.Nullable
  public Boolean getRangeChance() {
    return rangeChance;
  }

  public void setRangeChance(Boolean rangeChance) {
    this.rangeChance = rangeChance;
  }


  public GetDogmaEffectsEffectIdOk trackingSpeedAttributeId(Integer trackingSpeedAttributeId) {
    this.trackingSpeedAttributeId = trackingSpeedAttributeId;
    return this;
  }

  /**
   * tracking_speed_attribute_id integer
   * @return trackingSpeedAttributeId
   */
  @javax.annotation.Nullable
  public Integer getTrackingSpeedAttributeId() {
    return trackingSpeedAttributeId;
  }

  public void setTrackingSpeedAttributeId(Integer trackingSpeedAttributeId) {
    this.trackingSpeedAttributeId = trackingSpeedAttributeId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDogmaEffectsEffectIdOk getDogmaEffectsEffectIdOk = (GetDogmaEffectsEffectIdOk) o;
    return Objects.equals(this.description, getDogmaEffectsEffectIdOk.description) &&
        Objects.equals(this.disallowAutoRepeat, getDogmaEffectsEffectIdOk.disallowAutoRepeat) &&
        Objects.equals(this.dischargeAttributeId, getDogmaEffectsEffectIdOk.dischargeAttributeId) &&
        Objects.equals(this.displayName, getDogmaEffectsEffectIdOk.displayName) &&
        Objects.equals(this.durationAttributeId, getDogmaEffectsEffectIdOk.durationAttributeId) &&
        Objects.equals(this.effectCategory, getDogmaEffectsEffectIdOk.effectCategory) &&
        Objects.equals(this.effectId, getDogmaEffectsEffectIdOk.effectId) &&
        Objects.equals(this.electronicChance, getDogmaEffectsEffectIdOk.electronicChance) &&
        Objects.equals(this.falloffAttributeId, getDogmaEffectsEffectIdOk.falloffAttributeId) &&
        Objects.equals(this.iconId, getDogmaEffectsEffectIdOk.iconId) &&
        Objects.equals(this.isAssistance, getDogmaEffectsEffectIdOk.isAssistance) &&
        Objects.equals(this.isOffensive, getDogmaEffectsEffectIdOk.isOffensive) &&
        Objects.equals(this.isWarpSafe, getDogmaEffectsEffectIdOk.isWarpSafe) &&
        Objects.equals(this.modifiers, getDogmaEffectsEffectIdOk.modifiers) &&
        Objects.equals(this.name, getDogmaEffectsEffectIdOk.name) &&
        Objects.equals(this.postExpression, getDogmaEffectsEffectIdOk.postExpression) &&
        Objects.equals(this.preExpression, getDogmaEffectsEffectIdOk.preExpression) &&
        Objects.equals(this.published, getDogmaEffectsEffectIdOk.published) &&
        Objects.equals(this.rangeAttributeId, getDogmaEffectsEffectIdOk.rangeAttributeId) &&
        Objects.equals(this.rangeChance, getDogmaEffectsEffectIdOk.rangeChance) &&
        Objects.equals(this.trackingSpeedAttributeId, getDogmaEffectsEffectIdOk.trackingSpeedAttributeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, disallowAutoRepeat, dischargeAttributeId, displayName, durationAttributeId, effectCategory, effectId, electronicChance, falloffAttributeId, iconId, isAssistance, isOffensive, isWarpSafe, modifiers, name, postExpression, preExpression, published, rangeAttributeId, rangeChance, trackingSpeedAttributeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDogmaEffectsEffectIdOk {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disallowAutoRepeat: ").append(toIndentedString(disallowAutoRepeat)).append("\n");
    sb.append("    dischargeAttributeId: ").append(toIndentedString(dischargeAttributeId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    durationAttributeId: ").append(toIndentedString(durationAttributeId)).append("\n");
    sb.append("    effectCategory: ").append(toIndentedString(effectCategory)).append("\n");
    sb.append("    effectId: ").append(toIndentedString(effectId)).append("\n");
    sb.append("    electronicChance: ").append(toIndentedString(electronicChance)).append("\n");
    sb.append("    falloffAttributeId: ").append(toIndentedString(falloffAttributeId)).append("\n");
    sb.append("    iconId: ").append(toIndentedString(iconId)).append("\n");
    sb.append("    isAssistance: ").append(toIndentedString(isAssistance)).append("\n");
    sb.append("    isOffensive: ").append(toIndentedString(isOffensive)).append("\n");
    sb.append("    isWarpSafe: ").append(toIndentedString(isWarpSafe)).append("\n");
    sb.append("    modifiers: ").append(toIndentedString(modifiers)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    postExpression: ").append(toIndentedString(postExpression)).append("\n");
    sb.append("    preExpression: ").append(toIndentedString(preExpression)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    rangeAttributeId: ").append(toIndentedString(rangeAttributeId)).append("\n");
    sb.append("    rangeChance: ").append(toIndentedString(rangeChance)).append("\n");
    sb.append("    trackingSpeedAttributeId: ").append(toIndentedString(trackingSpeedAttributeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("disallow_auto_repeat");
    openapiFields.add("discharge_attribute_id");
    openapiFields.add("display_name");
    openapiFields.add("duration_attribute_id");
    openapiFields.add("effect_category");
    openapiFields.add("effect_id");
    openapiFields.add("electronic_chance");
    openapiFields.add("falloff_attribute_id");
    openapiFields.add("icon_id");
    openapiFields.add("is_assistance");
    openapiFields.add("is_offensive");
    openapiFields.add("is_warp_safe");
    openapiFields.add("modifiers");
    openapiFields.add("name");
    openapiFields.add("post_expression");
    openapiFields.add("pre_expression");
    openapiFields.add("published");
    openapiFields.add("range_attribute_id");
    openapiFields.add("range_chance");
    openapiFields.add("tracking_speed_attribute_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("effect_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetDogmaEffectsEffectIdOk
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetDogmaEffectsEffectIdOk.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetDogmaEffectsEffectIdOk is not found in the empty JSON string", GetDogmaEffectsEffectIdOk.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetDogmaEffectsEffectIdOk.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetDogmaEffectsEffectIdOk` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetDogmaEffectsEffectIdOk.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if (jsonObj.get("modifiers") != null && !jsonObj.get("modifiers").isJsonNull()) {
        JsonArray jsonArraymodifiers = jsonObj.getAsJsonArray("modifiers");
        if (jsonArraymodifiers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("modifiers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `modifiers` to be an array in the JSON string but got `%s`", jsonObj.get("modifiers").toString()));
          }

          // validate the optional field `modifiers` (array)
          for (int i = 0; i < jsonArraymodifiers.size(); i++) {
            GetDogmaEffectsEffectIdModifier.validateJsonElement(jsonArraymodifiers.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetDogmaEffectsEffectIdOk.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetDogmaEffectsEffectIdOk' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetDogmaEffectsEffectIdOk> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetDogmaEffectsEffectIdOk.class));

       return (TypeAdapter<T>) new TypeAdapter<GetDogmaEffectsEffectIdOk>() {
           @Override
           public void write(JsonWriter out, GetDogmaEffectsEffectIdOk value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetDogmaEffectsEffectIdOk read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetDogmaEffectsEffectIdOk given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetDogmaEffectsEffectIdOk
   * @throws IOException if the JSON string is invalid with respect to GetDogmaEffectsEffectIdOk
   */
  public static GetDogmaEffectsEffectIdOk fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetDogmaEffectsEffectIdOk.class);
  }

  /**
   * Convert an instance of GetDogmaEffectsEffectIdOk to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

