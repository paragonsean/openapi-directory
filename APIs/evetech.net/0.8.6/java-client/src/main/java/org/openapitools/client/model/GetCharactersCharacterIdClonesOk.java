/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetCharactersCharacterIdClonesHomeLocation;
import org.openapitools.client.model.GetCharactersCharacterIdClonesJumpClone;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:54.306821-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetCharactersCharacterIdClonesOk {
  public static final String SERIALIZED_NAME_HOME_LOCATION = "home_location";
  @SerializedName(SERIALIZED_NAME_HOME_LOCATION)
  private GetCharactersCharacterIdClonesHomeLocation homeLocation;

  public static final String SERIALIZED_NAME_JUMP_CLONES = "jump_clones";
  @SerializedName(SERIALIZED_NAME_JUMP_CLONES)
  private List<GetCharactersCharacterIdClonesJumpClone> jumpClones = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_CLONE_JUMP_DATE = "last_clone_jump_date";
  @SerializedName(SERIALIZED_NAME_LAST_CLONE_JUMP_DATE)
  private OffsetDateTime lastCloneJumpDate;

  public static final String SERIALIZED_NAME_LAST_STATION_CHANGE_DATE = "last_station_change_date";
  @SerializedName(SERIALIZED_NAME_LAST_STATION_CHANGE_DATE)
  private OffsetDateTime lastStationChangeDate;

  public GetCharactersCharacterIdClonesOk() {
  }

  public GetCharactersCharacterIdClonesOk homeLocation(GetCharactersCharacterIdClonesHomeLocation homeLocation) {
    this.homeLocation = homeLocation;
    return this;
  }

  /**
   * Get homeLocation
   * @return homeLocation
   */
  @javax.annotation.Nullable
  public GetCharactersCharacterIdClonesHomeLocation getHomeLocation() {
    return homeLocation;
  }

  public void setHomeLocation(GetCharactersCharacterIdClonesHomeLocation homeLocation) {
    this.homeLocation = homeLocation;
  }


  public GetCharactersCharacterIdClonesOk jumpClones(List<GetCharactersCharacterIdClonesJumpClone> jumpClones) {
    this.jumpClones = jumpClones;
    return this;
  }

  public GetCharactersCharacterIdClonesOk addJumpClonesItem(GetCharactersCharacterIdClonesJumpClone jumpClonesItem) {
    if (this.jumpClones == null) {
      this.jumpClones = new ArrayList<>();
    }
    this.jumpClones.add(jumpClonesItem);
    return this;
  }

  /**
   * jump_clones array
   * @return jumpClones
   */
  @javax.annotation.Nonnull
  public List<GetCharactersCharacterIdClonesJumpClone> getJumpClones() {
    return jumpClones;
  }

  public void setJumpClones(List<GetCharactersCharacterIdClonesJumpClone> jumpClones) {
    this.jumpClones = jumpClones;
  }


  public GetCharactersCharacterIdClonesOk lastCloneJumpDate(OffsetDateTime lastCloneJumpDate) {
    this.lastCloneJumpDate = lastCloneJumpDate;
    return this;
  }

  /**
   * last_clone_jump_date string
   * @return lastCloneJumpDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastCloneJumpDate() {
    return lastCloneJumpDate;
  }

  public void setLastCloneJumpDate(OffsetDateTime lastCloneJumpDate) {
    this.lastCloneJumpDate = lastCloneJumpDate;
  }


  public GetCharactersCharacterIdClonesOk lastStationChangeDate(OffsetDateTime lastStationChangeDate) {
    this.lastStationChangeDate = lastStationChangeDate;
    return this;
  }

  /**
   * last_station_change_date string
   * @return lastStationChangeDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastStationChangeDate() {
    return lastStationChangeDate;
  }

  public void setLastStationChangeDate(OffsetDateTime lastStationChangeDate) {
    this.lastStationChangeDate = lastStationChangeDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCharactersCharacterIdClonesOk getCharactersCharacterIdClonesOk = (GetCharactersCharacterIdClonesOk) o;
    return Objects.equals(this.homeLocation, getCharactersCharacterIdClonesOk.homeLocation) &&
        Objects.equals(this.jumpClones, getCharactersCharacterIdClonesOk.jumpClones) &&
        Objects.equals(this.lastCloneJumpDate, getCharactersCharacterIdClonesOk.lastCloneJumpDate) &&
        Objects.equals(this.lastStationChangeDate, getCharactersCharacterIdClonesOk.lastStationChangeDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(homeLocation, jumpClones, lastCloneJumpDate, lastStationChangeDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCharactersCharacterIdClonesOk {\n");
    sb.append("    homeLocation: ").append(toIndentedString(homeLocation)).append("\n");
    sb.append("    jumpClones: ").append(toIndentedString(jumpClones)).append("\n");
    sb.append("    lastCloneJumpDate: ").append(toIndentedString(lastCloneJumpDate)).append("\n");
    sb.append("    lastStationChangeDate: ").append(toIndentedString(lastStationChangeDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("home_location");
    openapiFields.add("jump_clones");
    openapiFields.add("last_clone_jump_date");
    openapiFields.add("last_station_change_date");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("jump_clones");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetCharactersCharacterIdClonesOk
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetCharactersCharacterIdClonesOk.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetCharactersCharacterIdClonesOk is not found in the empty JSON string", GetCharactersCharacterIdClonesOk.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetCharactersCharacterIdClonesOk.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetCharactersCharacterIdClonesOk` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetCharactersCharacterIdClonesOk.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `home_location`
      if (jsonObj.get("home_location") != null && !jsonObj.get("home_location").isJsonNull()) {
        GetCharactersCharacterIdClonesHomeLocation.validateJsonElement(jsonObj.get("home_location"));
      }
      // ensure the json data is an array
      if (!jsonObj.get("jump_clones").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `jump_clones` to be an array in the JSON string but got `%s`", jsonObj.get("jump_clones").toString()));
      }

      JsonArray jsonArrayjumpClones = jsonObj.getAsJsonArray("jump_clones");
      // validate the required field `jump_clones` (array)
      for (int i = 0; i < jsonArrayjumpClones.size(); i++) {
        GetCharactersCharacterIdClonesJumpClone.validateJsonElement(jsonArrayjumpClones.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetCharactersCharacterIdClonesOk.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetCharactersCharacterIdClonesOk' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetCharactersCharacterIdClonesOk> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetCharactersCharacterIdClonesOk.class));

       return (TypeAdapter<T>) new TypeAdapter<GetCharactersCharacterIdClonesOk>() {
           @Override
           public void write(JsonWriter out, GetCharactersCharacterIdClonesOk value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetCharactersCharacterIdClonesOk read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetCharactersCharacterIdClonesOk given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetCharactersCharacterIdClonesOk
   * @throws IOException if the JSON string is invalid with respect to GetCharactersCharacterIdClonesOk
   */
  public static GetCharactersCharacterIdClonesOk fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetCharactersCharacterIdClonesOk.class);
  }

  /**
   * Convert an instance of GetCharactersCharacterIdClonesOk to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

