/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BadRequest;
import org.openapitools.client.model.ErrorLimited;
import org.openapitools.client.model.Forbidden;
import org.openapitools.client.model.GatewayTimeout;
import org.openapitools.client.model.GetCharactersCharacterIdFwStatsOk;
import org.openapitools.client.model.GetCorporationsCorporationIdFwStatsOk;
import org.openapitools.client.model.GetFwLeaderboardsCharactersOk;
import org.openapitools.client.model.GetFwLeaderboardsCorporationsOk;
import org.openapitools.client.model.GetFwLeaderboardsOk;
import org.openapitools.client.model.GetFwStats200Ok;
import org.openapitools.client.model.GetFwSystems200Ok;
import org.openapitools.client.model.GetFwWars200Ok;
import org.openapitools.client.model.InternalServerError;
import org.openapitools.client.model.ServiceUnavailable;
import org.openapitools.client.model.Unauthorized;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FactionWarfareApi
 */
@Disabled
public class FactionWarfareApiTest {

    private final FactionWarfareApi api = new FactionWarfareApi();

    /**
     * Overview of a character involved in faction warfare
     *
     * Statistical overview of a character involved in faction warfare  --- Alternate route: &#x60;/dev/characters/{character_id}/fw/stats/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/fw/stats/&#x60;  Alternate route: &#x60;/v1/characters/{character_id}/fw/stats/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdFwStatsTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String ifNoneMatch = null;
        String token = null;
        GetCharactersCharacterIdFwStatsOk response = api.getCharactersCharacterIdFwStats(characterId, datasource, ifNoneMatch, token);
        // TODO: test validations
    }

    /**
     * Overview of a corporation involved in faction warfare
     *
     * Statistics about a corporation involved in faction warfare  --- Alternate route: &#x60;/dev/corporations/{corporation_id}/fw/stats/&#x60;  Alternate route: &#x60;/legacy/corporations/{corporation_id}/fw/stats/&#x60;  Alternate route: &#x60;/v1/corporations/{corporation_id}/fw/stats/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdFwStatsTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String ifNoneMatch = null;
        String token = null;
        GetCorporationsCorporationIdFwStatsOk response = api.getCorporationsCorporationIdFwStats(corporationId, datasource, ifNoneMatch, token);
        // TODO: test validations
    }

    /**
     * List of the top factions in faction warfare
     *
     * Top 4 leaderboard of factions for kills and victory points separated by total, last week and yesterday  --- Alternate route: &#x60;/dev/fw/leaderboards/&#x60;  Alternate route: &#x60;/legacy/fw/leaderboards/&#x60;  Alternate route: &#x60;/v1/fw/leaderboards/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFwLeaderboardsTest() throws ApiException {
        String datasource = null;
        String ifNoneMatch = null;
        GetFwLeaderboardsOk response = api.getFwLeaderboards(datasource, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * List of the top pilots in faction warfare
     *
     * Top 100 leaderboard of pilots for kills and victory points separated by total, last week and yesterday  --- Alternate route: &#x60;/dev/fw/leaderboards/characters/&#x60;  Alternate route: &#x60;/legacy/fw/leaderboards/characters/&#x60;  Alternate route: &#x60;/v1/fw/leaderboards/characters/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFwLeaderboardsCharactersTest() throws ApiException {
        String datasource = null;
        String ifNoneMatch = null;
        GetFwLeaderboardsCharactersOk response = api.getFwLeaderboardsCharacters(datasource, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * List of the top corporations in faction warfare
     *
     * Top 10 leaderboard of corporations for kills and victory points separated by total, last week and yesterday  --- Alternate route: &#x60;/dev/fw/leaderboards/corporations/&#x60;  Alternate route: &#x60;/legacy/fw/leaderboards/corporations/&#x60;  Alternate route: &#x60;/v1/fw/leaderboards/corporations/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFwLeaderboardsCorporationsTest() throws ApiException {
        String datasource = null;
        String ifNoneMatch = null;
        GetFwLeaderboardsCorporationsOk response = api.getFwLeaderboardsCorporations(datasource, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * An overview of statistics about factions involved in faction warfare
     *
     * Statistical overviews of factions involved in faction warfare  --- Alternate route: &#x60;/dev/fw/stats/&#x60;  Alternate route: &#x60;/legacy/fw/stats/&#x60;  Alternate route: &#x60;/v1/fw/stats/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFwStatsTest() throws ApiException {
        String datasource = null;
        String ifNoneMatch = null;
        List<GetFwStats200Ok> response = api.getFwStats(datasource, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Ownership of faction warfare systems
     *
     * An overview of the current ownership of faction warfare solar systems  --- Alternate route: &#x60;/dev/fw/systems/&#x60;  Alternate route: &#x60;/v2/fw/systems/&#x60;  --- This route is cached for up to 1800 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFwSystemsTest() throws ApiException {
        String datasource = null;
        String ifNoneMatch = null;
        List<GetFwSystems200Ok> response = api.getFwSystems(datasource, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Data about which NPC factions are at war
     *
     * Data about which NPC factions are at war  --- Alternate route: &#x60;/dev/fw/wars/&#x60;  Alternate route: &#x60;/legacy/fw/wars/&#x60;  Alternate route: &#x60;/v1/fw/wars/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFwWarsTest() throws ApiException {
        String datasource = null;
        String ifNoneMatch = null;
        List<GetFwWars200Ok> response = api.getFwWars(datasource, ifNoneMatch);
        // TODO: test validations
    }

}
