/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BadRequest;
import org.openapitools.client.model.ErrorLimited;
import org.openapitools.client.model.Forbidden;
import org.openapitools.client.model.GatewayTimeout;
import org.openapitools.client.model.GetCharactersCharacterIdOrders200Ok;
import org.openapitools.client.model.GetCharactersCharacterIdOrdersHistory200Ok;
import org.openapitools.client.model.GetCorporationsCorporationIdOrders200Ok;
import org.openapitools.client.model.GetCorporationsCorporationIdOrdersHistory200Ok;
import org.openapitools.client.model.GetMarketsGroupsMarketGroupIdNotFound;
import org.openapitools.client.model.GetMarketsGroupsMarketGroupIdOk;
import org.openapitools.client.model.GetMarketsPrices200Ok;
import org.openapitools.client.model.GetMarketsRegionIdHistory200Ok;
import org.openapitools.client.model.GetMarketsRegionIdHistoryError520;
import org.openapitools.client.model.GetMarketsRegionIdHistoryNotFound;
import org.openapitools.client.model.GetMarketsRegionIdHistoryUnprocessableEntity;
import org.openapitools.client.model.GetMarketsRegionIdOrders200Ok;
import org.openapitools.client.model.GetMarketsRegionIdOrdersNotFound;
import org.openapitools.client.model.GetMarketsRegionIdOrdersUnprocessableEntity;
import org.openapitools.client.model.GetMarketsStructuresStructureId200Ok;
import org.openapitools.client.model.InternalServerError;
import org.openapitools.client.model.ServiceUnavailable;
import org.openapitools.client.model.Unauthorized;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MarketApi
 */
@Disabled
public class MarketApiTest {

    private final MarketApi api = new MarketApi();

    /**
     * List open orders from a character
     *
     * List open market orders placed by a character  --- Alternate route: &#x60;/dev/characters/{character_id}/orders/&#x60;  Alternate route: &#x60;/v2/characters/{character_id}/orders/&#x60;  --- This route is cached for up to 1200 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdOrdersTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String ifNoneMatch = null;
        String token = null;
        List<GetCharactersCharacterIdOrders200Ok> response = api.getCharactersCharacterIdOrders(characterId, datasource, ifNoneMatch, token);
        // TODO: test validations
    }

    /**
     * List historical orders by a character
     *
     * List cancelled and expired market orders placed by a character up to 90 days in the past.  --- Alternate route: &#x60;/dev/characters/{character_id}/orders/history/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/orders/history/&#x60;  Alternate route: &#x60;/v1/characters/{character_id}/orders/history/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdOrdersHistoryTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<GetCharactersCharacterIdOrdersHistory200Ok> response = api.getCharactersCharacterIdOrdersHistory(characterId, datasource, ifNoneMatch, page, token);
        // TODO: test validations
    }

    /**
     * List open orders from a corporation
     *
     * List open market orders placed on behalf of a corporation  --- Alternate route: &#x60;/dev/corporations/{corporation_id}/orders/&#x60;  Alternate route: &#x60;/v3/corporations/{corporation_id}/orders/&#x60;  --- This route is cached for up to 1200 seconds  --- Requires one of the following EVE corporation role(s): Accountant, Trader 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdOrdersTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<GetCorporationsCorporationIdOrders200Ok> response = api.getCorporationsCorporationIdOrders(corporationId, datasource, ifNoneMatch, page, token);
        // TODO: test validations
    }

    /**
     * List historical orders from a corporation
     *
     * List cancelled and expired market orders placed on behalf of a corporation up to 90 days in the past.  --- Alternate route: &#x60;/dev/corporations/{corporation_id}/orders/history/&#x60;  Alternate route: &#x60;/v2/corporations/{corporation_id}/orders/history/&#x60;  --- This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Accountant, Trader 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdOrdersHistoryTest() throws ApiException {
        Integer corporationId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<GetCorporationsCorporationIdOrdersHistory200Ok> response = api.getCorporationsCorporationIdOrdersHistory(corporationId, datasource, ifNoneMatch, page, token);
        // TODO: test validations
    }

    /**
     * Get item groups
     *
     * Get a list of item groups  --- Alternate route: &#x60;/dev/markets/groups/&#x60;  Alternate route: &#x60;/legacy/markets/groups/&#x60;  Alternate route: &#x60;/v1/markets/groups/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMarketsGroupsTest() throws ApiException {
        String datasource = null;
        String ifNoneMatch = null;
        List<Integer> response = api.getMarketsGroups(datasource, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Get item group information
     *
     * Get information on an item group  --- Alternate route: &#x60;/dev/markets/groups/{market_group_id}/&#x60;  Alternate route: &#x60;/legacy/markets/groups/{market_group_id}/&#x60;  Alternate route: &#x60;/v1/markets/groups/{market_group_id}/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMarketsGroupsMarketGroupIdTest() throws ApiException {
        Integer marketGroupId = null;
        String acceptLanguage = null;
        String datasource = null;
        String ifNoneMatch = null;
        String language = null;
        GetMarketsGroupsMarketGroupIdOk response = api.getMarketsGroupsMarketGroupId(marketGroupId, acceptLanguage, datasource, ifNoneMatch, language);
        // TODO: test validations
    }

    /**
     * List market prices
     *
     * Return a list of prices  --- Alternate route: &#x60;/dev/markets/prices/&#x60;  Alternate route: &#x60;/legacy/markets/prices/&#x60;  Alternate route: &#x60;/v1/markets/prices/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMarketsPricesTest() throws ApiException {
        String datasource = null;
        String ifNoneMatch = null;
        List<GetMarketsPrices200Ok> response = api.getMarketsPrices(datasource, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * List historical market statistics in a region
     *
     * Return a list of historical market statistics for the specified type in a region  --- Alternate route: &#x60;/dev/markets/{region_id}/history/&#x60;  Alternate route: &#x60;/legacy/markets/{region_id}/history/&#x60;  Alternate route: &#x60;/v1/markets/{region_id}/history/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMarketsRegionIdHistoryTest() throws ApiException {
        Integer regionId = null;
        Integer typeId = null;
        String datasource = null;
        String ifNoneMatch = null;
        List<GetMarketsRegionIdHistory200Ok> response = api.getMarketsRegionIdHistory(regionId, typeId, datasource, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * List orders in a region
     *
     * Return a list of orders in a region  --- Alternate route: &#x60;/dev/markets/{region_id}/orders/&#x60;  Alternate route: &#x60;/legacy/markets/{region_id}/orders/&#x60;  Alternate route: &#x60;/v1/markets/{region_id}/orders/&#x60;  --- This route is cached for up to 300 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMarketsRegionIdOrdersTest() throws ApiException {
        String orderType = null;
        Integer regionId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        Integer typeId = null;
        List<GetMarketsRegionIdOrders200Ok> response = api.getMarketsRegionIdOrders(orderType, regionId, datasource, ifNoneMatch, page, typeId);
        // TODO: test validations
    }

    /**
     * List type IDs relevant to a market
     *
     * Return a list of type IDs that have active orders in the region, for efficient market indexing.  --- Alternate route: &#x60;/dev/markets/{region_id}/types/&#x60;  Alternate route: &#x60;/legacy/markets/{region_id}/types/&#x60;  Alternate route: &#x60;/v1/markets/{region_id}/types/&#x60;  --- This route is cached for up to 600 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMarketsRegionIdTypesTest() throws ApiException {
        Integer regionId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        List<Integer> response = api.getMarketsRegionIdTypes(regionId, datasource, ifNoneMatch, page);
        // TODO: test validations
    }

    /**
     * List orders in a structure
     *
     * Return all orders in a structure  --- Alternate route: &#x60;/dev/markets/structures/{structure_id}/&#x60;  Alternate route: &#x60;/legacy/markets/structures/{structure_id}/&#x60;  Alternate route: &#x60;/v1/markets/structures/{structure_id}/&#x60;  --- This route is cached for up to 300 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMarketsStructuresStructureIdTest() throws ApiException {
        Long structureId = null;
        String datasource = null;
        String ifNoneMatch = null;
        Integer page = null;
        String token = null;
        List<GetMarketsStructuresStructureId200Ok> response = api.getMarketsStructuresStructureId(structureId, datasource, ifNoneMatch, page, token);
        // TODO: test validations
    }

}
