/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BadRequest;
import org.openapitools.client.model.ErrorLimited;
import org.openapitools.client.model.Forbidden;
import org.openapitools.client.model.GatewayTimeout;
import org.openapitools.client.model.GetCharactersCharacterIdFittings200Ok;
import org.openapitools.client.model.InternalServerError;
import org.openapitools.client.model.PostCharactersCharacterIdFittingsCreated;
import org.openapitools.client.model.PostCharactersCharacterIdFittingsFitting;
import org.openapitools.client.model.ServiceUnavailable;
import org.openapitools.client.model.Unauthorized;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FittingsApi
 */
@Disabled
public class FittingsApiTest {

    private final FittingsApi api = new FittingsApi();

    /**
     * Delete fitting
     *
     * Delete a fitting from a character  --- Alternate route: &#x60;/dev/characters/{character_id}/fittings/{fitting_id}/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/fittings/{fitting_id}/&#x60;  Alternate route: &#x60;/v1/characters/{character_id}/fittings/{fitting_id}/&#x60; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCharactersCharacterIdFittingsFittingIdTest() throws ApiException {
        Integer characterId = null;
        Integer fittingId = null;
        String datasource = null;
        String token = null;
        api.deleteCharactersCharacterIdFittingsFittingId(characterId, fittingId, datasource, token);
        // TODO: test validations
    }

    /**
     * Get fittings
     *
     * Return fittings of a character  --- Alternate route: &#x60;/dev/characters/{character_id}/fittings/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/fittings/&#x60;  Alternate route: &#x60;/v1/characters/{character_id}/fittings/&#x60;  --- This route is cached for up to 300 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdFittingsTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String ifNoneMatch = null;
        String token = null;
        List<GetCharactersCharacterIdFittings200Ok> response = api.getCharactersCharacterIdFittings(characterId, datasource, ifNoneMatch, token);
        // TODO: test validations
    }

    /**
     * Create fitting
     *
     * Save a new fitting for a character  --- Alternate route: &#x60;/dev/characters/{character_id}/fittings/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/fittings/&#x60;  Alternate route: &#x60;/v1/characters/{character_id}/fittings/&#x60; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCharactersCharacterIdFittingsTest() throws ApiException {
        Integer characterId = null;
        PostCharactersCharacterIdFittingsFitting fitting = null;
        String datasource = null;
        String token = null;
        PostCharactersCharacterIdFittingsCreated response = api.postCharactersCharacterIdFittings(characterId, fitting, datasource, token);
        // TODO: test validations
    }

}
