/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BadRequest;
import org.openapitools.client.model.ErrorLimited;
import org.openapitools.client.model.Forbidden;
import org.openapitools.client.model.GatewayTimeout;
import org.openapitools.client.model.GetCharactersCharacterIdOpportunities200Ok;
import org.openapitools.client.model.GetOpportunitiesGroupsGroupIdOk;
import org.openapitools.client.model.GetOpportunitiesTasksTaskIdOk;
import org.openapitools.client.model.InternalServerError;
import org.openapitools.client.model.ServiceUnavailable;
import org.openapitools.client.model.Unauthorized;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OpportunitiesApi
 */
@Disabled
public class OpportunitiesApiTest {

    private final OpportunitiesApi api = new OpportunitiesApi();

    /**
     * Get a character&#39;s completed tasks
     *
     * Return a list of tasks finished by a character  --- Alternate route: &#x60;/dev/characters/{character_id}/opportunities/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/opportunities/&#x60;  Alternate route: &#x60;/v1/characters/{character_id}/opportunities/&#x60;  --- This route is cached for up to 3600 seconds
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdOpportunitiesTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String ifNoneMatch = null;
        String token = null;
        List<GetCharactersCharacterIdOpportunities200Ok> response = api.getCharactersCharacterIdOpportunities(characterId, datasource, ifNoneMatch, token);
        // TODO: test validations
    }

    /**
     * Get opportunities groups
     *
     * Return a list of opportunities groups  --- Alternate route: &#x60;/dev/opportunities/groups/&#x60;  Alternate route: &#x60;/legacy/opportunities/groups/&#x60;  Alternate route: &#x60;/v1/opportunities/groups/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOpportunitiesGroupsTest() throws ApiException {
        String datasource = null;
        String ifNoneMatch = null;
        List<Integer> response = api.getOpportunitiesGroups(datasource, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Get opportunities group
     *
     * Return information of an opportunities group  --- Alternate route: &#x60;/dev/opportunities/groups/{group_id}/&#x60;  Alternate route: &#x60;/legacy/opportunities/groups/{group_id}/&#x60;  Alternate route: &#x60;/v1/opportunities/groups/{group_id}/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOpportunitiesGroupsGroupIdTest() throws ApiException {
        Integer groupId = null;
        String acceptLanguage = null;
        String datasource = null;
        String ifNoneMatch = null;
        String language = null;
        GetOpportunitiesGroupsGroupIdOk response = api.getOpportunitiesGroupsGroupId(groupId, acceptLanguage, datasource, ifNoneMatch, language);
        // TODO: test validations
    }

    /**
     * Get opportunities tasks
     *
     * Return a list of opportunities tasks  --- Alternate route: &#x60;/dev/opportunities/tasks/&#x60;  Alternate route: &#x60;/legacy/opportunities/tasks/&#x60;  Alternate route: &#x60;/v1/opportunities/tasks/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOpportunitiesTasksTest() throws ApiException {
        String datasource = null;
        String ifNoneMatch = null;
        List<Integer> response = api.getOpportunitiesTasks(datasource, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Get opportunities task
     *
     * Return information of an opportunities task  --- Alternate route: &#x60;/dev/opportunities/tasks/{task_id}/&#x60;  Alternate route: &#x60;/legacy/opportunities/tasks/{task_id}/&#x60;  Alternate route: &#x60;/v1/opportunities/tasks/{task_id}/&#x60;  --- This route expires daily at 11:05
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOpportunitiesTasksTaskIdTest() throws ApiException {
        Integer taskId = null;
        String datasource = null;
        String ifNoneMatch = null;
        GetOpportunitiesTasksTaskIdOk response = api.getOpportunitiesTasksTaskId(taskId, datasource, ifNoneMatch);
        // TODO: test validations
    }

}
