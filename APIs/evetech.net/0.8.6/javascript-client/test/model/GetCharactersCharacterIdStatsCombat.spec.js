/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetCharactersCharacterIdStatsCombat', function() {
    it('should create an instance of GetCharactersCharacterIdStatsCombat', function() {
      // uncomment below and update the code to test GetCharactersCharacterIdStatsCombat
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be.a(EveSwaggerInterface.GetCharactersCharacterIdStatsCombat);
    });

    it('should have the property capDrainedbyNpc (base name: "cap_drainedby_npc")', function() {
      // uncomment below and update the code to test the property capDrainedbyNpc
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property capDrainedbyPc (base name: "cap_drainedby_pc")', function() {
      // uncomment below and update the code to test the property capDrainedbyPc
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property capDrainingPc (base name: "cap_draining_pc")', function() {
      // uncomment below and update the code to test the property capDrainingPc
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property criminalFlagSet (base name: "criminal_flag_set")', function() {
      // uncomment below and update the code to test the property criminalFlagSet
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromNpCsAmount (base name: "damage_from_np_cs_amount")', function() {
      // uncomment below and update the code to test the property damageFromNpCsAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromNpCsNumShots (base name: "damage_from_np_cs_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromNpCsNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersBombAmount (base name: "damage_from_players_bomb_amount")', function() {
      // uncomment below and update the code to test the property damageFromPlayersBombAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersBombNumShots (base name: "damage_from_players_bomb_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromPlayersBombNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersCombatDroneAmount (base name: "damage_from_players_combat_drone_amount")', function() {
      // uncomment below and update the code to test the property damageFromPlayersCombatDroneAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersCombatDroneNumShots (base name: "damage_from_players_combat_drone_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromPlayersCombatDroneNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersEnergyAmount (base name: "damage_from_players_energy_amount")', function() {
      // uncomment below and update the code to test the property damageFromPlayersEnergyAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersEnergyNumShots (base name: "damage_from_players_energy_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromPlayersEnergyNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersFighterBomberAmount (base name: "damage_from_players_fighter_bomber_amount")', function() {
      // uncomment below and update the code to test the property damageFromPlayersFighterBomberAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersFighterBomberNumShots (base name: "damage_from_players_fighter_bomber_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromPlayersFighterBomberNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersFighterDroneAmount (base name: "damage_from_players_fighter_drone_amount")', function() {
      // uncomment below and update the code to test the property damageFromPlayersFighterDroneAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersFighterDroneNumShots (base name: "damage_from_players_fighter_drone_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromPlayersFighterDroneNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersHybridAmount (base name: "damage_from_players_hybrid_amount")', function() {
      // uncomment below and update the code to test the property damageFromPlayersHybridAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersHybridNumShots (base name: "damage_from_players_hybrid_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromPlayersHybridNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersMissileAmount (base name: "damage_from_players_missile_amount")', function() {
      // uncomment below and update the code to test the property damageFromPlayersMissileAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersMissileNumShots (base name: "damage_from_players_missile_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromPlayersMissileNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersProjectileAmount (base name: "damage_from_players_projectile_amount")', function() {
      // uncomment below and update the code to test the property damageFromPlayersProjectileAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersProjectileNumShots (base name: "damage_from_players_projectile_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromPlayersProjectileNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersSmartBombAmount (base name: "damage_from_players_smart_bomb_amount")', function() {
      // uncomment below and update the code to test the property damageFromPlayersSmartBombAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersSmartBombNumShots (base name: "damage_from_players_smart_bomb_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromPlayersSmartBombNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersSuperAmount (base name: "damage_from_players_super_amount")', function() {
      // uncomment below and update the code to test the property damageFromPlayersSuperAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromPlayersSuperNumShots (base name: "damage_from_players_super_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromPlayersSuperNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromStructuresTotalAmount (base name: "damage_from_structures_total_amount")', function() {
      // uncomment below and update the code to test the property damageFromStructuresTotalAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageFromStructuresTotalNumShots (base name: "damage_from_structures_total_num_shots")', function() {
      // uncomment below and update the code to test the property damageFromStructuresTotalNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersBombAmount (base name: "damage_to_players_bomb_amount")', function() {
      // uncomment below and update the code to test the property damageToPlayersBombAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersBombNumShots (base name: "damage_to_players_bomb_num_shots")', function() {
      // uncomment below and update the code to test the property damageToPlayersBombNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersCombatDroneAmount (base name: "damage_to_players_combat_drone_amount")', function() {
      // uncomment below and update the code to test the property damageToPlayersCombatDroneAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersCombatDroneNumShots (base name: "damage_to_players_combat_drone_num_shots")', function() {
      // uncomment below and update the code to test the property damageToPlayersCombatDroneNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersEnergyAmount (base name: "damage_to_players_energy_amount")', function() {
      // uncomment below and update the code to test the property damageToPlayersEnergyAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersEnergyNumShots (base name: "damage_to_players_energy_num_shots")', function() {
      // uncomment below and update the code to test the property damageToPlayersEnergyNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersFighterBomberAmount (base name: "damage_to_players_fighter_bomber_amount")', function() {
      // uncomment below and update the code to test the property damageToPlayersFighterBomberAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersFighterBomberNumShots (base name: "damage_to_players_fighter_bomber_num_shots")', function() {
      // uncomment below and update the code to test the property damageToPlayersFighterBomberNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersFighterDroneAmount (base name: "damage_to_players_fighter_drone_amount")', function() {
      // uncomment below and update the code to test the property damageToPlayersFighterDroneAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersFighterDroneNumShots (base name: "damage_to_players_fighter_drone_num_shots")', function() {
      // uncomment below and update the code to test the property damageToPlayersFighterDroneNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersHybridAmount (base name: "damage_to_players_hybrid_amount")', function() {
      // uncomment below and update the code to test the property damageToPlayersHybridAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersHybridNumShots (base name: "damage_to_players_hybrid_num_shots")', function() {
      // uncomment below and update the code to test the property damageToPlayersHybridNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersMissileAmount (base name: "damage_to_players_missile_amount")', function() {
      // uncomment below and update the code to test the property damageToPlayersMissileAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersMissileNumShots (base name: "damage_to_players_missile_num_shots")', function() {
      // uncomment below and update the code to test the property damageToPlayersMissileNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersProjectileAmount (base name: "damage_to_players_projectile_amount")', function() {
      // uncomment below and update the code to test the property damageToPlayersProjectileAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersProjectileNumShots (base name: "damage_to_players_projectile_num_shots")', function() {
      // uncomment below and update the code to test the property damageToPlayersProjectileNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersSmartBombAmount (base name: "damage_to_players_smart_bomb_amount")', function() {
      // uncomment below and update the code to test the property damageToPlayersSmartBombAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersSmartBombNumShots (base name: "damage_to_players_smart_bomb_num_shots")', function() {
      // uncomment below and update the code to test the property damageToPlayersSmartBombNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersSuperAmount (base name: "damage_to_players_super_amount")', function() {
      // uncomment below and update the code to test the property damageToPlayersSuperAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToPlayersSuperNumShots (base name: "damage_to_players_super_num_shots")', function() {
      // uncomment below and update the code to test the property damageToPlayersSuperNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToStructuresTotalAmount (base name: "damage_to_structures_total_amount")', function() {
      // uncomment below and update the code to test the property damageToStructuresTotalAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property damageToStructuresTotalNumShots (base name: "damage_to_structures_total_num_shots")', function() {
      // uncomment below and update the code to test the property damageToStructuresTotalNumShots
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property deathsHighSec (base name: "deaths_high_sec")', function() {
      // uncomment below and update the code to test the property deathsHighSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property deathsLowSec (base name: "deaths_low_sec")', function() {
      // uncomment below and update the code to test the property deathsLowSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property deathsNullSec (base name: "deaths_null_sec")', function() {
      // uncomment below and update the code to test the property deathsNullSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property deathsPodHighSec (base name: "deaths_pod_high_sec")', function() {
      // uncomment below and update the code to test the property deathsPodHighSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property deathsPodLowSec (base name: "deaths_pod_low_sec")', function() {
      // uncomment below and update the code to test the property deathsPodLowSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property deathsPodNullSec (base name: "deaths_pod_null_sec")', function() {
      // uncomment below and update the code to test the property deathsPodNullSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property deathsPodWormhole (base name: "deaths_pod_wormhole")', function() {
      // uncomment below and update the code to test the property deathsPodWormhole
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property deathsWormhole (base name: "deaths_wormhole")', function() {
      // uncomment below and update the code to test the property deathsWormhole
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property droneEngage (base name: "drone_engage")', function() {
      // uncomment below and update the code to test the property droneEngage
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property dscans (base name: "dscans")', function() {
      // uncomment below and update the code to test the property dscans
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property duelRequested (base name: "duel_requested")', function() {
      // uncomment below and update the code to test the property duelRequested
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property engagementRegister (base name: "engagement_register")', function() {
      // uncomment below and update the code to test the property engagementRegister
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property killsAssists (base name: "kills_assists")', function() {
      // uncomment below and update the code to test the property killsAssists
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property killsHighSec (base name: "kills_high_sec")', function() {
      // uncomment below and update the code to test the property killsHighSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property killsLowSec (base name: "kills_low_sec")', function() {
      // uncomment below and update the code to test the property killsLowSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property killsNullSec (base name: "kills_null_sec")', function() {
      // uncomment below and update the code to test the property killsNullSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property killsPodHighSec (base name: "kills_pod_high_sec")', function() {
      // uncomment below and update the code to test the property killsPodHighSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property killsPodLowSec (base name: "kills_pod_low_sec")', function() {
      // uncomment below and update the code to test the property killsPodLowSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property killsPodNullSec (base name: "kills_pod_null_sec")', function() {
      // uncomment below and update the code to test the property killsPodNullSec
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property killsPodWormhole (base name: "kills_pod_wormhole")', function() {
      // uncomment below and update the code to test the property killsPodWormhole
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property killsWormhole (base name: "kills_wormhole")', function() {
      // uncomment below and update the code to test the property killsWormhole
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property npcFlagSet (base name: "npc_flag_set")', function() {
      // uncomment below and update the code to test the property npcFlagSet
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property probeScans (base name: "probe_scans")', function() {
      // uncomment below and update the code to test the property probeScans
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property pvpFlagSet (base name: "pvp_flag_set")', function() {
      // uncomment below and update the code to test the property pvpFlagSet
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairArmorByRemoteAmount (base name: "repair_armor_by_remote_amount")', function() {
      // uncomment below and update the code to test the property repairArmorByRemoteAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairArmorRemoteAmount (base name: "repair_armor_remote_amount")', function() {
      // uncomment below and update the code to test the property repairArmorRemoteAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairArmorSelfAmount (base name: "repair_armor_self_amount")', function() {
      // uncomment below and update the code to test the property repairArmorSelfAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairCapacitorByRemoteAmount (base name: "repair_capacitor_by_remote_amount")', function() {
      // uncomment below and update the code to test the property repairCapacitorByRemoteAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairCapacitorRemoteAmount (base name: "repair_capacitor_remote_amount")', function() {
      // uncomment below and update the code to test the property repairCapacitorRemoteAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairCapacitorSelfAmount (base name: "repair_capacitor_self_amount")', function() {
      // uncomment below and update the code to test the property repairCapacitorSelfAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairHullByRemoteAmount (base name: "repair_hull_by_remote_amount")', function() {
      // uncomment below and update the code to test the property repairHullByRemoteAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairHullRemoteAmount (base name: "repair_hull_remote_amount")', function() {
      // uncomment below and update the code to test the property repairHullRemoteAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairHullSelfAmount (base name: "repair_hull_self_amount")', function() {
      // uncomment below and update the code to test the property repairHullSelfAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairShieldByRemoteAmount (base name: "repair_shield_by_remote_amount")', function() {
      // uncomment below and update the code to test the property repairShieldByRemoteAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairShieldRemoteAmount (base name: "repair_shield_remote_amount")', function() {
      // uncomment below and update the code to test the property repairShieldRemoteAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property repairShieldSelfAmount (base name: "repair_shield_self_amount")', function() {
      // uncomment below and update the code to test the property repairShieldSelfAmount
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property selfDestructs (base name: "self_destructs")', function() {
      // uncomment below and update the code to test the property selfDestructs
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property warpScramblePc (base name: "warp_scramble_pc")', function() {
      // uncomment below and update the code to test the property warpScramblePc
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property warpScrambledbyNpc (base name: "warp_scrambledby_npc")', function() {
      // uncomment below and update the code to test the property warpScrambledbyNpc
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property warpScrambledbyPc (base name: "warp_scrambledby_pc")', function() {
      // uncomment below and update the code to test the property warpScrambledbyPc
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property weaponFlagSet (base name: "weapon_flag_set")', function() {
      // uncomment below and update the code to test the property weaponFlagSet
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property webifiedbyNpc (base name: "webifiedby_npc")', function() {
      // uncomment below and update the code to test the property webifiedbyNpc
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property webifiedbyPc (base name: "webifiedby_pc")', function() {
      // uncomment below and update the code to test the property webifiedbyPc
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

    it('should have the property webifyingPc (base name: "webifying_pc")', function() {
      // uncomment below and update the code to test the property webifyingPc
      //var instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsCombat();
      //expect(instance).to.be();
    });

  });

}));
