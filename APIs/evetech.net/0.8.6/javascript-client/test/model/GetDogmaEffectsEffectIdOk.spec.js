/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetDogmaEffectsEffectIdOk', function() {
    it('should create an instance of GetDogmaEffectsEffectIdOk', function() {
      // uncomment below and update the code to test GetDogmaEffectsEffectIdOk
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be.a(EveSwaggerInterface.GetDogmaEffectsEffectIdOk);
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property disallowAutoRepeat (base name: "disallow_auto_repeat")', function() {
      // uncomment below and update the code to test the property disallowAutoRepeat
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property dischargeAttributeId (base name: "discharge_attribute_id")', function() {
      // uncomment below and update the code to test the property dischargeAttributeId
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "display_name")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property durationAttributeId (base name: "duration_attribute_id")', function() {
      // uncomment below and update the code to test the property durationAttributeId
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property effectCategory (base name: "effect_category")', function() {
      // uncomment below and update the code to test the property effectCategory
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property effectId (base name: "effect_id")', function() {
      // uncomment below and update the code to test the property effectId
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property electronicChance (base name: "electronic_chance")', function() {
      // uncomment below and update the code to test the property electronicChance
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property falloffAttributeId (base name: "falloff_attribute_id")', function() {
      // uncomment below and update the code to test the property falloffAttributeId
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property iconId (base name: "icon_id")', function() {
      // uncomment below and update the code to test the property iconId
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property isAssistance (base name: "is_assistance")', function() {
      // uncomment below and update the code to test the property isAssistance
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property isOffensive (base name: "is_offensive")', function() {
      // uncomment below and update the code to test the property isOffensive
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property isWarpSafe (base name: "is_warp_safe")', function() {
      // uncomment below and update the code to test the property isWarpSafe
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property modifiers (base name: "modifiers")', function() {
      // uncomment below and update the code to test the property modifiers
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property postExpression (base name: "post_expression")', function() {
      // uncomment below and update the code to test the property postExpression
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property preExpression (base name: "pre_expression")', function() {
      // uncomment below and update the code to test the property preExpression
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property published (base name: "published")', function() {
      // uncomment below and update the code to test the property published
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property rangeAttributeId (base name: "range_attribute_id")', function() {
      // uncomment below and update the code to test the property rangeAttributeId
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property rangeChance (base name: "range_chance")', function() {
      // uncomment below and update the code to test the property rangeChance
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

    it('should have the property trackingSpeedAttributeId (base name: "tracking_speed_attribute_id")', function() {
      // uncomment below and update the code to test the property trackingSpeedAttributeId
      //var instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdOk();
      //expect(instance).to.be();
    });

  });

}));
