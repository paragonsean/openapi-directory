/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BadRequest from '../model/BadRequest';
import ErrorLimited from '../model/ErrorLimited';
import Forbidden from '../model/Forbidden';
import GatewayTimeout from '../model/GatewayTimeout';
import GetCharactersCharacterIdIndustryJobs200Ok from '../model/GetCharactersCharacterIdIndustryJobs200Ok';
import GetCharactersCharacterIdMining200Ok from '../model/GetCharactersCharacterIdMining200Ok';
import GetCorporationCorporationIdMiningExtractions200Ok from '../model/GetCorporationCorporationIdMiningExtractions200Ok';
import GetCorporationCorporationIdMiningObservers200Ok from '../model/GetCorporationCorporationIdMiningObservers200Ok';
import GetCorporationCorporationIdMiningObserversObserverId200Ok from '../model/GetCorporationCorporationIdMiningObserversObserverId200Ok';
import GetCorporationsCorporationIdIndustryJobs200Ok from '../model/GetCorporationsCorporationIdIndustryJobs200Ok';
import GetIndustryFacilities200Ok from '../model/GetIndustryFacilities200Ok';
import GetIndustrySystems200Ok from '../model/GetIndustrySystems200Ok';
import InternalServerError from '../model/InternalServerError';
import ServiceUnavailable from '../model/ServiceUnavailable';
import Unauthorized from '../model/Unauthorized';

/**
* Industry service.
* @module api/IndustryApi
* @version 0.8.6
*/
export default class IndustryApi {

    /**
    * Constructs a new IndustryApi. 
    * @alias module:api/IndustryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCharactersCharacterIdIndustryJobs operation.
     * @callback module:api/IndustryApi~getCharactersCharacterIdIndustryJobsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCharactersCharacterIdIndustryJobs200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List character industry jobs
     * List industry jobs placed by a character  --- Alternate route: `/dev/characters/{character_id}/industry/jobs/`  Alternate route: `/legacy/characters/{character_id}/industry/jobs/`  Alternate route: `/v1/characters/{character_id}/industry/jobs/`  --- This route is cached for up to 300 seconds
     * @param {Number} characterId An EVE character ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Boolean} [includeCompleted] Whether to retrieve completed character industry jobs. Only includes jobs from the past 90 days
     * @param {String} [token] Access token to use if unable to set a header
     * @param {module:api/IndustryApi~getCharactersCharacterIdIndustryJobsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCharactersCharacterIdIndustryJobs200Ok>}
     */
    getCharactersCharacterIdIndustryJobs(characterId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'characterId' is set
      if (characterId === undefined || characterId === null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdIndustryJobs");
      }

      let pathParams = {
        'character_id': characterId
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'include_completed': opts['includeCompleted'],
        'token': opts['token']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = ['evesso'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetCharactersCharacterIdIndustryJobs200Ok];
      return this.apiClient.callApi(
        '/characters/{character_id}/industry/jobs/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCharactersCharacterIdMining operation.
     * @callback module:api/IndustryApi~getCharactersCharacterIdMiningCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCharactersCharacterIdMining200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Character mining ledger
     * Paginated record of all mining done by a character for the past 30 days   --- Alternate route: `/dev/characters/{character_id}/mining/`  Alternate route: `/legacy/characters/{character_id}/mining/`  Alternate route: `/v1/characters/{character_id}/mining/`  --- This route is cached for up to 600 seconds
     * @param {Number} characterId An EVE character ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} [page = 1)] Which page of results to return
     * @param {String} [token] Access token to use if unable to set a header
     * @param {module:api/IndustryApi~getCharactersCharacterIdMiningCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCharactersCharacterIdMining200Ok>}
     */
    getCharactersCharacterIdMining(characterId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'characterId' is set
      if (characterId === undefined || characterId === null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdMining");
      }

      let pathParams = {
        'character_id': characterId
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
        'token': opts['token']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = ['evesso'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetCharactersCharacterIdMining200Ok];
      return this.apiClient.callApi(
        '/characters/{character_id}/mining/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCorporationCorporationIdMiningExtractions operation.
     * @callback module:api/IndustryApi~getCorporationCorporationIdMiningExtractionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCorporationCorporationIdMiningExtractions200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Moon extraction timers
     * Extraction timers for all moon chunks being extracted by refineries belonging to a corporation.   --- Alternate route: `/dev/corporation/{corporation_id}/mining/extractions/`  Alternate route: `/legacy/corporation/{corporation_id}/mining/extractions/`  Alternate route: `/v1/corporation/{corporation_id}/mining/extractions/`  --- This route is cached for up to 1800 seconds  --- Requires one of the following EVE corporation role(s): Station_Manager 
     * @param {Number} corporationId An EVE corporation ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} [page = 1)] Which page of results to return
     * @param {String} [token] Access token to use if unable to set a header
     * @param {module:api/IndustryApi~getCorporationCorporationIdMiningExtractionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCorporationCorporationIdMiningExtractions200Ok>}
     */
    getCorporationCorporationIdMiningExtractions(corporationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'corporationId' is set
      if (corporationId === undefined || corporationId === null) {
        throw new Error("Missing the required parameter 'corporationId' when calling getCorporationCorporationIdMiningExtractions");
      }

      let pathParams = {
        'corporation_id': corporationId
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
        'token': opts['token']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = ['evesso'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetCorporationCorporationIdMiningExtractions200Ok];
      return this.apiClient.callApi(
        '/corporation/{corporation_id}/mining/extractions/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCorporationCorporationIdMiningObservers operation.
     * @callback module:api/IndustryApi~getCorporationCorporationIdMiningObserversCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCorporationCorporationIdMiningObservers200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Corporation mining observers
     * Paginated list of all entities capable of observing and recording mining for a corporation   --- Alternate route: `/dev/corporation/{corporation_id}/mining/observers/`  Alternate route: `/legacy/corporation/{corporation_id}/mining/observers/`  Alternate route: `/v1/corporation/{corporation_id}/mining/observers/`  --- This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Accountant 
     * @param {Number} corporationId An EVE corporation ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} [page = 1)] Which page of results to return
     * @param {String} [token] Access token to use if unable to set a header
     * @param {module:api/IndustryApi~getCorporationCorporationIdMiningObserversCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCorporationCorporationIdMiningObservers200Ok>}
     */
    getCorporationCorporationIdMiningObservers(corporationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'corporationId' is set
      if (corporationId === undefined || corporationId === null) {
        throw new Error("Missing the required parameter 'corporationId' when calling getCorporationCorporationIdMiningObservers");
      }

      let pathParams = {
        'corporation_id': corporationId
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
        'token': opts['token']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = ['evesso'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetCorporationCorporationIdMiningObservers200Ok];
      return this.apiClient.callApi(
        '/corporation/{corporation_id}/mining/observers/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCorporationCorporationIdMiningObserversObserverId operation.
     * @callback module:api/IndustryApi~getCorporationCorporationIdMiningObserversObserverIdCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCorporationCorporationIdMiningObserversObserverId200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Observed corporation mining
     * Paginated record of all mining seen by an observer   --- Alternate route: `/dev/corporation/{corporation_id}/mining/observers/{observer_id}/`  Alternate route: `/legacy/corporation/{corporation_id}/mining/observers/{observer_id}/`  Alternate route: `/v1/corporation/{corporation_id}/mining/observers/{observer_id}/`  --- This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Accountant 
     * @param {Number} corporationId An EVE corporation ID
     * @param {Number} observerId A mining observer id
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} [page = 1)] Which page of results to return
     * @param {String} [token] Access token to use if unable to set a header
     * @param {module:api/IndustryApi~getCorporationCorporationIdMiningObserversObserverIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCorporationCorporationIdMiningObserversObserverId200Ok>}
     */
    getCorporationCorporationIdMiningObserversObserverId(corporationId, observerId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'corporationId' is set
      if (corporationId === undefined || corporationId === null) {
        throw new Error("Missing the required parameter 'corporationId' when calling getCorporationCorporationIdMiningObserversObserverId");
      }
      // verify the required parameter 'observerId' is set
      if (observerId === undefined || observerId === null) {
        throw new Error("Missing the required parameter 'observerId' when calling getCorporationCorporationIdMiningObserversObserverId");
      }

      let pathParams = {
        'corporation_id': corporationId,
        'observer_id': observerId
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
        'token': opts['token']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = ['evesso'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetCorporationCorporationIdMiningObserversObserverId200Ok];
      return this.apiClient.callApi(
        '/corporation/{corporation_id}/mining/observers/{observer_id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCorporationsCorporationIdIndustryJobs operation.
     * @callback module:api/IndustryApi~getCorporationsCorporationIdIndustryJobsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCorporationsCorporationIdIndustryJobs200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List corporation industry jobs
     * List industry jobs run by a corporation  --- Alternate route: `/dev/corporations/{corporation_id}/industry/jobs/`  Alternate route: `/legacy/corporations/{corporation_id}/industry/jobs/`  Alternate route: `/v1/corporations/{corporation_id}/industry/jobs/`  --- This route is cached for up to 300 seconds  --- Requires one of the following EVE corporation role(s): Factory_Manager 
     * @param {Number} corporationId An EVE corporation ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Boolean} [includeCompleted = false)] Whether to retrieve completed corporation industry jobs. Only includes jobs from the past 90 days
     * @param {Number} [page = 1)] Which page of results to return
     * @param {String} [token] Access token to use if unable to set a header
     * @param {module:api/IndustryApi~getCorporationsCorporationIdIndustryJobsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCorporationsCorporationIdIndustryJobs200Ok>}
     */
    getCorporationsCorporationIdIndustryJobs(corporationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'corporationId' is set
      if (corporationId === undefined || corporationId === null) {
        throw new Error("Missing the required parameter 'corporationId' when calling getCorporationsCorporationIdIndustryJobs");
      }

      let pathParams = {
        'corporation_id': corporationId
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'include_completed': opts['includeCompleted'],
        'page': opts['page'],
        'token': opts['token']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = ['evesso'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetCorporationsCorporationIdIndustryJobs200Ok];
      return this.apiClient.callApi(
        '/corporations/{corporation_id}/industry/jobs/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getIndustryFacilities operation.
     * @callback module:api/IndustryApi~getIndustryFacilitiesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetIndustryFacilities200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List industry facilities
     * Return a list of industry facilities  --- Alternate route: `/dev/industry/facilities/`  Alternate route: `/legacy/industry/facilities/`  Alternate route: `/v1/industry/facilities/`  --- This route is cached for up to 3600 seconds
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {module:api/IndustryApi~getIndustryFacilitiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetIndustryFacilities200Ok>}
     */
    getIndustryFacilities(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'datasource': opts['datasource']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetIndustryFacilities200Ok];
      return this.apiClient.callApi(
        '/industry/facilities/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getIndustrySystems operation.
     * @callback module:api/IndustryApi~getIndustrySystemsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetIndustrySystems200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List solar system cost indices
     * Return cost indices for solar systems  --- Alternate route: `/dev/industry/systems/`  Alternate route: `/legacy/industry/systems/`  Alternate route: `/v1/industry/systems/`  --- This route is cached for up to 3600 seconds
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {module:api/IndustryApi~getIndustrySystemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetIndustrySystems200Ok>}
     */
    getIndustrySystems(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'datasource': opts['datasource']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetIndustrySystems200Ok];
      return this.apiClient.callApi(
        '/industry/systems/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
