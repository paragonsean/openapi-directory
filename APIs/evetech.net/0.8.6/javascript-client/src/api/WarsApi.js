/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BadRequest from '../model/BadRequest';
import ErrorLimited from '../model/ErrorLimited';
import GatewayTimeout from '../model/GatewayTimeout';
import GetWarsWarIdKillmails200Ok from '../model/GetWarsWarIdKillmails200Ok';
import GetWarsWarIdKillmailsUnprocessableEntity from '../model/GetWarsWarIdKillmailsUnprocessableEntity';
import GetWarsWarIdOk from '../model/GetWarsWarIdOk';
import GetWarsWarIdUnprocessableEntity from '../model/GetWarsWarIdUnprocessableEntity';
import InternalServerError from '../model/InternalServerError';
import ServiceUnavailable from '../model/ServiceUnavailable';

/**
* Wars service.
* @module api/WarsApi
* @version 0.8.6
*/
export default class WarsApi {

    /**
    * Constructs a new WarsApi. 
    * @alias module:api/WarsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getWars operation.
     * @callback module:api/WarsApi~getWarsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Number>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List wars
     * Return a list of wars  --- Alternate route: `/dev/wars/`  Alternate route: `/legacy/wars/`  Alternate route: `/v1/wars/`  --- This route is cached for up to 3600 seconds
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} [maxWarId] Only return wars with ID smaller than this
     * @param {module:api/WarsApi~getWarsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Number>}
     */
    getWars(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'max_war_id': opts['maxWarId']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ['Number'];
      return this.apiClient.callApi(
        '/wars/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWarsWarId operation.
     * @callback module:api/WarsApi~getWarsWarIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetWarsWarIdOk} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get war information
     * Return details about a war  --- Alternate route: `/dev/wars/{war_id}/`  Alternate route: `/legacy/wars/{war_id}/`  Alternate route: `/v1/wars/{war_id}/`  --- This route is cached for up to 3600 seconds
     * @param {Number} warId ID for a war
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {module:api/WarsApi~getWarsWarIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetWarsWarIdOk}
     */
    getWarsWarId(warId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'warId' is set
      if (warId === undefined || warId === null) {
        throw new Error("Missing the required parameter 'warId' when calling getWarsWarId");
      }

      let pathParams = {
        'war_id': warId
      };
      let queryParams = {
        'datasource': opts['datasource']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetWarsWarIdOk;
      return this.apiClient.callApi(
        '/wars/{war_id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWarsWarIdKillmails operation.
     * @callback module:api/WarsApi~getWarsWarIdKillmailsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetWarsWarIdKillmails200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List kills for a war
     * Return a list of kills related to a war  --- Alternate route: `/dev/wars/{war_id}/killmails/`  Alternate route: `/legacy/wars/{war_id}/killmails/`  Alternate route: `/v1/wars/{war_id}/killmails/`  --- This route is cached for up to 3600 seconds
     * @param {Number} warId A valid war ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} [page = 1)] Which page of results to return
     * @param {module:api/WarsApi~getWarsWarIdKillmailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetWarsWarIdKillmails200Ok>}
     */
    getWarsWarIdKillmails(warId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'warId' is set
      if (warId === undefined || warId === null) {
        throw new Error("Missing the required parameter 'warId' when calling getWarsWarIdKillmails");
      }

      let pathParams = {
        'war_id': warId
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetWarsWarIdKillmails200Ok];
      return this.apiClient.callApi(
        '/wars/{war_id}/killmails/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
