/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BadRequest from '../model/BadRequest';
import ErrorLimited from '../model/ErrorLimited';
import Forbidden from '../model/Forbidden';
import GatewayTimeout from '../model/GatewayTimeout';
import GetCharactersCharacterIdAttributesOk from '../model/GetCharactersCharacterIdAttributesOk';
import GetCharactersCharacterIdSkillqueue200Ok from '../model/GetCharactersCharacterIdSkillqueue200Ok';
import GetCharactersCharacterIdSkillsOk from '../model/GetCharactersCharacterIdSkillsOk';
import InternalServerError from '../model/InternalServerError';
import ServiceUnavailable from '../model/ServiceUnavailable';
import Unauthorized from '../model/Unauthorized';

/**
* Skills service.
* @module api/SkillsApi
* @version 0.8.6
*/
export default class SkillsApi {

    /**
    * Constructs a new SkillsApi. 
    * @alias module:api/SkillsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCharactersCharacterIdAttributes operation.
     * @callback module:api/SkillsApi~getCharactersCharacterIdAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCharactersCharacterIdAttributesOk} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get character attributes
     * Return attributes of a character  --- Alternate route: `/dev/characters/{character_id}/attributes/`  Alternate route: `/legacy/characters/{character_id}/attributes/`  Alternate route: `/v1/characters/{character_id}/attributes/`  --- This route is cached for up to 3600 seconds
     * @param {Number} characterId An EVE character ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {String} [token] Access token to use if unable to set a header
     * @param {module:api/SkillsApi~getCharactersCharacterIdAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCharactersCharacterIdAttributesOk}
     */
    getCharactersCharacterIdAttributes(characterId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'characterId' is set
      if (characterId === undefined || characterId === null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdAttributes");
      }

      let pathParams = {
        'character_id': characterId
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = ['evesso'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCharactersCharacterIdAttributesOk;
      return this.apiClient.callApi(
        '/characters/{character_id}/attributes/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCharactersCharacterIdSkillqueue operation.
     * @callback module:api/SkillsApi~getCharactersCharacterIdSkillqueueCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCharactersCharacterIdSkillqueue200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get character's skill queue
     * List the configured skill queue for the given character  --- Alternate route: `/dev/characters/{character_id}/skillqueue/`  Alternate route: `/legacy/characters/{character_id}/skillqueue/`  Alternate route: `/v2/characters/{character_id}/skillqueue/`  --- This route is cached for up to 120 seconds
     * @param {Number} characterId An EVE character ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {String} [token] Access token to use if unable to set a header
     * @param {module:api/SkillsApi~getCharactersCharacterIdSkillqueueCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCharactersCharacterIdSkillqueue200Ok>}
     */
    getCharactersCharacterIdSkillqueue(characterId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'characterId' is set
      if (characterId === undefined || characterId === null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdSkillqueue");
      }

      let pathParams = {
        'character_id': characterId
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = ['evesso'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetCharactersCharacterIdSkillqueue200Ok];
      return this.apiClient.callApi(
        '/characters/{character_id}/skillqueue/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCharactersCharacterIdSkills operation.
     * @callback module:api/SkillsApi~getCharactersCharacterIdSkillsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCharactersCharacterIdSkillsOk} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get character skills
     * List all trained skills for the given character  --- Alternate route: `/dev/characters/{character_id}/skills/`  Alternate route: `/v4/characters/{character_id}/skills/`  --- This route is cached for up to 120 seconds
     * @param {Number} characterId An EVE character ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [datasource = 'tranquility')] The server name you would like data from
     * @param {String} [ifNoneMatch] ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {String} [token] Access token to use if unable to set a header
     * @param {module:api/SkillsApi~getCharactersCharacterIdSkillsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCharactersCharacterIdSkillsOk}
     */
    getCharactersCharacterIdSkills(characterId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'characterId' is set
      if (characterId === undefined || characterId === null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdSkills");
      }

      let pathParams = {
        'character_id': characterId
      };
      let queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token']
      };
      let headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      let formParams = {
      };

      let authNames = ['evesso'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCharactersCharacterIdSkillsOk;
      return this.apiClient.callApi(
        '/characters/{character_id}/skills/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
