/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetUniverseConstellationsConstellationIdPosition from './GetUniverseConstellationsConstellationIdPosition';

/**
 * The GetUniverseConstellationsConstellationIdOk model module.
 * @module model/GetUniverseConstellationsConstellationIdOk
 * @version 0.8.6
 */
class GetUniverseConstellationsConstellationIdOk {
    /**
     * Constructs a new <code>GetUniverseConstellationsConstellationIdOk</code>.
     * 200 ok object
     * @alias module:model/GetUniverseConstellationsConstellationIdOk
     * @param constellationId {Number} constellation_id integer
     * @param name {String} name string
     * @param position {module:model/GetUniverseConstellationsConstellationIdPosition} 
     * @param regionId {Number} The region this constellation is in
     * @param systems {Array.<Number>} systems array
     */
    constructor(constellationId, name, position, regionId, systems) { 
        
        GetUniverseConstellationsConstellationIdOk.initialize(this, constellationId, name, position, regionId, systems);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, constellationId, name, position, regionId, systems) { 
        obj['constellation_id'] = constellationId;
        obj['name'] = name;
        obj['position'] = position;
        obj['region_id'] = regionId;
        obj['systems'] = systems;
    }

    /**
     * Constructs a <code>GetUniverseConstellationsConstellationIdOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUniverseConstellationsConstellationIdOk} obj Optional instance to populate.
     * @return {module:model/GetUniverseConstellationsConstellationIdOk} The populated <code>GetUniverseConstellationsConstellationIdOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUniverseConstellationsConstellationIdOk();

            if (data.hasOwnProperty('constellation_id')) {
                obj['constellation_id'] = ApiClient.convertToType(data['constellation_id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = GetUniverseConstellationsConstellationIdPosition.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('region_id')) {
                obj['region_id'] = ApiClient.convertToType(data['region_id'], 'Number');
            }
            if (data.hasOwnProperty('systems')) {
                obj['systems'] = ApiClient.convertToType(data['systems'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetUniverseConstellationsConstellationIdOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetUniverseConstellationsConstellationIdOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetUniverseConstellationsConstellationIdOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `position`
        if (data['position']) { // data not null
          GetUniverseConstellationsConstellationIdPosition.validateJSON(data['position']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['systems'])) {
            throw new Error("Expected the field `systems` to be an array in the JSON data but got " + data['systems']);
        }

        return true;
    }


}

GetUniverseConstellationsConstellationIdOk.RequiredProperties = ["constellation_id", "name", "position", "region_id", "systems"];

/**
 * constellation_id integer
 * @member {Number} constellation_id
 */
GetUniverseConstellationsConstellationIdOk.prototype['constellation_id'] = undefined;

/**
 * name string
 * @member {String} name
 */
GetUniverseConstellationsConstellationIdOk.prototype['name'] = undefined;

/**
 * @member {module:model/GetUniverseConstellationsConstellationIdPosition} position
 */
GetUniverseConstellationsConstellationIdOk.prototype['position'] = undefined;

/**
 * The region this constellation is in
 * @member {Number} region_id
 */
GetUniverseConstellationsConstellationIdOk.prototype['region_id'] = undefined;

/**
 * systems array
 * @member {Array.<Number>} systems
 */
GetUniverseConstellationsConstellationIdOk.prototype['systems'] = undefined;






export default GetUniverseConstellationsConstellationIdOk;

