/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetUniverseBloodlines200Ok model module.
 * @module model/GetUniverseBloodlines200Ok
 * @version 0.8.6
 */
class GetUniverseBloodlines200Ok {
    /**
     * Constructs a new <code>GetUniverseBloodlines200Ok</code>.
     * 200 ok object
     * @alias module:model/GetUniverseBloodlines200Ok
     * @param bloodlineId {Number} bloodline_id integer
     * @param charisma {Number} charisma integer
     * @param corporationId {Number} corporation_id integer
     * @param description {String} description string
     * @param intelligence {Number} intelligence integer
     * @param memory {Number} memory integer
     * @param name {String} name string
     * @param perception {Number} perception integer
     * @param raceId {Number} race_id integer
     * @param shipTypeId {Number} ship_type_id integer
     * @param willpower {Number} willpower integer
     */
    constructor(bloodlineId, charisma, corporationId, description, intelligence, memory, name, perception, raceId, shipTypeId, willpower) { 
        
        GetUniverseBloodlines200Ok.initialize(this, bloodlineId, charisma, corporationId, description, intelligence, memory, name, perception, raceId, shipTypeId, willpower);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bloodlineId, charisma, corporationId, description, intelligence, memory, name, perception, raceId, shipTypeId, willpower) { 
        obj['bloodline_id'] = bloodlineId;
        obj['charisma'] = charisma;
        obj['corporation_id'] = corporationId;
        obj['description'] = description;
        obj['intelligence'] = intelligence;
        obj['memory'] = memory;
        obj['name'] = name;
        obj['perception'] = perception;
        obj['race_id'] = raceId;
        obj['ship_type_id'] = shipTypeId;
        obj['willpower'] = willpower;
    }

    /**
     * Constructs a <code>GetUniverseBloodlines200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUniverseBloodlines200Ok} obj Optional instance to populate.
     * @return {module:model/GetUniverseBloodlines200Ok} The populated <code>GetUniverseBloodlines200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUniverseBloodlines200Ok();

            if (data.hasOwnProperty('bloodline_id')) {
                obj['bloodline_id'] = ApiClient.convertToType(data['bloodline_id'], 'Number');
            }
            if (data.hasOwnProperty('charisma')) {
                obj['charisma'] = ApiClient.convertToType(data['charisma'], 'Number');
            }
            if (data.hasOwnProperty('corporation_id')) {
                obj['corporation_id'] = ApiClient.convertToType(data['corporation_id'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('intelligence')) {
                obj['intelligence'] = ApiClient.convertToType(data['intelligence'], 'Number');
            }
            if (data.hasOwnProperty('memory')) {
                obj['memory'] = ApiClient.convertToType(data['memory'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('perception')) {
                obj['perception'] = ApiClient.convertToType(data['perception'], 'Number');
            }
            if (data.hasOwnProperty('race_id')) {
                obj['race_id'] = ApiClient.convertToType(data['race_id'], 'Number');
            }
            if (data.hasOwnProperty('ship_type_id')) {
                obj['ship_type_id'] = ApiClient.convertToType(data['ship_type_id'], 'Number');
            }
            if (data.hasOwnProperty('willpower')) {
                obj['willpower'] = ApiClient.convertToType(data['willpower'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetUniverseBloodlines200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetUniverseBloodlines200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetUniverseBloodlines200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

GetUniverseBloodlines200Ok.RequiredProperties = ["bloodline_id", "charisma", "corporation_id", "description", "intelligence", "memory", "name", "perception", "race_id", "ship_type_id", "willpower"];

/**
 * bloodline_id integer
 * @member {Number} bloodline_id
 */
GetUniverseBloodlines200Ok.prototype['bloodline_id'] = undefined;

/**
 * charisma integer
 * @member {Number} charisma
 */
GetUniverseBloodlines200Ok.prototype['charisma'] = undefined;

/**
 * corporation_id integer
 * @member {Number} corporation_id
 */
GetUniverseBloodlines200Ok.prototype['corporation_id'] = undefined;

/**
 * description string
 * @member {String} description
 */
GetUniverseBloodlines200Ok.prototype['description'] = undefined;

/**
 * intelligence integer
 * @member {Number} intelligence
 */
GetUniverseBloodlines200Ok.prototype['intelligence'] = undefined;

/**
 * memory integer
 * @member {Number} memory
 */
GetUniverseBloodlines200Ok.prototype['memory'] = undefined;

/**
 * name string
 * @member {String} name
 */
GetUniverseBloodlines200Ok.prototype['name'] = undefined;

/**
 * perception integer
 * @member {Number} perception
 */
GetUniverseBloodlines200Ok.prototype['perception'] = undefined;

/**
 * race_id integer
 * @member {Number} race_id
 */
GetUniverseBloodlines200Ok.prototype['race_id'] = undefined;

/**
 * ship_type_id integer
 * @member {Number} ship_type_id
 */
GetUniverseBloodlines200Ok.prototype['ship_type_id'] = undefined;

/**
 * willpower integer
 * @member {Number} willpower
 */
GetUniverseBloodlines200Ok.prototype['willpower'] = undefined;






export default GetUniverseBloodlines200Ok;

