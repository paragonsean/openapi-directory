/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetCharactersCharacterIdSkillsSkill from './GetCharactersCharacterIdSkillsSkill';

/**
 * The GetCharactersCharacterIdSkillsOk model module.
 * @module model/GetCharactersCharacterIdSkillsOk
 * @version 0.8.6
 */
class GetCharactersCharacterIdSkillsOk {
    /**
     * Constructs a new <code>GetCharactersCharacterIdSkillsOk</code>.
     * 200 ok object
     * @alias module:model/GetCharactersCharacterIdSkillsOk
     * @param skills {Array.<module:model/GetCharactersCharacterIdSkillsSkill>} skills array
     * @param totalSp {Number} total_sp integer
     */
    constructor(skills, totalSp) { 
        
        GetCharactersCharacterIdSkillsOk.initialize(this, skills, totalSp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, skills, totalSp) { 
        obj['skills'] = skills;
        obj['total_sp'] = totalSp;
    }

    /**
     * Constructs a <code>GetCharactersCharacterIdSkillsOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCharactersCharacterIdSkillsOk} obj Optional instance to populate.
     * @return {module:model/GetCharactersCharacterIdSkillsOk} The populated <code>GetCharactersCharacterIdSkillsOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCharactersCharacterIdSkillsOk();

            if (data.hasOwnProperty('skills')) {
                obj['skills'] = ApiClient.convertToType(data['skills'], [GetCharactersCharacterIdSkillsSkill]);
            }
            if (data.hasOwnProperty('total_sp')) {
                obj['total_sp'] = ApiClient.convertToType(data['total_sp'], 'Number');
            }
            if (data.hasOwnProperty('unallocated_sp')) {
                obj['unallocated_sp'] = ApiClient.convertToType(data['unallocated_sp'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCharactersCharacterIdSkillsOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCharactersCharacterIdSkillsOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCharactersCharacterIdSkillsOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['skills']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['skills'])) {
                throw new Error("Expected the field `skills` to be an array in the JSON data but got " + data['skills']);
            }
            // validate the optional field `skills` (array)
            for (const item of data['skills']) {
                GetCharactersCharacterIdSkillsSkill.validateJSON(item);
            };
        }

        return true;
    }


}

GetCharactersCharacterIdSkillsOk.RequiredProperties = ["skills", "total_sp"];

/**
 * skills array
 * @member {Array.<module:model/GetCharactersCharacterIdSkillsSkill>} skills
 */
GetCharactersCharacterIdSkillsOk.prototype['skills'] = undefined;

/**
 * total_sp integer
 * @member {Number} total_sp
 */
GetCharactersCharacterIdSkillsOk.prototype['total_sp'] = undefined;

/**
 * Skill points available to be assigned
 * @member {Number} unallocated_sp
 */
GetCharactersCharacterIdSkillsOk.prototype['unallocated_sp'] = undefined;






export default GetCharactersCharacterIdSkillsOk;

