/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetCharactersCharacterIdOrders200Ok model module.
 * @module model/GetCharactersCharacterIdOrders200Ok
 * @version 0.8.6
 */
class GetCharactersCharacterIdOrders200Ok {
    /**
     * Constructs a new <code>GetCharactersCharacterIdOrders200Ok</code>.
     * 200 ok object
     * @alias module:model/GetCharactersCharacterIdOrders200Ok
     * @param duration {Number} Number of days for which order is valid (starting from the issued date). An order expires at time issued + duration
     * @param isCorporation {Boolean} Signifies whether the buy/sell order was placed on behalf of a corporation.
     * @param issued {Date} Date and time when this order was issued
     * @param locationId {Number} ID of the location where order was placed
     * @param orderId {Number} Unique order ID
     * @param price {Number} Cost per unit for this order
     * @param range {module:model/GetCharactersCharacterIdOrders200Ok.RangeEnum} Valid order range, numbers are ranges in jumps
     * @param regionId {Number} ID of the region where order was placed
     * @param typeId {Number} The type ID of the item transacted in this order
     * @param volumeRemain {Number} Quantity of items still required or offered
     * @param volumeTotal {Number} Quantity of items required or offered at time order was placed
     */
    constructor(duration, isCorporation, issued, locationId, orderId, price, range, regionId, typeId, volumeRemain, volumeTotal) { 
        
        GetCharactersCharacterIdOrders200Ok.initialize(this, duration, isCorporation, issued, locationId, orderId, price, range, regionId, typeId, volumeRemain, volumeTotal);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, duration, isCorporation, issued, locationId, orderId, price, range, regionId, typeId, volumeRemain, volumeTotal) { 
        obj['duration'] = duration;
        obj['is_corporation'] = isCorporation;
        obj['issued'] = issued;
        obj['location_id'] = locationId;
        obj['order_id'] = orderId;
        obj['price'] = price;
        obj['range'] = range;
        obj['region_id'] = regionId;
        obj['type_id'] = typeId;
        obj['volume_remain'] = volumeRemain;
        obj['volume_total'] = volumeTotal;
    }

    /**
     * Constructs a <code>GetCharactersCharacterIdOrders200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCharactersCharacterIdOrders200Ok} obj Optional instance to populate.
     * @return {module:model/GetCharactersCharacterIdOrders200Ok} The populated <code>GetCharactersCharacterIdOrders200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCharactersCharacterIdOrders200Ok();

            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('escrow')) {
                obj['escrow'] = ApiClient.convertToType(data['escrow'], 'Number');
            }
            if (data.hasOwnProperty('is_buy_order')) {
                obj['is_buy_order'] = ApiClient.convertToType(data['is_buy_order'], 'Boolean');
            }
            if (data.hasOwnProperty('is_corporation')) {
                obj['is_corporation'] = ApiClient.convertToType(data['is_corporation'], 'Boolean');
            }
            if (data.hasOwnProperty('issued')) {
                obj['issued'] = ApiClient.convertToType(data['issued'], 'Date');
            }
            if (data.hasOwnProperty('location_id')) {
                obj['location_id'] = ApiClient.convertToType(data['location_id'], 'Number');
            }
            if (data.hasOwnProperty('min_volume')) {
                obj['min_volume'] = ApiClient.convertToType(data['min_volume'], 'Number');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = ApiClient.convertToType(data['range'], 'String');
            }
            if (data.hasOwnProperty('region_id')) {
                obj['region_id'] = ApiClient.convertToType(data['region_id'], 'Number');
            }
            if (data.hasOwnProperty('type_id')) {
                obj['type_id'] = ApiClient.convertToType(data['type_id'], 'Number');
            }
            if (data.hasOwnProperty('volume_remain')) {
                obj['volume_remain'] = ApiClient.convertToType(data['volume_remain'], 'Number');
            }
            if (data.hasOwnProperty('volume_total')) {
                obj['volume_total'] = ApiClient.convertToType(data['volume_total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCharactersCharacterIdOrders200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCharactersCharacterIdOrders200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCharactersCharacterIdOrders200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['range'] && !(typeof data['range'] === 'string' || data['range'] instanceof String)) {
            throw new Error("Expected the field `range` to be a primitive type in the JSON string but got " + data['range']);
        }

        return true;
    }


}

GetCharactersCharacterIdOrders200Ok.RequiredProperties = ["duration", "is_corporation", "issued", "location_id", "order_id", "price", "range", "region_id", "type_id", "volume_remain", "volume_total"];

/**
 * Number of days for which order is valid (starting from the issued date). An order expires at time issued + duration
 * @member {Number} duration
 */
GetCharactersCharacterIdOrders200Ok.prototype['duration'] = undefined;

/**
 * For buy orders, the amount of ISK in escrow
 * @member {Number} escrow
 */
GetCharactersCharacterIdOrders200Ok.prototype['escrow'] = undefined;

/**
 * True if the order is a bid (buy) order
 * @member {Boolean} is_buy_order
 */
GetCharactersCharacterIdOrders200Ok.prototype['is_buy_order'] = undefined;

/**
 * Signifies whether the buy/sell order was placed on behalf of a corporation.
 * @member {Boolean} is_corporation
 */
GetCharactersCharacterIdOrders200Ok.prototype['is_corporation'] = undefined;

/**
 * Date and time when this order was issued
 * @member {Date} issued
 */
GetCharactersCharacterIdOrders200Ok.prototype['issued'] = undefined;

/**
 * ID of the location where order was placed
 * @member {Number} location_id
 */
GetCharactersCharacterIdOrders200Ok.prototype['location_id'] = undefined;

/**
 * For buy orders, the minimum quantity that will be accepted in a matching sell order
 * @member {Number} min_volume
 */
GetCharactersCharacterIdOrders200Ok.prototype['min_volume'] = undefined;

/**
 * Unique order ID
 * @member {Number} order_id
 */
GetCharactersCharacterIdOrders200Ok.prototype['order_id'] = undefined;

/**
 * Cost per unit for this order
 * @member {Number} price
 */
GetCharactersCharacterIdOrders200Ok.prototype['price'] = undefined;

/**
 * Valid order range, numbers are ranges in jumps
 * @member {module:model/GetCharactersCharacterIdOrders200Ok.RangeEnum} range
 */
GetCharactersCharacterIdOrders200Ok.prototype['range'] = undefined;

/**
 * ID of the region where order was placed
 * @member {Number} region_id
 */
GetCharactersCharacterIdOrders200Ok.prototype['region_id'] = undefined;

/**
 * The type ID of the item transacted in this order
 * @member {Number} type_id
 */
GetCharactersCharacterIdOrders200Ok.prototype['type_id'] = undefined;

/**
 * Quantity of items still required or offered
 * @member {Number} volume_remain
 */
GetCharactersCharacterIdOrders200Ok.prototype['volume_remain'] = undefined;

/**
 * Quantity of items required or offered at time order was placed
 * @member {Number} volume_total
 */
GetCharactersCharacterIdOrders200Ok.prototype['volume_total'] = undefined;





/**
 * Allowed values for the <code>range</code> property.
 * @enum {String}
 * @readonly
 */
GetCharactersCharacterIdOrders200Ok['RangeEnum'] = {

    /**
     * value: "1"
     * @const
     */
    "1": "1",

    /**
     * value: "10"
     * @const
     */
    "10": "10",

    /**
     * value: "2"
     * @const
     */
    "2": "2",

    /**
     * value: "20"
     * @const
     */
    "20": "20",

    /**
     * value: "3"
     * @const
     */
    "3": "3",

    /**
     * value: "30"
     * @const
     */
    "30": "30",

    /**
     * value: "4"
     * @const
     */
    "4": "4",

    /**
     * value: "40"
     * @const
     */
    "40": "40",

    /**
     * value: "5"
     * @const
     */
    "5": "5",

    /**
     * value: "region"
     * @const
     */
    "region": "region",

    /**
     * value: "solarsystem"
     * @const
     */
    "solarsystem": "solarsystem",

    /**
     * value: "station"
     * @const
     */
    "station": "station"
};



export default GetCharactersCharacterIdOrders200Ok;

