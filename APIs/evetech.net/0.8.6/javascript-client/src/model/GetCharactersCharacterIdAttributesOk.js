/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetCharactersCharacterIdAttributesOk model module.
 * @module model/GetCharactersCharacterIdAttributesOk
 * @version 0.8.6
 */
class GetCharactersCharacterIdAttributesOk {
    /**
     * Constructs a new <code>GetCharactersCharacterIdAttributesOk</code>.
     * 200 ok object
     * @alias module:model/GetCharactersCharacterIdAttributesOk
     * @param charisma {Number} charisma integer
     * @param intelligence {Number} intelligence integer
     * @param memory {Number} memory integer
     * @param perception {Number} perception integer
     * @param willpower {Number} willpower integer
     */
    constructor(charisma, intelligence, memory, perception, willpower) { 
        
        GetCharactersCharacterIdAttributesOk.initialize(this, charisma, intelligence, memory, perception, willpower);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, charisma, intelligence, memory, perception, willpower) { 
        obj['charisma'] = charisma;
        obj['intelligence'] = intelligence;
        obj['memory'] = memory;
        obj['perception'] = perception;
        obj['willpower'] = willpower;
    }

    /**
     * Constructs a <code>GetCharactersCharacterIdAttributesOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCharactersCharacterIdAttributesOk} obj Optional instance to populate.
     * @return {module:model/GetCharactersCharacterIdAttributesOk} The populated <code>GetCharactersCharacterIdAttributesOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCharactersCharacterIdAttributesOk();

            if (data.hasOwnProperty('accrued_remap_cooldown_date')) {
                obj['accrued_remap_cooldown_date'] = ApiClient.convertToType(data['accrued_remap_cooldown_date'], 'Date');
            }
            if (data.hasOwnProperty('bonus_remaps')) {
                obj['bonus_remaps'] = ApiClient.convertToType(data['bonus_remaps'], 'Number');
            }
            if (data.hasOwnProperty('charisma')) {
                obj['charisma'] = ApiClient.convertToType(data['charisma'], 'Number');
            }
            if (data.hasOwnProperty('intelligence')) {
                obj['intelligence'] = ApiClient.convertToType(data['intelligence'], 'Number');
            }
            if (data.hasOwnProperty('last_remap_date')) {
                obj['last_remap_date'] = ApiClient.convertToType(data['last_remap_date'], 'Date');
            }
            if (data.hasOwnProperty('memory')) {
                obj['memory'] = ApiClient.convertToType(data['memory'], 'Number');
            }
            if (data.hasOwnProperty('perception')) {
                obj['perception'] = ApiClient.convertToType(data['perception'], 'Number');
            }
            if (data.hasOwnProperty('willpower')) {
                obj['willpower'] = ApiClient.convertToType(data['willpower'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCharactersCharacterIdAttributesOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCharactersCharacterIdAttributesOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCharactersCharacterIdAttributesOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

GetCharactersCharacterIdAttributesOk.RequiredProperties = ["charisma", "intelligence", "memory", "perception", "willpower"];

/**
 * Neural remapping cooldown after a character uses remap accrued over time
 * @member {Date} accrued_remap_cooldown_date
 */
GetCharactersCharacterIdAttributesOk.prototype['accrued_remap_cooldown_date'] = undefined;

/**
 * Number of available bonus character neural remaps
 * @member {Number} bonus_remaps
 */
GetCharactersCharacterIdAttributesOk.prototype['bonus_remaps'] = undefined;

/**
 * charisma integer
 * @member {Number} charisma
 */
GetCharactersCharacterIdAttributesOk.prototype['charisma'] = undefined;

/**
 * intelligence integer
 * @member {Number} intelligence
 */
GetCharactersCharacterIdAttributesOk.prototype['intelligence'] = undefined;

/**
 * Datetime of last neural remap, including usage of bonus remaps
 * @member {Date} last_remap_date
 */
GetCharactersCharacterIdAttributesOk.prototype['last_remap_date'] = undefined;

/**
 * memory integer
 * @member {Number} memory
 */
GetCharactersCharacterIdAttributesOk.prototype['memory'] = undefined;

/**
 * perception integer
 * @member {Number} perception
 */
GetCharactersCharacterIdAttributesOk.prototype['perception'] = undefined;

/**
 * willpower integer
 * @member {Number} willpower
 */
GetCharactersCharacterIdAttributesOk.prototype['willpower'] = undefined;






export default GetCharactersCharacterIdAttributesOk;

