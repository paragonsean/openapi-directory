/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetCorporationsCorporationIdOk model module.
 * @module model/GetCorporationsCorporationIdOk
 * @version 0.8.6
 */
class GetCorporationsCorporationIdOk {
    /**
     * Constructs a new <code>GetCorporationsCorporationIdOk</code>.
     * 200 ok object
     * @alias module:model/GetCorporationsCorporationIdOk
     * @param ceoId {Number} ceo_id integer
     * @param creatorId {Number} creator_id integer
     * @param memberCount {Number} member_count integer
     * @param name {String} the full name of the corporation
     * @param taxRate {Number} tax_rate number
     * @param ticker {String} the short name of the corporation
     */
    constructor(ceoId, creatorId, memberCount, name, taxRate, ticker) { 
        
        GetCorporationsCorporationIdOk.initialize(this, ceoId, creatorId, memberCount, name, taxRate, ticker);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ceoId, creatorId, memberCount, name, taxRate, ticker) { 
        obj['ceo_id'] = ceoId;
        obj['creator_id'] = creatorId;
        obj['member_count'] = memberCount;
        obj['name'] = name;
        obj['tax_rate'] = taxRate;
        obj['ticker'] = ticker;
    }

    /**
     * Constructs a <code>GetCorporationsCorporationIdOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCorporationsCorporationIdOk} obj Optional instance to populate.
     * @return {module:model/GetCorporationsCorporationIdOk} The populated <code>GetCorporationsCorporationIdOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCorporationsCorporationIdOk();

            if (data.hasOwnProperty('alliance_id')) {
                obj['alliance_id'] = ApiClient.convertToType(data['alliance_id'], 'Number');
            }
            if (data.hasOwnProperty('ceo_id')) {
                obj['ceo_id'] = ApiClient.convertToType(data['ceo_id'], 'Number');
            }
            if (data.hasOwnProperty('creator_id')) {
                obj['creator_id'] = ApiClient.convertToType(data['creator_id'], 'Number');
            }
            if (data.hasOwnProperty('date_founded')) {
                obj['date_founded'] = ApiClient.convertToType(data['date_founded'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('faction_id')) {
                obj['faction_id'] = ApiClient.convertToType(data['faction_id'], 'Number');
            }
            if (data.hasOwnProperty('home_station_id')) {
                obj['home_station_id'] = ApiClient.convertToType(data['home_station_id'], 'Number');
            }
            if (data.hasOwnProperty('member_count')) {
                obj['member_count'] = ApiClient.convertToType(data['member_count'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('shares')) {
                obj['shares'] = ApiClient.convertToType(data['shares'], 'Number');
            }
            if (data.hasOwnProperty('tax_rate')) {
                obj['tax_rate'] = ApiClient.convertToType(data['tax_rate'], 'Number');
            }
            if (data.hasOwnProperty('ticker')) {
                obj['ticker'] = ApiClient.convertToType(data['ticker'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('war_eligible')) {
                obj['war_eligible'] = ApiClient.convertToType(data['war_eligible'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCorporationsCorporationIdOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCorporationsCorporationIdOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCorporationsCorporationIdOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['ticker'] && !(typeof data['ticker'] === 'string' || data['ticker'] instanceof String)) {
            throw new Error("Expected the field `ticker` to be a primitive type in the JSON string but got " + data['ticker']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

GetCorporationsCorporationIdOk.RequiredProperties = ["ceo_id", "creator_id", "member_count", "name", "tax_rate", "ticker"];

/**
 * ID of the alliance that corporation is a member of, if any
 * @member {Number} alliance_id
 */
GetCorporationsCorporationIdOk.prototype['alliance_id'] = undefined;

/**
 * ceo_id integer
 * @member {Number} ceo_id
 */
GetCorporationsCorporationIdOk.prototype['ceo_id'] = undefined;

/**
 * creator_id integer
 * @member {Number} creator_id
 */
GetCorporationsCorporationIdOk.prototype['creator_id'] = undefined;

/**
 * date_founded string
 * @member {Date} date_founded
 */
GetCorporationsCorporationIdOk.prototype['date_founded'] = undefined;

/**
 * description string
 * @member {String} description
 */
GetCorporationsCorporationIdOk.prototype['description'] = undefined;

/**
 * faction_id integer
 * @member {Number} faction_id
 */
GetCorporationsCorporationIdOk.prototype['faction_id'] = undefined;

/**
 * home_station_id integer
 * @member {Number} home_station_id
 */
GetCorporationsCorporationIdOk.prototype['home_station_id'] = undefined;

/**
 * member_count integer
 * @member {Number} member_count
 */
GetCorporationsCorporationIdOk.prototype['member_count'] = undefined;

/**
 * the full name of the corporation
 * @member {String} name
 */
GetCorporationsCorporationIdOk.prototype['name'] = undefined;

/**
 * shares integer
 * @member {Number} shares
 */
GetCorporationsCorporationIdOk.prototype['shares'] = undefined;

/**
 * tax_rate number
 * @member {Number} tax_rate
 */
GetCorporationsCorporationIdOk.prototype['tax_rate'] = undefined;

/**
 * the short name of the corporation
 * @member {String} ticker
 */
GetCorporationsCorporationIdOk.prototype['ticker'] = undefined;

/**
 * url string
 * @member {String} url
 */
GetCorporationsCorporationIdOk.prototype['url'] = undefined;

/**
 * war_eligible boolean
 * @member {Boolean} war_eligible
 */
GetCorporationsCorporationIdOk.prototype['war_eligible'] = undefined;






export default GetCorporationsCorporationIdOk;

