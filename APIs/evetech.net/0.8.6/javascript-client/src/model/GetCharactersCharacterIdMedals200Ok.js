/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetCharactersCharacterIdMedalsGraphic from './GetCharactersCharacterIdMedalsGraphic';

/**
 * The GetCharactersCharacterIdMedals200Ok model module.
 * @module model/GetCharactersCharacterIdMedals200Ok
 * @version 0.8.6
 */
class GetCharactersCharacterIdMedals200Ok {
    /**
     * Constructs a new <code>GetCharactersCharacterIdMedals200Ok</code>.
     * 200 ok object
     * @alias module:model/GetCharactersCharacterIdMedals200Ok
     * @param corporationId {Number} corporation_id integer
     * @param date {Date} date string
     * @param description {String} description string
     * @param graphics {Array.<module:model/GetCharactersCharacterIdMedalsGraphic>} graphics array
     * @param issuerId {Number} issuer_id integer
     * @param medalId {Number} medal_id integer
     * @param reason {String} reason string
     * @param status {module:model/GetCharactersCharacterIdMedals200Ok.StatusEnum} status string
     * @param title {String} title string
     */
    constructor(corporationId, date, description, graphics, issuerId, medalId, reason, status, title) { 
        
        GetCharactersCharacterIdMedals200Ok.initialize(this, corporationId, date, description, graphics, issuerId, medalId, reason, status, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, corporationId, date, description, graphics, issuerId, medalId, reason, status, title) { 
        obj['corporation_id'] = corporationId;
        obj['date'] = date;
        obj['description'] = description;
        obj['graphics'] = graphics;
        obj['issuer_id'] = issuerId;
        obj['medal_id'] = medalId;
        obj['reason'] = reason;
        obj['status'] = status;
        obj['title'] = title;
    }

    /**
     * Constructs a <code>GetCharactersCharacterIdMedals200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCharactersCharacterIdMedals200Ok} obj Optional instance to populate.
     * @return {module:model/GetCharactersCharacterIdMedals200Ok} The populated <code>GetCharactersCharacterIdMedals200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCharactersCharacterIdMedals200Ok();

            if (data.hasOwnProperty('corporation_id')) {
                obj['corporation_id'] = ApiClient.convertToType(data['corporation_id'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('graphics')) {
                obj['graphics'] = ApiClient.convertToType(data['graphics'], [GetCharactersCharacterIdMedalsGraphic]);
            }
            if (data.hasOwnProperty('issuer_id')) {
                obj['issuer_id'] = ApiClient.convertToType(data['issuer_id'], 'Number');
            }
            if (data.hasOwnProperty('medal_id')) {
                obj['medal_id'] = ApiClient.convertToType(data['medal_id'], 'Number');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCharactersCharacterIdMedals200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCharactersCharacterIdMedals200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCharactersCharacterIdMedals200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['graphics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['graphics'])) {
                throw new Error("Expected the field `graphics` to be an array in the JSON data but got " + data['graphics']);
            }
            // validate the optional field `graphics` (array)
            for (const item of data['graphics']) {
                GetCharactersCharacterIdMedalsGraphic.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

GetCharactersCharacterIdMedals200Ok.RequiredProperties = ["corporation_id", "date", "description", "graphics", "issuer_id", "medal_id", "reason", "status", "title"];

/**
 * corporation_id integer
 * @member {Number} corporation_id
 */
GetCharactersCharacterIdMedals200Ok.prototype['corporation_id'] = undefined;

/**
 * date string
 * @member {Date} date
 */
GetCharactersCharacterIdMedals200Ok.prototype['date'] = undefined;

/**
 * description string
 * @member {String} description
 */
GetCharactersCharacterIdMedals200Ok.prototype['description'] = undefined;

/**
 * graphics array
 * @member {Array.<module:model/GetCharactersCharacterIdMedalsGraphic>} graphics
 */
GetCharactersCharacterIdMedals200Ok.prototype['graphics'] = undefined;

/**
 * issuer_id integer
 * @member {Number} issuer_id
 */
GetCharactersCharacterIdMedals200Ok.prototype['issuer_id'] = undefined;

/**
 * medal_id integer
 * @member {Number} medal_id
 */
GetCharactersCharacterIdMedals200Ok.prototype['medal_id'] = undefined;

/**
 * reason string
 * @member {String} reason
 */
GetCharactersCharacterIdMedals200Ok.prototype['reason'] = undefined;

/**
 * status string
 * @member {module:model/GetCharactersCharacterIdMedals200Ok.StatusEnum} status
 */
GetCharactersCharacterIdMedals200Ok.prototype['status'] = undefined;

/**
 * title string
 * @member {String} title
 */
GetCharactersCharacterIdMedals200Ok.prototype['title'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GetCharactersCharacterIdMedals200Ok['StatusEnum'] = {

    /**
     * value: "public"
     * @const
     */
    "public": "public",

    /**
     * value: "private"
     * @const
     */
    "private": "private"
};



export default GetCharactersCharacterIdMedals200Ok;

