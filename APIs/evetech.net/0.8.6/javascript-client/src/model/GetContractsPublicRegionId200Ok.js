/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetContractsPublicRegionId200Ok model module.
 * @module model/GetContractsPublicRegionId200Ok
 * @version 0.8.6
 */
class GetContractsPublicRegionId200Ok {
    /**
     * Constructs a new <code>GetContractsPublicRegionId200Ok</code>.
     * 200 ok object
     * @alias module:model/GetContractsPublicRegionId200Ok
     * @param contractId {Number} contract_id integer
     * @param dateExpired {Date} Expiration date of the contract
     * @param dateIssued {Date} Сreation date of the contract
     * @param issuerCorporationId {Number} Character's corporation ID for the issuer
     * @param issuerId {Number} Character ID for the issuer
     * @param type {module:model/GetContractsPublicRegionId200Ok.TypeEnum} Type of the contract
     */
    constructor(contractId, dateExpired, dateIssued, issuerCorporationId, issuerId, type) { 
        
        GetContractsPublicRegionId200Ok.initialize(this, contractId, dateExpired, dateIssued, issuerCorporationId, issuerId, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contractId, dateExpired, dateIssued, issuerCorporationId, issuerId, type) { 
        obj['contract_id'] = contractId;
        obj['date_expired'] = dateExpired;
        obj['date_issued'] = dateIssued;
        obj['issuer_corporation_id'] = issuerCorporationId;
        obj['issuer_id'] = issuerId;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>GetContractsPublicRegionId200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetContractsPublicRegionId200Ok} obj Optional instance to populate.
     * @return {module:model/GetContractsPublicRegionId200Ok} The populated <code>GetContractsPublicRegionId200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetContractsPublicRegionId200Ok();

            if (data.hasOwnProperty('buyout')) {
                obj['buyout'] = ApiClient.convertToType(data['buyout'], 'Number');
            }
            if (data.hasOwnProperty('collateral')) {
                obj['collateral'] = ApiClient.convertToType(data['collateral'], 'Number');
            }
            if (data.hasOwnProperty('contract_id')) {
                obj['contract_id'] = ApiClient.convertToType(data['contract_id'], 'Number');
            }
            if (data.hasOwnProperty('date_expired')) {
                obj['date_expired'] = ApiClient.convertToType(data['date_expired'], 'Date');
            }
            if (data.hasOwnProperty('date_issued')) {
                obj['date_issued'] = ApiClient.convertToType(data['date_issued'], 'Date');
            }
            if (data.hasOwnProperty('days_to_complete')) {
                obj['days_to_complete'] = ApiClient.convertToType(data['days_to_complete'], 'Number');
            }
            if (data.hasOwnProperty('end_location_id')) {
                obj['end_location_id'] = ApiClient.convertToType(data['end_location_id'], 'Number');
            }
            if (data.hasOwnProperty('for_corporation')) {
                obj['for_corporation'] = ApiClient.convertToType(data['for_corporation'], 'Boolean');
            }
            if (data.hasOwnProperty('issuer_corporation_id')) {
                obj['issuer_corporation_id'] = ApiClient.convertToType(data['issuer_corporation_id'], 'Number');
            }
            if (data.hasOwnProperty('issuer_id')) {
                obj['issuer_id'] = ApiClient.convertToType(data['issuer_id'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('reward')) {
                obj['reward'] = ApiClient.convertToType(data['reward'], 'Number');
            }
            if (data.hasOwnProperty('start_location_id')) {
                obj['start_location_id'] = ApiClient.convertToType(data['start_location_id'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('volume')) {
                obj['volume'] = ApiClient.convertToType(data['volume'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetContractsPublicRegionId200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetContractsPublicRegionId200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetContractsPublicRegionId200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

GetContractsPublicRegionId200Ok.RequiredProperties = ["contract_id", "date_expired", "date_issued", "issuer_corporation_id", "issuer_id", "type"];

/**
 * Buyout price (for Auctions only)
 * @member {Number} buyout
 */
GetContractsPublicRegionId200Ok.prototype['buyout'] = undefined;

/**
 * Collateral price (for Couriers only)
 * @member {Number} collateral
 */
GetContractsPublicRegionId200Ok.prototype['collateral'] = undefined;

/**
 * contract_id integer
 * @member {Number} contract_id
 */
GetContractsPublicRegionId200Ok.prototype['contract_id'] = undefined;

/**
 * Expiration date of the contract
 * @member {Date} date_expired
 */
GetContractsPublicRegionId200Ok.prototype['date_expired'] = undefined;

/**
 * Сreation date of the contract
 * @member {Date} date_issued
 */
GetContractsPublicRegionId200Ok.prototype['date_issued'] = undefined;

/**
 * Number of days to perform the contract
 * @member {Number} days_to_complete
 */
GetContractsPublicRegionId200Ok.prototype['days_to_complete'] = undefined;

/**
 * End location ID (for Couriers contract)
 * @member {Number} end_location_id
 */
GetContractsPublicRegionId200Ok.prototype['end_location_id'] = undefined;

/**
 * true if the contract was issued on behalf of the issuer's corporation
 * @member {Boolean} for_corporation
 */
GetContractsPublicRegionId200Ok.prototype['for_corporation'] = undefined;

/**
 * Character's corporation ID for the issuer
 * @member {Number} issuer_corporation_id
 */
GetContractsPublicRegionId200Ok.prototype['issuer_corporation_id'] = undefined;

/**
 * Character ID for the issuer
 * @member {Number} issuer_id
 */
GetContractsPublicRegionId200Ok.prototype['issuer_id'] = undefined;

/**
 * Price of contract (for ItemsExchange and Auctions)
 * @member {Number} price
 */
GetContractsPublicRegionId200Ok.prototype['price'] = undefined;

/**
 * Remuneration for contract (for Couriers only)
 * @member {Number} reward
 */
GetContractsPublicRegionId200Ok.prototype['reward'] = undefined;

/**
 * Start location ID (for Couriers contract)
 * @member {Number} start_location_id
 */
GetContractsPublicRegionId200Ok.prototype['start_location_id'] = undefined;

/**
 * Title of the contract
 * @member {String} title
 */
GetContractsPublicRegionId200Ok.prototype['title'] = undefined;

/**
 * Type of the contract
 * @member {module:model/GetContractsPublicRegionId200Ok.TypeEnum} type
 */
GetContractsPublicRegionId200Ok.prototype['type'] = undefined;

/**
 * Volume of items in the contract
 * @member {Number} volume
 */
GetContractsPublicRegionId200Ok.prototype['volume'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GetContractsPublicRegionId200Ok['TypeEnum'] = {

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",

    /**
     * value: "item_exchange"
     * @const
     */
    "item_exchange": "item_exchange",

    /**
     * value: "auction"
     * @const
     */
    "auction": "auction",

    /**
     * value: "courier"
     * @const
     */
    "courier": "courier",

    /**
     * value: "loan"
     * @const
     */
    "loan": "loan"
};



export default GetContractsPublicRegionId200Ok;

