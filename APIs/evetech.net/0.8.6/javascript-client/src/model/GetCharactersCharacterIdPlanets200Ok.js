/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetCharactersCharacterIdPlanets200Ok model module.
 * @module model/GetCharactersCharacterIdPlanets200Ok
 * @version 0.8.6
 */
class GetCharactersCharacterIdPlanets200Ok {
    /**
     * Constructs a new <code>GetCharactersCharacterIdPlanets200Ok</code>.
     * 200 ok object
     * @alias module:model/GetCharactersCharacterIdPlanets200Ok
     * @param lastUpdate {Date} last_update string
     * @param numPins {Number} num_pins integer
     * @param ownerId {Number} owner_id integer
     * @param planetId {Number} planet_id integer
     * @param planetType {module:model/GetCharactersCharacterIdPlanets200Ok.PlanetTypeEnum} planet_type string
     * @param solarSystemId {Number} solar_system_id integer
     * @param upgradeLevel {Number} upgrade_level integer
     */
    constructor(lastUpdate, numPins, ownerId, planetId, planetType, solarSystemId, upgradeLevel) { 
        
        GetCharactersCharacterIdPlanets200Ok.initialize(this, lastUpdate, numPins, ownerId, planetId, planetType, solarSystemId, upgradeLevel);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lastUpdate, numPins, ownerId, planetId, planetType, solarSystemId, upgradeLevel) { 
        obj['last_update'] = lastUpdate;
        obj['num_pins'] = numPins;
        obj['owner_id'] = ownerId;
        obj['planet_id'] = planetId;
        obj['planet_type'] = planetType;
        obj['solar_system_id'] = solarSystemId;
        obj['upgrade_level'] = upgradeLevel;
    }

    /**
     * Constructs a <code>GetCharactersCharacterIdPlanets200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCharactersCharacterIdPlanets200Ok} obj Optional instance to populate.
     * @return {module:model/GetCharactersCharacterIdPlanets200Ok} The populated <code>GetCharactersCharacterIdPlanets200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCharactersCharacterIdPlanets200Ok();

            if (data.hasOwnProperty('last_update')) {
                obj['last_update'] = ApiClient.convertToType(data['last_update'], 'Date');
            }
            if (data.hasOwnProperty('num_pins')) {
                obj['num_pins'] = ApiClient.convertToType(data['num_pins'], 'Number');
            }
            if (data.hasOwnProperty('owner_id')) {
                obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'Number');
            }
            if (data.hasOwnProperty('planet_id')) {
                obj['planet_id'] = ApiClient.convertToType(data['planet_id'], 'Number');
            }
            if (data.hasOwnProperty('planet_type')) {
                obj['planet_type'] = ApiClient.convertToType(data['planet_type'], 'String');
            }
            if (data.hasOwnProperty('solar_system_id')) {
                obj['solar_system_id'] = ApiClient.convertToType(data['solar_system_id'], 'Number');
            }
            if (data.hasOwnProperty('upgrade_level')) {
                obj['upgrade_level'] = ApiClient.convertToType(data['upgrade_level'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCharactersCharacterIdPlanets200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCharactersCharacterIdPlanets200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCharactersCharacterIdPlanets200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['planet_type'] && !(typeof data['planet_type'] === 'string' || data['planet_type'] instanceof String)) {
            throw new Error("Expected the field `planet_type` to be a primitive type in the JSON string but got " + data['planet_type']);
        }

        return true;
    }


}

GetCharactersCharacterIdPlanets200Ok.RequiredProperties = ["last_update", "num_pins", "owner_id", "planet_id", "planet_type", "solar_system_id", "upgrade_level"];

/**
 * last_update string
 * @member {Date} last_update
 */
GetCharactersCharacterIdPlanets200Ok.prototype['last_update'] = undefined;

/**
 * num_pins integer
 * @member {Number} num_pins
 */
GetCharactersCharacterIdPlanets200Ok.prototype['num_pins'] = undefined;

/**
 * owner_id integer
 * @member {Number} owner_id
 */
GetCharactersCharacterIdPlanets200Ok.prototype['owner_id'] = undefined;

/**
 * planet_id integer
 * @member {Number} planet_id
 */
GetCharactersCharacterIdPlanets200Ok.prototype['planet_id'] = undefined;

/**
 * planet_type string
 * @member {module:model/GetCharactersCharacterIdPlanets200Ok.PlanetTypeEnum} planet_type
 */
GetCharactersCharacterIdPlanets200Ok.prototype['planet_type'] = undefined;

/**
 * solar_system_id integer
 * @member {Number} solar_system_id
 */
GetCharactersCharacterIdPlanets200Ok.prototype['solar_system_id'] = undefined;

/**
 * upgrade_level integer
 * @member {Number} upgrade_level
 */
GetCharactersCharacterIdPlanets200Ok.prototype['upgrade_level'] = undefined;





/**
 * Allowed values for the <code>planet_type</code> property.
 * @enum {String}
 * @readonly
 */
GetCharactersCharacterIdPlanets200Ok['PlanetTypeEnum'] = {

    /**
     * value: "temperate"
     * @const
     */
    "temperate": "temperate",

    /**
     * value: "barren"
     * @const
     */
    "barren": "barren",

    /**
     * value: "oceanic"
     * @const
     */
    "oceanic": "oceanic",

    /**
     * value: "ice"
     * @const
     */
    "ice": "ice",

    /**
     * value: "gas"
     * @const
     */
    "gas": "gas",

    /**
     * value: "lava"
     * @const
     */
    "lava": "lava",

    /**
     * value: "storm"
     * @const
     */
    "storm": "storm",

    /**
     * value: "plasma"
     * @const
     */
    "plasma": "plasma"
};



export default GetCharactersCharacterIdPlanets200Ok;

