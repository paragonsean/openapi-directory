/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetUniverseSystemsSystemIdPlanet from './GetUniverseSystemsSystemIdPlanet';
import GetUniverseSystemsSystemIdPosition from './GetUniverseSystemsSystemIdPosition';

/**
 * The GetUniverseSystemsSystemIdOk model module.
 * @module model/GetUniverseSystemsSystemIdOk
 * @version 0.8.6
 */
class GetUniverseSystemsSystemIdOk {
    /**
     * Constructs a new <code>GetUniverseSystemsSystemIdOk</code>.
     * 200 ok object
     * @alias module:model/GetUniverseSystemsSystemIdOk
     * @param constellationId {Number} The constellation this solar system is in
     * @param name {String} name string
     * @param position {module:model/GetUniverseSystemsSystemIdPosition} 
     * @param securityStatus {Number} security_status number
     * @param systemId {Number} system_id integer
     */
    constructor(constellationId, name, position, securityStatus, systemId) { 
        
        GetUniverseSystemsSystemIdOk.initialize(this, constellationId, name, position, securityStatus, systemId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, constellationId, name, position, securityStatus, systemId) { 
        obj['constellation_id'] = constellationId;
        obj['name'] = name;
        obj['position'] = position;
        obj['security_status'] = securityStatus;
        obj['system_id'] = systemId;
    }

    /**
     * Constructs a <code>GetUniverseSystemsSystemIdOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUniverseSystemsSystemIdOk} obj Optional instance to populate.
     * @return {module:model/GetUniverseSystemsSystemIdOk} The populated <code>GetUniverseSystemsSystemIdOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUniverseSystemsSystemIdOk();

            if (data.hasOwnProperty('constellation_id')) {
                obj['constellation_id'] = ApiClient.convertToType(data['constellation_id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('planets')) {
                obj['planets'] = ApiClient.convertToType(data['planets'], [GetUniverseSystemsSystemIdPlanet]);
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = GetUniverseSystemsSystemIdPosition.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('security_class')) {
                obj['security_class'] = ApiClient.convertToType(data['security_class'], 'String');
            }
            if (data.hasOwnProperty('security_status')) {
                obj['security_status'] = ApiClient.convertToType(data['security_status'], 'Number');
            }
            if (data.hasOwnProperty('star_id')) {
                obj['star_id'] = ApiClient.convertToType(data['star_id'], 'Number');
            }
            if (data.hasOwnProperty('stargates')) {
                obj['stargates'] = ApiClient.convertToType(data['stargates'], ['Number']);
            }
            if (data.hasOwnProperty('stations')) {
                obj['stations'] = ApiClient.convertToType(data['stations'], ['Number']);
            }
            if (data.hasOwnProperty('system_id')) {
                obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetUniverseSystemsSystemIdOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetUniverseSystemsSystemIdOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetUniverseSystemsSystemIdOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['planets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['planets'])) {
                throw new Error("Expected the field `planets` to be an array in the JSON data but got " + data['planets']);
            }
            // validate the optional field `planets` (array)
            for (const item of data['planets']) {
                GetUniverseSystemsSystemIdPlanet.validateJSON(item);
            };
        }
        // validate the optional field `position`
        if (data['position']) { // data not null
          GetUniverseSystemsSystemIdPosition.validateJSON(data['position']);
        }
        // ensure the json data is a string
        if (data['security_class'] && !(typeof data['security_class'] === 'string' || data['security_class'] instanceof String)) {
            throw new Error("Expected the field `security_class` to be a primitive type in the JSON string but got " + data['security_class']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stargates'])) {
            throw new Error("Expected the field `stargates` to be an array in the JSON data but got " + data['stargates']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stations'])) {
            throw new Error("Expected the field `stations` to be an array in the JSON data but got " + data['stations']);
        }

        return true;
    }


}

GetUniverseSystemsSystemIdOk.RequiredProperties = ["constellation_id", "name", "position", "security_status", "system_id"];

/**
 * The constellation this solar system is in
 * @member {Number} constellation_id
 */
GetUniverseSystemsSystemIdOk.prototype['constellation_id'] = undefined;

/**
 * name string
 * @member {String} name
 */
GetUniverseSystemsSystemIdOk.prototype['name'] = undefined;

/**
 * planets array
 * @member {Array.<module:model/GetUniverseSystemsSystemIdPlanet>} planets
 */
GetUniverseSystemsSystemIdOk.prototype['planets'] = undefined;

/**
 * @member {module:model/GetUniverseSystemsSystemIdPosition} position
 */
GetUniverseSystemsSystemIdOk.prototype['position'] = undefined;

/**
 * security_class string
 * @member {String} security_class
 */
GetUniverseSystemsSystemIdOk.prototype['security_class'] = undefined;

/**
 * security_status number
 * @member {Number} security_status
 */
GetUniverseSystemsSystemIdOk.prototype['security_status'] = undefined;

/**
 * star_id integer
 * @member {Number} star_id
 */
GetUniverseSystemsSystemIdOk.prototype['star_id'] = undefined;

/**
 * stargates array
 * @member {Array.<Number>} stargates
 */
GetUniverseSystemsSystemIdOk.prototype['stargates'] = undefined;

/**
 * stations array
 * @member {Array.<Number>} stations
 */
GetUniverseSystemsSystemIdOk.prototype['stations'] = undefined;

/**
 * system_id integer
 * @member {Number} system_id
 */
GetUniverseSystemsSystemIdOk.prototype['system_id'] = undefined;






export default GetUniverseSystemsSystemIdOk;

