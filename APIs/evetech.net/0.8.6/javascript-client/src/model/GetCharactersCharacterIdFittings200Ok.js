/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetCharactersCharacterIdFittingsItem from './GetCharactersCharacterIdFittingsItem';

/**
 * The GetCharactersCharacterIdFittings200Ok model module.
 * @module model/GetCharactersCharacterIdFittings200Ok
 * @version 0.8.6
 */
class GetCharactersCharacterIdFittings200Ok {
    /**
     * Constructs a new <code>GetCharactersCharacterIdFittings200Ok</code>.
     * 200 ok object
     * @alias module:model/GetCharactersCharacterIdFittings200Ok
     * @param description {String} description string
     * @param fittingId {Number} fitting_id integer
     * @param items {Array.<module:model/GetCharactersCharacterIdFittingsItem>} items array
     * @param name {String} name string
     * @param shipTypeId {Number} ship_type_id integer
     */
    constructor(description, fittingId, items, name, shipTypeId) { 
        
        GetCharactersCharacterIdFittings200Ok.initialize(this, description, fittingId, items, name, shipTypeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, fittingId, items, name, shipTypeId) { 
        obj['description'] = description;
        obj['fitting_id'] = fittingId;
        obj['items'] = items;
        obj['name'] = name;
        obj['ship_type_id'] = shipTypeId;
    }

    /**
     * Constructs a <code>GetCharactersCharacterIdFittings200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCharactersCharacterIdFittings200Ok} obj Optional instance to populate.
     * @return {module:model/GetCharactersCharacterIdFittings200Ok} The populated <code>GetCharactersCharacterIdFittings200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCharactersCharacterIdFittings200Ok();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('fitting_id')) {
                obj['fitting_id'] = ApiClient.convertToType(data['fitting_id'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [GetCharactersCharacterIdFittingsItem]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('ship_type_id')) {
                obj['ship_type_id'] = ApiClient.convertToType(data['ship_type_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCharactersCharacterIdFittings200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCharactersCharacterIdFittings200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCharactersCharacterIdFittings200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                GetCharactersCharacterIdFittingsItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

GetCharactersCharacterIdFittings200Ok.RequiredProperties = ["description", "fitting_id", "items", "name", "ship_type_id"];

/**
 * description string
 * @member {String} description
 */
GetCharactersCharacterIdFittings200Ok.prototype['description'] = undefined;

/**
 * fitting_id integer
 * @member {Number} fitting_id
 */
GetCharactersCharacterIdFittings200Ok.prototype['fitting_id'] = undefined;

/**
 * items array
 * @member {Array.<module:model/GetCharactersCharacterIdFittingsItem>} items
 */
GetCharactersCharacterIdFittings200Ok.prototype['items'] = undefined;

/**
 * name string
 * @member {String} name
 */
GetCharactersCharacterIdFittings200Ok.prototype['name'] = undefined;

/**
 * ship_type_id integer
 * @member {Number} ship_type_id
 */
GetCharactersCharacterIdFittings200Ok.prototype['ship_type_id'] = undefined;






export default GetCharactersCharacterIdFittings200Ok;

