/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetDogmaAttributesAttributeIdOk model module.
 * @module model/GetDogmaAttributesAttributeIdOk
 * @version 0.8.6
 */
class GetDogmaAttributesAttributeIdOk {
    /**
     * Constructs a new <code>GetDogmaAttributesAttributeIdOk</code>.
     * 200 ok object
     * @alias module:model/GetDogmaAttributesAttributeIdOk
     * @param attributeId {Number} attribute_id integer
     */
    constructor(attributeId) { 
        
        GetDogmaAttributesAttributeIdOk.initialize(this, attributeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attributeId) { 
        obj['attribute_id'] = attributeId;
    }

    /**
     * Constructs a <code>GetDogmaAttributesAttributeIdOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDogmaAttributesAttributeIdOk} obj Optional instance to populate.
     * @return {module:model/GetDogmaAttributesAttributeIdOk} The populated <code>GetDogmaAttributesAttributeIdOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDogmaAttributesAttributeIdOk();

            if (data.hasOwnProperty('attribute_id')) {
                obj['attribute_id'] = ApiClient.convertToType(data['attribute_id'], 'Number');
            }
            if (data.hasOwnProperty('default_value')) {
                obj['default_value'] = ApiClient.convertToType(data['default_value'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('high_is_good')) {
                obj['high_is_good'] = ApiClient.convertToType(data['high_is_good'], 'Boolean');
            }
            if (data.hasOwnProperty('icon_id')) {
                obj['icon_id'] = ApiClient.convertToType(data['icon_id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('published')) {
                obj['published'] = ApiClient.convertToType(data['published'], 'Boolean');
            }
            if (data.hasOwnProperty('stackable')) {
                obj['stackable'] = ApiClient.convertToType(data['stackable'], 'Boolean');
            }
            if (data.hasOwnProperty('unit_id')) {
                obj['unit_id'] = ApiClient.convertToType(data['unit_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDogmaAttributesAttributeIdOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDogmaAttributesAttributeIdOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetDogmaAttributesAttributeIdOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

GetDogmaAttributesAttributeIdOk.RequiredProperties = ["attribute_id"];

/**
 * attribute_id integer
 * @member {Number} attribute_id
 */
GetDogmaAttributesAttributeIdOk.prototype['attribute_id'] = undefined;

/**
 * default_value number
 * @member {Number} default_value
 */
GetDogmaAttributesAttributeIdOk.prototype['default_value'] = undefined;

/**
 * description string
 * @member {String} description
 */
GetDogmaAttributesAttributeIdOk.prototype['description'] = undefined;

/**
 * display_name string
 * @member {String} display_name
 */
GetDogmaAttributesAttributeIdOk.prototype['display_name'] = undefined;

/**
 * high_is_good boolean
 * @member {Boolean} high_is_good
 */
GetDogmaAttributesAttributeIdOk.prototype['high_is_good'] = undefined;

/**
 * icon_id integer
 * @member {Number} icon_id
 */
GetDogmaAttributesAttributeIdOk.prototype['icon_id'] = undefined;

/**
 * name string
 * @member {String} name
 */
GetDogmaAttributesAttributeIdOk.prototype['name'] = undefined;

/**
 * published boolean
 * @member {Boolean} published
 */
GetDogmaAttributesAttributeIdOk.prototype['published'] = undefined;

/**
 * stackable boolean
 * @member {Boolean} stackable
 */
GetDogmaAttributesAttributeIdOk.prototype['stackable'] = undefined;

/**
 * unit_id integer
 * @member {Number} unit_id
 */
GetDogmaAttributesAttributeIdOk.prototype['unit_id'] = undefined;






export default GetDogmaAttributesAttributeIdOk;

