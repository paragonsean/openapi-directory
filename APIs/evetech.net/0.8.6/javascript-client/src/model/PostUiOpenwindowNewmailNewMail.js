/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostUiOpenwindowNewmailNewMail model module.
 * @module model/PostUiOpenwindowNewmailNewMail
 * @version 0.8.6
 */
class PostUiOpenwindowNewmailNewMail {
    /**
     * Constructs a new <code>PostUiOpenwindowNewmailNewMail</code>.
     * new_mail object
     * @alias module:model/PostUiOpenwindowNewmailNewMail
     * @param body {String} body string
     * @param recipients {Array.<Number>} recipients array
     * @param subject {String} subject string
     */
    constructor(body, recipients, subject) { 
        
        PostUiOpenwindowNewmailNewMail.initialize(this, body, recipients, subject);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, body, recipients, subject) { 
        obj['body'] = body;
        obj['recipients'] = recipients;
        obj['subject'] = subject;
    }

    /**
     * Constructs a <code>PostUiOpenwindowNewmailNewMail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostUiOpenwindowNewmailNewMail} obj Optional instance to populate.
     * @return {module:model/PostUiOpenwindowNewmailNewMail} The populated <code>PostUiOpenwindowNewmailNewMail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostUiOpenwindowNewmailNewMail();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('recipients')) {
                obj['recipients'] = ApiClient.convertToType(data['recipients'], ['Number']);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('to_corp_or_alliance_id')) {
                obj['to_corp_or_alliance_id'] = ApiClient.convertToType(data['to_corp_or_alliance_id'], 'Number');
            }
            if (data.hasOwnProperty('to_mailing_list_id')) {
                obj['to_mailing_list_id'] = ApiClient.convertToType(data['to_mailing_list_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostUiOpenwindowNewmailNewMail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostUiOpenwindowNewmailNewMail</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostUiOpenwindowNewmailNewMail.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['recipients'])) {
            throw new Error("Expected the field `recipients` to be an array in the JSON data but got " + data['recipients']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }

        return true;
    }


}

PostUiOpenwindowNewmailNewMail.RequiredProperties = ["body", "recipients", "subject"];

/**
 * body string
 * @member {String} body
 */
PostUiOpenwindowNewmailNewMail.prototype['body'] = undefined;

/**
 * recipients array
 * @member {Array.<Number>} recipients
 */
PostUiOpenwindowNewmailNewMail.prototype['recipients'] = undefined;

/**
 * subject string
 * @member {String} subject
 */
PostUiOpenwindowNewmailNewMail.prototype['subject'] = undefined;

/**
 * to_corp_or_alliance_id integer
 * @member {Number} to_corp_or_alliance_id
 */
PostUiOpenwindowNewmailNewMail.prototype['to_corp_or_alliance_id'] = undefined;

/**
 * Corporations, alliances and mailing lists are all types of mailing groups. You may only send to one mailing group, at a time, so you may fill out either this field or the to_corp_or_alliance_ids field
 * @member {Number} to_mailing_list_id
 */
PostUiOpenwindowNewmailNewMail.prototype['to_mailing_list_id'] = undefined;






export default PostUiOpenwindowNewmailNewMail;

