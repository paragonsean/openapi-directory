/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetCharactersCharacterIdNotificationsContacts200Ok model module.
 * @module model/GetCharactersCharacterIdNotificationsContacts200Ok
 * @version 0.8.6
 */
class GetCharactersCharacterIdNotificationsContacts200Ok {
    /**
     * Constructs a new <code>GetCharactersCharacterIdNotificationsContacts200Ok</code>.
     * 200 ok object
     * @alias module:model/GetCharactersCharacterIdNotificationsContacts200Ok
     * @param message {String} message string
     * @param notificationId {Number} notification_id integer
     * @param sendDate {Date} send_date string
     * @param senderCharacterId {Number} sender_character_id integer
     * @param standingLevel {Number} A number representing the standing level the receiver has been added at by the sender. The standing levels are as follows: -10 -> Terrible | -5 -> Bad |  0 -> Neutral |  5 -> Good |  10 -> Excellent
     */
    constructor(message, notificationId, sendDate, senderCharacterId, standingLevel) { 
        
        GetCharactersCharacterIdNotificationsContacts200Ok.initialize(this, message, notificationId, sendDate, senderCharacterId, standingLevel);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, message, notificationId, sendDate, senderCharacterId, standingLevel) { 
        obj['message'] = message;
        obj['notification_id'] = notificationId;
        obj['send_date'] = sendDate;
        obj['sender_character_id'] = senderCharacterId;
        obj['standing_level'] = standingLevel;
    }

    /**
     * Constructs a <code>GetCharactersCharacterIdNotificationsContacts200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCharactersCharacterIdNotificationsContacts200Ok} obj Optional instance to populate.
     * @return {module:model/GetCharactersCharacterIdNotificationsContacts200Ok} The populated <code>GetCharactersCharacterIdNotificationsContacts200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCharactersCharacterIdNotificationsContacts200Ok();

            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('notification_id')) {
                obj['notification_id'] = ApiClient.convertToType(data['notification_id'], 'Number');
            }
            if (data.hasOwnProperty('send_date')) {
                obj['send_date'] = ApiClient.convertToType(data['send_date'], 'Date');
            }
            if (data.hasOwnProperty('sender_character_id')) {
                obj['sender_character_id'] = ApiClient.convertToType(data['sender_character_id'], 'Number');
            }
            if (data.hasOwnProperty('standing_level')) {
                obj['standing_level'] = ApiClient.convertToType(data['standing_level'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCharactersCharacterIdNotificationsContacts200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCharactersCharacterIdNotificationsContacts200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCharactersCharacterIdNotificationsContacts200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}

GetCharactersCharacterIdNotificationsContacts200Ok.RequiredProperties = ["message", "notification_id", "send_date", "sender_character_id", "standing_level"];

/**
 * message string
 * @member {String} message
 */
GetCharactersCharacterIdNotificationsContacts200Ok.prototype['message'] = undefined;

/**
 * notification_id integer
 * @member {Number} notification_id
 */
GetCharactersCharacterIdNotificationsContacts200Ok.prototype['notification_id'] = undefined;

/**
 * send_date string
 * @member {Date} send_date
 */
GetCharactersCharacterIdNotificationsContacts200Ok.prototype['send_date'] = undefined;

/**
 * sender_character_id integer
 * @member {Number} sender_character_id
 */
GetCharactersCharacterIdNotificationsContacts200Ok.prototype['sender_character_id'] = undefined;

/**
 * A number representing the standing level the receiver has been added at by the sender. The standing levels are as follows: -10 -> Terrible | -5 -> Bad |  0 -> Neutral |  5 -> Good |  10 -> Excellent
 * @member {Number} standing_level
 */
GetCharactersCharacterIdNotificationsContacts200Ok.prototype['standing_level'] = undefined;






export default GetCharactersCharacterIdNotificationsContacts200Ok;

