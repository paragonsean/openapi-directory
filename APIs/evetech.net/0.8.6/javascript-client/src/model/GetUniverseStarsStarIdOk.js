/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetUniverseStarsStarIdOk model module.
 * @module model/GetUniverseStarsStarIdOk
 * @version 0.8.6
 */
class GetUniverseStarsStarIdOk {
    /**
     * Constructs a new <code>GetUniverseStarsStarIdOk</code>.
     * 200 ok object
     * @alias module:model/GetUniverseStarsStarIdOk
     * @param age {Number} Age of star in years
     * @param luminosity {Number} luminosity number
     * @param name {String} name string
     * @param radius {Number} radius integer
     * @param solarSystemId {Number} solar_system_id integer
     * @param spectralClass {module:model/GetUniverseStarsStarIdOk.SpectralClassEnum} spectral_class string
     * @param temperature {Number} temperature integer
     * @param typeId {Number} type_id integer
     */
    constructor(age, luminosity, name, radius, solarSystemId, spectralClass, temperature, typeId) { 
        
        GetUniverseStarsStarIdOk.initialize(this, age, luminosity, name, radius, solarSystemId, spectralClass, temperature, typeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, age, luminosity, name, radius, solarSystemId, spectralClass, temperature, typeId) { 
        obj['age'] = age;
        obj['luminosity'] = luminosity;
        obj['name'] = name;
        obj['radius'] = radius;
        obj['solar_system_id'] = solarSystemId;
        obj['spectral_class'] = spectralClass;
        obj['temperature'] = temperature;
        obj['type_id'] = typeId;
    }

    /**
     * Constructs a <code>GetUniverseStarsStarIdOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUniverseStarsStarIdOk} obj Optional instance to populate.
     * @return {module:model/GetUniverseStarsStarIdOk} The populated <code>GetUniverseStarsStarIdOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUniverseStarsStarIdOk();

            if (data.hasOwnProperty('age')) {
                obj['age'] = ApiClient.convertToType(data['age'], 'Number');
            }
            if (data.hasOwnProperty('luminosity')) {
                obj['luminosity'] = ApiClient.convertToType(data['luminosity'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('radius')) {
                obj['radius'] = ApiClient.convertToType(data['radius'], 'Number');
            }
            if (data.hasOwnProperty('solar_system_id')) {
                obj['solar_system_id'] = ApiClient.convertToType(data['solar_system_id'], 'Number');
            }
            if (data.hasOwnProperty('spectral_class')) {
                obj['spectral_class'] = ApiClient.convertToType(data['spectral_class'], 'String');
            }
            if (data.hasOwnProperty('temperature')) {
                obj['temperature'] = ApiClient.convertToType(data['temperature'], 'Number');
            }
            if (data.hasOwnProperty('type_id')) {
                obj['type_id'] = ApiClient.convertToType(data['type_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetUniverseStarsStarIdOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetUniverseStarsStarIdOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetUniverseStarsStarIdOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['spectral_class'] && !(typeof data['spectral_class'] === 'string' || data['spectral_class'] instanceof String)) {
            throw new Error("Expected the field `spectral_class` to be a primitive type in the JSON string but got " + data['spectral_class']);
        }

        return true;
    }


}

GetUniverseStarsStarIdOk.RequiredProperties = ["age", "luminosity", "name", "radius", "solar_system_id", "spectral_class", "temperature", "type_id"];

/**
 * Age of star in years
 * @member {Number} age
 */
GetUniverseStarsStarIdOk.prototype['age'] = undefined;

/**
 * luminosity number
 * @member {Number} luminosity
 */
GetUniverseStarsStarIdOk.prototype['luminosity'] = undefined;

/**
 * name string
 * @member {String} name
 */
GetUniverseStarsStarIdOk.prototype['name'] = undefined;

/**
 * radius integer
 * @member {Number} radius
 */
GetUniverseStarsStarIdOk.prototype['radius'] = undefined;

/**
 * solar_system_id integer
 * @member {Number} solar_system_id
 */
GetUniverseStarsStarIdOk.prototype['solar_system_id'] = undefined;

/**
 * spectral_class string
 * @member {module:model/GetUniverseStarsStarIdOk.SpectralClassEnum} spectral_class
 */
GetUniverseStarsStarIdOk.prototype['spectral_class'] = undefined;

/**
 * temperature integer
 * @member {Number} temperature
 */
GetUniverseStarsStarIdOk.prototype['temperature'] = undefined;

/**
 * type_id integer
 * @member {Number} type_id
 */
GetUniverseStarsStarIdOk.prototype['type_id'] = undefined;





/**
 * Allowed values for the <code>spectral_class</code> property.
 * @enum {String}
 * @readonly
 */
GetUniverseStarsStarIdOk['SpectralClassEnum'] = {

    /**
     * value: "K2 V"
     * @const
     */
    "K2 V": "K2 V",

    /**
     * value: "K4 V"
     * @const
     */
    "K4 V": "K4 V",

    /**
     * value: "G2 V"
     * @const
     */
    "G2 V": "G2 V",

    /**
     * value: "G8 V"
     * @const
     */
    "G8 V": "G8 V",

    /**
     * value: "M7 V"
     * @const
     */
    "M7 V": "M7 V",

    /**
     * value: "K7 V"
     * @const
     */
    "K7 V": "K7 V",

    /**
     * value: "M2 V"
     * @const
     */
    "M2 V": "M2 V",

    /**
     * value: "K5 V"
     * @const
     */
    "K5 V": "K5 V",

    /**
     * value: "M3 V"
     * @const
     */
    "M3 V": "M3 V",

    /**
     * value: "G0 V"
     * @const
     */
    "G0 V": "G0 V",

    /**
     * value: "G7 V"
     * @const
     */
    "G7 V": "G7 V",

    /**
     * value: "G3 V"
     * @const
     */
    "G3 V": "G3 V",

    /**
     * value: "F9 V"
     * @const
     */
    "F9 V": "F9 V",

    /**
     * value: "G5 V"
     * @const
     */
    "G5 V": "G5 V",

    /**
     * value: "F6 V"
     * @const
     */
    "F6 V": "F6 V",

    /**
     * value: "K8 V"
     * @const
     */
    "K8 V": "K8 V",

    /**
     * value: "K9 V"
     * @const
     */
    "K9 V": "K9 V",

    /**
     * value: "K6 V"
     * @const
     */
    "K6 V": "K6 V",

    /**
     * value: "G9 V"
     * @const
     */
    "G9 V": "G9 V",

    /**
     * value: "G6 V"
     * @const
     */
    "G6 V": "G6 V",

    /**
     * value: "G4 VI"
     * @const
     */
    "G4 VI": "G4 VI",

    /**
     * value: "G4 V"
     * @const
     */
    "G4 V": "G4 V",

    /**
     * value: "F8 V"
     * @const
     */
    "F8 V": "F8 V",

    /**
     * value: "F2 V"
     * @const
     */
    "F2 V": "F2 V",

    /**
     * value: "F1 V"
     * @const
     */
    "F1 V": "F1 V",

    /**
     * value: "K3 V"
     * @const
     */
    "K3 V": "K3 V",

    /**
     * value: "F0 VI"
     * @const
     */
    "F0 VI": "F0 VI",

    /**
     * value: "G1 VI"
     * @const
     */
    "G1 VI": "G1 VI",

    /**
     * value: "G0 VI"
     * @const
     */
    "G0 VI": "G0 VI",

    /**
     * value: "K1 V"
     * @const
     */
    "K1 V": "K1 V",

    /**
     * value: "M4 V"
     * @const
     */
    "M4 V": "M4 V",

    /**
     * value: "M1 V"
     * @const
     */
    "M1 V": "M1 V",

    /**
     * value: "M6 V"
     * @const
     */
    "M6 V": "M6 V",

    /**
     * value: "M0 V"
     * @const
     */
    "M0 V": "M0 V",

    /**
     * value: "K2 IV"
     * @const
     */
    "K2 IV": "K2 IV",

    /**
     * value: "G2 VI"
     * @const
     */
    "G2 VI": "G2 VI",

    /**
     * value: "K0 V"
     * @const
     */
    "K0 V": "K0 V",

    /**
     * value: "K5 IV"
     * @const
     */
    "K5 IV": "K5 IV",

    /**
     * value: "F5 VI"
     * @const
     */
    "F5 VI": "F5 VI",

    /**
     * value: "G6 VI"
     * @const
     */
    "G6 VI": "G6 VI",

    /**
     * value: "F6 VI"
     * @const
     */
    "F6 VI": "F6 VI",

    /**
     * value: "F2 IV"
     * @const
     */
    "F2 IV": "F2 IV",

    /**
     * value: "G3 VI"
     * @const
     */
    "G3 VI": "G3 VI",

    /**
     * value: "M8 V"
     * @const
     */
    "M8 V": "M8 V",

    /**
     * value: "F1 VI"
     * @const
     */
    "F1 VI": "F1 VI",

    /**
     * value: "K1 IV"
     * @const
     */
    "K1 IV": "K1 IV",

    /**
     * value: "F7 V"
     * @const
     */
    "F7 V": "F7 V",

    /**
     * value: "G5 VI"
     * @const
     */
    "G5 VI": "G5 VI",

    /**
     * value: "M5 V"
     * @const
     */
    "M5 V": "M5 V",

    /**
     * value: "G7 VI"
     * @const
     */
    "G7 VI": "G7 VI",

    /**
     * value: "F5 V"
     * @const
     */
    "F5 V": "F5 V",

    /**
     * value: "F4 VI"
     * @const
     */
    "F4 VI": "F4 VI",

    /**
     * value: "F8 VI"
     * @const
     */
    "F8 VI": "F8 VI",

    /**
     * value: "K3 IV"
     * @const
     */
    "K3 IV": "K3 IV",

    /**
     * value: "F4 IV"
     * @const
     */
    "F4 IV": "F4 IV",

    /**
     * value: "F0 V"
     * @const
     */
    "F0 V": "F0 V",

    /**
     * value: "G7 IV"
     * @const
     */
    "G7 IV": "G7 IV",

    /**
     * value: "G8 VI"
     * @const
     */
    "G8 VI": "G8 VI",

    /**
     * value: "F2 VI"
     * @const
     */
    "F2 VI": "F2 VI",

    /**
     * value: "F4 V"
     * @const
     */
    "F4 V": "F4 V",

    /**
     * value: "F7 VI"
     * @const
     */
    "F7 VI": "F7 VI",

    /**
     * value: "F3 V"
     * @const
     */
    "F3 V": "F3 V",

    /**
     * value: "G1 V"
     * @const
     */
    "G1 V": "G1 V",

    /**
     * value: "G9 VI"
     * @const
     */
    "G9 VI": "G9 VI",

    /**
     * value: "F3 IV"
     * @const
     */
    "F3 IV": "F3 IV",

    /**
     * value: "F9 VI"
     * @const
     */
    "F9 VI": "F9 VI",

    /**
     * value: "M9 V"
     * @const
     */
    "M9 V": "M9 V",

    /**
     * value: "K0 IV"
     * @const
     */
    "K0 IV": "K0 IV",

    /**
     * value: "F1 IV"
     * @const
     */
    "F1 IV": "F1 IV",

    /**
     * value: "G4 IV"
     * @const
     */
    "G4 IV": "G4 IV",

    /**
     * value: "F3 VI"
     * @const
     */
    "F3 VI": "F3 VI",

    /**
     * value: "K4 IV"
     * @const
     */
    "K4 IV": "K4 IV",

    /**
     * value: "G5 IV"
     * @const
     */
    "G5 IV": "G5 IV",

    /**
     * value: "G3 IV"
     * @const
     */
    "G3 IV": "G3 IV",

    /**
     * value: "G1 IV"
     * @const
     */
    "G1 IV": "G1 IV",

    /**
     * value: "K7 IV"
     * @const
     */
    "K7 IV": "K7 IV",

    /**
     * value: "G0 IV"
     * @const
     */
    "G0 IV": "G0 IV",

    /**
     * value: "K6 IV"
     * @const
     */
    "K6 IV": "K6 IV",

    /**
     * value: "K9 IV"
     * @const
     */
    "K9 IV": "K9 IV",

    /**
     * value: "G2 IV"
     * @const
     */
    "G2 IV": "G2 IV",

    /**
     * value: "F9 IV"
     * @const
     */
    "F9 IV": "F9 IV",

    /**
     * value: "F0 IV"
     * @const
     */
    "F0 IV": "F0 IV",

    /**
     * value: "K8 IV"
     * @const
     */
    "K8 IV": "K8 IV",

    /**
     * value: "G8 IV"
     * @const
     */
    "G8 IV": "G8 IV",

    /**
     * value: "F6 IV"
     * @const
     */
    "F6 IV": "F6 IV",

    /**
     * value: "F5 IV"
     * @const
     */
    "F5 IV": "F5 IV",

    /**
     * value: "A0"
     * @const
     */
    "A0": "A0",

    /**
     * value: "A0IV"
     * @const
     */
    "A0IV": "A0IV",

    /**
     * value: "A0IV2"
     * @const
     */
    "A0IV2": "A0IV2"
};



export default GetUniverseStarsStarIdOk;

