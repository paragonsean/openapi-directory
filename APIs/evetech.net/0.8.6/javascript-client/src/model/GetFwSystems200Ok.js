/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetFwSystems200Ok model module.
 * @module model/GetFwSystems200Ok
 * @version 0.8.6
 */
class GetFwSystems200Ok {
    /**
     * Constructs a new <code>GetFwSystems200Ok</code>.
     * 200 ok object
     * @alias module:model/GetFwSystems200Ok
     * @param contested {module:model/GetFwSystems200Ok.ContestedEnum} contested string
     * @param occupierFactionId {Number} occupier_faction_id integer
     * @param ownerFactionId {Number} owner_faction_id integer
     * @param solarSystemId {Number} solar_system_id integer
     * @param victoryPoints {Number} victory_points integer
     * @param victoryPointsThreshold {Number} victory_points_threshold integer
     */
    constructor(contested, occupierFactionId, ownerFactionId, solarSystemId, victoryPoints, victoryPointsThreshold) { 
        
        GetFwSystems200Ok.initialize(this, contested, occupierFactionId, ownerFactionId, solarSystemId, victoryPoints, victoryPointsThreshold);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contested, occupierFactionId, ownerFactionId, solarSystemId, victoryPoints, victoryPointsThreshold) { 
        obj['contested'] = contested;
        obj['occupier_faction_id'] = occupierFactionId;
        obj['owner_faction_id'] = ownerFactionId;
        obj['solar_system_id'] = solarSystemId;
        obj['victory_points'] = victoryPoints;
        obj['victory_points_threshold'] = victoryPointsThreshold;
    }

    /**
     * Constructs a <code>GetFwSystems200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetFwSystems200Ok} obj Optional instance to populate.
     * @return {module:model/GetFwSystems200Ok} The populated <code>GetFwSystems200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetFwSystems200Ok();

            if (data.hasOwnProperty('contested')) {
                obj['contested'] = ApiClient.convertToType(data['contested'], 'String');
            }
            if (data.hasOwnProperty('occupier_faction_id')) {
                obj['occupier_faction_id'] = ApiClient.convertToType(data['occupier_faction_id'], 'Number');
            }
            if (data.hasOwnProperty('owner_faction_id')) {
                obj['owner_faction_id'] = ApiClient.convertToType(data['owner_faction_id'], 'Number');
            }
            if (data.hasOwnProperty('solar_system_id')) {
                obj['solar_system_id'] = ApiClient.convertToType(data['solar_system_id'], 'Number');
            }
            if (data.hasOwnProperty('victory_points')) {
                obj['victory_points'] = ApiClient.convertToType(data['victory_points'], 'Number');
            }
            if (data.hasOwnProperty('victory_points_threshold')) {
                obj['victory_points_threshold'] = ApiClient.convertToType(data['victory_points_threshold'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetFwSystems200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetFwSystems200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetFwSystems200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['contested'] && !(typeof data['contested'] === 'string' || data['contested'] instanceof String)) {
            throw new Error("Expected the field `contested` to be a primitive type in the JSON string but got " + data['contested']);
        }

        return true;
    }


}

GetFwSystems200Ok.RequiredProperties = ["contested", "occupier_faction_id", "owner_faction_id", "solar_system_id", "victory_points", "victory_points_threshold"];

/**
 * contested string
 * @member {module:model/GetFwSystems200Ok.ContestedEnum} contested
 */
GetFwSystems200Ok.prototype['contested'] = undefined;

/**
 * occupier_faction_id integer
 * @member {Number} occupier_faction_id
 */
GetFwSystems200Ok.prototype['occupier_faction_id'] = undefined;

/**
 * owner_faction_id integer
 * @member {Number} owner_faction_id
 */
GetFwSystems200Ok.prototype['owner_faction_id'] = undefined;

/**
 * solar_system_id integer
 * @member {Number} solar_system_id
 */
GetFwSystems200Ok.prototype['solar_system_id'] = undefined;

/**
 * victory_points integer
 * @member {Number} victory_points
 */
GetFwSystems200Ok.prototype['victory_points'] = undefined;

/**
 * victory_points_threshold integer
 * @member {Number} victory_points_threshold
 */
GetFwSystems200Ok.prototype['victory_points_threshold'] = undefined;





/**
 * Allowed values for the <code>contested</code> property.
 * @enum {String}
 * @readonly
 */
GetFwSystems200Ok['ContestedEnum'] = {

    /**
     * value: "captured"
     * @const
     */
    "captured": "captured",

    /**
     * value: "contested"
     * @const
     */
    "contested": "contested",

    /**
     * value: "uncontested"
     * @const
     */
    "uncontested": "uncontested",

    /**
     * value: "vulnerable"
     * @const
     */
    "vulnerable": "vulnerable"
};



export default GetFwSystems200Ok;

