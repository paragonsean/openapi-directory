/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetSearchOk model module.
 * @module model/GetSearchOk
 * @version 0.8.6
 */
class GetSearchOk {
    /**
     * Constructs a new <code>GetSearchOk</code>.
     * 200 ok object
     * @alias module:model/GetSearchOk
     */
    constructor() { 
        
        GetSearchOk.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetSearchOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSearchOk} obj Optional instance to populate.
     * @return {module:model/GetSearchOk} The populated <code>GetSearchOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSearchOk();

            if (data.hasOwnProperty('agent')) {
                obj['agent'] = ApiClient.convertToType(data['agent'], ['Number']);
            }
            if (data.hasOwnProperty('alliance')) {
                obj['alliance'] = ApiClient.convertToType(data['alliance'], ['Number']);
            }
            if (data.hasOwnProperty('character')) {
                obj['character'] = ApiClient.convertToType(data['character'], ['Number']);
            }
            if (data.hasOwnProperty('constellation')) {
                obj['constellation'] = ApiClient.convertToType(data['constellation'], ['Number']);
            }
            if (data.hasOwnProperty('corporation')) {
                obj['corporation'] = ApiClient.convertToType(data['corporation'], ['Number']);
            }
            if (data.hasOwnProperty('faction')) {
                obj['faction'] = ApiClient.convertToType(data['faction'], ['Number']);
            }
            if (data.hasOwnProperty('inventory_type')) {
                obj['inventory_type'] = ApiClient.convertToType(data['inventory_type'], ['Number']);
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], ['Number']);
            }
            if (data.hasOwnProperty('solar_system')) {
                obj['solar_system'] = ApiClient.convertToType(data['solar_system'], ['Number']);
            }
            if (data.hasOwnProperty('station')) {
                obj['station'] = ApiClient.convertToType(data['station'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSearchOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSearchOk</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['agent'])) {
            throw new Error("Expected the field `agent` to be an array in the JSON data but got " + data['agent']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['alliance'])) {
            throw new Error("Expected the field `alliance` to be an array in the JSON data but got " + data['alliance']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['character'])) {
            throw new Error("Expected the field `character` to be an array in the JSON data but got " + data['character']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['constellation'])) {
            throw new Error("Expected the field `constellation` to be an array in the JSON data but got " + data['constellation']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['corporation'])) {
            throw new Error("Expected the field `corporation` to be an array in the JSON data but got " + data['corporation']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['faction'])) {
            throw new Error("Expected the field `faction` to be an array in the JSON data but got " + data['faction']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['inventory_type'])) {
            throw new Error("Expected the field `inventory_type` to be an array in the JSON data but got " + data['inventory_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['region'])) {
            throw new Error("Expected the field `region` to be an array in the JSON data but got " + data['region']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['solar_system'])) {
            throw new Error("Expected the field `solar_system` to be an array in the JSON data but got " + data['solar_system']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['station'])) {
            throw new Error("Expected the field `station` to be an array in the JSON data but got " + data['station']);
        }

        return true;
    }


}



/**
 * agent array
 * @member {Array.<Number>} agent
 */
GetSearchOk.prototype['agent'] = undefined;

/**
 * alliance array
 * @member {Array.<Number>} alliance
 */
GetSearchOk.prototype['alliance'] = undefined;

/**
 * character array
 * @member {Array.<Number>} character
 */
GetSearchOk.prototype['character'] = undefined;

/**
 * constellation array
 * @member {Array.<Number>} constellation
 */
GetSearchOk.prototype['constellation'] = undefined;

/**
 * corporation array
 * @member {Array.<Number>} corporation
 */
GetSearchOk.prototype['corporation'] = undefined;

/**
 * faction array
 * @member {Array.<Number>} faction
 */
GetSearchOk.prototype['faction'] = undefined;

/**
 * inventory_type array
 * @member {Array.<Number>} inventory_type
 */
GetSearchOk.prototype['inventory_type'] = undefined;

/**
 * region array
 * @member {Array.<Number>} region
 */
GetSearchOk.prototype['region'] = undefined;

/**
 * solar_system array
 * @member {Array.<Number>} solar_system
 */
GetSearchOk.prototype['solar_system'] = undefined;

/**
 * station array
 * @member {Array.<Number>} station
 */
GetSearchOk.prototype['station'] = undefined;






export default GetSearchOk;

