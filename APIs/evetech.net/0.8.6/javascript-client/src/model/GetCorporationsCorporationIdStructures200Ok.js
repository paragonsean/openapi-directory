/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetCorporationsCorporationIdStructuresService from './GetCorporationsCorporationIdStructuresService';

/**
 * The GetCorporationsCorporationIdStructures200Ok model module.
 * @module model/GetCorporationsCorporationIdStructures200Ok
 * @version 0.8.6
 */
class GetCorporationsCorporationIdStructures200Ok {
    /**
     * Constructs a new <code>GetCorporationsCorporationIdStructures200Ok</code>.
     * 200 ok object
     * @alias module:model/GetCorporationsCorporationIdStructures200Ok
     * @param corporationId {Number} ID of the corporation that owns the structure
     * @param profileId {Number} The id of the ACL profile for this citadel
     * @param reinforceHour {Number} The hour of day that determines the four hour window when the structure will randomly exit its reinforcement periods and become vulnerable to attack against its armor and/or hull. The structure will become vulnerable at a random time that is +/- 2 hours centered on the value of this property
     * @param reinforceWeekday {Number} The day of the week when the structure exits its final reinforcement period and becomes vulnerable to attack against its hull. Monday is 0 and Sunday is 6
     * @param state {module:model/GetCorporationsCorporationIdStructures200Ok.StateEnum} state string
     * @param structureId {Number} The Item ID of the structure
     * @param systemId {Number} The solar system the structure is in
     * @param typeId {Number} The type id of the structure
     */
    constructor(corporationId, profileId, reinforceHour, reinforceWeekday, state, structureId, systemId, typeId) { 
        
        GetCorporationsCorporationIdStructures200Ok.initialize(this, corporationId, profileId, reinforceHour, reinforceWeekday, state, structureId, systemId, typeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, corporationId, profileId, reinforceHour, reinforceWeekday, state, structureId, systemId, typeId) { 
        obj['corporation_id'] = corporationId;
        obj['profile_id'] = profileId;
        obj['reinforce_hour'] = reinforceHour;
        obj['reinforce_weekday'] = reinforceWeekday;
        obj['state'] = state;
        obj['structure_id'] = structureId;
        obj['system_id'] = systemId;
        obj['type_id'] = typeId;
    }

    /**
     * Constructs a <code>GetCorporationsCorporationIdStructures200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCorporationsCorporationIdStructures200Ok} obj Optional instance to populate.
     * @return {module:model/GetCorporationsCorporationIdStructures200Ok} The populated <code>GetCorporationsCorporationIdStructures200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCorporationsCorporationIdStructures200Ok();

            if (data.hasOwnProperty('corporation_id')) {
                obj['corporation_id'] = ApiClient.convertToType(data['corporation_id'], 'Number');
            }
            if (data.hasOwnProperty('fuel_expires')) {
                obj['fuel_expires'] = ApiClient.convertToType(data['fuel_expires'], 'Date');
            }
            if (data.hasOwnProperty('next_reinforce_apply')) {
                obj['next_reinforce_apply'] = ApiClient.convertToType(data['next_reinforce_apply'], 'Date');
            }
            if (data.hasOwnProperty('next_reinforce_hour')) {
                obj['next_reinforce_hour'] = ApiClient.convertToType(data['next_reinforce_hour'], 'Number');
            }
            if (data.hasOwnProperty('next_reinforce_weekday')) {
                obj['next_reinforce_weekday'] = ApiClient.convertToType(data['next_reinforce_weekday'], 'Number');
            }
            if (data.hasOwnProperty('profile_id')) {
                obj['profile_id'] = ApiClient.convertToType(data['profile_id'], 'Number');
            }
            if (data.hasOwnProperty('reinforce_hour')) {
                obj['reinforce_hour'] = ApiClient.convertToType(data['reinforce_hour'], 'Number');
            }
            if (data.hasOwnProperty('reinforce_weekday')) {
                obj['reinforce_weekday'] = ApiClient.convertToType(data['reinforce_weekday'], 'Number');
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], [GetCorporationsCorporationIdStructuresService]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('state_timer_end')) {
                obj['state_timer_end'] = ApiClient.convertToType(data['state_timer_end'], 'Date');
            }
            if (data.hasOwnProperty('state_timer_start')) {
                obj['state_timer_start'] = ApiClient.convertToType(data['state_timer_start'], 'Date');
            }
            if (data.hasOwnProperty('structure_id')) {
                obj['structure_id'] = ApiClient.convertToType(data['structure_id'], 'Number');
            }
            if (data.hasOwnProperty('system_id')) {
                obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
            }
            if (data.hasOwnProperty('type_id')) {
                obj['type_id'] = ApiClient.convertToType(data['type_id'], 'Number');
            }
            if (data.hasOwnProperty('unanchors_at')) {
                obj['unanchors_at'] = ApiClient.convertToType(data['unanchors_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCorporationsCorporationIdStructures200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCorporationsCorporationIdStructures200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCorporationsCorporationIdStructures200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['services']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['services'])) {
                throw new Error("Expected the field `services` to be an array in the JSON data but got " + data['services']);
            }
            // validate the optional field `services` (array)
            for (const item of data['services']) {
                GetCorporationsCorporationIdStructuresService.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}

GetCorporationsCorporationIdStructures200Ok.RequiredProperties = ["corporation_id", "profile_id", "reinforce_hour", "reinforce_weekday", "state", "structure_id", "system_id", "type_id"];

/**
 * ID of the corporation that owns the structure
 * @member {Number} corporation_id
 */
GetCorporationsCorporationIdStructures200Ok.prototype['corporation_id'] = undefined;

/**
 * Date on which the structure will run out of fuel
 * @member {Date} fuel_expires
 */
GetCorporationsCorporationIdStructures200Ok.prototype['fuel_expires'] = undefined;

/**
 * The date and time when the structure's newly requested reinforcement times (e.g. next_reinforce_hour and next_reinforce_day) will take effect
 * @member {Date} next_reinforce_apply
 */
GetCorporationsCorporationIdStructures200Ok.prototype['next_reinforce_apply'] = undefined;

/**
 * The requested change to reinforce_hour that will take effect at the time shown by next_reinforce_apply
 * @member {Number} next_reinforce_hour
 */
GetCorporationsCorporationIdStructures200Ok.prototype['next_reinforce_hour'] = undefined;

/**
 * The requested change to reinforce_weekday that will take effect at the time shown by next_reinforce_apply
 * @member {Number} next_reinforce_weekday
 */
GetCorporationsCorporationIdStructures200Ok.prototype['next_reinforce_weekday'] = undefined;

/**
 * The id of the ACL profile for this citadel
 * @member {Number} profile_id
 */
GetCorporationsCorporationIdStructures200Ok.prototype['profile_id'] = undefined;

/**
 * The hour of day that determines the four hour window when the structure will randomly exit its reinforcement periods and become vulnerable to attack against its armor and/or hull. The structure will become vulnerable at a random time that is +/- 2 hours centered on the value of this property
 * @member {Number} reinforce_hour
 */
GetCorporationsCorporationIdStructures200Ok.prototype['reinforce_hour'] = undefined;

/**
 * The day of the week when the structure exits its final reinforcement period and becomes vulnerable to attack against its hull. Monday is 0 and Sunday is 6
 * @member {Number} reinforce_weekday
 */
GetCorporationsCorporationIdStructures200Ok.prototype['reinforce_weekday'] = undefined;

/**
 * Contains a list of service upgrades, and their state
 * @member {Array.<module:model/GetCorporationsCorporationIdStructuresService>} services
 */
GetCorporationsCorporationIdStructures200Ok.prototype['services'] = undefined;

/**
 * state string
 * @member {module:model/GetCorporationsCorporationIdStructures200Ok.StateEnum} state
 */
GetCorporationsCorporationIdStructures200Ok.prototype['state'] = undefined;

/**
 * Date at which the structure will move to it's next state
 * @member {Date} state_timer_end
 */
GetCorporationsCorporationIdStructures200Ok.prototype['state_timer_end'] = undefined;

/**
 * Date at which the structure entered it's current state
 * @member {Date} state_timer_start
 */
GetCorporationsCorporationIdStructures200Ok.prototype['state_timer_start'] = undefined;

/**
 * The Item ID of the structure
 * @member {Number} structure_id
 */
GetCorporationsCorporationIdStructures200Ok.prototype['structure_id'] = undefined;

/**
 * The solar system the structure is in
 * @member {Number} system_id
 */
GetCorporationsCorporationIdStructures200Ok.prototype['system_id'] = undefined;

/**
 * The type id of the structure
 * @member {Number} type_id
 */
GetCorporationsCorporationIdStructures200Ok.prototype['type_id'] = undefined;

/**
 * Date at which the structure will unanchor
 * @member {Date} unanchors_at
 */
GetCorporationsCorporationIdStructures200Ok.prototype['unanchors_at'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GetCorporationsCorporationIdStructures200Ok['StateEnum'] = {

    /**
     * value: "anchor_vulnerable"
     * @const
     */
    "anchor_vulnerable": "anchor_vulnerable",

    /**
     * value: "anchoring"
     * @const
     */
    "anchoring": "anchoring",

    /**
     * value: "armor_reinforce"
     * @const
     */
    "armor_reinforce": "armor_reinforce",

    /**
     * value: "armor_vulnerable"
     * @const
     */
    "armor_vulnerable": "armor_vulnerable",

    /**
     * value: "fitting_invulnerable"
     * @const
     */
    "fitting_invulnerable": "fitting_invulnerable",

    /**
     * value: "hull_reinforce"
     * @const
     */
    "hull_reinforce": "hull_reinforce",

    /**
     * value: "hull_vulnerable"
     * @const
     */
    "hull_vulnerable": "hull_vulnerable",

    /**
     * value: "online_deprecated"
     * @const
     */
    "online_deprecated": "online_deprecated",

    /**
     * value: "onlining_vulnerable"
     * @const
     */
    "onlining_vulnerable": "onlining_vulnerable",

    /**
     * value: "shield_vulnerable"
     * @const
     */
    "shield_vulnerable": "shield_vulnerable",

    /**
     * value: "unanchored"
     * @const
     */
    "unanchored": "unanchored",

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown"
};



export default GetCorporationsCorporationIdStructures200Ok;

