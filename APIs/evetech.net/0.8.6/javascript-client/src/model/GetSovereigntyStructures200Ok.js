/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetSovereigntyStructures200Ok model module.
 * @module model/GetSovereigntyStructures200Ok
 * @version 0.8.6
 */
class GetSovereigntyStructures200Ok {
    /**
     * Constructs a new <code>GetSovereigntyStructures200Ok</code>.
     * 200 ok object
     * @alias module:model/GetSovereigntyStructures200Ok
     * @param allianceId {Number} The alliance that owns the structure. 
     * @param solarSystemId {Number} Solar system in which the structure is located. 
     * @param structureId {Number} Unique item ID for this structure.
     * @param structureTypeId {Number} A reference to the type of structure this is. 
     */
    constructor(allianceId, solarSystemId, structureId, structureTypeId) { 
        
        GetSovereigntyStructures200Ok.initialize(this, allianceId, solarSystemId, structureId, structureTypeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allianceId, solarSystemId, structureId, structureTypeId) { 
        obj['alliance_id'] = allianceId;
        obj['solar_system_id'] = solarSystemId;
        obj['structure_id'] = structureId;
        obj['structure_type_id'] = structureTypeId;
    }

    /**
     * Constructs a <code>GetSovereigntyStructures200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSovereigntyStructures200Ok} obj Optional instance to populate.
     * @return {module:model/GetSovereigntyStructures200Ok} The populated <code>GetSovereigntyStructures200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSovereigntyStructures200Ok();

            if (data.hasOwnProperty('alliance_id')) {
                obj['alliance_id'] = ApiClient.convertToType(data['alliance_id'], 'Number');
            }
            if (data.hasOwnProperty('solar_system_id')) {
                obj['solar_system_id'] = ApiClient.convertToType(data['solar_system_id'], 'Number');
            }
            if (data.hasOwnProperty('structure_id')) {
                obj['structure_id'] = ApiClient.convertToType(data['structure_id'], 'Number');
            }
            if (data.hasOwnProperty('structure_type_id')) {
                obj['structure_type_id'] = ApiClient.convertToType(data['structure_type_id'], 'Number');
            }
            if (data.hasOwnProperty('vulnerability_occupancy_level')) {
                obj['vulnerability_occupancy_level'] = ApiClient.convertToType(data['vulnerability_occupancy_level'], 'Number');
            }
            if (data.hasOwnProperty('vulnerable_end_time')) {
                obj['vulnerable_end_time'] = ApiClient.convertToType(data['vulnerable_end_time'], 'Date');
            }
            if (data.hasOwnProperty('vulnerable_start_time')) {
                obj['vulnerable_start_time'] = ApiClient.convertToType(data['vulnerable_start_time'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSovereigntyStructures200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSovereigntyStructures200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetSovereigntyStructures200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

GetSovereigntyStructures200Ok.RequiredProperties = ["alliance_id", "solar_system_id", "structure_id", "structure_type_id"];

/**
 * The alliance that owns the structure. 
 * @member {Number} alliance_id
 */
GetSovereigntyStructures200Ok.prototype['alliance_id'] = undefined;

/**
 * Solar system in which the structure is located. 
 * @member {Number} solar_system_id
 */
GetSovereigntyStructures200Ok.prototype['solar_system_id'] = undefined;

/**
 * Unique item ID for this structure.
 * @member {Number} structure_id
 */
GetSovereigntyStructures200Ok.prototype['structure_id'] = undefined;

/**
 * A reference to the type of structure this is. 
 * @member {Number} structure_type_id
 */
GetSovereigntyStructures200Ok.prototype['structure_type_id'] = undefined;

/**
 * The occupancy level for the next or current vulnerability window. This takes into account all development indexes and capital system bonuses. Also known as Activity Defense Multiplier from in the client. It increases the time that attackers must spend using their entosis links on the structure. 
 * @member {Number} vulnerability_occupancy_level
 */
GetSovereigntyStructures200Ok.prototype['vulnerability_occupancy_level'] = undefined;

/**
 * The time at which the next or current vulnerability window ends. At the end of a vulnerability window the next window is recalculated and locked in along with the vulnerabilityOccupancyLevel. If the structure is not in 100% entosis control of the defender, it will go in to 'overtime' and stay vulnerable for as long as that situation persists. Only once the defenders have 100% entosis control and has the vulnerableEndTime passed does the vulnerability interval expire and a new one is calculated. 
 * @member {Date} vulnerable_end_time
 */
GetSovereigntyStructures200Ok.prototype['vulnerable_end_time'] = undefined;

/**
 * The next time at which the structure will become vulnerable. Or the start time of the current window if current time is between this and vulnerableEndTime. 
 * @member {Date} vulnerable_start_time
 */
GetSovereigntyStructures200Ok.prototype['vulnerable_start_time'] = undefined;






export default GetSovereigntyStructures200Ok;

