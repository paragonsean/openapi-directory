/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetCharactersCharacterIdPlanetsPlanetIdContent from './GetCharactersCharacterIdPlanetsPlanetIdContent';
import GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails from './GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails';
import GetCharactersCharacterIdPlanetsPlanetIdFactoryDetails from './GetCharactersCharacterIdPlanetsPlanetIdFactoryDetails';

/**
 * The GetCharactersCharacterIdPlanetsPlanetIdPin model module.
 * @module model/GetCharactersCharacterIdPlanetsPlanetIdPin
 * @version 0.8.6
 */
class GetCharactersCharacterIdPlanetsPlanetIdPin {
    /**
     * Constructs a new <code>GetCharactersCharacterIdPlanetsPlanetIdPin</code>.
     * pin object
     * @alias module:model/GetCharactersCharacterIdPlanetsPlanetIdPin
     * @param latitude {Number} latitude number
     * @param longitude {Number} longitude number
     * @param pinId {Number} pin_id integer
     * @param typeId {Number} type_id integer
     */
    constructor(latitude, longitude, pinId, typeId) { 
        
        GetCharactersCharacterIdPlanetsPlanetIdPin.initialize(this, latitude, longitude, pinId, typeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, latitude, longitude, pinId, typeId) { 
        obj['latitude'] = latitude;
        obj['longitude'] = longitude;
        obj['pin_id'] = pinId;
        obj['type_id'] = typeId;
    }

    /**
     * Constructs a <code>GetCharactersCharacterIdPlanetsPlanetIdPin</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCharactersCharacterIdPlanetsPlanetIdPin} obj Optional instance to populate.
     * @return {module:model/GetCharactersCharacterIdPlanetsPlanetIdPin} The populated <code>GetCharactersCharacterIdPlanetsPlanetIdPin</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCharactersCharacterIdPlanetsPlanetIdPin();

            if (data.hasOwnProperty('contents')) {
                obj['contents'] = ApiClient.convertToType(data['contents'], [GetCharactersCharacterIdPlanetsPlanetIdContent]);
            }
            if (data.hasOwnProperty('expiry_time')) {
                obj['expiry_time'] = ApiClient.convertToType(data['expiry_time'], 'Date');
            }
            if (data.hasOwnProperty('extractor_details')) {
                obj['extractor_details'] = GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.constructFromObject(data['extractor_details']);
            }
            if (data.hasOwnProperty('factory_details')) {
                obj['factory_details'] = GetCharactersCharacterIdPlanetsPlanetIdFactoryDetails.constructFromObject(data['factory_details']);
            }
            if (data.hasOwnProperty('install_time')) {
                obj['install_time'] = ApiClient.convertToType(data['install_time'], 'Date');
            }
            if (data.hasOwnProperty('last_cycle_start')) {
                obj['last_cycle_start'] = ApiClient.convertToType(data['last_cycle_start'], 'Date');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('pin_id')) {
                obj['pin_id'] = ApiClient.convertToType(data['pin_id'], 'Number');
            }
            if (data.hasOwnProperty('schematic_id')) {
                obj['schematic_id'] = ApiClient.convertToType(data['schematic_id'], 'Number');
            }
            if (data.hasOwnProperty('type_id')) {
                obj['type_id'] = ApiClient.convertToType(data['type_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCharactersCharacterIdPlanetsPlanetIdPin</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCharactersCharacterIdPlanetsPlanetIdPin</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCharactersCharacterIdPlanetsPlanetIdPin.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['contents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['contents'])) {
                throw new Error("Expected the field `contents` to be an array in the JSON data but got " + data['contents']);
            }
            // validate the optional field `contents` (array)
            for (const item of data['contents']) {
                GetCharactersCharacterIdPlanetsPlanetIdContent.validateJSON(item);
            };
        }
        // validate the optional field `extractor_details`
        if (data['extractor_details']) { // data not null
          GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.validateJSON(data['extractor_details']);
        }
        // validate the optional field `factory_details`
        if (data['factory_details']) { // data not null
          GetCharactersCharacterIdPlanetsPlanetIdFactoryDetails.validateJSON(data['factory_details']);
        }

        return true;
    }


}

GetCharactersCharacterIdPlanetsPlanetIdPin.RequiredProperties = ["latitude", "longitude", "pin_id", "type_id"];

/**
 * contents array
 * @member {Array.<module:model/GetCharactersCharacterIdPlanetsPlanetIdContent>} contents
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['contents'] = undefined;

/**
 * expiry_time string
 * @member {Date} expiry_time
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['expiry_time'] = undefined;

/**
 * @member {module:model/GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails} extractor_details
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['extractor_details'] = undefined;

/**
 * @member {module:model/GetCharactersCharacterIdPlanetsPlanetIdFactoryDetails} factory_details
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['factory_details'] = undefined;

/**
 * install_time string
 * @member {Date} install_time
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['install_time'] = undefined;

/**
 * last_cycle_start string
 * @member {Date} last_cycle_start
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['last_cycle_start'] = undefined;

/**
 * latitude number
 * @member {Number} latitude
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['latitude'] = undefined;

/**
 * longitude number
 * @member {Number} longitude
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['longitude'] = undefined;

/**
 * pin_id integer
 * @member {Number} pin_id
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['pin_id'] = undefined;

/**
 * schematic_id integer
 * @member {Number} schematic_id
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['schematic_id'] = undefined;

/**
 * type_id integer
 * @member {Number} type_id
 */
GetCharactersCharacterIdPlanetsPlanetIdPin.prototype['type_id'] = undefined;






export default GetCharactersCharacterIdPlanetsPlanetIdPin;

