/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetUniverseStationsStationIdPosition from './GetUniverseStationsStationIdPosition';

/**
 * The GetUniverseStationsStationIdOk model module.
 * @module model/GetUniverseStationsStationIdOk
 * @version 0.8.6
 */
class GetUniverseStationsStationIdOk {
    /**
     * Constructs a new <code>GetUniverseStationsStationIdOk</code>.
     * 200 ok object
     * @alias module:model/GetUniverseStationsStationIdOk
     * @param maxDockableShipVolume {Number} max_dockable_ship_volume number
     * @param name {String} name string
     * @param officeRentalCost {Number} office_rental_cost number
     * @param position {module:model/GetUniverseStationsStationIdPosition} 
     * @param reprocessingEfficiency {Number} reprocessing_efficiency number
     * @param reprocessingStationsTake {Number} reprocessing_stations_take number
     * @param services {Array.<module:model/GetUniverseStationsStationIdOk.ServicesEnum>} services array
     * @param stationId {Number} station_id integer
     * @param systemId {Number} The solar system this station is in
     * @param typeId {Number} type_id integer
     */
    constructor(maxDockableShipVolume, name, officeRentalCost, position, reprocessingEfficiency, reprocessingStationsTake, services, stationId, systemId, typeId) { 
        
        GetUniverseStationsStationIdOk.initialize(this, maxDockableShipVolume, name, officeRentalCost, position, reprocessingEfficiency, reprocessingStationsTake, services, stationId, systemId, typeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, maxDockableShipVolume, name, officeRentalCost, position, reprocessingEfficiency, reprocessingStationsTake, services, stationId, systemId, typeId) { 
        obj['max_dockable_ship_volume'] = maxDockableShipVolume;
        obj['name'] = name;
        obj['office_rental_cost'] = officeRentalCost;
        obj['position'] = position;
        obj['reprocessing_efficiency'] = reprocessingEfficiency;
        obj['reprocessing_stations_take'] = reprocessingStationsTake;
        obj['services'] = services;
        obj['station_id'] = stationId;
        obj['system_id'] = systemId;
        obj['type_id'] = typeId;
    }

    /**
     * Constructs a <code>GetUniverseStationsStationIdOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUniverseStationsStationIdOk} obj Optional instance to populate.
     * @return {module:model/GetUniverseStationsStationIdOk} The populated <code>GetUniverseStationsStationIdOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUniverseStationsStationIdOk();

            if (data.hasOwnProperty('max_dockable_ship_volume')) {
                obj['max_dockable_ship_volume'] = ApiClient.convertToType(data['max_dockable_ship_volume'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('office_rental_cost')) {
                obj['office_rental_cost'] = ApiClient.convertToType(data['office_rental_cost'], 'Number');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'Number');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = GetUniverseStationsStationIdPosition.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('race_id')) {
                obj['race_id'] = ApiClient.convertToType(data['race_id'], 'Number');
            }
            if (data.hasOwnProperty('reprocessing_efficiency')) {
                obj['reprocessing_efficiency'] = ApiClient.convertToType(data['reprocessing_efficiency'], 'Number');
            }
            if (data.hasOwnProperty('reprocessing_stations_take')) {
                obj['reprocessing_stations_take'] = ApiClient.convertToType(data['reprocessing_stations_take'], 'Number');
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], ['String']);
            }
            if (data.hasOwnProperty('station_id')) {
                obj['station_id'] = ApiClient.convertToType(data['station_id'], 'Number');
            }
            if (data.hasOwnProperty('system_id')) {
                obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
            }
            if (data.hasOwnProperty('type_id')) {
                obj['type_id'] = ApiClient.convertToType(data['type_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetUniverseStationsStationIdOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetUniverseStationsStationIdOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetUniverseStationsStationIdOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `position`
        if (data['position']) { // data not null
          GetUniverseStationsStationIdPosition.validateJSON(data['position']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['services'])) {
            throw new Error("Expected the field `services` to be an array in the JSON data but got " + data['services']);
        }

        return true;
    }


}

GetUniverseStationsStationIdOk.RequiredProperties = ["max_dockable_ship_volume", "name", "office_rental_cost", "position", "reprocessing_efficiency", "reprocessing_stations_take", "services", "station_id", "system_id", "type_id"];

/**
 * max_dockable_ship_volume number
 * @member {Number} max_dockable_ship_volume
 */
GetUniverseStationsStationIdOk.prototype['max_dockable_ship_volume'] = undefined;

/**
 * name string
 * @member {String} name
 */
GetUniverseStationsStationIdOk.prototype['name'] = undefined;

/**
 * office_rental_cost number
 * @member {Number} office_rental_cost
 */
GetUniverseStationsStationIdOk.prototype['office_rental_cost'] = undefined;

/**
 * ID of the corporation that controls this station
 * @member {Number} owner
 */
GetUniverseStationsStationIdOk.prototype['owner'] = undefined;

/**
 * @member {module:model/GetUniverseStationsStationIdPosition} position
 */
GetUniverseStationsStationIdOk.prototype['position'] = undefined;

/**
 * race_id integer
 * @member {Number} race_id
 */
GetUniverseStationsStationIdOk.prototype['race_id'] = undefined;

/**
 * reprocessing_efficiency number
 * @member {Number} reprocessing_efficiency
 */
GetUniverseStationsStationIdOk.prototype['reprocessing_efficiency'] = undefined;

/**
 * reprocessing_stations_take number
 * @member {Number} reprocessing_stations_take
 */
GetUniverseStationsStationIdOk.prototype['reprocessing_stations_take'] = undefined;

/**
 * services array
 * @member {Array.<module:model/GetUniverseStationsStationIdOk.ServicesEnum>} services
 */
GetUniverseStationsStationIdOk.prototype['services'] = undefined;

/**
 * station_id integer
 * @member {Number} station_id
 */
GetUniverseStationsStationIdOk.prototype['station_id'] = undefined;

/**
 * The solar system this station is in
 * @member {Number} system_id
 */
GetUniverseStationsStationIdOk.prototype['system_id'] = undefined;

/**
 * type_id integer
 * @member {Number} type_id
 */
GetUniverseStationsStationIdOk.prototype['type_id'] = undefined;





/**
 * Allowed values for the <code>services</code> property.
 * @enum {String}
 * @readonly
 */
GetUniverseStationsStationIdOk['ServicesEnum'] = {

    /**
     * value: "bounty-missions"
     * @const
     */
    "bounty-missions": "bounty-missions",

    /**
     * value: "assasination-missions"
     * @const
     */
    "assasination-missions": "assasination-missions",

    /**
     * value: "courier-missions"
     * @const
     */
    "courier-missions": "courier-missions",

    /**
     * value: "interbus"
     * @const
     */
    "interbus": "interbus",

    /**
     * value: "reprocessing-plant"
     * @const
     */
    "reprocessing-plant": "reprocessing-plant",

    /**
     * value: "refinery"
     * @const
     */
    "refinery": "refinery",

    /**
     * value: "market"
     * @const
     */
    "market": "market",

    /**
     * value: "black-market"
     * @const
     */
    "black-market": "black-market",

    /**
     * value: "stock-exchange"
     * @const
     */
    "stock-exchange": "stock-exchange",

    /**
     * value: "cloning"
     * @const
     */
    "cloning": "cloning",

    /**
     * value: "surgery"
     * @const
     */
    "surgery": "surgery",

    /**
     * value: "dna-therapy"
     * @const
     */
    "dna-therapy": "dna-therapy",

    /**
     * value: "repair-facilities"
     * @const
     */
    "repair-facilities": "repair-facilities",

    /**
     * value: "factory"
     * @const
     */
    "factory": "factory",

    /**
     * value: "labratory"
     * @const
     */
    "labratory": "labratory",

    /**
     * value: "gambling"
     * @const
     */
    "gambling": "gambling",

    /**
     * value: "fitting"
     * @const
     */
    "fitting": "fitting",

    /**
     * value: "paintshop"
     * @const
     */
    "paintshop": "paintshop",

    /**
     * value: "news"
     * @const
     */
    "news": "news",

    /**
     * value: "storage"
     * @const
     */
    "storage": "storage",

    /**
     * value: "insurance"
     * @const
     */
    "insurance": "insurance",

    /**
     * value: "docking"
     * @const
     */
    "docking": "docking",

    /**
     * value: "office-rental"
     * @const
     */
    "office-rental": "office-rental",

    /**
     * value: "jump-clone-facility"
     * @const
     */
    "jump-clone-facility": "jump-clone-facility",

    /**
     * value: "loyalty-point-store"
     * @const
     */
    "loyalty-point-store": "loyalty-point-store",

    /**
     * value: "navy-offices"
     * @const
     */
    "navy-offices": "navy-offices",

    /**
     * value: "security-offices"
     * @const
     */
    "security-offices": "security-offices"
};



export default GetUniverseStationsStationIdOk;

