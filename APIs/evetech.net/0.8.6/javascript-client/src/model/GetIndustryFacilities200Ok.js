/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetIndustryFacilities200Ok model module.
 * @module model/GetIndustryFacilities200Ok
 * @version 0.8.6
 */
class GetIndustryFacilities200Ok {
    /**
     * Constructs a new <code>GetIndustryFacilities200Ok</code>.
     * 200 ok object
     * @alias module:model/GetIndustryFacilities200Ok
     * @param facilityId {Number} ID of the facility
     * @param ownerId {Number} Owner of the facility
     * @param regionId {Number} Region ID where the facility is
     * @param solarSystemId {Number} Solar system ID where the facility is
     * @param typeId {Number} Type ID of the facility
     */
    constructor(facilityId, ownerId, regionId, solarSystemId, typeId) { 
        
        GetIndustryFacilities200Ok.initialize(this, facilityId, ownerId, regionId, solarSystemId, typeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, facilityId, ownerId, regionId, solarSystemId, typeId) { 
        obj['facility_id'] = facilityId;
        obj['owner_id'] = ownerId;
        obj['region_id'] = regionId;
        obj['solar_system_id'] = solarSystemId;
        obj['type_id'] = typeId;
    }

    /**
     * Constructs a <code>GetIndustryFacilities200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetIndustryFacilities200Ok} obj Optional instance to populate.
     * @return {module:model/GetIndustryFacilities200Ok} The populated <code>GetIndustryFacilities200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetIndustryFacilities200Ok();

            if (data.hasOwnProperty('facility_id')) {
                obj['facility_id'] = ApiClient.convertToType(data['facility_id'], 'Number');
            }
            if (data.hasOwnProperty('owner_id')) {
                obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'Number');
            }
            if (data.hasOwnProperty('region_id')) {
                obj['region_id'] = ApiClient.convertToType(data['region_id'], 'Number');
            }
            if (data.hasOwnProperty('solar_system_id')) {
                obj['solar_system_id'] = ApiClient.convertToType(data['solar_system_id'], 'Number');
            }
            if (data.hasOwnProperty('tax')) {
                obj['tax'] = ApiClient.convertToType(data['tax'], 'Number');
            }
            if (data.hasOwnProperty('type_id')) {
                obj['type_id'] = ApiClient.convertToType(data['type_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetIndustryFacilities200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetIndustryFacilities200Ok</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetIndustryFacilities200Ok.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

GetIndustryFacilities200Ok.RequiredProperties = ["facility_id", "owner_id", "region_id", "solar_system_id", "type_id"];

/**
 * ID of the facility
 * @member {Number} facility_id
 */
GetIndustryFacilities200Ok.prototype['facility_id'] = undefined;

/**
 * Owner of the facility
 * @member {Number} owner_id
 */
GetIndustryFacilities200Ok.prototype['owner_id'] = undefined;

/**
 * Region ID where the facility is
 * @member {Number} region_id
 */
GetIndustryFacilities200Ok.prototype['region_id'] = undefined;

/**
 * Solar system ID where the facility is
 * @member {Number} solar_system_id
 */
GetIndustryFacilities200Ok.prototype['solar_system_id'] = undefined;

/**
 * Tax imposed by the facility
 * @member {Number} tax
 */
GetIndustryFacilities200Ok.prototype['tax'] = undefined;

/**
 * Type ID of the facility
 * @member {Number} type_id
 */
GetIndustryFacilities200Ok.prototype['type_id'] = undefined;






export default GetIndustryFacilities200Ok;

