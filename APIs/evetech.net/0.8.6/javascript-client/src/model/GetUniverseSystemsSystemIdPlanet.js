/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetUniverseSystemsSystemIdPlanet model module.
 * @module model/GetUniverseSystemsSystemIdPlanet
 * @version 0.8.6
 */
class GetUniverseSystemsSystemIdPlanet {
    /**
     * Constructs a new <code>GetUniverseSystemsSystemIdPlanet</code>.
     * planet object
     * @alias module:model/GetUniverseSystemsSystemIdPlanet
     * @param planetId {Number} planet_id integer
     */
    constructor(planetId) { 
        
        GetUniverseSystemsSystemIdPlanet.initialize(this, planetId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, planetId) { 
        obj['planet_id'] = planetId;
    }

    /**
     * Constructs a <code>GetUniverseSystemsSystemIdPlanet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUniverseSystemsSystemIdPlanet} obj Optional instance to populate.
     * @return {module:model/GetUniverseSystemsSystemIdPlanet} The populated <code>GetUniverseSystemsSystemIdPlanet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUniverseSystemsSystemIdPlanet();

            if (data.hasOwnProperty('asteroid_belts')) {
                obj['asteroid_belts'] = ApiClient.convertToType(data['asteroid_belts'], ['Number']);
            }
            if (data.hasOwnProperty('moons')) {
                obj['moons'] = ApiClient.convertToType(data['moons'], ['Number']);
            }
            if (data.hasOwnProperty('planet_id')) {
                obj['planet_id'] = ApiClient.convertToType(data['planet_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetUniverseSystemsSystemIdPlanet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetUniverseSystemsSystemIdPlanet</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetUniverseSystemsSystemIdPlanet.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['asteroid_belts'])) {
            throw new Error("Expected the field `asteroid_belts` to be an array in the JSON data but got " + data['asteroid_belts']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['moons'])) {
            throw new Error("Expected the field `moons` to be an array in the JSON data but got " + data['moons']);
        }

        return true;
    }


}

GetUniverseSystemsSystemIdPlanet.RequiredProperties = ["planet_id"];

/**
 * asteroid_belts array
 * @member {Array.<Number>} asteroid_belts
 */
GetUniverseSystemsSystemIdPlanet.prototype['asteroid_belts'] = undefined;

/**
 * moons array
 * @member {Array.<Number>} moons
 */
GetUniverseSystemsSystemIdPlanet.prototype['moons'] = undefined;

/**
 * planet_id integer
 * @member {Number} planet_id
 */
GetUniverseSystemsSystemIdPlanet.prototype['planet_id'] = undefined;






export default GetUniverseSystemsSystemIdPlanet;

