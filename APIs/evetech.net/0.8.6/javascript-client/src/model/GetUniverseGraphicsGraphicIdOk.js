/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetUniverseGraphicsGraphicIdOk model module.
 * @module model/GetUniverseGraphicsGraphicIdOk
 * @version 0.8.6
 */
class GetUniverseGraphicsGraphicIdOk {
    /**
     * Constructs a new <code>GetUniverseGraphicsGraphicIdOk</code>.
     * 200 ok object
     * @alias module:model/GetUniverseGraphicsGraphicIdOk
     * @param graphicId {Number} graphic_id integer
     */
    constructor(graphicId) { 
        
        GetUniverseGraphicsGraphicIdOk.initialize(this, graphicId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, graphicId) { 
        obj['graphic_id'] = graphicId;
    }

    /**
     * Constructs a <code>GetUniverseGraphicsGraphicIdOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUniverseGraphicsGraphicIdOk} obj Optional instance to populate.
     * @return {module:model/GetUniverseGraphicsGraphicIdOk} The populated <code>GetUniverseGraphicsGraphicIdOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUniverseGraphicsGraphicIdOk();

            if (data.hasOwnProperty('collision_file')) {
                obj['collision_file'] = ApiClient.convertToType(data['collision_file'], 'String');
            }
            if (data.hasOwnProperty('graphic_file')) {
                obj['graphic_file'] = ApiClient.convertToType(data['graphic_file'], 'String');
            }
            if (data.hasOwnProperty('graphic_id')) {
                obj['graphic_id'] = ApiClient.convertToType(data['graphic_id'], 'Number');
            }
            if (data.hasOwnProperty('icon_folder')) {
                obj['icon_folder'] = ApiClient.convertToType(data['icon_folder'], 'String');
            }
            if (data.hasOwnProperty('sof_dna')) {
                obj['sof_dna'] = ApiClient.convertToType(data['sof_dna'], 'String');
            }
            if (data.hasOwnProperty('sof_fation_name')) {
                obj['sof_fation_name'] = ApiClient.convertToType(data['sof_fation_name'], 'String');
            }
            if (data.hasOwnProperty('sof_hull_name')) {
                obj['sof_hull_name'] = ApiClient.convertToType(data['sof_hull_name'], 'String');
            }
            if (data.hasOwnProperty('sof_race_name')) {
                obj['sof_race_name'] = ApiClient.convertToType(data['sof_race_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetUniverseGraphicsGraphicIdOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetUniverseGraphicsGraphicIdOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetUniverseGraphicsGraphicIdOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['collision_file'] && !(typeof data['collision_file'] === 'string' || data['collision_file'] instanceof String)) {
            throw new Error("Expected the field `collision_file` to be a primitive type in the JSON string but got " + data['collision_file']);
        }
        // ensure the json data is a string
        if (data['graphic_file'] && !(typeof data['graphic_file'] === 'string' || data['graphic_file'] instanceof String)) {
            throw new Error("Expected the field `graphic_file` to be a primitive type in the JSON string but got " + data['graphic_file']);
        }
        // ensure the json data is a string
        if (data['icon_folder'] && !(typeof data['icon_folder'] === 'string' || data['icon_folder'] instanceof String)) {
            throw new Error("Expected the field `icon_folder` to be a primitive type in the JSON string but got " + data['icon_folder']);
        }
        // ensure the json data is a string
        if (data['sof_dna'] && !(typeof data['sof_dna'] === 'string' || data['sof_dna'] instanceof String)) {
            throw new Error("Expected the field `sof_dna` to be a primitive type in the JSON string but got " + data['sof_dna']);
        }
        // ensure the json data is a string
        if (data['sof_fation_name'] && !(typeof data['sof_fation_name'] === 'string' || data['sof_fation_name'] instanceof String)) {
            throw new Error("Expected the field `sof_fation_name` to be a primitive type in the JSON string but got " + data['sof_fation_name']);
        }
        // ensure the json data is a string
        if (data['sof_hull_name'] && !(typeof data['sof_hull_name'] === 'string' || data['sof_hull_name'] instanceof String)) {
            throw new Error("Expected the field `sof_hull_name` to be a primitive type in the JSON string but got " + data['sof_hull_name']);
        }
        // ensure the json data is a string
        if (data['sof_race_name'] && !(typeof data['sof_race_name'] === 'string' || data['sof_race_name'] instanceof String)) {
            throw new Error("Expected the field `sof_race_name` to be a primitive type in the JSON string but got " + data['sof_race_name']);
        }

        return true;
    }


}

GetUniverseGraphicsGraphicIdOk.RequiredProperties = ["graphic_id"];

/**
 * collision_file string
 * @member {String} collision_file
 */
GetUniverseGraphicsGraphicIdOk.prototype['collision_file'] = undefined;

/**
 * graphic_file string
 * @member {String} graphic_file
 */
GetUniverseGraphicsGraphicIdOk.prototype['graphic_file'] = undefined;

/**
 * graphic_id integer
 * @member {Number} graphic_id
 */
GetUniverseGraphicsGraphicIdOk.prototype['graphic_id'] = undefined;

/**
 * icon_folder string
 * @member {String} icon_folder
 */
GetUniverseGraphicsGraphicIdOk.prototype['icon_folder'] = undefined;

/**
 * sof_dna string
 * @member {String} sof_dna
 */
GetUniverseGraphicsGraphicIdOk.prototype['sof_dna'] = undefined;

/**
 * sof_fation_name string
 * @member {String} sof_fation_name
 */
GetUniverseGraphicsGraphicIdOk.prototype['sof_fation_name'] = undefined;

/**
 * sof_hull_name string
 * @member {String} sof_hull_name
 */
GetUniverseGraphicsGraphicIdOk.prototype['sof_hull_name'] = undefined;

/**
 * sof_race_name string
 * @member {String} sof_race_name
 */
GetUniverseGraphicsGraphicIdOk.prototype['sof_race_name'] = undefined;






export default GetUniverseGraphicsGraphicIdOk;

