/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetCharactersCharacterIdShipOk model module.
 * @module model/GetCharactersCharacterIdShipOk
 * @version 0.8.6
 */
class GetCharactersCharacterIdShipOk {
    /**
     * Constructs a new <code>GetCharactersCharacterIdShipOk</code>.
     * 200 ok object
     * @alias module:model/GetCharactersCharacterIdShipOk
     * @param shipItemId {Number} Item id's are unique to a ship and persist until it is repackaged. This value can be used to track repeated uses of a ship, or detect when a pilot changes into a different instance of the same ship type.
     * @param shipName {String} ship_name string
     * @param shipTypeId {Number} ship_type_id integer
     */
    constructor(shipItemId, shipName, shipTypeId) { 
        
        GetCharactersCharacterIdShipOk.initialize(this, shipItemId, shipName, shipTypeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, shipItemId, shipName, shipTypeId) { 
        obj['ship_item_id'] = shipItemId;
        obj['ship_name'] = shipName;
        obj['ship_type_id'] = shipTypeId;
    }

    /**
     * Constructs a <code>GetCharactersCharacterIdShipOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCharactersCharacterIdShipOk} obj Optional instance to populate.
     * @return {module:model/GetCharactersCharacterIdShipOk} The populated <code>GetCharactersCharacterIdShipOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCharactersCharacterIdShipOk();

            if (data.hasOwnProperty('ship_item_id')) {
                obj['ship_item_id'] = ApiClient.convertToType(data['ship_item_id'], 'Number');
            }
            if (data.hasOwnProperty('ship_name')) {
                obj['ship_name'] = ApiClient.convertToType(data['ship_name'], 'String');
            }
            if (data.hasOwnProperty('ship_type_id')) {
                obj['ship_type_id'] = ApiClient.convertToType(data['ship_type_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCharactersCharacterIdShipOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCharactersCharacterIdShipOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetCharactersCharacterIdShipOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ship_name'] && !(typeof data['ship_name'] === 'string' || data['ship_name'] instanceof String)) {
            throw new Error("Expected the field `ship_name` to be a primitive type in the JSON string but got " + data['ship_name']);
        }

        return true;
    }


}

GetCharactersCharacterIdShipOk.RequiredProperties = ["ship_item_id", "ship_name", "ship_type_id"];

/**
 * Item id's are unique to a ship and persist until it is repackaged. This value can be used to track repeated uses of a ship, or detect when a pilot changes into a different instance of the same ship type.
 * @member {Number} ship_item_id
 */
GetCharactersCharacterIdShipOk.prototype['ship_item_id'] = undefined;

/**
 * ship_name string
 * @member {String} ship_name
 */
GetCharactersCharacterIdShipOk.prototype['ship_name'] = undefined;

/**
 * ship_type_id integer
 * @member {Number} ship_type_id
 */
GetCharactersCharacterIdShipOk.prototype['ship_type_id'] = undefined;






export default GetCharactersCharacterIdShipOk;

