/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetDogmaDynamicItemsTypeIdItemIdDogmaAttribute from './GetDogmaDynamicItemsTypeIdItemIdDogmaAttribute';
import GetDogmaDynamicItemsTypeIdItemIdDogmaEffect from './GetDogmaDynamicItemsTypeIdItemIdDogmaEffect';

/**
 * The GetDogmaDynamicItemsTypeIdItemIdOk model module.
 * @module model/GetDogmaDynamicItemsTypeIdItemIdOk
 * @version 0.8.6
 */
class GetDogmaDynamicItemsTypeIdItemIdOk {
    /**
     * Constructs a new <code>GetDogmaDynamicItemsTypeIdItemIdOk</code>.
     * 200 ok object
     * @alias module:model/GetDogmaDynamicItemsTypeIdItemIdOk
     * @param createdBy {Number} The ID of the character who created the item
     * @param dogmaAttributes {Array.<module:model/GetDogmaDynamicItemsTypeIdItemIdDogmaAttribute>} dogma_attributes array
     * @param dogmaEffects {Array.<module:model/GetDogmaDynamicItemsTypeIdItemIdDogmaEffect>} dogma_effects array
     * @param mutatorTypeId {Number} The type ID of the mutator used to generate the dynamic item.
     * @param sourceTypeId {Number} The type ID of the source item the mutator was applied to create the dynamic item.
     */
    constructor(createdBy, dogmaAttributes, dogmaEffects, mutatorTypeId, sourceTypeId) { 
        
        GetDogmaDynamicItemsTypeIdItemIdOk.initialize(this, createdBy, dogmaAttributes, dogmaEffects, mutatorTypeId, sourceTypeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdBy, dogmaAttributes, dogmaEffects, mutatorTypeId, sourceTypeId) { 
        obj['created_by'] = createdBy;
        obj['dogma_attributes'] = dogmaAttributes;
        obj['dogma_effects'] = dogmaEffects;
        obj['mutator_type_id'] = mutatorTypeId;
        obj['source_type_id'] = sourceTypeId;
    }

    /**
     * Constructs a <code>GetDogmaDynamicItemsTypeIdItemIdOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDogmaDynamicItemsTypeIdItemIdOk} obj Optional instance to populate.
     * @return {module:model/GetDogmaDynamicItemsTypeIdItemIdOk} The populated <code>GetDogmaDynamicItemsTypeIdItemIdOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDogmaDynamicItemsTypeIdItemIdOk();

            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'Number');
            }
            if (data.hasOwnProperty('dogma_attributes')) {
                obj['dogma_attributes'] = ApiClient.convertToType(data['dogma_attributes'], [GetDogmaDynamicItemsTypeIdItemIdDogmaAttribute]);
            }
            if (data.hasOwnProperty('dogma_effects')) {
                obj['dogma_effects'] = ApiClient.convertToType(data['dogma_effects'], [GetDogmaDynamicItemsTypeIdItemIdDogmaEffect]);
            }
            if (data.hasOwnProperty('mutator_type_id')) {
                obj['mutator_type_id'] = ApiClient.convertToType(data['mutator_type_id'], 'Number');
            }
            if (data.hasOwnProperty('source_type_id')) {
                obj['source_type_id'] = ApiClient.convertToType(data['source_type_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDogmaDynamicItemsTypeIdItemIdOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDogmaDynamicItemsTypeIdItemIdOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetDogmaDynamicItemsTypeIdItemIdOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['dogma_attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dogma_attributes'])) {
                throw new Error("Expected the field `dogma_attributes` to be an array in the JSON data but got " + data['dogma_attributes']);
            }
            // validate the optional field `dogma_attributes` (array)
            for (const item of data['dogma_attributes']) {
                GetDogmaDynamicItemsTypeIdItemIdDogmaAttribute.validateJSON(item);
            };
        }
        if (data['dogma_effects']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dogma_effects'])) {
                throw new Error("Expected the field `dogma_effects` to be an array in the JSON data but got " + data['dogma_effects']);
            }
            // validate the optional field `dogma_effects` (array)
            for (const item of data['dogma_effects']) {
                GetDogmaDynamicItemsTypeIdItemIdDogmaEffect.validateJSON(item);
            };
        }

        return true;
    }


}

GetDogmaDynamicItemsTypeIdItemIdOk.RequiredProperties = ["created_by", "dogma_attributes", "dogma_effects", "mutator_type_id", "source_type_id"];

/**
 * The ID of the character who created the item
 * @member {Number} created_by
 */
GetDogmaDynamicItemsTypeIdItemIdOk.prototype['created_by'] = undefined;

/**
 * dogma_attributes array
 * @member {Array.<module:model/GetDogmaDynamicItemsTypeIdItemIdDogmaAttribute>} dogma_attributes
 */
GetDogmaDynamicItemsTypeIdItemIdOk.prototype['dogma_attributes'] = undefined;

/**
 * dogma_effects array
 * @member {Array.<module:model/GetDogmaDynamicItemsTypeIdItemIdDogmaEffect>} dogma_effects
 */
GetDogmaDynamicItemsTypeIdItemIdOk.prototype['dogma_effects'] = undefined;

/**
 * The type ID of the mutator used to generate the dynamic item.
 * @member {Number} mutator_type_id
 */
GetDogmaDynamicItemsTypeIdItemIdOk.prototype['mutator_type_id'] = undefined;

/**
 * The type ID of the source item the mutator was applied to create the dynamic item.
 * @member {Number} source_type_id
 */
GetDogmaDynamicItemsTypeIdItemIdOk.prototype['source_type_id'] = undefined;






export default GetDogmaDynamicItemsTypeIdItemIdOk;

