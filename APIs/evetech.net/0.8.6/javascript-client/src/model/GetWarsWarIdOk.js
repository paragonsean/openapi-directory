/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetWarsWarIdAggressor from './GetWarsWarIdAggressor';
import GetWarsWarIdAlly from './GetWarsWarIdAlly';
import GetWarsWarIdDefender from './GetWarsWarIdDefender';

/**
 * The GetWarsWarIdOk model module.
 * @module model/GetWarsWarIdOk
 * @version 0.8.6
 */
class GetWarsWarIdOk {
    /**
     * Constructs a new <code>GetWarsWarIdOk</code>.
     * 200 ok object
     * @alias module:model/GetWarsWarIdOk
     * @param aggressor {module:model/GetWarsWarIdAggressor} 
     * @param declared {Date} Time that the war was declared
     * @param defender {module:model/GetWarsWarIdDefender} 
     * @param id {Number} ID of the specified war
     * @param mutual {Boolean} Was the war declared mutual by both parties
     * @param openForAllies {Boolean} Is the war currently open for allies or not
     */
    constructor(aggressor, declared, defender, id, mutual, openForAllies) { 
        
        GetWarsWarIdOk.initialize(this, aggressor, declared, defender, id, mutual, openForAllies);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, aggressor, declared, defender, id, mutual, openForAllies) { 
        obj['aggressor'] = aggressor;
        obj['declared'] = declared;
        obj['defender'] = defender;
        obj['id'] = id;
        obj['mutual'] = mutual;
        obj['open_for_allies'] = openForAllies;
    }

    /**
     * Constructs a <code>GetWarsWarIdOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetWarsWarIdOk} obj Optional instance to populate.
     * @return {module:model/GetWarsWarIdOk} The populated <code>GetWarsWarIdOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetWarsWarIdOk();

            if (data.hasOwnProperty('aggressor')) {
                obj['aggressor'] = GetWarsWarIdAggressor.constructFromObject(data['aggressor']);
            }
            if (data.hasOwnProperty('allies')) {
                obj['allies'] = ApiClient.convertToType(data['allies'], [GetWarsWarIdAlly]);
            }
            if (data.hasOwnProperty('declared')) {
                obj['declared'] = ApiClient.convertToType(data['declared'], 'Date');
            }
            if (data.hasOwnProperty('defender')) {
                obj['defender'] = GetWarsWarIdDefender.constructFromObject(data['defender']);
            }
            if (data.hasOwnProperty('finished')) {
                obj['finished'] = ApiClient.convertToType(data['finished'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('mutual')) {
                obj['mutual'] = ApiClient.convertToType(data['mutual'], 'Boolean');
            }
            if (data.hasOwnProperty('open_for_allies')) {
                obj['open_for_allies'] = ApiClient.convertToType(data['open_for_allies'], 'Boolean');
            }
            if (data.hasOwnProperty('retracted')) {
                obj['retracted'] = ApiClient.convertToType(data['retracted'], 'Date');
            }
            if (data.hasOwnProperty('started')) {
                obj['started'] = ApiClient.convertToType(data['started'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetWarsWarIdOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetWarsWarIdOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetWarsWarIdOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `aggressor`
        if (data['aggressor']) { // data not null
          GetWarsWarIdAggressor.validateJSON(data['aggressor']);
        }
        if (data['allies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['allies'])) {
                throw new Error("Expected the field `allies` to be an array in the JSON data but got " + data['allies']);
            }
            // validate the optional field `allies` (array)
            for (const item of data['allies']) {
                GetWarsWarIdAlly.validateJSON(item);
            };
        }
        // validate the optional field `defender`
        if (data['defender']) { // data not null
          GetWarsWarIdDefender.validateJSON(data['defender']);
        }

        return true;
    }


}

GetWarsWarIdOk.RequiredProperties = ["aggressor", "declared", "defender", "id", "mutual", "open_for_allies"];

/**
 * @member {module:model/GetWarsWarIdAggressor} aggressor
 */
GetWarsWarIdOk.prototype['aggressor'] = undefined;

/**
 * allied corporations or alliances, each object contains either corporation_id or alliance_id
 * @member {Array.<module:model/GetWarsWarIdAlly>} allies
 */
GetWarsWarIdOk.prototype['allies'] = undefined;

/**
 * Time that the war was declared
 * @member {Date} declared
 */
GetWarsWarIdOk.prototype['declared'] = undefined;

/**
 * @member {module:model/GetWarsWarIdDefender} defender
 */
GetWarsWarIdOk.prototype['defender'] = undefined;

/**
 * Time the war ended and shooting was no longer allowed
 * @member {Date} finished
 */
GetWarsWarIdOk.prototype['finished'] = undefined;

/**
 * ID of the specified war
 * @member {Number} id
 */
GetWarsWarIdOk.prototype['id'] = undefined;

/**
 * Was the war declared mutual by both parties
 * @member {Boolean} mutual
 */
GetWarsWarIdOk.prototype['mutual'] = undefined;

/**
 * Is the war currently open for allies or not
 * @member {Boolean} open_for_allies
 */
GetWarsWarIdOk.prototype['open_for_allies'] = undefined;

/**
 * Time the war was retracted but both sides could still shoot each other
 * @member {Date} retracted
 */
GetWarsWarIdOk.prototype['retracted'] = undefined;

/**
 * Time when the war started and both sides could shoot each other
 * @member {Date} started
 */
GetWarsWarIdOk.prototype['started'] = undefined;






export default GetWarsWarIdOk;

