/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetUniverseStargatesStargateIdDestination from './GetUniverseStargatesStargateIdDestination';
import GetUniverseStargatesStargateIdPosition from './GetUniverseStargatesStargateIdPosition';

/**
 * The GetUniverseStargatesStargateIdOk model module.
 * @module model/GetUniverseStargatesStargateIdOk
 * @version 0.8.6
 */
class GetUniverseStargatesStargateIdOk {
    /**
     * Constructs a new <code>GetUniverseStargatesStargateIdOk</code>.
     * 200 ok object
     * @alias module:model/GetUniverseStargatesStargateIdOk
     * @param destination {module:model/GetUniverseStargatesStargateIdDestination} 
     * @param name {String} name string
     * @param position {module:model/GetUniverseStargatesStargateIdPosition} 
     * @param stargateId {Number} stargate_id integer
     * @param systemId {Number} The solar system this stargate is in
     * @param typeId {Number} type_id integer
     */
    constructor(destination, name, position, stargateId, systemId, typeId) { 
        
        GetUniverseStargatesStargateIdOk.initialize(this, destination, name, position, stargateId, systemId, typeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destination, name, position, stargateId, systemId, typeId) { 
        obj['destination'] = destination;
        obj['name'] = name;
        obj['position'] = position;
        obj['stargate_id'] = stargateId;
        obj['system_id'] = systemId;
        obj['type_id'] = typeId;
    }

    /**
     * Constructs a <code>GetUniverseStargatesStargateIdOk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUniverseStargatesStargateIdOk} obj Optional instance to populate.
     * @return {module:model/GetUniverseStargatesStargateIdOk} The populated <code>GetUniverseStargatesStargateIdOk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUniverseStargatesStargateIdOk();

            if (data.hasOwnProperty('destination')) {
                obj['destination'] = GetUniverseStargatesStargateIdDestination.constructFromObject(data['destination']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = GetUniverseStargatesStargateIdPosition.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('stargate_id')) {
                obj['stargate_id'] = ApiClient.convertToType(data['stargate_id'], 'Number');
            }
            if (data.hasOwnProperty('system_id')) {
                obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
            }
            if (data.hasOwnProperty('type_id')) {
                obj['type_id'] = ApiClient.convertToType(data['type_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetUniverseStargatesStargateIdOk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetUniverseStargatesStargateIdOk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetUniverseStargatesStargateIdOk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `destination`
        if (data['destination']) { // data not null
          GetUniverseStargatesStargateIdDestination.validateJSON(data['destination']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `position`
        if (data['position']) { // data not null
          GetUniverseStargatesStargateIdPosition.validateJSON(data['position']);
        }

        return true;
    }


}

GetUniverseStargatesStargateIdOk.RequiredProperties = ["destination", "name", "position", "stargate_id", "system_id", "type_id"];

/**
 * @member {module:model/GetUniverseStargatesStargateIdDestination} destination
 */
GetUniverseStargatesStargateIdOk.prototype['destination'] = undefined;

/**
 * name string
 * @member {String} name
 */
GetUniverseStargatesStargateIdOk.prototype['name'] = undefined;

/**
 * @member {module:model/GetUniverseStargatesStargateIdPosition} position
 */
GetUniverseStargatesStargateIdOk.prototype['position'] = undefined;

/**
 * stargate_id integer
 * @member {Number} stargate_id
 */
GetUniverseStargatesStargateIdOk.prototype['stargate_id'] = undefined;

/**
 * The solar system this stargate is in
 * @member {Number} system_id
 */
GetUniverseStargatesStargateIdOk.prototype['system_id'] = undefined;

/**
 * type_id integer
 * @member {Number} type_id
 */
GetUniverseStargatesStargateIdOk.prototype['type_id'] = undefined;






export default GetUniverseStargatesStargateIdOk;

