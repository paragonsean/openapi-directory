/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetCharactersCharacterIdMailRecipient from './GetCharactersCharacterIdMailRecipient';

/**
 * The GetCharactersCharacterIdMail200Ok model module.
 * @module model/GetCharactersCharacterIdMail200Ok
 * @version 0.8.6
 */
class GetCharactersCharacterIdMail200Ok {
    /**
     * Constructs a new <code>GetCharactersCharacterIdMail200Ok</code>.
     * 200 ok object
     * @alias module:model/GetCharactersCharacterIdMail200Ok
     */
    constructor() { 
        
        GetCharactersCharacterIdMail200Ok.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetCharactersCharacterIdMail200Ok</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCharactersCharacterIdMail200Ok} obj Optional instance to populate.
     * @return {module:model/GetCharactersCharacterIdMail200Ok} The populated <code>GetCharactersCharacterIdMail200Ok</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCharactersCharacterIdMail200Ok();

            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'Number');
            }
            if (data.hasOwnProperty('is_read')) {
                obj['is_read'] = ApiClient.convertToType(data['is_read'], 'Boolean');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], ['Number']);
            }
            if (data.hasOwnProperty('mail_id')) {
                obj['mail_id'] = ApiClient.convertToType(data['mail_id'], 'Number');
            }
            if (data.hasOwnProperty('recipients')) {
                obj['recipients'] = ApiClient.convertToType(data['recipients'], [GetCharactersCharacterIdMailRecipient]);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCharactersCharacterIdMail200Ok</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCharactersCharacterIdMail200Ok</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['labels'])) {
            throw new Error("Expected the field `labels` to be an array in the JSON data but got " + data['labels']);
        }
        if (data['recipients']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recipients'])) {
                throw new Error("Expected the field `recipients` to be an array in the JSON data but got " + data['recipients']);
            }
            // validate the optional field `recipients` (array)
            for (const item of data['recipients']) {
                GetCharactersCharacterIdMailRecipient.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }

        return true;
    }


}



/**
 * From whom the mail was sent
 * @member {Number} from
 */
GetCharactersCharacterIdMail200Ok.prototype['from'] = undefined;

/**
 * is_read boolean
 * @member {Boolean} is_read
 */
GetCharactersCharacterIdMail200Ok.prototype['is_read'] = undefined;

/**
 * labels array
 * @member {Array.<Number>} labels
 */
GetCharactersCharacterIdMail200Ok.prototype['labels'] = undefined;

/**
 * mail_id integer
 * @member {Number} mail_id
 */
GetCharactersCharacterIdMail200Ok.prototype['mail_id'] = undefined;

/**
 * Recipients of the mail
 * @member {Array.<module:model/GetCharactersCharacterIdMailRecipient>} recipients
 */
GetCharactersCharacterIdMail200Ok.prototype['recipients'] = undefined;

/**
 * Mail subject
 * @member {String} subject
 */
GetCharactersCharacterIdMail200Ok.prototype['subject'] = undefined;

/**
 * When the mail was sent
 * @member {Date} timestamp
 */
GetCharactersCharacterIdMail200Ok.prototype['timestamp'] = undefined;






export default GetCharactersCharacterIdMail200Ok;

