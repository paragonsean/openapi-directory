# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetUniverseStargatesStargateIdPosition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, x: float=None, y: float=None, z: float=None):
        """GetUniverseStargatesStargateIdPosition - a model defined in OpenAPI

        :param x: The x of this GetUniverseStargatesStargateIdPosition.
        :param y: The y of this GetUniverseStargatesStargateIdPosition.
        :param z: The z of this GetUniverseStargatesStargateIdPosition.
        """
        self.openapi_types = {
            'x': float,
            'y': float,
            'z': float
        }

        self.attribute_map = {
            'x': 'x',
            'y': 'y',
            'z': 'z'
        }

        self._x = x
        self._y = y
        self._z = z

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUniverseStargatesStargateIdPosition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_universe_stargates_stargate_id_position of this GetUniverseStargatesStargateIdPosition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def x(self):
        """Gets the x of this GetUniverseStargatesStargateIdPosition.

        x number

        :return: The x of this GetUniverseStargatesStargateIdPosition.
        :rtype: float
        """
        return self._x

    @x.setter
    def x(self, x):
        """Sets the x of this GetUniverseStargatesStargateIdPosition.

        x number

        :param x: The x of this GetUniverseStargatesStargateIdPosition.
        :type x: float
        """
        if x is None:
            raise ValueError("Invalid value for `x`, must not be `None`")

        self._x = x

    @property
    def y(self):
        """Gets the y of this GetUniverseStargatesStargateIdPosition.

        y number

        :return: The y of this GetUniverseStargatesStargateIdPosition.
        :rtype: float
        """
        return self._y

    @y.setter
    def y(self, y):
        """Sets the y of this GetUniverseStargatesStargateIdPosition.

        y number

        :param y: The y of this GetUniverseStargatesStargateIdPosition.
        :type y: float
        """
        if y is None:
            raise ValueError("Invalid value for `y`, must not be `None`")

        self._y = y

    @property
    def z(self):
        """Gets the z of this GetUniverseStargatesStargateIdPosition.

        z number

        :return: The z of this GetUniverseStargatesStargateIdPosition.
        :rtype: float
        """
        return self._z

    @z.setter
    def z(self, z):
        """Sets the z of this GetUniverseStargatesStargateIdPosition.

        z number

        :param z: The z of this GetUniverseStargatesStargateIdPosition.
        :type z: float
        """
        if z is None:
            raise ValueError("Invalid value for `z`, must not be `None`")

        self._z = z
