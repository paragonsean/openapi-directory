# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOpportunitiesTasksTaskIdOk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, notification: str=None, task_id: int=None):
        """GetOpportunitiesTasksTaskIdOk - a model defined in OpenAPI

        :param description: The description of this GetOpportunitiesTasksTaskIdOk.
        :param name: The name of this GetOpportunitiesTasksTaskIdOk.
        :param notification: The notification of this GetOpportunitiesTasksTaskIdOk.
        :param task_id: The task_id of this GetOpportunitiesTasksTaskIdOk.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'notification': str,
            'task_id': int
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'notification': 'notification',
            'task_id': 'task_id'
        }

        self._description = description
        self._name = name
        self._notification = notification
        self._task_id = task_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOpportunitiesTasksTaskIdOk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_opportunities_tasks_task_id_ok of this GetOpportunitiesTasksTaskIdOk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GetOpportunitiesTasksTaskIdOk.

        description string

        :return: The description of this GetOpportunitiesTasksTaskIdOk.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetOpportunitiesTasksTaskIdOk.

        description string

        :param description: The description of this GetOpportunitiesTasksTaskIdOk.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def name(self):
        """Gets the name of this GetOpportunitiesTasksTaskIdOk.

        name string

        :return: The name of this GetOpportunitiesTasksTaskIdOk.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetOpportunitiesTasksTaskIdOk.

        name string

        :param name: The name of this GetOpportunitiesTasksTaskIdOk.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def notification(self):
        """Gets the notification of this GetOpportunitiesTasksTaskIdOk.

        notification string

        :return: The notification of this GetOpportunitiesTasksTaskIdOk.
        :rtype: str
        """
        return self._notification

    @notification.setter
    def notification(self, notification):
        """Sets the notification of this GetOpportunitiesTasksTaskIdOk.

        notification string

        :param notification: The notification of this GetOpportunitiesTasksTaskIdOk.
        :type notification: str
        """
        if notification is None:
            raise ValueError("Invalid value for `notification`, must not be `None`")

        self._notification = notification

    @property
    def task_id(self):
        """Gets the task_id of this GetOpportunitiesTasksTaskIdOk.

        task_id integer

        :return: The task_id of this GetOpportunitiesTasksTaskIdOk.
        :rtype: int
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this GetOpportunitiesTasksTaskIdOk.

        task_id integer

        :param task_id: The task_id of this GetOpportunitiesTasksTaskIdOk.
        :type task_id: int
        """
        if task_id is None:
            raise ValueError("Invalid value for `task_id`, must not be `None`")

        self._task_id = task_id
