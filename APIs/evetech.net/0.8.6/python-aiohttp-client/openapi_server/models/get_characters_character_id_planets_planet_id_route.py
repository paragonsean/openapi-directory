# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCharactersCharacterIdPlanetsPlanetIdRoute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_type_id: int=None, destination_pin_id: int=None, quantity: float=None, route_id: int=None, source_pin_id: int=None, waypoints: List[int]=None):
        """GetCharactersCharacterIdPlanetsPlanetIdRoute - a model defined in OpenAPI

        :param content_type_id: The content_type_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :param destination_pin_id: The destination_pin_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :param quantity: The quantity of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :param route_id: The route_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :param source_pin_id: The source_pin_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :param waypoints: The waypoints of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        """
        self.openapi_types = {
            'content_type_id': int,
            'destination_pin_id': int,
            'quantity': float,
            'route_id': int,
            'source_pin_id': int,
            'waypoints': List[int]
        }

        self.attribute_map = {
            'content_type_id': 'content_type_id',
            'destination_pin_id': 'destination_pin_id',
            'quantity': 'quantity',
            'route_id': 'route_id',
            'source_pin_id': 'source_pin_id',
            'waypoints': 'waypoints'
        }

        self._content_type_id = content_type_id
        self._destination_pin_id = destination_pin_id
        self._quantity = quantity
        self._route_id = route_id
        self._source_pin_id = source_pin_id
        self._waypoints = waypoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCharactersCharacterIdPlanetsPlanetIdRoute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_characters_character_id_planets_planet_id_route of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_type_id(self):
        """Gets the content_type_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        content_type_id integer

        :return: The content_type_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :rtype: int
        """
        return self._content_type_id

    @content_type_id.setter
    def content_type_id(self, content_type_id):
        """Sets the content_type_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        content_type_id integer

        :param content_type_id: The content_type_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :type content_type_id: int
        """
        if content_type_id is None:
            raise ValueError("Invalid value for `content_type_id`, must not be `None`")

        self._content_type_id = content_type_id

    @property
    def destination_pin_id(self):
        """Gets the destination_pin_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        destination_pin_id integer

        :return: The destination_pin_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :rtype: int
        """
        return self._destination_pin_id

    @destination_pin_id.setter
    def destination_pin_id(self, destination_pin_id):
        """Sets the destination_pin_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        destination_pin_id integer

        :param destination_pin_id: The destination_pin_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :type destination_pin_id: int
        """
        if destination_pin_id is None:
            raise ValueError("Invalid value for `destination_pin_id`, must not be `None`")

        self._destination_pin_id = destination_pin_id

    @property
    def quantity(self):
        """Gets the quantity of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        quantity number

        :return: The quantity of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        quantity number

        :param quantity: The quantity of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :type quantity: float
        """
        if quantity is None:
            raise ValueError("Invalid value for `quantity`, must not be `None`")

        self._quantity = quantity

    @property
    def route_id(self):
        """Gets the route_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        route_id integer

        :return: The route_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :rtype: int
        """
        return self._route_id

    @route_id.setter
    def route_id(self, route_id):
        """Sets the route_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        route_id integer

        :param route_id: The route_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :type route_id: int
        """
        if route_id is None:
            raise ValueError("Invalid value for `route_id`, must not be `None`")

        self._route_id = route_id

    @property
    def source_pin_id(self):
        """Gets the source_pin_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        source_pin_id integer

        :return: The source_pin_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :rtype: int
        """
        return self._source_pin_id

    @source_pin_id.setter
    def source_pin_id(self, source_pin_id):
        """Sets the source_pin_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        source_pin_id integer

        :param source_pin_id: The source_pin_id of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :type source_pin_id: int
        """
        if source_pin_id is None:
            raise ValueError("Invalid value for `source_pin_id`, must not be `None`")

        self._source_pin_id = source_pin_id

    @property
    def waypoints(self):
        """Gets the waypoints of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        list of pin ID waypoints

        :return: The waypoints of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :rtype: List[int]
        """
        return self._waypoints

    @waypoints.setter
    def waypoints(self, waypoints):
        """Sets the waypoints of this GetCharactersCharacterIdPlanetsPlanetIdRoute.

        list of pin ID waypoints

        :param waypoints: The waypoints of this GetCharactersCharacterIdPlanetsPlanetIdRoute.
        :type waypoints: List[int]
        """
        if waypoints is not None and len(waypoints) > 5:
            raise ValueError("Invalid value for `waypoints`, number of items must be less than or equal to `5`")

        self._waypoints = waypoints
