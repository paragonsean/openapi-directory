# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCharactersCharacterIdShipOk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ship_item_id: int=None, ship_name: str=None, ship_type_id: int=None):
        """GetCharactersCharacterIdShipOk - a model defined in OpenAPI

        :param ship_item_id: The ship_item_id of this GetCharactersCharacterIdShipOk.
        :param ship_name: The ship_name of this GetCharactersCharacterIdShipOk.
        :param ship_type_id: The ship_type_id of this GetCharactersCharacterIdShipOk.
        """
        self.openapi_types = {
            'ship_item_id': int,
            'ship_name': str,
            'ship_type_id': int
        }

        self.attribute_map = {
            'ship_item_id': 'ship_item_id',
            'ship_name': 'ship_name',
            'ship_type_id': 'ship_type_id'
        }

        self._ship_item_id = ship_item_id
        self._ship_name = ship_name
        self._ship_type_id = ship_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCharactersCharacterIdShipOk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_characters_character_id_ship_ok of this GetCharactersCharacterIdShipOk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ship_item_id(self):
        """Gets the ship_item_id of this GetCharactersCharacterIdShipOk.

        Item id's are unique to a ship and persist until it is repackaged. This value can be used to track repeated uses of a ship, or detect when a pilot changes into a different instance of the same ship type.

        :return: The ship_item_id of this GetCharactersCharacterIdShipOk.
        :rtype: int
        """
        return self._ship_item_id

    @ship_item_id.setter
    def ship_item_id(self, ship_item_id):
        """Sets the ship_item_id of this GetCharactersCharacterIdShipOk.

        Item id's are unique to a ship and persist until it is repackaged. This value can be used to track repeated uses of a ship, or detect when a pilot changes into a different instance of the same ship type.

        :param ship_item_id: The ship_item_id of this GetCharactersCharacterIdShipOk.
        :type ship_item_id: int
        """
        if ship_item_id is None:
            raise ValueError("Invalid value for `ship_item_id`, must not be `None`")

        self._ship_item_id = ship_item_id

    @property
    def ship_name(self):
        """Gets the ship_name of this GetCharactersCharacterIdShipOk.

        ship_name string

        :return: The ship_name of this GetCharactersCharacterIdShipOk.
        :rtype: str
        """
        return self._ship_name

    @ship_name.setter
    def ship_name(self, ship_name):
        """Sets the ship_name of this GetCharactersCharacterIdShipOk.

        ship_name string

        :param ship_name: The ship_name of this GetCharactersCharacterIdShipOk.
        :type ship_name: str
        """
        if ship_name is None:
            raise ValueError("Invalid value for `ship_name`, must not be `None`")

        self._ship_name = ship_name

    @property
    def ship_type_id(self):
        """Gets the ship_type_id of this GetCharactersCharacterIdShipOk.

        ship_type_id integer

        :return: The ship_type_id of this GetCharactersCharacterIdShipOk.
        :rtype: int
        """
        return self._ship_type_id

    @ship_type_id.setter
    def ship_type_id(self, ship_type_id):
        """Sets the ship_type_id of this GetCharactersCharacterIdShipOk.

        ship_type_id integer

        :param ship_type_id: The ship_type_id of this GetCharactersCharacterIdShipOk.
        :type ship_type_id: int
        """
        if ship_type_id is None:
            raise ValueError("Invalid value for `ship_type_id`, must not be `None`")

        self._ship_type_id = ship_type_id
