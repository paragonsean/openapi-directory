# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_universe_stargates_stargate_id_destination import GetUniverseStargatesStargateIdDestination
from openapi_server.models.get_universe_stargates_stargate_id_position import GetUniverseStargatesStargateIdPosition
from openapi_server import util


class GetUniverseStargatesStargateIdOk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination: GetUniverseStargatesStargateIdDestination=None, name: str=None, position: GetUniverseStargatesStargateIdPosition=None, stargate_id: int=None, system_id: int=None, type_id: int=None):
        """GetUniverseStargatesStargateIdOk - a model defined in OpenAPI

        :param destination: The destination of this GetUniverseStargatesStargateIdOk.
        :param name: The name of this GetUniverseStargatesStargateIdOk.
        :param position: The position of this GetUniverseStargatesStargateIdOk.
        :param stargate_id: The stargate_id of this GetUniverseStargatesStargateIdOk.
        :param system_id: The system_id of this GetUniverseStargatesStargateIdOk.
        :param type_id: The type_id of this GetUniverseStargatesStargateIdOk.
        """
        self.openapi_types = {
            'destination': GetUniverseStargatesStargateIdDestination,
            'name': str,
            'position': GetUniverseStargatesStargateIdPosition,
            'stargate_id': int,
            'system_id': int,
            'type_id': int
        }

        self.attribute_map = {
            'destination': 'destination',
            'name': 'name',
            'position': 'position',
            'stargate_id': 'stargate_id',
            'system_id': 'system_id',
            'type_id': 'type_id'
        }

        self._destination = destination
        self._name = name
        self._position = position
        self._stargate_id = stargate_id
        self._system_id = system_id
        self._type_id = type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUniverseStargatesStargateIdOk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_universe_stargates_stargate_id_ok of this GetUniverseStargatesStargateIdOk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self):
        """Gets the destination of this GetUniverseStargatesStargateIdOk.


        :return: The destination of this GetUniverseStargatesStargateIdOk.
        :rtype: GetUniverseStargatesStargateIdDestination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this GetUniverseStargatesStargateIdOk.


        :param destination: The destination of this GetUniverseStargatesStargateIdOk.
        :type destination: GetUniverseStargatesStargateIdDestination
        """
        if destination is None:
            raise ValueError("Invalid value for `destination`, must not be `None`")

        self._destination = destination

    @property
    def name(self):
        """Gets the name of this GetUniverseStargatesStargateIdOk.

        name string

        :return: The name of this GetUniverseStargatesStargateIdOk.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetUniverseStargatesStargateIdOk.

        name string

        :param name: The name of this GetUniverseStargatesStargateIdOk.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def position(self):
        """Gets the position of this GetUniverseStargatesStargateIdOk.


        :return: The position of this GetUniverseStargatesStargateIdOk.
        :rtype: GetUniverseStargatesStargateIdPosition
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this GetUniverseStargatesStargateIdOk.


        :param position: The position of this GetUniverseStargatesStargateIdOk.
        :type position: GetUniverseStargatesStargateIdPosition
        """
        if position is None:
            raise ValueError("Invalid value for `position`, must not be `None`")

        self._position = position

    @property
    def stargate_id(self):
        """Gets the stargate_id of this GetUniverseStargatesStargateIdOk.

        stargate_id integer

        :return: The stargate_id of this GetUniverseStargatesStargateIdOk.
        :rtype: int
        """
        return self._stargate_id

    @stargate_id.setter
    def stargate_id(self, stargate_id):
        """Sets the stargate_id of this GetUniverseStargatesStargateIdOk.

        stargate_id integer

        :param stargate_id: The stargate_id of this GetUniverseStargatesStargateIdOk.
        :type stargate_id: int
        """
        if stargate_id is None:
            raise ValueError("Invalid value for `stargate_id`, must not be `None`")

        self._stargate_id = stargate_id

    @property
    def system_id(self):
        """Gets the system_id of this GetUniverseStargatesStargateIdOk.

        The solar system this stargate is in

        :return: The system_id of this GetUniverseStargatesStargateIdOk.
        :rtype: int
        """
        return self._system_id

    @system_id.setter
    def system_id(self, system_id):
        """Sets the system_id of this GetUniverseStargatesStargateIdOk.

        The solar system this stargate is in

        :param system_id: The system_id of this GetUniverseStargatesStargateIdOk.
        :type system_id: int
        """
        if system_id is None:
            raise ValueError("Invalid value for `system_id`, must not be `None`")

        self._system_id = system_id

    @property
    def type_id(self):
        """Gets the type_id of this GetUniverseStargatesStargateIdOk.

        type_id integer

        :return: The type_id of this GetUniverseStargatesStargateIdOk.
        :rtype: int
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id):
        """Sets the type_id of this GetUniverseStargatesStargateIdOk.

        type_id integer

        :param type_id: The type_id of this GetUniverseStargatesStargateIdOk.
        :type type_id: int
        """
        if type_id is None:
            raise ValueError("Invalid value for `type_id`, must not be `None`")

        self._type_id = type_id
