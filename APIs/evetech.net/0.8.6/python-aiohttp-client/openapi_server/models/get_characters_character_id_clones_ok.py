# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_characters_character_id_clones_home_location import GetCharactersCharacterIdClonesHomeLocation
from openapi_server.models.get_characters_character_id_clones_jump_clone import GetCharactersCharacterIdClonesJumpClone
from openapi_server import util


class GetCharactersCharacterIdClonesOk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, home_location: GetCharactersCharacterIdClonesHomeLocation=None, jump_clones: List[GetCharactersCharacterIdClonesJumpClone]=None, last_clone_jump_date: datetime=None, last_station_change_date: datetime=None):
        """GetCharactersCharacterIdClonesOk - a model defined in OpenAPI

        :param home_location: The home_location of this GetCharactersCharacterIdClonesOk.
        :param jump_clones: The jump_clones of this GetCharactersCharacterIdClonesOk.
        :param last_clone_jump_date: The last_clone_jump_date of this GetCharactersCharacterIdClonesOk.
        :param last_station_change_date: The last_station_change_date of this GetCharactersCharacterIdClonesOk.
        """
        self.openapi_types = {
            'home_location': GetCharactersCharacterIdClonesHomeLocation,
            'jump_clones': List[GetCharactersCharacterIdClonesJumpClone],
            'last_clone_jump_date': datetime,
            'last_station_change_date': datetime
        }

        self.attribute_map = {
            'home_location': 'home_location',
            'jump_clones': 'jump_clones',
            'last_clone_jump_date': 'last_clone_jump_date',
            'last_station_change_date': 'last_station_change_date'
        }

        self._home_location = home_location
        self._jump_clones = jump_clones
        self._last_clone_jump_date = last_clone_jump_date
        self._last_station_change_date = last_station_change_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCharactersCharacterIdClonesOk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_characters_character_id_clones_ok of this GetCharactersCharacterIdClonesOk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def home_location(self):
        """Gets the home_location of this GetCharactersCharacterIdClonesOk.


        :return: The home_location of this GetCharactersCharacterIdClonesOk.
        :rtype: GetCharactersCharacterIdClonesHomeLocation
        """
        return self._home_location

    @home_location.setter
    def home_location(self, home_location):
        """Sets the home_location of this GetCharactersCharacterIdClonesOk.


        :param home_location: The home_location of this GetCharactersCharacterIdClonesOk.
        :type home_location: GetCharactersCharacterIdClonesHomeLocation
        """

        self._home_location = home_location

    @property
    def jump_clones(self):
        """Gets the jump_clones of this GetCharactersCharacterIdClonesOk.

        jump_clones array

        :return: The jump_clones of this GetCharactersCharacterIdClonesOk.
        :rtype: List[GetCharactersCharacterIdClonesJumpClone]
        """
        return self._jump_clones

    @jump_clones.setter
    def jump_clones(self, jump_clones):
        """Sets the jump_clones of this GetCharactersCharacterIdClonesOk.

        jump_clones array

        :param jump_clones: The jump_clones of this GetCharactersCharacterIdClonesOk.
        :type jump_clones: List[GetCharactersCharacterIdClonesJumpClone]
        """
        if jump_clones is None:
            raise ValueError("Invalid value for `jump_clones`, must not be `None`")
        if jump_clones is not None and len(jump_clones) > 10:
            raise ValueError("Invalid value for `jump_clones`, number of items must be less than or equal to `10`")

        self._jump_clones = jump_clones

    @property
    def last_clone_jump_date(self):
        """Gets the last_clone_jump_date of this GetCharactersCharacterIdClonesOk.

        last_clone_jump_date string

        :return: The last_clone_jump_date of this GetCharactersCharacterIdClonesOk.
        :rtype: datetime
        """
        return self._last_clone_jump_date

    @last_clone_jump_date.setter
    def last_clone_jump_date(self, last_clone_jump_date):
        """Sets the last_clone_jump_date of this GetCharactersCharacterIdClonesOk.

        last_clone_jump_date string

        :param last_clone_jump_date: The last_clone_jump_date of this GetCharactersCharacterIdClonesOk.
        :type last_clone_jump_date: datetime
        """

        self._last_clone_jump_date = last_clone_jump_date

    @property
    def last_station_change_date(self):
        """Gets the last_station_change_date of this GetCharactersCharacterIdClonesOk.

        last_station_change_date string

        :return: The last_station_change_date of this GetCharactersCharacterIdClonesOk.
        :rtype: datetime
        """
        return self._last_station_change_date

    @last_station_change_date.setter
    def last_station_change_date(self, last_station_change_date):
        """Sets the last_station_change_date of this GetCharactersCharacterIdClonesOk.

        last_station_change_date string

        :param last_station_change_date: The last_station_change_date of this GetCharactersCharacterIdClonesOk.
        :type last_station_change_date: datetime
        """

        self._last_station_change_date = last_station_change_date
