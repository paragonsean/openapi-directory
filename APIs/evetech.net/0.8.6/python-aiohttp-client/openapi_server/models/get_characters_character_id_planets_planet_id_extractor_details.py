# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_characters_character_id_planets_planet_id_head import GetCharactersCharacterIdPlanetsPlanetIdHead
from openapi_server import util


class GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cycle_time: int=None, head_radius: float=None, heads: List[GetCharactersCharacterIdPlanetsPlanetIdHead]=None, product_type_id: int=None, qty_per_cycle: int=None):
        """GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails - a model defined in OpenAPI

        :param cycle_time: The cycle_time of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :param head_radius: The head_radius of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :param heads: The heads of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :param product_type_id: The product_type_id of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :param qty_per_cycle: The qty_per_cycle of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        """
        self.openapi_types = {
            'cycle_time': int,
            'head_radius': float,
            'heads': List[GetCharactersCharacterIdPlanetsPlanetIdHead],
            'product_type_id': int,
            'qty_per_cycle': int
        }

        self.attribute_map = {
            'cycle_time': 'cycle_time',
            'head_radius': 'head_radius',
            'heads': 'heads',
            'product_type_id': 'product_type_id',
            'qty_per_cycle': 'qty_per_cycle'
        }

        self._cycle_time = cycle_time
        self._head_radius = head_radius
        self._heads = heads
        self._product_type_id = product_type_id
        self._qty_per_cycle = qty_per_cycle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_characters_character_id_planets_planet_id_extractor_details of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cycle_time(self):
        """Gets the cycle_time of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.

        in seconds

        :return: The cycle_time of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :rtype: int
        """
        return self._cycle_time

    @cycle_time.setter
    def cycle_time(self, cycle_time):
        """Sets the cycle_time of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.

        in seconds

        :param cycle_time: The cycle_time of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :type cycle_time: int
        """

        self._cycle_time = cycle_time

    @property
    def head_radius(self):
        """Gets the head_radius of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.

        head_radius number

        :return: The head_radius of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :rtype: float
        """
        return self._head_radius

    @head_radius.setter
    def head_radius(self, head_radius):
        """Sets the head_radius of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.

        head_radius number

        :param head_radius: The head_radius of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :type head_radius: float
        """

        self._head_radius = head_radius

    @property
    def heads(self):
        """Gets the heads of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.

        heads array

        :return: The heads of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :rtype: List[GetCharactersCharacterIdPlanetsPlanetIdHead]
        """
        return self._heads

    @heads.setter
    def heads(self, heads):
        """Sets the heads of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.

        heads array

        :param heads: The heads of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :type heads: List[GetCharactersCharacterIdPlanetsPlanetIdHead]
        """
        if heads is None:
            raise ValueError("Invalid value for `heads`, must not be `None`")
        if heads is not None and len(heads) > 10:
            raise ValueError("Invalid value for `heads`, number of items must be less than or equal to `10`")

        self._heads = heads

    @property
    def product_type_id(self):
        """Gets the product_type_id of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.

        product_type_id integer

        :return: The product_type_id of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :rtype: int
        """
        return self._product_type_id

    @product_type_id.setter
    def product_type_id(self, product_type_id):
        """Sets the product_type_id of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.

        product_type_id integer

        :param product_type_id: The product_type_id of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :type product_type_id: int
        """

        self._product_type_id = product_type_id

    @property
    def qty_per_cycle(self):
        """Gets the qty_per_cycle of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.

        qty_per_cycle integer

        :return: The qty_per_cycle of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :rtype: int
        """
        return self._qty_per_cycle

    @qty_per_cycle.setter
    def qty_per_cycle(self, qty_per_cycle):
        """Sets the qty_per_cycle of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.

        qty_per_cycle integer

        :param qty_per_cycle: The qty_per_cycle of this GetCharactersCharacterIdPlanetsPlanetIdExtractorDetails.
        :type qty_per_cycle: int
        """

        self._qty_per_cycle = qty_per_cycle
