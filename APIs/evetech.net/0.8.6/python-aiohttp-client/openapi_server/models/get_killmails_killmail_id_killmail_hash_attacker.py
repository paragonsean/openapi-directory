# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetKillmailsKillmailIdKillmailHashAttacker(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alliance_id: int=None, character_id: int=None, corporation_id: int=None, damage_done: int=None, faction_id: int=None, final_blow: bool=None, security_status: float=None, ship_type_id: int=None, weapon_type_id: int=None):
        """GetKillmailsKillmailIdKillmailHashAttacker - a model defined in OpenAPI

        :param alliance_id: The alliance_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :param character_id: The character_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :param corporation_id: The corporation_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :param damage_done: The damage_done of this GetKillmailsKillmailIdKillmailHashAttacker.
        :param faction_id: The faction_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :param final_blow: The final_blow of this GetKillmailsKillmailIdKillmailHashAttacker.
        :param security_status: The security_status of this GetKillmailsKillmailIdKillmailHashAttacker.
        :param ship_type_id: The ship_type_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :param weapon_type_id: The weapon_type_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        """
        self.openapi_types = {
            'alliance_id': int,
            'character_id': int,
            'corporation_id': int,
            'damage_done': int,
            'faction_id': int,
            'final_blow': bool,
            'security_status': float,
            'ship_type_id': int,
            'weapon_type_id': int
        }

        self.attribute_map = {
            'alliance_id': 'alliance_id',
            'character_id': 'character_id',
            'corporation_id': 'corporation_id',
            'damage_done': 'damage_done',
            'faction_id': 'faction_id',
            'final_blow': 'final_blow',
            'security_status': 'security_status',
            'ship_type_id': 'ship_type_id',
            'weapon_type_id': 'weapon_type_id'
        }

        self._alliance_id = alliance_id
        self._character_id = character_id
        self._corporation_id = corporation_id
        self._damage_done = damage_done
        self._faction_id = faction_id
        self._final_blow = final_blow
        self._security_status = security_status
        self._ship_type_id = ship_type_id
        self._weapon_type_id = weapon_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetKillmailsKillmailIdKillmailHashAttacker':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_killmails_killmail_id_killmail_hash_attacker of this GetKillmailsKillmailIdKillmailHashAttacker.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alliance_id(self):
        """Gets the alliance_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        alliance_id integer

        :return: The alliance_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :rtype: int
        """
        return self._alliance_id

    @alliance_id.setter
    def alliance_id(self, alliance_id):
        """Sets the alliance_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        alliance_id integer

        :param alliance_id: The alliance_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :type alliance_id: int
        """

        self._alliance_id = alliance_id

    @property
    def character_id(self):
        """Gets the character_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        character_id integer

        :return: The character_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :rtype: int
        """
        return self._character_id

    @character_id.setter
    def character_id(self, character_id):
        """Sets the character_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        character_id integer

        :param character_id: The character_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :type character_id: int
        """

        self._character_id = character_id

    @property
    def corporation_id(self):
        """Gets the corporation_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        corporation_id integer

        :return: The corporation_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :rtype: int
        """
        return self._corporation_id

    @corporation_id.setter
    def corporation_id(self, corporation_id):
        """Sets the corporation_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        corporation_id integer

        :param corporation_id: The corporation_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :type corporation_id: int
        """

        self._corporation_id = corporation_id

    @property
    def damage_done(self):
        """Gets the damage_done of this GetKillmailsKillmailIdKillmailHashAttacker.

        damage_done integer

        :return: The damage_done of this GetKillmailsKillmailIdKillmailHashAttacker.
        :rtype: int
        """
        return self._damage_done

    @damage_done.setter
    def damage_done(self, damage_done):
        """Sets the damage_done of this GetKillmailsKillmailIdKillmailHashAttacker.

        damage_done integer

        :param damage_done: The damage_done of this GetKillmailsKillmailIdKillmailHashAttacker.
        :type damage_done: int
        """
        if damage_done is None:
            raise ValueError("Invalid value for `damage_done`, must not be `None`")

        self._damage_done = damage_done

    @property
    def faction_id(self):
        """Gets the faction_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        faction_id integer

        :return: The faction_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :rtype: int
        """
        return self._faction_id

    @faction_id.setter
    def faction_id(self, faction_id):
        """Sets the faction_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        faction_id integer

        :param faction_id: The faction_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :type faction_id: int
        """

        self._faction_id = faction_id

    @property
    def final_blow(self):
        """Gets the final_blow of this GetKillmailsKillmailIdKillmailHashAttacker.

        Was the attacker the one to achieve the final blow 

        :return: The final_blow of this GetKillmailsKillmailIdKillmailHashAttacker.
        :rtype: bool
        """
        return self._final_blow

    @final_blow.setter
    def final_blow(self, final_blow):
        """Sets the final_blow of this GetKillmailsKillmailIdKillmailHashAttacker.

        Was the attacker the one to achieve the final blow 

        :param final_blow: The final_blow of this GetKillmailsKillmailIdKillmailHashAttacker.
        :type final_blow: bool
        """
        if final_blow is None:
            raise ValueError("Invalid value for `final_blow`, must not be `None`")

        self._final_blow = final_blow

    @property
    def security_status(self):
        """Gets the security_status of this GetKillmailsKillmailIdKillmailHashAttacker.

        Security status for the attacker 

        :return: The security_status of this GetKillmailsKillmailIdKillmailHashAttacker.
        :rtype: float
        """
        return self._security_status

    @security_status.setter
    def security_status(self, security_status):
        """Sets the security_status of this GetKillmailsKillmailIdKillmailHashAttacker.

        Security status for the attacker 

        :param security_status: The security_status of this GetKillmailsKillmailIdKillmailHashAttacker.
        :type security_status: float
        """
        if security_status is None:
            raise ValueError("Invalid value for `security_status`, must not be `None`")

        self._security_status = security_status

    @property
    def ship_type_id(self):
        """Gets the ship_type_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        What ship was the attacker flying 

        :return: The ship_type_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :rtype: int
        """
        return self._ship_type_id

    @ship_type_id.setter
    def ship_type_id(self, ship_type_id):
        """Sets the ship_type_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        What ship was the attacker flying 

        :param ship_type_id: The ship_type_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :type ship_type_id: int
        """

        self._ship_type_id = ship_type_id

    @property
    def weapon_type_id(self):
        """Gets the weapon_type_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        What weapon was used by the attacker for the kill 

        :return: The weapon_type_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :rtype: int
        """
        return self._weapon_type_id

    @weapon_type_id.setter
    def weapon_type_id(self, weapon_type_id):
        """Sets the weapon_type_id of this GetKillmailsKillmailIdKillmailHashAttacker.

        What weapon was used by the attacker for the kill 

        :param weapon_type_id: The weapon_type_id of this GetKillmailsKillmailIdKillmailHashAttacker.
        :type weapon_type_id: int
        """

        self._weapon_type_id = weapon_type_id
