# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_killmails_killmail_id_killmail_hash_attacker import GetKillmailsKillmailIdKillmailHashAttacker
from openapi_server.models.get_killmails_killmail_id_killmail_hash_victim import GetKillmailsKillmailIdKillmailHashVictim
from openapi_server import util


class GetKillmailsKillmailIdKillmailHashOk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attackers: List[GetKillmailsKillmailIdKillmailHashAttacker]=None, killmail_id: int=None, killmail_time: datetime=None, moon_id: int=None, solar_system_id: int=None, victim: GetKillmailsKillmailIdKillmailHashVictim=None, war_id: int=None):
        """GetKillmailsKillmailIdKillmailHashOk - a model defined in OpenAPI

        :param attackers: The attackers of this GetKillmailsKillmailIdKillmailHashOk.
        :param killmail_id: The killmail_id of this GetKillmailsKillmailIdKillmailHashOk.
        :param killmail_time: The killmail_time of this GetKillmailsKillmailIdKillmailHashOk.
        :param moon_id: The moon_id of this GetKillmailsKillmailIdKillmailHashOk.
        :param solar_system_id: The solar_system_id of this GetKillmailsKillmailIdKillmailHashOk.
        :param victim: The victim of this GetKillmailsKillmailIdKillmailHashOk.
        :param war_id: The war_id of this GetKillmailsKillmailIdKillmailHashOk.
        """
        self.openapi_types = {
            'attackers': List[GetKillmailsKillmailIdKillmailHashAttacker],
            'killmail_id': int,
            'killmail_time': datetime,
            'moon_id': int,
            'solar_system_id': int,
            'victim': GetKillmailsKillmailIdKillmailHashVictim,
            'war_id': int
        }

        self.attribute_map = {
            'attackers': 'attackers',
            'killmail_id': 'killmail_id',
            'killmail_time': 'killmail_time',
            'moon_id': 'moon_id',
            'solar_system_id': 'solar_system_id',
            'victim': 'victim',
            'war_id': 'war_id'
        }

        self._attackers = attackers
        self._killmail_id = killmail_id
        self._killmail_time = killmail_time
        self._moon_id = moon_id
        self._solar_system_id = solar_system_id
        self._victim = victim
        self._war_id = war_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetKillmailsKillmailIdKillmailHashOk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_killmails_killmail_id_killmail_hash_ok of this GetKillmailsKillmailIdKillmailHashOk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attackers(self):
        """Gets the attackers of this GetKillmailsKillmailIdKillmailHashOk.

        attackers array

        :return: The attackers of this GetKillmailsKillmailIdKillmailHashOk.
        :rtype: List[GetKillmailsKillmailIdKillmailHashAttacker]
        """
        return self._attackers

    @attackers.setter
    def attackers(self, attackers):
        """Sets the attackers of this GetKillmailsKillmailIdKillmailHashOk.

        attackers array

        :param attackers: The attackers of this GetKillmailsKillmailIdKillmailHashOk.
        :type attackers: List[GetKillmailsKillmailIdKillmailHashAttacker]
        """
        if attackers is None:
            raise ValueError("Invalid value for `attackers`, must not be `None`")
        if attackers is not None and len(attackers) > 10000:
            raise ValueError("Invalid value for `attackers`, number of items must be less than or equal to `10000`")

        self._attackers = attackers

    @property
    def killmail_id(self):
        """Gets the killmail_id of this GetKillmailsKillmailIdKillmailHashOk.

        ID of the killmail

        :return: The killmail_id of this GetKillmailsKillmailIdKillmailHashOk.
        :rtype: int
        """
        return self._killmail_id

    @killmail_id.setter
    def killmail_id(self, killmail_id):
        """Sets the killmail_id of this GetKillmailsKillmailIdKillmailHashOk.

        ID of the killmail

        :param killmail_id: The killmail_id of this GetKillmailsKillmailIdKillmailHashOk.
        :type killmail_id: int
        """
        if killmail_id is None:
            raise ValueError("Invalid value for `killmail_id`, must not be `None`")

        self._killmail_id = killmail_id

    @property
    def killmail_time(self):
        """Gets the killmail_time of this GetKillmailsKillmailIdKillmailHashOk.

        Time that the victim was killed and the killmail generated 

        :return: The killmail_time of this GetKillmailsKillmailIdKillmailHashOk.
        :rtype: datetime
        """
        return self._killmail_time

    @killmail_time.setter
    def killmail_time(self, killmail_time):
        """Sets the killmail_time of this GetKillmailsKillmailIdKillmailHashOk.

        Time that the victim was killed and the killmail generated 

        :param killmail_time: The killmail_time of this GetKillmailsKillmailIdKillmailHashOk.
        :type killmail_time: datetime
        """
        if killmail_time is None:
            raise ValueError("Invalid value for `killmail_time`, must not be `None`")

        self._killmail_time = killmail_time

    @property
    def moon_id(self):
        """Gets the moon_id of this GetKillmailsKillmailIdKillmailHashOk.

        Moon if the kill took place at one

        :return: The moon_id of this GetKillmailsKillmailIdKillmailHashOk.
        :rtype: int
        """
        return self._moon_id

    @moon_id.setter
    def moon_id(self, moon_id):
        """Sets the moon_id of this GetKillmailsKillmailIdKillmailHashOk.

        Moon if the kill took place at one

        :param moon_id: The moon_id of this GetKillmailsKillmailIdKillmailHashOk.
        :type moon_id: int
        """

        self._moon_id = moon_id

    @property
    def solar_system_id(self):
        """Gets the solar_system_id of this GetKillmailsKillmailIdKillmailHashOk.

        Solar system that the kill took place in 

        :return: The solar_system_id of this GetKillmailsKillmailIdKillmailHashOk.
        :rtype: int
        """
        return self._solar_system_id

    @solar_system_id.setter
    def solar_system_id(self, solar_system_id):
        """Sets the solar_system_id of this GetKillmailsKillmailIdKillmailHashOk.

        Solar system that the kill took place in 

        :param solar_system_id: The solar_system_id of this GetKillmailsKillmailIdKillmailHashOk.
        :type solar_system_id: int
        """
        if solar_system_id is None:
            raise ValueError("Invalid value for `solar_system_id`, must not be `None`")

        self._solar_system_id = solar_system_id

    @property
    def victim(self):
        """Gets the victim of this GetKillmailsKillmailIdKillmailHashOk.


        :return: The victim of this GetKillmailsKillmailIdKillmailHashOk.
        :rtype: GetKillmailsKillmailIdKillmailHashVictim
        """
        return self._victim

    @victim.setter
    def victim(self, victim):
        """Sets the victim of this GetKillmailsKillmailIdKillmailHashOk.


        :param victim: The victim of this GetKillmailsKillmailIdKillmailHashOk.
        :type victim: GetKillmailsKillmailIdKillmailHashVictim
        """
        if victim is None:
            raise ValueError("Invalid value for `victim`, must not be `None`")

        self._victim = victim

    @property
    def war_id(self):
        """Gets the war_id of this GetKillmailsKillmailIdKillmailHashOk.

        War if the killmail is generated in relation to an official war 

        :return: The war_id of this GetKillmailsKillmailIdKillmailHashOk.
        :rtype: int
        """
        return self._war_id

    @war_id.setter
    def war_id(self, war_id):
        """Sets the war_id of this GetKillmailsKillmailIdKillmailHashOk.

        War if the killmail is generated in relation to an official war 

        :param war_id: The war_id of this GetKillmailsKillmailIdKillmailHashOk.
        :type war_id: int
        """

        self._war_id = war_id
