# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDogmaEffectsEffectIdModifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, effect_id: int=None, func: str=None, modified_attribute_id: int=None, modifying_attribute_id: int=None, operator: int=None):
        """GetDogmaEffectsEffectIdModifier - a model defined in OpenAPI

        :param domain: The domain of this GetDogmaEffectsEffectIdModifier.
        :param effect_id: The effect_id of this GetDogmaEffectsEffectIdModifier.
        :param func: The func of this GetDogmaEffectsEffectIdModifier.
        :param modified_attribute_id: The modified_attribute_id of this GetDogmaEffectsEffectIdModifier.
        :param modifying_attribute_id: The modifying_attribute_id of this GetDogmaEffectsEffectIdModifier.
        :param operator: The operator of this GetDogmaEffectsEffectIdModifier.
        """
        self.openapi_types = {
            'domain': str,
            'effect_id': int,
            'func': str,
            'modified_attribute_id': int,
            'modifying_attribute_id': int,
            'operator': int
        }

        self.attribute_map = {
            'domain': 'domain',
            'effect_id': 'effect_id',
            'func': 'func',
            'modified_attribute_id': 'modified_attribute_id',
            'modifying_attribute_id': 'modifying_attribute_id',
            'operator': 'operator'
        }

        self._domain = domain
        self._effect_id = effect_id
        self._func = func
        self._modified_attribute_id = modified_attribute_id
        self._modifying_attribute_id = modifying_attribute_id
        self._operator = operator

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDogmaEffectsEffectIdModifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_dogma_effects_effect_id_modifier of this GetDogmaEffectsEffectIdModifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this GetDogmaEffectsEffectIdModifier.

        domain string

        :return: The domain of this GetDogmaEffectsEffectIdModifier.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this GetDogmaEffectsEffectIdModifier.

        domain string

        :param domain: The domain of this GetDogmaEffectsEffectIdModifier.
        :type domain: str
        """

        self._domain = domain

    @property
    def effect_id(self):
        """Gets the effect_id of this GetDogmaEffectsEffectIdModifier.

        effect_id integer

        :return: The effect_id of this GetDogmaEffectsEffectIdModifier.
        :rtype: int
        """
        return self._effect_id

    @effect_id.setter
    def effect_id(self, effect_id):
        """Sets the effect_id of this GetDogmaEffectsEffectIdModifier.

        effect_id integer

        :param effect_id: The effect_id of this GetDogmaEffectsEffectIdModifier.
        :type effect_id: int
        """

        self._effect_id = effect_id

    @property
    def func(self):
        """Gets the func of this GetDogmaEffectsEffectIdModifier.

        func string

        :return: The func of this GetDogmaEffectsEffectIdModifier.
        :rtype: str
        """
        return self._func

    @func.setter
    def func(self, func):
        """Sets the func of this GetDogmaEffectsEffectIdModifier.

        func string

        :param func: The func of this GetDogmaEffectsEffectIdModifier.
        :type func: str
        """
        if func is None:
            raise ValueError("Invalid value for `func`, must not be `None`")

        self._func = func

    @property
    def modified_attribute_id(self):
        """Gets the modified_attribute_id of this GetDogmaEffectsEffectIdModifier.

        modified_attribute_id integer

        :return: The modified_attribute_id of this GetDogmaEffectsEffectIdModifier.
        :rtype: int
        """
        return self._modified_attribute_id

    @modified_attribute_id.setter
    def modified_attribute_id(self, modified_attribute_id):
        """Sets the modified_attribute_id of this GetDogmaEffectsEffectIdModifier.

        modified_attribute_id integer

        :param modified_attribute_id: The modified_attribute_id of this GetDogmaEffectsEffectIdModifier.
        :type modified_attribute_id: int
        """

        self._modified_attribute_id = modified_attribute_id

    @property
    def modifying_attribute_id(self):
        """Gets the modifying_attribute_id of this GetDogmaEffectsEffectIdModifier.

        modifying_attribute_id integer

        :return: The modifying_attribute_id of this GetDogmaEffectsEffectIdModifier.
        :rtype: int
        """
        return self._modifying_attribute_id

    @modifying_attribute_id.setter
    def modifying_attribute_id(self, modifying_attribute_id):
        """Sets the modifying_attribute_id of this GetDogmaEffectsEffectIdModifier.

        modifying_attribute_id integer

        :param modifying_attribute_id: The modifying_attribute_id of this GetDogmaEffectsEffectIdModifier.
        :type modifying_attribute_id: int
        """

        self._modifying_attribute_id = modifying_attribute_id

    @property
    def operator(self):
        """Gets the operator of this GetDogmaEffectsEffectIdModifier.

        operator integer

        :return: The operator of this GetDogmaEffectsEffectIdModifier.
        :rtype: int
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this GetDogmaEffectsEffectIdModifier.

        operator integer

        :param operator: The operator of this GetDogmaEffectsEffectIdModifier.
        :type operator: int
        """

        self._operator = operator
