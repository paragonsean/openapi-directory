# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutCharactersCharacterIdCalendarEventIdResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, response: str=None):
        """PutCharactersCharacterIdCalendarEventIdResponse - a model defined in OpenAPI

        :param response: The response of this PutCharactersCharacterIdCalendarEventIdResponse.
        """
        self.openapi_types = {
            'response': str
        }

        self.attribute_map = {
            'response': 'response'
        }

        self._response = response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutCharactersCharacterIdCalendarEventIdResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The put_characters_character_id_calendar_event_id_response of this PutCharactersCharacterIdCalendarEventIdResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def response(self):
        """Gets the response of this PutCharactersCharacterIdCalendarEventIdResponse.

        response string

        :return: The response of this PutCharactersCharacterIdCalendarEventIdResponse.
        :rtype: str
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this PutCharactersCharacterIdCalendarEventIdResponse.

        response string

        :param response: The response of this PutCharactersCharacterIdCalendarEventIdResponse.
        :type response: str
        """
        allowed_values = ["accepted", "declined", "tentative"]  # noqa: E501
        if response not in allowed_values:
            raise ValueError(
                "Invalid value for `response` ({0}), must be one of {1}"
                .format(response, allowed_values)
            )

        self._response = response
