# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetUniverseSystemJumps200Ok(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ship_jumps: int=None, system_id: int=None):
        """GetUniverseSystemJumps200Ok - a model defined in OpenAPI

        :param ship_jumps: The ship_jumps of this GetUniverseSystemJumps200Ok.
        :param system_id: The system_id of this GetUniverseSystemJumps200Ok.
        """
        self.openapi_types = {
            'ship_jumps': int,
            'system_id': int
        }

        self.attribute_map = {
            'ship_jumps': 'ship_jumps',
            'system_id': 'system_id'
        }

        self._ship_jumps = ship_jumps
        self._system_id = system_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUniverseSystemJumps200Ok':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_universe_system_jumps_200_ok of this GetUniverseSystemJumps200Ok.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ship_jumps(self):
        """Gets the ship_jumps of this GetUniverseSystemJumps200Ok.

        ship_jumps integer

        :return: The ship_jumps of this GetUniverseSystemJumps200Ok.
        :rtype: int
        """
        return self._ship_jumps

    @ship_jumps.setter
    def ship_jumps(self, ship_jumps):
        """Sets the ship_jumps of this GetUniverseSystemJumps200Ok.

        ship_jumps integer

        :param ship_jumps: The ship_jumps of this GetUniverseSystemJumps200Ok.
        :type ship_jumps: int
        """
        if ship_jumps is None:
            raise ValueError("Invalid value for `ship_jumps`, must not be `None`")

        self._ship_jumps = ship_jumps

    @property
    def system_id(self):
        """Gets the system_id of this GetUniverseSystemJumps200Ok.

        system_id integer

        :return: The system_id of this GetUniverseSystemJumps200Ok.
        :rtype: int
        """
        return self._system_id

    @system_id.setter
    def system_id(self, system_id):
        """Sets the system_id of this GetUniverseSystemJumps200Ok.

        system_id integer

        :param system_id: The system_id of this GetUniverseSystemJumps200Ok.
        :type system_id: int
        """
        if system_id is None:
            raise ValueError("Invalid value for `system_id`, must not be `None`")

        self._system_id = system_id
