# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_killmails_killmail_id_killmail_hash_item import GetKillmailsKillmailIdKillmailHashItem
from openapi_server.models.get_killmails_killmail_id_killmail_hash_position import GetKillmailsKillmailIdKillmailHashPosition
from openapi_server import util


class GetKillmailsKillmailIdKillmailHashVictim(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alliance_id: int=None, character_id: int=None, corporation_id: int=None, damage_taken: int=None, faction_id: int=None, items: List[GetKillmailsKillmailIdKillmailHashItem]=None, position: GetKillmailsKillmailIdKillmailHashPosition=None, ship_type_id: int=None):
        """GetKillmailsKillmailIdKillmailHashVictim - a model defined in OpenAPI

        :param alliance_id: The alliance_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :param character_id: The character_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :param corporation_id: The corporation_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :param damage_taken: The damage_taken of this GetKillmailsKillmailIdKillmailHashVictim.
        :param faction_id: The faction_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :param items: The items of this GetKillmailsKillmailIdKillmailHashVictim.
        :param position: The position of this GetKillmailsKillmailIdKillmailHashVictim.
        :param ship_type_id: The ship_type_id of this GetKillmailsKillmailIdKillmailHashVictim.
        """
        self.openapi_types = {
            'alliance_id': int,
            'character_id': int,
            'corporation_id': int,
            'damage_taken': int,
            'faction_id': int,
            'items': List[GetKillmailsKillmailIdKillmailHashItem],
            'position': GetKillmailsKillmailIdKillmailHashPosition,
            'ship_type_id': int
        }

        self.attribute_map = {
            'alliance_id': 'alliance_id',
            'character_id': 'character_id',
            'corporation_id': 'corporation_id',
            'damage_taken': 'damage_taken',
            'faction_id': 'faction_id',
            'items': 'items',
            'position': 'position',
            'ship_type_id': 'ship_type_id'
        }

        self._alliance_id = alliance_id
        self._character_id = character_id
        self._corporation_id = corporation_id
        self._damage_taken = damage_taken
        self._faction_id = faction_id
        self._items = items
        self._position = position
        self._ship_type_id = ship_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetKillmailsKillmailIdKillmailHashVictim':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_killmails_killmail_id_killmail_hash_victim of this GetKillmailsKillmailIdKillmailHashVictim.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alliance_id(self):
        """Gets the alliance_id of this GetKillmailsKillmailIdKillmailHashVictim.

        alliance_id integer

        :return: The alliance_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :rtype: int
        """
        return self._alliance_id

    @alliance_id.setter
    def alliance_id(self, alliance_id):
        """Sets the alliance_id of this GetKillmailsKillmailIdKillmailHashVictim.

        alliance_id integer

        :param alliance_id: The alliance_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :type alliance_id: int
        """

        self._alliance_id = alliance_id

    @property
    def character_id(self):
        """Gets the character_id of this GetKillmailsKillmailIdKillmailHashVictim.

        character_id integer

        :return: The character_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :rtype: int
        """
        return self._character_id

    @character_id.setter
    def character_id(self, character_id):
        """Sets the character_id of this GetKillmailsKillmailIdKillmailHashVictim.

        character_id integer

        :param character_id: The character_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :type character_id: int
        """

        self._character_id = character_id

    @property
    def corporation_id(self):
        """Gets the corporation_id of this GetKillmailsKillmailIdKillmailHashVictim.

        corporation_id integer

        :return: The corporation_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :rtype: int
        """
        return self._corporation_id

    @corporation_id.setter
    def corporation_id(self, corporation_id):
        """Sets the corporation_id of this GetKillmailsKillmailIdKillmailHashVictim.

        corporation_id integer

        :param corporation_id: The corporation_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :type corporation_id: int
        """

        self._corporation_id = corporation_id

    @property
    def damage_taken(self):
        """Gets the damage_taken of this GetKillmailsKillmailIdKillmailHashVictim.

        How much total damage was taken by the victim 

        :return: The damage_taken of this GetKillmailsKillmailIdKillmailHashVictim.
        :rtype: int
        """
        return self._damage_taken

    @damage_taken.setter
    def damage_taken(self, damage_taken):
        """Sets the damage_taken of this GetKillmailsKillmailIdKillmailHashVictim.

        How much total damage was taken by the victim 

        :param damage_taken: The damage_taken of this GetKillmailsKillmailIdKillmailHashVictim.
        :type damage_taken: int
        """
        if damage_taken is None:
            raise ValueError("Invalid value for `damage_taken`, must not be `None`")

        self._damage_taken = damage_taken

    @property
    def faction_id(self):
        """Gets the faction_id of this GetKillmailsKillmailIdKillmailHashVictim.

        faction_id integer

        :return: The faction_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :rtype: int
        """
        return self._faction_id

    @faction_id.setter
    def faction_id(self, faction_id):
        """Sets the faction_id of this GetKillmailsKillmailIdKillmailHashVictim.

        faction_id integer

        :param faction_id: The faction_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :type faction_id: int
        """

        self._faction_id = faction_id

    @property
    def items(self):
        """Gets the items of this GetKillmailsKillmailIdKillmailHashVictim.

        items array

        :return: The items of this GetKillmailsKillmailIdKillmailHashVictim.
        :rtype: List[GetKillmailsKillmailIdKillmailHashItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this GetKillmailsKillmailIdKillmailHashVictim.

        items array

        :param items: The items of this GetKillmailsKillmailIdKillmailHashVictim.
        :type items: List[GetKillmailsKillmailIdKillmailHashItem]
        """
        if items is not None and len(items) > 10000:
            raise ValueError("Invalid value for `items`, number of items must be less than or equal to `10000`")

        self._items = items

    @property
    def position(self):
        """Gets the position of this GetKillmailsKillmailIdKillmailHashVictim.


        :return: The position of this GetKillmailsKillmailIdKillmailHashVictim.
        :rtype: GetKillmailsKillmailIdKillmailHashPosition
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this GetKillmailsKillmailIdKillmailHashVictim.


        :param position: The position of this GetKillmailsKillmailIdKillmailHashVictim.
        :type position: GetKillmailsKillmailIdKillmailHashPosition
        """

        self._position = position

    @property
    def ship_type_id(self):
        """Gets the ship_type_id of this GetKillmailsKillmailIdKillmailHashVictim.

        The ship that the victim was piloting and was destroyed 

        :return: The ship_type_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :rtype: int
        """
        return self._ship_type_id

    @ship_type_id.setter
    def ship_type_id(self, ship_type_id):
        """Sets the ship_type_id of this GetKillmailsKillmailIdKillmailHashVictim.

        The ship that the victim was piloting and was destroyed 

        :param ship_type_id: The ship_type_id of this GetKillmailsKillmailIdKillmailHashVictim.
        :type ship_type_id: int
        """
        if ship_type_id is None:
            raise ValueError("Invalid value for `ship_type_id`, must not be `None`")

        self._ship_type_id = ship_type_id
