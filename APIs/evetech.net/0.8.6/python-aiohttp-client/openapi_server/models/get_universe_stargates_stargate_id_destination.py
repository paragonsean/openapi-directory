# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetUniverseStargatesStargateIdDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stargate_id: int=None, system_id: int=None):
        """GetUniverseStargatesStargateIdDestination - a model defined in OpenAPI

        :param stargate_id: The stargate_id of this GetUniverseStargatesStargateIdDestination.
        :param system_id: The system_id of this GetUniverseStargatesStargateIdDestination.
        """
        self.openapi_types = {
            'stargate_id': int,
            'system_id': int
        }

        self.attribute_map = {
            'stargate_id': 'stargate_id',
            'system_id': 'system_id'
        }

        self._stargate_id = stargate_id
        self._system_id = system_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUniverseStargatesStargateIdDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_universe_stargates_stargate_id_destination of this GetUniverseStargatesStargateIdDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stargate_id(self):
        """Gets the stargate_id of this GetUniverseStargatesStargateIdDestination.

        The stargate this stargate connects to

        :return: The stargate_id of this GetUniverseStargatesStargateIdDestination.
        :rtype: int
        """
        return self._stargate_id

    @stargate_id.setter
    def stargate_id(self, stargate_id):
        """Sets the stargate_id of this GetUniverseStargatesStargateIdDestination.

        The stargate this stargate connects to

        :param stargate_id: The stargate_id of this GetUniverseStargatesStargateIdDestination.
        :type stargate_id: int
        """
        if stargate_id is None:
            raise ValueError("Invalid value for `stargate_id`, must not be `None`")

        self._stargate_id = stargate_id

    @property
    def system_id(self):
        """Gets the system_id of this GetUniverseStargatesStargateIdDestination.

        The solar system this stargate connects to

        :return: The system_id of this GetUniverseStargatesStargateIdDestination.
        :rtype: int
        """
        return self._system_id

    @system_id.setter
    def system_id(self, system_id):
        """Sets the system_id of this GetUniverseStargatesStargateIdDestination.

        The solar system this stargate connects to

        :param system_id: The system_id of this GetUniverseStargatesStargateIdDestination.
        :type system_id: int
        """
        if system_id is None:
            raise ValueError("Invalid value for `system_id`, must not be `None`")

        self._system_id = system_id
