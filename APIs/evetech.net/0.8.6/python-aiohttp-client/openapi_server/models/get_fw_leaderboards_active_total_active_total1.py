# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetFwLeaderboardsActiveTotalActiveTotal1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: int=None, faction_id: int=None):
        """GetFwLeaderboardsActiveTotalActiveTotal1 - a model defined in OpenAPI

        :param amount: The amount of this GetFwLeaderboardsActiveTotalActiveTotal1.
        :param faction_id: The faction_id of this GetFwLeaderboardsActiveTotalActiveTotal1.
        """
        self.openapi_types = {
            'amount': int,
            'faction_id': int
        }

        self.attribute_map = {
            'amount': 'amount',
            'faction_id': 'faction_id'
        }

        self._amount = amount
        self._faction_id = faction_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetFwLeaderboardsActiveTotalActiveTotal1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_fw_leaderboards_active_total_active_total_1 of this GetFwLeaderboardsActiveTotalActiveTotal1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this GetFwLeaderboardsActiveTotalActiveTotal1.

        Amount of victory points

        :return: The amount of this GetFwLeaderboardsActiveTotalActiveTotal1.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this GetFwLeaderboardsActiveTotalActiveTotal1.

        Amount of victory points

        :param amount: The amount of this GetFwLeaderboardsActiveTotalActiveTotal1.
        :type amount: int
        """

        self._amount = amount

    @property
    def faction_id(self):
        """Gets the faction_id of this GetFwLeaderboardsActiveTotalActiveTotal1.

        faction_id integer

        :return: The faction_id of this GetFwLeaderboardsActiveTotalActiveTotal1.
        :rtype: int
        """
        return self._faction_id

    @faction_id.setter
    def faction_id(self, faction_id):
        """Sets the faction_id of this GetFwLeaderboardsActiveTotalActiveTotal1.

        faction_id integer

        :param faction_id: The faction_id of this GetFwLeaderboardsActiveTotalActiveTotal1.
        :type faction_id: int
        """

        self._faction_id = faction_id
