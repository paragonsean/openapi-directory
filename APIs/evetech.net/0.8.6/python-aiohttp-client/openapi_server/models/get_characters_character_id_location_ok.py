# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCharactersCharacterIdLocationOk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, solar_system_id: int=None, station_id: int=None, structure_id: int=None):
        """GetCharactersCharacterIdLocationOk - a model defined in OpenAPI

        :param solar_system_id: The solar_system_id of this GetCharactersCharacterIdLocationOk.
        :param station_id: The station_id of this GetCharactersCharacterIdLocationOk.
        :param structure_id: The structure_id of this GetCharactersCharacterIdLocationOk.
        """
        self.openapi_types = {
            'solar_system_id': int,
            'station_id': int,
            'structure_id': int
        }

        self.attribute_map = {
            'solar_system_id': 'solar_system_id',
            'station_id': 'station_id',
            'structure_id': 'structure_id'
        }

        self._solar_system_id = solar_system_id
        self._station_id = station_id
        self._structure_id = structure_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCharactersCharacterIdLocationOk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_characters_character_id_location_ok of this GetCharactersCharacterIdLocationOk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def solar_system_id(self):
        """Gets the solar_system_id of this GetCharactersCharacterIdLocationOk.

        solar_system_id integer

        :return: The solar_system_id of this GetCharactersCharacterIdLocationOk.
        :rtype: int
        """
        return self._solar_system_id

    @solar_system_id.setter
    def solar_system_id(self, solar_system_id):
        """Sets the solar_system_id of this GetCharactersCharacterIdLocationOk.

        solar_system_id integer

        :param solar_system_id: The solar_system_id of this GetCharactersCharacterIdLocationOk.
        :type solar_system_id: int
        """
        if solar_system_id is None:
            raise ValueError("Invalid value for `solar_system_id`, must not be `None`")

        self._solar_system_id = solar_system_id

    @property
    def station_id(self):
        """Gets the station_id of this GetCharactersCharacterIdLocationOk.

        station_id integer

        :return: The station_id of this GetCharactersCharacterIdLocationOk.
        :rtype: int
        """
        return self._station_id

    @station_id.setter
    def station_id(self, station_id):
        """Sets the station_id of this GetCharactersCharacterIdLocationOk.

        station_id integer

        :param station_id: The station_id of this GetCharactersCharacterIdLocationOk.
        :type station_id: int
        """

        self._station_id = station_id

    @property
    def structure_id(self):
        """Gets the structure_id of this GetCharactersCharacterIdLocationOk.

        structure_id integer

        :return: The structure_id of this GetCharactersCharacterIdLocationOk.
        :rtype: int
        """
        return self._structure_id

    @structure_id.setter
    def structure_id(self, structure_id):
        """Sets the structure_id of this GetCharactersCharacterIdLocationOk.

        structure_id integer

        :param structure_id: The structure_id of this GetCharactersCharacterIdLocationOk.
        :type structure_id: int
        """

        self._structure_id = structure_id
