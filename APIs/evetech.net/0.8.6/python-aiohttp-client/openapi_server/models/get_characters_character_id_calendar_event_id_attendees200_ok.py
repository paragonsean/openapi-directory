# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCharactersCharacterIdCalendarEventIdAttendees200Ok(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, character_id: int=None, event_response: str=None):
        """GetCharactersCharacterIdCalendarEventIdAttendees200Ok - a model defined in OpenAPI

        :param character_id: The character_id of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.
        :param event_response: The event_response of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.
        """
        self.openapi_types = {
            'character_id': int,
            'event_response': str
        }

        self.attribute_map = {
            'character_id': 'character_id',
            'event_response': 'event_response'
        }

        self._character_id = character_id
        self._event_response = event_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCharactersCharacterIdCalendarEventIdAttendees200Ok':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_characters_character_id_calendar_event_id_attendees_200_ok of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def character_id(self):
        """Gets the character_id of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.

        character_id integer

        :return: The character_id of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.
        :rtype: int
        """
        return self._character_id

    @character_id.setter
    def character_id(self, character_id):
        """Sets the character_id of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.

        character_id integer

        :param character_id: The character_id of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.
        :type character_id: int
        """

        self._character_id = character_id

    @property
    def event_response(self):
        """Gets the event_response of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.

        event_response string

        :return: The event_response of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.
        :rtype: str
        """
        return self._event_response

    @event_response.setter
    def event_response(self, event_response):
        """Sets the event_response of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.

        event_response string

        :param event_response: The event_response of this GetCharactersCharacterIdCalendarEventIdAttendees200Ok.
        :type event_response: str
        """
        allowed_values = ["declined", "not_responded", "accepted", "tentative"]  # noqa: E501
        if event_response not in allowed_values:
            raise ValueError(
                "Invalid value for `event_response` ({0}), must be one of {1}"
                .format(event_response, allowed_values)
            )

        self._event_response = event_response
