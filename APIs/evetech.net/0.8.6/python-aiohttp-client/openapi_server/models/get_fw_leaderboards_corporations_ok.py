# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_fw_leaderboards_corporations_kills import GetFwLeaderboardsCorporationsKills
from openapi_server.models.get_fw_leaderboards_corporations_victory_points import GetFwLeaderboardsCorporationsVictoryPoints
from openapi_server import util


class GetFwLeaderboardsCorporationsOk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kills: GetFwLeaderboardsCorporationsKills=None, victory_points: GetFwLeaderboardsCorporationsVictoryPoints=None):
        """GetFwLeaderboardsCorporationsOk - a model defined in OpenAPI

        :param kills: The kills of this GetFwLeaderboardsCorporationsOk.
        :param victory_points: The victory_points of this GetFwLeaderboardsCorporationsOk.
        """
        self.openapi_types = {
            'kills': GetFwLeaderboardsCorporationsKills,
            'victory_points': GetFwLeaderboardsCorporationsVictoryPoints
        }

        self.attribute_map = {
            'kills': 'kills',
            'victory_points': 'victory_points'
        }

        self._kills = kills
        self._victory_points = victory_points

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetFwLeaderboardsCorporationsOk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_fw_leaderboards_corporations_ok of this GetFwLeaderboardsCorporationsOk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kills(self):
        """Gets the kills of this GetFwLeaderboardsCorporationsOk.


        :return: The kills of this GetFwLeaderboardsCorporationsOk.
        :rtype: GetFwLeaderboardsCorporationsKills
        """
        return self._kills

    @kills.setter
    def kills(self, kills):
        """Sets the kills of this GetFwLeaderboardsCorporationsOk.


        :param kills: The kills of this GetFwLeaderboardsCorporationsOk.
        :type kills: GetFwLeaderboardsCorporationsKills
        """
        if kills is None:
            raise ValueError("Invalid value for `kills`, must not be `None`")

        self._kills = kills

    @property
    def victory_points(self):
        """Gets the victory_points of this GetFwLeaderboardsCorporationsOk.


        :return: The victory_points of this GetFwLeaderboardsCorporationsOk.
        :rtype: GetFwLeaderboardsCorporationsVictoryPoints
        """
        return self._victory_points

    @victory_points.setter
    def victory_points(self, victory_points):
        """Sets the victory_points of this GetFwLeaderboardsCorporationsOk.


        :param victory_points: The victory_points of this GetFwLeaderboardsCorporationsOk.
        :type victory_points: GetFwLeaderboardsCorporationsVictoryPoints
        """
        if victory_points is None:
            raise ValueError("Invalid value for `victory_points`, must not be `None`")

        self._victory_points = victory_points
