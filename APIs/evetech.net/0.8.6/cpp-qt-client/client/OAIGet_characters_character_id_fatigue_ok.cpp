/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_fatigue_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_fatigue_ok::OAIGet_characters_character_id_fatigue_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_fatigue_ok::OAIGet_characters_character_id_fatigue_ok() {
    this->initializeModel();
}

OAIGet_characters_character_id_fatigue_ok::~OAIGet_characters_character_id_fatigue_ok() {}

void OAIGet_characters_character_id_fatigue_ok::initializeModel() {

    m_jump_fatigue_expire_date_isSet = false;
    m_jump_fatigue_expire_date_isValid = false;

    m_last_jump_date_isSet = false;
    m_last_jump_date_isValid = false;

    m_last_update_date_isSet = false;
    m_last_update_date_isValid = false;
}

void OAIGet_characters_character_id_fatigue_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_fatigue_ok::fromJsonObject(QJsonObject json) {

    m_jump_fatigue_expire_date_isValid = ::OpenAPI::fromJsonValue(m_jump_fatigue_expire_date, json[QString("jump_fatigue_expire_date")]);
    m_jump_fatigue_expire_date_isSet = !json[QString("jump_fatigue_expire_date")].isNull() && m_jump_fatigue_expire_date_isValid;

    m_last_jump_date_isValid = ::OpenAPI::fromJsonValue(m_last_jump_date, json[QString("last_jump_date")]);
    m_last_jump_date_isSet = !json[QString("last_jump_date")].isNull() && m_last_jump_date_isValid;

    m_last_update_date_isValid = ::OpenAPI::fromJsonValue(m_last_update_date, json[QString("last_update_date")]);
    m_last_update_date_isSet = !json[QString("last_update_date")].isNull() && m_last_update_date_isValid;
}

QString OAIGet_characters_character_id_fatigue_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_fatigue_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_jump_fatigue_expire_date_isSet) {
        obj.insert(QString("jump_fatigue_expire_date"), ::OpenAPI::toJsonValue(m_jump_fatigue_expire_date));
    }
    if (m_last_jump_date_isSet) {
        obj.insert(QString("last_jump_date"), ::OpenAPI::toJsonValue(m_last_jump_date));
    }
    if (m_last_update_date_isSet) {
        obj.insert(QString("last_update_date"), ::OpenAPI::toJsonValue(m_last_update_date));
    }
    return obj;
}

QDateTime OAIGet_characters_character_id_fatigue_ok::getJumpFatigueExpireDate() const {
    return m_jump_fatigue_expire_date;
}
void OAIGet_characters_character_id_fatigue_ok::setJumpFatigueExpireDate(const QDateTime &jump_fatigue_expire_date) {
    m_jump_fatigue_expire_date = jump_fatigue_expire_date;
    m_jump_fatigue_expire_date_isSet = true;
}

bool OAIGet_characters_character_id_fatigue_ok::is_jump_fatigue_expire_date_Set() const{
    return m_jump_fatigue_expire_date_isSet;
}

bool OAIGet_characters_character_id_fatigue_ok::is_jump_fatigue_expire_date_Valid() const{
    return m_jump_fatigue_expire_date_isValid;
}

QDateTime OAIGet_characters_character_id_fatigue_ok::getLastJumpDate() const {
    return m_last_jump_date;
}
void OAIGet_characters_character_id_fatigue_ok::setLastJumpDate(const QDateTime &last_jump_date) {
    m_last_jump_date = last_jump_date;
    m_last_jump_date_isSet = true;
}

bool OAIGet_characters_character_id_fatigue_ok::is_last_jump_date_Set() const{
    return m_last_jump_date_isSet;
}

bool OAIGet_characters_character_id_fatigue_ok::is_last_jump_date_Valid() const{
    return m_last_jump_date_isValid;
}

QDateTime OAIGet_characters_character_id_fatigue_ok::getLastUpdateDate() const {
    return m_last_update_date;
}
void OAIGet_characters_character_id_fatigue_ok::setLastUpdateDate(const QDateTime &last_update_date) {
    m_last_update_date = last_update_date;
    m_last_update_date_isSet = true;
}

bool OAIGet_characters_character_id_fatigue_ok::is_last_update_date_Set() const{
    return m_last_update_date_isSet;
}

bool OAIGet_characters_character_id_fatigue_ok::is_last_update_date_Valid() const{
    return m_last_update_date_isValid;
}

bool OAIGet_characters_character_id_fatigue_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_jump_fatigue_expire_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_jump_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_fatigue_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
