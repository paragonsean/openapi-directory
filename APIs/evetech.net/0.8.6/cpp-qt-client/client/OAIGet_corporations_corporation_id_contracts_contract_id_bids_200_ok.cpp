/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok() {
    this->initializeModel();
}

OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::~OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok() {}

void OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_bid_id_isSet = false;
    m_bid_id_isValid = false;

    m_bidder_id_isSet = false;
    m_bidder_id_isValid = false;

    m_date_bid_isSet = false;
    m_date_bid_isValid = false;
}

void OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_bid_id_isValid = ::OpenAPI::fromJsonValue(m_bid_id, json[QString("bid_id")]);
    m_bid_id_isSet = !json[QString("bid_id")].isNull() && m_bid_id_isValid;

    m_bidder_id_isValid = ::OpenAPI::fromJsonValue(m_bidder_id, json[QString("bidder_id")]);
    m_bidder_id_isSet = !json[QString("bidder_id")].isNull() && m_bidder_id_isValid;

    m_date_bid_isValid = ::OpenAPI::fromJsonValue(m_date_bid, json[QString("date_bid")]);
    m_date_bid_isSet = !json[QString("date_bid")].isNull() && m_date_bid_isValid;
}

QString OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_bid_id_isSet) {
        obj.insert(QString("bid_id"), ::OpenAPI::toJsonValue(m_bid_id));
    }
    if (m_bidder_id_isSet) {
        obj.insert(QString("bidder_id"), ::OpenAPI::toJsonValue(m_bidder_id));
    }
    if (m_date_bid_isSet) {
        obj.insert(QString("date_bid"), ::OpenAPI::toJsonValue(m_date_bid));
    }
    return obj;
}

float OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::getAmount() const {
    return m_amount;
}
void OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::setAmount(const float &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::is_amount_Valid() const{
    return m_amount_isValid;
}

qint32 OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::getBidId() const {
    return m_bid_id;
}
void OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::setBidId(const qint32 &bid_id) {
    m_bid_id = bid_id;
    m_bid_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::is_bid_id_Set() const{
    return m_bid_id_isSet;
}

bool OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::is_bid_id_Valid() const{
    return m_bid_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::getBidderId() const {
    return m_bidder_id;
}
void OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::setBidderId(const qint32 &bidder_id) {
    m_bidder_id = bidder_id;
    m_bidder_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::is_bidder_id_Set() const{
    return m_bidder_id_isSet;
}

bool OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::is_bidder_id_Valid() const{
    return m_bidder_id_isValid;
}

QDateTime OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::getDateBid() const {
    return m_date_bid;
}
void OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::setDateBid(const QDateTime &date_bid) {
    m_date_bid = date_bid;
    m_date_bid_isSet = true;
}

bool OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::is_date_bid_Set() const{
    return m_date_bid_isSet;
}

bool OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::is_date_bid_Valid() const{
    return m_date_bid_isValid;
}

bool OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bid_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bidder_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_bid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_corporations_corporation_id_contracts_contract_id_bids_200_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_bid_id_isValid && m_bidder_id_isValid && m_date_bid_isValid && true;
}

} // namespace OpenAPI
