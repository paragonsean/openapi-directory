/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPut_fleets_fleet_id_new_settings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPut_fleets_fleet_id_new_settings::OAIPut_fleets_fleet_id_new_settings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPut_fleets_fleet_id_new_settings::OAIPut_fleets_fleet_id_new_settings() {
    this->initializeModel();
}

OAIPut_fleets_fleet_id_new_settings::~OAIPut_fleets_fleet_id_new_settings() {}

void OAIPut_fleets_fleet_id_new_settings::initializeModel() {

    m_is_free_move_isSet = false;
    m_is_free_move_isValid = false;

    m_motd_isSet = false;
    m_motd_isValid = false;
}

void OAIPut_fleets_fleet_id_new_settings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPut_fleets_fleet_id_new_settings::fromJsonObject(QJsonObject json) {

    m_is_free_move_isValid = ::OpenAPI::fromJsonValue(m_is_free_move, json[QString("is_free_move")]);
    m_is_free_move_isSet = !json[QString("is_free_move")].isNull() && m_is_free_move_isValid;

    m_motd_isValid = ::OpenAPI::fromJsonValue(m_motd, json[QString("motd")]);
    m_motd_isSet = !json[QString("motd")].isNull() && m_motd_isValid;
}

QString OAIPut_fleets_fleet_id_new_settings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPut_fleets_fleet_id_new_settings::asJsonObject() const {
    QJsonObject obj;
    if (m_is_free_move_isSet) {
        obj.insert(QString("is_free_move"), ::OpenAPI::toJsonValue(m_is_free_move));
    }
    if (m_motd_isSet) {
        obj.insert(QString("motd"), ::OpenAPI::toJsonValue(m_motd));
    }
    return obj;
}

bool OAIPut_fleets_fleet_id_new_settings::isIsFreeMove() const {
    return m_is_free_move;
}
void OAIPut_fleets_fleet_id_new_settings::setIsFreeMove(const bool &is_free_move) {
    m_is_free_move = is_free_move;
    m_is_free_move_isSet = true;
}

bool OAIPut_fleets_fleet_id_new_settings::is_is_free_move_Set() const{
    return m_is_free_move_isSet;
}

bool OAIPut_fleets_fleet_id_new_settings::is_is_free_move_Valid() const{
    return m_is_free_move_isValid;
}

QString OAIPut_fleets_fleet_id_new_settings::getMotd() const {
    return m_motd;
}
void OAIPut_fleets_fleet_id_new_settings::setMotd(const QString &motd) {
    m_motd = motd;
    m_motd_isSet = true;
}

bool OAIPut_fleets_fleet_id_new_settings::is_motd_Set() const{
    return m_motd_isSet;
}

bool OAIPut_fleets_fleet_id_new_settings::is_motd_Valid() const{
    return m_motd_isValid;
}

bool OAIPut_fleets_fleet_id_new_settings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_free_move_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_motd_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPut_fleets_fleet_id_new_settings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
