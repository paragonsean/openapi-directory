/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_corporations_corporation_id_starbases_200_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_corporations_corporation_id_starbases_200_ok_H
#define OAIGet_corporations_corporation_id_starbases_200_ok_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_corporations_corporation_id_starbases_200_ok : public OAIObject {
public:
    OAIGet_corporations_corporation_id_starbases_200_ok();
    OAIGet_corporations_corporation_id_starbases_200_ok(QString json);
    ~OAIGet_corporations_corporation_id_starbases_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMoonId() const;
    void setMoonId(const qint32 &moon_id);
    bool is_moon_id_Set() const;
    bool is_moon_id_Valid() const;

    QDateTime getOnlinedSince() const;
    void setOnlinedSince(const QDateTime &onlined_since);
    bool is_onlined_since_Set() const;
    bool is_onlined_since_Valid() const;

    QDateTime getReinforcedUntil() const;
    void setReinforcedUntil(const QDateTime &reinforced_until);
    bool is_reinforced_until_Set() const;
    bool is_reinforced_until_Valid() const;

    qint64 getStarbaseId() const;
    void setStarbaseId(const qint64 &starbase_id);
    bool is_starbase_id_Set() const;
    bool is_starbase_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    qint32 getSystemId() const;
    void setSystemId(const qint32 &system_id);
    bool is_system_id_Set() const;
    bool is_system_id_Valid() const;

    qint32 getTypeId() const;
    void setTypeId(const qint32 &type_id);
    bool is_type_id_Set() const;
    bool is_type_id_Valid() const;

    QDateTime getUnanchorAt() const;
    void setUnanchorAt(const QDateTime &unanchor_at);
    bool is_unanchor_at_Set() const;
    bool is_unanchor_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_moon_id;
    bool m_moon_id_isSet;
    bool m_moon_id_isValid;

    QDateTime m_onlined_since;
    bool m_onlined_since_isSet;
    bool m_onlined_since_isValid;

    QDateTime m_reinforced_until;
    bool m_reinforced_until_isSet;
    bool m_reinforced_until_isValid;

    qint64 m_starbase_id;
    bool m_starbase_id_isSet;
    bool m_starbase_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    qint32 m_system_id;
    bool m_system_id_isSet;
    bool m_system_id_isValid;

    qint32 m_type_id;
    bool m_type_id_isSet;
    bool m_type_id_isValid;

    QDateTime m_unanchor_at;
    bool m_unanchor_at_isSet;
    bool m_unanchor_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_corporations_corporation_id_starbases_200_ok)

#endif // OAIGet_corporations_corporation_id_starbases_200_ok_H
