/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_characters_character_id_stats_travel.h
 *
 * travel object
 */

#ifndef OAIGet_characters_character_id_stats_travel_H
#define OAIGet_characters_character_id_stats_travel_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_characters_character_id_stats_travel : public OAIObject {
public:
    OAIGet_characters_character_id_stats_travel();
    OAIGet_characters_character_id_stats_travel(QString json);
    ~OAIGet_characters_character_id_stats_travel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAccelerationGateActivations() const;
    void setAccelerationGateActivations(const qint64 &acceleration_gate_activations);
    bool is_acceleration_gate_activations_Set() const;
    bool is_acceleration_gate_activations_Valid() const;

    qint64 getAlignTo() const;
    void setAlignTo(const qint64 &align_to);
    bool is_align_to_Set() const;
    bool is_align_to_Valid() const;

    qint64 getDistanceWarpedHighSec() const;
    void setDistanceWarpedHighSec(const qint64 &distance_warped_high_sec);
    bool is_distance_warped_high_sec_Set() const;
    bool is_distance_warped_high_sec_Valid() const;

    qint64 getDistanceWarpedLowSec() const;
    void setDistanceWarpedLowSec(const qint64 &distance_warped_low_sec);
    bool is_distance_warped_low_sec_Set() const;
    bool is_distance_warped_low_sec_Valid() const;

    qint64 getDistanceWarpedNullSec() const;
    void setDistanceWarpedNullSec(const qint64 &distance_warped_null_sec);
    bool is_distance_warped_null_sec_Set() const;
    bool is_distance_warped_null_sec_Valid() const;

    qint64 getDistanceWarpedWormhole() const;
    void setDistanceWarpedWormhole(const qint64 &distance_warped_wormhole);
    bool is_distance_warped_wormhole_Set() const;
    bool is_distance_warped_wormhole_Valid() const;

    qint64 getDocksHighSec() const;
    void setDocksHighSec(const qint64 &docks_high_sec);
    bool is_docks_high_sec_Set() const;
    bool is_docks_high_sec_Valid() const;

    qint64 getDocksLowSec() const;
    void setDocksLowSec(const qint64 &docks_low_sec);
    bool is_docks_low_sec_Set() const;
    bool is_docks_low_sec_Valid() const;

    qint64 getDocksNullSec() const;
    void setDocksNullSec(const qint64 &docks_null_sec);
    bool is_docks_null_sec_Set() const;
    bool is_docks_null_sec_Valid() const;

    qint64 getJumpsStargateHighSec() const;
    void setJumpsStargateHighSec(const qint64 &jumps_stargate_high_sec);
    bool is_jumps_stargate_high_sec_Set() const;
    bool is_jumps_stargate_high_sec_Valid() const;

    qint64 getJumpsStargateLowSec() const;
    void setJumpsStargateLowSec(const qint64 &jumps_stargate_low_sec);
    bool is_jumps_stargate_low_sec_Set() const;
    bool is_jumps_stargate_low_sec_Valid() const;

    qint64 getJumpsStargateNullSec() const;
    void setJumpsStargateNullSec(const qint64 &jumps_stargate_null_sec);
    bool is_jumps_stargate_null_sec_Set() const;
    bool is_jumps_stargate_null_sec_Valid() const;

    qint64 getJumpsWormhole() const;
    void setJumpsWormhole(const qint64 &jumps_wormhole);
    bool is_jumps_wormhole_Set() const;
    bool is_jumps_wormhole_Valid() const;

    qint64 getWarpsHighSec() const;
    void setWarpsHighSec(const qint64 &warps_high_sec);
    bool is_warps_high_sec_Set() const;
    bool is_warps_high_sec_Valid() const;

    qint64 getWarpsLowSec() const;
    void setWarpsLowSec(const qint64 &warps_low_sec);
    bool is_warps_low_sec_Set() const;
    bool is_warps_low_sec_Valid() const;

    qint64 getWarpsNullSec() const;
    void setWarpsNullSec(const qint64 &warps_null_sec);
    bool is_warps_null_sec_Set() const;
    bool is_warps_null_sec_Valid() const;

    qint64 getWarpsToBookmark() const;
    void setWarpsToBookmark(const qint64 &warps_to_bookmark);
    bool is_warps_to_bookmark_Set() const;
    bool is_warps_to_bookmark_Valid() const;

    qint64 getWarpsToCelestial() const;
    void setWarpsToCelestial(const qint64 &warps_to_celestial);
    bool is_warps_to_celestial_Set() const;
    bool is_warps_to_celestial_Valid() const;

    qint64 getWarpsToFleetMember() const;
    void setWarpsToFleetMember(const qint64 &warps_to_fleet_member);
    bool is_warps_to_fleet_member_Set() const;
    bool is_warps_to_fleet_member_Valid() const;

    qint64 getWarpsToScanResult() const;
    void setWarpsToScanResult(const qint64 &warps_to_scan_result);
    bool is_warps_to_scan_result_Set() const;
    bool is_warps_to_scan_result_Valid() const;

    qint64 getWarpsWormhole() const;
    void setWarpsWormhole(const qint64 &warps_wormhole);
    bool is_warps_wormhole_Set() const;
    bool is_warps_wormhole_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_acceleration_gate_activations;
    bool m_acceleration_gate_activations_isSet;
    bool m_acceleration_gate_activations_isValid;

    qint64 m_align_to;
    bool m_align_to_isSet;
    bool m_align_to_isValid;

    qint64 m_distance_warped_high_sec;
    bool m_distance_warped_high_sec_isSet;
    bool m_distance_warped_high_sec_isValid;

    qint64 m_distance_warped_low_sec;
    bool m_distance_warped_low_sec_isSet;
    bool m_distance_warped_low_sec_isValid;

    qint64 m_distance_warped_null_sec;
    bool m_distance_warped_null_sec_isSet;
    bool m_distance_warped_null_sec_isValid;

    qint64 m_distance_warped_wormhole;
    bool m_distance_warped_wormhole_isSet;
    bool m_distance_warped_wormhole_isValid;

    qint64 m_docks_high_sec;
    bool m_docks_high_sec_isSet;
    bool m_docks_high_sec_isValid;

    qint64 m_docks_low_sec;
    bool m_docks_low_sec_isSet;
    bool m_docks_low_sec_isValid;

    qint64 m_docks_null_sec;
    bool m_docks_null_sec_isSet;
    bool m_docks_null_sec_isValid;

    qint64 m_jumps_stargate_high_sec;
    bool m_jumps_stargate_high_sec_isSet;
    bool m_jumps_stargate_high_sec_isValid;

    qint64 m_jumps_stargate_low_sec;
    bool m_jumps_stargate_low_sec_isSet;
    bool m_jumps_stargate_low_sec_isValid;

    qint64 m_jumps_stargate_null_sec;
    bool m_jumps_stargate_null_sec_isSet;
    bool m_jumps_stargate_null_sec_isValid;

    qint64 m_jumps_wormhole;
    bool m_jumps_wormhole_isSet;
    bool m_jumps_wormhole_isValid;

    qint64 m_warps_high_sec;
    bool m_warps_high_sec_isSet;
    bool m_warps_high_sec_isValid;

    qint64 m_warps_low_sec;
    bool m_warps_low_sec_isSet;
    bool m_warps_low_sec_isValid;

    qint64 m_warps_null_sec;
    bool m_warps_null_sec_isSet;
    bool m_warps_null_sec_isValid;

    qint64 m_warps_to_bookmark;
    bool m_warps_to_bookmark_isSet;
    bool m_warps_to_bookmark_isValid;

    qint64 m_warps_to_celestial;
    bool m_warps_to_celestial_isSet;
    bool m_warps_to_celestial_isValid;

    qint64 m_warps_to_fleet_member;
    bool m_warps_to_fleet_member_isSet;
    bool m_warps_to_fleet_member_isValid;

    qint64 m_warps_to_scan_result;
    bool m_warps_to_scan_result_isSet;
    bool m_warps_to_scan_result_isValid;

    qint64 m_warps_wormhole;
    bool m_warps_wormhole_isSet;
    bool m_warps_wormhole_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_characters_character_id_stats_travel)

#endif // OAIGet_characters_character_id_stats_travel_H
