/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_location_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_location_ok::OAIGet_characters_character_id_location_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_location_ok::OAIGet_characters_character_id_location_ok() {
    this->initializeModel();
}

OAIGet_characters_character_id_location_ok::~OAIGet_characters_character_id_location_ok() {}

void OAIGet_characters_character_id_location_ok::initializeModel() {

    m_solar_system_id_isSet = false;
    m_solar_system_id_isValid = false;

    m_station_id_isSet = false;
    m_station_id_isValid = false;

    m_structure_id_isSet = false;
    m_structure_id_isValid = false;
}

void OAIGet_characters_character_id_location_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_location_ok::fromJsonObject(QJsonObject json) {

    m_solar_system_id_isValid = ::OpenAPI::fromJsonValue(m_solar_system_id, json[QString("solar_system_id")]);
    m_solar_system_id_isSet = !json[QString("solar_system_id")].isNull() && m_solar_system_id_isValid;

    m_station_id_isValid = ::OpenAPI::fromJsonValue(m_station_id, json[QString("station_id")]);
    m_station_id_isSet = !json[QString("station_id")].isNull() && m_station_id_isValid;

    m_structure_id_isValid = ::OpenAPI::fromJsonValue(m_structure_id, json[QString("structure_id")]);
    m_structure_id_isSet = !json[QString("structure_id")].isNull() && m_structure_id_isValid;
}

QString OAIGet_characters_character_id_location_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_location_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_solar_system_id_isSet) {
        obj.insert(QString("solar_system_id"), ::OpenAPI::toJsonValue(m_solar_system_id));
    }
    if (m_station_id_isSet) {
        obj.insert(QString("station_id"), ::OpenAPI::toJsonValue(m_station_id));
    }
    if (m_structure_id_isSet) {
        obj.insert(QString("structure_id"), ::OpenAPI::toJsonValue(m_structure_id));
    }
    return obj;
}

qint32 OAIGet_characters_character_id_location_ok::getSolarSystemId() const {
    return m_solar_system_id;
}
void OAIGet_characters_character_id_location_ok::setSolarSystemId(const qint32 &solar_system_id) {
    m_solar_system_id = solar_system_id;
    m_solar_system_id_isSet = true;
}

bool OAIGet_characters_character_id_location_ok::is_solar_system_id_Set() const{
    return m_solar_system_id_isSet;
}

bool OAIGet_characters_character_id_location_ok::is_solar_system_id_Valid() const{
    return m_solar_system_id_isValid;
}

qint32 OAIGet_characters_character_id_location_ok::getStationId() const {
    return m_station_id;
}
void OAIGet_characters_character_id_location_ok::setStationId(const qint32 &station_id) {
    m_station_id = station_id;
    m_station_id_isSet = true;
}

bool OAIGet_characters_character_id_location_ok::is_station_id_Set() const{
    return m_station_id_isSet;
}

bool OAIGet_characters_character_id_location_ok::is_station_id_Valid() const{
    return m_station_id_isValid;
}

qint64 OAIGet_characters_character_id_location_ok::getStructureId() const {
    return m_structure_id;
}
void OAIGet_characters_character_id_location_ok::setStructureId(const qint64 &structure_id) {
    m_structure_id = structure_id;
    m_structure_id_isSet = true;
}

bool OAIGet_characters_character_id_location_ok::is_structure_id_Set() const{
    return m_structure_id_isSet;
}

bool OAIGet_characters_character_id_location_ok::is_structure_id_Valid() const{
    return m_structure_id_isValid;
}

bool OAIGet_characters_character_id_location_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_solar_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_station_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_structure_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_location_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_solar_system_id_isValid && true;
}

} // namespace OpenAPI
