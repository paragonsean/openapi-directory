/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_skillqueue_200_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_skillqueue_200_ok::OAIGet_characters_character_id_skillqueue_200_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_skillqueue_200_ok::OAIGet_characters_character_id_skillqueue_200_ok() {
    this->initializeModel();
}

OAIGet_characters_character_id_skillqueue_200_ok::~OAIGet_characters_character_id_skillqueue_200_ok() {}

void OAIGet_characters_character_id_skillqueue_200_ok::initializeModel() {

    m_finish_date_isSet = false;
    m_finish_date_isValid = false;

    m_finished_level_isSet = false;
    m_finished_level_isValid = false;

    m_level_end_sp_isSet = false;
    m_level_end_sp_isValid = false;

    m_level_start_sp_isSet = false;
    m_level_start_sp_isValid = false;

    m_queue_position_isSet = false;
    m_queue_position_isValid = false;

    m_skill_id_isSet = false;
    m_skill_id_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_training_start_sp_isSet = false;
    m_training_start_sp_isValid = false;
}

void OAIGet_characters_character_id_skillqueue_200_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_skillqueue_200_ok::fromJsonObject(QJsonObject json) {

    m_finish_date_isValid = ::OpenAPI::fromJsonValue(m_finish_date, json[QString("finish_date")]);
    m_finish_date_isSet = !json[QString("finish_date")].isNull() && m_finish_date_isValid;

    m_finished_level_isValid = ::OpenAPI::fromJsonValue(m_finished_level, json[QString("finished_level")]);
    m_finished_level_isSet = !json[QString("finished_level")].isNull() && m_finished_level_isValid;

    m_level_end_sp_isValid = ::OpenAPI::fromJsonValue(m_level_end_sp, json[QString("level_end_sp")]);
    m_level_end_sp_isSet = !json[QString("level_end_sp")].isNull() && m_level_end_sp_isValid;

    m_level_start_sp_isValid = ::OpenAPI::fromJsonValue(m_level_start_sp, json[QString("level_start_sp")]);
    m_level_start_sp_isSet = !json[QString("level_start_sp")].isNull() && m_level_start_sp_isValid;

    m_queue_position_isValid = ::OpenAPI::fromJsonValue(m_queue_position, json[QString("queue_position")]);
    m_queue_position_isSet = !json[QString("queue_position")].isNull() && m_queue_position_isValid;

    m_skill_id_isValid = ::OpenAPI::fromJsonValue(m_skill_id, json[QString("skill_id")]);
    m_skill_id_isSet = !json[QString("skill_id")].isNull() && m_skill_id_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("start_date")]);
    m_start_date_isSet = !json[QString("start_date")].isNull() && m_start_date_isValid;

    m_training_start_sp_isValid = ::OpenAPI::fromJsonValue(m_training_start_sp, json[QString("training_start_sp")]);
    m_training_start_sp_isSet = !json[QString("training_start_sp")].isNull() && m_training_start_sp_isValid;
}

QString OAIGet_characters_character_id_skillqueue_200_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_skillqueue_200_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_finish_date_isSet) {
        obj.insert(QString("finish_date"), ::OpenAPI::toJsonValue(m_finish_date));
    }
    if (m_finished_level_isSet) {
        obj.insert(QString("finished_level"), ::OpenAPI::toJsonValue(m_finished_level));
    }
    if (m_level_end_sp_isSet) {
        obj.insert(QString("level_end_sp"), ::OpenAPI::toJsonValue(m_level_end_sp));
    }
    if (m_level_start_sp_isSet) {
        obj.insert(QString("level_start_sp"), ::OpenAPI::toJsonValue(m_level_start_sp));
    }
    if (m_queue_position_isSet) {
        obj.insert(QString("queue_position"), ::OpenAPI::toJsonValue(m_queue_position));
    }
    if (m_skill_id_isSet) {
        obj.insert(QString("skill_id"), ::OpenAPI::toJsonValue(m_skill_id));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("start_date"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_training_start_sp_isSet) {
        obj.insert(QString("training_start_sp"), ::OpenAPI::toJsonValue(m_training_start_sp));
    }
    return obj;
}

QDateTime OAIGet_characters_character_id_skillqueue_200_ok::getFinishDate() const {
    return m_finish_date;
}
void OAIGet_characters_character_id_skillqueue_200_ok::setFinishDate(const QDateTime &finish_date) {
    m_finish_date = finish_date;
    m_finish_date_isSet = true;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_finish_date_Set() const{
    return m_finish_date_isSet;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_finish_date_Valid() const{
    return m_finish_date_isValid;
}

qint32 OAIGet_characters_character_id_skillqueue_200_ok::getFinishedLevel() const {
    return m_finished_level;
}
void OAIGet_characters_character_id_skillqueue_200_ok::setFinishedLevel(const qint32 &finished_level) {
    m_finished_level = finished_level;
    m_finished_level_isSet = true;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_finished_level_Set() const{
    return m_finished_level_isSet;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_finished_level_Valid() const{
    return m_finished_level_isValid;
}

qint32 OAIGet_characters_character_id_skillqueue_200_ok::getLevelEndSp() const {
    return m_level_end_sp;
}
void OAIGet_characters_character_id_skillqueue_200_ok::setLevelEndSp(const qint32 &level_end_sp) {
    m_level_end_sp = level_end_sp;
    m_level_end_sp_isSet = true;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_level_end_sp_Set() const{
    return m_level_end_sp_isSet;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_level_end_sp_Valid() const{
    return m_level_end_sp_isValid;
}

qint32 OAIGet_characters_character_id_skillqueue_200_ok::getLevelStartSp() const {
    return m_level_start_sp;
}
void OAIGet_characters_character_id_skillqueue_200_ok::setLevelStartSp(const qint32 &level_start_sp) {
    m_level_start_sp = level_start_sp;
    m_level_start_sp_isSet = true;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_level_start_sp_Set() const{
    return m_level_start_sp_isSet;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_level_start_sp_Valid() const{
    return m_level_start_sp_isValid;
}

qint32 OAIGet_characters_character_id_skillqueue_200_ok::getQueuePosition() const {
    return m_queue_position;
}
void OAIGet_characters_character_id_skillqueue_200_ok::setQueuePosition(const qint32 &queue_position) {
    m_queue_position = queue_position;
    m_queue_position_isSet = true;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_queue_position_Set() const{
    return m_queue_position_isSet;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_queue_position_Valid() const{
    return m_queue_position_isValid;
}

qint32 OAIGet_characters_character_id_skillqueue_200_ok::getSkillId() const {
    return m_skill_id;
}
void OAIGet_characters_character_id_skillqueue_200_ok::setSkillId(const qint32 &skill_id) {
    m_skill_id = skill_id;
    m_skill_id_isSet = true;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_skill_id_Set() const{
    return m_skill_id_isSet;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_skill_id_Valid() const{
    return m_skill_id_isValid;
}

QDateTime OAIGet_characters_character_id_skillqueue_200_ok::getStartDate() const {
    return m_start_date;
}
void OAIGet_characters_character_id_skillqueue_200_ok::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_start_date_Valid() const{
    return m_start_date_isValid;
}

qint32 OAIGet_characters_character_id_skillqueue_200_ok::getTrainingStartSp() const {
    return m_training_start_sp;
}
void OAIGet_characters_character_id_skillqueue_200_ok::setTrainingStartSp(const qint32 &training_start_sp) {
    m_training_start_sp = training_start_sp;
    m_training_start_sp_isSet = true;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_training_start_sp_Set() const{
    return m_training_start_sp_isSet;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::is_training_start_sp_Valid() const{
    return m_training_start_sp_isValid;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_finish_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_finished_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_level_end_sp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_level_start_sp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skill_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_start_sp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_skillqueue_200_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_finished_level_isValid && m_queue_position_isValid && m_skill_id_isValid && true;
}

} // namespace OpenAPI
