/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_notifications_contacts_200_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_notifications_contacts_200_ok::OAIGet_characters_character_id_notifications_contacts_200_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_notifications_contacts_200_ok::OAIGet_characters_character_id_notifications_contacts_200_ok() {
    this->initializeModel();
}

OAIGet_characters_character_id_notifications_contacts_200_ok::~OAIGet_characters_character_id_notifications_contacts_200_ok() {}

void OAIGet_characters_character_id_notifications_contacts_200_ok::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;

    m_notification_id_isSet = false;
    m_notification_id_isValid = false;

    m_send_date_isSet = false;
    m_send_date_isValid = false;

    m_sender_character_id_isSet = false;
    m_sender_character_id_isValid = false;

    m_standing_level_isSet = false;
    m_standing_level_isValid = false;
}

void OAIGet_characters_character_id_notifications_contacts_200_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_notifications_contacts_200_ok::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_notification_id_isValid = ::OpenAPI::fromJsonValue(m_notification_id, json[QString("notification_id")]);
    m_notification_id_isSet = !json[QString("notification_id")].isNull() && m_notification_id_isValid;

    m_send_date_isValid = ::OpenAPI::fromJsonValue(m_send_date, json[QString("send_date")]);
    m_send_date_isSet = !json[QString("send_date")].isNull() && m_send_date_isValid;

    m_sender_character_id_isValid = ::OpenAPI::fromJsonValue(m_sender_character_id, json[QString("sender_character_id")]);
    m_sender_character_id_isSet = !json[QString("sender_character_id")].isNull() && m_sender_character_id_isValid;

    m_standing_level_isValid = ::OpenAPI::fromJsonValue(m_standing_level, json[QString("standing_level")]);
    m_standing_level_isSet = !json[QString("standing_level")].isNull() && m_standing_level_isValid;
}

QString OAIGet_characters_character_id_notifications_contacts_200_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_notifications_contacts_200_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_notification_id_isSet) {
        obj.insert(QString("notification_id"), ::OpenAPI::toJsonValue(m_notification_id));
    }
    if (m_send_date_isSet) {
        obj.insert(QString("send_date"), ::OpenAPI::toJsonValue(m_send_date));
    }
    if (m_sender_character_id_isSet) {
        obj.insert(QString("sender_character_id"), ::OpenAPI::toJsonValue(m_sender_character_id));
    }
    if (m_standing_level_isSet) {
        obj.insert(QString("standing_level"), ::OpenAPI::toJsonValue(m_standing_level));
    }
    return obj;
}

QString OAIGet_characters_character_id_notifications_contacts_200_ok::getMessage() const {
    return m_message;
}
void OAIGet_characters_character_id_notifications_contacts_200_ok::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::is_message_Valid() const{
    return m_message_isValid;
}

qint32 OAIGet_characters_character_id_notifications_contacts_200_ok::getNotificationId() const {
    return m_notification_id;
}
void OAIGet_characters_character_id_notifications_contacts_200_ok::setNotificationId(const qint32 &notification_id) {
    m_notification_id = notification_id;
    m_notification_id_isSet = true;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::is_notification_id_Set() const{
    return m_notification_id_isSet;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::is_notification_id_Valid() const{
    return m_notification_id_isValid;
}

QDateTime OAIGet_characters_character_id_notifications_contacts_200_ok::getSendDate() const {
    return m_send_date;
}
void OAIGet_characters_character_id_notifications_contacts_200_ok::setSendDate(const QDateTime &send_date) {
    m_send_date = send_date;
    m_send_date_isSet = true;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::is_send_date_Set() const{
    return m_send_date_isSet;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::is_send_date_Valid() const{
    return m_send_date_isValid;
}

qint32 OAIGet_characters_character_id_notifications_contacts_200_ok::getSenderCharacterId() const {
    return m_sender_character_id;
}
void OAIGet_characters_character_id_notifications_contacts_200_ok::setSenderCharacterId(const qint32 &sender_character_id) {
    m_sender_character_id = sender_character_id;
    m_sender_character_id_isSet = true;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::is_sender_character_id_Set() const{
    return m_sender_character_id_isSet;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::is_sender_character_id_Valid() const{
    return m_sender_character_id_isValid;
}

float OAIGet_characters_character_id_notifications_contacts_200_ok::getStandingLevel() const {
    return m_standing_level;
}
void OAIGet_characters_character_id_notifications_contacts_200_ok::setStandingLevel(const float &standing_level) {
    m_standing_level = standing_level;
    m_standing_level_isSet = true;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::is_standing_level_Set() const{
    return m_standing_level_isSet;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::is_standing_level_Valid() const{
    return m_standing_level_isValid;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_character_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standing_level_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_notifications_contacts_200_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_message_isValid && m_notification_id_isValid && m_send_date_isValid && m_sender_character_id_isValid && m_standing_level_isValid && true;
}

} // namespace OpenAPI
