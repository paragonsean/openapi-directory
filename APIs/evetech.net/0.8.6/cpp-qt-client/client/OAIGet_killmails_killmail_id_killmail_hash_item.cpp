/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_killmails_killmail_id_killmail_hash_item.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_killmails_killmail_id_killmail_hash_item::OAIGet_killmails_killmail_id_killmail_hash_item(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_killmails_killmail_id_killmail_hash_item::OAIGet_killmails_killmail_id_killmail_hash_item() {
    this->initializeModel();
}

OAIGet_killmails_killmail_id_killmail_hash_item::~OAIGet_killmails_killmail_id_killmail_hash_item() {}

void OAIGet_killmails_killmail_id_killmail_hash_item::initializeModel() {

    m_flag_isSet = false;
    m_flag_isValid = false;

    m_item_type_id_isSet = false;
    m_item_type_id_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_quantity_destroyed_isSet = false;
    m_quantity_destroyed_isValid = false;

    m_quantity_dropped_isSet = false;
    m_quantity_dropped_isValid = false;

    m_singleton_isSet = false;
    m_singleton_isValid = false;
}

void OAIGet_killmails_killmail_id_killmail_hash_item::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_killmails_killmail_id_killmail_hash_item::fromJsonObject(QJsonObject json) {

    m_flag_isValid = ::OpenAPI::fromJsonValue(m_flag, json[QString("flag")]);
    m_flag_isSet = !json[QString("flag")].isNull() && m_flag_isValid;

    m_item_type_id_isValid = ::OpenAPI::fromJsonValue(m_item_type_id, json[QString("item_type_id")]);
    m_item_type_id_isSet = !json[QString("item_type_id")].isNull() && m_item_type_id_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_quantity_destroyed_isValid = ::OpenAPI::fromJsonValue(m_quantity_destroyed, json[QString("quantity_destroyed")]);
    m_quantity_destroyed_isSet = !json[QString("quantity_destroyed")].isNull() && m_quantity_destroyed_isValid;

    m_quantity_dropped_isValid = ::OpenAPI::fromJsonValue(m_quantity_dropped, json[QString("quantity_dropped")]);
    m_quantity_dropped_isSet = !json[QString("quantity_dropped")].isNull() && m_quantity_dropped_isValid;

    m_singleton_isValid = ::OpenAPI::fromJsonValue(m_singleton, json[QString("singleton")]);
    m_singleton_isSet = !json[QString("singleton")].isNull() && m_singleton_isValid;
}

QString OAIGet_killmails_killmail_id_killmail_hash_item::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_killmails_killmail_id_killmail_hash_item::asJsonObject() const {
    QJsonObject obj;
    if (m_flag_isSet) {
        obj.insert(QString("flag"), ::OpenAPI::toJsonValue(m_flag));
    }
    if (m_item_type_id_isSet) {
        obj.insert(QString("item_type_id"), ::OpenAPI::toJsonValue(m_item_type_id));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_quantity_destroyed_isSet) {
        obj.insert(QString("quantity_destroyed"), ::OpenAPI::toJsonValue(m_quantity_destroyed));
    }
    if (m_quantity_dropped_isSet) {
        obj.insert(QString("quantity_dropped"), ::OpenAPI::toJsonValue(m_quantity_dropped));
    }
    if (m_singleton_isSet) {
        obj.insert(QString("singleton"), ::OpenAPI::toJsonValue(m_singleton));
    }
    return obj;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_item::getFlag() const {
    return m_flag;
}
void OAIGet_killmails_killmail_id_killmail_hash_item::setFlag(const qint32 &flag) {
    m_flag = flag;
    m_flag_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_flag_Set() const{
    return m_flag_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_flag_Valid() const{
    return m_flag_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_item::getItemTypeId() const {
    return m_item_type_id;
}
void OAIGet_killmails_killmail_id_killmail_hash_item::setItemTypeId(const qint32 &item_type_id) {
    m_item_type_id = item_type_id;
    m_item_type_id_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_item_type_id_Set() const{
    return m_item_type_id_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_item_type_id_Valid() const{
    return m_item_type_id_isValid;
}

QList<OAIGet_killmails_killmail_id_killmail_hash_items_item> OAIGet_killmails_killmail_id_killmail_hash_item::getItems() const {
    return m_items;
}
void OAIGet_killmails_killmail_id_killmail_hash_item::setItems(const QList<OAIGet_killmails_killmail_id_killmail_hash_items_item> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_items_Set() const{
    return m_items_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_items_Valid() const{
    return m_items_isValid;
}

qint64 OAIGet_killmails_killmail_id_killmail_hash_item::getQuantityDestroyed() const {
    return m_quantity_destroyed;
}
void OAIGet_killmails_killmail_id_killmail_hash_item::setQuantityDestroyed(const qint64 &quantity_destroyed) {
    m_quantity_destroyed = quantity_destroyed;
    m_quantity_destroyed_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_quantity_destroyed_Set() const{
    return m_quantity_destroyed_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_quantity_destroyed_Valid() const{
    return m_quantity_destroyed_isValid;
}

qint64 OAIGet_killmails_killmail_id_killmail_hash_item::getQuantityDropped() const {
    return m_quantity_dropped;
}
void OAIGet_killmails_killmail_id_killmail_hash_item::setQuantityDropped(const qint64 &quantity_dropped) {
    m_quantity_dropped = quantity_dropped;
    m_quantity_dropped_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_quantity_dropped_Set() const{
    return m_quantity_dropped_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_quantity_dropped_Valid() const{
    return m_quantity_dropped_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_item::getSingleton() const {
    return m_singleton;
}
void OAIGet_killmails_killmail_id_killmail_hash_item::setSingleton(const qint32 &singleton) {
    m_singleton = singleton;
    m_singleton_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_singleton_Set() const{
    return m_singleton_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::is_singleton_Valid() const{
    return m_singleton_isValid;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_destroyed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_dropped_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_singleton_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_killmails_killmail_id_killmail_hash_item::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_flag_isValid && m_item_type_id_isValid && m_singleton_isValid && true;
}

} // namespace OpenAPI
