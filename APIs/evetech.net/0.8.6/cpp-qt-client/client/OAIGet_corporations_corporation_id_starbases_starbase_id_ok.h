/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_corporations_corporation_id_starbases_starbase_id_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_corporations_corporation_id_starbases_starbase_id_ok_H
#define OAIGet_corporations_corporation_id_starbases_starbase_id_ok_H

#include <QJsonObject>

#include "OAIGet_corporations_corporation_id_starbases_starbase_id_fuel.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGet_corporations_corporation_id_starbases_starbase_id_fuel;

class OAIGet_corporations_corporation_id_starbases_starbase_id_ok : public OAIObject {
public:
    OAIGet_corporations_corporation_id_starbases_starbase_id_ok();
    OAIGet_corporations_corporation_id_starbases_starbase_id_ok(QString json);
    ~OAIGet_corporations_corporation_id_starbases_starbase_id_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowAllianceMembers() const;
    void setAllowAllianceMembers(const bool &allow_alliance_members);
    bool is_allow_alliance_members_Set() const;
    bool is_allow_alliance_members_Valid() const;

    bool isAllowCorporationMembers() const;
    void setAllowCorporationMembers(const bool &allow_corporation_members);
    bool is_allow_corporation_members_Set() const;
    bool is_allow_corporation_members_Valid() const;

    QString getAnchor() const;
    void setAnchor(const QString &anchor);
    bool is_anchor_Set() const;
    bool is_anchor_Valid() const;

    bool isAttackIfAtWar() const;
    void setAttackIfAtWar(const bool &attack_if_at_war);
    bool is_attack_if_at_war_Set() const;
    bool is_attack_if_at_war_Valid() const;

    bool isAttackIfOtherSecurityStatusDropping() const;
    void setAttackIfOtherSecurityStatusDropping(const bool &attack_if_other_security_status_dropping);
    bool is_attack_if_other_security_status_dropping_Set() const;
    bool is_attack_if_other_security_status_dropping_Valid() const;

    float getAttackSecurityStatusThreshold() const;
    void setAttackSecurityStatusThreshold(const float &attack_security_status_threshold);
    bool is_attack_security_status_threshold_Set() const;
    bool is_attack_security_status_threshold_Valid() const;

    float getAttackStandingThreshold() const;
    void setAttackStandingThreshold(const float &attack_standing_threshold);
    bool is_attack_standing_threshold_Set() const;
    bool is_attack_standing_threshold_Valid() const;

    QString getFuelBayTake() const;
    void setFuelBayTake(const QString &fuel_bay_take);
    bool is_fuel_bay_take_Set() const;
    bool is_fuel_bay_take_Valid() const;

    QString getFuelBayView() const;
    void setFuelBayView(const QString &fuel_bay_view);
    bool is_fuel_bay_view_Set() const;
    bool is_fuel_bay_view_Valid() const;

    QList<OAIGet_corporations_corporation_id_starbases_starbase_id_fuel> getFuels() const;
    void setFuels(const QList<OAIGet_corporations_corporation_id_starbases_starbase_id_fuel> &fuels);
    bool is_fuels_Set() const;
    bool is_fuels_Valid() const;

    QString getOffline() const;
    void setOffline(const QString &offline);
    bool is_offline_Set() const;
    bool is_offline_Valid() const;

    QString getOnline() const;
    void setOnline(const QString &online);
    bool is_online_Set() const;
    bool is_online_Valid() const;

    QString getUnanchor() const;
    void setUnanchor(const QString &unanchor);
    bool is_unanchor_Set() const;
    bool is_unanchor_Valid() const;

    bool isUseAllianceStandings() const;
    void setUseAllianceStandings(const bool &use_alliance_standings);
    bool is_use_alliance_standings_Set() const;
    bool is_use_alliance_standings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_alliance_members;
    bool m_allow_alliance_members_isSet;
    bool m_allow_alliance_members_isValid;

    bool m_allow_corporation_members;
    bool m_allow_corporation_members_isSet;
    bool m_allow_corporation_members_isValid;

    QString m_anchor;
    bool m_anchor_isSet;
    bool m_anchor_isValid;

    bool m_attack_if_at_war;
    bool m_attack_if_at_war_isSet;
    bool m_attack_if_at_war_isValid;

    bool m_attack_if_other_security_status_dropping;
    bool m_attack_if_other_security_status_dropping_isSet;
    bool m_attack_if_other_security_status_dropping_isValid;

    float m_attack_security_status_threshold;
    bool m_attack_security_status_threshold_isSet;
    bool m_attack_security_status_threshold_isValid;

    float m_attack_standing_threshold;
    bool m_attack_standing_threshold_isSet;
    bool m_attack_standing_threshold_isValid;

    QString m_fuel_bay_take;
    bool m_fuel_bay_take_isSet;
    bool m_fuel_bay_take_isValid;

    QString m_fuel_bay_view;
    bool m_fuel_bay_view_isSet;
    bool m_fuel_bay_view_isValid;

    QList<OAIGet_corporations_corporation_id_starbases_starbase_id_fuel> m_fuels;
    bool m_fuels_isSet;
    bool m_fuels_isValid;

    QString m_offline;
    bool m_offline_isSet;
    bool m_offline_isValid;

    QString m_online;
    bool m_online_isSet;
    bool m_online_isValid;

    QString m_unanchor;
    bool m_unanchor_isSet;
    bool m_unanchor_isValid;

    bool m_use_alliance_standings;
    bool m_use_alliance_standings_isSet;
    bool m_use_alliance_standings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_corporations_corporation_id_starbases_starbase_id_ok)

#endif // OAIGet_corporations_corporation_id_starbases_starbase_id_ok_H
