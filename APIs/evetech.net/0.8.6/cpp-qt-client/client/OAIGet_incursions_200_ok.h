/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_incursions_200_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_incursions_200_ok_H
#define OAIGet_incursions_200_ok_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_incursions_200_ok : public OAIObject {
public:
    OAIGet_incursions_200_ok();
    OAIGet_incursions_200_ok(QString json);
    ~OAIGet_incursions_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getConstellationId() const;
    void setConstellationId(const qint32 &constellation_id);
    bool is_constellation_id_Set() const;
    bool is_constellation_id_Valid() const;

    qint32 getFactionId() const;
    void setFactionId(const qint32 &faction_id);
    bool is_faction_id_Set() const;
    bool is_faction_id_Valid() const;

    bool isHasBoss() const;
    void setHasBoss(const bool &has_boss);
    bool is_has_boss_Set() const;
    bool is_has_boss_Valid() const;

    QList<qint32> getInfestedSolarSystems() const;
    void setInfestedSolarSystems(const QList<qint32> &infested_solar_systems);
    bool is_infested_solar_systems_Set() const;
    bool is_infested_solar_systems_Valid() const;

    float getInfluence() const;
    void setInfluence(const float &influence);
    bool is_influence_Set() const;
    bool is_influence_Valid() const;

    qint32 getStagingSolarSystemId() const;
    void setStagingSolarSystemId(const qint32 &staging_solar_system_id);
    bool is_staging_solar_system_id_Set() const;
    bool is_staging_solar_system_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_constellation_id;
    bool m_constellation_id_isSet;
    bool m_constellation_id_isValid;

    qint32 m_faction_id;
    bool m_faction_id_isSet;
    bool m_faction_id_isValid;

    bool m_has_boss;
    bool m_has_boss_isSet;
    bool m_has_boss_isValid;

    QList<qint32> m_infested_solar_systems;
    bool m_infested_solar_systems_isSet;
    bool m_infested_solar_systems_isValid;

    float m_influence;
    bool m_influence_isSet;
    bool m_influence_isValid;

    qint32 m_staging_solar_system_id;
    bool m_staging_solar_system_id_isSet;
    bool m_staging_solar_system_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_incursions_200_ok)

#endif // OAIGet_incursions_200_ok_H
