/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_dogma_effects_effect_id_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_dogma_effects_effect_id_ok_H
#define OAIGet_dogma_effects_effect_id_ok_H

#include <QJsonObject>

#include "OAIGet_dogma_effects_effect_id_modifier.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGet_dogma_effects_effect_id_modifier;

class OAIGet_dogma_effects_effect_id_ok : public OAIObject {
public:
    OAIGet_dogma_effects_effect_id_ok();
    OAIGet_dogma_effects_effect_id_ok(QString json);
    ~OAIGet_dogma_effects_effect_id_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isDisallowAutoRepeat() const;
    void setDisallowAutoRepeat(const bool &disallow_auto_repeat);
    bool is_disallow_auto_repeat_Set() const;
    bool is_disallow_auto_repeat_Valid() const;

    qint32 getDischargeAttributeId() const;
    void setDischargeAttributeId(const qint32 &discharge_attribute_id);
    bool is_discharge_attribute_id_Set() const;
    bool is_discharge_attribute_id_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    qint32 getDurationAttributeId() const;
    void setDurationAttributeId(const qint32 &duration_attribute_id);
    bool is_duration_attribute_id_Set() const;
    bool is_duration_attribute_id_Valid() const;

    qint32 getEffectCategory() const;
    void setEffectCategory(const qint32 &effect_category);
    bool is_effect_category_Set() const;
    bool is_effect_category_Valid() const;

    qint32 getEffectId() const;
    void setEffectId(const qint32 &effect_id);
    bool is_effect_id_Set() const;
    bool is_effect_id_Valid() const;

    bool isElectronicChance() const;
    void setElectronicChance(const bool &electronic_chance);
    bool is_electronic_chance_Set() const;
    bool is_electronic_chance_Valid() const;

    qint32 getFalloffAttributeId() const;
    void setFalloffAttributeId(const qint32 &falloff_attribute_id);
    bool is_falloff_attribute_id_Set() const;
    bool is_falloff_attribute_id_Valid() const;

    qint32 getIconId() const;
    void setIconId(const qint32 &icon_id);
    bool is_icon_id_Set() const;
    bool is_icon_id_Valid() const;

    bool isIsAssistance() const;
    void setIsAssistance(const bool &is_assistance);
    bool is_is_assistance_Set() const;
    bool is_is_assistance_Valid() const;

    bool isIsOffensive() const;
    void setIsOffensive(const bool &is_offensive);
    bool is_is_offensive_Set() const;
    bool is_is_offensive_Valid() const;

    bool isIsWarpSafe() const;
    void setIsWarpSafe(const bool &is_warp_safe);
    bool is_is_warp_safe_Set() const;
    bool is_is_warp_safe_Valid() const;

    QList<OAIGet_dogma_effects_effect_id_modifier> getModifiers() const;
    void setModifiers(const QList<OAIGet_dogma_effects_effect_id_modifier> &modifiers);
    bool is_modifiers_Set() const;
    bool is_modifiers_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPostExpression() const;
    void setPostExpression(const qint32 &post_expression);
    bool is_post_expression_Set() const;
    bool is_post_expression_Valid() const;

    qint32 getPreExpression() const;
    void setPreExpression(const qint32 &pre_expression);
    bool is_pre_expression_Set() const;
    bool is_pre_expression_Valid() const;

    bool isPublished() const;
    void setPublished(const bool &published);
    bool is_published_Set() const;
    bool is_published_Valid() const;

    qint32 getRangeAttributeId() const;
    void setRangeAttributeId(const qint32 &range_attribute_id);
    bool is_range_attribute_id_Set() const;
    bool is_range_attribute_id_Valid() const;

    bool isRangeChance() const;
    void setRangeChance(const bool &range_chance);
    bool is_range_chance_Set() const;
    bool is_range_chance_Valid() const;

    qint32 getTrackingSpeedAttributeId() const;
    void setTrackingSpeedAttributeId(const qint32 &tracking_speed_attribute_id);
    bool is_tracking_speed_attribute_id_Set() const;
    bool is_tracking_speed_attribute_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_disallow_auto_repeat;
    bool m_disallow_auto_repeat_isSet;
    bool m_disallow_auto_repeat_isValid;

    qint32 m_discharge_attribute_id;
    bool m_discharge_attribute_id_isSet;
    bool m_discharge_attribute_id_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    qint32 m_duration_attribute_id;
    bool m_duration_attribute_id_isSet;
    bool m_duration_attribute_id_isValid;

    qint32 m_effect_category;
    bool m_effect_category_isSet;
    bool m_effect_category_isValid;

    qint32 m_effect_id;
    bool m_effect_id_isSet;
    bool m_effect_id_isValid;

    bool m_electronic_chance;
    bool m_electronic_chance_isSet;
    bool m_electronic_chance_isValid;

    qint32 m_falloff_attribute_id;
    bool m_falloff_attribute_id_isSet;
    bool m_falloff_attribute_id_isValid;

    qint32 m_icon_id;
    bool m_icon_id_isSet;
    bool m_icon_id_isValid;

    bool m_is_assistance;
    bool m_is_assistance_isSet;
    bool m_is_assistance_isValid;

    bool m_is_offensive;
    bool m_is_offensive_isSet;
    bool m_is_offensive_isValid;

    bool m_is_warp_safe;
    bool m_is_warp_safe_isSet;
    bool m_is_warp_safe_isValid;

    QList<OAIGet_dogma_effects_effect_id_modifier> m_modifiers;
    bool m_modifiers_isSet;
    bool m_modifiers_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_post_expression;
    bool m_post_expression_isSet;
    bool m_post_expression_isValid;

    qint32 m_pre_expression;
    bool m_pre_expression_isSet;
    bool m_pre_expression_isValid;

    bool m_published;
    bool m_published_isSet;
    bool m_published_isValid;

    qint32 m_range_attribute_id;
    bool m_range_attribute_id_isSet;
    bool m_range_attribute_id_isValid;

    bool m_range_chance;
    bool m_range_chance_isSet;
    bool m_range_chance_isValid;

    qint32 m_tracking_speed_attribute_id;
    bool m_tracking_speed_attribute_id_isSet;
    bool m_tracking_speed_attribute_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_dogma_effects_effect_id_ok)

#endif // OAIGet_dogma_effects_effect_id_ok_H
