/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_agents_research_200_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_agents_research_200_ok::OAIGet_characters_character_id_agents_research_200_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_agents_research_200_ok::OAIGet_characters_character_id_agents_research_200_ok() {
    this->initializeModel();
}

OAIGet_characters_character_id_agents_research_200_ok::~OAIGet_characters_character_id_agents_research_200_ok() {}

void OAIGet_characters_character_id_agents_research_200_ok::initializeModel() {

    m_agent_id_isSet = false;
    m_agent_id_isValid = false;

    m_points_per_day_isSet = false;
    m_points_per_day_isValid = false;

    m_remainder_points_isSet = false;
    m_remainder_points_isValid = false;

    m_skill_type_id_isSet = false;
    m_skill_type_id_isValid = false;

    m_started_at_isSet = false;
    m_started_at_isValid = false;
}

void OAIGet_characters_character_id_agents_research_200_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_agents_research_200_ok::fromJsonObject(QJsonObject json) {

    m_agent_id_isValid = ::OpenAPI::fromJsonValue(m_agent_id, json[QString("agent_id")]);
    m_agent_id_isSet = !json[QString("agent_id")].isNull() && m_agent_id_isValid;

    m_points_per_day_isValid = ::OpenAPI::fromJsonValue(m_points_per_day, json[QString("points_per_day")]);
    m_points_per_day_isSet = !json[QString("points_per_day")].isNull() && m_points_per_day_isValid;

    m_remainder_points_isValid = ::OpenAPI::fromJsonValue(m_remainder_points, json[QString("remainder_points")]);
    m_remainder_points_isSet = !json[QString("remainder_points")].isNull() && m_remainder_points_isValid;

    m_skill_type_id_isValid = ::OpenAPI::fromJsonValue(m_skill_type_id, json[QString("skill_type_id")]);
    m_skill_type_id_isSet = !json[QString("skill_type_id")].isNull() && m_skill_type_id_isValid;

    m_started_at_isValid = ::OpenAPI::fromJsonValue(m_started_at, json[QString("started_at")]);
    m_started_at_isSet = !json[QString("started_at")].isNull() && m_started_at_isValid;
}

QString OAIGet_characters_character_id_agents_research_200_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_agents_research_200_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_id_isSet) {
        obj.insert(QString("agent_id"), ::OpenAPI::toJsonValue(m_agent_id));
    }
    if (m_points_per_day_isSet) {
        obj.insert(QString("points_per_day"), ::OpenAPI::toJsonValue(m_points_per_day));
    }
    if (m_remainder_points_isSet) {
        obj.insert(QString("remainder_points"), ::OpenAPI::toJsonValue(m_remainder_points));
    }
    if (m_skill_type_id_isSet) {
        obj.insert(QString("skill_type_id"), ::OpenAPI::toJsonValue(m_skill_type_id));
    }
    if (m_started_at_isSet) {
        obj.insert(QString("started_at"), ::OpenAPI::toJsonValue(m_started_at));
    }
    return obj;
}

qint32 OAIGet_characters_character_id_agents_research_200_ok::getAgentId() const {
    return m_agent_id;
}
void OAIGet_characters_character_id_agents_research_200_ok::setAgentId(const qint32 &agent_id) {
    m_agent_id = agent_id;
    m_agent_id_isSet = true;
}

bool OAIGet_characters_character_id_agents_research_200_ok::is_agent_id_Set() const{
    return m_agent_id_isSet;
}

bool OAIGet_characters_character_id_agents_research_200_ok::is_agent_id_Valid() const{
    return m_agent_id_isValid;
}

float OAIGet_characters_character_id_agents_research_200_ok::getPointsPerDay() const {
    return m_points_per_day;
}
void OAIGet_characters_character_id_agents_research_200_ok::setPointsPerDay(const float &points_per_day) {
    m_points_per_day = points_per_day;
    m_points_per_day_isSet = true;
}

bool OAIGet_characters_character_id_agents_research_200_ok::is_points_per_day_Set() const{
    return m_points_per_day_isSet;
}

bool OAIGet_characters_character_id_agents_research_200_ok::is_points_per_day_Valid() const{
    return m_points_per_day_isValid;
}

float OAIGet_characters_character_id_agents_research_200_ok::getRemainderPoints() const {
    return m_remainder_points;
}
void OAIGet_characters_character_id_agents_research_200_ok::setRemainderPoints(const float &remainder_points) {
    m_remainder_points = remainder_points;
    m_remainder_points_isSet = true;
}

bool OAIGet_characters_character_id_agents_research_200_ok::is_remainder_points_Set() const{
    return m_remainder_points_isSet;
}

bool OAIGet_characters_character_id_agents_research_200_ok::is_remainder_points_Valid() const{
    return m_remainder_points_isValid;
}

qint32 OAIGet_characters_character_id_agents_research_200_ok::getSkillTypeId() const {
    return m_skill_type_id;
}
void OAIGet_characters_character_id_agents_research_200_ok::setSkillTypeId(const qint32 &skill_type_id) {
    m_skill_type_id = skill_type_id;
    m_skill_type_id_isSet = true;
}

bool OAIGet_characters_character_id_agents_research_200_ok::is_skill_type_id_Set() const{
    return m_skill_type_id_isSet;
}

bool OAIGet_characters_character_id_agents_research_200_ok::is_skill_type_id_Valid() const{
    return m_skill_type_id_isValid;
}

QDateTime OAIGet_characters_character_id_agents_research_200_ok::getStartedAt() const {
    return m_started_at;
}
void OAIGet_characters_character_id_agents_research_200_ok::setStartedAt(const QDateTime &started_at) {
    m_started_at = started_at;
    m_started_at_isSet = true;
}

bool OAIGet_characters_character_id_agents_research_200_ok::is_started_at_Set() const{
    return m_started_at_isSet;
}

bool OAIGet_characters_character_id_agents_research_200_ok::is_started_at_Valid() const{
    return m_started_at_isValid;
}

bool OAIGet_characters_character_id_agents_research_200_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_points_per_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remainder_points_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skill_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_started_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_agents_research_200_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_agent_id_isValid && m_points_per_day_isValid && m_remainder_points_isValid && m_skill_type_id_isValid && m_started_at_isValid && true;
}

} // namespace OpenAPI
