/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_corporations_corporation_id_wallets_division_journal_200_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_corporations_corporation_id_wallets_division_journal_200_ok_H
#define OAIGet_corporations_corporation_id_wallets_division_journal_200_ok_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_corporations_corporation_id_wallets_division_journal_200_ok : public OAIObject {
public:
    OAIGet_corporations_corporation_id_wallets_division_journal_200_ok();
    OAIGet_corporations_corporation_id_wallets_division_journal_200_ok(QString json);
    ~OAIGet_corporations_corporation_id_wallets_division_journal_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    double getBalance() const;
    void setBalance(const double &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    qint64 getContextId() const;
    void setContextId(const qint64 &context_id);
    bool is_context_id_Set() const;
    bool is_context_id_Valid() const;

    QString getContextIdType() const;
    void setContextIdType(const QString &context_id_type);
    bool is_context_id_type_Set() const;
    bool is_context_id_type_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getFirstPartyId() const;
    void setFirstPartyId(const qint32 &first_party_id);
    bool is_first_party_id_Set() const;
    bool is_first_party_id_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getRefType() const;
    void setRefType(const QString &ref_type);
    bool is_ref_type_Set() const;
    bool is_ref_type_Valid() const;

    qint32 getSecondPartyId() const;
    void setSecondPartyId(const qint32 &second_party_id);
    bool is_second_party_id_Set() const;
    bool is_second_party_id_Valid() const;

    double getTax() const;
    void setTax(const double &tax);
    bool is_tax_Set() const;
    bool is_tax_Valid() const;

    qint32 getTaxReceiverId() const;
    void setTaxReceiverId(const qint32 &tax_receiver_id);
    bool is_tax_receiver_id_Set() const;
    bool is_tax_receiver_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    double m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    qint64 m_context_id;
    bool m_context_id_isSet;
    bool m_context_id_isValid;

    QString m_context_id_type;
    bool m_context_id_type_isSet;
    bool m_context_id_type_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_first_party_id;
    bool m_first_party_id_isSet;
    bool m_first_party_id_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_ref_type;
    bool m_ref_type_isSet;
    bool m_ref_type_isValid;

    qint32 m_second_party_id;
    bool m_second_party_id_isSet;
    bool m_second_party_id_isValid;

    double m_tax;
    bool m_tax_isSet;
    bool m_tax_isValid;

    qint32 m_tax_receiver_id;
    bool m_tax_receiver_id_isSet;
    bool m_tax_receiver_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_corporations_corporation_id_wallets_division_journal_200_ok)

#endif // OAIGet_corporations_corporation_id_wallets_division_journal_200_ok_H
