/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_corporations_corporation_id_assets_200_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_corporations_corporation_id_assets_200_ok_H
#define OAIGet_corporations_corporation_id_assets_200_ok_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_corporations_corporation_id_assets_200_ok : public OAIObject {
public:
    OAIGet_corporations_corporation_id_assets_200_ok();
    OAIGet_corporations_corporation_id_assets_200_ok(QString json);
    ~OAIGet_corporations_corporation_id_assets_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsBlueprintCopy() const;
    void setIsBlueprintCopy(const bool &is_blueprint_copy);
    bool is_is_blueprint_copy_Set() const;
    bool is_is_blueprint_copy_Valid() const;

    bool isIsSingleton() const;
    void setIsSingleton(const bool &is_singleton);
    bool is_is_singleton_Set() const;
    bool is_is_singleton_Valid() const;

    qint64 getItemId() const;
    void setItemId(const qint64 &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getLocationFlag() const;
    void setLocationFlag(const QString &location_flag);
    bool is_location_flag_Set() const;
    bool is_location_flag_Valid() const;

    qint64 getLocationId() const;
    void setLocationId(const qint64 &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    QString getLocationType() const;
    void setLocationType(const QString &location_type);
    bool is_location_type_Set() const;
    bool is_location_type_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    qint32 getTypeId() const;
    void setTypeId(const qint32 &type_id);
    bool is_type_id_Set() const;
    bool is_type_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_blueprint_copy;
    bool m_is_blueprint_copy_isSet;
    bool m_is_blueprint_copy_isValid;

    bool m_is_singleton;
    bool m_is_singleton_isSet;
    bool m_is_singleton_isValid;

    qint64 m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_location_flag;
    bool m_location_flag_isSet;
    bool m_location_flag_isValid;

    qint64 m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_location_type;
    bool m_location_type_isSet;
    bool m_location_type_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    qint32 m_type_id;
    bool m_type_id_isSet;
    bool m_type_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_corporations_corporation_id_assets_200_ok)

#endif // OAIGet_corporations_corporation_id_assets_200_ok_H
