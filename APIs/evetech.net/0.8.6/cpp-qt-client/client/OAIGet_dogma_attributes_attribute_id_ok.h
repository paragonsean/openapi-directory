/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_dogma_attributes_attribute_id_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_dogma_attributes_attribute_id_ok_H
#define OAIGet_dogma_attributes_attribute_id_ok_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_dogma_attributes_attribute_id_ok : public OAIObject {
public:
    OAIGet_dogma_attributes_attribute_id_ok();
    OAIGet_dogma_attributes_attribute_id_ok(QString json);
    ~OAIGet_dogma_attributes_attribute_id_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAttributeId() const;
    void setAttributeId(const qint32 &attribute_id);
    bool is_attribute_id_Set() const;
    bool is_attribute_id_Valid() const;

    float getDefaultValue() const;
    void setDefaultValue(const float &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    bool isHighIsGood() const;
    void setHighIsGood(const bool &high_is_good);
    bool is_high_is_good_Set() const;
    bool is_high_is_good_Valid() const;

    qint32 getIconId() const;
    void setIconId(const qint32 &icon_id);
    bool is_icon_id_Set() const;
    bool is_icon_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isPublished() const;
    void setPublished(const bool &published);
    bool is_published_Set() const;
    bool is_published_Valid() const;

    bool isStackable() const;
    void setStackable(const bool &stackable);
    bool is_stackable_Set() const;
    bool is_stackable_Valid() const;

    qint32 getUnitId() const;
    void setUnitId(const qint32 &unit_id);
    bool is_unit_id_Set() const;
    bool is_unit_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_attribute_id;
    bool m_attribute_id_isSet;
    bool m_attribute_id_isValid;

    float m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    bool m_high_is_good;
    bool m_high_is_good_isSet;
    bool m_high_is_good_isValid;

    qint32 m_icon_id;
    bool m_icon_id_isSet;
    bool m_icon_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_published;
    bool m_published_isSet;
    bool m_published_isValid;

    bool m_stackable;
    bool m_stackable_isSet;
    bool m_stackable_isValid;

    qint32 m_unit_id;
    bool m_unit_id_isSet;
    bool m_unit_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_dogma_attributes_attribute_id_ok)

#endif // OAIGet_dogma_attributes_attribute_id_ok_H
