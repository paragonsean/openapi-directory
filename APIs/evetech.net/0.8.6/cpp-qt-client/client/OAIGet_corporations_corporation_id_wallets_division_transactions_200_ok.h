/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_corporations_corporation_id_wallets_division_transactions_200_ok.h
 *
 * wallet transaction
 */

#ifndef OAIGet_corporations_corporation_id_wallets_division_transactions_200_ok_H
#define OAIGet_corporations_corporation_id_wallets_division_transactions_200_ok_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_corporations_corporation_id_wallets_division_transactions_200_ok : public OAIObject {
public:
    OAIGet_corporations_corporation_id_wallets_division_transactions_200_ok();
    OAIGet_corporations_corporation_id_wallets_division_transactions_200_ok(QString json);
    ~OAIGet_corporations_corporation_id_wallets_division_transactions_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getClientId() const;
    void setClientId(const qint32 &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    bool isIsBuy() const;
    void setIsBuy(const bool &is_buy);
    bool is_is_buy_Set() const;
    bool is_is_buy_Valid() const;

    qint64 getJournalRefId() const;
    void setJournalRefId(const qint64 &journal_ref_id);
    bool is_journal_ref_id_Set() const;
    bool is_journal_ref_id_Valid() const;

    qint64 getLocationId() const;
    void setLocationId(const qint64 &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    qint64 getTransactionId() const;
    void setTransactionId(const qint64 &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    qint32 getTypeId() const;
    void setTypeId(const qint32 &type_id);
    bool is_type_id_Set() const;
    bool is_type_id_Valid() const;

    double getUnitPrice() const;
    void setUnitPrice(const double &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    bool m_is_buy;
    bool m_is_buy_isSet;
    bool m_is_buy_isValid;

    qint64 m_journal_ref_id;
    bool m_journal_ref_id_isSet;
    bool m_journal_ref_id_isValid;

    qint64 m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    qint64 m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;

    qint32 m_type_id;
    bool m_type_id_isSet;
    bool m_type_id_isValid;

    double m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_corporations_corporation_id_wallets_division_transactions_200_ok)

#endif // OAIGet_corporations_corporation_id_wallets_division_transactions_200_ok_H
