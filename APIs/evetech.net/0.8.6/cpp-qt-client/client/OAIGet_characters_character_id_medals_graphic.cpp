/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_medals_graphic.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_medals_graphic::OAIGet_characters_character_id_medals_graphic(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_medals_graphic::OAIGet_characters_character_id_medals_graphic() {
    this->initializeModel();
}

OAIGet_characters_character_id_medals_graphic::~OAIGet_characters_character_id_medals_graphic() {}

void OAIGet_characters_character_id_medals_graphic::initializeModel() {

    m_color_isSet = false;
    m_color_isValid = false;

    m_graphic_isSet = false;
    m_graphic_isValid = false;

    m_layer_isSet = false;
    m_layer_isValid = false;

    m_part_isSet = false;
    m_part_isValid = false;
}

void OAIGet_characters_character_id_medals_graphic::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_medals_graphic::fromJsonObject(QJsonObject json) {

    m_color_isValid = ::OpenAPI::fromJsonValue(m_color, json[QString("color")]);
    m_color_isSet = !json[QString("color")].isNull() && m_color_isValid;

    m_graphic_isValid = ::OpenAPI::fromJsonValue(m_graphic, json[QString("graphic")]);
    m_graphic_isSet = !json[QString("graphic")].isNull() && m_graphic_isValid;

    m_layer_isValid = ::OpenAPI::fromJsonValue(m_layer, json[QString("layer")]);
    m_layer_isSet = !json[QString("layer")].isNull() && m_layer_isValid;

    m_part_isValid = ::OpenAPI::fromJsonValue(m_part, json[QString("part")]);
    m_part_isSet = !json[QString("part")].isNull() && m_part_isValid;
}

QString OAIGet_characters_character_id_medals_graphic::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_medals_graphic::asJsonObject() const {
    QJsonObject obj;
    if (m_color_isSet) {
        obj.insert(QString("color"), ::OpenAPI::toJsonValue(m_color));
    }
    if (m_graphic_isSet) {
        obj.insert(QString("graphic"), ::OpenAPI::toJsonValue(m_graphic));
    }
    if (m_layer_isSet) {
        obj.insert(QString("layer"), ::OpenAPI::toJsonValue(m_layer));
    }
    if (m_part_isSet) {
        obj.insert(QString("part"), ::OpenAPI::toJsonValue(m_part));
    }
    return obj;
}

qint32 OAIGet_characters_character_id_medals_graphic::getColor() const {
    return m_color;
}
void OAIGet_characters_character_id_medals_graphic::setColor(const qint32 &color) {
    m_color = color;
    m_color_isSet = true;
}

bool OAIGet_characters_character_id_medals_graphic::is_color_Set() const{
    return m_color_isSet;
}

bool OAIGet_characters_character_id_medals_graphic::is_color_Valid() const{
    return m_color_isValid;
}

QString OAIGet_characters_character_id_medals_graphic::getGraphic() const {
    return m_graphic;
}
void OAIGet_characters_character_id_medals_graphic::setGraphic(const QString &graphic) {
    m_graphic = graphic;
    m_graphic_isSet = true;
}

bool OAIGet_characters_character_id_medals_graphic::is_graphic_Set() const{
    return m_graphic_isSet;
}

bool OAIGet_characters_character_id_medals_graphic::is_graphic_Valid() const{
    return m_graphic_isValid;
}

qint32 OAIGet_characters_character_id_medals_graphic::getLayer() const {
    return m_layer;
}
void OAIGet_characters_character_id_medals_graphic::setLayer(const qint32 &layer) {
    m_layer = layer;
    m_layer_isSet = true;
}

bool OAIGet_characters_character_id_medals_graphic::is_layer_Set() const{
    return m_layer_isSet;
}

bool OAIGet_characters_character_id_medals_graphic::is_layer_Valid() const{
    return m_layer_isValid;
}

qint32 OAIGet_characters_character_id_medals_graphic::getPart() const {
    return m_part;
}
void OAIGet_characters_character_id_medals_graphic::setPart(const qint32 &part) {
    m_part = part;
    m_part_isSet = true;
}

bool OAIGet_characters_character_id_medals_graphic::is_part_Set() const{
    return m_part_isSet;
}

bool OAIGet_characters_character_id_medals_graphic::is_part_Valid() const{
    return m_part_isValid;
}

bool OAIGet_characters_character_id_medals_graphic::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_graphic_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_layer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_part_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_medals_graphic::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_graphic_isValid && m_layer_isValid && m_part_isValid && true;
}

} // namespace OpenAPI
