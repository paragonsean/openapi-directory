/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_fleets_fleet_id_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_fleets_fleet_id_ok::OAIGet_fleets_fleet_id_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_fleets_fleet_id_ok::OAIGet_fleets_fleet_id_ok() {
    this->initializeModel();
}

OAIGet_fleets_fleet_id_ok::~OAIGet_fleets_fleet_id_ok() {}

void OAIGet_fleets_fleet_id_ok::initializeModel() {

    m_is_free_move_isSet = false;
    m_is_free_move_isValid = false;

    m_is_registered_isSet = false;
    m_is_registered_isValid = false;

    m_is_voice_enabled_isSet = false;
    m_is_voice_enabled_isValid = false;

    m_motd_isSet = false;
    m_motd_isValid = false;
}

void OAIGet_fleets_fleet_id_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_fleets_fleet_id_ok::fromJsonObject(QJsonObject json) {

    m_is_free_move_isValid = ::OpenAPI::fromJsonValue(m_is_free_move, json[QString("is_free_move")]);
    m_is_free_move_isSet = !json[QString("is_free_move")].isNull() && m_is_free_move_isValid;

    m_is_registered_isValid = ::OpenAPI::fromJsonValue(m_is_registered, json[QString("is_registered")]);
    m_is_registered_isSet = !json[QString("is_registered")].isNull() && m_is_registered_isValid;

    m_is_voice_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_voice_enabled, json[QString("is_voice_enabled")]);
    m_is_voice_enabled_isSet = !json[QString("is_voice_enabled")].isNull() && m_is_voice_enabled_isValid;

    m_motd_isValid = ::OpenAPI::fromJsonValue(m_motd, json[QString("motd")]);
    m_motd_isSet = !json[QString("motd")].isNull() && m_motd_isValid;
}

QString OAIGet_fleets_fleet_id_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_fleets_fleet_id_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_is_free_move_isSet) {
        obj.insert(QString("is_free_move"), ::OpenAPI::toJsonValue(m_is_free_move));
    }
    if (m_is_registered_isSet) {
        obj.insert(QString("is_registered"), ::OpenAPI::toJsonValue(m_is_registered));
    }
    if (m_is_voice_enabled_isSet) {
        obj.insert(QString("is_voice_enabled"), ::OpenAPI::toJsonValue(m_is_voice_enabled));
    }
    if (m_motd_isSet) {
        obj.insert(QString("motd"), ::OpenAPI::toJsonValue(m_motd));
    }
    return obj;
}

bool OAIGet_fleets_fleet_id_ok::isIsFreeMove() const {
    return m_is_free_move;
}
void OAIGet_fleets_fleet_id_ok::setIsFreeMove(const bool &is_free_move) {
    m_is_free_move = is_free_move;
    m_is_free_move_isSet = true;
}

bool OAIGet_fleets_fleet_id_ok::is_is_free_move_Set() const{
    return m_is_free_move_isSet;
}

bool OAIGet_fleets_fleet_id_ok::is_is_free_move_Valid() const{
    return m_is_free_move_isValid;
}

bool OAIGet_fleets_fleet_id_ok::isIsRegistered() const {
    return m_is_registered;
}
void OAIGet_fleets_fleet_id_ok::setIsRegistered(const bool &is_registered) {
    m_is_registered = is_registered;
    m_is_registered_isSet = true;
}

bool OAIGet_fleets_fleet_id_ok::is_is_registered_Set() const{
    return m_is_registered_isSet;
}

bool OAIGet_fleets_fleet_id_ok::is_is_registered_Valid() const{
    return m_is_registered_isValid;
}

bool OAIGet_fleets_fleet_id_ok::isIsVoiceEnabled() const {
    return m_is_voice_enabled;
}
void OAIGet_fleets_fleet_id_ok::setIsVoiceEnabled(const bool &is_voice_enabled) {
    m_is_voice_enabled = is_voice_enabled;
    m_is_voice_enabled_isSet = true;
}

bool OAIGet_fleets_fleet_id_ok::is_is_voice_enabled_Set() const{
    return m_is_voice_enabled_isSet;
}

bool OAIGet_fleets_fleet_id_ok::is_is_voice_enabled_Valid() const{
    return m_is_voice_enabled_isValid;
}

QString OAIGet_fleets_fleet_id_ok::getMotd() const {
    return m_motd;
}
void OAIGet_fleets_fleet_id_ok::setMotd(const QString &motd) {
    m_motd = motd;
    m_motd_isSet = true;
}

bool OAIGet_fleets_fleet_id_ok::is_motd_Set() const{
    return m_motd_isSet;
}

bool OAIGet_fleets_fleet_id_ok::is_motd_Valid() const{
    return m_motd_isValid;
}

bool OAIGet_fleets_fleet_id_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_free_move_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_registered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_voice_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_motd_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_fleets_fleet_id_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_is_free_move_isValid && m_is_registered_isValid && m_is_voice_enabled_isValid && m_motd_isValid && true;
}

} // namespace OpenAPI
