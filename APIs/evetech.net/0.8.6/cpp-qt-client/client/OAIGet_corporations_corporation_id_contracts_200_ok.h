/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_corporations_corporation_id_contracts_200_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_corporations_corporation_id_contracts_200_ok_H
#define OAIGet_corporations_corporation_id_contracts_200_ok_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_corporations_corporation_id_contracts_200_ok : public OAIObject {
public:
    OAIGet_corporations_corporation_id_contracts_200_ok();
    OAIGet_corporations_corporation_id_contracts_200_ok(QString json);
    ~OAIGet_corporations_corporation_id_contracts_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAcceptorId() const;
    void setAcceptorId(const qint32 &acceptor_id);
    bool is_acceptor_id_Set() const;
    bool is_acceptor_id_Valid() const;

    qint32 getAssigneeId() const;
    void setAssigneeId(const qint32 &assignee_id);
    bool is_assignee_id_Set() const;
    bool is_assignee_id_Valid() const;

    QString getAvailability() const;
    void setAvailability(const QString &availability);
    bool is_availability_Set() const;
    bool is_availability_Valid() const;

    double getBuyout() const;
    void setBuyout(const double &buyout);
    bool is_buyout_Set() const;
    bool is_buyout_Valid() const;

    double getCollateral() const;
    void setCollateral(const double &collateral);
    bool is_collateral_Set() const;
    bool is_collateral_Valid() const;

    qint32 getContractId() const;
    void setContractId(const qint32 &contract_id);
    bool is_contract_id_Set() const;
    bool is_contract_id_Valid() const;

    QDateTime getDateAccepted() const;
    void setDateAccepted(const QDateTime &date_accepted);
    bool is_date_accepted_Set() const;
    bool is_date_accepted_Valid() const;

    QDateTime getDateCompleted() const;
    void setDateCompleted(const QDateTime &date_completed);
    bool is_date_completed_Set() const;
    bool is_date_completed_Valid() const;

    QDateTime getDateExpired() const;
    void setDateExpired(const QDateTime &date_expired);
    bool is_date_expired_Set() const;
    bool is_date_expired_Valid() const;

    QDateTime getDateIssued() const;
    void setDateIssued(const QDateTime &date_issued);
    bool is_date_issued_Set() const;
    bool is_date_issued_Valid() const;

    qint32 getDaysToComplete() const;
    void setDaysToComplete(const qint32 &days_to_complete);
    bool is_days_to_complete_Set() const;
    bool is_days_to_complete_Valid() const;

    qint64 getEndLocationId() const;
    void setEndLocationId(const qint64 &end_location_id);
    bool is_end_location_id_Set() const;
    bool is_end_location_id_Valid() const;

    bool isForCorporation() const;
    void setForCorporation(const bool &for_corporation);
    bool is_for_corporation_Set() const;
    bool is_for_corporation_Valid() const;

    qint32 getIssuerCorporationId() const;
    void setIssuerCorporationId(const qint32 &issuer_corporation_id);
    bool is_issuer_corporation_id_Set() const;
    bool is_issuer_corporation_id_Valid() const;

    qint32 getIssuerId() const;
    void setIssuerId(const qint32 &issuer_id);
    bool is_issuer_id_Set() const;
    bool is_issuer_id_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    double getReward() const;
    void setReward(const double &reward);
    bool is_reward_Set() const;
    bool is_reward_Valid() const;

    qint64 getStartLocationId() const;
    void setStartLocationId(const qint64 &start_location_id);
    bool is_start_location_id_Set() const;
    bool is_start_location_id_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    double getVolume() const;
    void setVolume(const double &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_acceptor_id;
    bool m_acceptor_id_isSet;
    bool m_acceptor_id_isValid;

    qint32 m_assignee_id;
    bool m_assignee_id_isSet;
    bool m_assignee_id_isValid;

    QString m_availability;
    bool m_availability_isSet;
    bool m_availability_isValid;

    double m_buyout;
    bool m_buyout_isSet;
    bool m_buyout_isValid;

    double m_collateral;
    bool m_collateral_isSet;
    bool m_collateral_isValid;

    qint32 m_contract_id;
    bool m_contract_id_isSet;
    bool m_contract_id_isValid;

    QDateTime m_date_accepted;
    bool m_date_accepted_isSet;
    bool m_date_accepted_isValid;

    QDateTime m_date_completed;
    bool m_date_completed_isSet;
    bool m_date_completed_isValid;

    QDateTime m_date_expired;
    bool m_date_expired_isSet;
    bool m_date_expired_isValid;

    QDateTime m_date_issued;
    bool m_date_issued_isSet;
    bool m_date_issued_isValid;

    qint32 m_days_to_complete;
    bool m_days_to_complete_isSet;
    bool m_days_to_complete_isValid;

    qint64 m_end_location_id;
    bool m_end_location_id_isSet;
    bool m_end_location_id_isValid;

    bool m_for_corporation;
    bool m_for_corporation_isSet;
    bool m_for_corporation_isValid;

    qint32 m_issuer_corporation_id;
    bool m_issuer_corporation_id_isSet;
    bool m_issuer_corporation_id_isValid;

    qint32 m_issuer_id;
    bool m_issuer_id_isSet;
    bool m_issuer_id_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    double m_reward;
    bool m_reward_isSet;
    bool m_reward_isValid;

    qint64 m_start_location_id;
    bool m_start_location_id_isSet;
    bool m_start_location_id_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    double m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_corporations_corporation_id_contracts_200_ok)

#endif // OAIGet_corporations_corporation_id_contracts_200_ok_H
