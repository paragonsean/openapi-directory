/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_corporations_corporation_id_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_corporations_corporation_id_ok::OAIGet_corporations_corporation_id_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_corporations_corporation_id_ok::OAIGet_corporations_corporation_id_ok() {
    this->initializeModel();
}

OAIGet_corporations_corporation_id_ok::~OAIGet_corporations_corporation_id_ok() {}

void OAIGet_corporations_corporation_id_ok::initializeModel() {

    m_alliance_id_isSet = false;
    m_alliance_id_isValid = false;

    m_ceo_id_isSet = false;
    m_ceo_id_isValid = false;

    m_creator_id_isSet = false;
    m_creator_id_isValid = false;

    m_date_founded_isSet = false;
    m_date_founded_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_faction_id_isSet = false;
    m_faction_id_isValid = false;

    m_home_station_id_isSet = false;
    m_home_station_id_isValid = false;

    m_member_count_isSet = false;
    m_member_count_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_shares_isSet = false;
    m_shares_isValid = false;

    m_tax_rate_isSet = false;
    m_tax_rate_isValid = false;

    m_ticker_isSet = false;
    m_ticker_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_war_eligible_isSet = false;
    m_war_eligible_isValid = false;
}

void OAIGet_corporations_corporation_id_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_corporations_corporation_id_ok::fromJsonObject(QJsonObject json) {

    m_alliance_id_isValid = ::OpenAPI::fromJsonValue(m_alliance_id, json[QString("alliance_id")]);
    m_alliance_id_isSet = !json[QString("alliance_id")].isNull() && m_alliance_id_isValid;

    m_ceo_id_isValid = ::OpenAPI::fromJsonValue(m_ceo_id, json[QString("ceo_id")]);
    m_ceo_id_isSet = !json[QString("ceo_id")].isNull() && m_ceo_id_isValid;

    m_creator_id_isValid = ::OpenAPI::fromJsonValue(m_creator_id, json[QString("creator_id")]);
    m_creator_id_isSet = !json[QString("creator_id")].isNull() && m_creator_id_isValid;

    m_date_founded_isValid = ::OpenAPI::fromJsonValue(m_date_founded, json[QString("date_founded")]);
    m_date_founded_isSet = !json[QString("date_founded")].isNull() && m_date_founded_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_faction_id_isValid = ::OpenAPI::fromJsonValue(m_faction_id, json[QString("faction_id")]);
    m_faction_id_isSet = !json[QString("faction_id")].isNull() && m_faction_id_isValid;

    m_home_station_id_isValid = ::OpenAPI::fromJsonValue(m_home_station_id, json[QString("home_station_id")]);
    m_home_station_id_isSet = !json[QString("home_station_id")].isNull() && m_home_station_id_isValid;

    m_member_count_isValid = ::OpenAPI::fromJsonValue(m_member_count, json[QString("member_count")]);
    m_member_count_isSet = !json[QString("member_count")].isNull() && m_member_count_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_shares_isValid = ::OpenAPI::fromJsonValue(m_shares, json[QString("shares")]);
    m_shares_isSet = !json[QString("shares")].isNull() && m_shares_isValid;

    m_tax_rate_isValid = ::OpenAPI::fromJsonValue(m_tax_rate, json[QString("tax_rate")]);
    m_tax_rate_isSet = !json[QString("tax_rate")].isNull() && m_tax_rate_isValid;

    m_ticker_isValid = ::OpenAPI::fromJsonValue(m_ticker, json[QString("ticker")]);
    m_ticker_isSet = !json[QString("ticker")].isNull() && m_ticker_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_war_eligible_isValid = ::OpenAPI::fromJsonValue(m_war_eligible, json[QString("war_eligible")]);
    m_war_eligible_isSet = !json[QString("war_eligible")].isNull() && m_war_eligible_isValid;
}

QString OAIGet_corporations_corporation_id_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_corporations_corporation_id_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_alliance_id_isSet) {
        obj.insert(QString("alliance_id"), ::OpenAPI::toJsonValue(m_alliance_id));
    }
    if (m_ceo_id_isSet) {
        obj.insert(QString("ceo_id"), ::OpenAPI::toJsonValue(m_ceo_id));
    }
    if (m_creator_id_isSet) {
        obj.insert(QString("creator_id"), ::OpenAPI::toJsonValue(m_creator_id));
    }
    if (m_date_founded_isSet) {
        obj.insert(QString("date_founded"), ::OpenAPI::toJsonValue(m_date_founded));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_faction_id_isSet) {
        obj.insert(QString("faction_id"), ::OpenAPI::toJsonValue(m_faction_id));
    }
    if (m_home_station_id_isSet) {
        obj.insert(QString("home_station_id"), ::OpenAPI::toJsonValue(m_home_station_id));
    }
    if (m_member_count_isSet) {
        obj.insert(QString("member_count"), ::OpenAPI::toJsonValue(m_member_count));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_shares_isSet) {
        obj.insert(QString("shares"), ::OpenAPI::toJsonValue(m_shares));
    }
    if (m_tax_rate_isSet) {
        obj.insert(QString("tax_rate"), ::OpenAPI::toJsonValue(m_tax_rate));
    }
    if (m_ticker_isSet) {
        obj.insert(QString("ticker"), ::OpenAPI::toJsonValue(m_ticker));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_war_eligible_isSet) {
        obj.insert(QString("war_eligible"), ::OpenAPI::toJsonValue(m_war_eligible));
    }
    return obj;
}

qint32 OAIGet_corporations_corporation_id_ok::getAllianceId() const {
    return m_alliance_id;
}
void OAIGet_corporations_corporation_id_ok::setAllianceId(const qint32 &alliance_id) {
    m_alliance_id = alliance_id;
    m_alliance_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_alliance_id_Set() const{
    return m_alliance_id_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_alliance_id_Valid() const{
    return m_alliance_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_ok::getCeoId() const {
    return m_ceo_id;
}
void OAIGet_corporations_corporation_id_ok::setCeoId(const qint32 &ceo_id) {
    m_ceo_id = ceo_id;
    m_ceo_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_ceo_id_Set() const{
    return m_ceo_id_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_ceo_id_Valid() const{
    return m_ceo_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_ok::getCreatorId() const {
    return m_creator_id;
}
void OAIGet_corporations_corporation_id_ok::setCreatorId(const qint32 &creator_id) {
    m_creator_id = creator_id;
    m_creator_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_creator_id_Set() const{
    return m_creator_id_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_creator_id_Valid() const{
    return m_creator_id_isValid;
}

QDateTime OAIGet_corporations_corporation_id_ok::getDateFounded() const {
    return m_date_founded;
}
void OAIGet_corporations_corporation_id_ok::setDateFounded(const QDateTime &date_founded) {
    m_date_founded = date_founded;
    m_date_founded_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_date_founded_Set() const{
    return m_date_founded_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_date_founded_Valid() const{
    return m_date_founded_isValid;
}

QString OAIGet_corporations_corporation_id_ok::getDescription() const {
    return m_description;
}
void OAIGet_corporations_corporation_id_ok::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAIGet_corporations_corporation_id_ok::getFactionId() const {
    return m_faction_id;
}
void OAIGet_corporations_corporation_id_ok::setFactionId(const qint32 &faction_id) {
    m_faction_id = faction_id;
    m_faction_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_faction_id_Set() const{
    return m_faction_id_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_faction_id_Valid() const{
    return m_faction_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_ok::getHomeStationId() const {
    return m_home_station_id;
}
void OAIGet_corporations_corporation_id_ok::setHomeStationId(const qint32 &home_station_id) {
    m_home_station_id = home_station_id;
    m_home_station_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_home_station_id_Set() const{
    return m_home_station_id_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_home_station_id_Valid() const{
    return m_home_station_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_ok::getMemberCount() const {
    return m_member_count;
}
void OAIGet_corporations_corporation_id_ok::setMemberCount(const qint32 &member_count) {
    m_member_count = member_count;
    m_member_count_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_member_count_Set() const{
    return m_member_count_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_member_count_Valid() const{
    return m_member_count_isValid;
}

QString OAIGet_corporations_corporation_id_ok::getName() const {
    return m_name;
}
void OAIGet_corporations_corporation_id_ok::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_name_Valid() const{
    return m_name_isValid;
}

qint64 OAIGet_corporations_corporation_id_ok::getShares() const {
    return m_shares;
}
void OAIGet_corporations_corporation_id_ok::setShares(const qint64 &shares) {
    m_shares = shares;
    m_shares_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_shares_Set() const{
    return m_shares_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_shares_Valid() const{
    return m_shares_isValid;
}

float OAIGet_corporations_corporation_id_ok::getTaxRate() const {
    return m_tax_rate;
}
void OAIGet_corporations_corporation_id_ok::setTaxRate(const float &tax_rate) {
    m_tax_rate = tax_rate;
    m_tax_rate_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_tax_rate_Set() const{
    return m_tax_rate_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_tax_rate_Valid() const{
    return m_tax_rate_isValid;
}

QString OAIGet_corporations_corporation_id_ok::getTicker() const {
    return m_ticker;
}
void OAIGet_corporations_corporation_id_ok::setTicker(const QString &ticker) {
    m_ticker = ticker;
    m_ticker_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_ticker_Set() const{
    return m_ticker_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_ticker_Valid() const{
    return m_ticker_isValid;
}

QString OAIGet_corporations_corporation_id_ok::getUrl() const {
    return m_url;
}
void OAIGet_corporations_corporation_id_ok::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_url_Set() const{
    return m_url_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIGet_corporations_corporation_id_ok::isWarEligible() const {
    return m_war_eligible;
}
void OAIGet_corporations_corporation_id_ok::setWarEligible(const bool &war_eligible) {
    m_war_eligible = war_eligible;
    m_war_eligible_isSet = true;
}

bool OAIGet_corporations_corporation_id_ok::is_war_eligible_Set() const{
    return m_war_eligible_isSet;
}

bool OAIGet_corporations_corporation_id_ok::is_war_eligible_Valid() const{
    return m_war_eligible_isValid;
}

bool OAIGet_corporations_corporation_id_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alliance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ceo_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creator_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_founded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_faction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_station_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shares_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ticker_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_war_eligible_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_corporations_corporation_id_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ceo_id_isValid && m_creator_id_isValid && m_member_count_isValid && m_name_isValid && m_tax_rate_isValid && m_ticker_isValid && true;
}

} // namespace OpenAPI
