/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_wars_war_id_aggressor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_wars_war_id_aggressor::OAIGet_wars_war_id_aggressor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_wars_war_id_aggressor::OAIGet_wars_war_id_aggressor() {
    this->initializeModel();
}

OAIGet_wars_war_id_aggressor::~OAIGet_wars_war_id_aggressor() {}

void OAIGet_wars_war_id_aggressor::initializeModel() {

    m_alliance_id_isSet = false;
    m_alliance_id_isValid = false;

    m_corporation_id_isSet = false;
    m_corporation_id_isValid = false;

    m_isk_destroyed_isSet = false;
    m_isk_destroyed_isValid = false;

    m_ships_killed_isSet = false;
    m_ships_killed_isValid = false;
}

void OAIGet_wars_war_id_aggressor::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_wars_war_id_aggressor::fromJsonObject(QJsonObject json) {

    m_alliance_id_isValid = ::OpenAPI::fromJsonValue(m_alliance_id, json[QString("alliance_id")]);
    m_alliance_id_isSet = !json[QString("alliance_id")].isNull() && m_alliance_id_isValid;

    m_corporation_id_isValid = ::OpenAPI::fromJsonValue(m_corporation_id, json[QString("corporation_id")]);
    m_corporation_id_isSet = !json[QString("corporation_id")].isNull() && m_corporation_id_isValid;

    m_isk_destroyed_isValid = ::OpenAPI::fromJsonValue(m_isk_destroyed, json[QString("isk_destroyed")]);
    m_isk_destroyed_isSet = !json[QString("isk_destroyed")].isNull() && m_isk_destroyed_isValid;

    m_ships_killed_isValid = ::OpenAPI::fromJsonValue(m_ships_killed, json[QString("ships_killed")]);
    m_ships_killed_isSet = !json[QString("ships_killed")].isNull() && m_ships_killed_isValid;
}

QString OAIGet_wars_war_id_aggressor::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_wars_war_id_aggressor::asJsonObject() const {
    QJsonObject obj;
    if (m_alliance_id_isSet) {
        obj.insert(QString("alliance_id"), ::OpenAPI::toJsonValue(m_alliance_id));
    }
    if (m_corporation_id_isSet) {
        obj.insert(QString("corporation_id"), ::OpenAPI::toJsonValue(m_corporation_id));
    }
    if (m_isk_destroyed_isSet) {
        obj.insert(QString("isk_destroyed"), ::OpenAPI::toJsonValue(m_isk_destroyed));
    }
    if (m_ships_killed_isSet) {
        obj.insert(QString("ships_killed"), ::OpenAPI::toJsonValue(m_ships_killed));
    }
    return obj;
}

qint32 OAIGet_wars_war_id_aggressor::getAllianceId() const {
    return m_alliance_id;
}
void OAIGet_wars_war_id_aggressor::setAllianceId(const qint32 &alliance_id) {
    m_alliance_id = alliance_id;
    m_alliance_id_isSet = true;
}

bool OAIGet_wars_war_id_aggressor::is_alliance_id_Set() const{
    return m_alliance_id_isSet;
}

bool OAIGet_wars_war_id_aggressor::is_alliance_id_Valid() const{
    return m_alliance_id_isValid;
}

qint32 OAIGet_wars_war_id_aggressor::getCorporationId() const {
    return m_corporation_id;
}
void OAIGet_wars_war_id_aggressor::setCorporationId(const qint32 &corporation_id) {
    m_corporation_id = corporation_id;
    m_corporation_id_isSet = true;
}

bool OAIGet_wars_war_id_aggressor::is_corporation_id_Set() const{
    return m_corporation_id_isSet;
}

bool OAIGet_wars_war_id_aggressor::is_corporation_id_Valid() const{
    return m_corporation_id_isValid;
}

float OAIGet_wars_war_id_aggressor::getIskDestroyed() const {
    return m_isk_destroyed;
}
void OAIGet_wars_war_id_aggressor::setIskDestroyed(const float &isk_destroyed) {
    m_isk_destroyed = isk_destroyed;
    m_isk_destroyed_isSet = true;
}

bool OAIGet_wars_war_id_aggressor::is_isk_destroyed_Set() const{
    return m_isk_destroyed_isSet;
}

bool OAIGet_wars_war_id_aggressor::is_isk_destroyed_Valid() const{
    return m_isk_destroyed_isValid;
}

qint32 OAIGet_wars_war_id_aggressor::getShipsKilled() const {
    return m_ships_killed;
}
void OAIGet_wars_war_id_aggressor::setShipsKilled(const qint32 &ships_killed) {
    m_ships_killed = ships_killed;
    m_ships_killed_isSet = true;
}

bool OAIGet_wars_war_id_aggressor::is_ships_killed_Set() const{
    return m_ships_killed_isSet;
}

bool OAIGet_wars_war_id_aggressor::is_ships_killed_Valid() const{
    return m_ships_killed_isValid;
}

bool OAIGet_wars_war_id_aggressor::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alliance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_corporation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_isk_destroyed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ships_killed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_wars_war_id_aggressor::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_isk_destroyed_isValid && m_ships_killed_isValid && true;
}

} // namespace OpenAPI
