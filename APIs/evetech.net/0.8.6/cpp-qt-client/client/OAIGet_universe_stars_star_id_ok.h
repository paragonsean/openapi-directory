/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_universe_stars_star_id_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_universe_stars_star_id_ok_H
#define OAIGet_universe_stars_star_id_ok_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_universe_stars_star_id_ok : public OAIObject {
public:
    OAIGet_universe_stars_star_id_ok();
    OAIGet_universe_stars_star_id_ok(QString json);
    ~OAIGet_universe_stars_star_id_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAge() const;
    void setAge(const qint64 &age);
    bool is_age_Set() const;
    bool is_age_Valid() const;

    float getLuminosity() const;
    void setLuminosity(const float &luminosity);
    bool is_luminosity_Set() const;
    bool is_luminosity_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getRadius() const;
    void setRadius(const qint64 &radius);
    bool is_radius_Set() const;
    bool is_radius_Valid() const;

    qint32 getSolarSystemId() const;
    void setSolarSystemId(const qint32 &solar_system_id);
    bool is_solar_system_id_Set() const;
    bool is_solar_system_id_Valid() const;

    QString getSpectralClass() const;
    void setSpectralClass(const QString &spectral_class);
    bool is_spectral_class_Set() const;
    bool is_spectral_class_Valid() const;

    qint32 getTemperature() const;
    void setTemperature(const qint32 &temperature);
    bool is_temperature_Set() const;
    bool is_temperature_Valid() const;

    qint32 getTypeId() const;
    void setTypeId(const qint32 &type_id);
    bool is_type_id_Set() const;
    bool is_type_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_age;
    bool m_age_isSet;
    bool m_age_isValid;

    float m_luminosity;
    bool m_luminosity_isSet;
    bool m_luminosity_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_radius;
    bool m_radius_isSet;
    bool m_radius_isValid;

    qint32 m_solar_system_id;
    bool m_solar_system_id_isSet;
    bool m_solar_system_id_isValid;

    QString m_spectral_class;
    bool m_spectral_class_isSet;
    bool m_spectral_class_isValid;

    qint32 m_temperature;
    bool m_temperature_isSet;
    bool m_temperature_isValid;

    qint32 m_type_id;
    bool m_type_id_isSet;
    bool m_type_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_universe_stars_star_id_ok)

#endif // OAIGet_universe_stars_star_id_ok_H
