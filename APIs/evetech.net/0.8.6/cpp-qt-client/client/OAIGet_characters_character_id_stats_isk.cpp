/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_stats_isk.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_stats_isk::OAIGet_characters_character_id_stats_isk(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_stats_isk::OAIGet_characters_character_id_stats_isk() {
    this->initializeModel();
}

OAIGet_characters_character_id_stats_isk::~OAIGet_characters_character_id_stats_isk() {}

void OAIGet_characters_character_id_stats_isk::initializeModel() {

    m_in_isSet = false;
    m_in_isValid = false;

    m_out_isSet = false;
    m_out_isValid = false;
}

void OAIGet_characters_character_id_stats_isk::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_stats_isk::fromJsonObject(QJsonObject json) {

    m_in_isValid = ::OpenAPI::fromJsonValue(m_in, json[QString("in")]);
    m_in_isSet = !json[QString("in")].isNull() && m_in_isValid;

    m_out_isValid = ::OpenAPI::fromJsonValue(m_out, json[QString("out")]);
    m_out_isSet = !json[QString("out")].isNull() && m_out_isValid;
}

QString OAIGet_characters_character_id_stats_isk::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_stats_isk::asJsonObject() const {
    QJsonObject obj;
    if (m_in_isSet) {
        obj.insert(QString("in"), ::OpenAPI::toJsonValue(m_in));
    }
    if (m_out_isSet) {
        obj.insert(QString("out"), ::OpenAPI::toJsonValue(m_out));
    }
    return obj;
}

qint64 OAIGet_characters_character_id_stats_isk::getIn() const {
    return m_in;
}
void OAIGet_characters_character_id_stats_isk::setIn(const qint64 &in) {
    m_in = in;
    m_in_isSet = true;
}

bool OAIGet_characters_character_id_stats_isk::is_in_Set() const{
    return m_in_isSet;
}

bool OAIGet_characters_character_id_stats_isk::is_in_Valid() const{
    return m_in_isValid;
}

qint64 OAIGet_characters_character_id_stats_isk::getOut() const {
    return m_out;
}
void OAIGet_characters_character_id_stats_isk::setOut(const qint64 &out) {
    m_out = out;
    m_out_isSet = true;
}

bool OAIGet_characters_character_id_stats_isk::is_out_Set() const{
    return m_out_isSet;
}

bool OAIGet_characters_character_id_stats_isk::is_out_Valid() const{
    return m_out_isValid;
}

bool OAIGet_characters_character_id_stats_isk::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_in_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_out_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_stats_isk::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
