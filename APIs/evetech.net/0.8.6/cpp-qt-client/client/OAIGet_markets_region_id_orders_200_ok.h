/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_markets_region_id_orders_200_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_markets_region_id_orders_200_ok_H
#define OAIGet_markets_region_id_orders_200_ok_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_markets_region_id_orders_200_ok : public OAIObject {
public:
    OAIGet_markets_region_id_orders_200_ok();
    OAIGet_markets_region_id_orders_200_ok(QString json);
    ~OAIGet_markets_region_id_orders_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    bool isIsBuyOrder() const;
    void setIsBuyOrder(const bool &is_buy_order);
    bool is_is_buy_order_Set() const;
    bool is_is_buy_order_Valid() const;

    QDateTime getIssued() const;
    void setIssued(const QDateTime &issued);
    bool is_issued_Set() const;
    bool is_issued_Valid() const;

    qint64 getLocationId() const;
    void setLocationId(const qint64 &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    qint32 getMinVolume() const;
    void setMinVolume(const qint32 &min_volume);
    bool is_min_volume_Set() const;
    bool is_min_volume_Valid() const;

    qint64 getOrderId() const;
    void setOrderId(const qint64 &order_id);
    bool is_order_id_Set() const;
    bool is_order_id_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getRange() const;
    void setRange(const QString &range);
    bool is_range_Set() const;
    bool is_range_Valid() const;

    qint32 getSystemId() const;
    void setSystemId(const qint32 &system_id);
    bool is_system_id_Set() const;
    bool is_system_id_Valid() const;

    qint32 getTypeId() const;
    void setTypeId(const qint32 &type_id);
    bool is_type_id_Set() const;
    bool is_type_id_Valid() const;

    qint32 getVolumeRemain() const;
    void setVolumeRemain(const qint32 &volume_remain);
    bool is_volume_remain_Set() const;
    bool is_volume_remain_Valid() const;

    qint32 getVolumeTotal() const;
    void setVolumeTotal(const qint32 &volume_total);
    bool is_volume_total_Set() const;
    bool is_volume_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    bool m_is_buy_order;
    bool m_is_buy_order_isSet;
    bool m_is_buy_order_isValid;

    QDateTime m_issued;
    bool m_issued_isSet;
    bool m_issued_isValid;

    qint64 m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    qint32 m_min_volume;
    bool m_min_volume_isSet;
    bool m_min_volume_isValid;

    qint64 m_order_id;
    bool m_order_id_isSet;
    bool m_order_id_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_range;
    bool m_range_isSet;
    bool m_range_isValid;

    qint32 m_system_id;
    bool m_system_id_isSet;
    bool m_system_id_isValid;

    qint32 m_type_id;
    bool m_type_id_isSet;
    bool m_type_id_isValid;

    qint32 m_volume_remain;
    bool m_volume_remain_isSet;
    bool m_volume_remain_isValid;

    qint32 m_volume_total;
    bool m_volume_total_isSet;
    bool m_volume_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_markets_region_id_orders_200_ok)

#endif // OAIGet_markets_region_id_orders_200_ok_H
