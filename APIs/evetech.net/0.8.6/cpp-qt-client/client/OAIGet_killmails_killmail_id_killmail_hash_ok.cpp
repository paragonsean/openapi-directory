/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_killmails_killmail_id_killmail_hash_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_killmails_killmail_id_killmail_hash_ok::OAIGet_killmails_killmail_id_killmail_hash_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_killmails_killmail_id_killmail_hash_ok::OAIGet_killmails_killmail_id_killmail_hash_ok() {
    this->initializeModel();
}

OAIGet_killmails_killmail_id_killmail_hash_ok::~OAIGet_killmails_killmail_id_killmail_hash_ok() {}

void OAIGet_killmails_killmail_id_killmail_hash_ok::initializeModel() {

    m_attackers_isSet = false;
    m_attackers_isValid = false;

    m_killmail_id_isSet = false;
    m_killmail_id_isValid = false;

    m_killmail_time_isSet = false;
    m_killmail_time_isValid = false;

    m_moon_id_isSet = false;
    m_moon_id_isValid = false;

    m_solar_system_id_isSet = false;
    m_solar_system_id_isValid = false;

    m_victim_isSet = false;
    m_victim_isValid = false;

    m_war_id_isSet = false;
    m_war_id_isValid = false;
}

void OAIGet_killmails_killmail_id_killmail_hash_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_killmails_killmail_id_killmail_hash_ok::fromJsonObject(QJsonObject json) {

    m_attackers_isValid = ::OpenAPI::fromJsonValue(m_attackers, json[QString("attackers")]);
    m_attackers_isSet = !json[QString("attackers")].isNull() && m_attackers_isValid;

    m_killmail_id_isValid = ::OpenAPI::fromJsonValue(m_killmail_id, json[QString("killmail_id")]);
    m_killmail_id_isSet = !json[QString("killmail_id")].isNull() && m_killmail_id_isValid;

    m_killmail_time_isValid = ::OpenAPI::fromJsonValue(m_killmail_time, json[QString("killmail_time")]);
    m_killmail_time_isSet = !json[QString("killmail_time")].isNull() && m_killmail_time_isValid;

    m_moon_id_isValid = ::OpenAPI::fromJsonValue(m_moon_id, json[QString("moon_id")]);
    m_moon_id_isSet = !json[QString("moon_id")].isNull() && m_moon_id_isValid;

    m_solar_system_id_isValid = ::OpenAPI::fromJsonValue(m_solar_system_id, json[QString("solar_system_id")]);
    m_solar_system_id_isSet = !json[QString("solar_system_id")].isNull() && m_solar_system_id_isValid;

    m_victim_isValid = ::OpenAPI::fromJsonValue(m_victim, json[QString("victim")]);
    m_victim_isSet = !json[QString("victim")].isNull() && m_victim_isValid;

    m_war_id_isValid = ::OpenAPI::fromJsonValue(m_war_id, json[QString("war_id")]);
    m_war_id_isSet = !json[QString("war_id")].isNull() && m_war_id_isValid;
}

QString OAIGet_killmails_killmail_id_killmail_hash_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_killmails_killmail_id_killmail_hash_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_attackers.size() > 0) {
        obj.insert(QString("attackers"), ::OpenAPI::toJsonValue(m_attackers));
    }
    if (m_killmail_id_isSet) {
        obj.insert(QString("killmail_id"), ::OpenAPI::toJsonValue(m_killmail_id));
    }
    if (m_killmail_time_isSet) {
        obj.insert(QString("killmail_time"), ::OpenAPI::toJsonValue(m_killmail_time));
    }
    if (m_moon_id_isSet) {
        obj.insert(QString("moon_id"), ::OpenAPI::toJsonValue(m_moon_id));
    }
    if (m_solar_system_id_isSet) {
        obj.insert(QString("solar_system_id"), ::OpenAPI::toJsonValue(m_solar_system_id));
    }
    if (m_victim.isSet()) {
        obj.insert(QString("victim"), ::OpenAPI::toJsonValue(m_victim));
    }
    if (m_war_id_isSet) {
        obj.insert(QString("war_id"), ::OpenAPI::toJsonValue(m_war_id));
    }
    return obj;
}

QList<OAIGet_killmails_killmail_id_killmail_hash_attacker> OAIGet_killmails_killmail_id_killmail_hash_ok::getAttackers() const {
    return m_attackers;
}
void OAIGet_killmails_killmail_id_killmail_hash_ok::setAttackers(const QList<OAIGet_killmails_killmail_id_killmail_hash_attacker> &attackers) {
    m_attackers = attackers;
    m_attackers_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_attackers_Set() const{
    return m_attackers_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_attackers_Valid() const{
    return m_attackers_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_ok::getKillmailId() const {
    return m_killmail_id;
}
void OAIGet_killmails_killmail_id_killmail_hash_ok::setKillmailId(const qint32 &killmail_id) {
    m_killmail_id = killmail_id;
    m_killmail_id_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_killmail_id_Set() const{
    return m_killmail_id_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_killmail_id_Valid() const{
    return m_killmail_id_isValid;
}

QDateTime OAIGet_killmails_killmail_id_killmail_hash_ok::getKillmailTime() const {
    return m_killmail_time;
}
void OAIGet_killmails_killmail_id_killmail_hash_ok::setKillmailTime(const QDateTime &killmail_time) {
    m_killmail_time = killmail_time;
    m_killmail_time_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_killmail_time_Set() const{
    return m_killmail_time_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_killmail_time_Valid() const{
    return m_killmail_time_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_ok::getMoonId() const {
    return m_moon_id;
}
void OAIGet_killmails_killmail_id_killmail_hash_ok::setMoonId(const qint32 &moon_id) {
    m_moon_id = moon_id;
    m_moon_id_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_moon_id_Set() const{
    return m_moon_id_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_moon_id_Valid() const{
    return m_moon_id_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_ok::getSolarSystemId() const {
    return m_solar_system_id;
}
void OAIGet_killmails_killmail_id_killmail_hash_ok::setSolarSystemId(const qint32 &solar_system_id) {
    m_solar_system_id = solar_system_id;
    m_solar_system_id_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_solar_system_id_Set() const{
    return m_solar_system_id_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_solar_system_id_Valid() const{
    return m_solar_system_id_isValid;
}

OAIGet_killmails_killmail_id_killmail_hash_victim OAIGet_killmails_killmail_id_killmail_hash_ok::getVictim() const {
    return m_victim;
}
void OAIGet_killmails_killmail_id_killmail_hash_ok::setVictim(const OAIGet_killmails_killmail_id_killmail_hash_victim &victim) {
    m_victim = victim;
    m_victim_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_victim_Set() const{
    return m_victim_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_victim_Valid() const{
    return m_victim_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_ok::getWarId() const {
    return m_war_id;
}
void OAIGet_killmails_killmail_id_killmail_hash_ok::setWarId(const qint32 &war_id) {
    m_war_id = war_id;
    m_war_id_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_war_id_Set() const{
    return m_war_id_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::is_war_id_Valid() const{
    return m_war_id_isValid;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attackers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_killmail_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_killmail_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_moon_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_solar_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_victim.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_war_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_killmails_killmail_id_killmail_hash_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_attackers_isValid && m_killmail_id_isValid && m_killmail_time_isValid && m_solar_system_id_isValid && m_victim_isValid && true;
}

} // namespace OpenAPI
