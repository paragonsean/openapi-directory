/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_universe_types_type_id_dogma_effect.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_universe_types_type_id_dogma_effect::OAIGet_universe_types_type_id_dogma_effect(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_universe_types_type_id_dogma_effect::OAIGet_universe_types_type_id_dogma_effect() {
    this->initializeModel();
}

OAIGet_universe_types_type_id_dogma_effect::~OAIGet_universe_types_type_id_dogma_effect() {}

void OAIGet_universe_types_type_id_dogma_effect::initializeModel() {

    m_effect_id_isSet = false;
    m_effect_id_isValid = false;

    m_is_default_isSet = false;
    m_is_default_isValid = false;
}

void OAIGet_universe_types_type_id_dogma_effect::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_universe_types_type_id_dogma_effect::fromJsonObject(QJsonObject json) {

    m_effect_id_isValid = ::OpenAPI::fromJsonValue(m_effect_id, json[QString("effect_id")]);
    m_effect_id_isSet = !json[QString("effect_id")].isNull() && m_effect_id_isValid;

    m_is_default_isValid = ::OpenAPI::fromJsonValue(m_is_default, json[QString("is_default")]);
    m_is_default_isSet = !json[QString("is_default")].isNull() && m_is_default_isValid;
}

QString OAIGet_universe_types_type_id_dogma_effect::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_universe_types_type_id_dogma_effect::asJsonObject() const {
    QJsonObject obj;
    if (m_effect_id_isSet) {
        obj.insert(QString("effect_id"), ::OpenAPI::toJsonValue(m_effect_id));
    }
    if (m_is_default_isSet) {
        obj.insert(QString("is_default"), ::OpenAPI::toJsonValue(m_is_default));
    }
    return obj;
}

qint32 OAIGet_universe_types_type_id_dogma_effect::getEffectId() const {
    return m_effect_id;
}
void OAIGet_universe_types_type_id_dogma_effect::setEffectId(const qint32 &effect_id) {
    m_effect_id = effect_id;
    m_effect_id_isSet = true;
}

bool OAIGet_universe_types_type_id_dogma_effect::is_effect_id_Set() const{
    return m_effect_id_isSet;
}

bool OAIGet_universe_types_type_id_dogma_effect::is_effect_id_Valid() const{
    return m_effect_id_isValid;
}

bool OAIGet_universe_types_type_id_dogma_effect::isIsDefault() const {
    return m_is_default;
}
void OAIGet_universe_types_type_id_dogma_effect::setIsDefault(const bool &is_default) {
    m_is_default = is_default;
    m_is_default_isSet = true;
}

bool OAIGet_universe_types_type_id_dogma_effect::is_is_default_Set() const{
    return m_is_default_isSet;
}

bool OAIGet_universe_types_type_id_dogma_effect::is_is_default_Valid() const{
    return m_is_default_isValid;
}

bool OAIGet_universe_types_type_id_dogma_effect::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_effect_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_default_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_universe_types_type_id_dogma_effect::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_effect_id_isValid && m_is_default_isValid && true;
}

} // namespace OpenAPI
