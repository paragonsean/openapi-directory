/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_characters_character_id_planets_planet_id_extractor_details.h
 *
 * extractor_details object
 */

#ifndef OAIGet_characters_character_id_planets_planet_id_extractor_details_H
#define OAIGet_characters_character_id_planets_planet_id_extractor_details_H

#include <QJsonObject>

#include "OAIGet_characters_character_id_planets_planet_id_head.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGet_characters_character_id_planets_planet_id_head;

class OAIGet_characters_character_id_planets_planet_id_extractor_details : public OAIObject {
public:
    OAIGet_characters_character_id_planets_planet_id_extractor_details();
    OAIGet_characters_character_id_planets_planet_id_extractor_details(QString json);
    ~OAIGet_characters_character_id_planets_planet_id_extractor_details() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCycleTime() const;
    void setCycleTime(const qint32 &cycle_time);
    bool is_cycle_time_Set() const;
    bool is_cycle_time_Valid() const;

    float getHeadRadius() const;
    void setHeadRadius(const float &head_radius);
    bool is_head_radius_Set() const;
    bool is_head_radius_Valid() const;

    QList<OAIGet_characters_character_id_planets_planet_id_head> getHeads() const;
    void setHeads(const QList<OAIGet_characters_character_id_planets_planet_id_head> &heads);
    bool is_heads_Set() const;
    bool is_heads_Valid() const;

    qint32 getProductTypeId() const;
    void setProductTypeId(const qint32 &product_type_id);
    bool is_product_type_id_Set() const;
    bool is_product_type_id_Valid() const;

    qint32 getQtyPerCycle() const;
    void setQtyPerCycle(const qint32 &qty_per_cycle);
    bool is_qty_per_cycle_Set() const;
    bool is_qty_per_cycle_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_cycle_time;
    bool m_cycle_time_isSet;
    bool m_cycle_time_isValid;

    float m_head_radius;
    bool m_head_radius_isSet;
    bool m_head_radius_isValid;

    QList<OAIGet_characters_character_id_planets_planet_id_head> m_heads;
    bool m_heads_isSet;
    bool m_heads_isValid;

    qint32 m_product_type_id;
    bool m_product_type_id_isSet;
    bool m_product_type_id_isValid;

    qint32 m_qty_per_cycle;
    bool m_qty_per_cycle_isSet;
    bool m_qty_per_cycle_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_characters_character_id_planets_planet_id_extractor_details)

#endif // OAIGet_characters_character_id_planets_planet_id_extractor_details_H
