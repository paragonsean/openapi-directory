/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_corporations_corporation_id_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_corporations_corporation_id_ok_H
#define OAIGet_corporations_corporation_id_ok_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_corporations_corporation_id_ok : public OAIObject {
public:
    OAIGet_corporations_corporation_id_ok();
    OAIGet_corporations_corporation_id_ok(QString json);
    ~OAIGet_corporations_corporation_id_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAllianceId() const;
    void setAllianceId(const qint32 &alliance_id);
    bool is_alliance_id_Set() const;
    bool is_alliance_id_Valid() const;

    qint32 getCeoId() const;
    void setCeoId(const qint32 &ceo_id);
    bool is_ceo_id_Set() const;
    bool is_ceo_id_Valid() const;

    qint32 getCreatorId() const;
    void setCreatorId(const qint32 &creator_id);
    bool is_creator_id_Set() const;
    bool is_creator_id_Valid() const;

    QDateTime getDateFounded() const;
    void setDateFounded(const QDateTime &date_founded);
    bool is_date_founded_Set() const;
    bool is_date_founded_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getFactionId() const;
    void setFactionId(const qint32 &faction_id);
    bool is_faction_id_Set() const;
    bool is_faction_id_Valid() const;

    qint32 getHomeStationId() const;
    void setHomeStationId(const qint32 &home_station_id);
    bool is_home_station_id_Set() const;
    bool is_home_station_id_Valid() const;

    qint32 getMemberCount() const;
    void setMemberCount(const qint32 &member_count);
    bool is_member_count_Set() const;
    bool is_member_count_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getShares() const;
    void setShares(const qint64 &shares);
    bool is_shares_Set() const;
    bool is_shares_Valid() const;

    float getTaxRate() const;
    void setTaxRate(const float &tax_rate);
    bool is_tax_rate_Set() const;
    bool is_tax_rate_Valid() const;

    QString getTicker() const;
    void setTicker(const QString &ticker);
    bool is_ticker_Set() const;
    bool is_ticker_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    bool isWarEligible() const;
    void setWarEligible(const bool &war_eligible);
    bool is_war_eligible_Set() const;
    bool is_war_eligible_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_alliance_id;
    bool m_alliance_id_isSet;
    bool m_alliance_id_isValid;

    qint32 m_ceo_id;
    bool m_ceo_id_isSet;
    bool m_ceo_id_isValid;

    qint32 m_creator_id;
    bool m_creator_id_isSet;
    bool m_creator_id_isValid;

    QDateTime m_date_founded;
    bool m_date_founded_isSet;
    bool m_date_founded_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_faction_id;
    bool m_faction_id_isSet;
    bool m_faction_id_isValid;

    qint32 m_home_station_id;
    bool m_home_station_id_isSet;
    bool m_home_station_id_isValid;

    qint32 m_member_count;
    bool m_member_count_isSet;
    bool m_member_count_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_shares;
    bool m_shares_isSet;
    bool m_shares_isValid;

    float m_tax_rate;
    bool m_tax_rate_isSet;
    bool m_tax_rate_isValid;

    QString m_ticker;
    bool m_ticker_isSet;
    bool m_ticker_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    bool m_war_eligible;
    bool m_war_eligible_isSet;
    bool m_war_eligible_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_corporations_corporation_id_ok)

#endif // OAIGet_corporations_corporation_id_ok_H
