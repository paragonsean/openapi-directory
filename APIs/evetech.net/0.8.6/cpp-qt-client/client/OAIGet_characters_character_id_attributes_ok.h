/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_characters_character_id_attributes_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_characters_character_id_attributes_ok_H
#define OAIGet_characters_character_id_attributes_ok_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_characters_character_id_attributes_ok : public OAIObject {
public:
    OAIGet_characters_character_id_attributes_ok();
    OAIGet_characters_character_id_attributes_ok(QString json);
    ~OAIGet_characters_character_id_attributes_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAccruedRemapCooldownDate() const;
    void setAccruedRemapCooldownDate(const QDateTime &accrued_remap_cooldown_date);
    bool is_accrued_remap_cooldown_date_Set() const;
    bool is_accrued_remap_cooldown_date_Valid() const;

    qint32 getBonusRemaps() const;
    void setBonusRemaps(const qint32 &bonus_remaps);
    bool is_bonus_remaps_Set() const;
    bool is_bonus_remaps_Valid() const;

    qint32 getCharisma() const;
    void setCharisma(const qint32 &charisma);
    bool is_charisma_Set() const;
    bool is_charisma_Valid() const;

    qint32 getIntelligence() const;
    void setIntelligence(const qint32 &intelligence);
    bool is_intelligence_Set() const;
    bool is_intelligence_Valid() const;

    QDateTime getLastRemapDate() const;
    void setLastRemapDate(const QDateTime &last_remap_date);
    bool is_last_remap_date_Set() const;
    bool is_last_remap_date_Valid() const;

    qint32 getMemory() const;
    void setMemory(const qint32 &memory);
    bool is_memory_Set() const;
    bool is_memory_Valid() const;

    qint32 getPerception() const;
    void setPerception(const qint32 &perception);
    bool is_perception_Set() const;
    bool is_perception_Valid() const;

    qint32 getWillpower() const;
    void setWillpower(const qint32 &willpower);
    bool is_willpower_Set() const;
    bool is_willpower_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_accrued_remap_cooldown_date;
    bool m_accrued_remap_cooldown_date_isSet;
    bool m_accrued_remap_cooldown_date_isValid;

    qint32 m_bonus_remaps;
    bool m_bonus_remaps_isSet;
    bool m_bonus_remaps_isValid;

    qint32 m_charisma;
    bool m_charisma_isSet;
    bool m_charisma_isValid;

    qint32 m_intelligence;
    bool m_intelligence_isSet;
    bool m_intelligence_isValid;

    QDateTime m_last_remap_date;
    bool m_last_remap_date_isSet;
    bool m_last_remap_date_isValid;

    qint32 m_memory;
    bool m_memory_isSet;
    bool m_memory_isValid;

    qint32 m_perception;
    bool m_perception_isSet;
    bool m_perception_isValid;

    qint32 m_willpower;
    bool m_willpower_isSet;
    bool m_willpower_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_characters_character_id_attributes_ok)

#endif // OAIGet_characters_character_id_attributes_ok_H
