/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_characters_character_id_planets_200_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_characters_character_id_planets_200_ok_H
#define OAIGet_characters_character_id_planets_200_ok_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_characters_character_id_planets_200_ok : public OAIObject {
public:
    OAIGet_characters_character_id_planets_200_ok();
    OAIGet_characters_character_id_planets_200_ok(QString json);
    ~OAIGet_characters_character_id_planets_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getLastUpdate() const;
    void setLastUpdate(const QDateTime &last_update);
    bool is_last_update_Set() const;
    bool is_last_update_Valid() const;

    qint32 getNumPins() const;
    void setNumPins(const qint32 &num_pins);
    bool is_num_pins_Set() const;
    bool is_num_pins_Valid() const;

    qint32 getOwnerId() const;
    void setOwnerId(const qint32 &owner_id);
    bool is_owner_id_Set() const;
    bool is_owner_id_Valid() const;

    qint32 getPlanetId() const;
    void setPlanetId(const qint32 &planet_id);
    bool is_planet_id_Set() const;
    bool is_planet_id_Valid() const;

    QString getPlanetType() const;
    void setPlanetType(const QString &planet_type);
    bool is_planet_type_Set() const;
    bool is_planet_type_Valid() const;

    qint32 getSolarSystemId() const;
    void setSolarSystemId(const qint32 &solar_system_id);
    bool is_solar_system_id_Set() const;
    bool is_solar_system_id_Valid() const;

    qint32 getUpgradeLevel() const;
    void setUpgradeLevel(const qint32 &upgrade_level);
    bool is_upgrade_level_Set() const;
    bool is_upgrade_level_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_last_update;
    bool m_last_update_isSet;
    bool m_last_update_isValid;

    qint32 m_num_pins;
    bool m_num_pins_isSet;
    bool m_num_pins_isValid;

    qint32 m_owner_id;
    bool m_owner_id_isSet;
    bool m_owner_id_isValid;

    qint32 m_planet_id;
    bool m_planet_id_isSet;
    bool m_planet_id_isValid;

    QString m_planet_type;
    bool m_planet_type_isSet;
    bool m_planet_type_isValid;

    qint32 m_solar_system_id;
    bool m_solar_system_id_isSet;
    bool m_solar_system_id_isValid;

    qint32 m_upgrade_level;
    bool m_upgrade_level_isSet;
    bool m_upgrade_level_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_characters_character_id_planets_200_ok)

#endif // OAIGet_characters_character_id_planets_200_ok_H
