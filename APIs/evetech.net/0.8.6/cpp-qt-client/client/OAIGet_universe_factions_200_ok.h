/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_universe_factions_200_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_universe_factions_200_ok_H
#define OAIGet_universe_factions_200_ok_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_universe_factions_200_ok : public OAIObject {
public:
    OAIGet_universe_factions_200_ok();
    OAIGet_universe_factions_200_ok(QString json);
    ~OAIGet_universe_factions_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCorporationId() const;
    void setCorporationId(const qint32 &corporation_id);
    bool is_corporation_id_Set() const;
    bool is_corporation_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getFactionId() const;
    void setFactionId(const qint32 &faction_id);
    bool is_faction_id_Set() const;
    bool is_faction_id_Valid() const;

    bool isIsUnique() const;
    void setIsUnique(const bool &is_unique);
    bool is_is_unique_Set() const;
    bool is_is_unique_Valid() const;

    qint32 getMilitiaCorporationId() const;
    void setMilitiaCorporationId(const qint32 &militia_corporation_id);
    bool is_militia_corporation_id_Set() const;
    bool is_militia_corporation_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    float getSizeFactor() const;
    void setSizeFactor(const float &size_factor);
    bool is_size_factor_Set() const;
    bool is_size_factor_Valid() const;

    qint32 getSolarSystemId() const;
    void setSolarSystemId(const qint32 &solar_system_id);
    bool is_solar_system_id_Set() const;
    bool is_solar_system_id_Valid() const;

    qint32 getStationCount() const;
    void setStationCount(const qint32 &station_count);
    bool is_station_count_Set() const;
    bool is_station_count_Valid() const;

    qint32 getStationSystemCount() const;
    void setStationSystemCount(const qint32 &station_system_count);
    bool is_station_system_count_Set() const;
    bool is_station_system_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_corporation_id;
    bool m_corporation_id_isSet;
    bool m_corporation_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_faction_id;
    bool m_faction_id_isSet;
    bool m_faction_id_isValid;

    bool m_is_unique;
    bool m_is_unique_isSet;
    bool m_is_unique_isValid;

    qint32 m_militia_corporation_id;
    bool m_militia_corporation_id_isSet;
    bool m_militia_corporation_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    float m_size_factor;
    bool m_size_factor_isSet;
    bool m_size_factor_isValid;

    qint32 m_solar_system_id;
    bool m_solar_system_id_isSet;
    bool m_solar_system_id_isValid;

    qint32 m_station_count;
    bool m_station_count_isSet;
    bool m_station_count_isValid;

    qint32 m_station_system_count;
    bool m_station_system_count_isSet;
    bool m_station_system_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_universe_factions_200_ok)

#endif // OAIGet_universe_factions_200_ok_H
