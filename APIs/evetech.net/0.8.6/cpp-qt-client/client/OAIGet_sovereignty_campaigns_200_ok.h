/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_sovereignty_campaigns_200_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_sovereignty_campaigns_200_ok_H
#define OAIGet_sovereignty_campaigns_200_ok_H

#include <QJsonObject>

#include "OAIGet_sovereignty_campaigns_participant.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGet_sovereignty_campaigns_participant;

class OAIGet_sovereignty_campaigns_200_ok : public OAIObject {
public:
    OAIGet_sovereignty_campaigns_200_ok();
    OAIGet_sovereignty_campaigns_200_ok(QString json);
    ~OAIGet_sovereignty_campaigns_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getAttackersScore() const;
    void setAttackersScore(const float &attackers_score);
    bool is_attackers_score_Set() const;
    bool is_attackers_score_Valid() const;

    qint32 getCampaignId() const;
    void setCampaignId(const qint32 &campaign_id);
    bool is_campaign_id_Set() const;
    bool is_campaign_id_Valid() const;

    qint32 getConstellationId() const;
    void setConstellationId(const qint32 &constellation_id);
    bool is_constellation_id_Set() const;
    bool is_constellation_id_Valid() const;

    qint32 getDefenderId() const;
    void setDefenderId(const qint32 &defender_id);
    bool is_defender_id_Set() const;
    bool is_defender_id_Valid() const;

    float getDefenderScore() const;
    void setDefenderScore(const float &defender_score);
    bool is_defender_score_Set() const;
    bool is_defender_score_Valid() const;

    QString getEventType() const;
    void setEventType(const QString &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    QList<OAIGet_sovereignty_campaigns_participant> getParticipants() const;
    void setParticipants(const QList<OAIGet_sovereignty_campaigns_participant> &participants);
    bool is_participants_Set() const;
    bool is_participants_Valid() const;

    qint32 getSolarSystemId() const;
    void setSolarSystemId(const qint32 &solar_system_id);
    bool is_solar_system_id_Set() const;
    bool is_solar_system_id_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    qint64 getStructureId() const;
    void setStructureId(const qint64 &structure_id);
    bool is_structure_id_Set() const;
    bool is_structure_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_attackers_score;
    bool m_attackers_score_isSet;
    bool m_attackers_score_isValid;

    qint32 m_campaign_id;
    bool m_campaign_id_isSet;
    bool m_campaign_id_isValid;

    qint32 m_constellation_id;
    bool m_constellation_id_isSet;
    bool m_constellation_id_isValid;

    qint32 m_defender_id;
    bool m_defender_id_isSet;
    bool m_defender_id_isValid;

    float m_defender_score;
    bool m_defender_score_isSet;
    bool m_defender_score_isValid;

    QString m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    QList<OAIGet_sovereignty_campaigns_participant> m_participants;
    bool m_participants_isSet;
    bool m_participants_isValid;

    qint32 m_solar_system_id;
    bool m_solar_system_id_isSet;
    bool m_solar_system_id_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    qint64 m_structure_id;
    bool m_structure_id_isSet;
    bool m_structure_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_sovereignty_campaigns_200_ok)

#endif // OAIGet_sovereignty_campaigns_200_ok_H
