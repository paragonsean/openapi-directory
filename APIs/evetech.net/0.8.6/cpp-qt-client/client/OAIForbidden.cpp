/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIForbidden.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIForbidden::OAIForbidden(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIForbidden::OAIForbidden() {
    this->initializeModel();
}

OAIForbidden::~OAIForbidden() {}

void OAIForbidden::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;

    m_sso_status_isSet = false;
    m_sso_status_isValid = false;
}

void OAIForbidden::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIForbidden::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_sso_status_isValid = ::OpenAPI::fromJsonValue(m_sso_status, json[QString("sso_status")]);
    m_sso_status_isSet = !json[QString("sso_status")].isNull() && m_sso_status_isValid;
}

QString OAIForbidden::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIForbidden::asJsonObject() const {
    QJsonObject obj;
    if (m_error_isSet) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_sso_status_isSet) {
        obj.insert(QString("sso_status"), ::OpenAPI::toJsonValue(m_sso_status));
    }
    return obj;
}

QString OAIForbidden::getError() const {
    return m_error;
}
void OAIForbidden::setError(const QString &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIForbidden::is_error_Set() const{
    return m_error_isSet;
}

bool OAIForbidden::is_error_Valid() const{
    return m_error_isValid;
}

qint32 OAIForbidden::getSsoStatus() const {
    return m_sso_status;
}
void OAIForbidden::setSsoStatus(const qint32 &sso_status) {
    m_sso_status = sso_status;
    m_sso_status_isSet = true;
}

bool OAIForbidden::is_sso_status_Set() const{
    return m_sso_status_isSet;
}

bool OAIForbidden::is_sso_status_Valid() const{
    return m_sso_status_isValid;
}

bool OAIForbidden::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sso_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIForbidden::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_error_isValid && true;
}

} // namespace OpenAPI
