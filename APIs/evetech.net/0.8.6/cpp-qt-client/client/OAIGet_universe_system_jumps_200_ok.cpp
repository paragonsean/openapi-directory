/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_universe_system_jumps_200_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_universe_system_jumps_200_ok::OAIGet_universe_system_jumps_200_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_universe_system_jumps_200_ok::OAIGet_universe_system_jumps_200_ok() {
    this->initializeModel();
}

OAIGet_universe_system_jumps_200_ok::~OAIGet_universe_system_jumps_200_ok() {}

void OAIGet_universe_system_jumps_200_ok::initializeModel() {

    m_ship_jumps_isSet = false;
    m_ship_jumps_isValid = false;

    m_system_id_isSet = false;
    m_system_id_isValid = false;
}

void OAIGet_universe_system_jumps_200_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_universe_system_jumps_200_ok::fromJsonObject(QJsonObject json) {

    m_ship_jumps_isValid = ::OpenAPI::fromJsonValue(m_ship_jumps, json[QString("ship_jumps")]);
    m_ship_jumps_isSet = !json[QString("ship_jumps")].isNull() && m_ship_jumps_isValid;

    m_system_id_isValid = ::OpenAPI::fromJsonValue(m_system_id, json[QString("system_id")]);
    m_system_id_isSet = !json[QString("system_id")].isNull() && m_system_id_isValid;
}

QString OAIGet_universe_system_jumps_200_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_universe_system_jumps_200_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_ship_jumps_isSet) {
        obj.insert(QString("ship_jumps"), ::OpenAPI::toJsonValue(m_ship_jumps));
    }
    if (m_system_id_isSet) {
        obj.insert(QString("system_id"), ::OpenAPI::toJsonValue(m_system_id));
    }
    return obj;
}

qint32 OAIGet_universe_system_jumps_200_ok::getShipJumps() const {
    return m_ship_jumps;
}
void OAIGet_universe_system_jumps_200_ok::setShipJumps(const qint32 &ship_jumps) {
    m_ship_jumps = ship_jumps;
    m_ship_jumps_isSet = true;
}

bool OAIGet_universe_system_jumps_200_ok::is_ship_jumps_Set() const{
    return m_ship_jumps_isSet;
}

bool OAIGet_universe_system_jumps_200_ok::is_ship_jumps_Valid() const{
    return m_ship_jumps_isValid;
}

qint32 OAIGet_universe_system_jumps_200_ok::getSystemId() const {
    return m_system_id;
}
void OAIGet_universe_system_jumps_200_ok::setSystemId(const qint32 &system_id) {
    m_system_id = system_id;
    m_system_id_isSet = true;
}

bool OAIGet_universe_system_jumps_200_ok::is_system_id_Set() const{
    return m_system_id_isSet;
}

bool OAIGet_universe_system_jumps_200_ok::is_system_id_Valid() const{
    return m_system_id_isValid;
}

bool OAIGet_universe_system_jumps_200_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ship_jumps_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_universe_system_jumps_200_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ship_jumps_isValid && m_system_id_isValid && true;
}

} // namespace OpenAPI
