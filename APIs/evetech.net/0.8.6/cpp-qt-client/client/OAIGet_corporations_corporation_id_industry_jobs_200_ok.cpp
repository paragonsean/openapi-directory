/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_corporations_corporation_id_industry_jobs_200_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_corporations_corporation_id_industry_jobs_200_ok::OAIGet_corporations_corporation_id_industry_jobs_200_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_corporations_corporation_id_industry_jobs_200_ok::OAIGet_corporations_corporation_id_industry_jobs_200_ok() {
    this->initializeModel();
}

OAIGet_corporations_corporation_id_industry_jobs_200_ok::~OAIGet_corporations_corporation_id_industry_jobs_200_ok() {}

void OAIGet_corporations_corporation_id_industry_jobs_200_ok::initializeModel() {

    m_activity_id_isSet = false;
    m_activity_id_isValid = false;

    m_blueprint_id_isSet = false;
    m_blueprint_id_isValid = false;

    m_blueprint_location_id_isSet = false;
    m_blueprint_location_id_isValid = false;

    m_blueprint_type_id_isSet = false;
    m_blueprint_type_id_isValid = false;

    m_completed_character_id_isSet = false;
    m_completed_character_id_isValid = false;

    m_completed_date_isSet = false;
    m_completed_date_isValid = false;

    m_cost_isSet = false;
    m_cost_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_facility_id_isSet = false;
    m_facility_id_isValid = false;

    m_installer_id_isSet = false;
    m_installer_id_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_licensed_runs_isSet = false;
    m_licensed_runs_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_output_location_id_isSet = false;
    m_output_location_id_isValid = false;

    m_pause_date_isSet = false;
    m_pause_date_isValid = false;

    m_probability_isSet = false;
    m_probability_isValid = false;

    m_product_type_id_isSet = false;
    m_product_type_id_isValid = false;

    m_runs_isSet = false;
    m_runs_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_successful_runs_isSet = false;
    m_successful_runs_isValid = false;
}

void OAIGet_corporations_corporation_id_industry_jobs_200_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_corporations_corporation_id_industry_jobs_200_ok::fromJsonObject(QJsonObject json) {

    m_activity_id_isValid = ::OpenAPI::fromJsonValue(m_activity_id, json[QString("activity_id")]);
    m_activity_id_isSet = !json[QString("activity_id")].isNull() && m_activity_id_isValid;

    m_blueprint_id_isValid = ::OpenAPI::fromJsonValue(m_blueprint_id, json[QString("blueprint_id")]);
    m_blueprint_id_isSet = !json[QString("blueprint_id")].isNull() && m_blueprint_id_isValid;

    m_blueprint_location_id_isValid = ::OpenAPI::fromJsonValue(m_blueprint_location_id, json[QString("blueprint_location_id")]);
    m_blueprint_location_id_isSet = !json[QString("blueprint_location_id")].isNull() && m_blueprint_location_id_isValid;

    m_blueprint_type_id_isValid = ::OpenAPI::fromJsonValue(m_blueprint_type_id, json[QString("blueprint_type_id")]);
    m_blueprint_type_id_isSet = !json[QString("blueprint_type_id")].isNull() && m_blueprint_type_id_isValid;

    m_completed_character_id_isValid = ::OpenAPI::fromJsonValue(m_completed_character_id, json[QString("completed_character_id")]);
    m_completed_character_id_isSet = !json[QString("completed_character_id")].isNull() && m_completed_character_id_isValid;

    m_completed_date_isValid = ::OpenAPI::fromJsonValue(m_completed_date, json[QString("completed_date")]);
    m_completed_date_isSet = !json[QString("completed_date")].isNull() && m_completed_date_isValid;

    m_cost_isValid = ::OpenAPI::fromJsonValue(m_cost, json[QString("cost")]);
    m_cost_isSet = !json[QString("cost")].isNull() && m_cost_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("end_date")]);
    m_end_date_isSet = !json[QString("end_date")].isNull() && m_end_date_isValid;

    m_facility_id_isValid = ::OpenAPI::fromJsonValue(m_facility_id, json[QString("facility_id")]);
    m_facility_id_isSet = !json[QString("facility_id")].isNull() && m_facility_id_isValid;

    m_installer_id_isValid = ::OpenAPI::fromJsonValue(m_installer_id, json[QString("installer_id")]);
    m_installer_id_isSet = !json[QString("installer_id")].isNull() && m_installer_id_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("job_id")]);
    m_job_id_isSet = !json[QString("job_id")].isNull() && m_job_id_isValid;

    m_licensed_runs_isValid = ::OpenAPI::fromJsonValue(m_licensed_runs, json[QString("licensed_runs")]);
    m_licensed_runs_isSet = !json[QString("licensed_runs")].isNull() && m_licensed_runs_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("location_id")]);
    m_location_id_isSet = !json[QString("location_id")].isNull() && m_location_id_isValid;

    m_output_location_id_isValid = ::OpenAPI::fromJsonValue(m_output_location_id, json[QString("output_location_id")]);
    m_output_location_id_isSet = !json[QString("output_location_id")].isNull() && m_output_location_id_isValid;

    m_pause_date_isValid = ::OpenAPI::fromJsonValue(m_pause_date, json[QString("pause_date")]);
    m_pause_date_isSet = !json[QString("pause_date")].isNull() && m_pause_date_isValid;

    m_probability_isValid = ::OpenAPI::fromJsonValue(m_probability, json[QString("probability")]);
    m_probability_isSet = !json[QString("probability")].isNull() && m_probability_isValid;

    m_product_type_id_isValid = ::OpenAPI::fromJsonValue(m_product_type_id, json[QString("product_type_id")]);
    m_product_type_id_isSet = !json[QString("product_type_id")].isNull() && m_product_type_id_isValid;

    m_runs_isValid = ::OpenAPI::fromJsonValue(m_runs, json[QString("runs")]);
    m_runs_isSet = !json[QString("runs")].isNull() && m_runs_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("start_date")]);
    m_start_date_isSet = !json[QString("start_date")].isNull() && m_start_date_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_successful_runs_isValid = ::OpenAPI::fromJsonValue(m_successful_runs, json[QString("successful_runs")]);
    m_successful_runs_isSet = !json[QString("successful_runs")].isNull() && m_successful_runs_isValid;
}

QString OAIGet_corporations_corporation_id_industry_jobs_200_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_corporations_corporation_id_industry_jobs_200_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_id_isSet) {
        obj.insert(QString("activity_id"), ::OpenAPI::toJsonValue(m_activity_id));
    }
    if (m_blueprint_id_isSet) {
        obj.insert(QString("blueprint_id"), ::OpenAPI::toJsonValue(m_blueprint_id));
    }
    if (m_blueprint_location_id_isSet) {
        obj.insert(QString("blueprint_location_id"), ::OpenAPI::toJsonValue(m_blueprint_location_id));
    }
    if (m_blueprint_type_id_isSet) {
        obj.insert(QString("blueprint_type_id"), ::OpenAPI::toJsonValue(m_blueprint_type_id));
    }
    if (m_completed_character_id_isSet) {
        obj.insert(QString("completed_character_id"), ::OpenAPI::toJsonValue(m_completed_character_id));
    }
    if (m_completed_date_isSet) {
        obj.insert(QString("completed_date"), ::OpenAPI::toJsonValue(m_completed_date));
    }
    if (m_cost_isSet) {
        obj.insert(QString("cost"), ::OpenAPI::toJsonValue(m_cost));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("end_date"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_facility_id_isSet) {
        obj.insert(QString("facility_id"), ::OpenAPI::toJsonValue(m_facility_id));
    }
    if (m_installer_id_isSet) {
        obj.insert(QString("installer_id"), ::OpenAPI::toJsonValue(m_installer_id));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("job_id"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_licensed_runs_isSet) {
        obj.insert(QString("licensed_runs"), ::OpenAPI::toJsonValue(m_licensed_runs));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("location_id"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_output_location_id_isSet) {
        obj.insert(QString("output_location_id"), ::OpenAPI::toJsonValue(m_output_location_id));
    }
    if (m_pause_date_isSet) {
        obj.insert(QString("pause_date"), ::OpenAPI::toJsonValue(m_pause_date));
    }
    if (m_probability_isSet) {
        obj.insert(QString("probability"), ::OpenAPI::toJsonValue(m_probability));
    }
    if (m_product_type_id_isSet) {
        obj.insert(QString("product_type_id"), ::OpenAPI::toJsonValue(m_product_type_id));
    }
    if (m_runs_isSet) {
        obj.insert(QString("runs"), ::OpenAPI::toJsonValue(m_runs));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("start_date"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_successful_runs_isSet) {
        obj.insert(QString("successful_runs"), ::OpenAPI::toJsonValue(m_successful_runs));
    }
    return obj;
}

qint32 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getActivityId() const {
    return m_activity_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setActivityId(const qint32 &activity_id) {
    m_activity_id = activity_id;
    m_activity_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_activity_id_Set() const{
    return m_activity_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_activity_id_Valid() const{
    return m_activity_id_isValid;
}

qint64 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getBlueprintId() const {
    return m_blueprint_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setBlueprintId(const qint64 &blueprint_id) {
    m_blueprint_id = blueprint_id;
    m_blueprint_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_blueprint_id_Set() const{
    return m_blueprint_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_blueprint_id_Valid() const{
    return m_blueprint_id_isValid;
}

qint64 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getBlueprintLocationId() const {
    return m_blueprint_location_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setBlueprintLocationId(const qint64 &blueprint_location_id) {
    m_blueprint_location_id = blueprint_location_id;
    m_blueprint_location_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_blueprint_location_id_Set() const{
    return m_blueprint_location_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_blueprint_location_id_Valid() const{
    return m_blueprint_location_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getBlueprintTypeId() const {
    return m_blueprint_type_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setBlueprintTypeId(const qint32 &blueprint_type_id) {
    m_blueprint_type_id = blueprint_type_id;
    m_blueprint_type_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_blueprint_type_id_Set() const{
    return m_blueprint_type_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_blueprint_type_id_Valid() const{
    return m_blueprint_type_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getCompletedCharacterId() const {
    return m_completed_character_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setCompletedCharacterId(const qint32 &completed_character_id) {
    m_completed_character_id = completed_character_id;
    m_completed_character_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_completed_character_id_Set() const{
    return m_completed_character_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_completed_character_id_Valid() const{
    return m_completed_character_id_isValid;
}

QDateTime OAIGet_corporations_corporation_id_industry_jobs_200_ok::getCompletedDate() const {
    return m_completed_date;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setCompletedDate(const QDateTime &completed_date) {
    m_completed_date = completed_date;
    m_completed_date_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_completed_date_Set() const{
    return m_completed_date_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_completed_date_Valid() const{
    return m_completed_date_isValid;
}

double OAIGet_corporations_corporation_id_industry_jobs_200_ok::getCost() const {
    return m_cost;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setCost(const double &cost) {
    m_cost = cost;
    m_cost_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_cost_Set() const{
    return m_cost_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_cost_Valid() const{
    return m_cost_isValid;
}

qint32 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getDuration() const {
    return m_duration;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setDuration(const qint32 &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_duration_Valid() const{
    return m_duration_isValid;
}

QDateTime OAIGet_corporations_corporation_id_industry_jobs_200_ok::getEndDate() const {
    return m_end_date;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setEndDate(const QDateTime &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_end_date_Valid() const{
    return m_end_date_isValid;
}

qint64 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getFacilityId() const {
    return m_facility_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setFacilityId(const qint64 &facility_id) {
    m_facility_id = facility_id;
    m_facility_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_facility_id_Set() const{
    return m_facility_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_facility_id_Valid() const{
    return m_facility_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getInstallerId() const {
    return m_installer_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setInstallerId(const qint32 &installer_id) {
    m_installer_id = installer_id;
    m_installer_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_installer_id_Set() const{
    return m_installer_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_installer_id_Valid() const{
    return m_installer_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getJobId() const {
    return m_job_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setJobId(const qint32 &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_job_id_Valid() const{
    return m_job_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getLicensedRuns() const {
    return m_licensed_runs;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setLicensedRuns(const qint32 &licensed_runs) {
    m_licensed_runs = licensed_runs;
    m_licensed_runs_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_licensed_runs_Set() const{
    return m_licensed_runs_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_licensed_runs_Valid() const{
    return m_licensed_runs_isValid;
}

qint64 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getLocationId() const {
    return m_location_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setLocationId(const qint64 &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_location_id_Valid() const{
    return m_location_id_isValid;
}

qint64 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getOutputLocationId() const {
    return m_output_location_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setOutputLocationId(const qint64 &output_location_id) {
    m_output_location_id = output_location_id;
    m_output_location_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_output_location_id_Set() const{
    return m_output_location_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_output_location_id_Valid() const{
    return m_output_location_id_isValid;
}

QDateTime OAIGet_corporations_corporation_id_industry_jobs_200_ok::getPauseDate() const {
    return m_pause_date;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setPauseDate(const QDateTime &pause_date) {
    m_pause_date = pause_date;
    m_pause_date_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_pause_date_Set() const{
    return m_pause_date_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_pause_date_Valid() const{
    return m_pause_date_isValid;
}

float OAIGet_corporations_corporation_id_industry_jobs_200_ok::getProbability() const {
    return m_probability;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setProbability(const float &probability) {
    m_probability = probability;
    m_probability_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_probability_Set() const{
    return m_probability_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_probability_Valid() const{
    return m_probability_isValid;
}

qint32 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getProductTypeId() const {
    return m_product_type_id;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setProductTypeId(const qint32 &product_type_id) {
    m_product_type_id = product_type_id;
    m_product_type_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_product_type_id_Set() const{
    return m_product_type_id_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_product_type_id_Valid() const{
    return m_product_type_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getRuns() const {
    return m_runs;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setRuns(const qint32 &runs) {
    m_runs = runs;
    m_runs_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_runs_Set() const{
    return m_runs_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_runs_Valid() const{
    return m_runs_isValid;
}

QDateTime OAIGet_corporations_corporation_id_industry_jobs_200_ok::getStartDate() const {
    return m_start_date;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_start_date_Valid() const{
    return m_start_date_isValid;
}

QString OAIGet_corporations_corporation_id_industry_jobs_200_ok::getStatus() const {
    return m_status;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_status_Valid() const{
    return m_status_isValid;
}

qint32 OAIGet_corporations_corporation_id_industry_jobs_200_ok::getSuccessfulRuns() const {
    return m_successful_runs;
}
void OAIGet_corporations_corporation_id_industry_jobs_200_ok::setSuccessfulRuns(const qint32 &successful_runs) {
    m_successful_runs = successful_runs;
    m_successful_runs_isSet = true;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_successful_runs_Set() const{
    return m_successful_runs_isSet;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::is_successful_runs_Valid() const{
    return m_successful_runs_isValid;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_blueprint_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_blueprint_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_blueprint_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_character_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facility_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_licensed_runs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pause_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_probability_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_successful_runs_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_corporations_corporation_id_industry_jobs_200_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_activity_id_isValid && m_blueprint_id_isValid && m_blueprint_location_id_isValid && m_blueprint_type_id_isValid && m_duration_isValid && m_end_date_isValid && m_facility_id_isValid && m_installer_id_isValid && m_job_id_isValid && m_location_id_isValid && m_output_location_id_isValid && m_runs_isValid && m_start_date_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
