/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_stats_character.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_stats_character::OAIGet_characters_character_id_stats_character(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_stats_character::OAIGet_characters_character_id_stats_character() {
    this->initializeModel();
}

OAIGet_characters_character_id_stats_character::~OAIGet_characters_character_id_stats_character() {}

void OAIGet_characters_character_id_stats_character::initializeModel() {

    m_days_of_activity_isSet = false;
    m_days_of_activity_isValid = false;

    m_minutes_isSet = false;
    m_minutes_isValid = false;

    m_sessions_started_isSet = false;
    m_sessions_started_isValid = false;
}

void OAIGet_characters_character_id_stats_character::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_stats_character::fromJsonObject(QJsonObject json) {

    m_days_of_activity_isValid = ::OpenAPI::fromJsonValue(m_days_of_activity, json[QString("days_of_activity")]);
    m_days_of_activity_isSet = !json[QString("days_of_activity")].isNull() && m_days_of_activity_isValid;

    m_minutes_isValid = ::OpenAPI::fromJsonValue(m_minutes, json[QString("minutes")]);
    m_minutes_isSet = !json[QString("minutes")].isNull() && m_minutes_isValid;

    m_sessions_started_isValid = ::OpenAPI::fromJsonValue(m_sessions_started, json[QString("sessions_started")]);
    m_sessions_started_isSet = !json[QString("sessions_started")].isNull() && m_sessions_started_isValid;
}

QString OAIGet_characters_character_id_stats_character::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_stats_character::asJsonObject() const {
    QJsonObject obj;
    if (m_days_of_activity_isSet) {
        obj.insert(QString("days_of_activity"), ::OpenAPI::toJsonValue(m_days_of_activity));
    }
    if (m_minutes_isSet) {
        obj.insert(QString("minutes"), ::OpenAPI::toJsonValue(m_minutes));
    }
    if (m_sessions_started_isSet) {
        obj.insert(QString("sessions_started"), ::OpenAPI::toJsonValue(m_sessions_started));
    }
    return obj;
}

qint64 OAIGet_characters_character_id_stats_character::getDaysOfActivity() const {
    return m_days_of_activity;
}
void OAIGet_characters_character_id_stats_character::setDaysOfActivity(const qint64 &days_of_activity) {
    m_days_of_activity = days_of_activity;
    m_days_of_activity_isSet = true;
}

bool OAIGet_characters_character_id_stats_character::is_days_of_activity_Set() const{
    return m_days_of_activity_isSet;
}

bool OAIGet_characters_character_id_stats_character::is_days_of_activity_Valid() const{
    return m_days_of_activity_isValid;
}

qint64 OAIGet_characters_character_id_stats_character::getMinutes() const {
    return m_minutes;
}
void OAIGet_characters_character_id_stats_character::setMinutes(const qint64 &minutes) {
    m_minutes = minutes;
    m_minutes_isSet = true;
}

bool OAIGet_characters_character_id_stats_character::is_minutes_Set() const{
    return m_minutes_isSet;
}

bool OAIGet_characters_character_id_stats_character::is_minutes_Valid() const{
    return m_minutes_isValid;
}

qint64 OAIGet_characters_character_id_stats_character::getSessionsStarted() const {
    return m_sessions_started;
}
void OAIGet_characters_character_id_stats_character::setSessionsStarted(const qint64 &sessions_started) {
    m_sessions_started = sessions_started;
    m_sessions_started_isSet = true;
}

bool OAIGet_characters_character_id_stats_character::is_sessions_started_Set() const{
    return m_sessions_started_isSet;
}

bool OAIGet_characters_character_id_stats_character::is_sessions_started_Valid() const{
    return m_sessions_started_isValid;
}

bool OAIGet_characters_character_id_stats_character::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_days_of_activity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sessions_started_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_stats_character::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
