/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_loyalty_stores_corporation_id_offers_200_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_loyalty_stores_corporation_id_offers_200_ok::OAIGet_loyalty_stores_corporation_id_offers_200_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_loyalty_stores_corporation_id_offers_200_ok::OAIGet_loyalty_stores_corporation_id_offers_200_ok() {
    this->initializeModel();
}

OAIGet_loyalty_stores_corporation_id_offers_200_ok::~OAIGet_loyalty_stores_corporation_id_offers_200_ok() {}

void OAIGet_loyalty_stores_corporation_id_offers_200_ok::initializeModel() {

    m_ak_cost_isSet = false;
    m_ak_cost_isValid = false;

    m_isk_cost_isSet = false;
    m_isk_cost_isValid = false;

    m_lp_cost_isSet = false;
    m_lp_cost_isValid = false;

    m_offer_id_isSet = false;
    m_offer_id_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_required_items_isSet = false;
    m_required_items_isValid = false;

    m_type_id_isSet = false;
    m_type_id_isValid = false;
}

void OAIGet_loyalty_stores_corporation_id_offers_200_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_loyalty_stores_corporation_id_offers_200_ok::fromJsonObject(QJsonObject json) {

    m_ak_cost_isValid = ::OpenAPI::fromJsonValue(m_ak_cost, json[QString("ak_cost")]);
    m_ak_cost_isSet = !json[QString("ak_cost")].isNull() && m_ak_cost_isValid;

    m_isk_cost_isValid = ::OpenAPI::fromJsonValue(m_isk_cost, json[QString("isk_cost")]);
    m_isk_cost_isSet = !json[QString("isk_cost")].isNull() && m_isk_cost_isValid;

    m_lp_cost_isValid = ::OpenAPI::fromJsonValue(m_lp_cost, json[QString("lp_cost")]);
    m_lp_cost_isSet = !json[QString("lp_cost")].isNull() && m_lp_cost_isValid;

    m_offer_id_isValid = ::OpenAPI::fromJsonValue(m_offer_id, json[QString("offer_id")]);
    m_offer_id_isSet = !json[QString("offer_id")].isNull() && m_offer_id_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_required_items_isValid = ::OpenAPI::fromJsonValue(m_required_items, json[QString("required_items")]);
    m_required_items_isSet = !json[QString("required_items")].isNull() && m_required_items_isValid;

    m_type_id_isValid = ::OpenAPI::fromJsonValue(m_type_id, json[QString("type_id")]);
    m_type_id_isSet = !json[QString("type_id")].isNull() && m_type_id_isValid;
}

QString OAIGet_loyalty_stores_corporation_id_offers_200_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_loyalty_stores_corporation_id_offers_200_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_ak_cost_isSet) {
        obj.insert(QString("ak_cost"), ::OpenAPI::toJsonValue(m_ak_cost));
    }
    if (m_isk_cost_isSet) {
        obj.insert(QString("isk_cost"), ::OpenAPI::toJsonValue(m_isk_cost));
    }
    if (m_lp_cost_isSet) {
        obj.insert(QString("lp_cost"), ::OpenAPI::toJsonValue(m_lp_cost));
    }
    if (m_offer_id_isSet) {
        obj.insert(QString("offer_id"), ::OpenAPI::toJsonValue(m_offer_id));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_required_items.size() > 0) {
        obj.insert(QString("required_items"), ::OpenAPI::toJsonValue(m_required_items));
    }
    if (m_type_id_isSet) {
        obj.insert(QString("type_id"), ::OpenAPI::toJsonValue(m_type_id));
    }
    return obj;
}

qint32 OAIGet_loyalty_stores_corporation_id_offers_200_ok::getAkCost() const {
    return m_ak_cost;
}
void OAIGet_loyalty_stores_corporation_id_offers_200_ok::setAkCost(const qint32 &ak_cost) {
    m_ak_cost = ak_cost;
    m_ak_cost_isSet = true;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_ak_cost_Set() const{
    return m_ak_cost_isSet;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_ak_cost_Valid() const{
    return m_ak_cost_isValid;
}

qint64 OAIGet_loyalty_stores_corporation_id_offers_200_ok::getIskCost() const {
    return m_isk_cost;
}
void OAIGet_loyalty_stores_corporation_id_offers_200_ok::setIskCost(const qint64 &isk_cost) {
    m_isk_cost = isk_cost;
    m_isk_cost_isSet = true;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_isk_cost_Set() const{
    return m_isk_cost_isSet;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_isk_cost_Valid() const{
    return m_isk_cost_isValid;
}

qint32 OAIGet_loyalty_stores_corporation_id_offers_200_ok::getLpCost() const {
    return m_lp_cost;
}
void OAIGet_loyalty_stores_corporation_id_offers_200_ok::setLpCost(const qint32 &lp_cost) {
    m_lp_cost = lp_cost;
    m_lp_cost_isSet = true;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_lp_cost_Set() const{
    return m_lp_cost_isSet;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_lp_cost_Valid() const{
    return m_lp_cost_isValid;
}

qint32 OAIGet_loyalty_stores_corporation_id_offers_200_ok::getOfferId() const {
    return m_offer_id;
}
void OAIGet_loyalty_stores_corporation_id_offers_200_ok::setOfferId(const qint32 &offer_id) {
    m_offer_id = offer_id;
    m_offer_id_isSet = true;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_offer_id_Set() const{
    return m_offer_id_isSet;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_offer_id_Valid() const{
    return m_offer_id_isValid;
}

qint32 OAIGet_loyalty_stores_corporation_id_offers_200_ok::getQuantity() const {
    return m_quantity;
}
void OAIGet_loyalty_stores_corporation_id_offers_200_ok::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QList<OAIGet_loyalty_stores_corporation_id_offers_required_item> OAIGet_loyalty_stores_corporation_id_offers_200_ok::getRequiredItems() const {
    return m_required_items;
}
void OAIGet_loyalty_stores_corporation_id_offers_200_ok::setRequiredItems(const QList<OAIGet_loyalty_stores_corporation_id_offers_required_item> &required_items) {
    m_required_items = required_items;
    m_required_items_isSet = true;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_required_items_Set() const{
    return m_required_items_isSet;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_required_items_Valid() const{
    return m_required_items_isValid;
}

qint32 OAIGet_loyalty_stores_corporation_id_offers_200_ok::getTypeId() const {
    return m_type_id;
}
void OAIGet_loyalty_stores_corporation_id_offers_200_ok::setTypeId(const qint32 &type_id) {
    m_type_id = type_id;
    m_type_id_isSet = true;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_type_id_Set() const{
    return m_type_id_isSet;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::is_type_id_Valid() const{
    return m_type_id_isValid;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ak_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_isk_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lp_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_required_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_loyalty_stores_corporation_id_offers_200_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_isk_cost_isValid && m_lp_cost_isValid && m_offer_id_isValid && m_quantity_isValid && m_required_items_isValid && m_type_id_isValid && true;
}

} // namespace OpenAPI
