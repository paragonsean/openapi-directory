/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_stats_orbital.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_stats_orbital::OAIGet_characters_character_id_stats_orbital(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_stats_orbital::OAIGet_characters_character_id_stats_orbital() {
    this->initializeModel();
}

OAIGet_characters_character_id_stats_orbital::~OAIGet_characters_character_id_stats_orbital() {}

void OAIGet_characters_character_id_stats_orbital::initializeModel() {

    m_strike_characters_killed_isSet = false;
    m_strike_characters_killed_isValid = false;

    m_strike_damage_to_players_armor_amount_isSet = false;
    m_strike_damage_to_players_armor_amount_isValid = false;

    m_strike_damage_to_players_shield_amount_isSet = false;
    m_strike_damage_to_players_shield_amount_isValid = false;
}

void OAIGet_characters_character_id_stats_orbital::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_stats_orbital::fromJsonObject(QJsonObject json) {

    m_strike_characters_killed_isValid = ::OpenAPI::fromJsonValue(m_strike_characters_killed, json[QString("strike_characters_killed")]);
    m_strike_characters_killed_isSet = !json[QString("strike_characters_killed")].isNull() && m_strike_characters_killed_isValid;

    m_strike_damage_to_players_armor_amount_isValid = ::OpenAPI::fromJsonValue(m_strike_damage_to_players_armor_amount, json[QString("strike_damage_to_players_armor_amount")]);
    m_strike_damage_to_players_armor_amount_isSet = !json[QString("strike_damage_to_players_armor_amount")].isNull() && m_strike_damage_to_players_armor_amount_isValid;

    m_strike_damage_to_players_shield_amount_isValid = ::OpenAPI::fromJsonValue(m_strike_damage_to_players_shield_amount, json[QString("strike_damage_to_players_shield_amount")]);
    m_strike_damage_to_players_shield_amount_isSet = !json[QString("strike_damage_to_players_shield_amount")].isNull() && m_strike_damage_to_players_shield_amount_isValid;
}

QString OAIGet_characters_character_id_stats_orbital::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_stats_orbital::asJsonObject() const {
    QJsonObject obj;
    if (m_strike_characters_killed_isSet) {
        obj.insert(QString("strike_characters_killed"), ::OpenAPI::toJsonValue(m_strike_characters_killed));
    }
    if (m_strike_damage_to_players_armor_amount_isSet) {
        obj.insert(QString("strike_damage_to_players_armor_amount"), ::OpenAPI::toJsonValue(m_strike_damage_to_players_armor_amount));
    }
    if (m_strike_damage_to_players_shield_amount_isSet) {
        obj.insert(QString("strike_damage_to_players_shield_amount"), ::OpenAPI::toJsonValue(m_strike_damage_to_players_shield_amount));
    }
    return obj;
}

qint64 OAIGet_characters_character_id_stats_orbital::getStrikeCharactersKilled() const {
    return m_strike_characters_killed;
}
void OAIGet_characters_character_id_stats_orbital::setStrikeCharactersKilled(const qint64 &strike_characters_killed) {
    m_strike_characters_killed = strike_characters_killed;
    m_strike_characters_killed_isSet = true;
}

bool OAIGet_characters_character_id_stats_orbital::is_strike_characters_killed_Set() const{
    return m_strike_characters_killed_isSet;
}

bool OAIGet_characters_character_id_stats_orbital::is_strike_characters_killed_Valid() const{
    return m_strike_characters_killed_isValid;
}

qint64 OAIGet_characters_character_id_stats_orbital::getStrikeDamageToPlayersArmorAmount() const {
    return m_strike_damage_to_players_armor_amount;
}
void OAIGet_characters_character_id_stats_orbital::setStrikeDamageToPlayersArmorAmount(const qint64 &strike_damage_to_players_armor_amount) {
    m_strike_damage_to_players_armor_amount = strike_damage_to_players_armor_amount;
    m_strike_damage_to_players_armor_amount_isSet = true;
}

bool OAIGet_characters_character_id_stats_orbital::is_strike_damage_to_players_armor_amount_Set() const{
    return m_strike_damage_to_players_armor_amount_isSet;
}

bool OAIGet_characters_character_id_stats_orbital::is_strike_damage_to_players_armor_amount_Valid() const{
    return m_strike_damage_to_players_armor_amount_isValid;
}

qint64 OAIGet_characters_character_id_stats_orbital::getStrikeDamageToPlayersShieldAmount() const {
    return m_strike_damage_to_players_shield_amount;
}
void OAIGet_characters_character_id_stats_orbital::setStrikeDamageToPlayersShieldAmount(const qint64 &strike_damage_to_players_shield_amount) {
    m_strike_damage_to_players_shield_amount = strike_damage_to_players_shield_amount;
    m_strike_damage_to_players_shield_amount_isSet = true;
}

bool OAIGet_characters_character_id_stats_orbital::is_strike_damage_to_players_shield_amount_Set() const{
    return m_strike_damage_to_players_shield_amount_isSet;
}

bool OAIGet_characters_character_id_stats_orbital::is_strike_damage_to_players_shield_amount_Valid() const{
    return m_strike_damage_to_players_shield_amount_isValid;
}

bool OAIGet_characters_character_id_stats_orbital::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_strike_characters_killed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_strike_damage_to_players_armor_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_strike_damage_to_players_shield_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_stats_orbital::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
