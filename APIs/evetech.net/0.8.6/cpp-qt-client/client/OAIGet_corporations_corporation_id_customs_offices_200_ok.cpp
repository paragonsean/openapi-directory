/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_corporations_corporation_id_customs_offices_200_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_corporations_corporation_id_customs_offices_200_ok::OAIGet_corporations_corporation_id_customs_offices_200_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_corporations_corporation_id_customs_offices_200_ok::OAIGet_corporations_corporation_id_customs_offices_200_ok() {
    this->initializeModel();
}

OAIGet_corporations_corporation_id_customs_offices_200_ok::~OAIGet_corporations_corporation_id_customs_offices_200_ok() {}

void OAIGet_corporations_corporation_id_customs_offices_200_ok::initializeModel() {

    m_alliance_tax_rate_isSet = false;
    m_alliance_tax_rate_isValid = false;

    m_allow_access_with_standings_isSet = false;
    m_allow_access_with_standings_isValid = false;

    m_allow_alliance_access_isSet = false;
    m_allow_alliance_access_isValid = false;

    m_bad_standing_tax_rate_isSet = false;
    m_bad_standing_tax_rate_isValid = false;

    m_corporation_tax_rate_isSet = false;
    m_corporation_tax_rate_isValid = false;

    m_excellent_standing_tax_rate_isSet = false;
    m_excellent_standing_tax_rate_isValid = false;

    m_good_standing_tax_rate_isSet = false;
    m_good_standing_tax_rate_isValid = false;

    m_neutral_standing_tax_rate_isSet = false;
    m_neutral_standing_tax_rate_isValid = false;

    m_office_id_isSet = false;
    m_office_id_isValid = false;

    m_reinforce_exit_end_isSet = false;
    m_reinforce_exit_end_isValid = false;

    m_reinforce_exit_start_isSet = false;
    m_reinforce_exit_start_isValid = false;

    m_standing_level_isSet = false;
    m_standing_level_isValid = false;

    m_system_id_isSet = false;
    m_system_id_isValid = false;

    m_terrible_standing_tax_rate_isSet = false;
    m_terrible_standing_tax_rate_isValid = false;
}

void OAIGet_corporations_corporation_id_customs_offices_200_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_corporations_corporation_id_customs_offices_200_ok::fromJsonObject(QJsonObject json) {

    m_alliance_tax_rate_isValid = ::OpenAPI::fromJsonValue(m_alliance_tax_rate, json[QString("alliance_tax_rate")]);
    m_alliance_tax_rate_isSet = !json[QString("alliance_tax_rate")].isNull() && m_alliance_tax_rate_isValid;

    m_allow_access_with_standings_isValid = ::OpenAPI::fromJsonValue(m_allow_access_with_standings, json[QString("allow_access_with_standings")]);
    m_allow_access_with_standings_isSet = !json[QString("allow_access_with_standings")].isNull() && m_allow_access_with_standings_isValid;

    m_allow_alliance_access_isValid = ::OpenAPI::fromJsonValue(m_allow_alliance_access, json[QString("allow_alliance_access")]);
    m_allow_alliance_access_isSet = !json[QString("allow_alliance_access")].isNull() && m_allow_alliance_access_isValid;

    m_bad_standing_tax_rate_isValid = ::OpenAPI::fromJsonValue(m_bad_standing_tax_rate, json[QString("bad_standing_tax_rate")]);
    m_bad_standing_tax_rate_isSet = !json[QString("bad_standing_tax_rate")].isNull() && m_bad_standing_tax_rate_isValid;

    m_corporation_tax_rate_isValid = ::OpenAPI::fromJsonValue(m_corporation_tax_rate, json[QString("corporation_tax_rate")]);
    m_corporation_tax_rate_isSet = !json[QString("corporation_tax_rate")].isNull() && m_corporation_tax_rate_isValid;

    m_excellent_standing_tax_rate_isValid = ::OpenAPI::fromJsonValue(m_excellent_standing_tax_rate, json[QString("excellent_standing_tax_rate")]);
    m_excellent_standing_tax_rate_isSet = !json[QString("excellent_standing_tax_rate")].isNull() && m_excellent_standing_tax_rate_isValid;

    m_good_standing_tax_rate_isValid = ::OpenAPI::fromJsonValue(m_good_standing_tax_rate, json[QString("good_standing_tax_rate")]);
    m_good_standing_tax_rate_isSet = !json[QString("good_standing_tax_rate")].isNull() && m_good_standing_tax_rate_isValid;

    m_neutral_standing_tax_rate_isValid = ::OpenAPI::fromJsonValue(m_neutral_standing_tax_rate, json[QString("neutral_standing_tax_rate")]);
    m_neutral_standing_tax_rate_isSet = !json[QString("neutral_standing_tax_rate")].isNull() && m_neutral_standing_tax_rate_isValid;

    m_office_id_isValid = ::OpenAPI::fromJsonValue(m_office_id, json[QString("office_id")]);
    m_office_id_isSet = !json[QString("office_id")].isNull() && m_office_id_isValid;

    m_reinforce_exit_end_isValid = ::OpenAPI::fromJsonValue(m_reinforce_exit_end, json[QString("reinforce_exit_end")]);
    m_reinforce_exit_end_isSet = !json[QString("reinforce_exit_end")].isNull() && m_reinforce_exit_end_isValid;

    m_reinforce_exit_start_isValid = ::OpenAPI::fromJsonValue(m_reinforce_exit_start, json[QString("reinforce_exit_start")]);
    m_reinforce_exit_start_isSet = !json[QString("reinforce_exit_start")].isNull() && m_reinforce_exit_start_isValid;

    m_standing_level_isValid = ::OpenAPI::fromJsonValue(m_standing_level, json[QString("standing_level")]);
    m_standing_level_isSet = !json[QString("standing_level")].isNull() && m_standing_level_isValid;

    m_system_id_isValid = ::OpenAPI::fromJsonValue(m_system_id, json[QString("system_id")]);
    m_system_id_isSet = !json[QString("system_id")].isNull() && m_system_id_isValid;

    m_terrible_standing_tax_rate_isValid = ::OpenAPI::fromJsonValue(m_terrible_standing_tax_rate, json[QString("terrible_standing_tax_rate")]);
    m_terrible_standing_tax_rate_isSet = !json[QString("terrible_standing_tax_rate")].isNull() && m_terrible_standing_tax_rate_isValid;
}

QString OAIGet_corporations_corporation_id_customs_offices_200_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_corporations_corporation_id_customs_offices_200_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_alliance_tax_rate_isSet) {
        obj.insert(QString("alliance_tax_rate"), ::OpenAPI::toJsonValue(m_alliance_tax_rate));
    }
    if (m_allow_access_with_standings_isSet) {
        obj.insert(QString("allow_access_with_standings"), ::OpenAPI::toJsonValue(m_allow_access_with_standings));
    }
    if (m_allow_alliance_access_isSet) {
        obj.insert(QString("allow_alliance_access"), ::OpenAPI::toJsonValue(m_allow_alliance_access));
    }
    if (m_bad_standing_tax_rate_isSet) {
        obj.insert(QString("bad_standing_tax_rate"), ::OpenAPI::toJsonValue(m_bad_standing_tax_rate));
    }
    if (m_corporation_tax_rate_isSet) {
        obj.insert(QString("corporation_tax_rate"), ::OpenAPI::toJsonValue(m_corporation_tax_rate));
    }
    if (m_excellent_standing_tax_rate_isSet) {
        obj.insert(QString("excellent_standing_tax_rate"), ::OpenAPI::toJsonValue(m_excellent_standing_tax_rate));
    }
    if (m_good_standing_tax_rate_isSet) {
        obj.insert(QString("good_standing_tax_rate"), ::OpenAPI::toJsonValue(m_good_standing_tax_rate));
    }
    if (m_neutral_standing_tax_rate_isSet) {
        obj.insert(QString("neutral_standing_tax_rate"), ::OpenAPI::toJsonValue(m_neutral_standing_tax_rate));
    }
    if (m_office_id_isSet) {
        obj.insert(QString("office_id"), ::OpenAPI::toJsonValue(m_office_id));
    }
    if (m_reinforce_exit_end_isSet) {
        obj.insert(QString("reinforce_exit_end"), ::OpenAPI::toJsonValue(m_reinforce_exit_end));
    }
    if (m_reinforce_exit_start_isSet) {
        obj.insert(QString("reinforce_exit_start"), ::OpenAPI::toJsonValue(m_reinforce_exit_start));
    }
    if (m_standing_level_isSet) {
        obj.insert(QString("standing_level"), ::OpenAPI::toJsonValue(m_standing_level));
    }
    if (m_system_id_isSet) {
        obj.insert(QString("system_id"), ::OpenAPI::toJsonValue(m_system_id));
    }
    if (m_terrible_standing_tax_rate_isSet) {
        obj.insert(QString("terrible_standing_tax_rate"), ::OpenAPI::toJsonValue(m_terrible_standing_tax_rate));
    }
    return obj;
}

float OAIGet_corporations_corporation_id_customs_offices_200_ok::getAllianceTaxRate() const {
    return m_alliance_tax_rate;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setAllianceTaxRate(const float &alliance_tax_rate) {
    m_alliance_tax_rate = alliance_tax_rate;
    m_alliance_tax_rate_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_alliance_tax_rate_Set() const{
    return m_alliance_tax_rate_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_alliance_tax_rate_Valid() const{
    return m_alliance_tax_rate_isValid;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::isAllowAccessWithStandings() const {
    return m_allow_access_with_standings;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setAllowAccessWithStandings(const bool &allow_access_with_standings) {
    m_allow_access_with_standings = allow_access_with_standings;
    m_allow_access_with_standings_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_allow_access_with_standings_Set() const{
    return m_allow_access_with_standings_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_allow_access_with_standings_Valid() const{
    return m_allow_access_with_standings_isValid;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::isAllowAllianceAccess() const {
    return m_allow_alliance_access;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setAllowAllianceAccess(const bool &allow_alliance_access) {
    m_allow_alliance_access = allow_alliance_access;
    m_allow_alliance_access_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_allow_alliance_access_Set() const{
    return m_allow_alliance_access_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_allow_alliance_access_Valid() const{
    return m_allow_alliance_access_isValid;
}

float OAIGet_corporations_corporation_id_customs_offices_200_ok::getBadStandingTaxRate() const {
    return m_bad_standing_tax_rate;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setBadStandingTaxRate(const float &bad_standing_tax_rate) {
    m_bad_standing_tax_rate = bad_standing_tax_rate;
    m_bad_standing_tax_rate_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_bad_standing_tax_rate_Set() const{
    return m_bad_standing_tax_rate_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_bad_standing_tax_rate_Valid() const{
    return m_bad_standing_tax_rate_isValid;
}

float OAIGet_corporations_corporation_id_customs_offices_200_ok::getCorporationTaxRate() const {
    return m_corporation_tax_rate;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setCorporationTaxRate(const float &corporation_tax_rate) {
    m_corporation_tax_rate = corporation_tax_rate;
    m_corporation_tax_rate_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_corporation_tax_rate_Set() const{
    return m_corporation_tax_rate_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_corporation_tax_rate_Valid() const{
    return m_corporation_tax_rate_isValid;
}

float OAIGet_corporations_corporation_id_customs_offices_200_ok::getExcellentStandingTaxRate() const {
    return m_excellent_standing_tax_rate;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setExcellentStandingTaxRate(const float &excellent_standing_tax_rate) {
    m_excellent_standing_tax_rate = excellent_standing_tax_rate;
    m_excellent_standing_tax_rate_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_excellent_standing_tax_rate_Set() const{
    return m_excellent_standing_tax_rate_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_excellent_standing_tax_rate_Valid() const{
    return m_excellent_standing_tax_rate_isValid;
}

float OAIGet_corporations_corporation_id_customs_offices_200_ok::getGoodStandingTaxRate() const {
    return m_good_standing_tax_rate;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setGoodStandingTaxRate(const float &good_standing_tax_rate) {
    m_good_standing_tax_rate = good_standing_tax_rate;
    m_good_standing_tax_rate_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_good_standing_tax_rate_Set() const{
    return m_good_standing_tax_rate_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_good_standing_tax_rate_Valid() const{
    return m_good_standing_tax_rate_isValid;
}

float OAIGet_corporations_corporation_id_customs_offices_200_ok::getNeutralStandingTaxRate() const {
    return m_neutral_standing_tax_rate;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setNeutralStandingTaxRate(const float &neutral_standing_tax_rate) {
    m_neutral_standing_tax_rate = neutral_standing_tax_rate;
    m_neutral_standing_tax_rate_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_neutral_standing_tax_rate_Set() const{
    return m_neutral_standing_tax_rate_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_neutral_standing_tax_rate_Valid() const{
    return m_neutral_standing_tax_rate_isValid;
}

qint64 OAIGet_corporations_corporation_id_customs_offices_200_ok::getOfficeId() const {
    return m_office_id;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setOfficeId(const qint64 &office_id) {
    m_office_id = office_id;
    m_office_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_office_id_Set() const{
    return m_office_id_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_office_id_Valid() const{
    return m_office_id_isValid;
}

qint32 OAIGet_corporations_corporation_id_customs_offices_200_ok::getReinforceExitEnd() const {
    return m_reinforce_exit_end;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setReinforceExitEnd(const qint32 &reinforce_exit_end) {
    m_reinforce_exit_end = reinforce_exit_end;
    m_reinforce_exit_end_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_reinforce_exit_end_Set() const{
    return m_reinforce_exit_end_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_reinforce_exit_end_Valid() const{
    return m_reinforce_exit_end_isValid;
}

qint32 OAIGet_corporations_corporation_id_customs_offices_200_ok::getReinforceExitStart() const {
    return m_reinforce_exit_start;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setReinforceExitStart(const qint32 &reinforce_exit_start) {
    m_reinforce_exit_start = reinforce_exit_start;
    m_reinforce_exit_start_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_reinforce_exit_start_Set() const{
    return m_reinforce_exit_start_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_reinforce_exit_start_Valid() const{
    return m_reinforce_exit_start_isValid;
}

QString OAIGet_corporations_corporation_id_customs_offices_200_ok::getStandingLevel() const {
    return m_standing_level;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setStandingLevel(const QString &standing_level) {
    m_standing_level = standing_level;
    m_standing_level_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_standing_level_Set() const{
    return m_standing_level_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_standing_level_Valid() const{
    return m_standing_level_isValid;
}

qint32 OAIGet_corporations_corporation_id_customs_offices_200_ok::getSystemId() const {
    return m_system_id;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setSystemId(const qint32 &system_id) {
    m_system_id = system_id;
    m_system_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_system_id_Set() const{
    return m_system_id_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_system_id_Valid() const{
    return m_system_id_isValid;
}

float OAIGet_corporations_corporation_id_customs_offices_200_ok::getTerribleStandingTaxRate() const {
    return m_terrible_standing_tax_rate;
}
void OAIGet_corporations_corporation_id_customs_offices_200_ok::setTerribleStandingTaxRate(const float &terrible_standing_tax_rate) {
    m_terrible_standing_tax_rate = terrible_standing_tax_rate;
    m_terrible_standing_tax_rate_isSet = true;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_terrible_standing_tax_rate_Set() const{
    return m_terrible_standing_tax_rate_isSet;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::is_terrible_standing_tax_rate_Valid() const{
    return m_terrible_standing_tax_rate_isValid;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alliance_tax_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_access_with_standings_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_alliance_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bad_standing_tax_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_corporation_tax_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_excellent_standing_tax_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_good_standing_tax_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_neutral_standing_tax_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_office_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reinforce_exit_end_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reinforce_exit_start_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standing_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_terrible_standing_tax_rate_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_corporations_corporation_id_customs_offices_200_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_allow_access_with_standings_isValid && m_allow_alliance_access_isValid && m_office_id_isValid && m_reinforce_exit_end_isValid && m_reinforce_exit_start_isValid && m_system_id_isValid && true;
}

} // namespace OpenAPI
