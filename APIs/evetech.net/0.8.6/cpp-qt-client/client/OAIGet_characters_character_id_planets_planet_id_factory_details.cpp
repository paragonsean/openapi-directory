/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_planets_planet_id_factory_details.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_planets_planet_id_factory_details::OAIGet_characters_character_id_planets_planet_id_factory_details(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_planets_planet_id_factory_details::OAIGet_characters_character_id_planets_planet_id_factory_details() {
    this->initializeModel();
}

OAIGet_characters_character_id_planets_planet_id_factory_details::~OAIGet_characters_character_id_planets_planet_id_factory_details() {}

void OAIGet_characters_character_id_planets_planet_id_factory_details::initializeModel() {

    m_schematic_id_isSet = false;
    m_schematic_id_isValid = false;
}

void OAIGet_characters_character_id_planets_planet_id_factory_details::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_planets_planet_id_factory_details::fromJsonObject(QJsonObject json) {

    m_schematic_id_isValid = ::OpenAPI::fromJsonValue(m_schematic_id, json[QString("schematic_id")]);
    m_schematic_id_isSet = !json[QString("schematic_id")].isNull() && m_schematic_id_isValid;
}

QString OAIGet_characters_character_id_planets_planet_id_factory_details::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_planets_planet_id_factory_details::asJsonObject() const {
    QJsonObject obj;
    if (m_schematic_id_isSet) {
        obj.insert(QString("schematic_id"), ::OpenAPI::toJsonValue(m_schematic_id));
    }
    return obj;
}

qint32 OAIGet_characters_character_id_planets_planet_id_factory_details::getSchematicId() const {
    return m_schematic_id;
}
void OAIGet_characters_character_id_planets_planet_id_factory_details::setSchematicId(const qint32 &schematic_id) {
    m_schematic_id = schematic_id;
    m_schematic_id_isSet = true;
}

bool OAIGet_characters_character_id_planets_planet_id_factory_details::is_schematic_id_Set() const{
    return m_schematic_id_isSet;
}

bool OAIGet_characters_character_id_planets_planet_id_factory_details::is_schematic_id_Valid() const{
    return m_schematic_id_isValid;
}

bool OAIGet_characters_character_id_planets_planet_id_factory_details::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schematic_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_planets_planet_id_factory_details::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_schematic_id_isValid && true;
}

} // namespace OpenAPI
