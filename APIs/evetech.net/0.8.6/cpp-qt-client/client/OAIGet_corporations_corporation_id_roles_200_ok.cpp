/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_corporations_corporation_id_roles_200_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_corporations_corporation_id_roles_200_ok::OAIGet_corporations_corporation_id_roles_200_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_corporations_corporation_id_roles_200_ok::OAIGet_corporations_corporation_id_roles_200_ok() {
    this->initializeModel();
}

OAIGet_corporations_corporation_id_roles_200_ok::~OAIGet_corporations_corporation_id_roles_200_ok() {}

void OAIGet_corporations_corporation_id_roles_200_ok::initializeModel() {

    m_character_id_isSet = false;
    m_character_id_isValid = false;

    m_grantable_roles_isSet = false;
    m_grantable_roles_isValid = false;

    m_grantable_roles_at_base_isSet = false;
    m_grantable_roles_at_base_isValid = false;

    m_grantable_roles_at_hq_isSet = false;
    m_grantable_roles_at_hq_isValid = false;

    m_grantable_roles_at_other_isSet = false;
    m_grantable_roles_at_other_isValid = false;

    m_roles_isSet = false;
    m_roles_isValid = false;

    m_roles_at_base_isSet = false;
    m_roles_at_base_isValid = false;

    m_roles_at_hq_isSet = false;
    m_roles_at_hq_isValid = false;

    m_roles_at_other_isSet = false;
    m_roles_at_other_isValid = false;
}

void OAIGet_corporations_corporation_id_roles_200_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_corporations_corporation_id_roles_200_ok::fromJsonObject(QJsonObject json) {

    m_character_id_isValid = ::OpenAPI::fromJsonValue(m_character_id, json[QString("character_id")]);
    m_character_id_isSet = !json[QString("character_id")].isNull() && m_character_id_isValid;

    m_grantable_roles_isValid = ::OpenAPI::fromJsonValue(m_grantable_roles, json[QString("grantable_roles")]);
    m_grantable_roles_isSet = !json[QString("grantable_roles")].isNull() && m_grantable_roles_isValid;

    m_grantable_roles_at_base_isValid = ::OpenAPI::fromJsonValue(m_grantable_roles_at_base, json[QString("grantable_roles_at_base")]);
    m_grantable_roles_at_base_isSet = !json[QString("grantable_roles_at_base")].isNull() && m_grantable_roles_at_base_isValid;

    m_grantable_roles_at_hq_isValid = ::OpenAPI::fromJsonValue(m_grantable_roles_at_hq, json[QString("grantable_roles_at_hq")]);
    m_grantable_roles_at_hq_isSet = !json[QString("grantable_roles_at_hq")].isNull() && m_grantable_roles_at_hq_isValid;

    m_grantable_roles_at_other_isValid = ::OpenAPI::fromJsonValue(m_grantable_roles_at_other, json[QString("grantable_roles_at_other")]);
    m_grantable_roles_at_other_isSet = !json[QString("grantable_roles_at_other")].isNull() && m_grantable_roles_at_other_isValid;

    m_roles_isValid = ::OpenAPI::fromJsonValue(m_roles, json[QString("roles")]);
    m_roles_isSet = !json[QString("roles")].isNull() && m_roles_isValid;

    m_roles_at_base_isValid = ::OpenAPI::fromJsonValue(m_roles_at_base, json[QString("roles_at_base")]);
    m_roles_at_base_isSet = !json[QString("roles_at_base")].isNull() && m_roles_at_base_isValid;

    m_roles_at_hq_isValid = ::OpenAPI::fromJsonValue(m_roles_at_hq, json[QString("roles_at_hq")]);
    m_roles_at_hq_isSet = !json[QString("roles_at_hq")].isNull() && m_roles_at_hq_isValid;

    m_roles_at_other_isValid = ::OpenAPI::fromJsonValue(m_roles_at_other, json[QString("roles_at_other")]);
    m_roles_at_other_isSet = !json[QString("roles_at_other")].isNull() && m_roles_at_other_isValid;
}

QString OAIGet_corporations_corporation_id_roles_200_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_corporations_corporation_id_roles_200_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_character_id_isSet) {
        obj.insert(QString("character_id"), ::OpenAPI::toJsonValue(m_character_id));
    }
    if (m_grantable_roles.size() > 0) {
        obj.insert(QString("grantable_roles"), ::OpenAPI::toJsonValue(m_grantable_roles));
    }
    if (m_grantable_roles_at_base.size() > 0) {
        obj.insert(QString("grantable_roles_at_base"), ::OpenAPI::toJsonValue(m_grantable_roles_at_base));
    }
    if (m_grantable_roles_at_hq.size() > 0) {
        obj.insert(QString("grantable_roles_at_hq"), ::OpenAPI::toJsonValue(m_grantable_roles_at_hq));
    }
    if (m_grantable_roles_at_other.size() > 0) {
        obj.insert(QString("grantable_roles_at_other"), ::OpenAPI::toJsonValue(m_grantable_roles_at_other));
    }
    if (m_roles.size() > 0) {
        obj.insert(QString("roles"), ::OpenAPI::toJsonValue(m_roles));
    }
    if (m_roles_at_base.size() > 0) {
        obj.insert(QString("roles_at_base"), ::OpenAPI::toJsonValue(m_roles_at_base));
    }
    if (m_roles_at_hq.size() > 0) {
        obj.insert(QString("roles_at_hq"), ::OpenAPI::toJsonValue(m_roles_at_hq));
    }
    if (m_roles_at_other.size() > 0) {
        obj.insert(QString("roles_at_other"), ::OpenAPI::toJsonValue(m_roles_at_other));
    }
    return obj;
}

qint32 OAIGet_corporations_corporation_id_roles_200_ok::getCharacterId() const {
    return m_character_id;
}
void OAIGet_corporations_corporation_id_roles_200_ok::setCharacterId(const qint32 &character_id) {
    m_character_id = character_id;
    m_character_id_isSet = true;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_character_id_Set() const{
    return m_character_id_isSet;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_character_id_Valid() const{
    return m_character_id_isValid;
}

QList<QString> OAIGet_corporations_corporation_id_roles_200_ok::getGrantableRoles() const {
    return m_grantable_roles;
}
void OAIGet_corporations_corporation_id_roles_200_ok::setGrantableRoles(const QList<QString> &grantable_roles) {
    m_grantable_roles = grantable_roles;
    m_grantable_roles_isSet = true;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_grantable_roles_Set() const{
    return m_grantable_roles_isSet;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_grantable_roles_Valid() const{
    return m_grantable_roles_isValid;
}

QList<QString> OAIGet_corporations_corporation_id_roles_200_ok::getGrantableRolesAtBase() const {
    return m_grantable_roles_at_base;
}
void OAIGet_corporations_corporation_id_roles_200_ok::setGrantableRolesAtBase(const QList<QString> &grantable_roles_at_base) {
    m_grantable_roles_at_base = grantable_roles_at_base;
    m_grantable_roles_at_base_isSet = true;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_grantable_roles_at_base_Set() const{
    return m_grantable_roles_at_base_isSet;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_grantable_roles_at_base_Valid() const{
    return m_grantable_roles_at_base_isValid;
}

QList<QString> OAIGet_corporations_corporation_id_roles_200_ok::getGrantableRolesAtHq() const {
    return m_grantable_roles_at_hq;
}
void OAIGet_corporations_corporation_id_roles_200_ok::setGrantableRolesAtHq(const QList<QString> &grantable_roles_at_hq) {
    m_grantable_roles_at_hq = grantable_roles_at_hq;
    m_grantable_roles_at_hq_isSet = true;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_grantable_roles_at_hq_Set() const{
    return m_grantable_roles_at_hq_isSet;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_grantable_roles_at_hq_Valid() const{
    return m_grantable_roles_at_hq_isValid;
}

QList<QString> OAIGet_corporations_corporation_id_roles_200_ok::getGrantableRolesAtOther() const {
    return m_grantable_roles_at_other;
}
void OAIGet_corporations_corporation_id_roles_200_ok::setGrantableRolesAtOther(const QList<QString> &grantable_roles_at_other) {
    m_grantable_roles_at_other = grantable_roles_at_other;
    m_grantable_roles_at_other_isSet = true;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_grantable_roles_at_other_Set() const{
    return m_grantable_roles_at_other_isSet;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_grantable_roles_at_other_Valid() const{
    return m_grantable_roles_at_other_isValid;
}

QList<QString> OAIGet_corporations_corporation_id_roles_200_ok::getRoles() const {
    return m_roles;
}
void OAIGet_corporations_corporation_id_roles_200_ok::setRoles(const QList<QString> &roles) {
    m_roles = roles;
    m_roles_isSet = true;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_roles_Set() const{
    return m_roles_isSet;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_roles_Valid() const{
    return m_roles_isValid;
}

QList<QString> OAIGet_corporations_corporation_id_roles_200_ok::getRolesAtBase() const {
    return m_roles_at_base;
}
void OAIGet_corporations_corporation_id_roles_200_ok::setRolesAtBase(const QList<QString> &roles_at_base) {
    m_roles_at_base = roles_at_base;
    m_roles_at_base_isSet = true;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_roles_at_base_Set() const{
    return m_roles_at_base_isSet;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_roles_at_base_Valid() const{
    return m_roles_at_base_isValid;
}

QList<QString> OAIGet_corporations_corporation_id_roles_200_ok::getRolesAtHq() const {
    return m_roles_at_hq;
}
void OAIGet_corporations_corporation_id_roles_200_ok::setRolesAtHq(const QList<QString> &roles_at_hq) {
    m_roles_at_hq = roles_at_hq;
    m_roles_at_hq_isSet = true;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_roles_at_hq_Set() const{
    return m_roles_at_hq_isSet;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_roles_at_hq_Valid() const{
    return m_roles_at_hq_isValid;
}

QList<QString> OAIGet_corporations_corporation_id_roles_200_ok::getRolesAtOther() const {
    return m_roles_at_other;
}
void OAIGet_corporations_corporation_id_roles_200_ok::setRolesAtOther(const QList<QString> &roles_at_other) {
    m_roles_at_other = roles_at_other;
    m_roles_at_other_isSet = true;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_roles_at_other_Set() const{
    return m_roles_at_other_isSet;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::is_roles_at_other_Valid() const{
    return m_roles_at_other_isValid;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_character_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grantable_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_grantable_roles_at_base.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_grantable_roles_at_hq.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_grantable_roles_at_other.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles_at_base.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles_at_hq.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles_at_other.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_corporations_corporation_id_roles_200_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_character_id_isValid && true;
}

} // namespace OpenAPI
