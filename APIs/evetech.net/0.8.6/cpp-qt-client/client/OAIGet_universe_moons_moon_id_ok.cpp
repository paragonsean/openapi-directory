/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_universe_moons_moon_id_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_universe_moons_moon_id_ok::OAIGet_universe_moons_moon_id_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_universe_moons_moon_id_ok::OAIGet_universe_moons_moon_id_ok() {
    this->initializeModel();
}

OAIGet_universe_moons_moon_id_ok::~OAIGet_universe_moons_moon_id_ok() {}

void OAIGet_universe_moons_moon_id_ok::initializeModel() {

    m_moon_id_isSet = false;
    m_moon_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;

    m_system_id_isSet = false;
    m_system_id_isValid = false;
}

void OAIGet_universe_moons_moon_id_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_universe_moons_moon_id_ok::fromJsonObject(QJsonObject json) {

    m_moon_id_isValid = ::OpenAPI::fromJsonValue(m_moon_id, json[QString("moon_id")]);
    m_moon_id_isSet = !json[QString("moon_id")].isNull() && m_moon_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_system_id_isValid = ::OpenAPI::fromJsonValue(m_system_id, json[QString("system_id")]);
    m_system_id_isSet = !json[QString("system_id")].isNull() && m_system_id_isValid;
}

QString OAIGet_universe_moons_moon_id_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_universe_moons_moon_id_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_moon_id_isSet) {
        obj.insert(QString("moon_id"), ::OpenAPI::toJsonValue(m_moon_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_position.isSet()) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_system_id_isSet) {
        obj.insert(QString("system_id"), ::OpenAPI::toJsonValue(m_system_id));
    }
    return obj;
}

qint32 OAIGet_universe_moons_moon_id_ok::getMoonId() const {
    return m_moon_id;
}
void OAIGet_universe_moons_moon_id_ok::setMoonId(const qint32 &moon_id) {
    m_moon_id = moon_id;
    m_moon_id_isSet = true;
}

bool OAIGet_universe_moons_moon_id_ok::is_moon_id_Set() const{
    return m_moon_id_isSet;
}

bool OAIGet_universe_moons_moon_id_ok::is_moon_id_Valid() const{
    return m_moon_id_isValid;
}

QString OAIGet_universe_moons_moon_id_ok::getName() const {
    return m_name;
}
void OAIGet_universe_moons_moon_id_ok::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGet_universe_moons_moon_id_ok::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGet_universe_moons_moon_id_ok::is_name_Valid() const{
    return m_name_isValid;
}

OAIGet_universe_moons_moon_id_position OAIGet_universe_moons_moon_id_ok::getPosition() const {
    return m_position;
}
void OAIGet_universe_moons_moon_id_ok::setPosition(const OAIGet_universe_moons_moon_id_position &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIGet_universe_moons_moon_id_ok::is_position_Set() const{
    return m_position_isSet;
}

bool OAIGet_universe_moons_moon_id_ok::is_position_Valid() const{
    return m_position_isValid;
}

qint32 OAIGet_universe_moons_moon_id_ok::getSystemId() const {
    return m_system_id;
}
void OAIGet_universe_moons_moon_id_ok::setSystemId(const qint32 &system_id) {
    m_system_id = system_id;
    m_system_id_isSet = true;
}

bool OAIGet_universe_moons_moon_id_ok::is_system_id_Set() const{
    return m_system_id_isSet;
}

bool OAIGet_universe_moons_moon_id_ok::is_system_id_Valid() const{
    return m_system_id_isValid;
}

bool OAIGet_universe_moons_moon_id_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_moon_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_universe_moons_moon_id_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_moon_id_isValid && m_name_isValid && m_position_isValid && m_system_id_isValid && true;
}

} // namespace OpenAPI
