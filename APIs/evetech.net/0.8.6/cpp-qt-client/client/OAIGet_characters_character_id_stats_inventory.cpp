/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_stats_inventory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_stats_inventory::OAIGet_characters_character_id_stats_inventory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_stats_inventory::OAIGet_characters_character_id_stats_inventory() {
    this->initializeModel();
}

OAIGet_characters_character_id_stats_inventory::~OAIGet_characters_character_id_stats_inventory() {}

void OAIGet_characters_character_id_stats_inventory::initializeModel() {

    m_abandon_loot_quantity_isSet = false;
    m_abandon_loot_quantity_isValid = false;

    m_trash_item_quantity_isSet = false;
    m_trash_item_quantity_isValid = false;
}

void OAIGet_characters_character_id_stats_inventory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_stats_inventory::fromJsonObject(QJsonObject json) {

    m_abandon_loot_quantity_isValid = ::OpenAPI::fromJsonValue(m_abandon_loot_quantity, json[QString("abandon_loot_quantity")]);
    m_abandon_loot_quantity_isSet = !json[QString("abandon_loot_quantity")].isNull() && m_abandon_loot_quantity_isValid;

    m_trash_item_quantity_isValid = ::OpenAPI::fromJsonValue(m_trash_item_quantity, json[QString("trash_item_quantity")]);
    m_trash_item_quantity_isSet = !json[QString("trash_item_quantity")].isNull() && m_trash_item_quantity_isValid;
}

QString OAIGet_characters_character_id_stats_inventory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_stats_inventory::asJsonObject() const {
    QJsonObject obj;
    if (m_abandon_loot_quantity_isSet) {
        obj.insert(QString("abandon_loot_quantity"), ::OpenAPI::toJsonValue(m_abandon_loot_quantity));
    }
    if (m_trash_item_quantity_isSet) {
        obj.insert(QString("trash_item_quantity"), ::OpenAPI::toJsonValue(m_trash_item_quantity));
    }
    return obj;
}

qint64 OAIGet_characters_character_id_stats_inventory::getAbandonLootQuantity() const {
    return m_abandon_loot_quantity;
}
void OAIGet_characters_character_id_stats_inventory::setAbandonLootQuantity(const qint64 &abandon_loot_quantity) {
    m_abandon_loot_quantity = abandon_loot_quantity;
    m_abandon_loot_quantity_isSet = true;
}

bool OAIGet_characters_character_id_stats_inventory::is_abandon_loot_quantity_Set() const{
    return m_abandon_loot_quantity_isSet;
}

bool OAIGet_characters_character_id_stats_inventory::is_abandon_loot_quantity_Valid() const{
    return m_abandon_loot_quantity_isValid;
}

qint64 OAIGet_characters_character_id_stats_inventory::getTrashItemQuantity() const {
    return m_trash_item_quantity;
}
void OAIGet_characters_character_id_stats_inventory::setTrashItemQuantity(const qint64 &trash_item_quantity) {
    m_trash_item_quantity = trash_item_quantity;
    m_trash_item_quantity_isSet = true;
}

bool OAIGet_characters_character_id_stats_inventory::is_trash_item_quantity_Set() const{
    return m_trash_item_quantity_isSet;
}

bool OAIGet_characters_character_id_stats_inventory::is_trash_item_quantity_Valid() const{
    return m_trash_item_quantity_isValid;
}

bool OAIGet_characters_character_id_stats_inventory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_abandon_loot_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trash_item_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_stats_inventory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
