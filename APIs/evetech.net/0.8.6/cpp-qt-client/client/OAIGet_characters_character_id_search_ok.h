/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_characters_character_id_search_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_characters_character_id_search_ok_H
#define OAIGet_characters_character_id_search_ok_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_characters_character_id_search_ok : public OAIObject {
public:
    OAIGet_characters_character_id_search_ok();
    OAIGet_characters_character_id_search_ok(QString json);
    ~OAIGet_characters_character_id_search_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<qint32> getAgent() const;
    void setAgent(const QList<qint32> &agent);
    bool is_agent_Set() const;
    bool is_agent_Valid() const;

    QList<qint32> getAlliance() const;
    void setAlliance(const QList<qint32> &alliance);
    bool is_alliance_Set() const;
    bool is_alliance_Valid() const;

    QList<qint32> getCharacter() const;
    void setCharacter(const QList<qint32> &character);
    bool is_character_Set() const;
    bool is_character_Valid() const;

    QList<qint32> getConstellation() const;
    void setConstellation(const QList<qint32> &constellation);
    bool is_constellation_Set() const;
    bool is_constellation_Valid() const;

    QList<qint32> getCorporation() const;
    void setCorporation(const QList<qint32> &corporation);
    bool is_corporation_Set() const;
    bool is_corporation_Valid() const;

    QList<qint32> getFaction() const;
    void setFaction(const QList<qint32> &faction);
    bool is_faction_Set() const;
    bool is_faction_Valid() const;

    QList<qint32> getInventoryType() const;
    void setInventoryType(const QList<qint32> &inventory_type);
    bool is_inventory_type_Set() const;
    bool is_inventory_type_Valid() const;

    QList<qint32> getRegion() const;
    void setRegion(const QList<qint32> &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QList<qint32> getSolarSystem() const;
    void setSolarSystem(const QList<qint32> &solar_system);
    bool is_solar_system_Set() const;
    bool is_solar_system_Valid() const;

    QList<qint32> getStation() const;
    void setStation(const QList<qint32> &station);
    bool is_station_Set() const;
    bool is_station_Valid() const;

    QList<qint64> getStructure() const;
    void setStructure(const QList<qint64> &structure);
    bool is_structure_Set() const;
    bool is_structure_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<qint32> m_agent;
    bool m_agent_isSet;
    bool m_agent_isValid;

    QList<qint32> m_alliance;
    bool m_alliance_isSet;
    bool m_alliance_isValid;

    QList<qint32> m_character;
    bool m_character_isSet;
    bool m_character_isValid;

    QList<qint32> m_constellation;
    bool m_constellation_isSet;
    bool m_constellation_isValid;

    QList<qint32> m_corporation;
    bool m_corporation_isSet;
    bool m_corporation_isValid;

    QList<qint32> m_faction;
    bool m_faction_isSet;
    bool m_faction_isValid;

    QList<qint32> m_inventory_type;
    bool m_inventory_type_isSet;
    bool m_inventory_type_isValid;

    QList<qint32> m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QList<qint32> m_solar_system;
    bool m_solar_system_isSet;
    bool m_solar_system_isValid;

    QList<qint32> m_station;
    bool m_station_isSet;
    bool m_station_isValid;

    QList<qint64> m_structure;
    bool m_structure_isSet;
    bool m_structure_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_characters_character_id_search_ok)

#endif // OAIGet_characters_character_id_search_ok_H
