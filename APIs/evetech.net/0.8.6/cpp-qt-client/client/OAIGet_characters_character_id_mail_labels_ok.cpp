/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_mail_labels_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_mail_labels_ok::OAIGet_characters_character_id_mail_labels_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_mail_labels_ok::OAIGet_characters_character_id_mail_labels_ok() {
    this->initializeModel();
}

OAIGet_characters_character_id_mail_labels_ok::~OAIGet_characters_character_id_mail_labels_ok() {}

void OAIGet_characters_character_id_mail_labels_ok::initializeModel() {

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_total_unread_count_isSet = false;
    m_total_unread_count_isValid = false;
}

void OAIGet_characters_character_id_mail_labels_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_mail_labels_ok::fromJsonObject(QJsonObject json) {

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_total_unread_count_isValid = ::OpenAPI::fromJsonValue(m_total_unread_count, json[QString("total_unread_count")]);
    m_total_unread_count_isSet = !json[QString("total_unread_count")].isNull() && m_total_unread_count_isValid;
}

QString OAIGet_characters_character_id_mail_labels_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_mail_labels_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_total_unread_count_isSet) {
        obj.insert(QString("total_unread_count"), ::OpenAPI::toJsonValue(m_total_unread_count));
    }
    return obj;
}

QList<OAIGet_characters_character_id_mail_labels_label> OAIGet_characters_character_id_mail_labels_ok::getLabels() const {
    return m_labels;
}
void OAIGet_characters_character_id_mail_labels_ok::setLabels(const QList<OAIGet_characters_character_id_mail_labels_label> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGet_characters_character_id_mail_labels_ok::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGet_characters_character_id_mail_labels_ok::is_labels_Valid() const{
    return m_labels_isValid;
}

qint32 OAIGet_characters_character_id_mail_labels_ok::getTotalUnreadCount() const {
    return m_total_unread_count;
}
void OAIGet_characters_character_id_mail_labels_ok::setTotalUnreadCount(const qint32 &total_unread_count) {
    m_total_unread_count = total_unread_count;
    m_total_unread_count_isSet = true;
}

bool OAIGet_characters_character_id_mail_labels_ok::is_total_unread_count_Set() const{
    return m_total_unread_count_isSet;
}

bool OAIGet_characters_character_id_mail_labels_ok::is_total_unread_count_Valid() const{
    return m_total_unread_count_isValid;
}

bool OAIGet_characters_character_id_mail_labels_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_unread_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_mail_labels_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
