/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_characters_character_id_stats_module.h
 *
 * module object
 */

#ifndef OAIGet_characters_character_id_stats_module_H
#define OAIGet_characters_character_id_stats_module_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_characters_character_id_stats_module : public OAIObject {
public:
    OAIGet_characters_character_id_stats_module();
    OAIGet_characters_character_id_stats_module(QString json);
    ~OAIGet_characters_character_id_stats_module() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getActivationsArmorHardener() const;
    void setActivationsArmorHardener(const qint64 &activations_armor_hardener);
    bool is_activations_armor_hardener_Set() const;
    bool is_activations_armor_hardener_Valid() const;

    qint64 getActivationsArmorRepairUnit() const;
    void setActivationsArmorRepairUnit(const qint64 &activations_armor_repair_unit);
    bool is_activations_armor_repair_unit_Set() const;
    bool is_activations_armor_repair_unit_Valid() const;

    qint64 getActivationsArmorResistanceShiftHardener() const;
    void setActivationsArmorResistanceShiftHardener(const qint64 &activations_armor_resistance_shift_hardener);
    bool is_activations_armor_resistance_shift_hardener_Set() const;
    bool is_activations_armor_resistance_shift_hardener_Valid() const;

    qint64 getActivationsAutomatedTargetingSystem() const;
    void setActivationsAutomatedTargetingSystem(const qint64 &activations_automated_targeting_system);
    bool is_activations_automated_targeting_system_Set() const;
    bool is_activations_automated_targeting_system_Valid() const;

    qint64 getActivationsBastion() const;
    void setActivationsBastion(const qint64 &activations_bastion);
    bool is_activations_bastion_Set() const;
    bool is_activations_bastion_Valid() const;

    qint64 getActivationsBombLauncher() const;
    void setActivationsBombLauncher(const qint64 &activations_bomb_launcher);
    bool is_activations_bomb_launcher_Set() const;
    bool is_activations_bomb_launcher_Valid() const;

    qint64 getActivationsCapacitorBooster() const;
    void setActivationsCapacitorBooster(const qint64 &activations_capacitor_booster);
    bool is_activations_capacitor_booster_Set() const;
    bool is_activations_capacitor_booster_Valid() const;

    qint64 getActivationsCargoScanner() const;
    void setActivationsCargoScanner(const qint64 &activations_cargo_scanner);
    bool is_activations_cargo_scanner_Set() const;
    bool is_activations_cargo_scanner_Valid() const;

    qint64 getActivationsCloakingDevice() const;
    void setActivationsCloakingDevice(const qint64 &activations_cloaking_device);
    bool is_activations_cloaking_device_Set() const;
    bool is_activations_cloaking_device_Valid() const;

    qint64 getActivationsCloneVatBay() const;
    void setActivationsCloneVatBay(const qint64 &activations_clone_vat_bay);
    bool is_activations_clone_vat_bay_Set() const;
    bool is_activations_clone_vat_bay_Valid() const;

    qint64 getActivationsCynosuralField() const;
    void setActivationsCynosuralField(const qint64 &activations_cynosural_field);
    bool is_activations_cynosural_field_Set() const;
    bool is_activations_cynosural_field_Valid() const;

    qint64 getActivationsDamageControl() const;
    void setActivationsDamageControl(const qint64 &activations_damage_control);
    bool is_activations_damage_control_Set() const;
    bool is_activations_damage_control_Valid() const;

    qint64 getActivationsDataMiners() const;
    void setActivationsDataMiners(const qint64 &activations_data_miners);
    bool is_activations_data_miners_Set() const;
    bool is_activations_data_miners_Valid() const;

    qint64 getActivationsDroneControlUnit() const;
    void setActivationsDroneControlUnit(const qint64 &activations_drone_control_unit);
    bool is_activations_drone_control_unit_Set() const;
    bool is_activations_drone_control_unit_Valid() const;

    qint64 getActivationsDroneTrackingModules() const;
    void setActivationsDroneTrackingModules(const qint64 &activations_drone_tracking_modules);
    bool is_activations_drone_tracking_modules_Set() const;
    bool is_activations_drone_tracking_modules_Valid() const;

    qint64 getActivationsEccm() const;
    void setActivationsEccm(const qint64 &activations_eccm);
    bool is_activations_eccm_Set() const;
    bool is_activations_eccm_Valid() const;

    qint64 getActivationsEcm() const;
    void setActivationsEcm(const qint64 &activations_ecm);
    bool is_activations_ecm_Set() const;
    bool is_activations_ecm_Valid() const;

    qint64 getActivationsEcmBurst() const;
    void setActivationsEcmBurst(const qint64 &activations_ecm_burst);
    bool is_activations_ecm_burst_Set() const;
    bool is_activations_ecm_burst_Valid() const;

    qint64 getActivationsEnergyDestabilizer() const;
    void setActivationsEnergyDestabilizer(const qint64 &activations_energy_destabilizer);
    bool is_activations_energy_destabilizer_Set() const;
    bool is_activations_energy_destabilizer_Valid() const;

    qint64 getActivationsEnergyVampire() const;
    void setActivationsEnergyVampire(const qint64 &activations_energy_vampire);
    bool is_activations_energy_vampire_Set() const;
    bool is_activations_energy_vampire_Valid() const;

    qint64 getActivationsEnergyWeapon() const;
    void setActivationsEnergyWeapon(const qint64 &activations_energy_weapon);
    bool is_activations_energy_weapon_Set() const;
    bool is_activations_energy_weapon_Valid() const;

    qint64 getActivationsFestivalLauncher() const;
    void setActivationsFestivalLauncher(const qint64 &activations_festival_launcher);
    bool is_activations_festival_launcher_Set() const;
    bool is_activations_festival_launcher_Valid() const;

    qint64 getActivationsFrequencyMiningLaser() const;
    void setActivationsFrequencyMiningLaser(const qint64 &activations_frequency_mining_laser);
    bool is_activations_frequency_mining_laser_Set() const;
    bool is_activations_frequency_mining_laser_Valid() const;

    qint64 getActivationsFueledArmorRepairer() const;
    void setActivationsFueledArmorRepairer(const qint64 &activations_fueled_armor_repairer);
    bool is_activations_fueled_armor_repairer_Set() const;
    bool is_activations_fueled_armor_repairer_Valid() const;

    qint64 getActivationsFueledShieldBooster() const;
    void setActivationsFueledShieldBooster(const qint64 &activations_fueled_shield_booster);
    bool is_activations_fueled_shield_booster_Set() const;
    bool is_activations_fueled_shield_booster_Valid() const;

    qint64 getActivationsGangCoordinator() const;
    void setActivationsGangCoordinator(const qint64 &activations_gang_coordinator);
    bool is_activations_gang_coordinator_Set() const;
    bool is_activations_gang_coordinator_Valid() const;

    qint64 getActivationsGasCloudHarvester() const;
    void setActivationsGasCloudHarvester(const qint64 &activations_gas_cloud_harvester);
    bool is_activations_gas_cloud_harvester_Set() const;
    bool is_activations_gas_cloud_harvester_Valid() const;

    qint64 getActivationsHullRepairUnit() const;
    void setActivationsHullRepairUnit(const qint64 &activations_hull_repair_unit);
    bool is_activations_hull_repair_unit_Set() const;
    bool is_activations_hull_repair_unit_Valid() const;

    qint64 getActivationsHybridWeapon() const;
    void setActivationsHybridWeapon(const qint64 &activations_hybrid_weapon);
    bool is_activations_hybrid_weapon_Set() const;
    bool is_activations_hybrid_weapon_Valid() const;

    qint64 getActivationsIndustrialCore() const;
    void setActivationsIndustrialCore(const qint64 &activations_industrial_core);
    bool is_activations_industrial_core_Set() const;
    bool is_activations_industrial_core_Valid() const;

    qint64 getActivationsInterdictionSphereLauncher() const;
    void setActivationsInterdictionSphereLauncher(const qint64 &activations_interdiction_sphere_launcher);
    bool is_activations_interdiction_sphere_launcher_Set() const;
    bool is_activations_interdiction_sphere_launcher_Valid() const;

    qint64 getActivationsMicroJumpDrive() const;
    void setActivationsMicroJumpDrive(const qint64 &activations_micro_jump_drive);
    bool is_activations_micro_jump_drive_Set() const;
    bool is_activations_micro_jump_drive_Valid() const;

    qint64 getActivationsMiningLaser() const;
    void setActivationsMiningLaser(const qint64 &activations_mining_laser);
    bool is_activations_mining_laser_Set() const;
    bool is_activations_mining_laser_Valid() const;

    qint64 getActivationsMissileLauncher() const;
    void setActivationsMissileLauncher(const qint64 &activations_missile_launcher);
    bool is_activations_missile_launcher_Set() const;
    bool is_activations_missile_launcher_Valid() const;

    qint64 getActivationsPassiveTargetingSystem() const;
    void setActivationsPassiveTargetingSystem(const qint64 &activations_passive_targeting_system);
    bool is_activations_passive_targeting_system_Set() const;
    bool is_activations_passive_targeting_system_Valid() const;

    qint64 getActivationsProbeLauncher() const;
    void setActivationsProbeLauncher(const qint64 &activations_probe_launcher);
    bool is_activations_probe_launcher_Set() const;
    bool is_activations_probe_launcher_Valid() const;

    qint64 getActivationsProjectedEccm() const;
    void setActivationsProjectedEccm(const qint64 &activations_projected_eccm);
    bool is_activations_projected_eccm_Set() const;
    bool is_activations_projected_eccm_Valid() const;

    qint64 getActivationsProjectileWeapon() const;
    void setActivationsProjectileWeapon(const qint64 &activations_projectile_weapon);
    bool is_activations_projectile_weapon_Set() const;
    bool is_activations_projectile_weapon_Valid() const;

    qint64 getActivationsPropulsionModule() const;
    void setActivationsPropulsionModule(const qint64 &activations_propulsion_module);
    bool is_activations_propulsion_module_Set() const;
    bool is_activations_propulsion_module_Valid() const;

    qint64 getActivationsRemoteArmorRepairer() const;
    void setActivationsRemoteArmorRepairer(const qint64 &activations_remote_armor_repairer);
    bool is_activations_remote_armor_repairer_Set() const;
    bool is_activations_remote_armor_repairer_Valid() const;

    qint64 getActivationsRemoteCapacitorTransmitter() const;
    void setActivationsRemoteCapacitorTransmitter(const qint64 &activations_remote_capacitor_transmitter);
    bool is_activations_remote_capacitor_transmitter_Set() const;
    bool is_activations_remote_capacitor_transmitter_Valid() const;

    qint64 getActivationsRemoteEcmBurst() const;
    void setActivationsRemoteEcmBurst(const qint64 &activations_remote_ecm_burst);
    bool is_activations_remote_ecm_burst_Set() const;
    bool is_activations_remote_ecm_burst_Valid() const;

    qint64 getActivationsRemoteHullRepairer() const;
    void setActivationsRemoteHullRepairer(const qint64 &activations_remote_hull_repairer);
    bool is_activations_remote_hull_repairer_Set() const;
    bool is_activations_remote_hull_repairer_Valid() const;

    qint64 getActivationsRemoteSensorBooster() const;
    void setActivationsRemoteSensorBooster(const qint64 &activations_remote_sensor_booster);
    bool is_activations_remote_sensor_booster_Set() const;
    bool is_activations_remote_sensor_booster_Valid() const;

    qint64 getActivationsRemoteSensorDamper() const;
    void setActivationsRemoteSensorDamper(const qint64 &activations_remote_sensor_damper);
    bool is_activations_remote_sensor_damper_Set() const;
    bool is_activations_remote_sensor_damper_Valid() const;

    qint64 getActivationsRemoteShieldBooster() const;
    void setActivationsRemoteShieldBooster(const qint64 &activations_remote_shield_booster);
    bool is_activations_remote_shield_booster_Set() const;
    bool is_activations_remote_shield_booster_Valid() const;

    qint64 getActivationsRemoteTrackingComputer() const;
    void setActivationsRemoteTrackingComputer(const qint64 &activations_remote_tracking_computer);
    bool is_activations_remote_tracking_computer_Set() const;
    bool is_activations_remote_tracking_computer_Valid() const;

    qint64 getActivationsSalvager() const;
    void setActivationsSalvager(const qint64 &activations_salvager);
    bool is_activations_salvager_Set() const;
    bool is_activations_salvager_Valid() const;

    qint64 getActivationsSensorBooster() const;
    void setActivationsSensorBooster(const qint64 &activations_sensor_booster);
    bool is_activations_sensor_booster_Set() const;
    bool is_activations_sensor_booster_Valid() const;

    qint64 getActivationsShieldBooster() const;
    void setActivationsShieldBooster(const qint64 &activations_shield_booster);
    bool is_activations_shield_booster_Set() const;
    bool is_activations_shield_booster_Valid() const;

    qint64 getActivationsShieldHardener() const;
    void setActivationsShieldHardener(const qint64 &activations_shield_hardener);
    bool is_activations_shield_hardener_Set() const;
    bool is_activations_shield_hardener_Valid() const;

    qint64 getActivationsShipScanner() const;
    void setActivationsShipScanner(const qint64 &activations_ship_scanner);
    bool is_activations_ship_scanner_Set() const;
    bool is_activations_ship_scanner_Valid() const;

    qint64 getActivationsSiege() const;
    void setActivationsSiege(const qint64 &activations_siege);
    bool is_activations_siege_Set() const;
    bool is_activations_siege_Valid() const;

    qint64 getActivationsSmartBomb() const;
    void setActivationsSmartBomb(const qint64 &activations_smart_bomb);
    bool is_activations_smart_bomb_Set() const;
    bool is_activations_smart_bomb_Valid() const;

    qint64 getActivationsStasisWeb() const;
    void setActivationsStasisWeb(const qint64 &activations_stasis_web);
    bool is_activations_stasis_web_Set() const;
    bool is_activations_stasis_web_Valid() const;

    qint64 getActivationsStripMiner() const;
    void setActivationsStripMiner(const qint64 &activations_strip_miner);
    bool is_activations_strip_miner_Set() const;
    bool is_activations_strip_miner_Valid() const;

    qint64 getActivationsSuperWeapon() const;
    void setActivationsSuperWeapon(const qint64 &activations_super_weapon);
    bool is_activations_super_weapon_Set() const;
    bool is_activations_super_weapon_Valid() const;

    qint64 getActivationsSurveyScanner() const;
    void setActivationsSurveyScanner(const qint64 &activations_survey_scanner);
    bool is_activations_survey_scanner_Set() const;
    bool is_activations_survey_scanner_Valid() const;

    qint64 getActivationsTargetBreaker() const;
    void setActivationsTargetBreaker(const qint64 &activations_target_breaker);
    bool is_activations_target_breaker_Set() const;
    bool is_activations_target_breaker_Valid() const;

    qint64 getActivationsTargetPainter() const;
    void setActivationsTargetPainter(const qint64 &activations_target_painter);
    bool is_activations_target_painter_Set() const;
    bool is_activations_target_painter_Valid() const;

    qint64 getActivationsTrackingComputer() const;
    void setActivationsTrackingComputer(const qint64 &activations_tracking_computer);
    bool is_activations_tracking_computer_Set() const;
    bool is_activations_tracking_computer_Valid() const;

    qint64 getActivationsTrackingDisruptor() const;
    void setActivationsTrackingDisruptor(const qint64 &activations_tracking_disruptor);
    bool is_activations_tracking_disruptor_Set() const;
    bool is_activations_tracking_disruptor_Valid() const;

    qint64 getActivationsTractorBeam() const;
    void setActivationsTractorBeam(const qint64 &activations_tractor_beam);
    bool is_activations_tractor_beam_Set() const;
    bool is_activations_tractor_beam_Valid() const;

    qint64 getActivationsTriage() const;
    void setActivationsTriage(const qint64 &activations_triage);
    bool is_activations_triage_Set() const;
    bool is_activations_triage_Valid() const;

    qint64 getActivationsWarpDisruptFieldGenerator() const;
    void setActivationsWarpDisruptFieldGenerator(const qint64 &activations_warp_disrupt_field_generator);
    bool is_activations_warp_disrupt_field_generator_Set() const;
    bool is_activations_warp_disrupt_field_generator_Valid() const;

    qint64 getActivationsWarpScrambler() const;
    void setActivationsWarpScrambler(const qint64 &activations_warp_scrambler);
    bool is_activations_warp_scrambler_Set() const;
    bool is_activations_warp_scrambler_Valid() const;

    qint64 getLinkWeapons() const;
    void setLinkWeapons(const qint64 &link_weapons);
    bool is_link_weapons_Set() const;
    bool is_link_weapons_Valid() const;

    qint64 getOverload() const;
    void setOverload(const qint64 &overload);
    bool is_overload_Set() const;
    bool is_overload_Valid() const;

    qint64 getRepairs() const;
    void setRepairs(const qint64 &repairs);
    bool is_repairs_Set() const;
    bool is_repairs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_activations_armor_hardener;
    bool m_activations_armor_hardener_isSet;
    bool m_activations_armor_hardener_isValid;

    qint64 m_activations_armor_repair_unit;
    bool m_activations_armor_repair_unit_isSet;
    bool m_activations_armor_repair_unit_isValid;

    qint64 m_activations_armor_resistance_shift_hardener;
    bool m_activations_armor_resistance_shift_hardener_isSet;
    bool m_activations_armor_resistance_shift_hardener_isValid;

    qint64 m_activations_automated_targeting_system;
    bool m_activations_automated_targeting_system_isSet;
    bool m_activations_automated_targeting_system_isValid;

    qint64 m_activations_bastion;
    bool m_activations_bastion_isSet;
    bool m_activations_bastion_isValid;

    qint64 m_activations_bomb_launcher;
    bool m_activations_bomb_launcher_isSet;
    bool m_activations_bomb_launcher_isValid;

    qint64 m_activations_capacitor_booster;
    bool m_activations_capacitor_booster_isSet;
    bool m_activations_capacitor_booster_isValid;

    qint64 m_activations_cargo_scanner;
    bool m_activations_cargo_scanner_isSet;
    bool m_activations_cargo_scanner_isValid;

    qint64 m_activations_cloaking_device;
    bool m_activations_cloaking_device_isSet;
    bool m_activations_cloaking_device_isValid;

    qint64 m_activations_clone_vat_bay;
    bool m_activations_clone_vat_bay_isSet;
    bool m_activations_clone_vat_bay_isValid;

    qint64 m_activations_cynosural_field;
    bool m_activations_cynosural_field_isSet;
    bool m_activations_cynosural_field_isValid;

    qint64 m_activations_damage_control;
    bool m_activations_damage_control_isSet;
    bool m_activations_damage_control_isValid;

    qint64 m_activations_data_miners;
    bool m_activations_data_miners_isSet;
    bool m_activations_data_miners_isValid;

    qint64 m_activations_drone_control_unit;
    bool m_activations_drone_control_unit_isSet;
    bool m_activations_drone_control_unit_isValid;

    qint64 m_activations_drone_tracking_modules;
    bool m_activations_drone_tracking_modules_isSet;
    bool m_activations_drone_tracking_modules_isValid;

    qint64 m_activations_eccm;
    bool m_activations_eccm_isSet;
    bool m_activations_eccm_isValid;

    qint64 m_activations_ecm;
    bool m_activations_ecm_isSet;
    bool m_activations_ecm_isValid;

    qint64 m_activations_ecm_burst;
    bool m_activations_ecm_burst_isSet;
    bool m_activations_ecm_burst_isValid;

    qint64 m_activations_energy_destabilizer;
    bool m_activations_energy_destabilizer_isSet;
    bool m_activations_energy_destabilizer_isValid;

    qint64 m_activations_energy_vampire;
    bool m_activations_energy_vampire_isSet;
    bool m_activations_energy_vampire_isValid;

    qint64 m_activations_energy_weapon;
    bool m_activations_energy_weapon_isSet;
    bool m_activations_energy_weapon_isValid;

    qint64 m_activations_festival_launcher;
    bool m_activations_festival_launcher_isSet;
    bool m_activations_festival_launcher_isValid;

    qint64 m_activations_frequency_mining_laser;
    bool m_activations_frequency_mining_laser_isSet;
    bool m_activations_frequency_mining_laser_isValid;

    qint64 m_activations_fueled_armor_repairer;
    bool m_activations_fueled_armor_repairer_isSet;
    bool m_activations_fueled_armor_repairer_isValid;

    qint64 m_activations_fueled_shield_booster;
    bool m_activations_fueled_shield_booster_isSet;
    bool m_activations_fueled_shield_booster_isValid;

    qint64 m_activations_gang_coordinator;
    bool m_activations_gang_coordinator_isSet;
    bool m_activations_gang_coordinator_isValid;

    qint64 m_activations_gas_cloud_harvester;
    bool m_activations_gas_cloud_harvester_isSet;
    bool m_activations_gas_cloud_harvester_isValid;

    qint64 m_activations_hull_repair_unit;
    bool m_activations_hull_repair_unit_isSet;
    bool m_activations_hull_repair_unit_isValid;

    qint64 m_activations_hybrid_weapon;
    bool m_activations_hybrid_weapon_isSet;
    bool m_activations_hybrid_weapon_isValid;

    qint64 m_activations_industrial_core;
    bool m_activations_industrial_core_isSet;
    bool m_activations_industrial_core_isValid;

    qint64 m_activations_interdiction_sphere_launcher;
    bool m_activations_interdiction_sphere_launcher_isSet;
    bool m_activations_interdiction_sphere_launcher_isValid;

    qint64 m_activations_micro_jump_drive;
    bool m_activations_micro_jump_drive_isSet;
    bool m_activations_micro_jump_drive_isValid;

    qint64 m_activations_mining_laser;
    bool m_activations_mining_laser_isSet;
    bool m_activations_mining_laser_isValid;

    qint64 m_activations_missile_launcher;
    bool m_activations_missile_launcher_isSet;
    bool m_activations_missile_launcher_isValid;

    qint64 m_activations_passive_targeting_system;
    bool m_activations_passive_targeting_system_isSet;
    bool m_activations_passive_targeting_system_isValid;

    qint64 m_activations_probe_launcher;
    bool m_activations_probe_launcher_isSet;
    bool m_activations_probe_launcher_isValid;

    qint64 m_activations_projected_eccm;
    bool m_activations_projected_eccm_isSet;
    bool m_activations_projected_eccm_isValid;

    qint64 m_activations_projectile_weapon;
    bool m_activations_projectile_weapon_isSet;
    bool m_activations_projectile_weapon_isValid;

    qint64 m_activations_propulsion_module;
    bool m_activations_propulsion_module_isSet;
    bool m_activations_propulsion_module_isValid;

    qint64 m_activations_remote_armor_repairer;
    bool m_activations_remote_armor_repairer_isSet;
    bool m_activations_remote_armor_repairer_isValid;

    qint64 m_activations_remote_capacitor_transmitter;
    bool m_activations_remote_capacitor_transmitter_isSet;
    bool m_activations_remote_capacitor_transmitter_isValid;

    qint64 m_activations_remote_ecm_burst;
    bool m_activations_remote_ecm_burst_isSet;
    bool m_activations_remote_ecm_burst_isValid;

    qint64 m_activations_remote_hull_repairer;
    bool m_activations_remote_hull_repairer_isSet;
    bool m_activations_remote_hull_repairer_isValid;

    qint64 m_activations_remote_sensor_booster;
    bool m_activations_remote_sensor_booster_isSet;
    bool m_activations_remote_sensor_booster_isValid;

    qint64 m_activations_remote_sensor_damper;
    bool m_activations_remote_sensor_damper_isSet;
    bool m_activations_remote_sensor_damper_isValid;

    qint64 m_activations_remote_shield_booster;
    bool m_activations_remote_shield_booster_isSet;
    bool m_activations_remote_shield_booster_isValid;

    qint64 m_activations_remote_tracking_computer;
    bool m_activations_remote_tracking_computer_isSet;
    bool m_activations_remote_tracking_computer_isValid;

    qint64 m_activations_salvager;
    bool m_activations_salvager_isSet;
    bool m_activations_salvager_isValid;

    qint64 m_activations_sensor_booster;
    bool m_activations_sensor_booster_isSet;
    bool m_activations_sensor_booster_isValid;

    qint64 m_activations_shield_booster;
    bool m_activations_shield_booster_isSet;
    bool m_activations_shield_booster_isValid;

    qint64 m_activations_shield_hardener;
    bool m_activations_shield_hardener_isSet;
    bool m_activations_shield_hardener_isValid;

    qint64 m_activations_ship_scanner;
    bool m_activations_ship_scanner_isSet;
    bool m_activations_ship_scanner_isValid;

    qint64 m_activations_siege;
    bool m_activations_siege_isSet;
    bool m_activations_siege_isValid;

    qint64 m_activations_smart_bomb;
    bool m_activations_smart_bomb_isSet;
    bool m_activations_smart_bomb_isValid;

    qint64 m_activations_stasis_web;
    bool m_activations_stasis_web_isSet;
    bool m_activations_stasis_web_isValid;

    qint64 m_activations_strip_miner;
    bool m_activations_strip_miner_isSet;
    bool m_activations_strip_miner_isValid;

    qint64 m_activations_super_weapon;
    bool m_activations_super_weapon_isSet;
    bool m_activations_super_weapon_isValid;

    qint64 m_activations_survey_scanner;
    bool m_activations_survey_scanner_isSet;
    bool m_activations_survey_scanner_isValid;

    qint64 m_activations_target_breaker;
    bool m_activations_target_breaker_isSet;
    bool m_activations_target_breaker_isValid;

    qint64 m_activations_target_painter;
    bool m_activations_target_painter_isSet;
    bool m_activations_target_painter_isValid;

    qint64 m_activations_tracking_computer;
    bool m_activations_tracking_computer_isSet;
    bool m_activations_tracking_computer_isValid;

    qint64 m_activations_tracking_disruptor;
    bool m_activations_tracking_disruptor_isSet;
    bool m_activations_tracking_disruptor_isValid;

    qint64 m_activations_tractor_beam;
    bool m_activations_tractor_beam_isSet;
    bool m_activations_tractor_beam_isValid;

    qint64 m_activations_triage;
    bool m_activations_triage_isSet;
    bool m_activations_triage_isValid;

    qint64 m_activations_warp_disrupt_field_generator;
    bool m_activations_warp_disrupt_field_generator_isSet;
    bool m_activations_warp_disrupt_field_generator_isValid;

    qint64 m_activations_warp_scrambler;
    bool m_activations_warp_scrambler_isSet;
    bool m_activations_warp_scrambler_isValid;

    qint64 m_link_weapons;
    bool m_link_weapons_isSet;
    bool m_link_weapons_isValid;

    qint64 m_overload;
    bool m_overload_isSet;
    bool m_overload_isValid;

    qint64 m_repairs;
    bool m_repairs_isSet;
    bool m_repairs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_characters_character_id_stats_module)

#endif // OAIGet_characters_character_id_stats_module_H
