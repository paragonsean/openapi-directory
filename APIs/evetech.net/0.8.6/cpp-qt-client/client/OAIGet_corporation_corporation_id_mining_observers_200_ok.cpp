/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_corporation_corporation_id_mining_observers_200_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_corporation_corporation_id_mining_observers_200_ok::OAIGet_corporation_corporation_id_mining_observers_200_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_corporation_corporation_id_mining_observers_200_ok::OAIGet_corporation_corporation_id_mining_observers_200_ok() {
    this->initializeModel();
}

OAIGet_corporation_corporation_id_mining_observers_200_ok::~OAIGet_corporation_corporation_id_mining_observers_200_ok() {}

void OAIGet_corporation_corporation_id_mining_observers_200_ok::initializeModel() {

    m_last_updated_isSet = false;
    m_last_updated_isValid = false;

    m_observer_id_isSet = false;
    m_observer_id_isValid = false;

    m_observer_type_isSet = false;
    m_observer_type_isValid = false;
}

void OAIGet_corporation_corporation_id_mining_observers_200_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_corporation_corporation_id_mining_observers_200_ok::fromJsonObject(QJsonObject json) {

    m_last_updated_isValid = ::OpenAPI::fromJsonValue(m_last_updated, json[QString("last_updated")]);
    m_last_updated_isSet = !json[QString("last_updated")].isNull() && m_last_updated_isValid;

    m_observer_id_isValid = ::OpenAPI::fromJsonValue(m_observer_id, json[QString("observer_id")]);
    m_observer_id_isSet = !json[QString("observer_id")].isNull() && m_observer_id_isValid;

    m_observer_type_isValid = ::OpenAPI::fromJsonValue(m_observer_type, json[QString("observer_type")]);
    m_observer_type_isSet = !json[QString("observer_type")].isNull() && m_observer_type_isValid;
}

QString OAIGet_corporation_corporation_id_mining_observers_200_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_corporation_corporation_id_mining_observers_200_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_last_updated_isSet) {
        obj.insert(QString("last_updated"), ::OpenAPI::toJsonValue(m_last_updated));
    }
    if (m_observer_id_isSet) {
        obj.insert(QString("observer_id"), ::OpenAPI::toJsonValue(m_observer_id));
    }
    if (m_observer_type_isSet) {
        obj.insert(QString("observer_type"), ::OpenAPI::toJsonValue(m_observer_type));
    }
    return obj;
}

QDate OAIGet_corporation_corporation_id_mining_observers_200_ok::getLastUpdated() const {
    return m_last_updated;
}
void OAIGet_corporation_corporation_id_mining_observers_200_ok::setLastUpdated(const QDate &last_updated) {
    m_last_updated = last_updated;
    m_last_updated_isSet = true;
}

bool OAIGet_corporation_corporation_id_mining_observers_200_ok::is_last_updated_Set() const{
    return m_last_updated_isSet;
}

bool OAIGet_corporation_corporation_id_mining_observers_200_ok::is_last_updated_Valid() const{
    return m_last_updated_isValid;
}

qint64 OAIGet_corporation_corporation_id_mining_observers_200_ok::getObserverId() const {
    return m_observer_id;
}
void OAIGet_corporation_corporation_id_mining_observers_200_ok::setObserverId(const qint64 &observer_id) {
    m_observer_id = observer_id;
    m_observer_id_isSet = true;
}

bool OAIGet_corporation_corporation_id_mining_observers_200_ok::is_observer_id_Set() const{
    return m_observer_id_isSet;
}

bool OAIGet_corporation_corporation_id_mining_observers_200_ok::is_observer_id_Valid() const{
    return m_observer_id_isValid;
}

QString OAIGet_corporation_corporation_id_mining_observers_200_ok::getObserverType() const {
    return m_observer_type;
}
void OAIGet_corporation_corporation_id_mining_observers_200_ok::setObserverType(const QString &observer_type) {
    m_observer_type = observer_type;
    m_observer_type_isSet = true;
}

bool OAIGet_corporation_corporation_id_mining_observers_200_ok::is_observer_type_Set() const{
    return m_observer_type_isSet;
}

bool OAIGet_corporation_corporation_id_mining_observers_200_ok::is_observer_type_Valid() const{
    return m_observer_type_isValid;
}

bool OAIGet_corporation_corporation_id_mining_observers_200_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_observer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_observer_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_corporation_corporation_id_mining_observers_200_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_last_updated_isValid && m_observer_id_isValid && m_observer_type_isValid && true;
}

} // namespace OpenAPI
