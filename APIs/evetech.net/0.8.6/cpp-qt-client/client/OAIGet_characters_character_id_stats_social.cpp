/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_stats_social.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_stats_social::OAIGet_characters_character_id_stats_social(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_stats_social::OAIGet_characters_character_id_stats_social() {
    this->initializeModel();
}

OAIGet_characters_character_id_stats_social::~OAIGet_characters_character_id_stats_social() {}

void OAIGet_characters_character_id_stats_social::initializeModel() {

    m_add_contact_bad_isSet = false;
    m_add_contact_bad_isValid = false;

    m_add_contact_good_isSet = false;
    m_add_contact_good_isValid = false;

    m_add_contact_high_isSet = false;
    m_add_contact_high_isValid = false;

    m_add_contact_horrible_isSet = false;
    m_add_contact_horrible_isValid = false;

    m_add_contact_neutral_isSet = false;
    m_add_contact_neutral_isValid = false;

    m_add_note_isSet = false;
    m_add_note_isValid = false;

    m_added_as_contact_bad_isSet = false;
    m_added_as_contact_bad_isValid = false;

    m_added_as_contact_good_isSet = false;
    m_added_as_contact_good_isValid = false;

    m_added_as_contact_high_isSet = false;
    m_added_as_contact_high_isValid = false;

    m_added_as_contact_horrible_isSet = false;
    m_added_as_contact_horrible_isValid = false;

    m_added_as_contact_neutral_isSet = false;
    m_added_as_contact_neutral_isValid = false;

    m_calendar_event_created_isSet = false;
    m_calendar_event_created_isValid = false;

    m_chat_messages_alliance_isSet = false;
    m_chat_messages_alliance_isValid = false;

    m_chat_messages_constellation_isSet = false;
    m_chat_messages_constellation_isValid = false;

    m_chat_messages_corporation_isSet = false;
    m_chat_messages_corporation_isValid = false;

    m_chat_messages_fleet_isSet = false;
    m_chat_messages_fleet_isValid = false;

    m_chat_messages_region_isSet = false;
    m_chat_messages_region_isValid = false;

    m_chat_messages_solarsystem_isSet = false;
    m_chat_messages_solarsystem_isValid = false;

    m_chat_messages_warfaction_isSet = false;
    m_chat_messages_warfaction_isValid = false;

    m_chat_total_message_length_isSet = false;
    m_chat_total_message_length_isValid = false;

    m_direct_trades_isSet = false;
    m_direct_trades_isValid = false;

    m_fleet_broadcasts_isSet = false;
    m_fleet_broadcasts_isValid = false;

    m_fleet_joins_isSet = false;
    m_fleet_joins_isValid = false;

    m_mails_received_isSet = false;
    m_mails_received_isValid = false;

    m_mails_sent_isSet = false;
    m_mails_sent_isValid = false;
}

void OAIGet_characters_character_id_stats_social::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_stats_social::fromJsonObject(QJsonObject json) {

    m_add_contact_bad_isValid = ::OpenAPI::fromJsonValue(m_add_contact_bad, json[QString("add_contact_bad")]);
    m_add_contact_bad_isSet = !json[QString("add_contact_bad")].isNull() && m_add_contact_bad_isValid;

    m_add_contact_good_isValid = ::OpenAPI::fromJsonValue(m_add_contact_good, json[QString("add_contact_good")]);
    m_add_contact_good_isSet = !json[QString("add_contact_good")].isNull() && m_add_contact_good_isValid;

    m_add_contact_high_isValid = ::OpenAPI::fromJsonValue(m_add_contact_high, json[QString("add_contact_high")]);
    m_add_contact_high_isSet = !json[QString("add_contact_high")].isNull() && m_add_contact_high_isValid;

    m_add_contact_horrible_isValid = ::OpenAPI::fromJsonValue(m_add_contact_horrible, json[QString("add_contact_horrible")]);
    m_add_contact_horrible_isSet = !json[QString("add_contact_horrible")].isNull() && m_add_contact_horrible_isValid;

    m_add_contact_neutral_isValid = ::OpenAPI::fromJsonValue(m_add_contact_neutral, json[QString("add_contact_neutral")]);
    m_add_contact_neutral_isSet = !json[QString("add_contact_neutral")].isNull() && m_add_contact_neutral_isValid;

    m_add_note_isValid = ::OpenAPI::fromJsonValue(m_add_note, json[QString("add_note")]);
    m_add_note_isSet = !json[QString("add_note")].isNull() && m_add_note_isValid;

    m_added_as_contact_bad_isValid = ::OpenAPI::fromJsonValue(m_added_as_contact_bad, json[QString("added_as_contact_bad")]);
    m_added_as_contact_bad_isSet = !json[QString("added_as_contact_bad")].isNull() && m_added_as_contact_bad_isValid;

    m_added_as_contact_good_isValid = ::OpenAPI::fromJsonValue(m_added_as_contact_good, json[QString("added_as_contact_good")]);
    m_added_as_contact_good_isSet = !json[QString("added_as_contact_good")].isNull() && m_added_as_contact_good_isValid;

    m_added_as_contact_high_isValid = ::OpenAPI::fromJsonValue(m_added_as_contact_high, json[QString("added_as_contact_high")]);
    m_added_as_contact_high_isSet = !json[QString("added_as_contact_high")].isNull() && m_added_as_contact_high_isValid;

    m_added_as_contact_horrible_isValid = ::OpenAPI::fromJsonValue(m_added_as_contact_horrible, json[QString("added_as_contact_horrible")]);
    m_added_as_contact_horrible_isSet = !json[QString("added_as_contact_horrible")].isNull() && m_added_as_contact_horrible_isValid;

    m_added_as_contact_neutral_isValid = ::OpenAPI::fromJsonValue(m_added_as_contact_neutral, json[QString("added_as_contact_neutral")]);
    m_added_as_contact_neutral_isSet = !json[QString("added_as_contact_neutral")].isNull() && m_added_as_contact_neutral_isValid;

    m_calendar_event_created_isValid = ::OpenAPI::fromJsonValue(m_calendar_event_created, json[QString("calendar_event_created")]);
    m_calendar_event_created_isSet = !json[QString("calendar_event_created")].isNull() && m_calendar_event_created_isValid;

    m_chat_messages_alliance_isValid = ::OpenAPI::fromJsonValue(m_chat_messages_alliance, json[QString("chat_messages_alliance")]);
    m_chat_messages_alliance_isSet = !json[QString("chat_messages_alliance")].isNull() && m_chat_messages_alliance_isValid;

    m_chat_messages_constellation_isValid = ::OpenAPI::fromJsonValue(m_chat_messages_constellation, json[QString("chat_messages_constellation")]);
    m_chat_messages_constellation_isSet = !json[QString("chat_messages_constellation")].isNull() && m_chat_messages_constellation_isValid;

    m_chat_messages_corporation_isValid = ::OpenAPI::fromJsonValue(m_chat_messages_corporation, json[QString("chat_messages_corporation")]);
    m_chat_messages_corporation_isSet = !json[QString("chat_messages_corporation")].isNull() && m_chat_messages_corporation_isValid;

    m_chat_messages_fleet_isValid = ::OpenAPI::fromJsonValue(m_chat_messages_fleet, json[QString("chat_messages_fleet")]);
    m_chat_messages_fleet_isSet = !json[QString("chat_messages_fleet")].isNull() && m_chat_messages_fleet_isValid;

    m_chat_messages_region_isValid = ::OpenAPI::fromJsonValue(m_chat_messages_region, json[QString("chat_messages_region")]);
    m_chat_messages_region_isSet = !json[QString("chat_messages_region")].isNull() && m_chat_messages_region_isValid;

    m_chat_messages_solarsystem_isValid = ::OpenAPI::fromJsonValue(m_chat_messages_solarsystem, json[QString("chat_messages_solarsystem")]);
    m_chat_messages_solarsystem_isSet = !json[QString("chat_messages_solarsystem")].isNull() && m_chat_messages_solarsystem_isValid;

    m_chat_messages_warfaction_isValid = ::OpenAPI::fromJsonValue(m_chat_messages_warfaction, json[QString("chat_messages_warfaction")]);
    m_chat_messages_warfaction_isSet = !json[QString("chat_messages_warfaction")].isNull() && m_chat_messages_warfaction_isValid;

    m_chat_total_message_length_isValid = ::OpenAPI::fromJsonValue(m_chat_total_message_length, json[QString("chat_total_message_length")]);
    m_chat_total_message_length_isSet = !json[QString("chat_total_message_length")].isNull() && m_chat_total_message_length_isValid;

    m_direct_trades_isValid = ::OpenAPI::fromJsonValue(m_direct_trades, json[QString("direct_trades")]);
    m_direct_trades_isSet = !json[QString("direct_trades")].isNull() && m_direct_trades_isValid;

    m_fleet_broadcasts_isValid = ::OpenAPI::fromJsonValue(m_fleet_broadcasts, json[QString("fleet_broadcasts")]);
    m_fleet_broadcasts_isSet = !json[QString("fleet_broadcasts")].isNull() && m_fleet_broadcasts_isValid;

    m_fleet_joins_isValid = ::OpenAPI::fromJsonValue(m_fleet_joins, json[QString("fleet_joins")]);
    m_fleet_joins_isSet = !json[QString("fleet_joins")].isNull() && m_fleet_joins_isValid;

    m_mails_received_isValid = ::OpenAPI::fromJsonValue(m_mails_received, json[QString("mails_received")]);
    m_mails_received_isSet = !json[QString("mails_received")].isNull() && m_mails_received_isValid;

    m_mails_sent_isValid = ::OpenAPI::fromJsonValue(m_mails_sent, json[QString("mails_sent")]);
    m_mails_sent_isSet = !json[QString("mails_sent")].isNull() && m_mails_sent_isValid;
}

QString OAIGet_characters_character_id_stats_social::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_stats_social::asJsonObject() const {
    QJsonObject obj;
    if (m_add_contact_bad_isSet) {
        obj.insert(QString("add_contact_bad"), ::OpenAPI::toJsonValue(m_add_contact_bad));
    }
    if (m_add_contact_good_isSet) {
        obj.insert(QString("add_contact_good"), ::OpenAPI::toJsonValue(m_add_contact_good));
    }
    if (m_add_contact_high_isSet) {
        obj.insert(QString("add_contact_high"), ::OpenAPI::toJsonValue(m_add_contact_high));
    }
    if (m_add_contact_horrible_isSet) {
        obj.insert(QString("add_contact_horrible"), ::OpenAPI::toJsonValue(m_add_contact_horrible));
    }
    if (m_add_contact_neutral_isSet) {
        obj.insert(QString("add_contact_neutral"), ::OpenAPI::toJsonValue(m_add_contact_neutral));
    }
    if (m_add_note_isSet) {
        obj.insert(QString("add_note"), ::OpenAPI::toJsonValue(m_add_note));
    }
    if (m_added_as_contact_bad_isSet) {
        obj.insert(QString("added_as_contact_bad"), ::OpenAPI::toJsonValue(m_added_as_contact_bad));
    }
    if (m_added_as_contact_good_isSet) {
        obj.insert(QString("added_as_contact_good"), ::OpenAPI::toJsonValue(m_added_as_contact_good));
    }
    if (m_added_as_contact_high_isSet) {
        obj.insert(QString("added_as_contact_high"), ::OpenAPI::toJsonValue(m_added_as_contact_high));
    }
    if (m_added_as_contact_horrible_isSet) {
        obj.insert(QString("added_as_contact_horrible"), ::OpenAPI::toJsonValue(m_added_as_contact_horrible));
    }
    if (m_added_as_contact_neutral_isSet) {
        obj.insert(QString("added_as_contact_neutral"), ::OpenAPI::toJsonValue(m_added_as_contact_neutral));
    }
    if (m_calendar_event_created_isSet) {
        obj.insert(QString("calendar_event_created"), ::OpenAPI::toJsonValue(m_calendar_event_created));
    }
    if (m_chat_messages_alliance_isSet) {
        obj.insert(QString("chat_messages_alliance"), ::OpenAPI::toJsonValue(m_chat_messages_alliance));
    }
    if (m_chat_messages_constellation_isSet) {
        obj.insert(QString("chat_messages_constellation"), ::OpenAPI::toJsonValue(m_chat_messages_constellation));
    }
    if (m_chat_messages_corporation_isSet) {
        obj.insert(QString("chat_messages_corporation"), ::OpenAPI::toJsonValue(m_chat_messages_corporation));
    }
    if (m_chat_messages_fleet_isSet) {
        obj.insert(QString("chat_messages_fleet"), ::OpenAPI::toJsonValue(m_chat_messages_fleet));
    }
    if (m_chat_messages_region_isSet) {
        obj.insert(QString("chat_messages_region"), ::OpenAPI::toJsonValue(m_chat_messages_region));
    }
    if (m_chat_messages_solarsystem_isSet) {
        obj.insert(QString("chat_messages_solarsystem"), ::OpenAPI::toJsonValue(m_chat_messages_solarsystem));
    }
    if (m_chat_messages_warfaction_isSet) {
        obj.insert(QString("chat_messages_warfaction"), ::OpenAPI::toJsonValue(m_chat_messages_warfaction));
    }
    if (m_chat_total_message_length_isSet) {
        obj.insert(QString("chat_total_message_length"), ::OpenAPI::toJsonValue(m_chat_total_message_length));
    }
    if (m_direct_trades_isSet) {
        obj.insert(QString("direct_trades"), ::OpenAPI::toJsonValue(m_direct_trades));
    }
    if (m_fleet_broadcasts_isSet) {
        obj.insert(QString("fleet_broadcasts"), ::OpenAPI::toJsonValue(m_fleet_broadcasts));
    }
    if (m_fleet_joins_isSet) {
        obj.insert(QString("fleet_joins"), ::OpenAPI::toJsonValue(m_fleet_joins));
    }
    if (m_mails_received_isSet) {
        obj.insert(QString("mails_received"), ::OpenAPI::toJsonValue(m_mails_received));
    }
    if (m_mails_sent_isSet) {
        obj.insert(QString("mails_sent"), ::OpenAPI::toJsonValue(m_mails_sent));
    }
    return obj;
}

qint64 OAIGet_characters_character_id_stats_social::getAddContactBad() const {
    return m_add_contact_bad;
}
void OAIGet_characters_character_id_stats_social::setAddContactBad(const qint64 &add_contact_bad) {
    m_add_contact_bad = add_contact_bad;
    m_add_contact_bad_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_add_contact_bad_Set() const{
    return m_add_contact_bad_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_add_contact_bad_Valid() const{
    return m_add_contact_bad_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getAddContactGood() const {
    return m_add_contact_good;
}
void OAIGet_characters_character_id_stats_social::setAddContactGood(const qint64 &add_contact_good) {
    m_add_contact_good = add_contact_good;
    m_add_contact_good_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_add_contact_good_Set() const{
    return m_add_contact_good_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_add_contact_good_Valid() const{
    return m_add_contact_good_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getAddContactHigh() const {
    return m_add_contact_high;
}
void OAIGet_characters_character_id_stats_social::setAddContactHigh(const qint64 &add_contact_high) {
    m_add_contact_high = add_contact_high;
    m_add_contact_high_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_add_contact_high_Set() const{
    return m_add_contact_high_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_add_contact_high_Valid() const{
    return m_add_contact_high_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getAddContactHorrible() const {
    return m_add_contact_horrible;
}
void OAIGet_characters_character_id_stats_social::setAddContactHorrible(const qint64 &add_contact_horrible) {
    m_add_contact_horrible = add_contact_horrible;
    m_add_contact_horrible_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_add_contact_horrible_Set() const{
    return m_add_contact_horrible_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_add_contact_horrible_Valid() const{
    return m_add_contact_horrible_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getAddContactNeutral() const {
    return m_add_contact_neutral;
}
void OAIGet_characters_character_id_stats_social::setAddContactNeutral(const qint64 &add_contact_neutral) {
    m_add_contact_neutral = add_contact_neutral;
    m_add_contact_neutral_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_add_contact_neutral_Set() const{
    return m_add_contact_neutral_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_add_contact_neutral_Valid() const{
    return m_add_contact_neutral_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getAddNote() const {
    return m_add_note;
}
void OAIGet_characters_character_id_stats_social::setAddNote(const qint64 &add_note) {
    m_add_note = add_note;
    m_add_note_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_add_note_Set() const{
    return m_add_note_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_add_note_Valid() const{
    return m_add_note_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getAddedAsContactBad() const {
    return m_added_as_contact_bad;
}
void OAIGet_characters_character_id_stats_social::setAddedAsContactBad(const qint64 &added_as_contact_bad) {
    m_added_as_contact_bad = added_as_contact_bad;
    m_added_as_contact_bad_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_added_as_contact_bad_Set() const{
    return m_added_as_contact_bad_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_added_as_contact_bad_Valid() const{
    return m_added_as_contact_bad_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getAddedAsContactGood() const {
    return m_added_as_contact_good;
}
void OAIGet_characters_character_id_stats_social::setAddedAsContactGood(const qint64 &added_as_contact_good) {
    m_added_as_contact_good = added_as_contact_good;
    m_added_as_contact_good_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_added_as_contact_good_Set() const{
    return m_added_as_contact_good_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_added_as_contact_good_Valid() const{
    return m_added_as_contact_good_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getAddedAsContactHigh() const {
    return m_added_as_contact_high;
}
void OAIGet_characters_character_id_stats_social::setAddedAsContactHigh(const qint64 &added_as_contact_high) {
    m_added_as_contact_high = added_as_contact_high;
    m_added_as_contact_high_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_added_as_contact_high_Set() const{
    return m_added_as_contact_high_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_added_as_contact_high_Valid() const{
    return m_added_as_contact_high_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getAddedAsContactHorrible() const {
    return m_added_as_contact_horrible;
}
void OAIGet_characters_character_id_stats_social::setAddedAsContactHorrible(const qint64 &added_as_contact_horrible) {
    m_added_as_contact_horrible = added_as_contact_horrible;
    m_added_as_contact_horrible_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_added_as_contact_horrible_Set() const{
    return m_added_as_contact_horrible_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_added_as_contact_horrible_Valid() const{
    return m_added_as_contact_horrible_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getAddedAsContactNeutral() const {
    return m_added_as_contact_neutral;
}
void OAIGet_characters_character_id_stats_social::setAddedAsContactNeutral(const qint64 &added_as_contact_neutral) {
    m_added_as_contact_neutral = added_as_contact_neutral;
    m_added_as_contact_neutral_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_added_as_contact_neutral_Set() const{
    return m_added_as_contact_neutral_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_added_as_contact_neutral_Valid() const{
    return m_added_as_contact_neutral_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getCalendarEventCreated() const {
    return m_calendar_event_created;
}
void OAIGet_characters_character_id_stats_social::setCalendarEventCreated(const qint64 &calendar_event_created) {
    m_calendar_event_created = calendar_event_created;
    m_calendar_event_created_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_calendar_event_created_Set() const{
    return m_calendar_event_created_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_calendar_event_created_Valid() const{
    return m_calendar_event_created_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getChatMessagesAlliance() const {
    return m_chat_messages_alliance;
}
void OAIGet_characters_character_id_stats_social::setChatMessagesAlliance(const qint64 &chat_messages_alliance) {
    m_chat_messages_alliance = chat_messages_alliance;
    m_chat_messages_alliance_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_alliance_Set() const{
    return m_chat_messages_alliance_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_alliance_Valid() const{
    return m_chat_messages_alliance_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getChatMessagesConstellation() const {
    return m_chat_messages_constellation;
}
void OAIGet_characters_character_id_stats_social::setChatMessagesConstellation(const qint64 &chat_messages_constellation) {
    m_chat_messages_constellation = chat_messages_constellation;
    m_chat_messages_constellation_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_constellation_Set() const{
    return m_chat_messages_constellation_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_constellation_Valid() const{
    return m_chat_messages_constellation_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getChatMessagesCorporation() const {
    return m_chat_messages_corporation;
}
void OAIGet_characters_character_id_stats_social::setChatMessagesCorporation(const qint64 &chat_messages_corporation) {
    m_chat_messages_corporation = chat_messages_corporation;
    m_chat_messages_corporation_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_corporation_Set() const{
    return m_chat_messages_corporation_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_corporation_Valid() const{
    return m_chat_messages_corporation_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getChatMessagesFleet() const {
    return m_chat_messages_fleet;
}
void OAIGet_characters_character_id_stats_social::setChatMessagesFleet(const qint64 &chat_messages_fleet) {
    m_chat_messages_fleet = chat_messages_fleet;
    m_chat_messages_fleet_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_fleet_Set() const{
    return m_chat_messages_fleet_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_fleet_Valid() const{
    return m_chat_messages_fleet_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getChatMessagesRegion() const {
    return m_chat_messages_region;
}
void OAIGet_characters_character_id_stats_social::setChatMessagesRegion(const qint64 &chat_messages_region) {
    m_chat_messages_region = chat_messages_region;
    m_chat_messages_region_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_region_Set() const{
    return m_chat_messages_region_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_region_Valid() const{
    return m_chat_messages_region_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getChatMessagesSolarsystem() const {
    return m_chat_messages_solarsystem;
}
void OAIGet_characters_character_id_stats_social::setChatMessagesSolarsystem(const qint64 &chat_messages_solarsystem) {
    m_chat_messages_solarsystem = chat_messages_solarsystem;
    m_chat_messages_solarsystem_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_solarsystem_Set() const{
    return m_chat_messages_solarsystem_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_solarsystem_Valid() const{
    return m_chat_messages_solarsystem_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getChatMessagesWarfaction() const {
    return m_chat_messages_warfaction;
}
void OAIGet_characters_character_id_stats_social::setChatMessagesWarfaction(const qint64 &chat_messages_warfaction) {
    m_chat_messages_warfaction = chat_messages_warfaction;
    m_chat_messages_warfaction_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_warfaction_Set() const{
    return m_chat_messages_warfaction_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_chat_messages_warfaction_Valid() const{
    return m_chat_messages_warfaction_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getChatTotalMessageLength() const {
    return m_chat_total_message_length;
}
void OAIGet_characters_character_id_stats_social::setChatTotalMessageLength(const qint64 &chat_total_message_length) {
    m_chat_total_message_length = chat_total_message_length;
    m_chat_total_message_length_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_chat_total_message_length_Set() const{
    return m_chat_total_message_length_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_chat_total_message_length_Valid() const{
    return m_chat_total_message_length_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getDirectTrades() const {
    return m_direct_trades;
}
void OAIGet_characters_character_id_stats_social::setDirectTrades(const qint64 &direct_trades) {
    m_direct_trades = direct_trades;
    m_direct_trades_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_direct_trades_Set() const{
    return m_direct_trades_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_direct_trades_Valid() const{
    return m_direct_trades_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getFleetBroadcasts() const {
    return m_fleet_broadcasts;
}
void OAIGet_characters_character_id_stats_social::setFleetBroadcasts(const qint64 &fleet_broadcasts) {
    m_fleet_broadcasts = fleet_broadcasts;
    m_fleet_broadcasts_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_fleet_broadcasts_Set() const{
    return m_fleet_broadcasts_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_fleet_broadcasts_Valid() const{
    return m_fleet_broadcasts_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getFleetJoins() const {
    return m_fleet_joins;
}
void OAIGet_characters_character_id_stats_social::setFleetJoins(const qint64 &fleet_joins) {
    m_fleet_joins = fleet_joins;
    m_fleet_joins_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_fleet_joins_Set() const{
    return m_fleet_joins_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_fleet_joins_Valid() const{
    return m_fleet_joins_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getMailsReceived() const {
    return m_mails_received;
}
void OAIGet_characters_character_id_stats_social::setMailsReceived(const qint64 &mails_received) {
    m_mails_received = mails_received;
    m_mails_received_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_mails_received_Set() const{
    return m_mails_received_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_mails_received_Valid() const{
    return m_mails_received_isValid;
}

qint64 OAIGet_characters_character_id_stats_social::getMailsSent() const {
    return m_mails_sent;
}
void OAIGet_characters_character_id_stats_social::setMailsSent(const qint64 &mails_sent) {
    m_mails_sent = mails_sent;
    m_mails_sent_isSet = true;
}

bool OAIGet_characters_character_id_stats_social::is_mails_sent_Set() const{
    return m_mails_sent_isSet;
}

bool OAIGet_characters_character_id_stats_social::is_mails_sent_Valid() const{
    return m_mails_sent_isValid;
}

bool OAIGet_characters_character_id_stats_social::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_contact_bad_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_contact_good_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_contact_high_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_contact_horrible_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_contact_neutral_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_added_as_contact_bad_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_added_as_contact_good_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_added_as_contact_high_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_added_as_contact_horrible_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_added_as_contact_neutral_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_calendar_event_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_chat_messages_alliance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_chat_messages_constellation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_chat_messages_corporation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_chat_messages_fleet_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_chat_messages_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_chat_messages_solarsystem_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_chat_messages_warfaction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_chat_total_message_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_direct_trades_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fleet_broadcasts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fleet_joins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mails_received_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mails_sent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_stats_social::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
