/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_corporations_corporation_id_divisions_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_corporations_corporation_id_divisions_ok::OAIGet_corporations_corporation_id_divisions_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_corporations_corporation_id_divisions_ok::OAIGet_corporations_corporation_id_divisions_ok() {
    this->initializeModel();
}

OAIGet_corporations_corporation_id_divisions_ok::~OAIGet_corporations_corporation_id_divisions_ok() {}

void OAIGet_corporations_corporation_id_divisions_ok::initializeModel() {

    m_hangar_isSet = false;
    m_hangar_isValid = false;

    m_wallet_isSet = false;
    m_wallet_isValid = false;
}

void OAIGet_corporations_corporation_id_divisions_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_corporations_corporation_id_divisions_ok::fromJsonObject(QJsonObject json) {

    m_hangar_isValid = ::OpenAPI::fromJsonValue(m_hangar, json[QString("hangar")]);
    m_hangar_isSet = !json[QString("hangar")].isNull() && m_hangar_isValid;

    m_wallet_isValid = ::OpenAPI::fromJsonValue(m_wallet, json[QString("wallet")]);
    m_wallet_isSet = !json[QString("wallet")].isNull() && m_wallet_isValid;
}

QString OAIGet_corporations_corporation_id_divisions_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_corporations_corporation_id_divisions_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_hangar.size() > 0) {
        obj.insert(QString("hangar"), ::OpenAPI::toJsonValue(m_hangar));
    }
    if (m_wallet.size() > 0) {
        obj.insert(QString("wallet"), ::OpenAPI::toJsonValue(m_wallet));
    }
    return obj;
}

QList<OAIGet_corporations_corporation_id_divisions_hangar_hangar> OAIGet_corporations_corporation_id_divisions_ok::getHangar() const {
    return m_hangar;
}
void OAIGet_corporations_corporation_id_divisions_ok::setHangar(const QList<OAIGet_corporations_corporation_id_divisions_hangar_hangar> &hangar) {
    m_hangar = hangar;
    m_hangar_isSet = true;
}

bool OAIGet_corporations_corporation_id_divisions_ok::is_hangar_Set() const{
    return m_hangar_isSet;
}

bool OAIGet_corporations_corporation_id_divisions_ok::is_hangar_Valid() const{
    return m_hangar_isValid;
}

QList<OAIGet_corporations_corporation_id_divisions_wallet_wallet> OAIGet_corporations_corporation_id_divisions_ok::getWallet() const {
    return m_wallet;
}
void OAIGet_corporations_corporation_id_divisions_ok::setWallet(const QList<OAIGet_corporations_corporation_id_divisions_wallet_wallet> &wallet) {
    m_wallet = wallet;
    m_wallet_isSet = true;
}

bool OAIGet_corporations_corporation_id_divisions_ok::is_wallet_Set() const{
    return m_wallet_isSet;
}

bool OAIGet_corporations_corporation_id_divisions_ok::is_wallet_Valid() const{
    return m_wallet_isValid;
}

bool OAIGet_corporations_corporation_id_divisions_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hangar.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_wallet.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_corporations_corporation_id_divisions_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
