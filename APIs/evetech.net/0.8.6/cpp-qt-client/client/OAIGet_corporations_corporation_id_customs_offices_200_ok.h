/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_corporations_corporation_id_customs_offices_200_ok.h
 *
 * 200 ok object
 */

#ifndef OAIGet_corporations_corporation_id_customs_offices_200_ok_H
#define OAIGet_corporations_corporation_id_customs_offices_200_ok_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGet_corporations_corporation_id_customs_offices_200_ok : public OAIObject {
public:
    OAIGet_corporations_corporation_id_customs_offices_200_ok();
    OAIGet_corporations_corporation_id_customs_offices_200_ok(QString json);
    ~OAIGet_corporations_corporation_id_customs_offices_200_ok() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getAllianceTaxRate() const;
    void setAllianceTaxRate(const float &alliance_tax_rate);
    bool is_alliance_tax_rate_Set() const;
    bool is_alliance_tax_rate_Valid() const;

    bool isAllowAccessWithStandings() const;
    void setAllowAccessWithStandings(const bool &allow_access_with_standings);
    bool is_allow_access_with_standings_Set() const;
    bool is_allow_access_with_standings_Valid() const;

    bool isAllowAllianceAccess() const;
    void setAllowAllianceAccess(const bool &allow_alliance_access);
    bool is_allow_alliance_access_Set() const;
    bool is_allow_alliance_access_Valid() const;

    float getBadStandingTaxRate() const;
    void setBadStandingTaxRate(const float &bad_standing_tax_rate);
    bool is_bad_standing_tax_rate_Set() const;
    bool is_bad_standing_tax_rate_Valid() const;

    float getCorporationTaxRate() const;
    void setCorporationTaxRate(const float &corporation_tax_rate);
    bool is_corporation_tax_rate_Set() const;
    bool is_corporation_tax_rate_Valid() const;

    float getExcellentStandingTaxRate() const;
    void setExcellentStandingTaxRate(const float &excellent_standing_tax_rate);
    bool is_excellent_standing_tax_rate_Set() const;
    bool is_excellent_standing_tax_rate_Valid() const;

    float getGoodStandingTaxRate() const;
    void setGoodStandingTaxRate(const float &good_standing_tax_rate);
    bool is_good_standing_tax_rate_Set() const;
    bool is_good_standing_tax_rate_Valid() const;

    float getNeutralStandingTaxRate() const;
    void setNeutralStandingTaxRate(const float &neutral_standing_tax_rate);
    bool is_neutral_standing_tax_rate_Set() const;
    bool is_neutral_standing_tax_rate_Valid() const;

    qint64 getOfficeId() const;
    void setOfficeId(const qint64 &office_id);
    bool is_office_id_Set() const;
    bool is_office_id_Valid() const;

    qint32 getReinforceExitEnd() const;
    void setReinforceExitEnd(const qint32 &reinforce_exit_end);
    bool is_reinforce_exit_end_Set() const;
    bool is_reinforce_exit_end_Valid() const;

    qint32 getReinforceExitStart() const;
    void setReinforceExitStart(const qint32 &reinforce_exit_start);
    bool is_reinforce_exit_start_Set() const;
    bool is_reinforce_exit_start_Valid() const;

    QString getStandingLevel() const;
    void setStandingLevel(const QString &standing_level);
    bool is_standing_level_Set() const;
    bool is_standing_level_Valid() const;

    qint32 getSystemId() const;
    void setSystemId(const qint32 &system_id);
    bool is_system_id_Set() const;
    bool is_system_id_Valid() const;

    float getTerribleStandingTaxRate() const;
    void setTerribleStandingTaxRate(const float &terrible_standing_tax_rate);
    bool is_terrible_standing_tax_rate_Set() const;
    bool is_terrible_standing_tax_rate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_alliance_tax_rate;
    bool m_alliance_tax_rate_isSet;
    bool m_alliance_tax_rate_isValid;

    bool m_allow_access_with_standings;
    bool m_allow_access_with_standings_isSet;
    bool m_allow_access_with_standings_isValid;

    bool m_allow_alliance_access;
    bool m_allow_alliance_access_isSet;
    bool m_allow_alliance_access_isValid;

    float m_bad_standing_tax_rate;
    bool m_bad_standing_tax_rate_isSet;
    bool m_bad_standing_tax_rate_isValid;

    float m_corporation_tax_rate;
    bool m_corporation_tax_rate_isSet;
    bool m_corporation_tax_rate_isValid;

    float m_excellent_standing_tax_rate;
    bool m_excellent_standing_tax_rate_isSet;
    bool m_excellent_standing_tax_rate_isValid;

    float m_good_standing_tax_rate;
    bool m_good_standing_tax_rate_isSet;
    bool m_good_standing_tax_rate_isValid;

    float m_neutral_standing_tax_rate;
    bool m_neutral_standing_tax_rate_isSet;
    bool m_neutral_standing_tax_rate_isValid;

    qint64 m_office_id;
    bool m_office_id_isSet;
    bool m_office_id_isValid;

    qint32 m_reinforce_exit_end;
    bool m_reinforce_exit_end_isSet;
    bool m_reinforce_exit_end_isValid;

    qint32 m_reinforce_exit_start;
    bool m_reinforce_exit_start_isSet;
    bool m_reinforce_exit_start_isValid;

    QString m_standing_level;
    bool m_standing_level_isSet;
    bool m_standing_level_isValid;

    qint32 m_system_id;
    bool m_system_id_isSet;
    bool m_system_id_isValid;

    float m_terrible_standing_tax_rate;
    bool m_terrible_standing_tax_rate_isSet;
    bool m_terrible_standing_tax_rate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_corporations_corporation_id_customs_offices_200_ok)

#endif // OAIGet_corporations_corporation_id_customs_offices_200_ok_H
