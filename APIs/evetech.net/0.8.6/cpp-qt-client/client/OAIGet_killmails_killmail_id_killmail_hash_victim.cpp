/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_killmails_killmail_id_killmail_hash_victim.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_killmails_killmail_id_killmail_hash_victim::OAIGet_killmails_killmail_id_killmail_hash_victim(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_killmails_killmail_id_killmail_hash_victim::OAIGet_killmails_killmail_id_killmail_hash_victim() {
    this->initializeModel();
}

OAIGet_killmails_killmail_id_killmail_hash_victim::~OAIGet_killmails_killmail_id_killmail_hash_victim() {}

void OAIGet_killmails_killmail_id_killmail_hash_victim::initializeModel() {

    m_alliance_id_isSet = false;
    m_alliance_id_isValid = false;

    m_character_id_isSet = false;
    m_character_id_isValid = false;

    m_corporation_id_isSet = false;
    m_corporation_id_isValid = false;

    m_damage_taken_isSet = false;
    m_damage_taken_isValid = false;

    m_faction_id_isSet = false;
    m_faction_id_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;

    m_ship_type_id_isSet = false;
    m_ship_type_id_isValid = false;
}

void OAIGet_killmails_killmail_id_killmail_hash_victim::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_killmails_killmail_id_killmail_hash_victim::fromJsonObject(QJsonObject json) {

    m_alliance_id_isValid = ::OpenAPI::fromJsonValue(m_alliance_id, json[QString("alliance_id")]);
    m_alliance_id_isSet = !json[QString("alliance_id")].isNull() && m_alliance_id_isValid;

    m_character_id_isValid = ::OpenAPI::fromJsonValue(m_character_id, json[QString("character_id")]);
    m_character_id_isSet = !json[QString("character_id")].isNull() && m_character_id_isValid;

    m_corporation_id_isValid = ::OpenAPI::fromJsonValue(m_corporation_id, json[QString("corporation_id")]);
    m_corporation_id_isSet = !json[QString("corporation_id")].isNull() && m_corporation_id_isValid;

    m_damage_taken_isValid = ::OpenAPI::fromJsonValue(m_damage_taken, json[QString("damage_taken")]);
    m_damage_taken_isSet = !json[QString("damage_taken")].isNull() && m_damage_taken_isValid;

    m_faction_id_isValid = ::OpenAPI::fromJsonValue(m_faction_id, json[QString("faction_id")]);
    m_faction_id_isSet = !json[QString("faction_id")].isNull() && m_faction_id_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_ship_type_id_isValid = ::OpenAPI::fromJsonValue(m_ship_type_id, json[QString("ship_type_id")]);
    m_ship_type_id_isSet = !json[QString("ship_type_id")].isNull() && m_ship_type_id_isValid;
}

QString OAIGet_killmails_killmail_id_killmail_hash_victim::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_killmails_killmail_id_killmail_hash_victim::asJsonObject() const {
    QJsonObject obj;
    if (m_alliance_id_isSet) {
        obj.insert(QString("alliance_id"), ::OpenAPI::toJsonValue(m_alliance_id));
    }
    if (m_character_id_isSet) {
        obj.insert(QString("character_id"), ::OpenAPI::toJsonValue(m_character_id));
    }
    if (m_corporation_id_isSet) {
        obj.insert(QString("corporation_id"), ::OpenAPI::toJsonValue(m_corporation_id));
    }
    if (m_damage_taken_isSet) {
        obj.insert(QString("damage_taken"), ::OpenAPI::toJsonValue(m_damage_taken));
    }
    if (m_faction_id_isSet) {
        obj.insert(QString("faction_id"), ::OpenAPI::toJsonValue(m_faction_id));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_position.isSet()) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_ship_type_id_isSet) {
        obj.insert(QString("ship_type_id"), ::OpenAPI::toJsonValue(m_ship_type_id));
    }
    return obj;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_victim::getAllianceId() const {
    return m_alliance_id;
}
void OAIGet_killmails_killmail_id_killmail_hash_victim::setAllianceId(const qint32 &alliance_id) {
    m_alliance_id = alliance_id;
    m_alliance_id_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_alliance_id_Set() const{
    return m_alliance_id_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_alliance_id_Valid() const{
    return m_alliance_id_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_victim::getCharacterId() const {
    return m_character_id;
}
void OAIGet_killmails_killmail_id_killmail_hash_victim::setCharacterId(const qint32 &character_id) {
    m_character_id = character_id;
    m_character_id_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_character_id_Set() const{
    return m_character_id_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_character_id_Valid() const{
    return m_character_id_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_victim::getCorporationId() const {
    return m_corporation_id;
}
void OAIGet_killmails_killmail_id_killmail_hash_victim::setCorporationId(const qint32 &corporation_id) {
    m_corporation_id = corporation_id;
    m_corporation_id_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_corporation_id_Set() const{
    return m_corporation_id_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_corporation_id_Valid() const{
    return m_corporation_id_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_victim::getDamageTaken() const {
    return m_damage_taken;
}
void OAIGet_killmails_killmail_id_killmail_hash_victim::setDamageTaken(const qint32 &damage_taken) {
    m_damage_taken = damage_taken;
    m_damage_taken_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_damage_taken_Set() const{
    return m_damage_taken_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_damage_taken_Valid() const{
    return m_damage_taken_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_victim::getFactionId() const {
    return m_faction_id;
}
void OAIGet_killmails_killmail_id_killmail_hash_victim::setFactionId(const qint32 &faction_id) {
    m_faction_id = faction_id;
    m_faction_id_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_faction_id_Set() const{
    return m_faction_id_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_faction_id_Valid() const{
    return m_faction_id_isValid;
}

QList<OAIGet_killmails_killmail_id_killmail_hash_item> OAIGet_killmails_killmail_id_killmail_hash_victim::getItems() const {
    return m_items;
}
void OAIGet_killmails_killmail_id_killmail_hash_victim::setItems(const QList<OAIGet_killmails_killmail_id_killmail_hash_item> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_items_Set() const{
    return m_items_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_items_Valid() const{
    return m_items_isValid;
}

OAIGet_killmails_killmail_id_killmail_hash_position OAIGet_killmails_killmail_id_killmail_hash_victim::getPosition() const {
    return m_position;
}
void OAIGet_killmails_killmail_id_killmail_hash_victim::setPosition(const OAIGet_killmails_killmail_id_killmail_hash_position &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_position_Set() const{
    return m_position_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_position_Valid() const{
    return m_position_isValid;
}

qint32 OAIGet_killmails_killmail_id_killmail_hash_victim::getShipTypeId() const {
    return m_ship_type_id;
}
void OAIGet_killmails_killmail_id_killmail_hash_victim::setShipTypeId(const qint32 &ship_type_id) {
    m_ship_type_id = ship_type_id;
    m_ship_type_id_isSet = true;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_ship_type_id_Set() const{
    return m_ship_type_id_isSet;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::is_ship_type_id_Valid() const{
    return m_ship_type_id_isValid;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alliance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_character_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_corporation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_damage_taken_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_faction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_position.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_killmails_killmail_id_killmail_hash_victim::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_damage_taken_isValid && m_ship_type_id_isValid && true;
}

} // namespace OpenAPI
