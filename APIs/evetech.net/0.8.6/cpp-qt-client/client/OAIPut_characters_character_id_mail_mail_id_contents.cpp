/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPut_characters_character_id_mail_mail_id_contents.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPut_characters_character_id_mail_mail_id_contents::OAIPut_characters_character_id_mail_mail_id_contents(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPut_characters_character_id_mail_mail_id_contents::OAIPut_characters_character_id_mail_mail_id_contents() {
    this->initializeModel();
}

OAIPut_characters_character_id_mail_mail_id_contents::~OAIPut_characters_character_id_mail_mail_id_contents() {}

void OAIPut_characters_character_id_mail_mail_id_contents::initializeModel() {

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_read_isSet = false;
    m_read_isValid = false;
}

void OAIPut_characters_character_id_mail_mail_id_contents::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPut_characters_character_id_mail_mail_id_contents::fromJsonObject(QJsonObject json) {

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_read_isValid = ::OpenAPI::fromJsonValue(m_read, json[QString("read")]);
    m_read_isSet = !json[QString("read")].isNull() && m_read_isValid;
}

QString OAIPut_characters_character_id_mail_mail_id_contents::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPut_characters_character_id_mail_mail_id_contents::asJsonObject() const {
    QJsonObject obj;
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_read_isSet) {
        obj.insert(QString("read"), ::OpenAPI::toJsonValue(m_read));
    }
    return obj;
}

QList<qint32> OAIPut_characters_character_id_mail_mail_id_contents::getLabels() const {
    return m_labels;
}
void OAIPut_characters_character_id_mail_mail_id_contents::setLabels(const QList<qint32> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIPut_characters_character_id_mail_mail_id_contents::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIPut_characters_character_id_mail_mail_id_contents::is_labels_Valid() const{
    return m_labels_isValid;
}

bool OAIPut_characters_character_id_mail_mail_id_contents::isRead() const {
    return m_read;
}
void OAIPut_characters_character_id_mail_mail_id_contents::setRead(const bool &read) {
    m_read = read;
    m_read_isSet = true;
}

bool OAIPut_characters_character_id_mail_mail_id_contents::is_read_Set() const{
    return m_read_isSet;
}

bool OAIPut_characters_character_id_mail_mail_id_contents::is_read_Valid() const{
    return m_read_isValid;
}

bool OAIPut_characters_character_id_mail_mail_id_contents::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_read_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPut_characters_character_id_mail_mail_id_contents::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
