/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_characters_character_id_skills_ok.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_characters_character_id_skills_ok::OAIGet_characters_character_id_skills_ok(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_characters_character_id_skills_ok::OAIGet_characters_character_id_skills_ok() {
    this->initializeModel();
}

OAIGet_characters_character_id_skills_ok::~OAIGet_characters_character_id_skills_ok() {}

void OAIGet_characters_character_id_skills_ok::initializeModel() {

    m_skills_isSet = false;
    m_skills_isValid = false;

    m_total_sp_isSet = false;
    m_total_sp_isValid = false;

    m_unallocated_sp_isSet = false;
    m_unallocated_sp_isValid = false;
}

void OAIGet_characters_character_id_skills_ok::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_characters_character_id_skills_ok::fromJsonObject(QJsonObject json) {

    m_skills_isValid = ::OpenAPI::fromJsonValue(m_skills, json[QString("skills")]);
    m_skills_isSet = !json[QString("skills")].isNull() && m_skills_isValid;

    m_total_sp_isValid = ::OpenAPI::fromJsonValue(m_total_sp, json[QString("total_sp")]);
    m_total_sp_isSet = !json[QString("total_sp")].isNull() && m_total_sp_isValid;

    m_unallocated_sp_isValid = ::OpenAPI::fromJsonValue(m_unallocated_sp, json[QString("unallocated_sp")]);
    m_unallocated_sp_isSet = !json[QString("unallocated_sp")].isNull() && m_unallocated_sp_isValid;
}

QString OAIGet_characters_character_id_skills_ok::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_characters_character_id_skills_ok::asJsonObject() const {
    QJsonObject obj;
    if (m_skills.size() > 0) {
        obj.insert(QString("skills"), ::OpenAPI::toJsonValue(m_skills));
    }
    if (m_total_sp_isSet) {
        obj.insert(QString("total_sp"), ::OpenAPI::toJsonValue(m_total_sp));
    }
    if (m_unallocated_sp_isSet) {
        obj.insert(QString("unallocated_sp"), ::OpenAPI::toJsonValue(m_unallocated_sp));
    }
    return obj;
}

QList<OAIGet_characters_character_id_skills_skill> OAIGet_characters_character_id_skills_ok::getSkills() const {
    return m_skills;
}
void OAIGet_characters_character_id_skills_ok::setSkills(const QList<OAIGet_characters_character_id_skills_skill> &skills) {
    m_skills = skills;
    m_skills_isSet = true;
}

bool OAIGet_characters_character_id_skills_ok::is_skills_Set() const{
    return m_skills_isSet;
}

bool OAIGet_characters_character_id_skills_ok::is_skills_Valid() const{
    return m_skills_isValid;
}

qint64 OAIGet_characters_character_id_skills_ok::getTotalSp() const {
    return m_total_sp;
}
void OAIGet_characters_character_id_skills_ok::setTotalSp(const qint64 &total_sp) {
    m_total_sp = total_sp;
    m_total_sp_isSet = true;
}

bool OAIGet_characters_character_id_skills_ok::is_total_sp_Set() const{
    return m_total_sp_isSet;
}

bool OAIGet_characters_character_id_skills_ok::is_total_sp_Valid() const{
    return m_total_sp_isValid;
}

qint32 OAIGet_characters_character_id_skills_ok::getUnallocatedSp() const {
    return m_unallocated_sp;
}
void OAIGet_characters_character_id_skills_ok::setUnallocatedSp(const qint32 &unallocated_sp) {
    m_unallocated_sp = unallocated_sp;
    m_unallocated_sp_isSet = true;
}

bool OAIGet_characters_character_id_skills_ok::is_unallocated_sp_Set() const{
    return m_unallocated_sp_isSet;
}

bool OAIGet_characters_character_id_skills_ok::is_unallocated_sp_Valid() const{
    return m_unallocated_sp_isValid;
}

bool OAIGet_characters_character_id_skills_ok::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_skills.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_sp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unallocated_sp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_characters_character_id_skills_ok::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_skills_isValid && m_total_sp_isValid && true;
}

} // namespace OpenAPI
