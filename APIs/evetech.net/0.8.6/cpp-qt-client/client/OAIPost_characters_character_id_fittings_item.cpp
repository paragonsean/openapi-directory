/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPost_characters_character_id_fittings_item.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPost_characters_character_id_fittings_item::OAIPost_characters_character_id_fittings_item(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPost_characters_character_id_fittings_item::OAIPost_characters_character_id_fittings_item() {
    this->initializeModel();
}

OAIPost_characters_character_id_fittings_item::~OAIPost_characters_character_id_fittings_item() {}

void OAIPost_characters_character_id_fittings_item::initializeModel() {

    m_flag_isSet = false;
    m_flag_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_type_id_isSet = false;
    m_type_id_isValid = false;
}

void OAIPost_characters_character_id_fittings_item::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPost_characters_character_id_fittings_item::fromJsonObject(QJsonObject json) {

    m_flag_isValid = ::OpenAPI::fromJsonValue(m_flag, json[QString("flag")]);
    m_flag_isSet = !json[QString("flag")].isNull() && m_flag_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_type_id_isValid = ::OpenAPI::fromJsonValue(m_type_id, json[QString("type_id")]);
    m_type_id_isSet = !json[QString("type_id")].isNull() && m_type_id_isValid;
}

QString OAIPost_characters_character_id_fittings_item::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPost_characters_character_id_fittings_item::asJsonObject() const {
    QJsonObject obj;
    if (m_flag_isSet) {
        obj.insert(QString("flag"), ::OpenAPI::toJsonValue(m_flag));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_type_id_isSet) {
        obj.insert(QString("type_id"), ::OpenAPI::toJsonValue(m_type_id));
    }
    return obj;
}

qint32 OAIPost_characters_character_id_fittings_item::getFlag() const {
    return m_flag;
}
void OAIPost_characters_character_id_fittings_item::setFlag(const qint32 &flag) {
    m_flag = flag;
    m_flag_isSet = true;
}

bool OAIPost_characters_character_id_fittings_item::is_flag_Set() const{
    return m_flag_isSet;
}

bool OAIPost_characters_character_id_fittings_item::is_flag_Valid() const{
    return m_flag_isValid;
}

qint32 OAIPost_characters_character_id_fittings_item::getQuantity() const {
    return m_quantity;
}
void OAIPost_characters_character_id_fittings_item::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIPost_characters_character_id_fittings_item::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIPost_characters_character_id_fittings_item::is_quantity_Valid() const{
    return m_quantity_isValid;
}

qint32 OAIPost_characters_character_id_fittings_item::getTypeId() const {
    return m_type_id;
}
void OAIPost_characters_character_id_fittings_item::setTypeId(const qint32 &type_id) {
    m_type_id = type_id;
    m_type_id_isSet = true;
}

bool OAIPost_characters_character_id_fittings_item::is_type_id_Set() const{
    return m_type_id_isSet;
}

bool OAIPost_characters_character_id_fittings_item::is_type_id_Valid() const{
    return m_type_id_isValid;
}

bool OAIPost_characters_character_id_fittings_item::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPost_characters_character_id_fittings_item::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_flag_isValid && m_quantity_isValid && m_type_id_isValid && true;
}

} // namespace OpenAPI
