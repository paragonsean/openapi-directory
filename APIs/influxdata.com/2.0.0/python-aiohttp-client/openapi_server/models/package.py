# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file import File
from openapi_server import util


class Package(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, files: List[File]=None, package: str=None, path: str=None, type: str=None):
        """Package - a model defined in OpenAPI

        :param files: The files of this Package.
        :param package: The package of this Package.
        :param path: The path of this Package.
        :param type: The type of this Package.
        """
        self.openapi_types = {
            'files': List[File],
            'package': str,
            'path': str,
            'type': str
        }

        self.attribute_map = {
            'files': 'files',
            'package': 'package',
            'path': 'path',
            'type': 'type'
        }

        self._files = files
        self._package = package
        self._path = path
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Package':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Package of this Package.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def files(self):
        """Gets the files of this Package.

        Package files

        :return: The files of this Package.
        :rtype: List[File]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this Package.

        Package files

        :param files: The files of this Package.
        :type files: List[File]
        """

        self._files = files

    @property
    def package(self):
        """Gets the package of this Package.

        Package name

        :return: The package of this Package.
        :rtype: str
        """
        return self._package

    @package.setter
    def package(self, package):
        """Sets the package of this Package.

        Package name

        :param package: The package of this Package.
        :type package: str
        """

        self._package = package

    @property
    def path(self):
        """Gets the path of this Package.

        Package import path

        :return: The path of this Package.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this Package.

        Package import path

        :param path: The path of this Package.
        :type path: str
        """

        self._path = path

    @property
    def type(self):
        """Gets the type of this Package.

        Type of AST node

        :return: The type of this Package.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Package.

        Type of AST node

        :param type: The type of this Package.
        :type type: str
        """

        self._type = type
