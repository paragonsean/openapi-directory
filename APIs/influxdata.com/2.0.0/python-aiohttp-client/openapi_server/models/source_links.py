# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buckets: str=None, health: str=None, query: str=None, _self: str=None):
        """SourceLinks - a model defined in OpenAPI

        :param buckets: The buckets of this SourceLinks.
        :param health: The health of this SourceLinks.
        :param query: The query of this SourceLinks.
        :param _self: The _self of this SourceLinks.
        """
        self.openapi_types = {
            'buckets': str,
            'health': str,
            'query': str,
            '_self': str
        }

        self.attribute_map = {
            'buckets': 'buckets',
            'health': 'health',
            'query': 'query',
            '_self': 'self'
        }

        self._buckets = buckets
        self._health = health
        self._query = query
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Source_links of this SourceLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buckets(self):
        """Gets the buckets of this SourceLinks.


        :return: The buckets of this SourceLinks.
        :rtype: str
        """
        return self._buckets

    @buckets.setter
    def buckets(self, buckets):
        """Sets the buckets of this SourceLinks.


        :param buckets: The buckets of this SourceLinks.
        :type buckets: str
        """

        self._buckets = buckets

    @property
    def health(self):
        """Gets the health of this SourceLinks.


        :return: The health of this SourceLinks.
        :rtype: str
        """
        return self._health

    @health.setter
    def health(self, health):
        """Sets the health of this SourceLinks.


        :param health: The health of this SourceLinks.
        :type health: str
        """

        self._health = health

    @property
    def query(self):
        """Gets the query of this SourceLinks.


        :return: The query of this SourceLinks.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this SourceLinks.


        :param query: The query of this SourceLinks.
        :type query: str
        """

        self._query = query

    @property
    def _self(self):
        """Gets the _self of this SourceLinks.


        :return: The _self of this SourceLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this SourceLinks.


        :param _self: The _self of this SourceLinks.
        :type _self: str
        """

        self.__self = _self
