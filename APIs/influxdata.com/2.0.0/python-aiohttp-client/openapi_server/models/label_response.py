# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label import Label
from openapi_server.models.links import Links
from openapi_server import util


class LabelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label: Label=None, links: Links=None):
        """LabelResponse - a model defined in OpenAPI

        :param label: The label of this LabelResponse.
        :param links: The links of this LabelResponse.
        """
        self.openapi_types = {
            'label': Label,
            'links': Links
        }

        self.attribute_map = {
            'label': 'label',
            'links': 'links'
        }

        self._label = label
        self._links = links

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LabelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LabelResponse of this LabelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self):
        """Gets the label of this LabelResponse.


        :return: The label of this LabelResponse.
        :rtype: Label
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this LabelResponse.


        :param label: The label of this LabelResponse.
        :type label: Label
        """

        self._label = label

    @property
    def links(self):
        """Gets the links of this LabelResponse.


        :return: The links of this LabelResponse.
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this LabelResponse.


        :param links: The links of this LabelResponse.
        :type links: Links
        """

        self._links = links
