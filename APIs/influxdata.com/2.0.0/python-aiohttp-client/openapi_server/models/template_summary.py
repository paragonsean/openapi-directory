# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.template_summary_diff import TemplateSummaryDiff
from openapi_server.models.template_summary_errors_inner import TemplateSummaryErrorsInner
from openapi_server.models.template_summary_summary import TemplateSummarySummary
from openapi_server import util


class TemplateSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, diff: TemplateSummaryDiff=None, errors: List[TemplateSummaryErrorsInner]=None, sources: List[str]=None, stack_id: str=None, summary: TemplateSummarySummary=None):
        """TemplateSummary - a model defined in OpenAPI

        :param diff: The diff of this TemplateSummary.
        :param errors: The errors of this TemplateSummary.
        :param sources: The sources of this TemplateSummary.
        :param stack_id: The stack_id of this TemplateSummary.
        :param summary: The summary of this TemplateSummary.
        """
        self.openapi_types = {
            'diff': TemplateSummaryDiff,
            'errors': List[TemplateSummaryErrorsInner],
            'sources': List[str],
            'stack_id': str,
            'summary': TemplateSummarySummary
        }

        self.attribute_map = {
            'diff': 'diff',
            'errors': 'errors',
            'sources': 'sources',
            'stack_id': 'stackID',
            'summary': 'summary'
        }

        self._diff = diff
        self._errors = errors
        self._sources = sources
        self._stack_id = stack_id
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateSummary of this TemplateSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def diff(self):
        """Gets the diff of this TemplateSummary.


        :return: The diff of this TemplateSummary.
        :rtype: TemplateSummaryDiff
        """
        return self._diff

    @diff.setter
    def diff(self, diff):
        """Sets the diff of this TemplateSummary.


        :param diff: The diff of this TemplateSummary.
        :type diff: TemplateSummaryDiff
        """

        self._diff = diff

    @property
    def errors(self):
        """Gets the errors of this TemplateSummary.


        :return: The errors of this TemplateSummary.
        :rtype: List[TemplateSummaryErrorsInner]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this TemplateSummary.


        :param errors: The errors of this TemplateSummary.
        :type errors: List[TemplateSummaryErrorsInner]
        """

        self._errors = errors

    @property
    def sources(self):
        """Gets the sources of this TemplateSummary.


        :return: The sources of this TemplateSummary.
        :rtype: List[str]
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this TemplateSummary.


        :param sources: The sources of this TemplateSummary.
        :type sources: List[str]
        """

        self._sources = sources

    @property
    def stack_id(self):
        """Gets the stack_id of this TemplateSummary.


        :return: The stack_id of this TemplateSummary.
        :rtype: str
        """
        return self._stack_id

    @stack_id.setter
    def stack_id(self, stack_id):
        """Sets the stack_id of this TemplateSummary.


        :param stack_id: The stack_id of this TemplateSummary.
        :type stack_id: str
        """

        self._stack_id = stack_id

    @property
    def summary(self):
        """Gets the summary of this TemplateSummary.


        :return: The summary of this TemplateSummary.
        :rtype: TemplateSummarySummary
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this TemplateSummary.


        :param summary: The summary of this TemplateSummary.
        :type summary: TemplateSummarySummary
        """

        self._summary = summary
