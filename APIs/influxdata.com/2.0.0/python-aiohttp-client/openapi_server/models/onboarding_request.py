# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OnboardingRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket: str=None, org: str=None, password: str=None, retention_period_hrs: int=None, retention_period_seconds: int=None, token: str=None, username: str=None):
        """OnboardingRequest - a model defined in OpenAPI

        :param bucket: The bucket of this OnboardingRequest.
        :param org: The org of this OnboardingRequest.
        :param password: The password of this OnboardingRequest.
        :param retention_period_hrs: The retention_period_hrs of this OnboardingRequest.
        :param retention_period_seconds: The retention_period_seconds of this OnboardingRequest.
        :param token: The token of this OnboardingRequest.
        :param username: The username of this OnboardingRequest.
        """
        self.openapi_types = {
            'bucket': str,
            'org': str,
            'password': str,
            'retention_period_hrs': int,
            'retention_period_seconds': int,
            'token': str,
            'username': str
        }

        self.attribute_map = {
            'bucket': 'bucket',
            'org': 'org',
            'password': 'password',
            'retention_period_hrs': 'retentionPeriodHrs',
            'retention_period_seconds': 'retentionPeriodSeconds',
            'token': 'token',
            'username': 'username'
        }

        self._bucket = bucket
        self._org = org
        self._password = password
        self._retention_period_hrs = retention_period_hrs
        self._retention_period_seconds = retention_period_seconds
        self._token = token
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnboardingRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OnboardingRequest of this OnboardingRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket(self):
        """Gets the bucket of this OnboardingRequest.


        :return: The bucket of this OnboardingRequest.
        :rtype: str
        """
        return self._bucket

    @bucket.setter
    def bucket(self, bucket):
        """Sets the bucket of this OnboardingRequest.


        :param bucket: The bucket of this OnboardingRequest.
        :type bucket: str
        """
        if bucket is None:
            raise ValueError("Invalid value for `bucket`, must not be `None`")

        self._bucket = bucket

    @property
    def org(self):
        """Gets the org of this OnboardingRequest.


        :return: The org of this OnboardingRequest.
        :rtype: str
        """
        return self._org

    @org.setter
    def org(self, org):
        """Sets the org of this OnboardingRequest.


        :param org: The org of this OnboardingRequest.
        :type org: str
        """
        if org is None:
            raise ValueError("Invalid value for `org`, must not be `None`")

        self._org = org

    @property
    def password(self):
        """Gets the password of this OnboardingRequest.


        :return: The password of this OnboardingRequest.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this OnboardingRequest.


        :param password: The password of this OnboardingRequest.
        :type password: str
        """

        self._password = password

    @property
    def retention_period_hrs(self):
        """Gets the retention_period_hrs of this OnboardingRequest.

        Retention period *in nanoseconds* for the new bucket. This key's name has been misleading since OSS 2.0 GA, please transition to use `retentionPeriodSeconds` 

        :return: The retention_period_hrs of this OnboardingRequest.
        :rtype: int
        """
        return self._retention_period_hrs

    @retention_period_hrs.setter
    def retention_period_hrs(self, retention_period_hrs):
        """Sets the retention_period_hrs of this OnboardingRequest.

        Retention period *in nanoseconds* for the new bucket. This key's name has been misleading since OSS 2.0 GA, please transition to use `retentionPeriodSeconds` 

        :param retention_period_hrs: The retention_period_hrs of this OnboardingRequest.
        :type retention_period_hrs: int
        """

        self._retention_period_hrs = retention_period_hrs

    @property
    def retention_period_seconds(self):
        """Gets the retention_period_seconds of this OnboardingRequest.


        :return: The retention_period_seconds of this OnboardingRequest.
        :rtype: int
        """
        return self._retention_period_seconds

    @retention_period_seconds.setter
    def retention_period_seconds(self, retention_period_seconds):
        """Sets the retention_period_seconds of this OnboardingRequest.


        :param retention_period_seconds: The retention_period_seconds of this OnboardingRequest.
        :type retention_period_seconds: int
        """

        self._retention_period_seconds = retention_period_seconds

    @property
    def token(self):
        """Gets the token of this OnboardingRequest.

        Authentication token to set on the initial user. If not specified, the server will generate a token. 

        :return: The token of this OnboardingRequest.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this OnboardingRequest.

        Authentication token to set on the initial user. If not specified, the server will generate a token. 

        :param token: The token of this OnboardingRequest.
        :type token: str
        """

        self._token = token

    @property
    def username(self):
        """Gets the username of this OnboardingRequest.


        :return: The username of this OnboardingRequest.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this OnboardingRequest.


        :param username: The username of this OnboardingRequest.
        :type username: str
        """
        if username is None:
            raise ValueError("Invalid value for `username`, must not be `None`")

        self._username = username
