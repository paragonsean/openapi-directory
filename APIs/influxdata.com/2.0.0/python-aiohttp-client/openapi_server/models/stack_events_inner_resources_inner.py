# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stack_events_inner_resources_inner_associations_inner import StackEventsInnerResourcesInnerAssociationsInner
from openapi_server.models.stack_events_inner_resources_inner_links import StackEventsInnerResourcesInnerLinks
from openapi_server.models.template_kind import TemplateKind
from openapi_server import util


class StackEventsInnerResourcesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, associations: List[StackEventsInnerResourcesInnerAssociationsInner]=None, kind: TemplateKind=None, links: StackEventsInnerResourcesInnerLinks=None, resource_id: str=None, template_meta_name: str=None):
        """StackEventsInnerResourcesInner - a model defined in OpenAPI

        :param api_version: The api_version of this StackEventsInnerResourcesInner.
        :param associations: The associations of this StackEventsInnerResourcesInner.
        :param kind: The kind of this StackEventsInnerResourcesInner.
        :param links: The links of this StackEventsInnerResourcesInner.
        :param resource_id: The resource_id of this StackEventsInnerResourcesInner.
        :param template_meta_name: The template_meta_name of this StackEventsInnerResourcesInner.
        """
        self.openapi_types = {
            'api_version': str,
            'associations': List[StackEventsInnerResourcesInnerAssociationsInner],
            'kind': TemplateKind,
            'links': StackEventsInnerResourcesInnerLinks,
            'resource_id': str,
            'template_meta_name': str
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'associations': 'associations',
            'kind': 'kind',
            'links': 'links',
            'resource_id': 'resourceID',
            'template_meta_name': 'templateMetaName'
        }

        self._api_version = api_version
        self._associations = associations
        self._kind = kind
        self._links = links
        self._resource_id = resource_id
        self._template_meta_name = template_meta_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackEventsInnerResourcesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stack_events_inner_resources_inner of this StackEventsInnerResourcesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self):
        """Gets the api_version of this StackEventsInnerResourcesInner.


        :return: The api_version of this StackEventsInnerResourcesInner.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this StackEventsInnerResourcesInner.


        :param api_version: The api_version of this StackEventsInnerResourcesInner.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def associations(self):
        """Gets the associations of this StackEventsInnerResourcesInner.


        :return: The associations of this StackEventsInnerResourcesInner.
        :rtype: List[StackEventsInnerResourcesInnerAssociationsInner]
        """
        return self._associations

    @associations.setter
    def associations(self, associations):
        """Sets the associations of this StackEventsInnerResourcesInner.


        :param associations: The associations of this StackEventsInnerResourcesInner.
        :type associations: List[StackEventsInnerResourcesInnerAssociationsInner]
        """

        self._associations = associations

    @property
    def kind(self):
        """Gets the kind of this StackEventsInnerResourcesInner.


        :return: The kind of this StackEventsInnerResourcesInner.
        :rtype: TemplateKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this StackEventsInnerResourcesInner.


        :param kind: The kind of this StackEventsInnerResourcesInner.
        :type kind: TemplateKind
        """

        self._kind = kind

    @property
    def links(self):
        """Gets the links of this StackEventsInnerResourcesInner.


        :return: The links of this StackEventsInnerResourcesInner.
        :rtype: StackEventsInnerResourcesInnerLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this StackEventsInnerResourcesInner.


        :param links: The links of this StackEventsInnerResourcesInner.
        :type links: StackEventsInnerResourcesInnerLinks
        """

        self._links = links

    @property
    def resource_id(self):
        """Gets the resource_id of this StackEventsInnerResourcesInner.


        :return: The resource_id of this StackEventsInnerResourcesInner.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this StackEventsInnerResourcesInner.


        :param resource_id: The resource_id of this StackEventsInnerResourcesInner.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def template_meta_name(self):
        """Gets the template_meta_name of this StackEventsInnerResourcesInner.


        :return: The template_meta_name of this StackEventsInnerResourcesInner.
        :rtype: str
        """
        return self._template_meta_name

    @template_meta_name.setter
    def template_meta_name(self, template_meta_name):
        """Sets the template_meta_name of this StackEventsInnerResourcesInner.


        :param template_meta_name: The template_meta_name of this StackEventsInnerResourcesInner.
        :type template_meta_name: str
        """

        self._template_meta_name = template_meta_name
