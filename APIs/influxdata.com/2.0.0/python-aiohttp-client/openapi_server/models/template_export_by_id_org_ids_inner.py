# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.template_export_by_id_org_ids_inner_resource_filters import TemplateExportByIDOrgIDsInnerResourceFilters
from openapi_server import util


class TemplateExportByIDOrgIDsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, org_id: str=None, resource_filters: TemplateExportByIDOrgIDsInnerResourceFilters=None):
        """TemplateExportByIDOrgIDsInner - a model defined in OpenAPI

        :param org_id: The org_id of this TemplateExportByIDOrgIDsInner.
        :param resource_filters: The resource_filters of this TemplateExportByIDOrgIDsInner.
        """
        self.openapi_types = {
            'org_id': str,
            'resource_filters': TemplateExportByIDOrgIDsInnerResourceFilters
        }

        self.attribute_map = {
            'org_id': 'orgID',
            'resource_filters': 'resourceFilters'
        }

        self._org_id = org_id
        self._resource_filters = resource_filters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateExportByIDOrgIDsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateExportByID_orgIDs_inner of this TemplateExportByIDOrgIDsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def org_id(self):
        """Gets the org_id of this TemplateExportByIDOrgIDsInner.


        :return: The org_id of this TemplateExportByIDOrgIDsInner.
        :rtype: str
        """
        return self._org_id

    @org_id.setter
    def org_id(self, org_id):
        """Sets the org_id of this TemplateExportByIDOrgIDsInner.


        :param org_id: The org_id of this TemplateExportByIDOrgIDsInner.
        :type org_id: str
        """

        self._org_id = org_id

    @property
    def resource_filters(self):
        """Gets the resource_filters of this TemplateExportByIDOrgIDsInner.


        :return: The resource_filters of this TemplateExportByIDOrgIDsInner.
        :rtype: TemplateExportByIDOrgIDsInnerResourceFilters
        """
        return self._resource_filters

    @resource_filters.setter
    def resource_filters(self, resource_filters):
        """Sets the resource_filters of this TemplateExportByIDOrgIDsInner.


        :param resource_filters: The resource_filters of this TemplateExportByIDOrgIDsInner.
        :type resource_filters: TemplateExportByIDOrgIDsInnerResourceFilters
        """

        self._resource_filters = resource_filters
