# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_members_links import ResourceMembersLinks
from openapi_server.models.source import Source
from openapi_server import util


class Sources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: ResourceMembersLinks=None, sources: List[Source]=None):
        """Sources - a model defined in OpenAPI

        :param links: The links of this Sources.
        :param sources: The sources of this Sources.
        """
        self.openapi_types = {
            'links': ResourceMembersLinks,
            'sources': List[Source]
        }

        self.attribute_map = {
            'links': 'links',
            'sources': 'sources'
        }

        self._links = links
        self._sources = sources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Sources':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Sources of this Sources.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this Sources.


        :return: The links of this Sources.
        :rtype: ResourceMembersLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Sources.


        :param links: The links of this Sources.
        :type links: ResourceMembersLinks
        """

        self._links = links

    @property
    def sources(self):
        """Gets the sources of this Sources.


        :return: The sources of this Sources.
        :rtype: List[Source]
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this Sources.


        :param sources: The sources of this Sources.
        :type sources: List[Source]
        """

        self._sources = sources
