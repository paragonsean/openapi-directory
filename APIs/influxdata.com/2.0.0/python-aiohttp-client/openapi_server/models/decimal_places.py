# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DecimalPlaces(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, digits: int=None, is_enforced: bool=None):
        """DecimalPlaces - a model defined in OpenAPI

        :param digits: The digits of this DecimalPlaces.
        :param is_enforced: The is_enforced of this DecimalPlaces.
        """
        self.openapi_types = {
            'digits': int,
            'is_enforced': bool
        }

        self.attribute_map = {
            'digits': 'digits',
            'is_enforced': 'isEnforced'
        }

        self._digits = digits
        self._is_enforced = is_enforced

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DecimalPlaces':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DecimalPlaces of this DecimalPlaces.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def digits(self):
        """Gets the digits of this DecimalPlaces.

        The number of digits after decimal to display

        :return: The digits of this DecimalPlaces.
        :rtype: int
        """
        return self._digits

    @digits.setter
    def digits(self, digits):
        """Sets the digits of this DecimalPlaces.

        The number of digits after decimal to display

        :param digits: The digits of this DecimalPlaces.
        :type digits: int
        """

        self._digits = digits

    @property
    def is_enforced(self):
        """Gets the is_enforced of this DecimalPlaces.

        Indicates whether decimal point setting should be enforced

        :return: The is_enforced of this DecimalPlaces.
        :rtype: bool
        """
        return self._is_enforced

    @is_enforced.setter
    def is_enforced(self, is_enforced):
        """Sets the is_enforced of this DecimalPlaces.

        Indicates whether decimal point setting should be enforced

        :param is_enforced: The is_enforced of this DecimalPlaces.
        :type is_enforced: bool
        """

        self._is_enforced = is_enforced
