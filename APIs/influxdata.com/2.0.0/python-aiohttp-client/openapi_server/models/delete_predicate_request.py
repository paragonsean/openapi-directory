# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeletePredicateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, predicate: str=None, start: datetime=None, stop: datetime=None):
        """DeletePredicateRequest - a model defined in OpenAPI

        :param predicate: The predicate of this DeletePredicateRequest.
        :param start: The start of this DeletePredicateRequest.
        :param stop: The stop of this DeletePredicateRequest.
        """
        self.openapi_types = {
            'predicate': str,
            'start': datetime,
            'stop': datetime
        }

        self.attribute_map = {
            'predicate': 'predicate',
            'start': 'start',
            'stop': 'stop'
        }

        self._predicate = predicate
        self._start = start
        self._stop = stop

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeletePredicateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeletePredicateRequest of this DeletePredicateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def predicate(self):
        """Gets the predicate of this DeletePredicateRequest.

        InfluxQL-like delete statement

        :return: The predicate of this DeletePredicateRequest.
        :rtype: str
        """
        return self._predicate

    @predicate.setter
    def predicate(self, predicate):
        """Sets the predicate of this DeletePredicateRequest.

        InfluxQL-like delete statement

        :param predicate: The predicate of this DeletePredicateRequest.
        :type predicate: str
        """

        self._predicate = predicate

    @property
    def start(self):
        """Gets the start of this DeletePredicateRequest.

        RFC3339Nano

        :return: The start of this DeletePredicateRequest.
        :rtype: datetime
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this DeletePredicateRequest.

        RFC3339Nano

        :param start: The start of this DeletePredicateRequest.
        :type start: datetime
        """
        if start is None:
            raise ValueError("Invalid value for `start`, must not be `None`")

        self._start = start

    @property
    def stop(self):
        """Gets the stop of this DeletePredicateRequest.

        RFC3339Nano

        :return: The stop of this DeletePredicateRequest.
        :rtype: datetime
        """
        return self._stop

    @stop.setter
    def stop(self, stop):
        """Sets the stop of this DeletePredicateRequest.

        RFC3339Nano

        :param stop: The stop of this DeletePredicateRequest.
        :type stop: datetime
        """
        if stop is None:
            raise ValueError("Invalid value for `stop`, must not be `None`")

        self._stop = stop
