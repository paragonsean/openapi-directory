# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.template_inner_meta import TemplateInnerMeta
from openapi_server.models.template_kind import TemplateKind
from openapi_server import util


class TemplateInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, kind: TemplateKind=None, meta: TemplateInnerMeta=None, spec: object=None):
        """TemplateInner - a model defined in OpenAPI

        :param api_version: The api_version of this TemplateInner.
        :param kind: The kind of this TemplateInner.
        :param meta: The meta of this TemplateInner.
        :param spec: The spec of this TemplateInner.
        """
        self.openapi_types = {
            'api_version': str,
            'kind': TemplateKind,
            'meta': TemplateInnerMeta,
            'spec': object
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'kind': 'kind',
            'meta': 'meta',
            'spec': 'spec'
        }

        self._api_version = api_version
        self._kind = kind
        self._meta = meta
        self._spec = spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Template_inner of this TemplateInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self):
        """Gets the api_version of this TemplateInner.


        :return: The api_version of this TemplateInner.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this TemplateInner.


        :param api_version: The api_version of this TemplateInner.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def kind(self):
        """Gets the kind of this TemplateInner.


        :return: The kind of this TemplateInner.
        :rtype: TemplateKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TemplateInner.


        :param kind: The kind of this TemplateInner.
        :type kind: TemplateKind
        """

        self._kind = kind

    @property
    def meta(self):
        """Gets the meta of this TemplateInner.


        :return: The meta of this TemplateInner.
        :rtype: TemplateInnerMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this TemplateInner.


        :param meta: The meta of this TemplateInner.
        :type meta: TemplateInnerMeta
        """

        self._meta = meta

    @property
    def spec(self):
        """Gets the spec of this TemplateInner.


        :return: The spec of this TemplateInner.
        :rtype: object
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this TemplateInner.


        :param spec: The spec of this TemplateInner.
        :type spec: object
        """

        self._spec = spec
