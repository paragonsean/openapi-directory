# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotificationEndpointUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, status: str=None):
        """NotificationEndpointUpdate - a model defined in OpenAPI

        :param description: The description of this NotificationEndpointUpdate.
        :param name: The name of this NotificationEndpointUpdate.
        :param status: The status of this NotificationEndpointUpdate.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'status': str
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'status': 'status'
        }

        self._description = description
        self._name = name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationEndpointUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationEndpointUpdate of this NotificationEndpointUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this NotificationEndpointUpdate.


        :return: The description of this NotificationEndpointUpdate.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this NotificationEndpointUpdate.


        :param description: The description of this NotificationEndpointUpdate.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this NotificationEndpointUpdate.


        :return: The name of this NotificationEndpointUpdate.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NotificationEndpointUpdate.


        :param name: The name of this NotificationEndpointUpdate.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this NotificationEndpointUpdate.


        :return: The status of this NotificationEndpointUpdate.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this NotificationEndpointUpdate.


        :param status: The status of this NotificationEndpointUpdate.
        :type status: str
        """
        allowed_values = ["active", "inactive"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
