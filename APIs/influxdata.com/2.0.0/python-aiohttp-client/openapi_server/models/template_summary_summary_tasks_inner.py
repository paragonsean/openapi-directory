# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.template_env_references_inner import TemplateEnvReferencesInner
from openapi_server.models.template_kind import TemplateKind
from openapi_server import util


class TemplateSummarySummaryTasksInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cron: str=None, description: str=None, env_references: List[TemplateEnvReferencesInner]=None, every: str=None, id: str=None, kind: TemplateKind=None, name: str=None, offset: str=None, query: str=None, status: str=None, template_meta_name: str=None):
        """TemplateSummarySummaryTasksInner - a model defined in OpenAPI

        :param cron: The cron of this TemplateSummarySummaryTasksInner.
        :param description: The description of this TemplateSummarySummaryTasksInner.
        :param env_references: The env_references of this TemplateSummarySummaryTasksInner.
        :param every: The every of this TemplateSummarySummaryTasksInner.
        :param id: The id of this TemplateSummarySummaryTasksInner.
        :param kind: The kind of this TemplateSummarySummaryTasksInner.
        :param name: The name of this TemplateSummarySummaryTasksInner.
        :param offset: The offset of this TemplateSummarySummaryTasksInner.
        :param query: The query of this TemplateSummarySummaryTasksInner.
        :param status: The status of this TemplateSummarySummaryTasksInner.
        :param template_meta_name: The template_meta_name of this TemplateSummarySummaryTasksInner.
        """
        self.openapi_types = {
            'cron': str,
            'description': str,
            'env_references': List[TemplateEnvReferencesInner],
            'every': str,
            'id': str,
            'kind': TemplateKind,
            'name': str,
            'offset': str,
            'query': str,
            'status': str,
            'template_meta_name': str
        }

        self.attribute_map = {
            'cron': 'cron',
            'description': 'description',
            'env_references': 'envReferences',
            'every': 'every',
            'id': 'id',
            'kind': 'kind',
            'name': 'name',
            'offset': 'offset',
            'query': 'query',
            'status': 'status',
            'template_meta_name': 'templateMetaName'
        }

        self._cron = cron
        self._description = description
        self._env_references = env_references
        self._every = every
        self._id = id
        self._kind = kind
        self._name = name
        self._offset = offset
        self._query = query
        self._status = status
        self._template_meta_name = template_meta_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateSummarySummaryTasksInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateSummary_summary_tasks_inner of this TemplateSummarySummaryTasksInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cron(self):
        """Gets the cron of this TemplateSummarySummaryTasksInner.


        :return: The cron of this TemplateSummarySummaryTasksInner.
        :rtype: str
        """
        return self._cron

    @cron.setter
    def cron(self, cron):
        """Sets the cron of this TemplateSummarySummaryTasksInner.


        :param cron: The cron of this TemplateSummarySummaryTasksInner.
        :type cron: str
        """

        self._cron = cron

    @property
    def description(self):
        """Gets the description of this TemplateSummarySummaryTasksInner.


        :return: The description of this TemplateSummarySummaryTasksInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TemplateSummarySummaryTasksInner.


        :param description: The description of this TemplateSummarySummaryTasksInner.
        :type description: str
        """

        self._description = description

    @property
    def env_references(self):
        """Gets the env_references of this TemplateSummarySummaryTasksInner.


        :return: The env_references of this TemplateSummarySummaryTasksInner.
        :rtype: List[TemplateEnvReferencesInner]
        """
        return self._env_references

    @env_references.setter
    def env_references(self, env_references):
        """Sets the env_references of this TemplateSummarySummaryTasksInner.


        :param env_references: The env_references of this TemplateSummarySummaryTasksInner.
        :type env_references: List[TemplateEnvReferencesInner]
        """

        self._env_references = env_references

    @property
    def every(self):
        """Gets the every of this TemplateSummarySummaryTasksInner.


        :return: The every of this TemplateSummarySummaryTasksInner.
        :rtype: str
        """
        return self._every

    @every.setter
    def every(self, every):
        """Sets the every of this TemplateSummarySummaryTasksInner.


        :param every: The every of this TemplateSummarySummaryTasksInner.
        :type every: str
        """

        self._every = every

    @property
    def id(self):
        """Gets the id of this TemplateSummarySummaryTasksInner.


        :return: The id of this TemplateSummarySummaryTasksInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TemplateSummarySummaryTasksInner.


        :param id: The id of this TemplateSummarySummaryTasksInner.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this TemplateSummarySummaryTasksInner.


        :return: The kind of this TemplateSummarySummaryTasksInner.
        :rtype: TemplateKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TemplateSummarySummaryTasksInner.


        :param kind: The kind of this TemplateSummarySummaryTasksInner.
        :type kind: TemplateKind
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this TemplateSummarySummaryTasksInner.


        :return: The name of this TemplateSummarySummaryTasksInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TemplateSummarySummaryTasksInner.


        :param name: The name of this TemplateSummarySummaryTasksInner.
        :type name: str
        """

        self._name = name

    @property
    def offset(self):
        """Gets the offset of this TemplateSummarySummaryTasksInner.


        :return: The offset of this TemplateSummarySummaryTasksInner.
        :rtype: str
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this TemplateSummarySummaryTasksInner.


        :param offset: The offset of this TemplateSummarySummaryTasksInner.
        :type offset: str
        """

        self._offset = offset

    @property
    def query(self):
        """Gets the query of this TemplateSummarySummaryTasksInner.


        :return: The query of this TemplateSummarySummaryTasksInner.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this TemplateSummarySummaryTasksInner.


        :param query: The query of this TemplateSummarySummaryTasksInner.
        :type query: str
        """

        self._query = query

    @property
    def status(self):
        """Gets the status of this TemplateSummarySummaryTasksInner.


        :return: The status of this TemplateSummarySummaryTasksInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TemplateSummarySummaryTasksInner.


        :param status: The status of this TemplateSummarySummaryTasksInner.
        :type status: str
        """

        self._status = status

    @property
    def template_meta_name(self):
        """Gets the template_meta_name of this TemplateSummarySummaryTasksInner.


        :return: The template_meta_name of this TemplateSummarySummaryTasksInner.
        :rtype: str
        """
        return self._template_meta_name

    @template_meta_name.setter
    def template_meta_name(self, template_meta_name):
        """Sets the template_meta_name of this TemplateSummarySummaryTasksInner.


        :param template_meta_name: The template_meta_name of this TemplateSummarySummaryTasksInner.
        :type template_meta_name: str
        """

        self._template_meta_name = template_meta_name
