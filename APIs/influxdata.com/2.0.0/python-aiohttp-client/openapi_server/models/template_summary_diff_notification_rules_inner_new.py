# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.template_summary_diff_notification_rules_inner_new_status_rules_inner import TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner
from openapi_server.models.template_summary_diff_notification_rules_inner_new_tag_rules_inner import TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner
from openapi_server import util


class TemplateSummaryDiffNotificationRulesInnerNew(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, endpoint_id: str=None, endpoint_name: str=None, endpoint_type: str=None, every: str=None, message_template: str=None, name: str=None, offset: str=None, status: str=None, status_rules: List[TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner]=None, tag_rules: List[TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner]=None):
        """TemplateSummaryDiffNotificationRulesInnerNew - a model defined in OpenAPI

        :param description: The description of this TemplateSummaryDiffNotificationRulesInnerNew.
        :param endpoint_id: The endpoint_id of this TemplateSummaryDiffNotificationRulesInnerNew.
        :param endpoint_name: The endpoint_name of this TemplateSummaryDiffNotificationRulesInnerNew.
        :param endpoint_type: The endpoint_type of this TemplateSummaryDiffNotificationRulesInnerNew.
        :param every: The every of this TemplateSummaryDiffNotificationRulesInnerNew.
        :param message_template: The message_template of this TemplateSummaryDiffNotificationRulesInnerNew.
        :param name: The name of this TemplateSummaryDiffNotificationRulesInnerNew.
        :param offset: The offset of this TemplateSummaryDiffNotificationRulesInnerNew.
        :param status: The status of this TemplateSummaryDiffNotificationRulesInnerNew.
        :param status_rules: The status_rules of this TemplateSummaryDiffNotificationRulesInnerNew.
        :param tag_rules: The tag_rules of this TemplateSummaryDiffNotificationRulesInnerNew.
        """
        self.openapi_types = {
            'description': str,
            'endpoint_id': str,
            'endpoint_name': str,
            'endpoint_type': str,
            'every': str,
            'message_template': str,
            'name': str,
            'offset': str,
            'status': str,
            'status_rules': List[TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner],
            'tag_rules': List[TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner]
        }

        self.attribute_map = {
            'description': 'description',
            'endpoint_id': 'endpointID',
            'endpoint_name': 'endpointName',
            'endpoint_type': 'endpointType',
            'every': 'every',
            'message_template': 'messageTemplate',
            'name': 'name',
            'offset': 'offset',
            'status': 'status',
            'status_rules': 'statusRules',
            'tag_rules': 'tagRules'
        }

        self._description = description
        self._endpoint_id = endpoint_id
        self._endpoint_name = endpoint_name
        self._endpoint_type = endpoint_type
        self._every = every
        self._message_template = message_template
        self._name = name
        self._offset = offset
        self._status = status
        self._status_rules = status_rules
        self._tag_rules = tag_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateSummaryDiffNotificationRulesInnerNew':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateSummary_diff_notificationRules_inner_new of this TemplateSummaryDiffNotificationRulesInnerNew.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The description of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param description: The description of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type description: str
        """

        self._description = description

    @property
    def endpoint_id(self):
        """Gets the endpoint_id of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The endpoint_id of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: str
        """
        return self._endpoint_id

    @endpoint_id.setter
    def endpoint_id(self, endpoint_id):
        """Sets the endpoint_id of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param endpoint_id: The endpoint_id of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type endpoint_id: str
        """

        self._endpoint_id = endpoint_id

    @property
    def endpoint_name(self):
        """Gets the endpoint_name of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The endpoint_name of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: str
        """
        return self._endpoint_name

    @endpoint_name.setter
    def endpoint_name(self, endpoint_name):
        """Sets the endpoint_name of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param endpoint_name: The endpoint_name of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type endpoint_name: str
        """

        self._endpoint_name = endpoint_name

    @property
    def endpoint_type(self):
        """Gets the endpoint_type of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The endpoint_type of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: str
        """
        return self._endpoint_type

    @endpoint_type.setter
    def endpoint_type(self, endpoint_type):
        """Sets the endpoint_type of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param endpoint_type: The endpoint_type of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type endpoint_type: str
        """

        self._endpoint_type = endpoint_type

    @property
    def every(self):
        """Gets the every of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The every of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: str
        """
        return self._every

    @every.setter
    def every(self, every):
        """Sets the every of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param every: The every of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type every: str
        """

        self._every = every

    @property
    def message_template(self):
        """Gets the message_template of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The message_template of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: str
        """
        return self._message_template

    @message_template.setter
    def message_template(self, message_template):
        """Sets the message_template of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param message_template: The message_template of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type message_template: str
        """

        self._message_template = message_template

    @property
    def name(self):
        """Gets the name of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The name of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param name: The name of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type name: str
        """

        self._name = name

    @property
    def offset(self):
        """Gets the offset of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The offset of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: str
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param offset: The offset of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type offset: str
        """

        self._offset = offset

    @property
    def status(self):
        """Gets the status of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The status of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param status: The status of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type status: str
        """

        self._status = status

    @property
    def status_rules(self):
        """Gets the status_rules of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The status_rules of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: List[TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner]
        """
        return self._status_rules

    @status_rules.setter
    def status_rules(self, status_rules):
        """Sets the status_rules of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param status_rules: The status_rules of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type status_rules: List[TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner]
        """

        self._status_rules = status_rules

    @property
    def tag_rules(self):
        """Gets the tag_rules of this TemplateSummaryDiffNotificationRulesInnerNew.


        :return: The tag_rules of this TemplateSummaryDiffNotificationRulesInnerNew.
        :rtype: List[TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner]
        """
        return self._tag_rules

    @tag_rules.setter
    def tag_rules(self, tag_rules):
        """Sets the tag_rules of this TemplateSummaryDiffNotificationRulesInnerNew.


        :param tag_rules: The tag_rules of this TemplateSummaryDiffNotificationRulesInnerNew.
        :type tag_rules: List[TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner]
        """

        self._tag_rules = tag_rules
