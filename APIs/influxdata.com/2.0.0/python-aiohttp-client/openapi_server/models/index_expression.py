# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expression import Expression
from openapi_server import util


class IndexExpression(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, array: Expression=None, index: Expression=None, type: str=None):
        """IndexExpression - a model defined in OpenAPI

        :param array: The array of this IndexExpression.
        :param index: The index of this IndexExpression.
        :param type: The type of this IndexExpression.
        """
        self.openapi_types = {
            'array': Expression,
            'index': Expression,
            'type': str
        }

        self.attribute_map = {
            'array': 'array',
            'index': 'index',
            'type': 'type'
        }

        self._array = array
        self._index = index
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IndexExpression':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IndexExpression of this IndexExpression.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def array(self):
        """Gets the array of this IndexExpression.


        :return: The array of this IndexExpression.
        :rtype: Expression
        """
        return self._array

    @array.setter
    def array(self, array):
        """Sets the array of this IndexExpression.


        :param array: The array of this IndexExpression.
        :type array: Expression
        """

        self._array = array

    @property
    def index(self):
        """Gets the index of this IndexExpression.


        :return: The index of this IndexExpression.
        :rtype: Expression
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this IndexExpression.


        :param index: The index of this IndexExpression.
        :type index: Expression
        """

        self._index = index

    @property
    def type(self):
        """Gets the type of this IndexExpression.

        Type of AST node

        :return: The type of this IndexExpression.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this IndexExpression.

        Type of AST node

        :param type: The type of this IndexExpression.
        :type type: str
        """

        self._type = type
