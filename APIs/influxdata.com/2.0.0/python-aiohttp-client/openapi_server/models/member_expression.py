# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expression import Expression
from openapi_server.models.property_key import PropertyKey
from openapi_server import util


class MemberExpression(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object: Expression=None, _property: PropertyKey=None, type: str=None):
        """MemberExpression - a model defined in OpenAPI

        :param object: The object of this MemberExpression.
        :param _property: The _property of this MemberExpression.
        :param type: The type of this MemberExpression.
        """
        self.openapi_types = {
            'object': Expression,
            '_property': PropertyKey,
            'type': str
        }

        self.attribute_map = {
            'object': 'object',
            '_property': 'property',
            'type': 'type'
        }

        self._object = object
        self.__property = _property
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberExpression':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MemberExpression of this MemberExpression.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object(self):
        """Gets the object of this MemberExpression.


        :return: The object of this MemberExpression.
        :rtype: Expression
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this MemberExpression.


        :param object: The object of this MemberExpression.
        :type object: Expression
        """

        self._object = object

    @property
    def _property(self):
        """Gets the _property of this MemberExpression.


        :return: The _property of this MemberExpression.
        :rtype: PropertyKey
        """
        return self.__property

    @_property.setter
    def _property(self, _property):
        """Sets the _property of this MemberExpression.


        :param _property: The _property of this MemberExpression.
        :type _property: PropertyKey
        """

        self.__property = _property

    @property
    def type(self):
        """Gets the type of this MemberExpression.

        Type of AST node

        :return: The type of this MemberExpression.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MemberExpression.

        Type of AST node

        :param type: The type of this MemberExpression.
        :type type: str
        """

        self._type = type
