# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScraperTargetResponseAllOfLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket: str=None, members: str=None, organization: str=None, owners: str=None, _self: str=None):
        """ScraperTargetResponseAllOfLinks - a model defined in OpenAPI

        :param bucket: The bucket of this ScraperTargetResponseAllOfLinks.
        :param members: The members of this ScraperTargetResponseAllOfLinks.
        :param organization: The organization of this ScraperTargetResponseAllOfLinks.
        :param owners: The owners of this ScraperTargetResponseAllOfLinks.
        :param _self: The _self of this ScraperTargetResponseAllOfLinks.
        """
        self.openapi_types = {
            'bucket': str,
            'members': str,
            'organization': str,
            'owners': str,
            '_self': str
        }

        self.attribute_map = {
            'bucket': 'bucket',
            'members': 'members',
            'organization': 'organization',
            'owners': 'owners',
            '_self': 'self'
        }

        self._bucket = bucket
        self._members = members
        self._organization = organization
        self._owners = owners
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScraperTargetResponseAllOfLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScraperTargetResponse_allOf_links of this ScraperTargetResponseAllOfLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket(self):
        """Gets the bucket of this ScraperTargetResponseAllOfLinks.

        URI of resource.

        :return: The bucket of this ScraperTargetResponseAllOfLinks.
        :rtype: str
        """
        return self._bucket

    @bucket.setter
    def bucket(self, bucket):
        """Sets the bucket of this ScraperTargetResponseAllOfLinks.

        URI of resource.

        :param bucket: The bucket of this ScraperTargetResponseAllOfLinks.
        :type bucket: str
        """

        self._bucket = bucket

    @property
    def members(self):
        """Gets the members of this ScraperTargetResponseAllOfLinks.

        URI of resource.

        :return: The members of this ScraperTargetResponseAllOfLinks.
        :rtype: str
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this ScraperTargetResponseAllOfLinks.

        URI of resource.

        :param members: The members of this ScraperTargetResponseAllOfLinks.
        :type members: str
        """

        self._members = members

    @property
    def organization(self):
        """Gets the organization of this ScraperTargetResponseAllOfLinks.

        URI of resource.

        :return: The organization of this ScraperTargetResponseAllOfLinks.
        :rtype: str
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this ScraperTargetResponseAllOfLinks.

        URI of resource.

        :param organization: The organization of this ScraperTargetResponseAllOfLinks.
        :type organization: str
        """

        self._organization = organization

    @property
    def owners(self):
        """Gets the owners of this ScraperTargetResponseAllOfLinks.

        URI of resource.

        :return: The owners of this ScraperTargetResponseAllOfLinks.
        :rtype: str
        """
        return self._owners

    @owners.setter
    def owners(self, owners):
        """Sets the owners of this ScraperTargetResponseAllOfLinks.

        URI of resource.

        :param owners: The owners of this ScraperTargetResponseAllOfLinks.
        :type owners: str
        """

        self._owners = owners

    @property
    def _self(self):
        """Gets the _self of this ScraperTargetResponseAllOfLinks.

        URI of resource.

        :return: The _self of this ScraperTargetResponseAllOfLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this ScraperTargetResponseAllOfLinks.

        URI of resource.

        :param _self: The _self of this ScraperTargetResponseAllOfLinks.
        :type _self: str
        """

        self.__self = _self
