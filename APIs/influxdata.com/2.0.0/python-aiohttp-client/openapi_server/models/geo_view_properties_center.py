# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GeoViewPropertiesCenter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lat: float=None, lon: float=None):
        """GeoViewPropertiesCenter - a model defined in OpenAPI

        :param lat: The lat of this GeoViewPropertiesCenter.
        :param lon: The lon of this GeoViewPropertiesCenter.
        """
        self.openapi_types = {
            'lat': float,
            'lon': float
        }

        self.attribute_map = {
            'lat': 'lat',
            'lon': 'lon'
        }

        self._lat = lat
        self._lon = lon

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeoViewPropertiesCenter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GeoViewProperties_center of this GeoViewPropertiesCenter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lat(self):
        """Gets the lat of this GeoViewPropertiesCenter.

        Latitude of the center of the map

        :return: The lat of this GeoViewPropertiesCenter.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this GeoViewPropertiesCenter.

        Latitude of the center of the map

        :param lat: The lat of this GeoViewPropertiesCenter.
        :type lat: float
        """
        if lat is None:
            raise ValueError("Invalid value for `lat`, must not be `None`")

        self._lat = lat

    @property
    def lon(self):
        """Gets the lon of this GeoViewPropertiesCenter.

        Longitude of the center of the map

        :return: The lon of this GeoViewPropertiesCenter.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon):
        """Sets the lon of this GeoViewPropertiesCenter.

        Longitude of the center of the map

        :param lon: The lon of this GeoViewPropertiesCenter.
        :type lon: float
        """
        if lon is None:
            raise ValueError("Invalid value for `lon`, must not be `None`")

        self._lon = lon
