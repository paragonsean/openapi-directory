# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.template_summary_diff_label_mappings_inner import TemplateSummaryDiffLabelMappingsInner
from openapi_server.models.template_summary_label import TemplateSummaryLabel
from openapi_server.models.template_summary_summary_buckets_inner import TemplateSummarySummaryBucketsInner
from openapi_server.models.template_summary_summary_checks_inner import TemplateSummarySummaryChecksInner
from openapi_server.models.template_summary_summary_dashboards_inner import TemplateSummarySummaryDashboardsInner
from openapi_server.models.template_summary_summary_notification_endpoints_inner import TemplateSummarySummaryNotificationEndpointsInner
from openapi_server.models.template_summary_summary_notification_rules_inner import TemplateSummarySummaryNotificationRulesInner
from openapi_server.models.template_summary_summary_tasks_inner import TemplateSummarySummaryTasksInner
from openapi_server.models.template_summary_summary_telegraf_configs_inner import TemplateSummarySummaryTelegrafConfigsInner
from openapi_server.models.template_summary_summary_variables_inner import TemplateSummarySummaryVariablesInner
from openapi_server import util


class TemplateSummarySummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buckets: List[TemplateSummarySummaryBucketsInner]=None, checks: List[TemplateSummarySummaryChecksInner]=None, dashboards: List[TemplateSummarySummaryDashboardsInner]=None, label_mappings: List[TemplateSummaryDiffLabelMappingsInner]=None, labels: List[TemplateSummaryLabel]=None, missing_env_refs: List[str]=None, missing_secrets: List[str]=None, notification_endpoints: List[TemplateSummarySummaryNotificationEndpointsInner]=None, notification_rules: List[TemplateSummarySummaryNotificationRulesInner]=None, tasks: List[TemplateSummarySummaryTasksInner]=None, telegraf_configs: List[TemplateSummarySummaryTelegrafConfigsInner]=None, variables: List[TemplateSummarySummaryVariablesInner]=None):
        """TemplateSummarySummary - a model defined in OpenAPI

        :param buckets: The buckets of this TemplateSummarySummary.
        :param checks: The checks of this TemplateSummarySummary.
        :param dashboards: The dashboards of this TemplateSummarySummary.
        :param label_mappings: The label_mappings of this TemplateSummarySummary.
        :param labels: The labels of this TemplateSummarySummary.
        :param missing_env_refs: The missing_env_refs of this TemplateSummarySummary.
        :param missing_secrets: The missing_secrets of this TemplateSummarySummary.
        :param notification_endpoints: The notification_endpoints of this TemplateSummarySummary.
        :param notification_rules: The notification_rules of this TemplateSummarySummary.
        :param tasks: The tasks of this TemplateSummarySummary.
        :param telegraf_configs: The telegraf_configs of this TemplateSummarySummary.
        :param variables: The variables of this TemplateSummarySummary.
        """
        self.openapi_types = {
            'buckets': List[TemplateSummarySummaryBucketsInner],
            'checks': List[TemplateSummarySummaryChecksInner],
            'dashboards': List[TemplateSummarySummaryDashboardsInner],
            'label_mappings': List[TemplateSummaryDiffLabelMappingsInner],
            'labels': List[TemplateSummaryLabel],
            'missing_env_refs': List[str],
            'missing_secrets': List[str],
            'notification_endpoints': List[TemplateSummarySummaryNotificationEndpointsInner],
            'notification_rules': List[TemplateSummarySummaryNotificationRulesInner],
            'tasks': List[TemplateSummarySummaryTasksInner],
            'telegraf_configs': List[TemplateSummarySummaryTelegrafConfigsInner],
            'variables': List[TemplateSummarySummaryVariablesInner]
        }

        self.attribute_map = {
            'buckets': 'buckets',
            'checks': 'checks',
            'dashboards': 'dashboards',
            'label_mappings': 'labelMappings',
            'labels': 'labels',
            'missing_env_refs': 'missingEnvRefs',
            'missing_secrets': 'missingSecrets',
            'notification_endpoints': 'notificationEndpoints',
            'notification_rules': 'notificationRules',
            'tasks': 'tasks',
            'telegraf_configs': 'telegrafConfigs',
            'variables': 'variables'
        }

        self._buckets = buckets
        self._checks = checks
        self._dashboards = dashboards
        self._label_mappings = label_mappings
        self._labels = labels
        self._missing_env_refs = missing_env_refs
        self._missing_secrets = missing_secrets
        self._notification_endpoints = notification_endpoints
        self._notification_rules = notification_rules
        self._tasks = tasks
        self._telegraf_configs = telegraf_configs
        self._variables = variables

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateSummarySummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateSummary_summary of this TemplateSummarySummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buckets(self):
        """Gets the buckets of this TemplateSummarySummary.


        :return: The buckets of this TemplateSummarySummary.
        :rtype: List[TemplateSummarySummaryBucketsInner]
        """
        return self._buckets

    @buckets.setter
    def buckets(self, buckets):
        """Sets the buckets of this TemplateSummarySummary.


        :param buckets: The buckets of this TemplateSummarySummary.
        :type buckets: List[TemplateSummarySummaryBucketsInner]
        """

        self._buckets = buckets

    @property
    def checks(self):
        """Gets the checks of this TemplateSummarySummary.


        :return: The checks of this TemplateSummarySummary.
        :rtype: List[TemplateSummarySummaryChecksInner]
        """
        return self._checks

    @checks.setter
    def checks(self, checks):
        """Sets the checks of this TemplateSummarySummary.


        :param checks: The checks of this TemplateSummarySummary.
        :type checks: List[TemplateSummarySummaryChecksInner]
        """

        self._checks = checks

    @property
    def dashboards(self):
        """Gets the dashboards of this TemplateSummarySummary.


        :return: The dashboards of this TemplateSummarySummary.
        :rtype: List[TemplateSummarySummaryDashboardsInner]
        """
        return self._dashboards

    @dashboards.setter
    def dashboards(self, dashboards):
        """Sets the dashboards of this TemplateSummarySummary.


        :param dashboards: The dashboards of this TemplateSummarySummary.
        :type dashboards: List[TemplateSummarySummaryDashboardsInner]
        """

        self._dashboards = dashboards

    @property
    def label_mappings(self):
        """Gets the label_mappings of this TemplateSummarySummary.


        :return: The label_mappings of this TemplateSummarySummary.
        :rtype: List[TemplateSummaryDiffLabelMappingsInner]
        """
        return self._label_mappings

    @label_mappings.setter
    def label_mappings(self, label_mappings):
        """Sets the label_mappings of this TemplateSummarySummary.


        :param label_mappings: The label_mappings of this TemplateSummarySummary.
        :type label_mappings: List[TemplateSummaryDiffLabelMappingsInner]
        """

        self._label_mappings = label_mappings

    @property
    def labels(self):
        """Gets the labels of this TemplateSummarySummary.


        :return: The labels of this TemplateSummarySummary.
        :rtype: List[TemplateSummaryLabel]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this TemplateSummarySummary.


        :param labels: The labels of this TemplateSummarySummary.
        :type labels: List[TemplateSummaryLabel]
        """

        self._labels = labels

    @property
    def missing_env_refs(self):
        """Gets the missing_env_refs of this TemplateSummarySummary.


        :return: The missing_env_refs of this TemplateSummarySummary.
        :rtype: List[str]
        """
        return self._missing_env_refs

    @missing_env_refs.setter
    def missing_env_refs(self, missing_env_refs):
        """Sets the missing_env_refs of this TemplateSummarySummary.


        :param missing_env_refs: The missing_env_refs of this TemplateSummarySummary.
        :type missing_env_refs: List[str]
        """

        self._missing_env_refs = missing_env_refs

    @property
    def missing_secrets(self):
        """Gets the missing_secrets of this TemplateSummarySummary.


        :return: The missing_secrets of this TemplateSummarySummary.
        :rtype: List[str]
        """
        return self._missing_secrets

    @missing_secrets.setter
    def missing_secrets(self, missing_secrets):
        """Sets the missing_secrets of this TemplateSummarySummary.


        :param missing_secrets: The missing_secrets of this TemplateSummarySummary.
        :type missing_secrets: List[str]
        """

        self._missing_secrets = missing_secrets

    @property
    def notification_endpoints(self):
        """Gets the notification_endpoints of this TemplateSummarySummary.


        :return: The notification_endpoints of this TemplateSummarySummary.
        :rtype: List[TemplateSummarySummaryNotificationEndpointsInner]
        """
        return self._notification_endpoints

    @notification_endpoints.setter
    def notification_endpoints(self, notification_endpoints):
        """Sets the notification_endpoints of this TemplateSummarySummary.


        :param notification_endpoints: The notification_endpoints of this TemplateSummarySummary.
        :type notification_endpoints: List[TemplateSummarySummaryNotificationEndpointsInner]
        """

        self._notification_endpoints = notification_endpoints

    @property
    def notification_rules(self):
        """Gets the notification_rules of this TemplateSummarySummary.


        :return: The notification_rules of this TemplateSummarySummary.
        :rtype: List[TemplateSummarySummaryNotificationRulesInner]
        """
        return self._notification_rules

    @notification_rules.setter
    def notification_rules(self, notification_rules):
        """Sets the notification_rules of this TemplateSummarySummary.


        :param notification_rules: The notification_rules of this TemplateSummarySummary.
        :type notification_rules: List[TemplateSummarySummaryNotificationRulesInner]
        """

        self._notification_rules = notification_rules

    @property
    def tasks(self):
        """Gets the tasks of this TemplateSummarySummary.


        :return: The tasks of this TemplateSummarySummary.
        :rtype: List[TemplateSummarySummaryTasksInner]
        """
        return self._tasks

    @tasks.setter
    def tasks(self, tasks):
        """Sets the tasks of this TemplateSummarySummary.


        :param tasks: The tasks of this TemplateSummarySummary.
        :type tasks: List[TemplateSummarySummaryTasksInner]
        """

        self._tasks = tasks

    @property
    def telegraf_configs(self):
        """Gets the telegraf_configs of this TemplateSummarySummary.


        :return: The telegraf_configs of this TemplateSummarySummary.
        :rtype: List[TemplateSummarySummaryTelegrafConfigsInner]
        """
        return self._telegraf_configs

    @telegraf_configs.setter
    def telegraf_configs(self, telegraf_configs):
        """Sets the telegraf_configs of this TemplateSummarySummary.


        :param telegraf_configs: The telegraf_configs of this TemplateSummarySummary.
        :type telegraf_configs: List[TemplateSummarySummaryTelegrafConfigsInner]
        """

        self._telegraf_configs = telegraf_configs

    @property
    def variables(self):
        """Gets the variables of this TemplateSummarySummary.


        :return: The variables of this TemplateSummarySummary.
        :rtype: List[TemplateSummarySummaryVariablesInner]
        """
        return self._variables

    @variables.setter
    def variables(self, variables):
        """Sets the variables of this TemplateSummarySummary.


        :param variables: The variables of this TemplateSummarySummary.
        :type variables: List[TemplateSummarySummaryVariablesInner]
        """

        self._variables = variables
