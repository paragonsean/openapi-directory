# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_declaration import ImportDeclaration
from openapi_server.models.package_clause import PackageClause
from openapi_server.models.statement import Statement
from openapi_server import util


class File(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: List[Statement]=None, imports: List[ImportDeclaration]=None, name: str=None, package: PackageClause=None, type: str=None):
        """File - a model defined in OpenAPI

        :param body: The body of this File.
        :param imports: The imports of this File.
        :param name: The name of this File.
        :param package: The package of this File.
        :param type: The type of this File.
        """
        self.openapi_types = {
            'body': List[Statement],
            'imports': List[ImportDeclaration],
            'name': str,
            'package': PackageClause,
            'type': str
        }

        self.attribute_map = {
            'body': 'body',
            'imports': 'imports',
            'name': 'name',
            'package': 'package',
            'type': 'type'
        }

        self._body = body
        self._imports = imports
        self._name = name
        self._package = package
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'File':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The File of this File.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this File.

        List of Flux statements

        :return: The body of this File.
        :rtype: List[Statement]
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this File.

        List of Flux statements

        :param body: The body of this File.
        :type body: List[Statement]
        """

        self._body = body

    @property
    def imports(self):
        """Gets the imports of this File.

        A list of package imports

        :return: The imports of this File.
        :rtype: List[ImportDeclaration]
        """
        return self._imports

    @imports.setter
    def imports(self, imports):
        """Sets the imports of this File.

        A list of package imports

        :param imports: The imports of this File.
        :type imports: List[ImportDeclaration]
        """

        self._imports = imports

    @property
    def name(self):
        """Gets the name of this File.

        The name of the file.

        :return: The name of this File.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this File.

        The name of the file.

        :param name: The name of this File.
        :type name: str
        """

        self._name = name

    @property
    def package(self):
        """Gets the package of this File.


        :return: The package of this File.
        :rtype: PackageClause
        """
        return self._package

    @package.setter
    def package(self, package):
        """Sets the package of this File.


        :param package: The package of this File.
        :type package: PackageClause
        """

        self._package = package

    @property
    def type(self):
        """Gets the type of this File.

        Type of AST node

        :return: The type of this File.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this File.

        Type of AST node

        :param type: The type of this File.
        :type type: str
        """

        self._type = type
