# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cell_links import CellLinks
from openapi_server import util


class Cell(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, h: int=None, id: str=None, links: CellLinks=None, view_id: str=None, w: int=None, x: int=None, y: int=None):
        """Cell - a model defined in OpenAPI

        :param h: The h of this Cell.
        :param id: The id of this Cell.
        :param links: The links of this Cell.
        :param view_id: The view_id of this Cell.
        :param w: The w of this Cell.
        :param x: The x of this Cell.
        :param y: The y of this Cell.
        """
        self.openapi_types = {
            'h': int,
            'id': str,
            'links': CellLinks,
            'view_id': str,
            'w': int,
            'x': int,
            'y': int
        }

        self.attribute_map = {
            'h': 'h',
            'id': 'id',
            'links': 'links',
            'view_id': 'viewID',
            'w': 'w',
            'x': 'x',
            'y': 'y'
        }

        self._h = h
        self._id = id
        self._links = links
        self._view_id = view_id
        self._w = w
        self._x = x
        self._y = y

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Cell':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cell of this Cell.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def h(self):
        """Gets the h of this Cell.


        :return: The h of this Cell.
        :rtype: int
        """
        return self._h

    @h.setter
    def h(self, h):
        """Sets the h of this Cell.


        :param h: The h of this Cell.
        :type h: int
        """

        self._h = h

    @property
    def id(self):
        """Gets the id of this Cell.


        :return: The id of this Cell.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Cell.


        :param id: The id of this Cell.
        :type id: str
        """

        self._id = id

    @property
    def links(self):
        """Gets the links of this Cell.


        :return: The links of this Cell.
        :rtype: CellLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Cell.


        :param links: The links of this Cell.
        :type links: CellLinks
        """

        self._links = links

    @property
    def view_id(self):
        """Gets the view_id of this Cell.

        The reference to a view from the views API.

        :return: The view_id of this Cell.
        :rtype: str
        """
        return self._view_id

    @view_id.setter
    def view_id(self, view_id):
        """Sets the view_id of this Cell.

        The reference to a view from the views API.

        :param view_id: The view_id of this Cell.
        :type view_id: str
        """

        self._view_id = view_id

    @property
    def w(self):
        """Gets the w of this Cell.


        :return: The w of this Cell.
        :rtype: int
        """
        return self._w

    @w.setter
    def w(self, w):
        """Sets the w of this Cell.


        :param w: The w of this Cell.
        :type w: int
        """

        self._w = w

    @property
    def x(self):
        """Gets the x of this Cell.


        :return: The x of this Cell.
        :rtype: int
        """
        return self._x

    @x.setter
    def x(self, x):
        """Sets the x of this Cell.


        :param x: The x of this Cell.
        :type x: int
        """

        self._x = x

    @property
    def y(self):
        """Gets the y of this Cell.


        :return: The y of this Cell.
        :rtype: int
        """
        return self._y

    @y.setter
    def y(self, y):
        """Sets the y of this Cell.


        :param y: The y of this Cell.
        :type y: int
        """

        self._y = y
