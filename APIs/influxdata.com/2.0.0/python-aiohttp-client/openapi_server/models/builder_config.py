# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.builder_config_aggregate_window import BuilderConfigAggregateWindow
from openapi_server.models.builder_functions_type import BuilderFunctionsType
from openapi_server.models.builder_tags_type import BuilderTagsType
from openapi_server import util


class BuilderConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregate_window: BuilderConfigAggregateWindow=None, buckets: List[str]=None, functions: List[BuilderFunctionsType]=None, tags: List[BuilderTagsType]=None):
        """BuilderConfig - a model defined in OpenAPI

        :param aggregate_window: The aggregate_window of this BuilderConfig.
        :param buckets: The buckets of this BuilderConfig.
        :param functions: The functions of this BuilderConfig.
        :param tags: The tags of this BuilderConfig.
        """
        self.openapi_types = {
            'aggregate_window': BuilderConfigAggregateWindow,
            'buckets': List[str],
            'functions': List[BuilderFunctionsType],
            'tags': List[BuilderTagsType]
        }

        self.attribute_map = {
            'aggregate_window': 'aggregateWindow',
            'buckets': 'buckets',
            'functions': 'functions',
            'tags': 'tags'
        }

        self._aggregate_window = aggregate_window
        self._buckets = buckets
        self._functions = functions
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuilderConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuilderConfig of this BuilderConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregate_window(self):
        """Gets the aggregate_window of this BuilderConfig.


        :return: The aggregate_window of this BuilderConfig.
        :rtype: BuilderConfigAggregateWindow
        """
        return self._aggregate_window

    @aggregate_window.setter
    def aggregate_window(self, aggregate_window):
        """Sets the aggregate_window of this BuilderConfig.


        :param aggregate_window: The aggregate_window of this BuilderConfig.
        :type aggregate_window: BuilderConfigAggregateWindow
        """

        self._aggregate_window = aggregate_window

    @property
    def buckets(self):
        """Gets the buckets of this BuilderConfig.


        :return: The buckets of this BuilderConfig.
        :rtype: List[str]
        """
        return self._buckets

    @buckets.setter
    def buckets(self, buckets):
        """Sets the buckets of this BuilderConfig.


        :param buckets: The buckets of this BuilderConfig.
        :type buckets: List[str]
        """

        self._buckets = buckets

    @property
    def functions(self):
        """Gets the functions of this BuilderConfig.


        :return: The functions of this BuilderConfig.
        :rtype: List[BuilderFunctionsType]
        """
        return self._functions

    @functions.setter
    def functions(self, functions):
        """Sets the functions of this BuilderConfig.


        :param functions: The functions of this BuilderConfig.
        :type functions: List[BuilderFunctionsType]
        """

        self._functions = functions

    @property
    def tags(self):
        """Gets the tags of this BuilderConfig.


        :return: The tags of this BuilderConfig.
        :rtype: List[BuilderTagsType]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this BuilderConfig.


        :param tags: The tags of this BuilderConfig.
        :type tags: List[BuilderTagsType]
        """

        self._tags = tags
