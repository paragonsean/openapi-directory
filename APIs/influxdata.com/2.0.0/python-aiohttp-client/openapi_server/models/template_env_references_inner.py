# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.template_env_references_inner_default_value import TemplateEnvReferencesInnerDefaultValue
from openapi_server.models.template_env_references_inner_value import TemplateEnvReferencesInnerValue
from openapi_server import util


class TemplateEnvReferencesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_value: TemplateEnvReferencesInnerDefaultValue=None, env_ref_key: str=None, resource_field: str=None, value: TemplateEnvReferencesInnerValue=None):
        """TemplateEnvReferencesInner - a model defined in OpenAPI

        :param default_value: The default_value of this TemplateEnvReferencesInner.
        :param env_ref_key: The env_ref_key of this TemplateEnvReferencesInner.
        :param resource_field: The resource_field of this TemplateEnvReferencesInner.
        :param value: The value of this TemplateEnvReferencesInner.
        """
        self.openapi_types = {
            'default_value': TemplateEnvReferencesInnerDefaultValue,
            'env_ref_key': str,
            'resource_field': str,
            'value': TemplateEnvReferencesInnerValue
        }

        self.attribute_map = {
            'default_value': 'defaultValue',
            'env_ref_key': 'envRefKey',
            'resource_field': 'resourceField',
            'value': 'value'
        }

        self._default_value = default_value
        self._env_ref_key = env_ref_key
        self._resource_field = resource_field
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateEnvReferencesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateEnvReferences_inner of this TemplateEnvReferencesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_value(self):
        """Gets the default_value of this TemplateEnvReferencesInner.


        :return: The default_value of this TemplateEnvReferencesInner.
        :rtype: TemplateEnvReferencesInnerDefaultValue
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this TemplateEnvReferencesInner.


        :param default_value: The default_value of this TemplateEnvReferencesInner.
        :type default_value: TemplateEnvReferencesInnerDefaultValue
        """

        self._default_value = default_value

    @property
    def env_ref_key(self):
        """Gets the env_ref_key of this TemplateEnvReferencesInner.

        Key identified as environment reference and is the key identified in the template

        :return: The env_ref_key of this TemplateEnvReferencesInner.
        :rtype: str
        """
        return self._env_ref_key

    @env_ref_key.setter
    def env_ref_key(self, env_ref_key):
        """Sets the env_ref_key of this TemplateEnvReferencesInner.

        Key identified as environment reference and is the key identified in the template

        :param env_ref_key: The env_ref_key of this TemplateEnvReferencesInner.
        :type env_ref_key: str
        """
        if env_ref_key is None:
            raise ValueError("Invalid value for `env_ref_key`, must not be `None`")

        self._env_ref_key = env_ref_key

    @property
    def resource_field(self):
        """Gets the resource_field of this TemplateEnvReferencesInner.

        Field the environment reference corresponds too

        :return: The resource_field of this TemplateEnvReferencesInner.
        :rtype: str
        """
        return self._resource_field

    @resource_field.setter
    def resource_field(self, resource_field):
        """Sets the resource_field of this TemplateEnvReferencesInner.

        Field the environment reference corresponds too

        :param resource_field: The resource_field of this TemplateEnvReferencesInner.
        :type resource_field: str
        """
        if resource_field is None:
            raise ValueError("Invalid value for `resource_field`, must not be `None`")

        self._resource_field = resource_field

    @property
    def value(self):
        """Gets the value of this TemplateEnvReferencesInner.


        :return: The value of this TemplateEnvReferencesInner.
        :rtype: TemplateEnvReferencesInnerValue
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this TemplateEnvReferencesInner.


        :param value: The value of this TemplateEnvReferencesInner.
        :type value: TemplateEnvReferencesInnerValue
        """

        self._value = value
