# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.telegraf_plugin import TelegrafPlugin
from openapi_server import util


class TelegrafPlugins(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, os: str=None, plugins: List[TelegrafPlugin]=None, version: str=None):
        """TelegrafPlugins - a model defined in OpenAPI

        :param os: The os of this TelegrafPlugins.
        :param plugins: The plugins of this TelegrafPlugins.
        :param version: The version of this TelegrafPlugins.
        """
        self.openapi_types = {
            'os': str,
            'plugins': List[TelegrafPlugin],
            'version': str
        }

        self.attribute_map = {
            'os': 'os',
            'plugins': 'plugins',
            'version': 'version'
        }

        self._os = os
        self._plugins = plugins
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TelegrafPlugins':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TelegrafPlugins of this TelegrafPlugins.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def os(self):
        """Gets the os of this TelegrafPlugins.


        :return: The os of this TelegrafPlugins.
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this TelegrafPlugins.


        :param os: The os of this TelegrafPlugins.
        :type os: str
        """

        self._os = os

    @property
    def plugins(self):
        """Gets the plugins of this TelegrafPlugins.


        :return: The plugins of this TelegrafPlugins.
        :rtype: List[TelegrafPlugin]
        """
        return self._plugins

    @plugins.setter
    def plugins(self, plugins):
        """Sets the plugins of this TelegrafPlugins.


        :param plugins: The plugins of this TelegrafPlugins.
        :type plugins: List[TelegrafPlugin]
        """

        self._plugins = plugins

    @property
    def version(self):
        """Gets the version of this TelegrafPlugins.


        :return: The version of this TelegrafPlugins.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this TelegrafPlugins.


        :param version: The version of this TelegrafPlugins.
        :type version: str
        """

        self._version = version
