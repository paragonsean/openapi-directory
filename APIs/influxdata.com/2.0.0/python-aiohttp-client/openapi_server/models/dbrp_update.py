# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links import Links
from openapi_server import util


class DBRPUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database: str=None, default: bool=None, links: Links=None, retention_policy: str=None):
        """DBRPUpdate - a model defined in OpenAPI

        :param database: The database of this DBRPUpdate.
        :param default: The default of this DBRPUpdate.
        :param links: The links of this DBRPUpdate.
        :param retention_policy: The retention_policy of this DBRPUpdate.
        """
        self.openapi_types = {
            'database': str,
            'default': bool,
            'links': Links,
            'retention_policy': str
        }

        self.attribute_map = {
            'database': 'database',
            'default': 'default',
            'links': 'links',
            'retention_policy': 'retention_policy'
        }

        self._database = database
        self._default = default
        self._links = links
        self._retention_policy = retention_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DBRPUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DBRPUpdate of this DBRPUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database(self):
        """Gets the database of this DBRPUpdate.

        InfluxDB v1 database

        :return: The database of this DBRPUpdate.
        :rtype: str
        """
        return self._database

    @database.setter
    def database(self, database):
        """Sets the database of this DBRPUpdate.

        InfluxDB v1 database

        :param database: The database of this DBRPUpdate.
        :type database: str
        """

        self._database = database

    @property
    def default(self):
        """Gets the default of this DBRPUpdate.


        :return: The default of this DBRPUpdate.
        :rtype: bool
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this DBRPUpdate.


        :param default: The default of this DBRPUpdate.
        :type default: bool
        """

        self._default = default

    @property
    def links(self):
        """Gets the links of this DBRPUpdate.


        :return: The links of this DBRPUpdate.
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this DBRPUpdate.


        :param links: The links of this DBRPUpdate.
        :type links: Links
        """

        self._links = links

    @property
    def retention_policy(self):
        """Gets the retention_policy of this DBRPUpdate.

        InfluxDB v1 retention policy

        :return: The retention_policy of this DBRPUpdate.
        :rtype: str
        """
        return self._retention_policy

    @retention_policy.setter
    def retention_policy(self, retention_policy):
        """Sets the retention_policy of this DBRPUpdate.

        InfluxDB v1 retention policy

        :param retention_policy: The retention_policy of this DBRPUpdate.
        :type retention_policy: str
        """

        self._retention_policy = retention_policy
