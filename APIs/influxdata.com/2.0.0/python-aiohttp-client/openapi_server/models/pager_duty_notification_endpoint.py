# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label import Label
from openapi_server.models.notification_endpoint_base_links import NotificationEndpointBaseLinks
from openapi_server.models.notification_endpoint_type import NotificationEndpointType
from openapi_server import util


class PagerDutyNotificationEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, description: str=None, id: str=None, labels: List[Label]=None, links: NotificationEndpointBaseLinks=None, name: str=None, org_id: str=None, status: str='active', type: NotificationEndpointType=None, updated_at: datetime=None, user_id: str=None, client_url: str=None, routing_key: str=None):
        """PagerDutyNotificationEndpoint - a model defined in OpenAPI

        :param created_at: The created_at of this PagerDutyNotificationEndpoint.
        :param description: The description of this PagerDutyNotificationEndpoint.
        :param id: The id of this PagerDutyNotificationEndpoint.
        :param labels: The labels of this PagerDutyNotificationEndpoint.
        :param links: The links of this PagerDutyNotificationEndpoint.
        :param name: The name of this PagerDutyNotificationEndpoint.
        :param org_id: The org_id of this PagerDutyNotificationEndpoint.
        :param status: The status of this PagerDutyNotificationEndpoint.
        :param type: The type of this PagerDutyNotificationEndpoint.
        :param updated_at: The updated_at of this PagerDutyNotificationEndpoint.
        :param user_id: The user_id of this PagerDutyNotificationEndpoint.
        :param client_url: The client_url of this PagerDutyNotificationEndpoint.
        :param routing_key: The routing_key of this PagerDutyNotificationEndpoint.
        """
        self.openapi_types = {
            'created_at': datetime,
            'description': str,
            'id': str,
            'labels': List[Label],
            'links': NotificationEndpointBaseLinks,
            'name': str,
            'org_id': str,
            'status': str,
            'type': NotificationEndpointType,
            'updated_at': datetime,
            'user_id': str,
            'client_url': str,
            'routing_key': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'description': 'description',
            'id': 'id',
            'labels': 'labels',
            'links': 'links',
            'name': 'name',
            'org_id': 'orgID',
            'status': 'status',
            'type': 'type',
            'updated_at': 'updatedAt',
            'user_id': 'userID',
            'client_url': 'clientURL',
            'routing_key': 'routingKey'
        }

        self._created_at = created_at
        self._description = description
        self._id = id
        self._labels = labels
        self._links = links
        self._name = name
        self._org_id = org_id
        self._status = status
        self._type = type
        self._updated_at = updated_at
        self._user_id = user_id
        self._client_url = client_url
        self._routing_key = routing_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PagerDutyNotificationEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PagerDutyNotificationEndpoint of this PagerDutyNotificationEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this PagerDutyNotificationEndpoint.


        :return: The created_at of this PagerDutyNotificationEndpoint.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PagerDutyNotificationEndpoint.


        :param created_at: The created_at of this PagerDutyNotificationEndpoint.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this PagerDutyNotificationEndpoint.

        An optional description of the notification endpoint.

        :return: The description of this PagerDutyNotificationEndpoint.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PagerDutyNotificationEndpoint.

        An optional description of the notification endpoint.

        :param description: The description of this PagerDutyNotificationEndpoint.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this PagerDutyNotificationEndpoint.


        :return: The id of this PagerDutyNotificationEndpoint.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PagerDutyNotificationEndpoint.


        :param id: The id of this PagerDutyNotificationEndpoint.
        :type id: str
        """

        self._id = id

    @property
    def labels(self):
        """Gets the labels of this PagerDutyNotificationEndpoint.


        :return: The labels of this PagerDutyNotificationEndpoint.
        :rtype: List[Label]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this PagerDutyNotificationEndpoint.


        :param labels: The labels of this PagerDutyNotificationEndpoint.
        :type labels: List[Label]
        """

        self._labels = labels

    @property
    def links(self):
        """Gets the links of this PagerDutyNotificationEndpoint.


        :return: The links of this PagerDutyNotificationEndpoint.
        :rtype: NotificationEndpointBaseLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this PagerDutyNotificationEndpoint.


        :param links: The links of this PagerDutyNotificationEndpoint.
        :type links: NotificationEndpointBaseLinks
        """

        self._links = links

    @property
    def name(self):
        """Gets the name of this PagerDutyNotificationEndpoint.


        :return: The name of this PagerDutyNotificationEndpoint.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PagerDutyNotificationEndpoint.


        :param name: The name of this PagerDutyNotificationEndpoint.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def org_id(self):
        """Gets the org_id of this PagerDutyNotificationEndpoint.


        :return: The org_id of this PagerDutyNotificationEndpoint.
        :rtype: str
        """
        return self._org_id

    @org_id.setter
    def org_id(self, org_id):
        """Sets the org_id of this PagerDutyNotificationEndpoint.


        :param org_id: The org_id of this PagerDutyNotificationEndpoint.
        :type org_id: str
        """

        self._org_id = org_id

    @property
    def status(self):
        """Gets the status of this PagerDutyNotificationEndpoint.

        The status of the endpoint.

        :return: The status of this PagerDutyNotificationEndpoint.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PagerDutyNotificationEndpoint.

        The status of the endpoint.

        :param status: The status of this PagerDutyNotificationEndpoint.
        :type status: str
        """
        allowed_values = ["active", "inactive"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def type(self):
        """Gets the type of this PagerDutyNotificationEndpoint.


        :return: The type of this PagerDutyNotificationEndpoint.
        :rtype: NotificationEndpointType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PagerDutyNotificationEndpoint.


        :param type: The type of this PagerDutyNotificationEndpoint.
        :type type: NotificationEndpointType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this PagerDutyNotificationEndpoint.


        :return: The updated_at of this PagerDutyNotificationEndpoint.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PagerDutyNotificationEndpoint.


        :param updated_at: The updated_at of this PagerDutyNotificationEndpoint.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def user_id(self):
        """Gets the user_id of this PagerDutyNotificationEndpoint.


        :return: The user_id of this PagerDutyNotificationEndpoint.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this PagerDutyNotificationEndpoint.


        :param user_id: The user_id of this PagerDutyNotificationEndpoint.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def client_url(self):
        """Gets the client_url of this PagerDutyNotificationEndpoint.


        :return: The client_url of this PagerDutyNotificationEndpoint.
        :rtype: str
        """
        return self._client_url

    @client_url.setter
    def client_url(self, client_url):
        """Sets the client_url of this PagerDutyNotificationEndpoint.


        :param client_url: The client_url of this PagerDutyNotificationEndpoint.
        :type client_url: str
        """

        self._client_url = client_url

    @property
    def routing_key(self):
        """Gets the routing_key of this PagerDutyNotificationEndpoint.


        :return: The routing_key of this PagerDutyNotificationEndpoint.
        :rtype: str
        """
        return self._routing_key

    @routing_key.setter
    def routing_key(self, routing_key):
        """Sets the routing_key of this PagerDutyNotificationEndpoint.


        :param routing_key: The routing_key of this PagerDutyNotificationEndpoint.
        :type routing_key: str
        """
        if routing_key is None:
            raise ValueError("Invalid value for `routing_key`, must not be `None`")

        self._routing_key = routing_key
