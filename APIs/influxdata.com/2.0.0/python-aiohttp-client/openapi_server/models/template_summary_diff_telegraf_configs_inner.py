# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.telegraf_request import TelegrafRequest
from openapi_server.models.template_kind import TemplateKind
from openapi_server import util


class TemplateSummaryDiffTelegrafConfigsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, kind: TemplateKind=None, new: TelegrafRequest=None, old: TelegrafRequest=None, state_status: str=None, template_meta_name: str=None):
        """TemplateSummaryDiffTelegrafConfigsInner - a model defined in OpenAPI

        :param id: The id of this TemplateSummaryDiffTelegrafConfigsInner.
        :param kind: The kind of this TemplateSummaryDiffTelegrafConfigsInner.
        :param new: The new of this TemplateSummaryDiffTelegrafConfigsInner.
        :param old: The old of this TemplateSummaryDiffTelegrafConfigsInner.
        :param state_status: The state_status of this TemplateSummaryDiffTelegrafConfigsInner.
        :param template_meta_name: The template_meta_name of this TemplateSummaryDiffTelegrafConfigsInner.
        """
        self.openapi_types = {
            'id': str,
            'kind': TemplateKind,
            'new': TelegrafRequest,
            'old': TelegrafRequest,
            'state_status': str,
            'template_meta_name': str
        }

        self.attribute_map = {
            'id': 'id',
            'kind': 'kind',
            'new': 'new',
            'old': 'old',
            'state_status': 'stateStatus',
            'template_meta_name': 'templateMetaName'
        }

        self._id = id
        self._kind = kind
        self._new = new
        self._old = old
        self._state_status = state_status
        self._template_meta_name = template_meta_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateSummaryDiffTelegrafConfigsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateSummary_diff_telegrafConfigs_inner of this TemplateSummaryDiffTelegrafConfigsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this TemplateSummaryDiffTelegrafConfigsInner.


        :return: The id of this TemplateSummaryDiffTelegrafConfigsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TemplateSummaryDiffTelegrafConfigsInner.


        :param id: The id of this TemplateSummaryDiffTelegrafConfigsInner.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this TemplateSummaryDiffTelegrafConfigsInner.


        :return: The kind of this TemplateSummaryDiffTelegrafConfigsInner.
        :rtype: TemplateKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TemplateSummaryDiffTelegrafConfigsInner.


        :param kind: The kind of this TemplateSummaryDiffTelegrafConfigsInner.
        :type kind: TemplateKind
        """

        self._kind = kind

    @property
    def new(self):
        """Gets the new of this TemplateSummaryDiffTelegrafConfigsInner.


        :return: The new of this TemplateSummaryDiffTelegrafConfigsInner.
        :rtype: TelegrafRequest
        """
        return self._new

    @new.setter
    def new(self, new):
        """Sets the new of this TemplateSummaryDiffTelegrafConfigsInner.


        :param new: The new of this TemplateSummaryDiffTelegrafConfigsInner.
        :type new: TelegrafRequest
        """

        self._new = new

    @property
    def old(self):
        """Gets the old of this TemplateSummaryDiffTelegrafConfigsInner.


        :return: The old of this TemplateSummaryDiffTelegrafConfigsInner.
        :rtype: TelegrafRequest
        """
        return self._old

    @old.setter
    def old(self, old):
        """Sets the old of this TemplateSummaryDiffTelegrafConfigsInner.


        :param old: The old of this TemplateSummaryDiffTelegrafConfigsInner.
        :type old: TelegrafRequest
        """

        self._old = old

    @property
    def state_status(self):
        """Gets the state_status of this TemplateSummaryDiffTelegrafConfigsInner.


        :return: The state_status of this TemplateSummaryDiffTelegrafConfigsInner.
        :rtype: str
        """
        return self._state_status

    @state_status.setter
    def state_status(self, state_status):
        """Sets the state_status of this TemplateSummaryDiffTelegrafConfigsInner.


        :param state_status: The state_status of this TemplateSummaryDiffTelegrafConfigsInner.
        :type state_status: str
        """

        self._state_status = state_status

    @property
    def template_meta_name(self):
        """Gets the template_meta_name of this TemplateSummaryDiffTelegrafConfigsInner.


        :return: The template_meta_name of this TemplateSummaryDiffTelegrafConfigsInner.
        :rtype: str
        """
        return self._template_meta_name

    @template_meta_name.setter
    def template_meta_name(self, template_meta_name):
        """Sets the template_meta_name of this TemplateSummaryDiffTelegrafConfigsInner.


        :param template_meta_name: The template_meta_name of this TemplateSummaryDiffTelegrafConfigsInner.
        :type template_meta_name: str
        """

        self._template_meta_name = template_meta_name
