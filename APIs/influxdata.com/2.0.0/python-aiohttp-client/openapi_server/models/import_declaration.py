# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.identifier import Identifier
from openapi_server.models.string_literal import StringLiteral
from openapi_server import util


class ImportDeclaration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _as: Identifier=None, path: StringLiteral=None, type: str=None):
        """ImportDeclaration - a model defined in OpenAPI

        :param _as: The _as of this ImportDeclaration.
        :param path: The path of this ImportDeclaration.
        :param type: The type of this ImportDeclaration.
        """
        self.openapi_types = {
            '_as': Identifier,
            'path': StringLiteral,
            'type': str
        }

        self.attribute_map = {
            '_as': 'as',
            'path': 'path',
            'type': 'type'
        }

        self.__as = _as
        self._path = path
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportDeclaration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportDeclaration of this ImportDeclaration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _as(self):
        """Gets the _as of this ImportDeclaration.


        :return: The _as of this ImportDeclaration.
        :rtype: Identifier
        """
        return self.__as

    @_as.setter
    def _as(self, _as):
        """Sets the _as of this ImportDeclaration.


        :param _as: The _as of this ImportDeclaration.
        :type _as: Identifier
        """

        self.__as = _as

    @property
    def path(self):
        """Gets the path of this ImportDeclaration.


        :return: The path of this ImportDeclaration.
        :rtype: StringLiteral
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ImportDeclaration.


        :param path: The path of this ImportDeclaration.
        :type path: StringLiteral
        """

        self._path = path

    @property
    def type(self):
        """Gets the type of this ImportDeclaration.

        Type of AST node

        :return: The type of this ImportDeclaration.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ImportDeclaration.

        Type of AST node

        :param type: The type of this ImportDeclaration.
        :type type: str
        """

        self._type = type
