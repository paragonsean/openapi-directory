# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PatchStackRequestAdditionalResourcesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, resource_id: str=None, template_meta_name: str=None):
        """PatchStackRequestAdditionalResourcesInner - a model defined in OpenAPI

        :param kind: The kind of this PatchStackRequestAdditionalResourcesInner.
        :param resource_id: The resource_id of this PatchStackRequestAdditionalResourcesInner.
        :param template_meta_name: The template_meta_name of this PatchStackRequestAdditionalResourcesInner.
        """
        self.openapi_types = {
            'kind': str,
            'resource_id': str,
            'template_meta_name': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'resource_id': 'resourceID',
            'template_meta_name': 'templateMetaName'
        }

        self._kind = kind
        self._resource_id = resource_id
        self._template_meta_name = template_meta_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchStackRequestAdditionalResourcesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatchStackRequest_additionalResources_inner of this PatchStackRequestAdditionalResourcesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this PatchStackRequestAdditionalResourcesInner.


        :return: The kind of this PatchStackRequestAdditionalResourcesInner.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PatchStackRequestAdditionalResourcesInner.


        :param kind: The kind of this PatchStackRequestAdditionalResourcesInner.
        :type kind: str
        """
        if kind is None:
            raise ValueError("Invalid value for `kind`, must not be `None`")

        self._kind = kind

    @property
    def resource_id(self):
        """Gets the resource_id of this PatchStackRequestAdditionalResourcesInner.


        :return: The resource_id of this PatchStackRequestAdditionalResourcesInner.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this PatchStackRequestAdditionalResourcesInner.


        :param resource_id: The resource_id of this PatchStackRequestAdditionalResourcesInner.
        :type resource_id: str
        """
        if resource_id is None:
            raise ValueError("Invalid value for `resource_id`, must not be `None`")

        self._resource_id = resource_id

    @property
    def template_meta_name(self):
        """Gets the template_meta_name of this PatchStackRequestAdditionalResourcesInner.


        :return: The template_meta_name of this PatchStackRequestAdditionalResourcesInner.
        :rtype: str
        """
        return self._template_meta_name

    @template_meta_name.setter
    def template_meta_name(self, template_meta_name):
        """Sets the template_meta_name of this PatchStackRequestAdditionalResourcesInner.


        :param template_meta_name: The template_meta_name of this PatchStackRequestAdditionalResourcesInner.
        :type template_meta_name: str
        """

        self._template_meta_name = template_meta_name
