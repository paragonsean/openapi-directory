# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TemplateKind(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    BUCKET = 'Bucket'
    CHECK = 'Check'
    CHECKDEADMAN = 'CheckDeadman'
    CHECKTHRESHOLD = 'CheckThreshold'
    DASHBOARD = 'Dashboard'
    LABEL = 'Label'
    NOTIFICATIONENDPOINT = 'NotificationEndpoint'
    NOTIFICATIONENDPOINTHTTP = 'NotificationEndpointHTTP'
    NOTIFICATIONENDPOINTPAGERDUTY = 'NotificationEndpointPagerDuty'
    NOTIFICATIONENDPOINTSLACK = 'NotificationEndpointSlack'
    NOTIFICATIONRULE = 'NotificationRule'
    TASK = 'Task'
    TELEGRAF = 'Telegraf'
    VARIABLE = 'Variable'

    def __init__(self):
        """TemplateKind - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateKind':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateKind of this TemplateKind.
        """
        return util.deserialize_model(dikt, cls)
