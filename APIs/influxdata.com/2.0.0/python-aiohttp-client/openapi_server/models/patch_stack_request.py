# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.patch_stack_request_additional_resources_inner import PatchStackRequestAdditionalResourcesInner
from openapi_server import util


class PatchStackRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_resources: List[PatchStackRequestAdditionalResourcesInner]=None, description: str=None, name: str=None, template_urls: List[str]=None):
        """PatchStackRequest - a model defined in OpenAPI

        :param additional_resources: The additional_resources of this PatchStackRequest.
        :param description: The description of this PatchStackRequest.
        :param name: The name of this PatchStackRequest.
        :param template_urls: The template_urls of this PatchStackRequest.
        """
        self.openapi_types = {
            'additional_resources': List[PatchStackRequestAdditionalResourcesInner],
            'description': str,
            'name': str,
            'template_urls': List[str]
        }

        self.attribute_map = {
            'additional_resources': 'additionalResources',
            'description': 'description',
            'name': 'name',
            'template_urls': 'templateURLs'
        }

        self._additional_resources = additional_resources
        self._description = description
        self._name = name
        self._template_urls = template_urls

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchStackRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatchStackRequest of this PatchStackRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_resources(self):
        """Gets the additional_resources of this PatchStackRequest.


        :return: The additional_resources of this PatchStackRequest.
        :rtype: List[PatchStackRequestAdditionalResourcesInner]
        """
        return self._additional_resources

    @additional_resources.setter
    def additional_resources(self, additional_resources):
        """Sets the additional_resources of this PatchStackRequest.


        :param additional_resources: The additional_resources of this PatchStackRequest.
        :type additional_resources: List[PatchStackRequestAdditionalResourcesInner]
        """

        self._additional_resources = additional_resources

    @property
    def description(self):
        """Gets the description of this PatchStackRequest.


        :return: The description of this PatchStackRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PatchStackRequest.


        :param description: The description of this PatchStackRequest.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this PatchStackRequest.


        :return: The name of this PatchStackRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PatchStackRequest.


        :param name: The name of this PatchStackRequest.
        :type name: str
        """

        self._name = name

    @property
    def template_urls(self):
        """Gets the template_urls of this PatchStackRequest.


        :return: The template_urls of this PatchStackRequest.
        :rtype: List[str]
        """
        return self._template_urls

    @template_urls.setter
    def template_urls(self, template_urls):
        """Sets the template_urls of this PatchStackRequest.


        :param template_urls: The template_urls of this PatchStackRequest.
        :type template_urls: List[str]
        """

        self._template_urls = template_urls
