# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stack_events_inner import StackEventsInner
from openapi_server import util


class Stack(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, events: List[StackEventsInner]=None, id: str=None, org_id: str=None):
        """Stack - a model defined in OpenAPI

        :param created_at: The created_at of this Stack.
        :param events: The events of this Stack.
        :param id: The id of this Stack.
        :param org_id: The org_id of this Stack.
        """
        self.openapi_types = {
            'created_at': datetime,
            'events': List[StackEventsInner],
            'id': str,
            'org_id': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'events': 'events',
            'id': 'id',
            'org_id': 'orgID'
        }

        self._created_at = created_at
        self._events = events
        self._id = id
        self._org_id = org_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Stack':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stack of this Stack.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Stack.


        :return: The created_at of this Stack.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Stack.


        :param created_at: The created_at of this Stack.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def events(self):
        """Gets the events of this Stack.


        :return: The events of this Stack.
        :rtype: List[StackEventsInner]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this Stack.


        :param events: The events of this Stack.
        :type events: List[StackEventsInner]
        """

        self._events = events

    @property
    def id(self):
        """Gets the id of this Stack.


        :return: The id of this Stack.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Stack.


        :param id: The id of this Stack.
        :type id: str
        """

        self._id = id

    @property
    def org_id(self):
        """Gets the org_id of this Stack.


        :return: The org_id of this Stack.
        :rtype: str
        """
        return self._org_id

    @org_id.setter
    def org_id(self, org_id):
        """Sets the org_id of this Stack.


        :param org_id: The org_id of this Stack.
        :type org_id: str
        """

        self._org_id = org_id
