# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuthorizationAllOfLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _self: str=None, user: str=None):
        """AuthorizationAllOfLinks - a model defined in OpenAPI

        :param _self: The _self of this AuthorizationAllOfLinks.
        :param user: The user of this AuthorizationAllOfLinks.
        """
        self.openapi_types = {
            '_self': str,
            'user': str
        }

        self.attribute_map = {
            '_self': 'self',
            'user': 'user'
        }

        self.__self = _self
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthorizationAllOfLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Authorization_allOf_links of this AuthorizationAllOfLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _self(self):
        """Gets the _self of this AuthorizationAllOfLinks.

        URI of resource.

        :return: The _self of this AuthorizationAllOfLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this AuthorizationAllOfLinks.

        URI of resource.

        :param _self: The _self of this AuthorizationAllOfLinks.
        :type _self: str
        """

        self.__self = _self

    @property
    def user(self):
        """Gets the user of this AuthorizationAllOfLinks.

        URI of resource.

        :return: The user of this AuthorizationAllOfLinks.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this AuthorizationAllOfLinks.

        URI of resource.

        :param user: The user of this AuthorizationAllOfLinks.
        :type user: str
        """

        self._user = user
