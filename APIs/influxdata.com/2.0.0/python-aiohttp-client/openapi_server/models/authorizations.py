# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authorization import Authorization
from openapi_server.models.links import Links
from openapi_server import util


class Authorizations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorizations: List[Authorization]=None, links: Links=None):
        """Authorizations - a model defined in OpenAPI

        :param authorizations: The authorizations of this Authorizations.
        :param links: The links of this Authorizations.
        """
        self.openapi_types = {
            'authorizations': List[Authorization],
            'links': Links
        }

        self.attribute_map = {
            'authorizations': 'authorizations',
            'links': 'links'
        }

        self._authorizations = authorizations
        self._links = links

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Authorizations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Authorizations of this Authorizations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorizations(self):
        """Gets the authorizations of this Authorizations.


        :return: The authorizations of this Authorizations.
        :rtype: List[Authorization]
        """
        return self._authorizations

    @authorizations.setter
    def authorizations(self, authorizations):
        """Sets the authorizations of this Authorizations.


        :param authorizations: The authorizations of this Authorizations.
        :type authorizations: List[Authorization]
        """

        self._authorizations = authorizations

    @property
    def links(self):
        """Gets the links of this Authorizations.


        :return: The links of this Authorizations.
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Authorizations.


        :param links: The links of this Authorizations.
        :type links: Links
        """

        self._links = links
