# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expression import Expression
from openapi_server.models.member_expression import MemberExpression
from openapi_server import util


class MemberAssignment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, init: Expression=None, member: MemberExpression=None, type: str=None):
        """MemberAssignment - a model defined in OpenAPI

        :param init: The init of this MemberAssignment.
        :param member: The member of this MemberAssignment.
        :param type: The type of this MemberAssignment.
        """
        self.openapi_types = {
            'init': Expression,
            'member': MemberExpression,
            'type': str
        }

        self.attribute_map = {
            'init': 'init',
            'member': 'member',
            'type': 'type'
        }

        self._init = init
        self._member = member
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberAssignment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MemberAssignment of this MemberAssignment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def init(self):
        """Gets the init of this MemberAssignment.


        :return: The init of this MemberAssignment.
        :rtype: Expression
        """
        return self._init

    @init.setter
    def init(self, init):
        """Sets the init of this MemberAssignment.


        :param init: The init of this MemberAssignment.
        :type init: Expression
        """

        self._init = init

    @property
    def member(self):
        """Gets the member of this MemberAssignment.


        :return: The member of this MemberAssignment.
        :rtype: MemberExpression
        """
        return self._member

    @member.setter
    def member(self, member):
        """Sets the member of this MemberAssignment.


        :param member: The member of this MemberAssignment.
        :type member: MemberExpression
        """

        self._member = member

    @property
    def type(self):
        """Gets the type of this MemberAssignment.

        Type of AST node

        :return: The type of this MemberAssignment.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MemberAssignment.

        Type of AST node

        :param type: The type of this MemberAssignment.
        :type type: str
        """

        self._type = type
