# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.template_inner import TemplateInner
from openapi_server import util


class TemplateApplyTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_type: str=None, contents: List[TemplateInner]=None, sources: List[str]=None):
        """TemplateApplyTemplate - a model defined in OpenAPI

        :param content_type: The content_type of this TemplateApplyTemplate.
        :param contents: The contents of this TemplateApplyTemplate.
        :param sources: The sources of this TemplateApplyTemplate.
        """
        self.openapi_types = {
            'content_type': str,
            'contents': List[TemplateInner],
            'sources': List[str]
        }

        self.attribute_map = {
            'content_type': 'contentType',
            'contents': 'contents',
            'sources': 'sources'
        }

        self._content_type = content_type
        self._contents = contents
        self._sources = sources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateApplyTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateApply_template of this TemplateApplyTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_type(self):
        """Gets the content_type of this TemplateApplyTemplate.


        :return: The content_type of this TemplateApplyTemplate.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this TemplateApplyTemplate.


        :param content_type: The content_type of this TemplateApplyTemplate.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def contents(self):
        """Gets the contents of this TemplateApplyTemplate.


        :return: The contents of this TemplateApplyTemplate.
        :rtype: List[TemplateInner]
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this TemplateApplyTemplate.


        :param contents: The contents of this TemplateApplyTemplate.
        :type contents: List[TemplateInner]
        """

        self._contents = contents

    @property
    def sources(self):
        """Gets the sources of this TemplateApplyTemplate.


        :return: The sources of this TemplateApplyTemplate.
        :rtype: List[str]
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this TemplateApplyTemplate.


        :param sources: The sources of this TemplateApplyTemplate.
        :type sources: List[str]
        """

        self._sources = sources
