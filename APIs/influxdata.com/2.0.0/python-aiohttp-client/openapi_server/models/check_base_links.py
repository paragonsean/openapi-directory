# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CheckBaseLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, labels: str=None, members: str=None, owners: str=None, query: str=None, _self: str=None):
        """CheckBaseLinks - a model defined in OpenAPI

        :param labels: The labels of this CheckBaseLinks.
        :param members: The members of this CheckBaseLinks.
        :param owners: The owners of this CheckBaseLinks.
        :param query: The query of this CheckBaseLinks.
        :param _self: The _self of this CheckBaseLinks.
        """
        self.openapi_types = {
            'labels': str,
            'members': str,
            'owners': str,
            'query': str,
            '_self': str
        }

        self.attribute_map = {
            'labels': 'labels',
            'members': 'members',
            'owners': 'owners',
            'query': 'query',
            '_self': 'self'
        }

        self._labels = labels
        self._members = members
        self._owners = owners
        self._query = query
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckBaseLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckBase_links of this CheckBaseLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def labels(self):
        """Gets the labels of this CheckBaseLinks.

        URI of resource.

        :return: The labels of this CheckBaseLinks.
        :rtype: str
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this CheckBaseLinks.

        URI of resource.

        :param labels: The labels of this CheckBaseLinks.
        :type labels: str
        """

        self._labels = labels

    @property
    def members(self):
        """Gets the members of this CheckBaseLinks.

        URI of resource.

        :return: The members of this CheckBaseLinks.
        :rtype: str
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this CheckBaseLinks.

        URI of resource.

        :param members: The members of this CheckBaseLinks.
        :type members: str
        """

        self._members = members

    @property
    def owners(self):
        """Gets the owners of this CheckBaseLinks.

        URI of resource.

        :return: The owners of this CheckBaseLinks.
        :rtype: str
        """
        return self._owners

    @owners.setter
    def owners(self, owners):
        """Sets the owners of this CheckBaseLinks.

        URI of resource.

        :param owners: The owners of this CheckBaseLinks.
        :type owners: str
        """

        self._owners = owners

    @property
    def query(self):
        """Gets the query of this CheckBaseLinks.

        URI of resource.

        :return: The query of this CheckBaseLinks.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this CheckBaseLinks.

        URI of resource.

        :param query: The query of this CheckBaseLinks.
        :type query: str
        """

        self._query = query

    @property
    def _self(self):
        """Gets the _self of this CheckBaseLinks.

        URI of resource.

        :return: The _self of this CheckBaseLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this CheckBaseLinks.

        URI of resource.

        :param _self: The _self of this CheckBaseLinks.
        :type _self: str
        """

        self.__self = _self
