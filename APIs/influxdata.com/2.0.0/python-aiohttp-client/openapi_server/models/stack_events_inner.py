# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stack_events_inner_resources_inner import StackEventsInnerResourcesInner
from openapi_server import util


class StackEventsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, event_type: str=None, name: str=None, resources: List[StackEventsInnerResourcesInner]=None, sources: List[str]=None, updated_at: datetime=None, urls: List[str]=None):
        """StackEventsInner - a model defined in OpenAPI

        :param description: The description of this StackEventsInner.
        :param event_type: The event_type of this StackEventsInner.
        :param name: The name of this StackEventsInner.
        :param resources: The resources of this StackEventsInner.
        :param sources: The sources of this StackEventsInner.
        :param updated_at: The updated_at of this StackEventsInner.
        :param urls: The urls of this StackEventsInner.
        """
        self.openapi_types = {
            'description': str,
            'event_type': str,
            'name': str,
            'resources': List[StackEventsInnerResourcesInner],
            'sources': List[str],
            'updated_at': datetime,
            'urls': List[str]
        }

        self.attribute_map = {
            'description': 'description',
            'event_type': 'eventType',
            'name': 'name',
            'resources': 'resources',
            'sources': 'sources',
            'updated_at': 'updatedAt',
            'urls': 'urls'
        }

        self._description = description
        self._event_type = event_type
        self._name = name
        self._resources = resources
        self._sources = sources
        self._updated_at = updated_at
        self._urls = urls

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackEventsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stack_events_inner of this StackEventsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this StackEventsInner.


        :return: The description of this StackEventsInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this StackEventsInner.


        :param description: The description of this StackEventsInner.
        :type description: str
        """

        self._description = description

    @property
    def event_type(self):
        """Gets the event_type of this StackEventsInner.


        :return: The event_type of this StackEventsInner.
        :rtype: str
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this StackEventsInner.


        :param event_type: The event_type of this StackEventsInner.
        :type event_type: str
        """

        self._event_type = event_type

    @property
    def name(self):
        """Gets the name of this StackEventsInner.


        :return: The name of this StackEventsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StackEventsInner.


        :param name: The name of this StackEventsInner.
        :type name: str
        """

        self._name = name

    @property
    def resources(self):
        """Gets the resources of this StackEventsInner.


        :return: The resources of this StackEventsInner.
        :rtype: List[StackEventsInnerResourcesInner]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this StackEventsInner.


        :param resources: The resources of this StackEventsInner.
        :type resources: List[StackEventsInnerResourcesInner]
        """

        self._resources = resources

    @property
    def sources(self):
        """Gets the sources of this StackEventsInner.


        :return: The sources of this StackEventsInner.
        :rtype: List[str]
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this StackEventsInner.


        :param sources: The sources of this StackEventsInner.
        :type sources: List[str]
        """

        self._sources = sources

    @property
    def updated_at(self):
        """Gets the updated_at of this StackEventsInner.


        :return: The updated_at of this StackEventsInner.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this StackEventsInner.


        :param updated_at: The updated_at of this StackEventsInner.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def urls(self):
        """Gets the urls of this StackEventsInner.


        :return: The urls of this StackEventsInner.
        :rtype: List[str]
        """
        return self._urls

    @urls.setter
    def urls(self, urls):
        """Sets the urls of this StackEventsInner.


        :param urls: The urls of this StackEventsInner.
        :type urls: List[str]
        """

        self._urls = urls
