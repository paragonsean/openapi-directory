# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DashboardAllOfLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cells: str=None, labels: str=None, members: str=None, org: str=None, owners: str=None, _self: str=None):
        """DashboardAllOfLinks - a model defined in OpenAPI

        :param cells: The cells of this DashboardAllOfLinks.
        :param labels: The labels of this DashboardAllOfLinks.
        :param members: The members of this DashboardAllOfLinks.
        :param org: The org of this DashboardAllOfLinks.
        :param owners: The owners of this DashboardAllOfLinks.
        :param _self: The _self of this DashboardAllOfLinks.
        """
        self.openapi_types = {
            'cells': str,
            'labels': str,
            'members': str,
            'org': str,
            'owners': str,
            '_self': str
        }

        self.attribute_map = {
            'cells': 'cells',
            'labels': 'labels',
            'members': 'members',
            'org': 'org',
            'owners': 'owners',
            '_self': 'self'
        }

        self._cells = cells
        self._labels = labels
        self._members = members
        self._org = org
        self._owners = owners
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DashboardAllOfLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Dashboard_allOf_links of this DashboardAllOfLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cells(self):
        """Gets the cells of this DashboardAllOfLinks.

        URI of resource.

        :return: The cells of this DashboardAllOfLinks.
        :rtype: str
        """
        return self._cells

    @cells.setter
    def cells(self, cells):
        """Sets the cells of this DashboardAllOfLinks.

        URI of resource.

        :param cells: The cells of this DashboardAllOfLinks.
        :type cells: str
        """

        self._cells = cells

    @property
    def labels(self):
        """Gets the labels of this DashboardAllOfLinks.

        URI of resource.

        :return: The labels of this DashboardAllOfLinks.
        :rtype: str
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this DashboardAllOfLinks.

        URI of resource.

        :param labels: The labels of this DashboardAllOfLinks.
        :type labels: str
        """

        self._labels = labels

    @property
    def members(self):
        """Gets the members of this DashboardAllOfLinks.

        URI of resource.

        :return: The members of this DashboardAllOfLinks.
        :rtype: str
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this DashboardAllOfLinks.

        URI of resource.

        :param members: The members of this DashboardAllOfLinks.
        :type members: str
        """

        self._members = members

    @property
    def org(self):
        """Gets the org of this DashboardAllOfLinks.

        URI of resource.

        :return: The org of this DashboardAllOfLinks.
        :rtype: str
        """
        return self._org

    @org.setter
    def org(self, org):
        """Sets the org of this DashboardAllOfLinks.

        URI of resource.

        :param org: The org of this DashboardAllOfLinks.
        :type org: str
        """

        self._org = org

    @property
    def owners(self):
        """Gets the owners of this DashboardAllOfLinks.

        URI of resource.

        :return: The owners of this DashboardAllOfLinks.
        :rtype: str
        """
        return self._owners

    @owners.setter
    def owners(self, owners):
        """Sets the owners of this DashboardAllOfLinks.

        URI of resource.

        :param owners: The owners of this DashboardAllOfLinks.
        :type owners: str
        """

        self._owners = owners

    @property
    def _self(self):
        """Gets the _self of this DashboardAllOfLinks.

        URI of resource.

        :return: The _self of this DashboardAllOfLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this DashboardAllOfLinks.

        URI of resource.

        :param _self: The _self of this DashboardAllOfLinks.
        :type _self: str
        """

        self.__self = _self
