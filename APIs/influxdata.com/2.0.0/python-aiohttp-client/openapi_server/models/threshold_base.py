# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.check_status_level import CheckStatusLevel
from openapi_server import util


class ThresholdBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all_values: bool=None, level: CheckStatusLevel=None):
        """ThresholdBase - a model defined in OpenAPI

        :param all_values: The all_values of this ThresholdBase.
        :param level: The level of this ThresholdBase.
        """
        self.openapi_types = {
            'all_values': bool,
            'level': CheckStatusLevel
        }

        self.attribute_map = {
            'all_values': 'allValues',
            'level': 'level'
        }

        self._all_values = all_values
        self._level = level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThresholdBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ThresholdBase of this ThresholdBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all_values(self):
        """Gets the all_values of this ThresholdBase.

        If true, only alert if all values meet threshold.

        :return: The all_values of this ThresholdBase.
        :rtype: bool
        """
        return self._all_values

    @all_values.setter
    def all_values(self, all_values):
        """Sets the all_values of this ThresholdBase.

        If true, only alert if all values meet threshold.

        :param all_values: The all_values of this ThresholdBase.
        :type all_values: bool
        """

        self._all_values = all_values

    @property
    def level(self):
        """Gets the level of this ThresholdBase.


        :return: The level of this ThresholdBase.
        :rtype: CheckStatusLevel
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this ThresholdBase.


        :param level: The level of this ThresholdBase.
        :type level: CheckStatusLevel
        """

        self._level = level
