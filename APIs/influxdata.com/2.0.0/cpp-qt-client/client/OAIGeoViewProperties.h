/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeoViewProperties.h
 *
 * 
 */

#ifndef OAIGeoViewProperties_H
#define OAIGeoViewProperties_H

#include <QJsonObject>

#include "OAIDashboardColor.h"
#include "OAIDashboardQuery.h"
#include "OAIGeoViewLayer.h"
#include "OAIGeoViewProperties_center.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGeoViewProperties_center;
class OAIDashboardColor;
class OAIGeoViewLayer;
class OAIDashboardQuery;

class OAIGeoViewProperties : public OAIObject {
public:
    OAIGeoViewProperties();
    OAIGeoViewProperties(QString json);
    ~OAIGeoViewProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowPanAndZoom() const;
    void setAllowPanAndZoom(const bool &allow_pan_and_zoom);
    bool is_allow_pan_and_zoom_Set() const;
    bool is_allow_pan_and_zoom_Valid() const;

    OAIGeoViewProperties_center getCenter() const;
    void setCenter(const OAIGeoViewProperties_center &center);
    bool is_center_Set() const;
    bool is_center_Valid() const;

    QList<OAIDashboardColor> getColors() const;
    void setColors(const QList<OAIDashboardColor> &colors);
    bool is_colors_Set() const;
    bool is_colors_Valid() const;

    bool isDetectCoordinateFields() const;
    void setDetectCoordinateFields(const bool &detect_coordinate_fields);
    bool is_detect_coordinate_fields_Set() const;
    bool is_detect_coordinate_fields_Valid() const;

    QList<OAIGeoViewLayer> getLayers() const;
    void setLayers(const QList<OAIGeoViewLayer> &layers);
    bool is_layers_Set() const;
    bool is_layers_Valid() const;

    QString getMapStyle() const;
    void setMapStyle(const QString &map_style);
    bool is_map_style_Set() const;
    bool is_map_style_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QList<OAIDashboardQuery> getQueries() const;
    void setQueries(const QList<OAIDashboardQuery> &queries);
    bool is_queries_Set() const;
    bool is_queries_Valid() const;

    QString getShape() const;
    void setShape(const QString &shape);
    bool is_shape_Set() const;
    bool is_shape_Valid() const;

    bool isShowNoteWhenEmpty() const;
    void setShowNoteWhenEmpty(const bool &show_note_when_empty);
    bool is_show_note_when_empty_Set() const;
    bool is_show_note_when_empty_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    double getZoom() const;
    void setZoom(const double &zoom);
    bool is_zoom_Set() const;
    bool is_zoom_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_pan_and_zoom;
    bool m_allow_pan_and_zoom_isSet;
    bool m_allow_pan_and_zoom_isValid;

    OAIGeoViewProperties_center m_center;
    bool m_center_isSet;
    bool m_center_isValid;

    QList<OAIDashboardColor> m_colors;
    bool m_colors_isSet;
    bool m_colors_isValid;

    bool m_detect_coordinate_fields;
    bool m_detect_coordinate_fields_isSet;
    bool m_detect_coordinate_fields_isValid;

    QList<OAIGeoViewLayer> m_layers;
    bool m_layers_isSet;
    bool m_layers_isValid;

    QString m_map_style;
    bool m_map_style_isSet;
    bool m_map_style_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QList<OAIDashboardQuery> m_queries;
    bool m_queries_isSet;
    bool m_queries_isValid;

    QString m_shape;
    bool m_shape_isSet;
    bool m_shape_isValid;

    bool m_show_note_when_empty;
    bool m_show_note_when_empty_isSet;
    bool m_show_note_when_empty_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    double m_zoom;
    bool m_zoom_isSet;
    bool m_zoom_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeoViewProperties)

#endif // OAIGeoViewProperties_H
