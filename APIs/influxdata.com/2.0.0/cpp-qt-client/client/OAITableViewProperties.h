/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableViewProperties.h
 *
 * 
 */

#ifndef OAITableViewProperties_H
#define OAITableViewProperties_H

#include <QJsonObject>

#include "OAIDashboardColor.h"
#include "OAIDashboardQuery.h"
#include "OAIDecimalPlaces.h"
#include "OAIRenamableField.h"
#include "OAITableViewProperties_tableOptions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDashboardColor;
class OAIDecimalPlaces;
class OAIRenamableField;
class OAIDashboardQuery;
class OAITableViewProperties_tableOptions;

class OAITableViewProperties : public OAIObject {
public:
    OAITableViewProperties();
    OAITableViewProperties(QString json);
    ~OAITableViewProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDashboardColor> getColors() const;
    void setColors(const QList<OAIDashboardColor> &colors);
    bool is_colors_Set() const;
    bool is_colors_Valid() const;

    OAIDecimalPlaces getDecimalPlaces() const;
    void setDecimalPlaces(const OAIDecimalPlaces &decimal_places);
    bool is_decimal_places_Set() const;
    bool is_decimal_places_Valid() const;

    QList<OAIRenamableField> getFieldOptions() const;
    void setFieldOptions(const QList<OAIRenamableField> &field_options);
    bool is_field_options_Set() const;
    bool is_field_options_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QList<OAIDashboardQuery> getQueries() const;
    void setQueries(const QList<OAIDashboardQuery> &queries);
    bool is_queries_Set() const;
    bool is_queries_Valid() const;

    QString getShape() const;
    void setShape(const QString &shape);
    bool is_shape_Set() const;
    bool is_shape_Valid() const;

    bool isShowNoteWhenEmpty() const;
    void setShowNoteWhenEmpty(const bool &show_note_when_empty);
    bool is_show_note_when_empty_Set() const;
    bool is_show_note_when_empty_Valid() const;

    OAITableViewProperties_tableOptions getTableOptions() const;
    void setTableOptions(const OAITableViewProperties_tableOptions &table_options);
    bool is_table_options_Set() const;
    bool is_table_options_Valid() const;

    QString getTimeFormat() const;
    void setTimeFormat(const QString &time_format);
    bool is_time_format_Set() const;
    bool is_time_format_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDashboardColor> m_colors;
    bool m_colors_isSet;
    bool m_colors_isValid;

    OAIDecimalPlaces m_decimal_places;
    bool m_decimal_places_isSet;
    bool m_decimal_places_isValid;

    QList<OAIRenamableField> m_field_options;
    bool m_field_options_isSet;
    bool m_field_options_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QList<OAIDashboardQuery> m_queries;
    bool m_queries_isSet;
    bool m_queries_isValid;

    QString m_shape;
    bool m_shape_isSet;
    bool m_shape_isValid;

    bool m_show_note_when_empty;
    bool m_show_note_when_empty_isSet;
    bool m_show_note_when_empty_isValid;

    OAITableViewProperties_tableOptions m_table_options;
    bool m_table_options_isSet;
    bool m_table_options_isValid;

    QString m_time_format;
    bool m_time_format_isSet;
    bool m_time_format_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableViewProperties)

#endif // OAITableViewProperties_H
