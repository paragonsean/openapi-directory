/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDialect.h
 *
 * Dialect are options to change the default CSV output format; https://www.w3.org/TR/2015/REC-tabular-metadata-20151217/#dialect-descriptions
 */

#ifndef OAIDialect_H
#define OAIDialect_H

#include <QJsonObject>

#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDialect : public OAIObject {
public:
    OAIDialect();
    OAIDialect(QString json);
    ~OAIDialect() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QSet<QString> getAnnotations() const;
    void setAnnotations(const QSet<QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    QString getCommentPrefix() const;
    void setCommentPrefix(const QString &comment_prefix);
    bool is_comment_prefix_Set() const;
    bool is_comment_prefix_Valid() const;

    QString getDateTimeFormat() const;
    void setDateTimeFormat(const QString &date_time_format);
    bool is_date_time_format_Set() const;
    bool is_date_time_format_Valid() const;

    QString getDelimiter() const;
    void setDelimiter(const QString &delimiter);
    bool is_delimiter_Set() const;
    bool is_delimiter_Valid() const;

    bool isHeader() const;
    void setHeader(const bool &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QSet<QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    QString m_comment_prefix;
    bool m_comment_prefix_isSet;
    bool m_comment_prefix_isValid;

    QString m_date_time_format;
    bool m_date_time_format_isSet;
    bool m_date_time_format_isValid;

    QString m_delimiter;
    bool m_delimiter_isSet;
    bool m_delimiter_isValid;

    bool m_header;
    bool m_header_isSet;
    bool m_header_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDialect)

#endif // OAIDialect_H
