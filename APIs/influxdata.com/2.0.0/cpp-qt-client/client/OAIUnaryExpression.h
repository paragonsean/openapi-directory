/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUnaryExpression.h
 *
 * Uses operators to act on a single operand in an expression
 */

#ifndef OAIUnaryExpression_H
#define OAIUnaryExpression_H

#include <QJsonObject>

#include "OAIExpression.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExpression;

class OAIUnaryExpression : public OAIObject {
public:
    OAIUnaryExpression();
    OAIUnaryExpression(QString json);
    ~OAIUnaryExpression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExpression getArgument() const;
    void setArgument(const OAIExpression &argument);
    bool is_argument_Set() const;
    bool is_argument_Valid() const;

    QString getROperator() const;
    void setROperator(const QString &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExpression m_argument;
    bool m_argument_isSet;
    bool m_argument_isValid;

    QString m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUnaryExpression)

#endif // OAIUnaryExpression_H
