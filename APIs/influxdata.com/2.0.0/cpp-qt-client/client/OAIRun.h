/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRun.h
 *
 * 
 */

#ifndef OAIRun_H
#define OAIRun_H

#include <QJsonObject>

#include "OAILogEvent.h"
#include "OAIRun_links.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRun_links;
class OAILogEvent;

class OAIRun : public OAIObject {
public:
    OAIRun();
    OAIRun(QString json);
    ~OAIRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getFinishedAt() const;
    void setFinishedAt(const QDateTime &finished_at);
    bool is_finished_at_Set() const;
    bool is_finished_at_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIRun_links getLinks() const;
    void setLinks(const OAIRun_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QList<OAILogEvent> getLog() const;
    void setLog(const QList<OAILogEvent> &log);
    bool is_log_Set() const;
    bool is_log_Valid() const;

    QDateTime getRequestedAt() const;
    void setRequestedAt(const QDateTime &requested_at);
    bool is_requested_at_Set() const;
    bool is_requested_at_Valid() const;

    QDateTime getScheduledFor() const;
    void setScheduledFor(const QDateTime &scheduled_for);
    bool is_scheduled_for_Set() const;
    bool is_scheduled_for_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTaskId() const;
    void setTaskId(const QString &task_id);
    bool is_task_id_Set() const;
    bool is_task_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_finished_at;
    bool m_finished_at_isSet;
    bool m_finished_at_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIRun_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QList<OAILogEvent> m_log;
    bool m_log_isSet;
    bool m_log_isValid;

    QDateTime m_requested_at;
    bool m_requested_at_isSet;
    bool m_requested_at_isValid;

    QDateTime m_scheduled_for;
    bool m_scheduled_for_isSet;
    bool m_scheduled_for_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_task_id;
    bool m_task_id_isSet;
    bool m_task_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRun)

#endif // OAIRun_H
