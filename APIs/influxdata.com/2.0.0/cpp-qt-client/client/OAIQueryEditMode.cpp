/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryEditMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryEditMode::OAIQueryEditMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryEditMode::OAIQueryEditMode() {
    this->initializeModel();
}

OAIQueryEditMode::~OAIQueryEditMode() {}

void OAIQueryEditMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIQueryEditMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIQueryEditMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("builder", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQueryEditMode::BUILDER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("advanced", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQueryEditMode::ADVANCED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIQueryEditMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIQueryEditMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIQueryEditMode::BUILDER:
            val = "builder";
            break;
        case eOAIQueryEditMode::ADVANCED:
            val = "advanced";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIQueryEditMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIQueryEditMode::eOAIQueryEditMode OAIQueryEditMode::getValue() const {
    return m_value;
}

void OAIQueryEditMode::setValue(const OAIQueryEditMode::eOAIQueryEditMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIQueryEditMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIQueryEditMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
