/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckDiscriminator.h
 *
 * 
 */

#ifndef OAICheckDiscriminator_H
#define OAICheckDiscriminator_H

#include <QJsonObject>

#include "OAICheckBase_links.h"
#include "OAICheckStatusLevel.h"
#include "OAICustomCheck.h"
#include "OAIDashboardQuery.h"
#include "OAIDeadmanCheck.h"
#include "OAIDeadmanCheck_allOf_tags.h"
#include "OAILabel.h"
#include "OAITaskStatusType.h"
#include "OAIThreshold.h"
#include "OAIThresholdCheck.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILabel;
class OAICheckBase_links;
class OAIDashboardQuery;
class OAIDeadmanCheck_allOf_tags;
class OAIThreshold;

class OAICheckDiscriminator : public OAIObject {
public:
    OAICheckDiscriminator();
    OAICheckDiscriminator(QString json);
    ~OAICheckDiscriminator() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAILabel> getLabels() const;
    void setLabels(const QList<OAILabel> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLastRunError() const;
    void setLastRunError(const QString &last_run_error);
    bool is_last_run_error_Set() const;
    bool is_last_run_error_Valid() const;

    QString getLastRunStatus() const;
    void setLastRunStatus(const QString &last_run_status);
    bool is_last_run_status_Set() const;
    bool is_last_run_status_Valid() const;

    QDateTime getLatestCompleted() const;
    void setLatestCompleted(const QDateTime &latest_completed);
    bool is_latest_completed_Set() const;
    bool is_latest_completed_Valid() const;

    OAICheckBase_links getLinks() const;
    void setLinks(const OAICheckBase_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrgId() const;
    void setOrgId(const QString &org_id);
    bool is_org_id_Set() const;
    bool is_org_id_Valid() const;

    QString getOwnerId() const;
    void setOwnerId(const QString &owner_id);
    bool is_owner_id_Set() const;
    bool is_owner_id_Valid() const;

    OAIDashboardQuery getQuery() const;
    void setQuery(const OAIDashboardQuery &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    OAITaskStatusType getStatus() const;
    void setStatus(const OAITaskStatusType &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTaskId() const;
    void setTaskId(const QString &task_id);
    bool is_task_id_Set() const;
    bool is_task_id_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getEvery() const;
    void setEvery(const QString &every);
    bool is_every_Set() const;
    bool is_every_Valid() const;

    OAICheckStatusLevel getLevel() const;
    void setLevel(const OAICheckStatusLevel &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    QString getOffset() const;
    void setOffset(const QString &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    bool isReportZero() const;
    void setReportZero(const bool &report_zero);
    bool is_report_zero_Set() const;
    bool is_report_zero_Valid() const;

    QString getStaleTime() const;
    void setStaleTime(const QString &stale_time);
    bool is_stale_time_Set() const;
    bool is_stale_time_Valid() const;

    QString getStatusMessageTemplate() const;
    void setStatusMessageTemplate(const QString &status_message_template);
    bool is_status_message_template_Set() const;
    bool is_status_message_template_Valid() const;

    QList<OAIDeadmanCheck_allOf_tags> getTags() const;
    void setTags(const QList<OAIDeadmanCheck_allOf_tags> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTimeSince() const;
    void setTimeSince(const QString &time_since);
    bool is_time_since_Set() const;
    bool is_time_since_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<OAIThreshold> getThresholds() const;
    void setThresholds(const QList<OAIThreshold> &thresholds);
    bool is_thresholds_Set() const;
    bool is_thresholds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAILabel> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_last_run_error;
    bool m_last_run_error_isSet;
    bool m_last_run_error_isValid;

    QString m_last_run_status;
    bool m_last_run_status_isSet;
    bool m_last_run_status_isValid;

    QDateTime m_latest_completed;
    bool m_latest_completed_isSet;
    bool m_latest_completed_isValid;

    OAICheckBase_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_org_id;
    bool m_org_id_isSet;
    bool m_org_id_isValid;

    QString m_owner_id;
    bool m_owner_id_isSet;
    bool m_owner_id_isValid;

    OAIDashboardQuery m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    OAITaskStatusType m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_task_id;
    bool m_task_id_isSet;
    bool m_task_id_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_every;
    bool m_every_isSet;
    bool m_every_isValid;

    OAICheckStatusLevel m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    QString m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    bool m_report_zero;
    bool m_report_zero_isSet;
    bool m_report_zero_isValid;

    QString m_stale_time;
    bool m_stale_time_isSet;
    bool m_stale_time_isValid;

    QString m_status_message_template;
    bool m_status_message_template_isSet;
    bool m_status_message_template_isValid;

    QList<OAIDeadmanCheck_allOf_tags> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_time_since;
    bool m_time_since_isSet;
    bool m_time_since_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<OAIThreshold> m_thresholds;
    bool m_thresholds_isSet;
    bool m_thresholds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckDiscriminator)

#endif // OAICheckDiscriminator_H
