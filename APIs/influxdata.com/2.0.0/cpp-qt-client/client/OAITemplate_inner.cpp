/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITemplate_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITemplate_inner::OAITemplate_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITemplate_inner::OAITemplate_inner() {
    this->initializeModel();
}

OAITemplate_inner::~OAITemplate_inner() {}

void OAITemplate_inner::initializeModel() {

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_meta_isSet = false;
    m_meta_isValid = false;

    m_spec_isSet = false;
    m_spec_isValid = false;
}

void OAITemplate_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITemplate_inner::fromJsonObject(QJsonObject json) {

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("apiVersion")]);
    m_api_version_isSet = !json[QString("apiVersion")].isNull() && m_api_version_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_meta_isValid = ::OpenAPI::fromJsonValue(m_meta, json[QString("meta")]);
    m_meta_isSet = !json[QString("meta")].isNull() && m_meta_isValid;

    m_spec_isValid = ::OpenAPI::fromJsonValue(m_spec, json[QString("spec")]);
    m_spec_isSet = !json[QString("spec")].isNull() && m_spec_isValid;
}

QString OAITemplate_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITemplate_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_api_version_isSet) {
        obj.insert(QString("apiVersion"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_kind.isSet()) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_meta.isSet()) {
        obj.insert(QString("meta"), ::OpenAPI::toJsonValue(m_meta));
    }
    if (m_spec_isSet) {
        obj.insert(QString("spec"), ::OpenAPI::toJsonValue(m_spec));
    }
    return obj;
}

QString OAITemplate_inner::getApiVersion() const {
    return m_api_version;
}
void OAITemplate_inner::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAITemplate_inner::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAITemplate_inner::is_api_version_Valid() const{
    return m_api_version_isValid;
}

OAITemplateKind OAITemplate_inner::getKind() const {
    return m_kind;
}
void OAITemplate_inner::setKind(const OAITemplateKind &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAITemplate_inner::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAITemplate_inner::is_kind_Valid() const{
    return m_kind_isValid;
}

OAITemplate_inner_meta OAITemplate_inner::getMeta() const {
    return m_meta;
}
void OAITemplate_inner::setMeta(const OAITemplate_inner_meta &meta) {
    m_meta = meta;
    m_meta_isSet = true;
}

bool OAITemplate_inner::is_meta_Set() const{
    return m_meta_isSet;
}

bool OAITemplate_inner::is_meta_Valid() const{
    return m_meta_isValid;
}

OAIObject OAITemplate_inner::getSpec() const {
    return m_spec;
}
void OAITemplate_inner::setSpec(const OAIObject &spec) {
    m_spec = spec;
    m_spec_isSet = true;
}

bool OAITemplate_inner::is_spec_Set() const{
    return m_spec_isSet;
}

bool OAITemplate_inner::is_spec_Valid() const{
    return m_spec_isValid;
}

bool OAITemplate_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_meta.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITemplate_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
