/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotificationEndpointBase_links.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotificationEndpointBase_links::OAINotificationEndpointBase_links(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotificationEndpointBase_links::OAINotificationEndpointBase_links() {
    this->initializeModel();
}

OAINotificationEndpointBase_links::~OAINotificationEndpointBase_links() {}

void OAINotificationEndpointBase_links::initializeModel() {

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_members_isSet = false;
    m_members_isValid = false;

    m_owners_isSet = false;
    m_owners_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;
}

void OAINotificationEndpointBase_links::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINotificationEndpointBase_links::fromJsonObject(QJsonObject json) {

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_members_isValid = ::OpenAPI::fromJsonValue(m_members, json[QString("members")]);
    m_members_isSet = !json[QString("members")].isNull() && m_members_isValid;

    m_owners_isValid = ::OpenAPI::fromJsonValue(m_owners, json[QString("owners")]);
    m_owners_isSet = !json[QString("owners")].isNull() && m_owners_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;
}

QString OAINotificationEndpointBase_links::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINotificationEndpointBase_links::asJsonObject() const {
    QJsonObject obj;
    if (m_labels_isSet) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_members_isSet) {
        obj.insert(QString("members"), ::OpenAPI::toJsonValue(m_members));
    }
    if (m_owners_isSet) {
        obj.insert(QString("owners"), ::OpenAPI::toJsonValue(m_owners));
    }
    if (m_self_isSet) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    return obj;
}

QString OAINotificationEndpointBase_links::getLabels() const {
    return m_labels;
}
void OAINotificationEndpointBase_links::setLabels(const QString &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAINotificationEndpointBase_links::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAINotificationEndpointBase_links::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAINotificationEndpointBase_links::getMembers() const {
    return m_members;
}
void OAINotificationEndpointBase_links::setMembers(const QString &members) {
    m_members = members;
    m_members_isSet = true;
}

bool OAINotificationEndpointBase_links::is_members_Set() const{
    return m_members_isSet;
}

bool OAINotificationEndpointBase_links::is_members_Valid() const{
    return m_members_isValid;
}

QString OAINotificationEndpointBase_links::getOwners() const {
    return m_owners;
}
void OAINotificationEndpointBase_links::setOwners(const QString &owners) {
    m_owners = owners;
    m_owners_isSet = true;
}

bool OAINotificationEndpointBase_links::is_owners_Set() const{
    return m_owners_isSet;
}

bool OAINotificationEndpointBase_links::is_owners_Valid() const{
    return m_owners_isValid;
}

QString OAINotificationEndpointBase_links::getSelf() const {
    return m_self;
}
void OAINotificationEndpointBase_links::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAINotificationEndpointBase_links::is_self_Set() const{
    return m_self_isSet;
}

bool OAINotificationEndpointBase_links::is_self_Valid() const{
    return m_self_isValid;
}

bool OAINotificationEndpointBase_links::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_labels_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_members_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owners_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINotificationEndpointBase_links::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
