/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchemaType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchemaType::OAISchemaType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchemaType::OAISchemaType() {
    this->initializeModel();
}

OAISchemaType::~OAISchemaType() {}

void OAISchemaType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISchemaType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISchemaType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("implicit", Qt::CaseInsensitive) == 0) {
        m_value = eOAISchemaType::IMPLICIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("explicit", Qt::CaseInsensitive) == 0) {
        m_value = eOAISchemaType::EXPLICIT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISchemaType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISchemaType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISchemaType::IMPLICIT:
            val = "implicit";
            break;
        case eOAISchemaType::EXPLICIT:
            val = "explicit";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISchemaType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISchemaType::eOAISchemaType OAISchemaType::getValue() const {
    return m_value;
}

void OAISchemaType::setValue(const OAISchemaType::eOAISchemaType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISchemaType::isSet() const {
    
    return m_value_isSet;
}

bool OAISchemaType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
