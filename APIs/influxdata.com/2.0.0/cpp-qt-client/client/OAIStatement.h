/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatement.h
 *
 * 
 */

#ifndef OAIStatement_H
#define OAIStatement_H

#include <QJsonObject>

#include "OAIBadStatement.h"
#include "OAIBuiltinStatement.h"
#include "OAIExpression.h"
#include "OAIExpressionStatement.h"
#include "OAIIdentifier.h"
#include "OAIMemberAssignment.h"
#include "OAIMemberExpression.h"
#include "OAIOptionStatement.h"
#include "OAIReturnStatement.h"
#include "OAITestStatement.h"
#include "OAIVariableAssignment.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIdentifier;
class OAIExpression;
class OAIMemberExpression;
class OAIVariableAssignment;

class OAIStatement : public OAIObject {
public:
    OAIStatement();
    OAIStatement(QString json);
    ~OAIStatement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIIdentifier getId() const;
    void setId(const OAIIdentifier &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIExpression getInit() const;
    void setInit(const OAIExpression &init);
    bool is_init_Set() const;
    bool is_init_Valid() const;

    OAIMemberExpression getMember() const;
    void setMember(const OAIMemberExpression &member);
    bool is_member_Set() const;
    bool is_member_Valid() const;

    OAIExpression getExpression() const;
    void setExpression(const OAIExpression &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    OAIExpression getArgument() const;
    void setArgument(const OAIExpression &argument);
    bool is_argument_Set() const;
    bool is_argument_Valid() const;

    OAIVariableAssignment getAssignment() const;
    void setAssignment(const OAIVariableAssignment &assignment);
    bool is_assignment_Set() const;
    bool is_assignment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIIdentifier m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIExpression m_init;
    bool m_init_isSet;
    bool m_init_isValid;

    OAIMemberExpression m_member;
    bool m_member_isSet;
    bool m_member_isValid;

    OAIExpression m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    OAIExpression m_argument;
    bool m_argument_isSet;
    bool m_argument_isValid;

    OAIVariableAssignment m_assignment;
    bool m_assignment_isSet;
    bool m_assignment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatement)

#endif // OAIStatement_H
