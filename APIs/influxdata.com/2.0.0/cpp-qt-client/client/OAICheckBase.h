/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckBase.h
 *
 * 
 */

#ifndef OAICheckBase_H
#define OAICheckBase_H

#include <QJsonObject>

#include "OAICheckBase_links.h"
#include "OAIDashboardQuery.h"
#include "OAILabel.h"
#include "OAITaskStatusType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILabel;
class OAICheckBase_links;
class OAIDashboardQuery;

class OAICheckBase : public OAIObject {
public:
    OAICheckBase();
    OAICheckBase(QString json);
    ~OAICheckBase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAILabel> getLabels() const;
    void setLabels(const QList<OAILabel> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLastRunError() const;
    void setLastRunError(const QString &last_run_error);
    bool is_last_run_error_Set() const;
    bool is_last_run_error_Valid() const;

    QString getLastRunStatus() const;
    void setLastRunStatus(const QString &last_run_status);
    bool is_last_run_status_Set() const;
    bool is_last_run_status_Valid() const;

    QDateTime getLatestCompleted() const;
    void setLatestCompleted(const QDateTime &latest_completed);
    bool is_latest_completed_Set() const;
    bool is_latest_completed_Valid() const;

    OAICheckBase_links getLinks() const;
    void setLinks(const OAICheckBase_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrgId() const;
    void setOrgId(const QString &org_id);
    bool is_org_id_Set() const;
    bool is_org_id_Valid() const;

    QString getOwnerId() const;
    void setOwnerId(const QString &owner_id);
    bool is_owner_id_Set() const;
    bool is_owner_id_Valid() const;

    OAIDashboardQuery getQuery() const;
    void setQuery(const OAIDashboardQuery &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    OAITaskStatusType getStatus() const;
    void setStatus(const OAITaskStatusType &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTaskId() const;
    void setTaskId(const QString &task_id);
    bool is_task_id_Set() const;
    bool is_task_id_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAILabel> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_last_run_error;
    bool m_last_run_error_isSet;
    bool m_last_run_error_isValid;

    QString m_last_run_status;
    bool m_last_run_status_isSet;
    bool m_last_run_status_isValid;

    QDateTime m_latest_completed;
    bool m_latest_completed_isSet;
    bool m_latest_completed_isValid;

    OAICheckBase_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_org_id;
    bool m_org_id_isSet;
    bool m_org_id_isValid;

    QString m_owner_id;
    bool m_owner_id_isSet;
    bool m_owner_id_isValid;

    OAIDashboardQuery m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    OAITaskStatusType m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_task_id;
    bool m_task_id_isSet;
    bool m_task_id_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckBase)

#endif // OAICheckBase_H
