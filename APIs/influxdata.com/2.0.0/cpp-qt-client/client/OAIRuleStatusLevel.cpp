/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRuleStatusLevel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRuleStatusLevel::OAIRuleStatusLevel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRuleStatusLevel::OAIRuleStatusLevel() {
    this->initializeModel();
}

OAIRuleStatusLevel::~OAIRuleStatusLevel() {}

void OAIRuleStatusLevel::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRuleStatusLevel::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRuleStatusLevel::fromJson(QString jsonString) {
    
    if ( jsonString.compare("UNKNOWN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleStatusLevel::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleStatusLevel::OK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INFO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleStatusLevel::INFO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CRIT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleStatusLevel::CRIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WARN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleStatusLevel::WARN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ANY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleStatusLevel::ANY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRuleStatusLevel::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRuleStatusLevel::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRuleStatusLevel::UNKNOWN:
            val = "UNKNOWN";
            break;
        case eOAIRuleStatusLevel::OK:
            val = "OK";
            break;
        case eOAIRuleStatusLevel::INFO:
            val = "INFO";
            break;
        case eOAIRuleStatusLevel::CRIT:
            val = "CRIT";
            break;
        case eOAIRuleStatusLevel::WARN:
            val = "WARN";
            break;
        case eOAIRuleStatusLevel::ANY:
            val = "ANY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRuleStatusLevel::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRuleStatusLevel::eOAIRuleStatusLevel OAIRuleStatusLevel::getValue() const {
    return m_value;
}

void OAIRuleStatusLevel::setValue(const OAIRuleStatusLevel::eOAIRuleStatusLevel& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRuleStatusLevel::isSet() const {
    
    return m_value_isSet;
}

bool OAIRuleStatusLevel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
