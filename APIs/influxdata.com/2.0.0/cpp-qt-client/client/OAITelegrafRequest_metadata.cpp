/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITelegrafRequest_metadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITelegrafRequest_metadata::OAITelegrafRequest_metadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITelegrafRequest_metadata::OAITelegrafRequest_metadata() {
    this->initializeModel();
}

OAITelegrafRequest_metadata::~OAITelegrafRequest_metadata() {}

void OAITelegrafRequest_metadata::initializeModel() {

    m_buckets_isSet = false;
    m_buckets_isValid = false;
}

void OAITelegrafRequest_metadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITelegrafRequest_metadata::fromJsonObject(QJsonObject json) {

    m_buckets_isValid = ::OpenAPI::fromJsonValue(m_buckets, json[QString("buckets")]);
    m_buckets_isSet = !json[QString("buckets")].isNull() && m_buckets_isValid;
}

QString OAITelegrafRequest_metadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITelegrafRequest_metadata::asJsonObject() const {
    QJsonObject obj;
    if (m_buckets.size() > 0) {
        obj.insert(QString("buckets"), ::OpenAPI::toJsonValue(m_buckets));
    }
    return obj;
}

QList<QString> OAITelegrafRequest_metadata::getBuckets() const {
    return m_buckets;
}
void OAITelegrafRequest_metadata::setBuckets(const QList<QString> &buckets) {
    m_buckets = buckets;
    m_buckets_isSet = true;
}

bool OAITelegrafRequest_metadata::is_buckets_Set() const{
    return m_buckets_isSet;
}

bool OAITelegrafRequest_metadata::is_buckets_Valid() const{
    return m_buckets_isValid;
}

bool OAITelegrafRequest_metadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_buckets.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITelegrafRequest_metadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
