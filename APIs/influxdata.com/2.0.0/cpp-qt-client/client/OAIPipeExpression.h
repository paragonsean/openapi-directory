/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPipeExpression.h
 *
 * Call expression with pipe argument
 */

#ifndef OAIPipeExpression_H
#define OAIPipeExpression_H

#include <QJsonObject>

#include "OAICallExpression.h"
#include "OAIExpression.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExpression;
class OAICallExpression;

class OAIPipeExpression : public OAIObject {
public:
    OAIPipeExpression();
    OAIPipeExpression(QString json);
    ~OAIPipeExpression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExpression getArgument() const;
    void setArgument(const OAIExpression &argument);
    bool is_argument_Set() const;
    bool is_argument_Valid() const;

    OAICallExpression getCall() const;
    void setCall(const OAICallExpression &call);
    bool is_call_Set() const;
    bool is_call_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExpression m_argument;
    bool m_argument_isSet;
    bool m_argument_isValid;

    OAICallExpression m_call;
    bool m_call_isSet;
    bool m_call_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPipeExpression)

#endif // OAIPipeExpression_H
