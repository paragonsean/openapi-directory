/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWritePrecision.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWritePrecision::OAIWritePrecision(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWritePrecision::OAIWritePrecision() {
    this->initializeModel();
}

OAIWritePrecision::~OAIWritePrecision() {}

void OAIWritePrecision::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWritePrecision::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWritePrecision::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ms", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWritePrecision::MS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("s", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWritePrecision::S;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("us", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWritePrecision::US;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ns", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWritePrecision::NS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWritePrecision::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWritePrecision::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWritePrecision::MS:
            val = "ms";
            break;
        case eOAIWritePrecision::S:
            val = "s";
            break;
        case eOAIWritePrecision::US:
            val = "us";
            break;
        case eOAIWritePrecision::NS:
            val = "ns";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWritePrecision::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWritePrecision::eOAIWritePrecision OAIWritePrecision::getValue() const {
    return m_value;
}

void OAIWritePrecision::setValue(const OAIWritePrecision::eOAIWritePrecision& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWritePrecision::isSet() const {
    
    return m_value_isSet;
}

bool OAIWritePrecision::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
