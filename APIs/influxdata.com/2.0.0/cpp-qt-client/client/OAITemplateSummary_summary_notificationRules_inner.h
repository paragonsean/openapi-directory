/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITemplateSummary_summary_notificationRules_inner.h
 *
 * 
 */

#ifndef OAITemplateSummary_summary_notificationRules_inner_H
#define OAITemplateSummary_summary_notificationRules_inner_H

#include <QJsonObject>

#include "OAITemplateEnvReferences_inner.h"
#include "OAITemplateKind.h"
#include "OAITemplateSummaryLabel.h"
#include "OAITemplateSummary_diff_notificationRules_inner_new_statusRules_inner.h"
#include "OAITemplateSummary_diff_notificationRules_inner_new_tagRules_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITemplateEnvReferences_inner;
class OAITemplateSummaryLabel;
class OAITemplateSummary_diff_notificationRules_inner_new_statusRules_inner;
class OAITemplateSummary_diff_notificationRules_inner_new_tagRules_inner;

class OAITemplateSummary_summary_notificationRules_inner : public OAIObject {
public:
    OAITemplateSummary_summary_notificationRules_inner();
    OAITemplateSummary_summary_notificationRules_inner(QString json);
    ~OAITemplateSummary_summary_notificationRules_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEndpointId() const;
    void setEndpointId(const QString &endpoint_id);
    bool is_endpoint_id_Set() const;
    bool is_endpoint_id_Valid() const;

    QString getEndpointTemplateMetaName() const;
    void setEndpointTemplateMetaName(const QString &endpoint_template_meta_name);
    bool is_endpoint_template_meta_name_Set() const;
    bool is_endpoint_template_meta_name_Valid() const;

    QString getEndpointType() const;
    void setEndpointType(const QString &endpoint_type);
    bool is_endpoint_type_Set() const;
    bool is_endpoint_type_Valid() const;

    QList<OAITemplateEnvReferences_inner> getEnvReferences() const;
    void setEnvReferences(const QList<OAITemplateEnvReferences_inner> &env_references);
    bool is_env_references_Set() const;
    bool is_env_references_Valid() const;

    QString getEvery() const;
    void setEvery(const QString &every);
    bool is_every_Set() const;
    bool is_every_Valid() const;

    OAITemplateKind getKind() const;
    void setKind(const OAITemplateKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QList<OAITemplateSummaryLabel> getLabelAssociations() const;
    void setLabelAssociations(const QList<OAITemplateSummaryLabel> &label_associations);
    bool is_label_associations_Set() const;
    bool is_label_associations_Valid() const;

    QString getMessageTemplate() const;
    void setMessageTemplate(const QString &message_template);
    bool is_message_template_Set() const;
    bool is_message_template_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOffset() const;
    void setOffset(const QString &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAITemplateSummary_diff_notificationRules_inner_new_statusRules_inner> getStatusRules() const;
    void setStatusRules(const QList<OAITemplateSummary_diff_notificationRules_inner_new_statusRules_inner> &status_rules);
    bool is_status_rules_Set() const;
    bool is_status_rules_Valid() const;

    QList<OAITemplateSummary_diff_notificationRules_inner_new_tagRules_inner> getTagRules() const;
    void setTagRules(const QList<OAITemplateSummary_diff_notificationRules_inner_new_tagRules_inner> &tag_rules);
    bool is_tag_rules_Set() const;
    bool is_tag_rules_Valid() const;

    QString getTemplateMetaName() const;
    void setTemplateMetaName(const QString &template_meta_name);
    bool is_template_meta_name_Set() const;
    bool is_template_meta_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_endpoint_id;
    bool m_endpoint_id_isSet;
    bool m_endpoint_id_isValid;

    QString m_endpoint_template_meta_name;
    bool m_endpoint_template_meta_name_isSet;
    bool m_endpoint_template_meta_name_isValid;

    QString m_endpoint_type;
    bool m_endpoint_type_isSet;
    bool m_endpoint_type_isValid;

    QList<OAITemplateEnvReferences_inner> m_env_references;
    bool m_env_references_isSet;
    bool m_env_references_isValid;

    QString m_every;
    bool m_every_isSet;
    bool m_every_isValid;

    OAITemplateKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QList<OAITemplateSummaryLabel> m_label_associations;
    bool m_label_associations_isSet;
    bool m_label_associations_isValid;

    QString m_message_template;
    bool m_message_template_isSet;
    bool m_message_template_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAITemplateSummary_diff_notificationRules_inner_new_statusRules_inner> m_status_rules;
    bool m_status_rules_isSet;
    bool m_status_rules_isValid;

    QList<OAITemplateSummary_diff_notificationRules_inner_new_tagRules_inner> m_tag_rules;
    bool m_tag_rules_isSet;
    bool m_tag_rules_isValid;

    QString m_template_meta_name;
    bool m_template_meta_name_isSet;
    bool m_template_meta_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITemplateSummary_summary_notificationRules_inner)

#endif // OAITemplateSummary_summary_notificationRules_inner_H
