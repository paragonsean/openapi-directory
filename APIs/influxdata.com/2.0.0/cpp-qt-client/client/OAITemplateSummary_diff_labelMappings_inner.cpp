/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITemplateSummary_diff_labelMappings_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITemplateSummary_diff_labelMappings_inner::OAITemplateSummary_diff_labelMappings_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITemplateSummary_diff_labelMappings_inner::OAITemplateSummary_diff_labelMappings_inner() {
    this->initializeModel();
}

OAITemplateSummary_diff_labelMappings_inner::~OAITemplateSummary_diff_labelMappings_inner() {}

void OAITemplateSummary_diff_labelMappings_inner::initializeModel() {

    m_label_id_isSet = false;
    m_label_id_isValid = false;

    m_label_name_isSet = false;
    m_label_name_isValid = false;

    m_label_template_meta_name_isSet = false;
    m_label_template_meta_name_isValid = false;

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_resource_template_meta_name_isSet = false;
    m_resource_template_meta_name_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAITemplateSummary_diff_labelMappings_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITemplateSummary_diff_labelMappings_inner::fromJsonObject(QJsonObject json) {

    m_label_id_isValid = ::OpenAPI::fromJsonValue(m_label_id, json[QString("labelID")]);
    m_label_id_isSet = !json[QString("labelID")].isNull() && m_label_id_isValid;

    m_label_name_isValid = ::OpenAPI::fromJsonValue(m_label_name, json[QString("labelName")]);
    m_label_name_isSet = !json[QString("labelName")].isNull() && m_label_name_isValid;

    m_label_template_meta_name_isValid = ::OpenAPI::fromJsonValue(m_label_template_meta_name, json[QString("labelTemplateMetaName")]);
    m_label_template_meta_name_isSet = !json[QString("labelTemplateMetaName")].isNull() && m_label_template_meta_name_isValid;

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("resourceID")]);
    m_resource_id_isSet = !json[QString("resourceID")].isNull() && m_resource_id_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;

    m_resource_template_meta_name_isValid = ::OpenAPI::fromJsonValue(m_resource_template_meta_name, json[QString("resourceTemplateMetaName")]);
    m_resource_template_meta_name_isSet = !json[QString("resourceTemplateMetaName")].isNull() && m_resource_template_meta_name_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resourceType")]);
    m_resource_type_isSet = !json[QString("resourceType")].isNull() && m_resource_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAITemplateSummary_diff_labelMappings_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITemplateSummary_diff_labelMappings_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_label_id_isSet) {
        obj.insert(QString("labelID"), ::OpenAPI::toJsonValue(m_label_id));
    }
    if (m_label_name_isSet) {
        obj.insert(QString("labelName"), ::OpenAPI::toJsonValue(m_label_name));
    }
    if (m_label_template_meta_name_isSet) {
        obj.insert(QString("labelTemplateMetaName"), ::OpenAPI::toJsonValue(m_label_template_meta_name));
    }
    if (m_resource_id_isSet) {
        obj.insert(QString("resourceID"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_resource_template_meta_name_isSet) {
        obj.insert(QString("resourceTemplateMetaName"), ::OpenAPI::toJsonValue(m_resource_template_meta_name));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAITemplateSummary_diff_labelMappings_inner::getLabelId() const {
    return m_label_id;
}
void OAITemplateSummary_diff_labelMappings_inner::setLabelId(const QString &label_id) {
    m_label_id = label_id;
    m_label_id_isSet = true;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_label_id_Set() const{
    return m_label_id_isSet;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_label_id_Valid() const{
    return m_label_id_isValid;
}

QString OAITemplateSummary_diff_labelMappings_inner::getLabelName() const {
    return m_label_name;
}
void OAITemplateSummary_diff_labelMappings_inner::setLabelName(const QString &label_name) {
    m_label_name = label_name;
    m_label_name_isSet = true;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_label_name_Set() const{
    return m_label_name_isSet;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_label_name_Valid() const{
    return m_label_name_isValid;
}

QString OAITemplateSummary_diff_labelMappings_inner::getLabelTemplateMetaName() const {
    return m_label_template_meta_name;
}
void OAITemplateSummary_diff_labelMappings_inner::setLabelTemplateMetaName(const QString &label_template_meta_name) {
    m_label_template_meta_name = label_template_meta_name;
    m_label_template_meta_name_isSet = true;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_label_template_meta_name_Set() const{
    return m_label_template_meta_name_isSet;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_label_template_meta_name_Valid() const{
    return m_label_template_meta_name_isValid;
}

QString OAITemplateSummary_diff_labelMappings_inner::getResourceId() const {
    return m_resource_id;
}
void OAITemplateSummary_diff_labelMappings_inner::setResourceId(const QString &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

QString OAITemplateSummary_diff_labelMappings_inner::getResourceName() const {
    return m_resource_name;
}
void OAITemplateSummary_diff_labelMappings_inner::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QString OAITemplateSummary_diff_labelMappings_inner::getResourceTemplateMetaName() const {
    return m_resource_template_meta_name;
}
void OAITemplateSummary_diff_labelMappings_inner::setResourceTemplateMetaName(const QString &resource_template_meta_name) {
    m_resource_template_meta_name = resource_template_meta_name;
    m_resource_template_meta_name_isSet = true;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_resource_template_meta_name_Set() const{
    return m_resource_template_meta_name_isSet;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_resource_template_meta_name_Valid() const{
    return m_resource_template_meta_name_isValid;
}

QString OAITemplateSummary_diff_labelMappings_inner::getResourceType() const {
    return m_resource_type;
}
void OAITemplateSummary_diff_labelMappings_inner::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

QString OAITemplateSummary_diff_labelMappings_inner::getStatus() const {
    return m_status;
}
void OAITemplateSummary_diff_labelMappings_inner::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_status_Set() const{
    return m_status_isSet;
}

bool OAITemplateSummary_diff_labelMappings_inner::is_status_Valid() const{
    return m_status_isValid;
}

bool OAITemplateSummary_diff_labelMappings_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_label_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_template_meta_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_template_meta_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITemplateSummary_diff_labelMappings_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
