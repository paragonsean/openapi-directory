/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITemplateExportByID_orgIDs_inner_resourceFilters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITemplateExportByID_orgIDs_inner_resourceFilters::OAITemplateExportByID_orgIDs_inner_resourceFilters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITemplateExportByID_orgIDs_inner_resourceFilters::OAITemplateExportByID_orgIDs_inner_resourceFilters() {
    this->initializeModel();
}

OAITemplateExportByID_orgIDs_inner_resourceFilters::~OAITemplateExportByID_orgIDs_inner_resourceFilters() {}

void OAITemplateExportByID_orgIDs_inner_resourceFilters::initializeModel() {

    m_by_label_isSet = false;
    m_by_label_isValid = false;

    m_by_resource_kind_isSet = false;
    m_by_resource_kind_isValid = false;
}

void OAITemplateExportByID_orgIDs_inner_resourceFilters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITemplateExportByID_orgIDs_inner_resourceFilters::fromJsonObject(QJsonObject json) {

    m_by_label_isValid = ::OpenAPI::fromJsonValue(m_by_label, json[QString("byLabel")]);
    m_by_label_isSet = !json[QString("byLabel")].isNull() && m_by_label_isValid;

    m_by_resource_kind_isValid = ::OpenAPI::fromJsonValue(m_by_resource_kind, json[QString("byResourceKind")]);
    m_by_resource_kind_isSet = !json[QString("byResourceKind")].isNull() && m_by_resource_kind_isValid;
}

QString OAITemplateExportByID_orgIDs_inner_resourceFilters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITemplateExportByID_orgIDs_inner_resourceFilters::asJsonObject() const {
    QJsonObject obj;
    if (m_by_label.size() > 0) {
        obj.insert(QString("byLabel"), ::OpenAPI::toJsonValue(m_by_label));
    }
    if (m_by_resource_kind.size() > 0) {
        obj.insert(QString("byResourceKind"), ::OpenAPI::toJsonValue(m_by_resource_kind));
    }
    return obj;
}

QList<QString> OAITemplateExportByID_orgIDs_inner_resourceFilters::getByLabel() const {
    return m_by_label;
}
void OAITemplateExportByID_orgIDs_inner_resourceFilters::setByLabel(const QList<QString> &by_label) {
    m_by_label = by_label;
    m_by_label_isSet = true;
}

bool OAITemplateExportByID_orgIDs_inner_resourceFilters::is_by_label_Set() const{
    return m_by_label_isSet;
}

bool OAITemplateExportByID_orgIDs_inner_resourceFilters::is_by_label_Valid() const{
    return m_by_label_isValid;
}

QList<OAITemplateKind> OAITemplateExportByID_orgIDs_inner_resourceFilters::getByResourceKind() const {
    return m_by_resource_kind;
}
void OAITemplateExportByID_orgIDs_inner_resourceFilters::setByResourceKind(const QList<OAITemplateKind> &by_resource_kind) {
    m_by_resource_kind = by_resource_kind;
    m_by_resource_kind_isSet = true;
}

bool OAITemplateExportByID_orgIDs_inner_resourceFilters::is_by_resource_kind_Set() const{
    return m_by_resource_kind_isSet;
}

bool OAITemplateExportByID_orgIDs_inner_resourceFilters::is_by_resource_kind_Valid() const{
    return m_by_resource_kind_isValid;
}

bool OAITemplateExportByID_orgIDs_inner_resourceFilters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_by_label.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_by_resource_kind.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITemplateExportByID_orgIDs_inner_resourceFilters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
