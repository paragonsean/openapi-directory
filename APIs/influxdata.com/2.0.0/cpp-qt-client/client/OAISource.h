/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISource.h
 *
 * 
 */

#ifndef OAISource_H
#define OAISource_H

#include <QJsonObject>

#include "OAISource_links.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISource_links;

class OAISource : public OAIObject {
public:
    OAISource();
    OAISource(QString json);
    ~OAISource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isRDefault() const;
    void setRDefault(const bool &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    QString getDefaultRp() const;
    void setDefaultRp(const QString &default_rp);
    bool is_default_rp_Set() const;
    bool is_default_rp_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isInsecureSkipVerify() const;
    void setInsecureSkipVerify(const bool &insecure_skip_verify);
    bool is_insecure_skip_verify_Set() const;
    bool is_insecure_skip_verify_Valid() const;

    QList<QString> getLanguages() const;
    void setLanguages(const QList<QString> &languages);
    bool is_languages_Set() const;
    bool is_languages_Valid() const;

    OAISource_links getLinks() const;
    void setLinks(const OAISource_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getMetaUrl() const;
    void setMetaUrl(const QString &meta_url);
    bool is_meta_url_Set() const;
    bool is_meta_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrgId() const;
    void setOrgId(const QString &org_id);
    bool is_org_id_Set() const;
    bool is_org_id_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getSharedSecret() const;
    void setSharedSecret(const QString &shared_secret);
    bool is_shared_secret_Set() const;
    bool is_shared_secret_Valid() const;

    QString getTelegraf() const;
    void setTelegraf(const QString &telegraf);
    bool is_telegraf_Set() const;
    bool is_telegraf_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    QString m_default_rp;
    bool m_default_rp_isSet;
    bool m_default_rp_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_insecure_skip_verify;
    bool m_insecure_skip_verify_isSet;
    bool m_insecure_skip_verify_isValid;

    QList<QString> m_languages;
    bool m_languages_isSet;
    bool m_languages_isValid;

    OAISource_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_meta_url;
    bool m_meta_url_isSet;
    bool m_meta_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_org_id;
    bool m_org_id_isSet;
    bool m_org_id_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_shared_secret;
    bool m_shared_secret_isSet;
    bool m_shared_secret_isValid;

    QString m_telegraf;
    bool m_telegraf_isSet;
    bool m_telegraf_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISource)

#endif // OAISource_H
