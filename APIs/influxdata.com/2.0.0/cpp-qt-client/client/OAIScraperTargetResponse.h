/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScraperTargetResponse.h
 *
 * 
 */

#ifndef OAIScraperTargetResponse_H
#define OAIScraperTargetResponse_H

#include <QJsonObject>

#include "OAIScraperTargetResponse_allOf_links.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScraperTargetResponse_allOf_links;

class OAIScraperTargetResponse : public OAIObject {
public:
    OAIScraperTargetResponse();
    OAIScraperTargetResponse(QString json);
    ~OAIScraperTargetResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowInsecure() const;
    void setAllowInsecure(const bool &allow_insecure);
    bool is_allow_insecure_Set() const;
    bool is_allow_insecure_Valid() const;

    QString getBucketId() const;
    void setBucketId(const QString &bucket_id);
    bool is_bucket_id_Set() const;
    bool is_bucket_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrgId() const;
    void setOrgId(const QString &org_id);
    bool is_org_id_Set() const;
    bool is_org_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getBucket() const;
    void setBucket(const QString &bucket);
    bool is_bucket_Set() const;
    bool is_bucket_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIScraperTargetResponse_allOf_links getLinks() const;
    void setLinks(const OAIScraperTargetResponse_allOf_links &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getOrg() const;
    void setOrg(const QString &org);
    bool is_org_Set() const;
    bool is_org_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_insecure;
    bool m_allow_insecure_isSet;
    bool m_allow_insecure_isValid;

    QString m_bucket_id;
    bool m_bucket_id_isSet;
    bool m_bucket_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_org_id;
    bool m_org_id_isSet;
    bool m_org_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_bucket;
    bool m_bucket_isSet;
    bool m_bucket_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIScraperTargetResponse_allOf_links m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_org;
    bool m_org_isSet;
    bool m_org_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScraperTargetResponse)

#endif // OAIScraperTargetResponse_H
