/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeoCircleViewLayer.h
 *
 * 
 */

#ifndef OAIGeoCircleViewLayer_H
#define OAIGeoCircleViewLayer_H

#include <QJsonObject>

#include "OAIAxis.h"
#include "OAIDashboardColor.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAxis;
class OAIDashboardColor;

class OAIGeoCircleViewLayer : public OAIObject {
public:
    OAIGeoCircleViewLayer();
    OAIGeoCircleViewLayer(QString json);
    ~OAIGeoCircleViewLayer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIAxis getColorDimension() const;
    void setColorDimension(const OAIAxis &color_dimension);
    bool is_color_dimension_Set() const;
    bool is_color_dimension_Valid() const;

    QString getColorField() const;
    void setColorField(const QString &color_field);
    bool is_color_field_Set() const;
    bool is_color_field_Valid() const;

    QList<OAIDashboardColor> getColors() const;
    void setColors(const QList<OAIDashboardColor> &colors);
    bool is_colors_Set() const;
    bool is_colors_Valid() const;

    bool isInterpolateColors() const;
    void setInterpolateColors(const bool &interpolate_colors);
    bool is_interpolate_colors_Set() const;
    bool is_interpolate_colors_Valid() const;

    qint32 getRadius() const;
    void setRadius(const qint32 &radius);
    bool is_radius_Set() const;
    bool is_radius_Valid() const;

    OAIAxis getRadiusDimension() const;
    void setRadiusDimension(const OAIAxis &radius_dimension);
    bool is_radius_dimension_Set() const;
    bool is_radius_dimension_Valid() const;

    QString getRadiusField() const;
    void setRadiusField(const QString &radius_field);
    bool is_radius_field_Set() const;
    bool is_radius_field_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIAxis m_color_dimension;
    bool m_color_dimension_isSet;
    bool m_color_dimension_isValid;

    QString m_color_field;
    bool m_color_field_isSet;
    bool m_color_field_isValid;

    QList<OAIDashboardColor> m_colors;
    bool m_colors_isSet;
    bool m_colors_isValid;

    bool m_interpolate_colors;
    bool m_interpolate_colors_isSet;
    bool m_interpolate_colors_isValid;

    qint32 m_radius;
    bool m_radius_isSet;
    bool m_radius_isValid;

    OAIAxis m_radius_dimension;
    bool m_radius_dimension_isSet;
    bool m_radius_dimension_isValid;

    QString m_radius_field;
    bool m_radius_field_isSet;
    bool m_radius_field_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeoCircleViewLayer)

#endif // OAIGeoCircleViewLayer_H
