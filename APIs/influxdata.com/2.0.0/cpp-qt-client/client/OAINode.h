/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINode.h
 *
 * 
 */

#ifndef OAINode_H
#define OAINode_H

#include <QJsonObject>

#include "OAIBlock.h"
#include "OAICallExpression.h"
#include "OAIDictItem.h"
#include "OAIDuration.h"
#include "OAIExpression.h"
#include "OAIProperty.h"
#include "OAIPropertyKey.h"
#include "OAIStatement.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDictItem;
class OAIStatement;
class OAIProperty;
class OAIExpression;
class OAIPropertyKey;
class OAICallExpression;
class OAIDuration;

class OAINode : public OAIObject {
public:
    OAINode();
    OAINode(QString json);
    ~OAINode() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDictItem> getElements() const;
    void setElements(const QList<OAIDictItem> &elements);
    bool is_elements_Set() const;
    bool is_elements_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<OAIStatement> getBody() const;
    void setBody(const QList<OAIStatement> &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QList<OAIProperty> getParams() const;
    void setParams(const QList<OAIProperty> &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    OAIExpression getLeft() const;
    void setLeft(const OAIExpression &left);
    bool is_left_Set() const;
    bool is_left_Valid() const;

    QString getROperator() const;
    void setROperator(const QString &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    OAIExpression getRight() const;
    void setRight(const OAIExpression &right);
    bool is_right_Set() const;
    bool is_right_Valid() const;

    QList<OAIExpression> getArguments() const;
    void setArguments(const QList<OAIExpression> &arguments);
    bool is_arguments_Set() const;
    bool is_arguments_Valid() const;

    OAIExpression getCallee() const;
    void setCallee(const OAIExpression &callee);
    bool is_callee_Set() const;
    bool is_callee_Valid() const;

    OAIExpression getAlternate() const;
    void setAlternate(const OAIExpression &alternate);
    bool is_alternate_Set() const;
    bool is_alternate_Valid() const;

    OAIExpression getConsequent() const;
    void setConsequent(const OAIExpression &consequent);
    bool is_consequent_Set() const;
    bool is_consequent_Valid() const;

    OAIExpression getTest() const;
    void setTest(const OAIExpression &test);
    bool is_test_Set() const;
    bool is_test_Valid() const;

    OAIExpression getObject() const;
    void setObject(const OAIExpression &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    OAIPropertyKey getProperty() const;
    void setProperty(const OAIPropertyKey &property);
    bool is_property_Set() const;
    bool is_property_Valid() const;

    OAIExpression getArray() const;
    void setArray(const OAIExpression &array);
    bool is_array_Set() const;
    bool is_array_Valid() const;

    OAIExpression getIndex() const;
    void setIndex(const OAIExpression &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    QList<OAIProperty> getProperties() const;
    void setProperties(const QList<OAIProperty> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    OAIExpression getExpression() const;
    void setExpression(const OAIExpression &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    OAIExpression getArgument() const;
    void setArgument(const OAIExpression &argument);
    bool is_argument_Set() const;
    bool is_argument_Valid() const;

    OAICallExpression getCall() const;
    void setCall(const OAICallExpression &call);
    bool is_call_Set() const;
    bool is_call_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    QList<OAIDuration> getValues() const;
    void setValues(const QList<OAIDuration> &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDictItem> m_elements;
    bool m_elements_isSet;
    bool m_elements_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<OAIStatement> m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QList<OAIProperty> m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    OAIExpression m_left;
    bool m_left_isSet;
    bool m_left_isValid;

    QString m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    OAIExpression m_right;
    bool m_right_isSet;
    bool m_right_isValid;

    QList<OAIExpression> m_arguments;
    bool m_arguments_isSet;
    bool m_arguments_isValid;

    OAIExpression m_callee;
    bool m_callee_isSet;
    bool m_callee_isValid;

    OAIExpression m_alternate;
    bool m_alternate_isSet;
    bool m_alternate_isValid;

    OAIExpression m_consequent;
    bool m_consequent_isSet;
    bool m_consequent_isValid;

    OAIExpression m_test;
    bool m_test_isSet;
    bool m_test_isValid;

    OAIExpression m_object;
    bool m_object_isSet;
    bool m_object_isValid;

    OAIPropertyKey m_property;
    bool m_property_isSet;
    bool m_property_isValid;

    OAIExpression m_array;
    bool m_array_isSet;
    bool m_array_isValid;

    OAIExpression m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    QList<OAIProperty> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    OAIExpression m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    OAIExpression m_argument;
    bool m_argument_isSet;
    bool m_argument_isValid;

    OAICallExpression m_call;
    bool m_call_isSet;
    bool m_call_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    QList<OAIDuration> m_values;
    bool m_values_isSet;
    bool m_values_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINode)

#endif // OAINode_H
