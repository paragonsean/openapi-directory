/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConditionalExpression.h
 *
 * Selects one of two expressions, &#x60;Alternate&#x60; or &#x60;Consequent&#x60;, depending on a third boolean expression, &#x60;Test&#x60;
 */

#ifndef OAIConditionalExpression_H
#define OAIConditionalExpression_H

#include <QJsonObject>

#include "OAIExpression.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExpression;

class OAIConditionalExpression : public OAIObject {
public:
    OAIConditionalExpression();
    OAIConditionalExpression(QString json);
    ~OAIConditionalExpression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExpression getAlternate() const;
    void setAlternate(const OAIExpression &alternate);
    bool is_alternate_Set() const;
    bool is_alternate_Valid() const;

    OAIExpression getConsequent() const;
    void setConsequent(const OAIExpression &consequent);
    bool is_consequent_Set() const;
    bool is_consequent_Valid() const;

    OAIExpression getTest() const;
    void setTest(const OAIExpression &test);
    bool is_test_Set() const;
    bool is_test_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExpression m_alternate;
    bool m_alternate_isSet;
    bool m_alternate_isValid;

    OAIExpression m_consequent;
    bool m_consequent_isSet;
    bool m_consequent_isValid;

    OAIExpression m_test;
    bool m_test_isSet;
    bool m_test_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConditionalExpression)

#endif // OAIConditionalExpression_H
