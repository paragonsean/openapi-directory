/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScatterViewProperties.h
 *
 * 
 */

#ifndef OAIScatterViewProperties_H
#define OAIScatterViewProperties_H

#include <QJsonObject>

#include "OAIDashboardQuery.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDashboardQuery;

class OAIScatterViewProperties : public OAIObject {
public:
    OAIScatterViewProperties();
    OAIScatterViewProperties(QString json);
    ~OAIScatterViewProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getColors() const;
    void setColors(const QList<QString> &colors);
    bool is_colors_Set() const;
    bool is_colors_Valid() const;

    QList<QString> getFillColumns() const;
    void setFillColumns(const QList<QString> &fill_columns);
    bool is_fill_columns_Set() const;
    bool is_fill_columns_Valid() const;

    QList<QString> getGenerateXAxisTicks() const;
    void setGenerateXAxisTicks(const QList<QString> &generate_x_axis_ticks);
    bool is_generate_x_axis_ticks_Set() const;
    bool is_generate_x_axis_ticks_Valid() const;

    QList<QString> getGenerateYAxisTicks() const;
    void setGenerateYAxisTicks(const QList<QString> &generate_y_axis_ticks);
    bool is_generate_y_axis_ticks_Set() const;
    bool is_generate_y_axis_ticks_Valid() const;

    bool isLegendColorizeRows() const;
    void setLegendColorizeRows(const bool &legend_colorize_rows);
    bool is_legend_colorize_rows_Set() const;
    bool is_legend_colorize_rows_Valid() const;

    bool isLegendHide() const;
    void setLegendHide(const bool &legend_hide);
    bool is_legend_hide_Set() const;
    bool is_legend_hide_Valid() const;

    float getLegendOpacity() const;
    void setLegendOpacity(const float &legend_opacity);
    bool is_legend_opacity_Set() const;
    bool is_legend_opacity_Valid() const;

    qint32 getLegendOrientationThreshold() const;
    void setLegendOrientationThreshold(const qint32 &legend_orientation_threshold);
    bool is_legend_orientation_threshold_Set() const;
    bool is_legend_orientation_threshold_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QList<OAIDashboardQuery> getQueries() const;
    void setQueries(const QList<OAIDashboardQuery> &queries);
    bool is_queries_Set() const;
    bool is_queries_Valid() const;

    QString getShape() const;
    void setShape(const QString &shape);
    bool is_shape_Set() const;
    bool is_shape_Valid() const;

    bool isShowNoteWhenEmpty() const;
    void setShowNoteWhenEmpty(const bool &show_note_when_empty);
    bool is_show_note_when_empty_Set() const;
    bool is_show_note_when_empty_Valid() const;

    QList<QString> getSymbolColumns() const;
    void setSymbolColumns(const QList<QString> &symbol_columns);
    bool is_symbol_columns_Set() const;
    bool is_symbol_columns_Valid() const;

    QString getTimeFormat() const;
    void setTimeFormat(const QString &time_format);
    bool is_time_format_Set() const;
    bool is_time_format_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getXAxisLabel() const;
    void setXAxisLabel(const QString &x_axis_label);
    bool is_x_axis_label_Set() const;
    bool is_x_axis_label_Valid() const;

    QString getXColumn() const;
    void setXColumn(const QString &x_column);
    bool is_x_column_Set() const;
    bool is_x_column_Valid() const;

    QList<double> getXDomain() const;
    void setXDomain(const QList<double> &x_domain);
    bool is_x_domain_Set() const;
    bool is_x_domain_Valid() const;

    QString getXPrefix() const;
    void setXPrefix(const QString &x_prefix);
    bool is_x_prefix_Set() const;
    bool is_x_prefix_Valid() const;

    QString getXSuffix() const;
    void setXSuffix(const QString &x_suffix);
    bool is_x_suffix_Set() const;
    bool is_x_suffix_Valid() const;

    float getXTickStart() const;
    void setXTickStart(const float &x_tick_start);
    bool is_x_tick_start_Set() const;
    bool is_x_tick_start_Valid() const;

    float getXTickStep() const;
    void setXTickStep(const float &x_tick_step);
    bool is_x_tick_step_Set() const;
    bool is_x_tick_step_Valid() const;

    qint32 getXTotalTicks() const;
    void setXTotalTicks(const qint32 &x_total_ticks);
    bool is_x_total_ticks_Set() const;
    bool is_x_total_ticks_Valid() const;

    QString getYAxisLabel() const;
    void setYAxisLabel(const QString &y_axis_label);
    bool is_y_axis_label_Set() const;
    bool is_y_axis_label_Valid() const;

    QString getYColumn() const;
    void setYColumn(const QString &y_column);
    bool is_y_column_Set() const;
    bool is_y_column_Valid() const;

    QList<double> getYDomain() const;
    void setYDomain(const QList<double> &y_domain);
    bool is_y_domain_Set() const;
    bool is_y_domain_Valid() const;

    QString getYPrefix() const;
    void setYPrefix(const QString &y_prefix);
    bool is_y_prefix_Set() const;
    bool is_y_prefix_Valid() const;

    QString getYSuffix() const;
    void setYSuffix(const QString &y_suffix);
    bool is_y_suffix_Set() const;
    bool is_y_suffix_Valid() const;

    float getYTickStart() const;
    void setYTickStart(const float &y_tick_start);
    bool is_y_tick_start_Set() const;
    bool is_y_tick_start_Valid() const;

    float getYTickStep() const;
    void setYTickStep(const float &y_tick_step);
    bool is_y_tick_step_Set() const;
    bool is_y_tick_step_Valid() const;

    qint32 getYTotalTicks() const;
    void setYTotalTicks(const qint32 &y_total_ticks);
    bool is_y_total_ticks_Set() const;
    bool is_y_total_ticks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_colors;
    bool m_colors_isSet;
    bool m_colors_isValid;

    QList<QString> m_fill_columns;
    bool m_fill_columns_isSet;
    bool m_fill_columns_isValid;

    QList<QString> m_generate_x_axis_ticks;
    bool m_generate_x_axis_ticks_isSet;
    bool m_generate_x_axis_ticks_isValid;

    QList<QString> m_generate_y_axis_ticks;
    bool m_generate_y_axis_ticks_isSet;
    bool m_generate_y_axis_ticks_isValid;

    bool m_legend_colorize_rows;
    bool m_legend_colorize_rows_isSet;
    bool m_legend_colorize_rows_isValid;

    bool m_legend_hide;
    bool m_legend_hide_isSet;
    bool m_legend_hide_isValid;

    float m_legend_opacity;
    bool m_legend_opacity_isSet;
    bool m_legend_opacity_isValid;

    qint32 m_legend_orientation_threshold;
    bool m_legend_orientation_threshold_isSet;
    bool m_legend_orientation_threshold_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QList<OAIDashboardQuery> m_queries;
    bool m_queries_isSet;
    bool m_queries_isValid;

    QString m_shape;
    bool m_shape_isSet;
    bool m_shape_isValid;

    bool m_show_note_when_empty;
    bool m_show_note_when_empty_isSet;
    bool m_show_note_when_empty_isValid;

    QList<QString> m_symbol_columns;
    bool m_symbol_columns_isSet;
    bool m_symbol_columns_isValid;

    QString m_time_format;
    bool m_time_format_isSet;
    bool m_time_format_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_x_axis_label;
    bool m_x_axis_label_isSet;
    bool m_x_axis_label_isValid;

    QString m_x_column;
    bool m_x_column_isSet;
    bool m_x_column_isValid;

    QList<double> m_x_domain;
    bool m_x_domain_isSet;
    bool m_x_domain_isValid;

    QString m_x_prefix;
    bool m_x_prefix_isSet;
    bool m_x_prefix_isValid;

    QString m_x_suffix;
    bool m_x_suffix_isSet;
    bool m_x_suffix_isValid;

    float m_x_tick_start;
    bool m_x_tick_start_isSet;
    bool m_x_tick_start_isValid;

    float m_x_tick_step;
    bool m_x_tick_step_isSet;
    bool m_x_tick_step_isValid;

    qint32 m_x_total_ticks;
    bool m_x_total_ticks_isSet;
    bool m_x_total_ticks_isValid;

    QString m_y_axis_label;
    bool m_y_axis_label_isSet;
    bool m_y_axis_label_isValid;

    QString m_y_column;
    bool m_y_column_isSet;
    bool m_y_column_isValid;

    QList<double> m_y_domain;
    bool m_y_domain_isSet;
    bool m_y_domain_isValid;

    QString m_y_prefix;
    bool m_y_prefix_isSet;
    bool m_y_prefix_isValid;

    QString m_y_suffix;
    bool m_y_suffix_isSet;
    bool m_y_suffix_isValid;

    float m_y_tick_start;
    bool m_y_tick_start_isSet;
    bool m_y_tick_start_isValid;

    float m_y_tick_step;
    bool m_y_tick_step_isSet;
    bool m_y_tick_step_isValid;

    qint32 m_y_total_ticks;
    bool m_y_total_ticks_isSet;
    bool m_y_total_ticks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScatterViewProperties)

#endif // OAIScatterViewProperties_H
