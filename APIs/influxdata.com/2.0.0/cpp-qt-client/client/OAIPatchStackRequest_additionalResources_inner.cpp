/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPatchStackRequest_additionalResources_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPatchStackRequest_additionalResources_inner::OAIPatchStackRequest_additionalResources_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPatchStackRequest_additionalResources_inner::OAIPatchStackRequest_additionalResources_inner() {
    this->initializeModel();
}

OAIPatchStackRequest_additionalResources_inner::~OAIPatchStackRequest_additionalResources_inner() {}

void OAIPatchStackRequest_additionalResources_inner::initializeModel() {

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;

    m_template_meta_name_isSet = false;
    m_template_meta_name_isValid = false;
}

void OAIPatchStackRequest_additionalResources_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPatchStackRequest_additionalResources_inner::fromJsonObject(QJsonObject json) {

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("resourceID")]);
    m_resource_id_isSet = !json[QString("resourceID")].isNull() && m_resource_id_isValid;

    m_template_meta_name_isValid = ::OpenAPI::fromJsonValue(m_template_meta_name, json[QString("templateMetaName")]);
    m_template_meta_name_isSet = !json[QString("templateMetaName")].isNull() && m_template_meta_name_isValid;
}

QString OAIPatchStackRequest_additionalResources_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPatchStackRequest_additionalResources_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_resource_id_isSet) {
        obj.insert(QString("resourceID"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    if (m_template_meta_name_isSet) {
        obj.insert(QString("templateMetaName"), ::OpenAPI::toJsonValue(m_template_meta_name));
    }
    return obj;
}

QString OAIPatchStackRequest_additionalResources_inner::getKind() const {
    return m_kind;
}
void OAIPatchStackRequest_additionalResources_inner::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIPatchStackRequest_additionalResources_inner::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIPatchStackRequest_additionalResources_inner::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIPatchStackRequest_additionalResources_inner::getResourceId() const {
    return m_resource_id;
}
void OAIPatchStackRequest_additionalResources_inner::setResourceId(const QString &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAIPatchStackRequest_additionalResources_inner::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAIPatchStackRequest_additionalResources_inner::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

QString OAIPatchStackRequest_additionalResources_inner::getTemplateMetaName() const {
    return m_template_meta_name;
}
void OAIPatchStackRequest_additionalResources_inner::setTemplateMetaName(const QString &template_meta_name) {
    m_template_meta_name = template_meta_name;
    m_template_meta_name_isSet = true;
}

bool OAIPatchStackRequest_additionalResources_inner::is_template_meta_name_Set() const{
    return m_template_meta_name_isSet;
}

bool OAIPatchStackRequest_additionalResources_inner::is_template_meta_name_Valid() const{
    return m_template_meta_name_isValid;
}

bool OAIPatchStackRequest_additionalResources_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_meta_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPatchStackRequest_additionalResources_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_kind_isValid && m_resource_id_isValid && true;
}

} // namespace OpenAPI
