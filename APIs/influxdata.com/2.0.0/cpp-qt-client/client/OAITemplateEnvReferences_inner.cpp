/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITemplateEnvReferences_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITemplateEnvReferences_inner::OAITemplateEnvReferences_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITemplateEnvReferences_inner::OAITemplateEnvReferences_inner() {
    this->initializeModel();
}

OAITemplateEnvReferences_inner::~OAITemplateEnvReferences_inner() {}

void OAITemplateEnvReferences_inner::initializeModel() {

    m_default_value_isSet = false;
    m_default_value_isValid = false;

    m_env_ref_key_isSet = false;
    m_env_ref_key_isValid = false;

    m_resource_field_isSet = false;
    m_resource_field_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAITemplateEnvReferences_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITemplateEnvReferences_inner::fromJsonObject(QJsonObject json) {

    m_default_value_isValid = ::OpenAPI::fromJsonValue(m_default_value, json[QString("defaultValue")]);
    m_default_value_isSet = !json[QString("defaultValue")].isNull() && m_default_value_isValid;

    m_env_ref_key_isValid = ::OpenAPI::fromJsonValue(m_env_ref_key, json[QString("envRefKey")]);
    m_env_ref_key_isSet = !json[QString("envRefKey")].isNull() && m_env_ref_key_isValid;

    m_resource_field_isValid = ::OpenAPI::fromJsonValue(m_resource_field, json[QString("resourceField")]);
    m_resource_field_isSet = !json[QString("resourceField")].isNull() && m_resource_field_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAITemplateEnvReferences_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITemplateEnvReferences_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_default_value.isSet()) {
        obj.insert(QString("defaultValue"), ::OpenAPI::toJsonValue(m_default_value));
    }
    if (m_env_ref_key_isSet) {
        obj.insert(QString("envRefKey"), ::OpenAPI::toJsonValue(m_env_ref_key));
    }
    if (m_resource_field_isSet) {
        obj.insert(QString("resourceField"), ::OpenAPI::toJsonValue(m_resource_field));
    }
    if (m_value.isSet()) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

OAITemplateEnvReferences_inner_defaultValue OAITemplateEnvReferences_inner::getDefaultValue() const {
    return m_default_value;
}
void OAITemplateEnvReferences_inner::setDefaultValue(const OAITemplateEnvReferences_inner_defaultValue &default_value) {
    m_default_value = default_value;
    m_default_value_isSet = true;
}

bool OAITemplateEnvReferences_inner::is_default_value_Set() const{
    return m_default_value_isSet;
}

bool OAITemplateEnvReferences_inner::is_default_value_Valid() const{
    return m_default_value_isValid;
}

QString OAITemplateEnvReferences_inner::getEnvRefKey() const {
    return m_env_ref_key;
}
void OAITemplateEnvReferences_inner::setEnvRefKey(const QString &env_ref_key) {
    m_env_ref_key = env_ref_key;
    m_env_ref_key_isSet = true;
}

bool OAITemplateEnvReferences_inner::is_env_ref_key_Set() const{
    return m_env_ref_key_isSet;
}

bool OAITemplateEnvReferences_inner::is_env_ref_key_Valid() const{
    return m_env_ref_key_isValid;
}

QString OAITemplateEnvReferences_inner::getResourceField() const {
    return m_resource_field;
}
void OAITemplateEnvReferences_inner::setResourceField(const QString &resource_field) {
    m_resource_field = resource_field;
    m_resource_field_isSet = true;
}

bool OAITemplateEnvReferences_inner::is_resource_field_Set() const{
    return m_resource_field_isSet;
}

bool OAITemplateEnvReferences_inner::is_resource_field_Valid() const{
    return m_resource_field_isValid;
}

OAITemplateEnvReferences_inner_value OAITemplateEnvReferences_inner::getValue() const {
    return m_value;
}
void OAITemplateEnvReferences_inner::setValue(const OAITemplateEnvReferences_inner_value &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAITemplateEnvReferences_inner::is_value_Set() const{
    return m_value_isSet;
}

bool OAITemplateEnvReferences_inner::is_value_Valid() const{
    return m_value_isValid;
}

bool OAITemplateEnvReferences_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_env_ref_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITemplateEnvReferences_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_env_ref_key_isValid && m_resource_field_isValid && true;
}

} // namespace OpenAPI
