/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeoHeatMapViewLayer.h
 *
 * 
 */

#ifndef OAIGeoHeatMapViewLayer_H
#define OAIGeoHeatMapViewLayer_H

#include <QJsonObject>

#include "OAIAxis.h"
#include "OAIDashboardColor.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDashboardColor;
class OAIAxis;

class OAIGeoHeatMapViewLayer : public OAIObject {
public:
    OAIGeoHeatMapViewLayer();
    OAIGeoHeatMapViewLayer(QString json);
    ~OAIGeoHeatMapViewLayer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getBlur() const;
    void setBlur(const qint32 &blur);
    bool is_blur_Set() const;
    bool is_blur_Valid() const;

    QList<OAIDashboardColor> getColors() const;
    void setColors(const QList<OAIDashboardColor> &colors);
    bool is_colors_Set() const;
    bool is_colors_Valid() const;

    OAIAxis getIntensityDimension() const;
    void setIntensityDimension(const OAIAxis &intensity_dimension);
    bool is_intensity_dimension_Set() const;
    bool is_intensity_dimension_Valid() const;

    QString getIntensityField() const;
    void setIntensityField(const QString &intensity_field);
    bool is_intensity_field_Set() const;
    bool is_intensity_field_Valid() const;

    qint32 getRadius() const;
    void setRadius(const qint32 &radius);
    bool is_radius_Set() const;
    bool is_radius_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_blur;
    bool m_blur_isSet;
    bool m_blur_isValid;

    QList<OAIDashboardColor> m_colors;
    bool m_colors_isSet;
    bool m_colors_isValid;

    OAIAxis m_intensity_dimension;
    bool m_intensity_dimension_isSet;
    bool m_intensity_dimension_isValid;

    QString m_intensity_field;
    bool m_intensity_field_isSet;
    bool m_intensity_field_isValid;

    qint32 m_radius;
    bool m_radius_isSet;
    bool m_radius_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeoHeatMapViewLayer)

#endif // OAIGeoHeatMapViewLayer_H
