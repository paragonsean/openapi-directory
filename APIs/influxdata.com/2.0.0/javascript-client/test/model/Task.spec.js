/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InfluxOssApiService);
  }
}(this, function(expect, InfluxOssApiService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InfluxOssApiService.Task();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Task', function() {
    it('should create an instance of Task', function() {
      // uncomment below and update the code to test Task
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be.a(InfluxOssApiService.Task);
    });

    it('should have the property authorizationID (base name: "authorizationID")', function() {
      // uncomment below and update the code to test the property authorizationID
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property cron (base name: "cron")', function() {
      // uncomment below and update the code to test the property cron
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property every (base name: "every")', function() {
      // uncomment below and update the code to test the property every
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property flux (base name: "flux")', function() {
      // uncomment below and update the code to test the property flux
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property lastRunError (base name: "lastRunError")', function() {
      // uncomment below and update the code to test the property lastRunError
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property lastRunStatus (base name: "lastRunStatus")', function() {
      // uncomment below and update the code to test the property lastRunStatus
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property latestCompleted (base name: "latestCompleted")', function() {
      // uncomment below and update the code to test the property latestCompleted
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property offset (base name: "offset")', function() {
      // uncomment below and update the code to test the property offset
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property org (base name: "org")', function() {
      // uncomment below and update the code to test the property org
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property orgID (base name: "orgID")', function() {
      // uncomment below and update the code to test the property orgID
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new InfluxOssApiService.Task();
      //expect(instance).to.be();
    });

  });

}));
