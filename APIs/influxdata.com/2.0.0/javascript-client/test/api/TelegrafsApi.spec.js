/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InfluxOssApiService);
  }
}(this, function(expect, InfluxOssApiService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InfluxOssApiService.TelegrafsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TelegrafsApi', function() {
    describe('deleteTelegrafsID', function() {
      it('should call deleteTelegrafsID successfully', function(done) {
        //uncomment below and update the code to test deleteTelegrafsID
        //instance.deleteTelegrafsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTelegrafsIDLabelsID', function() {
      it('should call deleteTelegrafsIDLabelsID successfully', function(done) {
        //uncomment below and update the code to test deleteTelegrafsIDLabelsID
        //instance.deleteTelegrafsIDLabelsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTelegrafsIDMembersID', function() {
      it('should call deleteTelegrafsIDMembersID successfully', function(done) {
        //uncomment below and update the code to test deleteTelegrafsIDMembersID
        //instance.deleteTelegrafsIDMembersID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTelegrafsIDOwnersID', function() {
      it('should call deleteTelegrafsIDOwnersID successfully', function(done) {
        //uncomment below and update the code to test deleteTelegrafsIDOwnersID
        //instance.deleteTelegrafsIDOwnersID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTelegrafs', function() {
      it('should call getTelegrafs successfully', function(done) {
        //uncomment below and update the code to test getTelegrafs
        //instance.getTelegrafs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTelegrafsID', function() {
      it('should call getTelegrafsID successfully', function(done) {
        //uncomment below and update the code to test getTelegrafsID
        //instance.getTelegrafsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTelegrafsIDLabels', function() {
      it('should call getTelegrafsIDLabels successfully', function(done) {
        //uncomment below and update the code to test getTelegrafsIDLabels
        //instance.getTelegrafsIDLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTelegrafsIDMembers', function() {
      it('should call getTelegrafsIDMembers successfully', function(done) {
        //uncomment below and update the code to test getTelegrafsIDMembers
        //instance.getTelegrafsIDMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTelegrafsIDOwners', function() {
      it('should call getTelegrafsIDOwners successfully', function(done) {
        //uncomment below and update the code to test getTelegrafsIDOwners
        //instance.getTelegrafsIDOwners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTelegrafs', function() {
      it('should call postTelegrafs successfully', function(done) {
        //uncomment below and update the code to test postTelegrafs
        //instance.postTelegrafs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTelegrafsIDLabels', function() {
      it('should call postTelegrafsIDLabels successfully', function(done) {
        //uncomment below and update the code to test postTelegrafsIDLabels
        //instance.postTelegrafsIDLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTelegrafsIDMembers', function() {
      it('should call postTelegrafsIDMembers successfully', function(done) {
        //uncomment below and update the code to test postTelegrafsIDMembers
        //instance.postTelegrafsIDMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTelegrafsIDOwners', function() {
      it('should call postTelegrafsIDOwners successfully', function(done) {
        //uncomment below and update the code to test postTelegrafsIDOwners
        //instance.postTelegrafsIDOwners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putTelegrafsID', function() {
      it('should call putTelegrafsID successfully', function(done) {
        //uncomment below and update the code to test putTelegrafsID
        //instance.putTelegrafsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
