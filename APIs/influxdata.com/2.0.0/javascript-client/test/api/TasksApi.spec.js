/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InfluxOssApiService);
  }
}(this, function(expect, InfluxOssApiService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InfluxOssApiService.TasksApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TasksApi', function() {
    describe('deleteTasksID', function() {
      it('should call deleteTasksID successfully', function(done) {
        //uncomment below and update the code to test deleteTasksID
        //instance.deleteTasksID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTasksIDLabelsID', function() {
      it('should call deleteTasksIDLabelsID successfully', function(done) {
        //uncomment below and update the code to test deleteTasksIDLabelsID
        //instance.deleteTasksIDLabelsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTasksIDMembersID', function() {
      it('should call deleteTasksIDMembersID successfully', function(done) {
        //uncomment below and update the code to test deleteTasksIDMembersID
        //instance.deleteTasksIDMembersID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTasksIDOwnersID', function() {
      it('should call deleteTasksIDOwnersID successfully', function(done) {
        //uncomment below and update the code to test deleteTasksIDOwnersID
        //instance.deleteTasksIDOwnersID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTasksIDRunsID', function() {
      it('should call deleteTasksIDRunsID successfully', function(done) {
        //uncomment below and update the code to test deleteTasksIDRunsID
        //instance.deleteTasksIDRunsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTasks', function() {
      it('should call getTasks successfully', function(done) {
        //uncomment below and update the code to test getTasks
        //instance.getTasks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTasksID', function() {
      it('should call getTasksID successfully', function(done) {
        //uncomment below and update the code to test getTasksID
        //instance.getTasksID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTasksIDLabels', function() {
      it('should call getTasksIDLabels successfully', function(done) {
        //uncomment below and update the code to test getTasksIDLabels
        //instance.getTasksIDLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTasksIDLogs', function() {
      it('should call getTasksIDLogs successfully', function(done) {
        //uncomment below and update the code to test getTasksIDLogs
        //instance.getTasksIDLogs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTasksIDMembers', function() {
      it('should call getTasksIDMembers successfully', function(done) {
        //uncomment below and update the code to test getTasksIDMembers
        //instance.getTasksIDMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTasksIDOwners', function() {
      it('should call getTasksIDOwners successfully', function(done) {
        //uncomment below and update the code to test getTasksIDOwners
        //instance.getTasksIDOwners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTasksIDRuns', function() {
      it('should call getTasksIDRuns successfully', function(done) {
        //uncomment below and update the code to test getTasksIDRuns
        //instance.getTasksIDRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTasksIDRunsID', function() {
      it('should call getTasksIDRunsID successfully', function(done) {
        //uncomment below and update the code to test getTasksIDRunsID
        //instance.getTasksIDRunsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTasksIDRunsIDLogs', function() {
      it('should call getTasksIDRunsIDLogs successfully', function(done) {
        //uncomment below and update the code to test getTasksIDRunsIDLogs
        //instance.getTasksIDRunsIDLogs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchTasksID', function() {
      it('should call patchTasksID successfully', function(done) {
        //uncomment below and update the code to test patchTasksID
        //instance.patchTasksID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTasks', function() {
      it('should call postTasks successfully', function(done) {
        //uncomment below and update the code to test postTasks
        //instance.postTasks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTasksIDLabels', function() {
      it('should call postTasksIDLabels successfully', function(done) {
        //uncomment below and update the code to test postTasksIDLabels
        //instance.postTasksIDLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTasksIDMembers', function() {
      it('should call postTasksIDMembers successfully', function(done) {
        //uncomment below and update the code to test postTasksIDMembers
        //instance.postTasksIDMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTasksIDOwners', function() {
      it('should call postTasksIDOwners successfully', function(done) {
        //uncomment below and update the code to test postTasksIDOwners
        //instance.postTasksIDOwners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTasksIDRuns', function() {
      it('should call postTasksIDRuns successfully', function(done) {
        //uncomment below and update the code to test postTasksIDRuns
        //instance.postTasksIDRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTasksIDRunsIDRetry', function() {
      it('should call postTasksIDRunsIDRetry successfully', function(done) {
        //uncomment below and update the code to test postTasksIDRunsIDRetry
        //instance.postTasksIDRunsIDRetry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
