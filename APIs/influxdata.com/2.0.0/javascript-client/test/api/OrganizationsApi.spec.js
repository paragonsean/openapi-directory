/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InfluxOssApiService);
  }
}(this, function(expect, InfluxOssApiService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InfluxOssApiService.OrganizationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganizationsApi', function() {
    describe('deleteOrgsID', function() {
      it('should call deleteOrgsID successfully', function(done) {
        //uncomment below and update the code to test deleteOrgsID
        //instance.deleteOrgsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrgsIDMembersID', function() {
      it('should call deleteOrgsIDMembersID successfully', function(done) {
        //uncomment below and update the code to test deleteOrgsIDMembersID
        //instance.deleteOrgsIDMembersID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrgsIDOwnersID', function() {
      it('should call deleteOrgsIDOwnersID successfully', function(done) {
        //uncomment below and update the code to test deleteOrgsIDOwnersID
        //instance.deleteOrgsIDOwnersID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrgs', function() {
      it('should call getOrgs successfully', function(done) {
        //uncomment below and update the code to test getOrgs
        //instance.getOrgs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrgsID', function() {
      it('should call getOrgsID successfully', function(done) {
        //uncomment below and update the code to test getOrgsID
        //instance.getOrgsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrgsIDMembers', function() {
      it('should call getOrgsIDMembers successfully', function(done) {
        //uncomment below and update the code to test getOrgsIDMembers
        //instance.getOrgsIDMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrgsIDOwners', function() {
      it('should call getOrgsIDOwners successfully', function(done) {
        //uncomment below and update the code to test getOrgsIDOwners
        //instance.getOrgsIDOwners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrgsIDSecrets_0', function() {
      it('should call getOrgsIDSecrets_0 successfully', function(done) {
        //uncomment below and update the code to test getOrgsIDSecrets_0
        //instance.getOrgsIDSecrets_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchOrgsID', function() {
      it('should call patchOrgsID successfully', function(done) {
        //uncomment below and update the code to test patchOrgsID
        //instance.patchOrgsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchOrgsIDSecrets_0', function() {
      it('should call patchOrgsIDSecrets_0 successfully', function(done) {
        //uncomment below and update the code to test patchOrgsIDSecrets_0
        //instance.patchOrgsIDSecrets_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOrgs', function() {
      it('should call postOrgs successfully', function(done) {
        //uncomment below and update the code to test postOrgs
        //instance.postOrgs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOrgsIDMembers', function() {
      it('should call postOrgsIDMembers successfully', function(done) {
        //uncomment below and update the code to test postOrgsIDMembers
        //instance.postOrgsIDMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOrgsIDOwners', function() {
      it('should call postOrgsIDOwners successfully', function(done) {
        //uncomment below and update the code to test postOrgsIDOwners
        //instance.postOrgsIDOwners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postOrgsIDSecrets_0', function() {
      it('should call postOrgsIDSecrets_0 successfully', function(done) {
        //uncomment below and update the code to test postOrgsIDSecrets_0
        //instance.postOrgsIDSecrets_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
