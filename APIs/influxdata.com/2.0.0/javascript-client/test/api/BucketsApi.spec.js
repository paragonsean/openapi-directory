/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InfluxOssApiService);
  }
}(this, function(expect, InfluxOssApiService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InfluxOssApiService.BucketsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BucketsApi', function() {
    describe('deleteBucketsID', function() {
      it('should call deleteBucketsID successfully', function(done) {
        //uncomment below and update the code to test deleteBucketsID
        //instance.deleteBucketsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBucketsIDLabelsID', function() {
      it('should call deleteBucketsIDLabelsID successfully', function(done) {
        //uncomment below and update the code to test deleteBucketsIDLabelsID
        //instance.deleteBucketsIDLabelsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBucketsIDMembersID', function() {
      it('should call deleteBucketsIDMembersID successfully', function(done) {
        //uncomment below and update the code to test deleteBucketsIDMembersID
        //instance.deleteBucketsIDMembersID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBucketsIDOwnersID', function() {
      it('should call deleteBucketsIDOwnersID successfully', function(done) {
        //uncomment below and update the code to test deleteBucketsIDOwnersID
        //instance.deleteBucketsIDOwnersID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBuckets', function() {
      it('should call getBuckets successfully', function(done) {
        //uncomment below and update the code to test getBuckets
        //instance.getBuckets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucketsID', function() {
      it('should call getBucketsID successfully', function(done) {
        //uncomment below and update the code to test getBucketsID
        //instance.getBucketsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucketsIDLabels', function() {
      it('should call getBucketsIDLabels successfully', function(done) {
        //uncomment below and update the code to test getBucketsIDLabels
        //instance.getBucketsIDLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucketsIDMembers', function() {
      it('should call getBucketsIDMembers successfully', function(done) {
        //uncomment below and update the code to test getBucketsIDMembers
        //instance.getBucketsIDMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucketsIDOwners', function() {
      it('should call getBucketsIDOwners successfully', function(done) {
        //uncomment below and update the code to test getBucketsIDOwners
        //instance.getBucketsIDOwners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSourcesIDBuckets_0', function() {
      it('should call getSourcesIDBuckets_0 successfully', function(done) {
        //uncomment below and update the code to test getSourcesIDBuckets_0
        //instance.getSourcesIDBuckets_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchBucketsID', function() {
      it('should call patchBucketsID successfully', function(done) {
        //uncomment below and update the code to test patchBucketsID
        //instance.patchBucketsID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postBuckets', function() {
      it('should call postBuckets successfully', function(done) {
        //uncomment below and update the code to test postBuckets
        //instance.postBuckets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postBucketsIDLabels', function() {
      it('should call postBucketsIDLabels successfully', function(done) {
        //uncomment below and update the code to test postBucketsIDLabels
        //instance.postBucketsIDLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postBucketsIDMembers', function() {
      it('should call postBucketsIDMembers successfully', function(done) {
        //uncomment below and update the code to test postBucketsIDMembers
        //instance.postBucketsIDMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postBucketsIDOwners', function() {
      it('should call postBucketsIDOwners successfully', function(done) {
        //uncomment below and update the code to test postBucketsIDOwners
        //instance.postBucketsIDOwners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
