/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TemplateInnerMeta from './TemplateInnerMeta';
import TemplateKind from './TemplateKind';

/**
 * The TemplateInner model module.
 * @module model/TemplateInner
 * @version 2.0.0
 */
class TemplateInner {
    /**
     * Constructs a new <code>TemplateInner</code>.
     * @alias module:model/TemplateInner
     */
    constructor() { 
        
        TemplateInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TemplateInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemplateInner} obj Optional instance to populate.
     * @return {module:model/TemplateInner} The populated <code>TemplateInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TemplateInner();

            if (data.hasOwnProperty('apiVersion')) {
                obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = TemplateKind.constructFromObject(data['kind']);
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = TemplateInnerMeta.constructFromObject(data['meta']);
            }
            if (data.hasOwnProperty('spec')) {
                obj['spec'] = ApiClient.convertToType(data['spec'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TemplateInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemplateInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apiVersion'] && !(typeof data['apiVersion'] === 'string' || data['apiVersion'] instanceof String)) {
            throw new Error("Expected the field `apiVersion` to be a primitive type in the JSON string but got " + data['apiVersion']);
        }
        // validate the optional field `meta`
        if (data['meta']) { // data not null
          TemplateInnerMeta.validateJSON(data['meta']);
        }

        return true;
    }


}



/**
 * @member {String} apiVersion
 */
TemplateInner.prototype['apiVersion'] = undefined;

/**
 * @member {module:model/TemplateKind} kind
 */
TemplateInner.prototype['kind'] = undefined;

/**
 * @member {module:model/TemplateInnerMeta} meta
 */
TemplateInner.prototype['meta'] = undefined;

/**
 * @member {Object} spec
 */
TemplateInner.prototype['spec'] = undefined;






export default TemplateInner;

