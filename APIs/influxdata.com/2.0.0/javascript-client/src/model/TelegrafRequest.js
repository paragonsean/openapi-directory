/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TelegrafRequestMetadata from './TelegrafRequestMetadata';

/**
 * The TelegrafRequest model module.
 * @module model/TelegrafRequest
 * @version 2.0.0
 */
class TelegrafRequest {
    /**
     * Constructs a new <code>TelegrafRequest</code>.
     * @alias module:model/TelegrafRequest
     */
    constructor() { 
        
        TelegrafRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TelegrafRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TelegrafRequest} obj Optional instance to populate.
     * @return {module:model/TelegrafRequest} The populated <code>TelegrafRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TelegrafRequest();

            if (data.hasOwnProperty('config')) {
                obj['config'] = ApiClient.convertToType(data['config'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = TelegrafRequestMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('orgID')) {
                obj['orgID'] = ApiClient.convertToType(data['orgID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TelegrafRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TelegrafRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['config'] && !(typeof data['config'] === 'string' || data['config'] instanceof String)) {
            throw new Error("Expected the field `config` to be a primitive type in the JSON string but got " + data['config']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          TelegrafRequestMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['orgID'] && !(typeof data['orgID'] === 'string' || data['orgID'] instanceof String)) {
            throw new Error("Expected the field `orgID` to be a primitive type in the JSON string but got " + data['orgID']);
        }

        return true;
    }


}



/**
 * @member {String} config
 */
TelegrafRequest.prototype['config'] = undefined;

/**
 * @member {String} description
 */
TelegrafRequest.prototype['description'] = undefined;

/**
 * @member {module:model/TelegrafRequestMetadata} metadata
 */
TelegrafRequest.prototype['metadata'] = undefined;

/**
 * @member {String} name
 */
TelegrafRequest.prototype['name'] = undefined;

/**
 * @member {String} orgID
 */
TelegrafRequest.prototype['orgID'] = undefined;






export default TelegrafRequest;

