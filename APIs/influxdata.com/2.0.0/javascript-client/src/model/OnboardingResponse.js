/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Authorization from './Authorization';
import Bucket from './Bucket';
import Organization from './Organization';
import UserResponse from './UserResponse';

/**
 * The OnboardingResponse model module.
 * @module model/OnboardingResponse
 * @version 2.0.0
 */
class OnboardingResponse {
    /**
     * Constructs a new <code>OnboardingResponse</code>.
     * @alias module:model/OnboardingResponse
     */
    constructor() { 
        
        OnboardingResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OnboardingResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OnboardingResponse} obj Optional instance to populate.
     * @return {module:model/OnboardingResponse} The populated <code>OnboardingResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OnboardingResponse();

            if (data.hasOwnProperty('auth')) {
                obj['auth'] = Authorization.constructFromObject(data['auth']);
            }
            if (data.hasOwnProperty('bucket')) {
                obj['bucket'] = Bucket.constructFromObject(data['bucket']);
            }
            if (data.hasOwnProperty('org')) {
                obj['org'] = Organization.constructFromObject(data['org']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserResponse.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OnboardingResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OnboardingResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `auth`
        if (data['auth']) { // data not null
          Authorization.validateJSON(data['auth']);
        }
        // validate the optional field `bucket`
        if (data['bucket']) { // data not null
          Bucket.validateJSON(data['bucket']);
        }
        // validate the optional field `org`
        if (data['org']) { // data not null
          Organization.validateJSON(data['org']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          UserResponse.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * @member {module:model/Authorization} auth
 */
OnboardingResponse.prototype['auth'] = undefined;

/**
 * @member {module:model/Bucket} bucket
 */
OnboardingResponse.prototype['bucket'] = undefined;

/**
 * @member {module:model/Organization} org
 */
OnboardingResponse.prototype['org'] = undefined;

/**
 * @member {module:model/UserResponse} user
 */
OnboardingResponse.prototype['user'] = undefined;






export default OnboardingResponse;

