/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CheckStatusLevel from './CheckStatusLevel';
import GreaterThreshold from './GreaterThreshold';
import LesserThreshold from './LesserThreshold';
import RangeThreshold from './RangeThreshold';

/**
 * The Threshold model module.
 * @module model/Threshold
 * @version 2.0.0
 */
class Threshold {
    /**
     * Constructs a new <code>Threshold</code>.
     * @alias module:model/Threshold
     * @param {(module:model/GreaterThreshold|module:model/LesserThreshold|module:model/RangeThreshold)} instance The actual instance to initialize Threshold.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "GreaterThreshold") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GreaterThreshold.validateJSON(instance); // throw an exception if no match
                // create GreaterThreshold from JS object
                this.actualInstance = GreaterThreshold.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GreaterThreshold
            errorMessages.push("Failed to construct GreaterThreshold: " + err)
        }

        try {
            if (typeof instance === "LesserThreshold") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                LesserThreshold.validateJSON(instance); // throw an exception if no match
                // create LesserThreshold from JS object
                this.actualInstance = LesserThreshold.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into LesserThreshold
            errorMessages.push("Failed to construct LesserThreshold: " + err)
        }

        try {
            if (typeof instance === "RangeThreshold") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                RangeThreshold.validateJSON(instance); // throw an exception if no match
                // create RangeThreshold from JS object
                this.actualInstance = RangeThreshold.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into RangeThreshold
            errorMessages.push("Failed to construct RangeThreshold: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `Threshold` with oneOf schemas GreaterThreshold, LesserThreshold, RangeThreshold. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `Threshold` with oneOf schemas GreaterThreshold, LesserThreshold, RangeThreshold. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>Threshold</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Threshold} obj Optional instance to populate.
     * @return {module:model/Threshold} The populated <code>Threshold</code> instance.
     */
    static constructFromObject(data, obj) {
        return new Threshold(data);
    }

    /**
     * Gets the actual instance, which can be <code>GreaterThreshold</code>, <code>LesserThreshold</code>, <code>RangeThreshold</code>.
     * @return {(module:model/GreaterThreshold|module:model/LesserThreshold|module:model/RangeThreshold)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>GreaterThreshold</code>, <code>LesserThreshold</code>, <code>RangeThreshold</code>.
     * @param {(module:model/GreaterThreshold|module:model/LesserThreshold|module:model/RangeThreshold)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = Threshold.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of Threshold from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/Threshold} An instance of Threshold.
     */
    static fromJSON = function(json_string){
        return Threshold.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * If true, only alert if all values meet threshold.
 * @member {Boolean} allValues
 */
Threshold.prototype['allValues'] = undefined;

/**
 * @member {module:model/CheckStatusLevel} level
 */
Threshold.prototype['level'] = undefined;

/**
 * @member {module:model/Threshold.TypeEnum} type
 */
Threshold.prototype['type'] = undefined;

/**
 * @member {Number} value
 */
Threshold.prototype['value'] = undefined;

/**
 * @member {Number} max
 */
Threshold.prototype['max'] = undefined;

/**
 * @member {Number} min
 */
Threshold.prototype['min'] = undefined;

/**
 * @member {Boolean} within
 */
Threshold.prototype['within'] = undefined;


Threshold.OneOf = ["GreaterThreshold", "LesserThreshold", "RangeThreshold"];

export default Threshold;

