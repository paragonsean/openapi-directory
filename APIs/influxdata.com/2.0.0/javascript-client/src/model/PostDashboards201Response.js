/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CellWithViewProperties from './CellWithViewProperties';
import Dashboard from './Dashboard';
import DashboardAllOfLinks from './DashboardAllOfLinks';
import DashboardAllOfMeta from './DashboardAllOfMeta';
import DashboardWithViewProperties from './DashboardWithViewProperties';
import Label from './Label';

/**
 * The PostDashboards201Response model module.
 * @module model/PostDashboards201Response
 * @version 2.0.0
 */
class PostDashboards201Response {
    /**
     * Constructs a new <code>PostDashboards201Response</code>.
     * @alias module:model/PostDashboards201Response
     * @param {(module:model/Dashboard|module:model/DashboardWithViewProperties)} instance The actual instance to initialize PostDashboards201Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "Dashboard") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Dashboard.validateJSON(instance); // throw an exception if no match
                // create Dashboard from JS object
                this.actualInstance = Dashboard.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Dashboard
            errorMessages.push("Failed to construct Dashboard: " + err)
        }

        try {
            if (typeof instance === "DashboardWithViewProperties") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                DashboardWithViewProperties.validateJSON(instance); // throw an exception if no match
                // create DashboardWithViewProperties from JS object
                this.actualInstance = DashboardWithViewProperties.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into DashboardWithViewProperties
            errorMessages.push("Failed to construct DashboardWithViewProperties: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `PostDashboards201Response` with oneOf schemas Dashboard, DashboardWithViewProperties. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `PostDashboards201Response` with oneOf schemas Dashboard, DashboardWithViewProperties. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>PostDashboards201Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostDashboards201Response} obj Optional instance to populate.
     * @return {module:model/PostDashboards201Response} The populated <code>PostDashboards201Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new PostDashboards201Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>Dashboard</code>, <code>DashboardWithViewProperties</code>.
     * @return {(module:model/Dashboard|module:model/DashboardWithViewProperties)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>Dashboard</code>, <code>DashboardWithViewProperties</code>.
     * @param {(module:model/Dashboard|module:model/DashboardWithViewProperties)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = PostDashboards201Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of PostDashboards201Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/PostDashboards201Response} An instance of PostDashboards201Response.
     */
    static fromJSON = function(json_string){
        return PostDashboards201Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * The user-facing description of the dashboard.
 * @member {String} description
 */
PostDashboards201Response.prototype['description'] = undefined;

/**
 * The user-facing name of the dashboard.
 * @member {String} name
 */
PostDashboards201Response.prototype['name'] = undefined;

/**
 * The ID of the organization that owns the dashboard.
 * @member {String} orgID
 */
PostDashboards201Response.prototype['orgID'] = undefined;

/**
 * @member {Array.<module:model/CellWithViewProperties>} cells
 */
PostDashboards201Response.prototype['cells'] = undefined;

/**
 * @member {String} id
 */
PostDashboards201Response.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/Label>} labels
 */
PostDashboards201Response.prototype['labels'] = undefined;

/**
 * @member {module:model/DashboardAllOfLinks} links
 */
PostDashboards201Response.prototype['links'] = undefined;

/**
 * @member {module:model/DashboardAllOfMeta} meta
 */
PostDashboards201Response.prototype['meta'] = undefined;


PostDashboards201Response.OneOf = ["Dashboard", "DashboardWithViewProperties"];

export default PostDashboards201Response;

