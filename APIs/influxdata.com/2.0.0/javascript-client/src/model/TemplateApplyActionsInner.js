/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TemplateApplyActionsInnerOneOf from './TemplateApplyActionsInnerOneOf';
import TemplateApplyActionsInnerOneOf1 from './TemplateApplyActionsInnerOneOf1';
import TemplateApplyActionsInnerOneOf1Properties from './TemplateApplyActionsInnerOneOf1Properties';

/**
 * The TemplateApplyActionsInner model module.
 * @module model/TemplateApplyActionsInner
 * @version 2.0.0
 */
class TemplateApplyActionsInner {
    /**
     * Constructs a new <code>TemplateApplyActionsInner</code>.
     * @alias module:model/TemplateApplyActionsInner
     * @param {(module:model/TemplateApplyActionsInnerOneOf|module:model/TemplateApplyActionsInnerOneOf1)} instance The actual instance to initialize TemplateApplyActionsInner.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "TemplateApplyActionsInnerOneOf") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                TemplateApplyActionsInnerOneOf.validateJSON(instance); // throw an exception if no match
                // create TemplateApplyActionsInnerOneOf from JS object
                this.actualInstance = TemplateApplyActionsInnerOneOf.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TemplateApplyActionsInnerOneOf
            errorMessages.push("Failed to construct TemplateApplyActionsInnerOneOf: " + err)
        }

        try {
            if (typeof instance === "TemplateApplyActionsInnerOneOf1") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                TemplateApplyActionsInnerOneOf1.validateJSON(instance); // throw an exception if no match
                // create TemplateApplyActionsInnerOneOf1 from JS object
                this.actualInstance = TemplateApplyActionsInnerOneOf1.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TemplateApplyActionsInnerOneOf1
            errorMessages.push("Failed to construct TemplateApplyActionsInnerOneOf1: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `TemplateApplyActionsInner` with oneOf schemas TemplateApplyActionsInnerOneOf, TemplateApplyActionsInnerOneOf1. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `TemplateApplyActionsInner` with oneOf schemas TemplateApplyActionsInnerOneOf, TemplateApplyActionsInnerOneOf1. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>TemplateApplyActionsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemplateApplyActionsInner} obj Optional instance to populate.
     * @return {module:model/TemplateApplyActionsInner} The populated <code>TemplateApplyActionsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        return new TemplateApplyActionsInner(data);
    }

    /**
     * Gets the actual instance, which can be <code>TemplateApplyActionsInnerOneOf</code>, <code>TemplateApplyActionsInnerOneOf1</code>.
     * @return {(module:model/TemplateApplyActionsInnerOneOf|module:model/TemplateApplyActionsInnerOneOf1)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>TemplateApplyActionsInnerOneOf</code>, <code>TemplateApplyActionsInnerOneOf1</code>.
     * @param {(module:model/TemplateApplyActionsInnerOneOf|module:model/TemplateApplyActionsInnerOneOf1)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = TemplateApplyActionsInner.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of TemplateApplyActionsInner from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/TemplateApplyActionsInner} An instance of TemplateApplyActionsInner.
     */
    static fromJSON = function(json_string){
        return TemplateApplyActionsInner.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/TemplateApplyActionsInner.ActionEnum} action
 */
TemplateApplyActionsInner.prototype['action'] = undefined;

/**
 * @member {module:model/TemplateApplyActionsInnerOneOf1Properties} properties
 */
TemplateApplyActionsInner.prototype['properties'] = undefined;


TemplateApplyActionsInner.OneOf = ["TemplateApplyActionsInnerOneOf", "TemplateApplyActionsInnerOneOf1"];

export default TemplateApplyActionsInner;

