/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TemplateEnvReferencesInnerDefaultValue from './TemplateEnvReferencesInnerDefaultValue';
import TemplateEnvReferencesInnerValue from './TemplateEnvReferencesInnerValue';

/**
 * The TemplateEnvReferencesInner model module.
 * @module model/TemplateEnvReferencesInner
 * @version 2.0.0
 */
class TemplateEnvReferencesInner {
    /**
     * Constructs a new <code>TemplateEnvReferencesInner</code>.
     * @alias module:model/TemplateEnvReferencesInner
     * @param envRefKey {String} Key identified as environment reference and is the key identified in the template
     * @param resourceField {String} Field the environment reference corresponds too
     */
    constructor(envRefKey, resourceField) { 
        
        TemplateEnvReferencesInner.initialize(this, envRefKey, resourceField);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, envRefKey, resourceField) { 
        obj['envRefKey'] = envRefKey;
        obj['resourceField'] = resourceField;
    }

    /**
     * Constructs a <code>TemplateEnvReferencesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemplateEnvReferencesInner} obj Optional instance to populate.
     * @return {module:model/TemplateEnvReferencesInner} The populated <code>TemplateEnvReferencesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TemplateEnvReferencesInner();

            if (data.hasOwnProperty('defaultValue')) {
                obj['defaultValue'] = TemplateEnvReferencesInnerDefaultValue.constructFromObject(data['defaultValue']);
            }
            if (data.hasOwnProperty('envRefKey')) {
                obj['envRefKey'] = ApiClient.convertToType(data['envRefKey'], 'String');
            }
            if (data.hasOwnProperty('resourceField')) {
                obj['resourceField'] = ApiClient.convertToType(data['resourceField'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = TemplateEnvReferencesInnerValue.constructFromObject(data['value']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TemplateEnvReferencesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemplateEnvReferencesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TemplateEnvReferencesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `defaultValue`
        if (data['defaultValue']) { // data not null
          TemplateEnvReferencesInnerDefaultValue.validateJSON(data['defaultValue']);
        }
        // ensure the json data is a string
        if (data['envRefKey'] && !(typeof data['envRefKey'] === 'string' || data['envRefKey'] instanceof String)) {
            throw new Error("Expected the field `envRefKey` to be a primitive type in the JSON string but got " + data['envRefKey']);
        }
        // ensure the json data is a string
        if (data['resourceField'] && !(typeof data['resourceField'] === 'string' || data['resourceField'] instanceof String)) {
            throw new Error("Expected the field `resourceField` to be a primitive type in the JSON string but got " + data['resourceField']);
        }
        // validate the optional field `value`
        if (data['value']) { // data not null
          TemplateEnvReferencesInnerValue.validateJSON(data['value']);
        }

        return true;
    }


}

TemplateEnvReferencesInner.RequiredProperties = ["envRefKey", "resourceField"];

/**
 * @member {module:model/TemplateEnvReferencesInnerDefaultValue} defaultValue
 */
TemplateEnvReferencesInner.prototype['defaultValue'] = undefined;

/**
 * Key identified as environment reference and is the key identified in the template
 * @member {String} envRefKey
 */
TemplateEnvReferencesInner.prototype['envRefKey'] = undefined;

/**
 * Field the environment reference corresponds too
 * @member {String} resourceField
 */
TemplateEnvReferencesInner.prototype['resourceField'] = undefined;

/**
 * @member {module:model/TemplateEnvReferencesInnerValue} value
 */
TemplateEnvReferencesInner.prototype['value'] = undefined;






export default TemplateEnvReferencesInner;

