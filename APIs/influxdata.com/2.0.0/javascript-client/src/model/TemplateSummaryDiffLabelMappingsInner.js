/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TemplateSummaryDiffLabelMappingsInner model module.
 * @module model/TemplateSummaryDiffLabelMappingsInner
 * @version 2.0.0
 */
class TemplateSummaryDiffLabelMappingsInner {
    /**
     * Constructs a new <code>TemplateSummaryDiffLabelMappingsInner</code>.
     * @alias module:model/TemplateSummaryDiffLabelMappingsInner
     */
    constructor() { 
        
        TemplateSummaryDiffLabelMappingsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TemplateSummaryDiffLabelMappingsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemplateSummaryDiffLabelMappingsInner} obj Optional instance to populate.
     * @return {module:model/TemplateSummaryDiffLabelMappingsInner} The populated <code>TemplateSummaryDiffLabelMappingsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TemplateSummaryDiffLabelMappingsInner();

            if (data.hasOwnProperty('labelID')) {
                obj['labelID'] = ApiClient.convertToType(data['labelID'], 'String');
            }
            if (data.hasOwnProperty('labelName')) {
                obj['labelName'] = ApiClient.convertToType(data['labelName'], 'String');
            }
            if (data.hasOwnProperty('labelTemplateMetaName')) {
                obj['labelTemplateMetaName'] = ApiClient.convertToType(data['labelTemplateMetaName'], 'String');
            }
            if (data.hasOwnProperty('resourceID')) {
                obj['resourceID'] = ApiClient.convertToType(data['resourceID'], 'String');
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('resourceTemplateMetaName')) {
                obj['resourceTemplateMetaName'] = ApiClient.convertToType(data['resourceTemplateMetaName'], 'String');
            }
            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TemplateSummaryDiffLabelMappingsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemplateSummaryDiffLabelMappingsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['labelID'] && !(typeof data['labelID'] === 'string' || data['labelID'] instanceof String)) {
            throw new Error("Expected the field `labelID` to be a primitive type in the JSON string but got " + data['labelID']);
        }
        // ensure the json data is a string
        if (data['labelName'] && !(typeof data['labelName'] === 'string' || data['labelName'] instanceof String)) {
            throw new Error("Expected the field `labelName` to be a primitive type in the JSON string but got " + data['labelName']);
        }
        // ensure the json data is a string
        if (data['labelTemplateMetaName'] && !(typeof data['labelTemplateMetaName'] === 'string' || data['labelTemplateMetaName'] instanceof String)) {
            throw new Error("Expected the field `labelTemplateMetaName` to be a primitive type in the JSON string but got " + data['labelTemplateMetaName']);
        }
        // ensure the json data is a string
        if (data['resourceID'] && !(typeof data['resourceID'] === 'string' || data['resourceID'] instanceof String)) {
            throw new Error("Expected the field `resourceID` to be a primitive type in the JSON string but got " + data['resourceID']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }
        // ensure the json data is a string
        if (data['resourceTemplateMetaName'] && !(typeof data['resourceTemplateMetaName'] === 'string' || data['resourceTemplateMetaName'] instanceof String)) {
            throw new Error("Expected the field `resourceTemplateMetaName` to be a primitive type in the JSON string but got " + data['resourceTemplateMetaName']);
        }
        // ensure the json data is a string
        if (data['resourceType'] && !(typeof data['resourceType'] === 'string' || data['resourceType'] instanceof String)) {
            throw new Error("Expected the field `resourceType` to be a primitive type in the JSON string but got " + data['resourceType']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {String} labelID
 */
TemplateSummaryDiffLabelMappingsInner.prototype['labelID'] = undefined;

/**
 * @member {String} labelName
 */
TemplateSummaryDiffLabelMappingsInner.prototype['labelName'] = undefined;

/**
 * @member {String} labelTemplateMetaName
 */
TemplateSummaryDiffLabelMappingsInner.prototype['labelTemplateMetaName'] = undefined;

/**
 * @member {String} resourceID
 */
TemplateSummaryDiffLabelMappingsInner.prototype['resourceID'] = undefined;

/**
 * @member {String} resourceName
 */
TemplateSummaryDiffLabelMappingsInner.prototype['resourceName'] = undefined;

/**
 * @member {String} resourceTemplateMetaName
 */
TemplateSummaryDiffLabelMappingsInner.prototype['resourceTemplateMetaName'] = undefined;

/**
 * @member {String} resourceType
 */
TemplateSummaryDiffLabelMappingsInner.prototype['resourceType'] = undefined;

/**
 * @member {String} status
 */
TemplateSummaryDiffLabelMappingsInner.prototype['status'] = undefined;






export default TemplateSummaryDiffLabelMappingsInner;

