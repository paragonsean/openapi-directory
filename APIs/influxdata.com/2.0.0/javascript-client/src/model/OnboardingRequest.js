/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OnboardingRequest model module.
 * @module model/OnboardingRequest
 * @version 2.0.0
 */
class OnboardingRequest {
    /**
     * Constructs a new <code>OnboardingRequest</code>.
     * @alias module:model/OnboardingRequest
     * @param bucket {String} 
     * @param org {String} 
     * @param username {String} 
     */
    constructor(bucket, org, username) { 
        
        OnboardingRequest.initialize(this, bucket, org, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bucket, org, username) { 
        obj['bucket'] = bucket;
        obj['org'] = org;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>OnboardingRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OnboardingRequest} obj Optional instance to populate.
     * @return {module:model/OnboardingRequest} The populated <code>OnboardingRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OnboardingRequest();

            if (data.hasOwnProperty('bucket')) {
                obj['bucket'] = ApiClient.convertToType(data['bucket'], 'String');
            }
            if (data.hasOwnProperty('org')) {
                obj['org'] = ApiClient.convertToType(data['org'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('retentionPeriodHrs')) {
                obj['retentionPeriodHrs'] = ApiClient.convertToType(data['retentionPeriodHrs'], 'Number');
            }
            if (data.hasOwnProperty('retentionPeriodSeconds')) {
                obj['retentionPeriodSeconds'] = ApiClient.convertToType(data['retentionPeriodSeconds'], 'Number');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OnboardingRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OnboardingRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OnboardingRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['bucket'] && !(typeof data['bucket'] === 'string' || data['bucket'] instanceof String)) {
            throw new Error("Expected the field `bucket` to be a primitive type in the JSON string but got " + data['bucket']);
        }
        // ensure the json data is a string
        if (data['org'] && !(typeof data['org'] === 'string' || data['org'] instanceof String)) {
            throw new Error("Expected the field `org` to be a primitive type in the JSON string but got " + data['org']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

OnboardingRequest.RequiredProperties = ["bucket", "org", "username"];

/**
 * @member {String} bucket
 */
OnboardingRequest.prototype['bucket'] = undefined;

/**
 * @member {String} org
 */
OnboardingRequest.prototype['org'] = undefined;

/**
 * @member {String} password
 */
OnboardingRequest.prototype['password'] = undefined;

/**
 * Retention period *in nanoseconds* for the new bucket. This key's name has been misleading since OSS 2.0 GA, please transition to use `retentionPeriodSeconds` 
 * @member {Number} retentionPeriodHrs
 */
OnboardingRequest.prototype['retentionPeriodHrs'] = undefined;

/**
 * @member {Number} retentionPeriodSeconds
 */
OnboardingRequest.prototype['retentionPeriodSeconds'] = undefined;

/**
 * Authentication token to set on the initial user. If not specified, the server will generate a token. 
 * @member {String} token
 */
OnboardingRequest.prototype['token'] = undefined;

/**
 * @member {String} username
 */
OnboardingRequest.prototype['username'] = undefined;






export default OnboardingRequest;

