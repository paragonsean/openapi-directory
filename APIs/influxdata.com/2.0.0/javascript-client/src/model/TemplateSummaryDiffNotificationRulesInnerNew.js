/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner from './TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner';
import TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner from './TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner';

/**
 * The TemplateSummaryDiffNotificationRulesInnerNew model module.
 * @module model/TemplateSummaryDiffNotificationRulesInnerNew
 * @version 2.0.0
 */
class TemplateSummaryDiffNotificationRulesInnerNew {
    /**
     * Constructs a new <code>TemplateSummaryDiffNotificationRulesInnerNew</code>.
     * @alias module:model/TemplateSummaryDiffNotificationRulesInnerNew
     */
    constructor() { 
        
        TemplateSummaryDiffNotificationRulesInnerNew.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TemplateSummaryDiffNotificationRulesInnerNew</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemplateSummaryDiffNotificationRulesInnerNew} obj Optional instance to populate.
     * @return {module:model/TemplateSummaryDiffNotificationRulesInnerNew} The populated <code>TemplateSummaryDiffNotificationRulesInnerNew</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TemplateSummaryDiffNotificationRulesInnerNew();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('endpointID')) {
                obj['endpointID'] = ApiClient.convertToType(data['endpointID'], 'String');
            }
            if (data.hasOwnProperty('endpointName')) {
                obj['endpointName'] = ApiClient.convertToType(data['endpointName'], 'String');
            }
            if (data.hasOwnProperty('endpointType')) {
                obj['endpointType'] = ApiClient.convertToType(data['endpointType'], 'String');
            }
            if (data.hasOwnProperty('every')) {
                obj['every'] = ApiClient.convertToType(data['every'], 'String');
            }
            if (data.hasOwnProperty('messageTemplate')) {
                obj['messageTemplate'] = ApiClient.convertToType(data['messageTemplate'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusRules')) {
                obj['statusRules'] = ApiClient.convertToType(data['statusRules'], [TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner]);
            }
            if (data.hasOwnProperty('tagRules')) {
                obj['tagRules'] = ApiClient.convertToType(data['tagRules'], [TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TemplateSummaryDiffNotificationRulesInnerNew</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemplateSummaryDiffNotificationRulesInnerNew</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['endpointID'] && !(typeof data['endpointID'] === 'string' || data['endpointID'] instanceof String)) {
            throw new Error("Expected the field `endpointID` to be a primitive type in the JSON string but got " + data['endpointID']);
        }
        // ensure the json data is a string
        if (data['endpointName'] && !(typeof data['endpointName'] === 'string' || data['endpointName'] instanceof String)) {
            throw new Error("Expected the field `endpointName` to be a primitive type in the JSON string but got " + data['endpointName']);
        }
        // ensure the json data is a string
        if (data['endpointType'] && !(typeof data['endpointType'] === 'string' || data['endpointType'] instanceof String)) {
            throw new Error("Expected the field `endpointType` to be a primitive type in the JSON string but got " + data['endpointType']);
        }
        // ensure the json data is a string
        if (data['every'] && !(typeof data['every'] === 'string' || data['every'] instanceof String)) {
            throw new Error("Expected the field `every` to be a primitive type in the JSON string but got " + data['every']);
        }
        // ensure the json data is a string
        if (data['messageTemplate'] && !(typeof data['messageTemplate'] === 'string' || data['messageTemplate'] instanceof String)) {
            throw new Error("Expected the field `messageTemplate` to be a primitive type in the JSON string but got " + data['messageTemplate']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['offset'] && !(typeof data['offset'] === 'string' || data['offset'] instanceof String)) {
            throw new Error("Expected the field `offset` to be a primitive type in the JSON string but got " + data['offset']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        if (data['statusRules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['statusRules'])) {
                throw new Error("Expected the field `statusRules` to be an array in the JSON data but got " + data['statusRules']);
            }
            // validate the optional field `statusRules` (array)
            for (const item of data['statusRules']) {
                TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner.validateJSON(item);
            };
        }
        if (data['tagRules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tagRules'])) {
                throw new Error("Expected the field `tagRules` to be an array in the JSON data but got " + data['tagRules']);
            }
            // validate the optional field `tagRules` (array)
            for (const item of data['tagRules']) {
                TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} description
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['description'] = undefined;

/**
 * @member {String} endpointID
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['endpointID'] = undefined;

/**
 * @member {String} endpointName
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['endpointName'] = undefined;

/**
 * @member {String} endpointType
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['endpointType'] = undefined;

/**
 * @member {String} every
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['every'] = undefined;

/**
 * @member {String} messageTemplate
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['messageTemplate'] = undefined;

/**
 * @member {String} name
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['name'] = undefined;

/**
 * @member {String} offset
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['offset'] = undefined;

/**
 * @member {String} status
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['status'] = undefined;

/**
 * @member {Array.<module:model/TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner>} statusRules
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['statusRules'] = undefined;

/**
 * @member {Array.<module:model/TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner>} tagRules
 */
TemplateSummaryDiffNotificationRulesInnerNew.prototype['tagRules'] = undefined;






export default TemplateSummaryDiffNotificationRulesInnerNew;

