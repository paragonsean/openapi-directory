/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Links from './Links';

/**
 * The DBRPUpdate model module.
 * @module model/DBRPUpdate
 * @version 2.0.0
 */
class DBRPUpdate {
    /**
     * Constructs a new <code>DBRPUpdate</code>.
     * @alias module:model/DBRPUpdate
     */
    constructor() { 
        
        DBRPUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DBRPUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DBRPUpdate} obj Optional instance to populate.
     * @return {module:model/DBRPUpdate} The populated <code>DBRPUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DBRPUpdate();

            if (data.hasOwnProperty('database')) {
                obj['database'] = ApiClient.convertToType(data['database'], 'String');
            }
            if (data.hasOwnProperty('default')) {
                obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = Links.constructFromObject(data['links']);
            }
            if (data.hasOwnProperty('retention_policy')) {
                obj['retention_policy'] = ApiClient.convertToType(data['retention_policy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DBRPUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DBRPUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['database'] && !(typeof data['database'] === 'string' || data['database'] instanceof String)) {
            throw new Error("Expected the field `database` to be a primitive type in the JSON string but got " + data['database']);
        }
        // validate the optional field `links`
        if (data['links']) { // data not null
          Links.validateJSON(data['links']);
        }
        // ensure the json data is a string
        if (data['retention_policy'] && !(typeof data['retention_policy'] === 'string' || data['retention_policy'] instanceof String)) {
            throw new Error("Expected the field `retention_policy` to be a primitive type in the JSON string but got " + data['retention_policy']);
        }

        return true;
    }


}



/**
 * InfluxDB v1 database
 * @member {String} database
 */
DBRPUpdate.prototype['database'] = undefined;

/**
 * @member {Boolean} default
 */
DBRPUpdate.prototype['default'] = undefined;

/**
 * @member {module:model/Links} links
 */
DBRPUpdate.prototype['links'] = undefined;

/**
 * InfluxDB v1 retention policy
 * @member {String} retention_policy
 */
DBRPUpdate.prototype['retention_policy'] = undefined;






export default DBRPUpdate;

