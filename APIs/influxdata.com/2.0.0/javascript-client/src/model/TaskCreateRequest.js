/**
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskStatusType from './TaskStatusType';

/**
 * The TaskCreateRequest model module.
 * @module model/TaskCreateRequest
 * @version 2.0.0
 */
class TaskCreateRequest {
    /**
     * Constructs a new <code>TaskCreateRequest</code>.
     * @alias module:model/TaskCreateRequest
     * @param flux {String} The Flux script to run for this task.
     */
    constructor(flux) { 
        
        TaskCreateRequest.initialize(this, flux);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, flux) { 
        obj['flux'] = flux;
    }

    /**
     * Constructs a <code>TaskCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskCreateRequest} obj Optional instance to populate.
     * @return {module:model/TaskCreateRequest} The populated <code>TaskCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskCreateRequest();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('flux')) {
                obj['flux'] = ApiClient.convertToType(data['flux'], 'String');
            }
            if (data.hasOwnProperty('org')) {
                obj['org'] = ApiClient.convertToType(data['org'], 'String');
            }
            if (data.hasOwnProperty('orgID')) {
                obj['orgID'] = ApiClient.convertToType(data['orgID'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = TaskStatusType.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskCreateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TaskCreateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['flux'] && !(typeof data['flux'] === 'string' || data['flux'] instanceof String)) {
            throw new Error("Expected the field `flux` to be a primitive type in the JSON string but got " + data['flux']);
        }
        // ensure the json data is a string
        if (data['org'] && !(typeof data['org'] === 'string' || data['org'] instanceof String)) {
            throw new Error("Expected the field `org` to be a primitive type in the JSON string but got " + data['org']);
        }
        // ensure the json data is a string
        if (data['orgID'] && !(typeof data['orgID'] === 'string' || data['orgID'] instanceof String)) {
            throw new Error("Expected the field `orgID` to be a primitive type in the JSON string but got " + data['orgID']);
        }

        return true;
    }


}

TaskCreateRequest.RequiredProperties = ["flux"];

/**
 * An optional description of the task.
 * @member {String} description
 */
TaskCreateRequest.prototype['description'] = undefined;

/**
 * The Flux script to run for this task.
 * @member {String} flux
 */
TaskCreateRequest.prototype['flux'] = undefined;

/**
 * The name of the organization that owns this Task.
 * @member {String} org
 */
TaskCreateRequest.prototype['org'] = undefined;

/**
 * The ID of the organization that owns this Task.
 * @member {String} orgID
 */
TaskCreateRequest.prototype['orgID'] = undefined;

/**
 * @member {module:model/TaskStatusType} status
 */
TaskCreateRequest.prototype['status'] = undefined;






export default TaskCreateRequest;

