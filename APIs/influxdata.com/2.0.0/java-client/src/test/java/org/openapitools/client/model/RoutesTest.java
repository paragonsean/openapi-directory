/*
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.client.model.RoutesExternal;
import org.openapitools.client.model.RoutesQuery;
import org.openapitools.client.model.RoutesSystem;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Routes
 */
public class RoutesTest {
    private final Routes model = new Routes();

    /**
     * Model tests for Routes
     */
    @Test
    public void testRoutes() {
        // TODO: test Routes
    }

    /**
     * Test the property 'authorizations'
     */
    @Test
    public void authorizationsTest() {
        // TODO: test authorizations
    }

    /**
     * Test the property 'buckets'
     */
    @Test
    public void bucketsTest() {
        // TODO: test buckets
    }

    /**
     * Test the property 'dashboards'
     */
    @Test
    public void dashboardsTest() {
        // TODO: test dashboards
    }

    /**
     * Test the property 'external'
     */
    @Test
    public void externalTest() {
        // TODO: test external
    }

    /**
     * Test the property 'flags'
     */
    @Test
    public void flagsTest() {
        // TODO: test flags
    }

    /**
     * Test the property 'me'
     */
    @Test
    public void meTest() {
        // TODO: test me
    }

    /**
     * Test the property 'orgs'
     */
    @Test
    public void orgsTest() {
        // TODO: test orgs
    }

    /**
     * Test the property 'query'
     */
    @Test
    public void queryTest() {
        // TODO: test query
    }

    /**
     * Test the property 'setup'
     */
    @Test
    public void setupTest() {
        // TODO: test setup
    }

    /**
     * Test the property 'signin'
     */
    @Test
    public void signinTest() {
        // TODO: test signin
    }

    /**
     * Test the property 'signout'
     */
    @Test
    public void signoutTest() {
        // TODO: test signout
    }

    /**
     * Test the property 'sources'
     */
    @Test
    public void sourcesTest() {
        // TODO: test sources
    }

    /**
     * Test the property 'system'
     */
    @Test
    public void systemTest() {
        // TODO: test system
    }

    /**
     * Test the property 'tasks'
     */
    @Test
    public void tasksTest() {
        // TODO: test tasks
    }

    /**
     * Test the property 'telegrafs'
     */
    @Test
    public void telegrafsTest() {
        // TODO: test telegrafs
    }

    /**
     * Test the property 'users'
     */
    @Test
    public void usersTest() {
        // TODO: test users
    }

    /**
     * Test the property 'variables'
     */
    @Test
    public void variablesTest() {
        // TODO: test variables
    }

    /**
     * Test the property 'write'
     */
    @Test
    public void writeTest() {
        // TODO: test write
    }

}
