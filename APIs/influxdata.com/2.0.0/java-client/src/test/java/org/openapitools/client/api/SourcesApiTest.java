/*
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Buckets;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.HealthCheck;
import org.openapitools.client.model.Source;
import org.openapitools.client.model.Sources;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SourcesApi
 */
@Disabled
public class SourcesApiTest {

    private final SourcesApi api = new SourcesApi();

    /**
     * Delete a source
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSourcesIDTest() throws ApiException {
        String sourceID = null;
        String zapTraceSpan = null;
        api.deleteSourcesID(sourceID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * List all sources
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSourcesTest() throws ApiException {
        String zapTraceSpan = null;
        String org = null;
        Sources response = api.getSources(zapTraceSpan, org);
        // TODO: test validations
    }

    /**
     * Retrieve a source
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSourcesIDTest() throws ApiException {
        String sourceID = null;
        String zapTraceSpan = null;
        Source response = api.getSourcesID(sourceID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Get buckets in a source
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSourcesIDBucketsTest() throws ApiException {
        String sourceID = null;
        String zapTraceSpan = null;
        String org = null;
        Buckets response = api.getSourcesIDBuckets(sourceID, zapTraceSpan, org);
        // TODO: test validations
    }

    /**
     * Get the health of a source
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSourcesIDHealthTest() throws ApiException {
        String sourceID = null;
        String zapTraceSpan = null;
        HealthCheck response = api.getSourcesIDHealth(sourceID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Update a Source
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchSourcesIDTest() throws ApiException {
        String sourceID = null;
        Source source = null;
        String zapTraceSpan = null;
        Source response = api.patchSourcesID(sourceID, source, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Create a source
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSourcesTest() throws ApiException {
        Source source = null;
        String zapTraceSpan = null;
        Source response = api.postSources(source, zapTraceSpan);
        // TODO: test validations
    }

}
