/*
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Axis;
import org.openapitools.client.model.DashboardColor;
import org.openapitools.client.model.GeoCircleViewLayer;
import org.openapitools.client.model.GeoHeatMapViewLayer;
import org.openapitools.client.model.GeoPointMapViewLayer;
import org.openapitools.client.model.GeoTrackMapViewLayer;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GeoViewLayer
 */
public class GeoViewLayerTest {
    private final GeoViewLayer model = new GeoViewLayer();

    /**
     * Model tests for GeoViewLayer
     */
    @Test
    public void testGeoViewLayer() {
        // TODO: test GeoViewLayer
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'colorDimension'
     */
    @Test
    public void colorDimensionTest() {
        // TODO: test colorDimension
    }

    /**
     * Test the property 'colorField'
     */
    @Test
    public void colorFieldTest() {
        // TODO: test colorField
    }

    /**
     * Test the property 'colors'
     */
    @Test
    public void colorsTest() {
        // TODO: test colors
    }

    /**
     * Test the property 'interpolateColors'
     */
    @Test
    public void interpolateColorsTest() {
        // TODO: test interpolateColors
    }

    /**
     * Test the property 'radius'
     */
    @Test
    public void radiusTest() {
        // TODO: test radius
    }

    /**
     * Test the property 'radiusDimension'
     */
    @Test
    public void radiusDimensionTest() {
        // TODO: test radiusDimension
    }

    /**
     * Test the property 'radiusField'
     */
    @Test
    public void radiusFieldTest() {
        // TODO: test radiusField
    }

    /**
     * Test the property 'blur'
     */
    @Test
    public void blurTest() {
        // TODO: test blur
    }

    /**
     * Test the property 'intensityDimension'
     */
    @Test
    public void intensityDimensionTest() {
        // TODO: test intensityDimension
    }

    /**
     * Test the property 'intensityField'
     */
    @Test
    public void intensityFieldTest() {
        // TODO: test intensityField
    }

    /**
     * Test the property 'isClustered'
     */
    @Test
    public void isClusteredTest() {
        // TODO: test isClustered
    }

    /**
     * Test the property 'randomColors'
     */
    @Test
    public void randomColorsTest() {
        // TODO: test randomColors
    }

    /**
     * Test the property 'speed'
     */
    @Test
    public void speedTest() {
        // TODO: test speed
    }

    /**
     * Test the property 'trackWidth'
     */
    @Test
    public void trackWidthTest() {
        // TODO: test trackWidth
    }

}
