/*
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.LabelMapping;
import org.openapitools.client.model.LabelResponse;
import org.openapitools.client.model.LabelsResponse;
import org.openapitools.client.model.Variable;
import org.openapitools.client.model.Variables;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VariablesApi
 */
@Disabled
public class VariablesApiTest {

    private final VariablesApi api = new VariablesApi();

    /**
     * Delete a variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVariablesIDTest() throws ApiException {
        String variableID = null;
        String zapTraceSpan = null;
        api.deleteVariablesID(variableID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Delete a label from a variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVariablesIDLabelsIDTest() throws ApiException {
        String variableID = null;
        String labelID = null;
        String zapTraceSpan = null;
        api.deleteVariablesIDLabelsID(variableID, labelID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * List all variables
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVariablesTest() throws ApiException {
        String zapTraceSpan = null;
        String org = null;
        String orgID = null;
        Variables response = api.getVariables(zapTraceSpan, org, orgID);
        // TODO: test validations
    }

    /**
     * Retrieve a variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVariablesIDTest() throws ApiException {
        String variableID = null;
        String zapTraceSpan = null;
        Variable response = api.getVariablesID(variableID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * List all labels for a variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVariablesIDLabelsTest() throws ApiException {
        String variableID = null;
        String zapTraceSpan = null;
        LabelsResponse response = api.getVariablesIDLabels(variableID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Update a variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchVariablesIDTest() throws ApiException {
        String variableID = null;
        Variable variable = null;
        String zapTraceSpan = null;
        Variable response = api.patchVariablesID(variableID, variable, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Create a variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postVariablesTest() throws ApiException {
        Variable variable = null;
        String zapTraceSpan = null;
        Variable response = api.postVariables(variable, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Add a label to a variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postVariablesIDLabelsTest() throws ApiException {
        String variableID = null;
        LabelMapping labelMapping = null;
        String zapTraceSpan = null;
        LabelResponse response = api.postVariablesIDLabels(variableID, labelMapping, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Replace a variable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putVariablesIDTest() throws ApiException {
        String variableID = null;
        Variable variable = null;
        String zapTraceSpan = null;
        Variable response = api.putVariablesID(variableID, variable, zapTraceSpan);
        // TODO: test validations
    }

}
