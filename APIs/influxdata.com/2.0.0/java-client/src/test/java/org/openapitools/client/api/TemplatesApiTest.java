/*
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Document;
import org.openapitools.client.model.DocumentCreate;
import org.openapitools.client.model.DocumentUpdate;
import org.openapitools.client.model.Documents;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.LabelMapping;
import org.openapitools.client.model.LabelResponse;
import org.openapitools.client.model.LabelsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplatesApi
 */
@Disabled
public class TemplatesApiTest {

    private final TemplatesApi api = new TemplatesApi();

    /**
     * Delete a template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDocumentsTemplatesIDTest() throws ApiException {
        String templateID = null;
        String zapTraceSpan = null;
        api.deleteDocumentsTemplatesID(templateID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Delete a label from a template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDocumentsTemplatesIDLabelsIDTest() throws ApiException {
        String templateID = null;
        String labelID = null;
        String zapTraceSpan = null;
        api.deleteDocumentsTemplatesIDLabelsID(templateID, labelID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * List all templates
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentsTemplatesTest() throws ApiException {
        String zapTraceSpan = null;
        String org = null;
        String orgID = null;
        Documents response = api.getDocumentsTemplates(zapTraceSpan, org, orgID);
        // TODO: test validations
    }

    /**
     * Retrieve a template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentsTemplatesIDTest() throws ApiException {
        String templateID = null;
        String zapTraceSpan = null;
        Document response = api.getDocumentsTemplatesID(templateID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * List all labels for a template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentsTemplatesIDLabelsTest() throws ApiException {
        String templateID = null;
        String zapTraceSpan = null;
        LabelsResponse response = api.getDocumentsTemplatesIDLabels(templateID, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Create a template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postDocumentsTemplatesTest() throws ApiException {
        DocumentCreate documentCreate = null;
        String zapTraceSpan = null;
        Document response = api.postDocumentsTemplates(documentCreate, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Add a label to a template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postDocumentsTemplatesIDLabelsTest() throws ApiException {
        String templateID = null;
        LabelMapping labelMapping = null;
        String zapTraceSpan = null;
        LabelResponse response = api.postDocumentsTemplatesIDLabels(templateID, labelMapping, zapTraceSpan);
        // TODO: test validations
    }

    /**
     * Update a template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putDocumentsTemplatesIDTest() throws ApiException {
        String templateID = null;
        DocumentUpdate documentUpdate = null;
        String zapTraceSpan = null;
        Document response = api.putDocumentsTemplatesID(templateID, documentUpdate, zapTraceSpan);
        // TODO: test validations
    }

}
