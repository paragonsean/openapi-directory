/*
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.ExportTemplateRequest;
import org.openapitools.client.model.ListStacks200Response;
import org.openapitools.client.model.PatchStackRequest;
import org.openapitools.client.model.PostStackRequest;
import org.openapitools.client.model.Stack;
import org.openapitools.client.model.TemplateApply;
import org.openapitools.client.model.TemplateInner;
import org.openapitools.client.model.TemplateSummary;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InfluxDbTemplatesApi
 */
@Disabled
public class InfluxDbTemplatesApiTest {

    private final InfluxDbTemplatesApi api = new InfluxDbTemplatesApi();

    /**
     * Apply or dry-run an InfluxDB Template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applyTemplateTest() throws ApiException {
        TemplateApply templateApply = null;
        TemplateSummary response = api.applyTemplate(templateApply);
        // TODO: test validations
    }

    /**
     * Create a new stack
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createStackTest() throws ApiException {
        PostStackRequest postStackRequest = null;
        Stack response = api.createStack(postStackRequest);
        // TODO: test validations
    }

    /**
     * Delete a stack and associated resources
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteStackTest() throws ApiException {
        String stackId = null;
        String orgID = null;
        api.deleteStack(stackId, orgID);
        // TODO: test validations
    }

    /**
     * Export a new Influx Template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportTemplateTest() throws ApiException {
        ExportTemplateRequest exportTemplateRequest = null;
        List<TemplateInner> response = api.exportTemplate(exportTemplateRequest);
        // TODO: test validations
    }

    /**
     * List all installed InfluxDB templates
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listStacksTest() throws ApiException {
        String orgID = null;
        String name = null;
        String stackID = null;
        ListStacks200Response response = api.listStacks(orgID, name, stackID);
        // TODO: test validations
    }

    /**
     * Retrieve a stack
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void readStackTest() throws ApiException {
        String stackId = null;
        Stack response = api.readStack(stackId);
        // TODO: test validations
    }

    /**
     * Uninstall an InfluxDB Stack
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uninstallStackTest() throws ApiException {
        String stackId = null;
        Stack response = api.uninstallStack(stackId);
        // TODO: test validations
    }

    /**
     * Update an InfluxDB Stack
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateStackTest() throws ApiException {
        String stackId = null;
        PatchStackRequest patchStackRequest = null;
        Stack response = api.updateStack(stackId, patchStackRequest);
        // TODO: test validations
    }

}
