/*
 * Influx OSS API Service
 * # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TemplateEnvReferencesInner;
import org.openapitools.client.model.TemplateKind;
import org.openapitools.client.model.TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner;
import org.openapitools.client.model.TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner;
import org.openapitools.client.model.TemplateSummaryLabel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TemplateSummarySummaryNotificationRulesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:51.322764-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TemplateSummarySummaryNotificationRulesInner {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENDPOINT_I_D = "endpointID";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_I_D)
  private String endpointID;

  public static final String SERIALIZED_NAME_ENDPOINT_TEMPLATE_META_NAME = "endpointTemplateMetaName";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TEMPLATE_META_NAME)
  private String endpointTemplateMetaName;

  public static final String SERIALIZED_NAME_ENDPOINT_TYPE = "endpointType";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TYPE)
  private String endpointType;

  public static final String SERIALIZED_NAME_ENV_REFERENCES = "envReferences";
  @SerializedName(SERIALIZED_NAME_ENV_REFERENCES)
  private List<TemplateEnvReferencesInner> envReferences = new ArrayList<>();

  public static final String SERIALIZED_NAME_EVERY = "every";
  @SerializedName(SERIALIZED_NAME_EVERY)
  private String every;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private TemplateKind kind;

  public static final String SERIALIZED_NAME_LABEL_ASSOCIATIONS = "labelAssociations";
  @SerializedName(SERIALIZED_NAME_LABEL_ASSOCIATIONS)
  private List<TemplateSummaryLabel> labelAssociations = new ArrayList<>();

  public static final String SERIALIZED_NAME_MESSAGE_TEMPLATE = "messageTemplate";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TEMPLATE)
  private String messageTemplate;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private String offset;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_RULES = "statusRules";
  @SerializedName(SERIALIZED_NAME_STATUS_RULES)
  private List<TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner> statusRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAG_RULES = "tagRules";
  @SerializedName(SERIALIZED_NAME_TAG_RULES)
  private List<TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner> tagRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_TEMPLATE_META_NAME = "templateMetaName";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_META_NAME)
  private String templateMetaName;

  public TemplateSummarySummaryNotificationRulesInner() {
  }

  public TemplateSummarySummaryNotificationRulesInner description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public TemplateSummarySummaryNotificationRulesInner endpointID(String endpointID) {
    this.endpointID = endpointID;
    return this;
  }

  /**
   * Get endpointID
   * @return endpointID
   */
  @javax.annotation.Nullable
  public String getEndpointID() {
    return endpointID;
  }

  public void setEndpointID(String endpointID) {
    this.endpointID = endpointID;
  }


  public TemplateSummarySummaryNotificationRulesInner endpointTemplateMetaName(String endpointTemplateMetaName) {
    this.endpointTemplateMetaName = endpointTemplateMetaName;
    return this;
  }

  /**
   * Get endpointTemplateMetaName
   * @return endpointTemplateMetaName
   */
  @javax.annotation.Nullable
  public String getEndpointTemplateMetaName() {
    return endpointTemplateMetaName;
  }

  public void setEndpointTemplateMetaName(String endpointTemplateMetaName) {
    this.endpointTemplateMetaName = endpointTemplateMetaName;
  }


  public TemplateSummarySummaryNotificationRulesInner endpointType(String endpointType) {
    this.endpointType = endpointType;
    return this;
  }

  /**
   * Get endpointType
   * @return endpointType
   */
  @javax.annotation.Nullable
  public String getEndpointType() {
    return endpointType;
  }

  public void setEndpointType(String endpointType) {
    this.endpointType = endpointType;
  }


  public TemplateSummarySummaryNotificationRulesInner envReferences(List<TemplateEnvReferencesInner> envReferences) {
    this.envReferences = envReferences;
    return this;
  }

  public TemplateSummarySummaryNotificationRulesInner addEnvReferencesItem(TemplateEnvReferencesInner envReferencesItem) {
    if (this.envReferences == null) {
      this.envReferences = new ArrayList<>();
    }
    this.envReferences.add(envReferencesItem);
    return this;
  }

  /**
   * Get envReferences
   * @return envReferences
   */
  @javax.annotation.Nullable
  public List<TemplateEnvReferencesInner> getEnvReferences() {
    return envReferences;
  }

  public void setEnvReferences(List<TemplateEnvReferencesInner> envReferences) {
    this.envReferences = envReferences;
  }


  public TemplateSummarySummaryNotificationRulesInner every(String every) {
    this.every = every;
    return this;
  }

  /**
   * Get every
   * @return every
   */
  @javax.annotation.Nullable
  public String getEvery() {
    return every;
  }

  public void setEvery(String every) {
    this.every = every;
  }


  public TemplateSummarySummaryNotificationRulesInner kind(TemplateKind kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Get kind
   * @return kind
   */
  @javax.annotation.Nullable
  public TemplateKind getKind() {
    return kind;
  }

  public void setKind(TemplateKind kind) {
    this.kind = kind;
  }


  public TemplateSummarySummaryNotificationRulesInner labelAssociations(List<TemplateSummaryLabel> labelAssociations) {
    this.labelAssociations = labelAssociations;
    return this;
  }

  public TemplateSummarySummaryNotificationRulesInner addLabelAssociationsItem(TemplateSummaryLabel labelAssociationsItem) {
    if (this.labelAssociations == null) {
      this.labelAssociations = new ArrayList<>();
    }
    this.labelAssociations.add(labelAssociationsItem);
    return this;
  }

  /**
   * Get labelAssociations
   * @return labelAssociations
   */
  @javax.annotation.Nullable
  public List<TemplateSummaryLabel> getLabelAssociations() {
    return labelAssociations;
  }

  public void setLabelAssociations(List<TemplateSummaryLabel> labelAssociations) {
    this.labelAssociations = labelAssociations;
  }


  public TemplateSummarySummaryNotificationRulesInner messageTemplate(String messageTemplate) {
    this.messageTemplate = messageTemplate;
    return this;
  }

  /**
   * Get messageTemplate
   * @return messageTemplate
   */
  @javax.annotation.Nullable
  public String getMessageTemplate() {
    return messageTemplate;
  }

  public void setMessageTemplate(String messageTemplate) {
    this.messageTemplate = messageTemplate;
  }


  public TemplateSummarySummaryNotificationRulesInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TemplateSummarySummaryNotificationRulesInner offset(String offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Get offset
   * @return offset
   */
  @javax.annotation.Nullable
  public String getOffset() {
    return offset;
  }

  public void setOffset(String offset) {
    this.offset = offset;
  }


  public TemplateSummarySummaryNotificationRulesInner status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public TemplateSummarySummaryNotificationRulesInner statusRules(List<TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner> statusRules) {
    this.statusRules = statusRules;
    return this;
  }

  public TemplateSummarySummaryNotificationRulesInner addStatusRulesItem(TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner statusRulesItem) {
    if (this.statusRules == null) {
      this.statusRules = new ArrayList<>();
    }
    this.statusRules.add(statusRulesItem);
    return this;
  }

  /**
   * Get statusRules
   * @return statusRules
   */
  @javax.annotation.Nullable
  public List<TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner> getStatusRules() {
    return statusRules;
  }

  public void setStatusRules(List<TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner> statusRules) {
    this.statusRules = statusRules;
  }


  public TemplateSummarySummaryNotificationRulesInner tagRules(List<TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner> tagRules) {
    this.tagRules = tagRules;
    return this;
  }

  public TemplateSummarySummaryNotificationRulesInner addTagRulesItem(TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner tagRulesItem) {
    if (this.tagRules == null) {
      this.tagRules = new ArrayList<>();
    }
    this.tagRules.add(tagRulesItem);
    return this;
  }

  /**
   * Get tagRules
   * @return tagRules
   */
  @javax.annotation.Nullable
  public List<TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner> getTagRules() {
    return tagRules;
  }

  public void setTagRules(List<TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner> tagRules) {
    this.tagRules = tagRules;
  }


  public TemplateSummarySummaryNotificationRulesInner templateMetaName(String templateMetaName) {
    this.templateMetaName = templateMetaName;
    return this;
  }

  /**
   * Get templateMetaName
   * @return templateMetaName
   */
  @javax.annotation.Nullable
  public String getTemplateMetaName() {
    return templateMetaName;
  }

  public void setTemplateMetaName(String templateMetaName) {
    this.templateMetaName = templateMetaName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateSummarySummaryNotificationRulesInner templateSummarySummaryNotificationRulesInner = (TemplateSummarySummaryNotificationRulesInner) o;
    return Objects.equals(this.description, templateSummarySummaryNotificationRulesInner.description) &&
        Objects.equals(this.endpointID, templateSummarySummaryNotificationRulesInner.endpointID) &&
        Objects.equals(this.endpointTemplateMetaName, templateSummarySummaryNotificationRulesInner.endpointTemplateMetaName) &&
        Objects.equals(this.endpointType, templateSummarySummaryNotificationRulesInner.endpointType) &&
        Objects.equals(this.envReferences, templateSummarySummaryNotificationRulesInner.envReferences) &&
        Objects.equals(this.every, templateSummarySummaryNotificationRulesInner.every) &&
        Objects.equals(this.kind, templateSummarySummaryNotificationRulesInner.kind) &&
        Objects.equals(this.labelAssociations, templateSummarySummaryNotificationRulesInner.labelAssociations) &&
        Objects.equals(this.messageTemplate, templateSummarySummaryNotificationRulesInner.messageTemplate) &&
        Objects.equals(this.name, templateSummarySummaryNotificationRulesInner.name) &&
        Objects.equals(this.offset, templateSummarySummaryNotificationRulesInner.offset) &&
        Objects.equals(this.status, templateSummarySummaryNotificationRulesInner.status) &&
        Objects.equals(this.statusRules, templateSummarySummaryNotificationRulesInner.statusRules) &&
        Objects.equals(this.tagRules, templateSummarySummaryNotificationRulesInner.tagRules) &&
        Objects.equals(this.templateMetaName, templateSummarySummaryNotificationRulesInner.templateMetaName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, endpointID, endpointTemplateMetaName, endpointType, envReferences, every, kind, labelAssociations, messageTemplate, name, offset, status, statusRules, tagRules, templateMetaName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateSummarySummaryNotificationRulesInner {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endpointID: ").append(toIndentedString(endpointID)).append("\n");
    sb.append("    endpointTemplateMetaName: ").append(toIndentedString(endpointTemplateMetaName)).append("\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    envReferences: ").append(toIndentedString(envReferences)).append("\n");
    sb.append("    every: ").append(toIndentedString(every)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    labelAssociations: ").append(toIndentedString(labelAssociations)).append("\n");
    sb.append("    messageTemplate: ").append(toIndentedString(messageTemplate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusRules: ").append(toIndentedString(statusRules)).append("\n");
    sb.append("    tagRules: ").append(toIndentedString(tagRules)).append("\n");
    sb.append("    templateMetaName: ").append(toIndentedString(templateMetaName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("endpointID");
    openapiFields.add("endpointTemplateMetaName");
    openapiFields.add("endpointType");
    openapiFields.add("envReferences");
    openapiFields.add("every");
    openapiFields.add("kind");
    openapiFields.add("labelAssociations");
    openapiFields.add("messageTemplate");
    openapiFields.add("name");
    openapiFields.add("offset");
    openapiFields.add("status");
    openapiFields.add("statusRules");
    openapiFields.add("tagRules");
    openapiFields.add("templateMetaName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TemplateSummarySummaryNotificationRulesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TemplateSummarySummaryNotificationRulesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TemplateSummarySummaryNotificationRulesInner is not found in the empty JSON string", TemplateSummarySummaryNotificationRulesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TemplateSummarySummaryNotificationRulesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TemplateSummarySummaryNotificationRulesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("endpointID") != null && !jsonObj.get("endpointID").isJsonNull()) && !jsonObj.get("endpointID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpointID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpointID").toString()));
      }
      if ((jsonObj.get("endpointTemplateMetaName") != null && !jsonObj.get("endpointTemplateMetaName").isJsonNull()) && !jsonObj.get("endpointTemplateMetaName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpointTemplateMetaName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpointTemplateMetaName").toString()));
      }
      if ((jsonObj.get("endpointType") != null && !jsonObj.get("endpointType").isJsonNull()) && !jsonObj.get("endpointType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpointType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpointType").toString()));
      }
      if (jsonObj.get("envReferences") != null && !jsonObj.get("envReferences").isJsonNull()) {
        JsonArray jsonArrayenvReferences = jsonObj.getAsJsonArray("envReferences");
        if (jsonArrayenvReferences != null) {
          // ensure the json data is an array
          if (!jsonObj.get("envReferences").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `envReferences` to be an array in the JSON string but got `%s`", jsonObj.get("envReferences").toString()));
          }

          // validate the optional field `envReferences` (array)
          for (int i = 0; i < jsonArrayenvReferences.size(); i++) {
            TemplateEnvReferencesInner.validateJsonElement(jsonArrayenvReferences.get(i));
          };
        }
      }
      if ((jsonObj.get("every") != null && !jsonObj.get("every").isJsonNull()) && !jsonObj.get("every").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `every` to be a primitive type in the JSON string but got `%s`", jsonObj.get("every").toString()));
      }
      // validate the optional field `kind`
      if (jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) {
        TemplateKind.validateJsonElement(jsonObj.get("kind"));
      }
      if (jsonObj.get("labelAssociations") != null && !jsonObj.get("labelAssociations").isJsonNull()) {
        JsonArray jsonArraylabelAssociations = jsonObj.getAsJsonArray("labelAssociations");
        if (jsonArraylabelAssociations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("labelAssociations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `labelAssociations` to be an array in the JSON string but got `%s`", jsonObj.get("labelAssociations").toString()));
          }

          // validate the optional field `labelAssociations` (array)
          for (int i = 0; i < jsonArraylabelAssociations.size(); i++) {
            TemplateSummaryLabel.validateJsonElement(jsonArraylabelAssociations.get(i));
          };
        }
      }
      if ((jsonObj.get("messageTemplate") != null && !jsonObj.get("messageTemplate").isJsonNull()) && !jsonObj.get("messageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messageTemplate").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("offset") != null && !jsonObj.get("offset").isJsonNull()) && !jsonObj.get("offset").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offset` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offset").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("statusRules") != null && !jsonObj.get("statusRules").isJsonNull()) {
        JsonArray jsonArraystatusRules = jsonObj.getAsJsonArray("statusRules");
        if (jsonArraystatusRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("statusRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `statusRules` to be an array in the JSON string but got `%s`", jsonObj.get("statusRules").toString()));
          }

          // validate the optional field `statusRules` (array)
          for (int i = 0; i < jsonArraystatusRules.size(); i++) {
            TemplateSummaryDiffNotificationRulesInnerNewStatusRulesInner.validateJsonElement(jsonArraystatusRules.get(i));
          };
        }
      }
      if (jsonObj.get("tagRules") != null && !jsonObj.get("tagRules").isJsonNull()) {
        JsonArray jsonArraytagRules = jsonObj.getAsJsonArray("tagRules");
        if (jsonArraytagRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tagRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tagRules` to be an array in the JSON string but got `%s`", jsonObj.get("tagRules").toString()));
          }

          // validate the optional field `tagRules` (array)
          for (int i = 0; i < jsonArraytagRules.size(); i++) {
            TemplateSummaryDiffNotificationRulesInnerNewTagRulesInner.validateJsonElement(jsonArraytagRules.get(i));
          };
        }
      }
      if ((jsonObj.get("templateMetaName") != null && !jsonObj.get("templateMetaName").isJsonNull()) && !jsonObj.get("templateMetaName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `templateMetaName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("templateMetaName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TemplateSummarySummaryNotificationRulesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TemplateSummarySummaryNotificationRulesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TemplateSummarySummaryNotificationRulesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TemplateSummarySummaryNotificationRulesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<TemplateSummarySummaryNotificationRulesInner>() {
           @Override
           public void write(JsonWriter out, TemplateSummarySummaryNotificationRulesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TemplateSummarySummaryNotificationRulesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TemplateSummarySummaryNotificationRulesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TemplateSummarySummaryNotificationRulesInner
   * @throws IOException if the JSON string is invalid with respect to TemplateSummarySummaryNotificationRulesInner
   */
  public static TemplateSummarySummaryNotificationRulesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TemplateSummarySummaryNotificationRulesInner.class);
  }

  /**
   * Convert an instance of TemplateSummarySummaryNotificationRulesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

