/*
 * nFusion Solutions Market Data API
 * [nFusion Solutions](https://nfusionsolutions.com) provides [REST APIs](https://nfusionsolutions.com/data-feeds/) that deliver enterprise-grade financial data. Data sets include real-time and historical pricing for Spot prices of precious metals such as Gold, Silver, Platinum, and Palladium, exchange rates for major currency pairs, exchange rates for Crypto Currencies such as BTC, ETH, and LTC. All API access requires authentication. In order to be issued access credentials you must first enter into a service agreement with nFusion Solutions and acquire a commercial license. For information on how to obtain a licence [take a tour of our products](https://nfusionsolutions.com/nfusion-solutions-metals-gold-price-feed-tour/) or email sales@nfusionsolutions.com.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@nfusionsolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.IntervalCollectionResponse;
import java.time.OffsetDateTime;
import org.openapitools.client.model.RateResponse;
import org.openapitools.client.model.SummaryResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CurrenciesApi
 */
@Disabled
public class CurrenciesApiTest {

    private final CurrenciesApi api = new CurrenciesApi();

    /**
     * Get historical prices for requested currency pairs
     *
     * Historical OHLC data for the specified period and interval size    The combination of the interval parameter and start and end dates can result in results  being truncated to conform to result size limits. See comments on interval parameter for details on valid interval values.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void currenciesHistoryGETTest() throws ApiException {
        String pairs = null;
        OffsetDateTime start = null;
        OffsetDateTime end = null;
        String interval = null;
        String format = null;
        List<IntervalCollectionResponse> response = api.currenciesHistoryGET(pairs, start, end, interval, format);
        // TODO: test validations
    }

    /**
     * Get latest mid rate for requested currency pairs
     *
     * Current Mid Rate
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void currenciesRateGETTest() throws ApiException {
        String pairs = null;
        String format = null;
        List<RateResponse> response = api.currenciesRateGET(pairs, format);
        // TODO: test validations
    }

    /**
     * Get latest Summary for requested currency pairs
     *
     * Current and daily summary information combined into a single quote
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void currenciesSummaryGETTest() throws ApiException {
        String pairs = null;
        String format = null;
        List<SummaryResponse> response = api.currenciesSummaryGET(pairs, format);
        // TODO: test validations
    }

    /**
     * Get list of currency pairs supported by the history endpoint
     *
     * Only the currency pairs in the direction noted can be used with the history endpoint.  For example: USD/CAD is not the same as CAD/USD
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void currenciesSupportedCurrenciesHistoryGETTest() throws ApiException {
        String format = null;
        List<String> response = api.currenciesSupportedCurrenciesHistoryGET(format);
        // TODO: test validations
    }

    /**
     * Get list of currencies supported by the rate endpoint
     *
     * Any of the currencies in this list can be paired with any other currency in this list when supplied to the Rate endpoint.  For example: USD/CAD,CAD/USD,USD/EUR,EUR/CAD
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void currenciesSupportedCurrenciesRateGETTest() throws ApiException {
        String format = null;
        List<String> response = api.currenciesSupportedCurrenciesRateGET(format);
        // TODO: test validations
    }

    /**
     * Get list of currency pairs supported by the Summary endpoint
     *
     * Only the currency pairs in the direction noted can be used with the Summary endpoint.  For example: USD/CAD is not the same as CAD/USD
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void currenciesSupportedCurrenciesSummaryGETTest() throws ApiException {
        String format = null;
        List<String> response = api.currenciesSupportedCurrenciesSummaryGET(format);
        // TODO: test validations
    }

}
