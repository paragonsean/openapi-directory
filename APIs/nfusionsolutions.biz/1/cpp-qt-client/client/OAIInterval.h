/**
 * nFusion Solutions Market Data API
 * [nFusion Solutions](https://nfusionsolutions.com) provides [REST APIs](https://nfusionsolutions.com/data-feeds/) that deliver enterprise-grade financial data. Data sets include real-time and historical pricing for Spot prices of precious metals such as Gold, Silver, Platinum, and Palladium, exchange rates for major currency pairs, exchange rates for Crypto Currencies such as BTC, ETH, and LTC. All API access requires authentication. In order to be issued access credentials you must first enter into a service agreement with nFusion Solutions and acquire a commercial license. For information on how to obtain a licence [take a tour of our products](https://nfusionsolutions.com/nfusion-solutions-metals-gold-price-feed-tour/) or email sales@nfusionsolutions.com.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@nfusionsolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInterval.h
 *
 * 
 */

#ifndef OAIInterval_H
#define OAIInterval_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInterval : public OAIObject {
public:
    OAIInterval();
    OAIInterval(QString json);
    ~OAIInterval() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getChange() const;
    void setChange(const double &change);
    bool is_change_Set() const;
    bool is_change_Valid() const;

    double getChangePercent() const;
    void setChangePercent(const double &change_percent);
    bool is_change_percent_Set() const;
    bool is_change_percent_Valid() const;

    QDateTime getEnd() const;
    void setEnd(const QDateTime &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    double getHigh() const;
    void setHigh(const double &high);
    bool is_high_Set() const;
    bool is_high_Valid() const;

    double getLast() const;
    void setLast(const double &last);
    bool is_last_Set() const;
    bool is_last_Valid() const;

    double getLow() const;
    void setLow(const double &low);
    bool is_low_Set() const;
    bool is_low_Valid() const;

    double getOpen() const;
    void setOpen(const double &open);
    bool is_open_Set() const;
    bool is_open_Valid() const;

    QDateTime getStart() const;
    void setStart(const QDateTime &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_change;
    bool m_change_isSet;
    bool m_change_isValid;

    double m_change_percent;
    bool m_change_percent_isSet;
    bool m_change_percent_isValid;

    QDateTime m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    double m_high;
    bool m_high_isSet;
    bool m_high_isValid;

    double m_last;
    bool m_last_isSet;
    bool m_last_isValid;

    double m_low;
    bool m_low_isSet;
    bool m_low_isValid;

    double m_open;
    bool m_open_isSet;
    bool m_open_isValid;

    QDateTime m_start;
    bool m_start_isSet;
    bool m_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInterval)

#endif // OAIInterval_H
