/**
 * nFusion Solutions Market Data API
 * [nFusion Solutions](https://nfusionsolutions.com) provides [REST APIs](https://nfusionsolutions.com/data-feeds/) that deliver enterprise-grade financial data. Data sets include real-time and historical pricing for Spot prices of precious metals such as Gold, Silver, Platinum, and Palladium, exchange rates for major currency pairs, exchange rates for Crypto Currencies such as BTC, ETH, and LTC. All API access requires authentication. In order to be issued access credentials you must first enter into a service agreement with nFusion Solutions and acquire a commercial license. For information on how to obtain a licence [take a tour of our products](https://nfusionsolutions.com/nfusion-solutions-metals-gold-price-feed-tour/) or email sales@nfusionsolutions.com.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@nfusionsolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntervalCollection.h
 *
 * 
 */

#ifndef OAIIntervalCollection_H
#define OAIIntervalCollection_H

#include <QJsonObject>

#include "OAIInterval.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInterval;

class OAIIntervalCollection : public OAIObject {
public:
    OAIIntervalCollection();
    OAIIntervalCollection(QString json);
    ~OAIIntervalCollection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseCurrency() const;
    void setBaseCurrency(const QString &base_currency);
    bool is_base_currency_Set() const;
    bool is_base_currency_Valid() const;

    QList<OAIInterval> getIntervals() const;
    void setIntervals(const QList<OAIInterval> &intervals);
    bool is_intervals_Set() const;
    bool is_intervals_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_currency;
    bool m_base_currency_isSet;
    bool m_base_currency_isValid;

    QList<OAIInterval> m_intervals;
    bool m_intervals_isSet;
    bool m_intervals_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntervalCollection)

#endif // OAIIntervalCollection_H
