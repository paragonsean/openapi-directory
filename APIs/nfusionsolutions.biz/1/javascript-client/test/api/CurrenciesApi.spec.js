/**
 * nFusion Solutions Market Data API
 * [nFusion Solutions](https://nfusionsolutions.com) provides [REST APIs](https://nfusionsolutions.com/data-feeds/) that deliver enterprise-grade financial data. Data sets include real-time and historical pricing for Spot prices of precious metals such as Gold, Silver, Platinum, and Palladium, exchange rates for major currency pairs, exchange rates for Crypto Currencies such as BTC, ETH, and LTC. All API access requires authentication. In order to be issued access credentials you must first enter into a service agreement with nFusion Solutions and acquire a commercial license. For information on how to obtain a licence [take a tour of our products](https://nfusionsolutions.com/nfusion-solutions-metals-gold-price-feed-tour/) or email sales@nfusionsolutions.com.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@nfusionsolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NFusionSolutionsMarketDataApi);
  }
}(this, function(expect, NFusionSolutionsMarketDataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NFusionSolutionsMarketDataApi.CurrenciesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CurrenciesApi', function() {
    describe('currenciesHistoryGET', function() {
      it('should call currenciesHistoryGET successfully', function(done) {
        //uncomment below and update the code to test currenciesHistoryGET
        //instance.currenciesHistoryGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currenciesRateGET', function() {
      it('should call currenciesRateGET successfully', function(done) {
        //uncomment below and update the code to test currenciesRateGET
        //instance.currenciesRateGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currenciesSummaryGET', function() {
      it('should call currenciesSummaryGET successfully', function(done) {
        //uncomment below and update the code to test currenciesSummaryGET
        //instance.currenciesSummaryGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currenciesSupportedCurrenciesHistoryGET', function() {
      it('should call currenciesSupportedCurrenciesHistoryGET successfully', function(done) {
        //uncomment below and update the code to test currenciesSupportedCurrenciesHistoryGET
        //instance.currenciesSupportedCurrenciesHistoryGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currenciesSupportedCurrenciesRateGET', function() {
      it('should call currenciesSupportedCurrenciesRateGET successfully', function(done) {
        //uncomment below and update the code to test currenciesSupportedCurrenciesRateGET
        //instance.currenciesSupportedCurrenciesRateGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currenciesSupportedCurrenciesSummaryGET', function() {
      it('should call currenciesSupportedCurrenciesSummaryGET successfully', function(done) {
        //uncomment below and update the code to test currenciesSupportedCurrenciesSummaryGET
        //instance.currenciesSupportedCurrenciesSummaryGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
