# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.book import Book
from openapi_server import util


class Sentence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, book: Book=None, id: str=None, sentence: str=None):
        """Sentence - a model defined in OpenAPI

        :param book: The book of this Sentence.
        :param id: The id of this Sentence.
        :param sentence: The sentence of this Sentence.
        """
        self.openapi_types = {
            'book': Book,
            'id': str,
            'sentence': str
        }

        self.attribute_map = {
            'book': 'book',
            'id': 'id',
            'sentence': 'sentence'
        }

        self._book = book
        self._id = id
        self._sentence = sentence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Sentence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sentence of this Sentence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def book(self):
        """Gets the book of this Sentence.


        :return: The book of this Sentence.
        :rtype: Book
        """
        return self._book

    @book.setter
    def book(self, book):
        """Sets the book of this Sentence.


        :param book: The book of this Sentence.
        :type book: Book
        """

        self._book = book

    @property
    def id(self):
        """Gets the id of this Sentence.


        :return: The id of this Sentence.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Sentence.


        :param id: The id of this Sentence.
        :type id: str
        """

        self._id = id

    @property
    def sentence(self):
        """Gets the sentence of this Sentence.


        :return: The sentence of this Sentence.
        :rtype: str
        """
        return self._sentence

    @sentence.setter
    def sentence(self, sentence):
        """Sets the sentence of this Sentence.


        :param sentence: The sentence of this Sentence.
        :type sentence: str
        """

        self._sentence = sentence
