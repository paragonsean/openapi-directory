/**
 * Facts API
 * A full featured Facts API. REST access with json/xml/jsonp result support. On this day birth and death support, random fact, keyword search support etc. Below is the documentation for the Random Facts API calls. You can try them out right here. [Click here to subscribe](http://fungenerators.com/api/facts/) 
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* RandomFacts service.
* @module api/RandomFactsApi
* @version 1.5
*/
export default class RandomFactsApi {

    /**
    * Constructs a new RandomFactsApi. 
    * @alias module:api/RandomFactsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the factCategoriesGet operation.
     * @callback module:api/RandomFactsApi~factCategoriesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a random Fact.
     * @param {Object} opts Optional parameters
     * @param {Number} [start] start
     * @param {module:api/RandomFactsApi~factCategoriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    factCategoriesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'start': opts['start']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/fact/categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the factGet operation.
     * @callback module:api/RandomFactsApi~factGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Fact belonging to the id.
     * @param {Object} opts Optional parameters
     * @param {String} [id] ID of the fact to fetch
     * @param {module:api/RandomFactsApi~factGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    factGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/fact', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the factRandomGet operation.
     * @callback module:api/RandomFactsApi~factRandomGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a random Fact for a given category(optional) and subcategory(optional).
     * @param {Object} opts Optional parameters
     * @param {String} [category] Category to get the fact from
     * @param {String} [subcategory] Sub Category to get the fact from
     * @param {module:api/RandomFactsApi~factRandomGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    factRandomGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'category': opts['category'],
        'subcategory': opts['subcategory']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/fact/random', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the factSearchGet operation.
     * @callback module:api/RandomFactsApi~factSearchGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search for random Fact which has the text in the query, for a given category(optional) and subcategory(optional).
     * @param {Object} opts Optional parameters
     * @param {String} [query] Text to search for in the facts
     * @param {String} [category] Category to get the fact from
     * @param {String} [subcategory] Sub Category to get the fact from
     * @param {module:api/RandomFactsApi~factSearchGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    factSearchGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'query': opts['query'],
        'category': opts['category'],
        'subcategory': opts['subcategory']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/fact/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
