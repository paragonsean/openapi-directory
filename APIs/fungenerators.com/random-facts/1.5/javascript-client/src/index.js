/**
 * Facts API
 * A full featured Facts API. REST access with json/xml/jsonp result support. On this day birth and death support, random fact, keyword search support etc. Below is the documentation for the Random Facts API calls. You can try them out right here. [Click here to subscribe](http://fungenerators.com/api/facts/) 
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import FactOfTheDayApi from './api/FactOfTheDayApi';
import NumberFactsApi from './api/NumberFactsApi';
import OnThisDayApi from './api/OnThisDayApi';
import PrivateFactsApi from './api/PrivateFactsApi';
import RandomFactsApi from './api/RandomFactsApi';


/**
* A full featured Facts API. REST access with json/xml/jsonp result support. On this day birth and death support, random fact, keyword search support etc. Below is the documentation for the Random Facts API calls. You can try them out right here. [Click here to subscribe](http://fungenerators.com/api/facts/) .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FactsApi = require('index'); // See note below*.
* var xxxSvc = new FactsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FactsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FactsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FactsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.5
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
    * The FactOfTheDayApi service constructor.
    * @property {module:api/FactOfTheDayApi}
    */
    FactOfTheDayApi,

    /**
    * The NumberFactsApi service constructor.
    * @property {module:api/NumberFactsApi}
    */
    NumberFactsApi,

    /**
    * The OnThisDayApi service constructor.
    * @property {module:api/OnThisDayApi}
    */
    OnThisDayApi,

    /**
    * The PrivateFactsApi service constructor.
    * @property {module:api/PrivateFactsApi}
    */
    PrivateFactsApi,

    /**
    * The RandomFactsApi service constructor.
    * @property {module:api/RandomFactsApi}
    */
    RandomFactsApi
};
