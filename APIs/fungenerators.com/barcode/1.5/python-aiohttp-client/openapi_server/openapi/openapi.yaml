openapi: 3.0.0
info:
  contact:
    name: Fun Generators
    url: http://fungenerators.com/api/barcode/
  description: "Generate Barcode images for a given barcode number. You can decode\
    \ Barcode images and get the barcodes in a numberic form as well. Many industry\
    \ standard barcode types are supported. The best and complete Barcode API on the\
    \ cloud. [Click here to subscribe](http://fungenerators.com/api/barcode/) \n"
  termsOfService: https://fungenerators.com/terms
  title: Barcode API
  version: "1.5"
  x-apisguru-categories:
  - text
  x-origin:
  - format: openapi
    url: https://fungenerators.com/yaml/barcode.yaml
    version: "3.0"
  x-providerName: fungenerators.com
  x-serviceName: barcode
servers:
- url: http://api.fungenerators.com
- url: https://api.fungenerators.com
tags:
- description: Barcode API
  externalDocs:
    description: Find out more
    url: http://fungenerators.com/api/barcode/
  name: Barcode
paths:
  /barcode/decode:
    post:
      description: Decode a Barcode image and return the cotents if successful
      operationId: barcode_decode_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_barcode_decode_post_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "success": {
                        "total": 1
                      },
                      "contents": [
                          {
                                   "value": 234567,
                                   "format": 'C39',
                                   "content_type": "number"
                          }
                      ]
                    }
          description: 200  response
        "401":
          content:
            application/json:
              examples:
                response:
                  value: "{\n    \"error\": {\n        \"code\": 401,\n        \"\
                    message\": \"Unauthorized\"\n    }\n}              "
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Barcode
      x-openapi-router-controller: openapi_server.controllers.barcode_controller
      x-codegen-request-body-name: body
  /barcode/decode/types:
    get:
      description: Get the supported barcode types for the decoding process.
      operationId: barcode_decode_types_get
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: "{\n  \"success\": {\"total\":28},\n  \"contents\": \n  {\n\
                    \     \"types\":\n     {\n       \"C39\":\"Code 39\",\n      \
                    \ \"C39CKSUM\":\"Code 39 with Checksum\",\n       \"C39E\":\"\
                    Extended Code 39\",\n       \"C39ECKSUM\":\"Extended Code 39 With\
                    \ Checksum\",\n       \"C93\":\"Code 93\",\n       \"I25\":\"\
                    Interleaved 2 of 5\",\n       \"I25CKSUM\":\"Interleaved 2 of\
                    \ 5 with Checksum\",\n       \"C128\":\"Code 128 (Standard)\"\
                    ,\n       \"C128A\":\"Code 128-A\",\n       \"C128B\":\"Code 128-B\"\
                    ,\n       \"C128C\":\"Code 128-C\",\n       \"CODABAR\":\"CODABAR\"\
                    \n       \n     }\n  }\n}"
          description: 200  response
        "401":
          content:
            application/json:
              examples:
                response:
                  value: "{\n    \"error\": {\n        \"code\": 401,\n        \"\
                    message\": \"Unauthorized\"\n    }\n}                    "
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Barcode
      x-openapi-router-controller: openapi_server.controllers.barcode_controller
  /barcode/encode:
    get:
      description: Get a Bar Code image for the given barcode number
      operationId: barcode_encode_get
      parameters:
      - description: Barcode number
        explode: true
        in: query
        name: number
        required: true
        schema:
          format: string
          type: string
        style: form
      - description: Barcode format default C39. Valid values are the keys to those
          returned from /barcode/encode/types.
        explode: true
        in: query
        name: barcodeformat
        required: false
        schema:
          format: string
          type: string
        style: form
      - description: Output image format. Must be one of png/html/jpg/svg
        explode: true
        in: query
        name: outputformat
        required: false
        schema:
          format: string
          type: string
        style: form
      - description: Width factor of the image
        explode: true
        in: query
        name: widthfactor
        required: false
        schema:
          format: integer
          type: integer
        style: form
      - description: Total height of the image
        explode: true
        in: query
        name: totalheight
        required: false
        schema:
          format: integer
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                        "success": {
                            "total": 1
                        },
                        "contents": [
                            {
                                "encoding": "base64",
                                "format": "png",
                                "content": "",
                            }
                        ]
                    }
          description: 200  response
        "401":
          content:
            application/json:
              examples:
                response:
                  value: "{\n    \"error\": {\n        \"code\": 401,\n        \"\
                    message\": \"Unauthorized\"\n    }\n}                    "
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Barcode
      x-openapi-router-controller: openapi_server.controllers.barcode_controller
  /barcode/encode/types:
    get:
      description: Get the supported barcode types for encoding / image generation.
      operationId: barcode_encode_types_get
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "success": {"total":28},
                      "contents": {"types":
                           {
                              "C39":"Code 39",
                              "C39CKSUM":"Code 39 with Checksum",
                              "C39E":"Extended Code 39",
                              "C39ECKSUM":"Extended Code 39 With Checksum",
                              "C93":"Code 93",
                              "S25":"Standard 2 of 5",
                              "S25CKSUM":"Standard 2 of 5 with Checksum",
                              "I25":"Interleaved 2 of 5",
                              "I25CKSUM":"Interleaved 2 of 5 with Checksum",
                              "UPCA":"UPC-A",
                              "UPCE":"UPC-E",
                              "C128":"Code 128 (Standard)",
                              "C128A":"Code 128-A",
                              "C128B":"Code 128-B",
                              "C128C":"Code 128-C",
                              "EAN8":"EAN-8",
                              "EAN13":"EAN-13",
                              "MSI":"MSI Plessey",
                              "MSICKSUM":"MSI with Checksum",
                              "POSTNET":"POSTNET",
                              "PLANET":"PLANET",
                              "RMS4CC":"RMS4CC \/ CBC",
                              "KIX":"KIX",
                              "IMB":"IMB",
                              "CODABAR":"CODABAR",
                              "CODE11":"Code 11",
                              "PHARMA":"Pharma One-Track",
                              "PHARMA2T":"Pharma Two-Track"
                           }
                      }
                    }
          description: 200  response
        "401":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                        "error": {
                            "code": 401,
                            "message": "Unauthorized"
                        }
                    }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Barcode
      x-openapi-router-controller: openapi_server.controllers.barcode_controller
components:
  schemas:
    _barcode_decode_post_request:
      properties:
        barimage:
          description: Barcode image to decode and get the content value
          format: binary
          type: string
      required:
      - barimage
      type: object
  securitySchemes:
    X-Fungenerators-Api-Secret:
      in: header
      name: X-Fungenerators-Api-Secret
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_X-Fungenerators-Api-Secret
