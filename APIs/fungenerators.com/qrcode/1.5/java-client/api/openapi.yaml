openapi: 3.0.1
info:
  contact:
    name: Fun Generators
    url: http://fungenerators.com/
  description: |
    Fungenerators API gives access to the full set of generators available at fungenerators.com so that you can integrate them in your workflow or an app. [Click here to get details and subscribe](http://fungenerators.com/api) . Here are the individual API links:

      ## QR Code API ##
      Generate QR Code images for text, url, email , business cards etc. You can decode QR Code images and get the contents as well. The best and complete QR Code API on the cloud. [Click here to subscribe](http://fungenerators.com/api/qrcode)
  termsOfService: https://fungenerators.com/terms
  title: Fun Generators API
  version: "1.5"
  x-apisguru-categories:
  - text
  x-origin:
  - format: swagger
    url: https://fungenerators.com/yaml/qrcode.yaml
    version: "2.0"
  x-providerName: fungenerators.com
  x-serviceName: qrcode
servers:
- url: https://api.fungenerators.com/
- url: http://api.fungenerators.com/
tags:
- description: QR code API
  externalDocs:
    description: Find out more
    url: http://fungenerators.com/api/qrcode
  name: QR Code
paths:
  /qrcode/business_card:
    get:
      description: Get a QR Code image for a business card aka VCARD
      parameters:
      - description: First Name
        in: query
        name: firstname
        required: true
        schema:
          format: string
          type: string
      - description: Last Name
        in: query
        name: lastname
        required: true
        schema:
          format: string
          type: string
      - description: Middle Name
        in: query
        name: middlename
        schema:
          format: string
          type: string
      - description: Email id
        in: query
        name: email
        required: true
        schema:
          format: string
          type: string
      - description: Company Name
        in: query
        name: company
        schema:
          format: string
          type: string
      - description: Work Phone Number
        in: query
        name: phone_work
        schema:
          format: string
          type: string
      - description: Home Phone Number
        in: query
        name: phone_home
        schema:
          format: string
          type: string
      - description: Cell Phone Number
        in: query
        name: phone_cell
        schema:
          format: string
          type: string
      - description: Street Address
        in: query
        name: street1
        schema:
          format: string
          type: string
      - description: Street Address 2
        in: query
        name: street2
        schema:
          format: string
          type: string
      - description: City
        in: query
        name: city
        schema:
          format: string
          type: string
      - description: Zip Code
        in: query
        name: zip
        schema:
          format: string
          type: string
      - description: State
        in: query
        name: state
        schema:
          format: string
          type: string
      - description: Country
        in: query
        name: country
        schema:
          format: string
          type: string
      - description: Output image format. Must be one of png/eps/raw/svg
        in: query
        name: format
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": [
                        {
                            "encoding": "base64",
                            "format": "png",
                            "content": "base64 encoded image file",
                        }
                    ]
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - QR Code
      x-accepts:
      - application/json
  /qrcode/decode:
    post:
      description: Decode a QR Code image and return the cotents if successful
      requestBody:
        content:
          mulitpart/form-data:
            schema:
              $ref: '#/components/schemas/_qrcode_decode_post_request'
          mulitpart/form-data-endcoded:
            schema:
              $ref: '#/components/schemas/_qrcode_decode_post_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_qrcode_decode_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                      "content_value": "http://fungenerators.com/qr-code/"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}              "
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - QR Code
      x-content-type: mulitpart/form-data
      x-accepts:
      - application/json
  /qrcode/email:
    get:
      description: Get a QR Code image for an email
      parameters:
      - description: Email id to send the email to
        in: query
        name: email
        required: true
        schema:
          format: string
          type: string
      - description: Subject of the email(optional)
        in: query
        name: subject
        schema:
          format: string
          type: string
      - description: Body of the email(optional)
        in: query
        name: body
        schema:
          format: string
          type: string
      - description: Output image format. Must be one of png/png/eps/raw/svg
        in: query
        name: format
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": [
                        {
                            "encoding": "base64",
                            "format": "png",
                            "content": "base64 encoded image file",
                        }
                    ]
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - QR Code
      x-accepts:
      - application/json
  /qrcode/phone:
    get:
      description: Get a QR Code image for a phone number
      parameters:
      - description: Phone Number
        in: query
        name: number
        required: true
        schema:
          format: string
          type: string
      - description: Output image format. Must be one of png/eps/raw/svg
        in: query
        name: format
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": [
                        {
                            "encoding": "base64",
                            "format": "png",
                            "content": "base64 encoded image file",
                        }
                    ]
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - QR Code
      x-accepts:
      - application/json
  /qrcode/raw:
    get:
      description: Get a QR Code image for a block of raw data
      parameters:
      - description: Raw Text value
        in: query
        name: rawtext
        required: true
        schema:
          format: string
          type: string
      - description: Output image format. Must be one of png/eps/raw/svg
        in: query
        name: format
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": [
                        {
                            "encoding": "base64",
                            "format": "png",
                            "content": "base64 encoded image file",
                        }
                    ]
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - QR Code
      x-accepts:
      - application/json
  /qrcode/skype:
    get:
      description: Get a QR Code image for a skype user
      parameters:
      - description: Skype User name
        in: query
        name: username
        required: true
        schema:
          format: string
          type: string
      - description: Output image format. Must be one of png/eps/raw/svg
        in: query
        name: format
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": [
                        {
                            "encoding": "base64",
                            "format": "png",
                            "content": "base64 encoded image file",
                        }
                    ]
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - QR Code
      x-accepts:
      - application/json
  /qrcode/sms:
    get:
      description: Get a QR Code image for a Phone number for SMS messaging
      parameters:
      - description: Phone Number to SMS
        in: query
        name: number
        required: true
        schema:
          format: string
          type: string
      - description: Output image format. Must be one of png/eps/raw/svg
        in: query
        name: format
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": [
                        {
                            "encoding": "base64",
                            "format": "png",
                            "content": "base64 encoded image file",
                        }
                    ]
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - QR Code
      x-accepts:
      - application/json
  /qrcode/text:
    get:
      description: Get a QR Code image for a block of text
      parameters:
      - description: Text value
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      - description: Output image format. Must be one of png/eps/raw/svg
        in: query
        name: format
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": [
                        {
                            "encoding": "base64",
                            "format": "png",
                            "content": "base64 encoded image file",
                        }
                    ]
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - QR Code
      x-accepts:
      - application/json
  /qrcode/url:
    get:
      description: Get a QR Code image for a url
      parameters:
      - description: URL value
        in: query
        name: url
        required: true
        schema:
          format: string
          type: string
      - description: Output image format. Must be one of png/raw/eps/svg
        in: query
        name: format
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": [
                        {
                            "encoding": "base64",
                            "format": "png",
                            "content": "base64 encoded image file",
                        }
                    ]
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - QR Code
      x-accepts:
      - application/json
components:
  schemas:
    _qrcode_decode_post_request:
      properties:
        qrimage:
          description: QR Code image to decode and get the content value
          format: binary
          type: string
      required:
      - qrimage
      type: object
  securitySchemes:
    X-Fungenerators-Api-Secret:
      in: header
      name: X-Fungenerators-Api-Secret
      type: apiKey
x-original-swagger-version: "2.0"

