/*
 * Fun Generators API
 * Fungenerators API gives access to the full set of generators available at fungenerators.com so that you can integrate them in your workflow or an app. [Click here to get details and subscribe](http://fungenerators.com/api) . Here are the individual API links:    ## QR Code API ##   Generate QR Code images for text, url, email , business cards etc. You can decode QR Code images and get the contents as well. The best and complete QR Code API on the cloud. [Click here to subscribe](http://fungenerators.com/api/qrcode) 
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.QrcodeDecodePostRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QrCodeApi
 */
@Disabled
public class QrCodeApiTest {

    private final QrCodeApi api = new QrCodeApi();

    /**
     * Get a QR Code image for a business card aka VCARD
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qrcodeBusinessCardGetTest() throws ApiException {
        String firstname = null;
        String lastname = null;
        String email = null;
        String middlename = null;
        String company = null;
        String phoneWork = null;
        String phoneHome = null;
        String phoneCell = null;
        String street1 = null;
        String street2 = null;
        String city = null;
        String zip = null;
        String state = null;
        String country = null;
        String format = null;
        api.qrcodeBusinessCardGet(firstname, lastname, email, middlename, company, phoneWork, phoneHome, phoneCell, street1, street2, city, zip, state, country, format);
        // TODO: test validations
    }

    /**
     * Decode a QR Code image and return the cotents if successful
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qrcodeDecodePostTest() throws ApiException {
        QrcodeDecodePostRequest qrcodeDecodePostRequest = null;
        api.qrcodeDecodePost(qrcodeDecodePostRequest);
        // TODO: test validations
    }

    /**
     * Get a QR Code image for an email
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qrcodeEmailGetTest() throws ApiException {
        String email = null;
        String subject = null;
        String body = null;
        String format = null;
        api.qrcodeEmailGet(email, subject, body, format);
        // TODO: test validations
    }

    /**
     * Get a QR Code image for a phone number
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qrcodePhoneGetTest() throws ApiException {
        String number = null;
        String format = null;
        api.qrcodePhoneGet(number, format);
        // TODO: test validations
    }

    /**
     * Get a QR Code image for a block of raw data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qrcodeRawGetTest() throws ApiException {
        String rawtext = null;
        String format = null;
        api.qrcodeRawGet(rawtext, format);
        // TODO: test validations
    }

    /**
     * Get a QR Code image for a skype user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qrcodeSkypeGetTest() throws ApiException {
        String username = null;
        String format = null;
        api.qrcodeSkypeGet(username, format);
        // TODO: test validations
    }

    /**
     * Get a QR Code image for a Phone number for SMS messaging
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qrcodeSmsGetTest() throws ApiException {
        String number = null;
        String format = null;
        api.qrcodeSmsGet(number, format);
        // TODO: test validations
    }

    /**
     * Get a QR Code image for a block of text
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qrcodeTextGetTest() throws ApiException {
        String text = null;
        String format = null;
        api.qrcodeTextGet(text, format);
        // TODO: test validations
    }

    /**
     * Get a QR Code image for a url
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void qrcodeUrlGetTest() throws ApiException {
        String url = null;
        String format = null;
        api.qrcodeUrlGet(url, format);
        // TODO: test validations
    }

}
