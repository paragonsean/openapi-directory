# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QrcodeDecodePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qrimage: file=None):
        """QrcodeDecodePostRequest - a model defined in OpenAPI

        :param qrimage: The qrimage of this QrcodeDecodePostRequest.
        """
        self.openapi_types = {
            'qrimage': file
        }

        self.attribute_map = {
            'qrimage': 'qrimage'
        }

        self._qrimage = qrimage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QrcodeDecodePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _qrcode_decode_post_request of this QrcodeDecodePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qrimage(self):
        """Gets the qrimage of this QrcodeDecodePostRequest.

        QR Code image to decode and get the content value

        :return: The qrimage of this QrcodeDecodePostRequest.
        :rtype: file
        """
        return self._qrimage

    @qrimage.setter
    def qrimage(self, qrimage):
        """Sets the qrimage of this QrcodeDecodePostRequest.

        QR Code image to decode and get the content value

        :param qrimage: The qrimage of this QrcodeDecodePostRequest.
        :type qrimage: file
        """
        if qrimage is None:
            raise ValueError("Invalid value for `qrimage`, must not be `None`")

        self._qrimage = qrimage
