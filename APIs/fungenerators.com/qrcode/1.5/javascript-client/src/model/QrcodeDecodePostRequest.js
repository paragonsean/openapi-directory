/**
 * Fun Generators API
 * Fungenerators API gives access to the full set of generators available at fungenerators.com so that you can integrate them in your workflow or an app. [Click here to get details and subscribe](http://fungenerators.com/api) . Here are the individual API links:    ## QR Code API ##   Generate QR Code images for text, url, email , business cards etc. You can decode QR Code images and get the contents as well. The best and complete QR Code API on the cloud. [Click here to subscribe](http://fungenerators.com/api/qrcode) 
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QrcodeDecodePostRequest model module.
 * @module model/QrcodeDecodePostRequest
 * @version 1.5
 */
class QrcodeDecodePostRequest {
    /**
     * Constructs a new <code>QrcodeDecodePostRequest</code>.
     * @alias module:model/QrcodeDecodePostRequest
     * @param qrimage {File} QR Code image to decode and get the content value
     */
    constructor(qrimage) { 
        
        QrcodeDecodePostRequest.initialize(this, qrimage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, qrimage) { 
        obj['qrimage'] = qrimage;
    }

    /**
     * Constructs a <code>QrcodeDecodePostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QrcodeDecodePostRequest} obj Optional instance to populate.
     * @return {module:model/QrcodeDecodePostRequest} The populated <code>QrcodeDecodePostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QrcodeDecodePostRequest();

            if (data.hasOwnProperty('qrimage')) {
                obj['qrimage'] = ApiClient.convertToType(data['qrimage'], File);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QrcodeDecodePostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QrcodeDecodePostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QrcodeDecodePostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

QrcodeDecodePostRequest.RequiredProperties = ["qrimage"];

/**
 * QR Code image to decode and get the content value
 * @member {File} qrimage
 */
QrcodeDecodePostRequest.prototype['qrimage'] = undefined;






export default QrcodeDecodePostRequest;

