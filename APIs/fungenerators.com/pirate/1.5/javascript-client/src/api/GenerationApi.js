/**
 * Pirates API
 * Ahoy matey! We help the landlubbers to get to know about the seamen way! You can generate pirate names, get some real pirate insults and pirate filler text. Oh you can translate to pirate lingo as well. [Click here to subscribe](http://fungenerators.com/api/pirate/)  
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Generation service.
* @module api/GenerationApi
* @version 1.5
*/
export default class GenerationApi {

    /**
    * Constructs a new GenerationApi. 
    * @alias module:api/GenerationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the pirateGenerateInsultGet operation.
     * @callback module:api/GenerationApi~pirateGenerateInsultGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate random pirate insults.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] No of insults to generate
     * @param {module:api/GenerationApi~pirateGenerateInsultGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pirateGenerateInsultGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pirate/generate/insult', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pirateGenerateLoremIpsumGet operation.
     * @callback module:api/GenerationApi~pirateGenerateLoremIpsumGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate pirate lorem ipsum.
     * @param {Object} opts Optional parameters
     * @param {String} [type] Type of element to generate `paragraphs/sentences/words`.
     * @param {Number} [limit] No of elements to generate
     * @param {module:api/GenerationApi~pirateGenerateLoremIpsumGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pirateGenerateLoremIpsumGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'type': opts['type'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pirate/generate/lorem-ipsum', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pirateGenerateNameGet operation.
     * @callback module:api/GenerationApi~pirateGenerateNameGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate random pirate names.
     * @param {Object} opts Optional parameters
     * @param {String} [variation] Variation to generate `male/female`.
     * @param {Number} [limit] No of names to generate
     * @param {module:api/GenerationApi~pirateGenerateNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pirateGenerateNameGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'variation': opts['variation'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pirate/generate/name', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
