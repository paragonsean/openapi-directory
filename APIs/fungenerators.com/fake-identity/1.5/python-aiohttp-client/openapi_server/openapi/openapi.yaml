openapi: 3.0.1
info:
  contact:
    name: Fun Generators
    url: http://fungenerators.com/
  description: |
    Generate random fake identities (name, address, email, phone , credit card info etc). [Click here to subscribe](http://fungenerators.com/api/fakeidentity/)
  termsOfService: https://fungenerators.com/terms
  title: Fake identity generation API
  version: "1.5"
  x-apisguru-categories:
  - text
  x-origin:
  - format: swagger
    url: https://fungenerators.com/yaml/fake-identity.yaml
    version: "2.0"
  x-providerName: fungenerators.com
  x-serviceName: fake-identity
servers:
- url: https://api.fungenerators.com/
- url: http://api.fungenerators.com/
tags:
- description: Fake Identity Generation API
  externalDocs:
    description: Find out more
    url: http://fungenerators.com/api/fakeidentity/
  name: Fake Identity
paths:
  /identity/company:
    get:
      description: Generate full company identity
      operationId: identity_company_get
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                      "total": 5
                    },
                    "contents": {
                      "name": "Walker-Crist",
                      "phone": "1-800-307-1546",
                      "domain": "walker-crist.xyz",
                      "email": "request@walker-crist.xyz",
                      "address": {
                        "address": "17487 Steuber Locks Suite 996",
                        "city": "South Einarchester",
                        "state": "New Mexico",
                        "country": "USA",
                        "postalcode": "46493"
                      }
                    },
                    "copyright": "https://fungenerators.com/"
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/company/address:
    get:
      description: Generate postal addresses
      operationId: identity_company_address_get
      parameters:
      - description: No of addresses to return. Defaults to 1.
        in: query
        name: limit
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 5
                  },
                  "contents": {
                    "addresses": [
                      {
                        "address": "880 Lessie Cove Apt. 110",
                        "city": "West Marge",
                        "state": "Massachusetts",
                        "country": "USA",
                        "postalcode": "09983"
                      },
                      {
                        "address": "48726 Curtis Station",
                        "city": "Baileystad",
                        "state": "Iowa",
                        "country": "USA",
                        "postalcode": "64152-3296"
                      },
                      {
                        "address": "49595 Myra Loop Apt. 925",
                        "city": "Coleport",
                        "state": "Oregon",
                        "country": "USA",
                        "postalcode": "02499"
                      },
                      {
                        "address": "60581 Pearl Inlet",
                        "city": "Wuckertmouth",
                        "state": "Connecticut",
                        "country": "USA",
                        "postalcode": "18376"
                      },
                      {
                        "address": "38440 Cassandre Circles",
                        "city": "Port Ezekiel",
                        "state": "Alabama",
                        "country": "USA",
                        "postalcode": "05904-0794"
                      }
                    ]
                  },
                  "copyright": "https://fungenerators.com/"
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/company/name:
    get:
      description: Generate company name(s)
      operationId: identity_company_name_get
      parameters:
      - description: No of names to return. Defaults to 1.
        in: query
        name: limit
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: "{\n  \"success\": {\n    \"total\": \"5\"\n  },\n  \"contents\"\
                : {\n    \"names\": [\n      \"Johnston-Weissnat Ltd\",\n      \"\
                Wisoky Group Inc\",\n      \"Pfannerstill Ltd and Sons\",\n      \"\
                Rempel Ltd PLC\",\n      \"Wolf-Streich and Sons\"\n    ]\n  },\n\
                \  \"copyright\": \"https://fungenerators.com/\"\n}            "
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/company/phonenumber:
    get:
      description: Generate random company phone number(s)
      operationId: identity_company_phonenumber_get
      parameters:
      - description: No of phone numbers to return. Defaults to 1.
        in: query
        name: limit
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 5
                  },
                  "contents": {
                    "phonenumbers": [
                      "1-800-976-4219",
                      "(808) 423-7981",
                      "(888) 963-6939 x028",
                      "800-793-6143 x2948",
                      "1-808-351-9690 x026"
                    ]
                  },
                  "copyright": "https://fungenerators.com/"
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/person:
    get:
      description: "Generate full identity name, phone, email, address, credit card\
        \ etc."
      operationId: identity_person_get
      responses:
        "200":
          content:
            application/json:
              example: "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\"\
                : {\n    \"name\": {\n      \"first\": \"Brittany\",\n      \"last\"\
                : \"Mohr\",\n      \"full\": \"Brittany Mohr\"\n    },\n    \"phone\"\
                : \"1-542-830-8666 x4187\",\n    \"email\": \"mohr1963@hotmail.com\"\
                ,\n    \"birthday\": \"1975/03/13\",\n    \"address\": {\n      \"\
                address\": \"6029 Homenick Ridges Suite 551\",\n      \"city\": \"\
                Adelbertshire\",\n      \"state\": \"Connecticut\",\n      \"country\"\
                : \"USA\",\n      \"postalcode\": \"06305-2706\"\n    },\n    \"credit-card\"\
                : {\n      \"type\": \"MasterCard\",\n      \"number\": \"4539572808851695\"\
                ,\n      \"expiration\": \"12/20\"\n    }\n  },\n  \"copyright\":\
                \ \"https://fungenerators.com/\"\n}        "
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/person/address:
    get:
      description: Generate postal addresses
      operationId: identity_person_address_get
      parameters:
      - description: No of addresses to return. Defaults to 1.
        in: query
        name: limit
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 5
                  },
                  "contents": {
                    "addresses": [
                      {
                        "address": "880 Lessie Cove Apt. 110",
                        "city": "West Marge",
                        "state": "Massachusetts",
                        "country": "USA",
                        "postalcode": "09983"
                      },
                      {
                        "address": "48726 Curtis Station",
                        "city": "Baileystad",
                        "state": "Iowa",
                        "country": "USA",
                        "postalcode": "64152-3296"
                      },
                      {
                        "address": "49595 Myra Loop Apt. 925",
                        "city": "Coleport",
                        "state": "Oregon",
                        "country": "USA",
                        "postalcode": "02499"
                      },
                      {
                        "address": "60581 Pearl Inlet",
                        "city": "Wuckertmouth",
                        "state": "Connecticut",
                        "country": "USA",
                        "postalcode": "18376"
                      },
                      {
                        "address": "38440 Cassandre Circles",
                        "city": "Port Ezekiel",
                        "state": "Alabama",
                        "country": "USA",
                        "postalcode": "05904-0794"
                      }
                    ]
                  },
                  "copyright": "https://fungenerators.com/"
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/person/creditcard:
    get:
      description: "Generate credit card details (number, type, expiration date, name\
        \ on the card etc)."
      operationId: identity_person_creditcard_get
      parameters:
      - description: No of credit card details to return. Defaults to 1.
        in: query
        name: limit
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\"\
                : {\n    \"creditcards\": [\n      {\n        \"name\": \"Una Nikolaus\"\
                ,\n        \"type\": \"Visa\",\n        \"number\": \"4556029936375707\"\
                ,\n        \"expiration\": \"02/21\"\n      },\n      {\n        \"\
                name\": \"Dessie Runolfsson\",\n        \"type\": \"Visa\",\n    \
                \    \"number\": \"6011247607523686\",\n        \"expiration\": \"\
                11/19\"\n      },\n      {\n        \"name\": \"Dax Kunze\",\n   \
                \     \"type\": \"MasterCard\",\n        \"number\": \"2221543215045897\"\
                ,\n        \"expiration\": \"11/20\"\n      },\n      {\n        \"\
                name\": \"Natalia Nicolas\",\n        \"type\": \"Visa\",\n      \
                \  \"number\": \"345851764439527\",\n        \"expiration\": \"03/22\"\
                \n      },\n      {\n        \"name\": \"Leda Von\",\n        \"type\"\
                : \"Visa\",\n        \"number\": \"4868179383681744\",\n        \"\
                expiration\": \"12/21\"\n      }\n    ]\n  },\n  \"copyright\": \"\
                https://fungenerators.com/\"\n}        "
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/person/email:
    get:
      description: Generate random email ids
      operationId: identity_person_email_get
      parameters:
      - description: No of email ids to return. Defaults to 1.
        in: query
        name: limit
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 5
                  },
                  "contents": {
                    "emails": [
                      "lehner.alta@gmail.com",
                      "amitchell@gmail.com",
                      "chesley03@gmail.com",
                      "nhowell@hotmail.com",
                      "ottilie.oconner@hotmail.com"
                    ]
                  },
                  "copyright": "https://fungenerators.com/"
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/person/name:
    get:
      description: Generate full name(s)
      operationId: identity_person_name_get
      parameters:
      - description: Gender of the names. If not specified both gender names will
          be returned.
        in: query
        name: gender
        schema:
          format: string
          type: string
      - description: No of names to return. Defaults to 1.
        in: query
        name: limit
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 5
                  },
                  "contents": {
                    "names": [
                      "Shanna Hagenes",
                      "Therese Beatty II",
                      "Mrs. Electa Cruickshank MD",
                      "Rachael Quigley",
                      "Kyra Bins"
                    ]
                  },
                  "copyright": "https://fungenerators.com/"
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/person/name/first:
    get:
      description: Generate first name (in a given gender)
      operationId: identity_person_name_first_get
      parameters:
      - description: Gender of the names. If not specified both gender names will
          be returned.
        in: query
        name: gender
        schema:
          format: string
          type: string
      - description: No of names to return. Defaults to 1.
        in: query
        name: limit
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 5
                  },
                  "contents": {
                    "names": [
                      "Dedrick",
                      "Jedidiah",
                      "Helga",
                      "Berniece",
                      "Jammie"
                    ]
                  },
                  "copyright": "https://fungenerators.com/"
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/person/name/last:
    get:
      description: Generate last name(s)
      operationId: identity_person_name_last_get
      parameters:
      - description: No of names to return. Defaults to 1.
        in: query
        name: limit
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 5
                  },
                  "contents": {
                    "names": [
                      "Trantow",
                      "Abshire",
                      "Bode",
                      "Dickens",
                      "Harris"
                    ]
                  },
                  "copyright": "https://fungenerators.com/"
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
  /identity/person/phonenumber:
    get:
      description: Generate random phone number(s)
      operationId: identity_person_phonenumber_get
      parameters:
      - description: No of phone numbers to return. Defaults to 1.
        in: query
        name: limit
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 5
                  },
                  "contents": {
                    "phonenumbers": [
                      "1-501-976-4219",
                      "(808) 423-7981",
                      "(295) 963-6939 x028",
                      "324-793-6143 x2948",
                      "1-931-351-9690 x026"
                    ]
                  },
                  "copyright": "https://fungenerators.com/"
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Fungenerators-Api-Secret: []
      tags:
      - Fake Identity
      x-openapi-router-controller: openapi_server.controllers.fake_identity_controller
components:
  schemas: {}
  securitySchemes:
    X-Fungenerators-Api-Secret:
      in: header
      name: X-Fungenerators-Api-Secret
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_X-Fungenerators-Api-Secret
x-original-swagger-version: "2.0"
