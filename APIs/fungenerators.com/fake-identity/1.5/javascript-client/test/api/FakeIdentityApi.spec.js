/**
 * Fake identity generation API
 * Generate random fake identities (name, address, email, phone , credit card info etc). [Click here to subscribe](http://fungenerators.com/api/fakeidentity/) 
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FakeIdentityGenerationApi);
  }
}(this, function(expect, FakeIdentityGenerationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FakeIdentityGenerationApi.FakeIdentityApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FakeIdentityApi', function() {
    describe('identityCompanyAddressGet', function() {
      it('should call identityCompanyAddressGet successfully', function(done) {
        //uncomment below and update the code to test identityCompanyAddressGet
        //instance.identityCompanyAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityCompanyGet', function() {
      it('should call identityCompanyGet successfully', function(done) {
        //uncomment below and update the code to test identityCompanyGet
        //instance.identityCompanyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityCompanyNameGet', function() {
      it('should call identityCompanyNameGet successfully', function(done) {
        //uncomment below and update the code to test identityCompanyNameGet
        //instance.identityCompanyNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityCompanyPhonenumberGet', function() {
      it('should call identityCompanyPhonenumberGet successfully', function(done) {
        //uncomment below and update the code to test identityCompanyPhonenumberGet
        //instance.identityCompanyPhonenumberGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityPersonAddressGet', function() {
      it('should call identityPersonAddressGet successfully', function(done) {
        //uncomment below and update the code to test identityPersonAddressGet
        //instance.identityPersonAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityPersonCreditcardGet', function() {
      it('should call identityPersonCreditcardGet successfully', function(done) {
        //uncomment below and update the code to test identityPersonCreditcardGet
        //instance.identityPersonCreditcardGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityPersonEmailGet', function() {
      it('should call identityPersonEmailGet successfully', function(done) {
        //uncomment below and update the code to test identityPersonEmailGet
        //instance.identityPersonEmailGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityPersonGet', function() {
      it('should call identityPersonGet successfully', function(done) {
        //uncomment below and update the code to test identityPersonGet
        //instance.identityPersonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityPersonNameFirstGet', function() {
      it('should call identityPersonNameFirstGet successfully', function(done) {
        //uncomment below and update the code to test identityPersonNameFirstGet
        //instance.identityPersonNameFirstGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityPersonNameGet', function() {
      it('should call identityPersonNameGet successfully', function(done) {
        //uncomment below and update the code to test identityPersonNameGet
        //instance.identityPersonNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityPersonNameLastGet', function() {
      it('should call identityPersonNameLastGet successfully', function(done) {
        //uncomment below and update the code to test identityPersonNameLastGet
        //instance.identityPersonNameLastGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identityPersonPhonenumberGet', function() {
      it('should call identityPersonPhonenumberGet successfully', function(done) {
        //uncomment below and update the code to test identityPersonPhonenumberGet
        //instance.identityPersonPhonenumberGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
