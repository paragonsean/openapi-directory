/**
 * Fake identity generation API
 * Generate random fake identities (name, address, email, phone , credit card info etc). [Click here to subscribe](http://fungenerators.com/api/fakeidentity/) 
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* FakeIdentity service.
* @module api/FakeIdentityApi
* @version 1.5
*/
export default class FakeIdentityApi {

    /**
    * Constructs a new FakeIdentityApi. 
    * @alias module:api/FakeIdentityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the identityCompanyAddressGet operation.
     * @callback module:api/FakeIdentityApi~identityCompanyAddressGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate postal addresses
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] No of addresses to return. Defaults to 1.
     * @param {module:api/FakeIdentityApi~identityCompanyAddressGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityCompanyAddressGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/company/address', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityCompanyGet operation.
     * @callback module:api/FakeIdentityApi~identityCompanyGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate full company identity
     * @param {module:api/FakeIdentityApi~identityCompanyGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityCompanyGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/company', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityCompanyNameGet operation.
     * @callback module:api/FakeIdentityApi~identityCompanyNameGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate company name(s)
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] No of names to return. Defaults to 1.
     * @param {module:api/FakeIdentityApi~identityCompanyNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityCompanyNameGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/company/name', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityCompanyPhonenumberGet operation.
     * @callback module:api/FakeIdentityApi~identityCompanyPhonenumberGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate random company phone number(s)
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] No of phone numbers to return. Defaults to 1.
     * @param {module:api/FakeIdentityApi~identityCompanyPhonenumberGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityCompanyPhonenumberGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/company/phonenumber', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityPersonAddressGet operation.
     * @callback module:api/FakeIdentityApi~identityPersonAddressGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate postal addresses
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] No of addresses to return. Defaults to 1.
     * @param {module:api/FakeIdentityApi~identityPersonAddressGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityPersonAddressGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/person/address', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityPersonCreditcardGet operation.
     * @callback module:api/FakeIdentityApi~identityPersonCreditcardGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate credit card details (number, type, expiration date, name on the card etc).
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] No of credit card details to return. Defaults to 1.
     * @param {module:api/FakeIdentityApi~identityPersonCreditcardGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityPersonCreditcardGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/person/creditcard', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityPersonEmailGet operation.
     * @callback module:api/FakeIdentityApi~identityPersonEmailGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate random email ids
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] No of email ids to return. Defaults to 1.
     * @param {module:api/FakeIdentityApi~identityPersonEmailGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityPersonEmailGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/person/email', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityPersonGet operation.
     * @callback module:api/FakeIdentityApi~identityPersonGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate full identity name, phone, email, address, credit card etc.
     * @param {module:api/FakeIdentityApi~identityPersonGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityPersonGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/person', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityPersonNameFirstGet operation.
     * @callback module:api/FakeIdentityApi~identityPersonNameFirstGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate first name (in a given gender)
     * @param {Object} opts Optional parameters
     * @param {String} [gender] Gender of the names. If not specified both gender names will be returned.
     * @param {Number} [limit] No of names to return. Defaults to 1.
     * @param {module:api/FakeIdentityApi~identityPersonNameFirstGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityPersonNameFirstGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'gender': opts['gender'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/person/name/first', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityPersonNameGet operation.
     * @callback module:api/FakeIdentityApi~identityPersonNameGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate full name(s)
     * @param {Object} opts Optional parameters
     * @param {String} [gender] Gender of the names. If not specified both gender names will be returned.
     * @param {Number} [limit] No of names to return. Defaults to 1.
     * @param {module:api/FakeIdentityApi~identityPersonNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityPersonNameGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'gender': opts['gender'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/person/name', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityPersonNameLastGet operation.
     * @callback module:api/FakeIdentityApi~identityPersonNameLastGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate last name(s)
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] No of names to return. Defaults to 1.
     * @param {module:api/FakeIdentityApi~identityPersonNameLastGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityPersonNameLastGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/person/name/last', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identityPersonPhonenumberGet operation.
     * @callback module:api/FakeIdentityApi~identityPersonPhonenumberGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate random phone number(s)
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] No of phone numbers to return. Defaults to 1.
     * @param {module:api/FakeIdentityApi~identityPersonPhonenumberGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identityPersonPhonenumberGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identity/person/phonenumber', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
