/**
 * Shakespeare API
 * Shakespeare API. Generate random Shakespeare quotes, names, insults, lorem ipsum etc. Translate normal English to Shakespeare English.  [Click here to subscribe](http://fungenerators.com/api/shakespeare/)  
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Generation service.
* @module api/GenerationApi
* @version 1.5
*/
export default class GenerationApi {

    /**
    * Constructs a new GenerationApi. 
    * @alias module:api/GenerationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the shakespeareGenerateInsultGet operation.
     * @callback module:api/GenerationApi~shakespeareGenerateInsultGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate random Shakespeare style insults.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] No of insults to generate
     * @param {module:api/GenerationApi~shakespeareGenerateInsultGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    shakespeareGenerateInsultGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/shakespeare/generate/insult', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the shakespeareGenerateLoremIpsumGet operation.
     * @callback module:api/GenerationApi~shakespeareGenerateLoremIpsumGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate Shakespeare lorem ipsum.
     * @param {Object} opts Optional parameters
     * @param {String} [type] Type of element to generate `paragraphs/sentences/words`.
     * @param {Number} [limit] No of elements to generate
     * @param {module:api/GenerationApi~shakespeareGenerateLoremIpsumGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    shakespeareGenerateLoremIpsumGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'type': opts['type'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/shakespeare/generate/lorem-ipsum', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the shakespeareGenerateNameGet operation.
     * @callback module:api/GenerationApi~shakespeareGenerateNameGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate random Shakespearen names.
     * @param {Object} opts Optional parameters
     * @param {String} [variation] Variation to generate `male/female`.
     * @param {Number} [limit] No of names to generate
     * @param {module:api/GenerationApi~shakespeareGenerateNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    shakespeareGenerateNameGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'variation': opts['variation'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/shakespeare/generate/name', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
