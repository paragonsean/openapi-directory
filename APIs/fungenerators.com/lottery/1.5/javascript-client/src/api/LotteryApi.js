/**
 * Random Lottery Number generator API
 * Below is the documentation for the API calls. You can try them out right here.  
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Lottery service.
* @module api/LotteryApi
* @version 1.5
*/
export default class LotteryApi {

    /**
    * Constructs a new LotteryApi. 
    * @alias module:api/LotteryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the lotteryCountriesGet operation.
     * @callback module:api/LotteryApi~lotteryCountriesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the complete list of countries supported in the number generation API.
     * @param {module:api/LotteryApi~lotteryCountriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    lotteryCountriesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/lottery/countries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the lotteryDrawGet operation.
     * @callback module:api/LotteryApi~lotteryDrawGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate random draw for a given lottery game.
     * @param {String} game Lottery Game Name
     * @param {Object} opts Optional parameters
     * @param {Number} [count] Number of draws (max 5 per request)
     * @param {module:api/LotteryApi~lotteryDrawGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    lotteryDrawGet(game, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'game' is set
      if (game === undefined || game === null) {
        throw new Error("Missing the required parameter 'game' when calling lotteryDrawGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'game': game,
        'count': opts['count']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/lottery/draw', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the lotterySupportedGet operation.
     * @callback module:api/LotteryApi~lotterySupportedGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of supported lottery games supported in the given country.
     * @param {String} country Country Name
     * @param {module:api/LotteryApi~lotterySupportedGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    lotterySupportedGet(country, callback) {
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling lotterySupportedGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'country': country
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/lottery/supported', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
