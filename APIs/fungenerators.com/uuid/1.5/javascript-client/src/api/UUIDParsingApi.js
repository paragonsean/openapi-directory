/**
 * UUID Generation API
 * A full featured, REST based UUID generator with json/xml/jsonp result support. You can try them out right here. [Click here to subscribe](http://fungenerators.com/api/uuid/) 
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* UUIDParsing service.
* @module api/UUIDParsingApi
* @version 1.5
*/
export default class UUIDParsingApi {

    /**
    * Constructs a new UUIDParsingApi. 
    * @alias module:api/UUIDParsingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the uuidPost operation.
     * @callback module:api/UUIDParsingApi~uuidPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Parse a UUID string and return its version and check whether it is valid.
     * @param {String} uuidstr UUID String to parse
     * @param {module:api/UUIDParsingApi~uuidPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    uuidPost(uuidstr, callback) {
      let postBody = null;
      // verify the required parameter 'uuidstr' is set
      if (uuidstr === undefined || uuidstr === null) {
        throw new Error("Missing the required parameter 'uuidstr' when calling uuidPost");
      }

      let pathParams = {
      };
      let queryParams = {
        'uuidstr': uuidstr
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Fungenerators-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/uuid', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
