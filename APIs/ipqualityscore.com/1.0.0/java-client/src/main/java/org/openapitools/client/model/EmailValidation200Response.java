/*
 * IPQualityScore API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.EmailValidation200ResponseAssociatedNames;
import org.openapitools.client.model.EmailValidation200ResponseAssociatedPhoneNumbers;
import org.openapitools.client.model.EmailValidation200ResponseDomainAge;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EmailValidation200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:15.798849-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EmailValidation200Response {
  public static final String SERIALIZED_NAME_ASSOCIATED_NAMES = "associated_names";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_NAMES)
  private EmailValidation200ResponseAssociatedNames associatedNames;

  public static final String SERIALIZED_NAME_ASSOCIATED_PHONE_NUMBERS = "associated_phone_numbers";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_PHONE_NUMBERS)
  private EmailValidation200ResponseAssociatedPhoneNumbers associatedPhoneNumbers;

  public static final String SERIALIZED_NAME_CATCH_ALL = "catch_all";
  @SerializedName(SERIALIZED_NAME_CATCH_ALL)
  private Boolean catchAll;

  public static final String SERIALIZED_NAME_COMMON = "common";
  @SerializedName(SERIALIZED_NAME_COMMON)
  private Boolean common;

  public static final String SERIALIZED_NAME_DELIVERABILITY = "deliverability";
  @SerializedName(SERIALIZED_NAME_DELIVERABILITY)
  private String deliverability;

  public static final String SERIALIZED_NAME_DISPOSABLE = "disposable";
  @SerializedName(SERIALIZED_NAME_DISPOSABLE)
  private Boolean disposable;

  public static final String SERIALIZED_NAME_DNS_VALID = "dns_valid";
  @SerializedName(SERIALIZED_NAME_DNS_VALID)
  private Boolean dnsValid;

  public static final String SERIALIZED_NAME_DOMAIN_AGE = "domain_age";
  @SerializedName(SERIALIZED_NAME_DOMAIN_AGE)
  private EmailValidation200ResponseDomainAge domainAge;

  public static final String SERIALIZED_NAME_DOMAIN_VELOCITY = "domain_velocity";
  @SerializedName(SERIALIZED_NAME_DOMAIN_VELOCITY)
  private String domainVelocity;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_FIRST_SEEN = "first_seen";
  @SerializedName(SERIALIZED_NAME_FIRST_SEEN)
  private EmailValidation200ResponseDomainAge firstSeen;

  public static final String SERIALIZED_NAME_FRAUD_SCORE = "fraud_score";
  @SerializedName(SERIALIZED_NAME_FRAUD_SCORE)
  private BigDecimal fraudScore;

  public static final String SERIALIZED_NAME_FREQUENT_COMPLAINER = "frequent_complainer";
  @SerializedName(SERIALIZED_NAME_FREQUENT_COMPLAINER)
  private Boolean frequentComplainer;

  public static final String SERIALIZED_NAME_GENERIC = "generic";
  @SerializedName(SERIALIZED_NAME_GENERIC)
  private Boolean generic;

  public static final String SERIALIZED_NAME_HONEYPOT = "honeypot";
  @SerializedName(SERIALIZED_NAME_HONEYPOT)
  private Boolean honeypot;

  public static final String SERIALIZED_NAME_LEAKED = "leaked";
  @SerializedName(SERIALIZED_NAME_LEAKED)
  private Boolean leaked;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_OVERALL_SCORE = "overall_score";
  @SerializedName(SERIALIZED_NAME_OVERALL_SCORE)
  private BigDecimal overallScore;

  public static final String SERIALIZED_NAME_RECENT_ABUSE = "recent_abuse";
  @SerializedName(SERIALIZED_NAME_RECENT_ABUSE)
  private Boolean recentAbuse;

  public static final String SERIALIZED_NAME_REQUEST_ID = "request_id";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_SANITIZED_EMAIL = "sanitized_email";
  @SerializedName(SERIALIZED_NAME_SANITIZED_EMAIL)
  private String sanitizedEmail;

  public static final String SERIALIZED_NAME_SMTP_SCORE = "smtp_score";
  @SerializedName(SERIALIZED_NAME_SMTP_SCORE)
  private BigDecimal smtpScore;

  public static final String SERIALIZED_NAME_SPAM_TRAP_SCORE = "spam_trap_score";
  @SerializedName(SERIALIZED_NAME_SPAM_TRAP_SCORE)
  private String spamTrapScore;

  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_SUGGESTED_DOMAIN = "suggested_domain";
  @SerializedName(SERIALIZED_NAME_SUGGESTED_DOMAIN)
  private String suggestedDomain;

  public static final String SERIALIZED_NAME_SUSPECT = "suspect";
  @SerializedName(SERIALIZED_NAME_SUSPECT)
  private Boolean suspect;

  public static final String SERIALIZED_NAME_TIMED_OUT = "timed_out";
  @SerializedName(SERIALIZED_NAME_TIMED_OUT)
  private Boolean timedOut;

  public static final String SERIALIZED_NAME_USER_ACTIVITY = "user_activity";
  @SerializedName(SERIALIZED_NAME_USER_ACTIVITY)
  private String userActivity;

  public static final String SERIALIZED_NAME_VALID = "valid";
  @SerializedName(SERIALIZED_NAME_VALID)
  private Boolean valid;

  public EmailValidation200Response() {
  }

  public EmailValidation200Response associatedNames(EmailValidation200ResponseAssociatedNames associatedNames) {
    this.associatedNames = associatedNames;
    return this;
  }

  /**
   * Get associatedNames
   * @return associatedNames
   */
  @javax.annotation.Nullable
  public EmailValidation200ResponseAssociatedNames getAssociatedNames() {
    return associatedNames;
  }

  public void setAssociatedNames(EmailValidation200ResponseAssociatedNames associatedNames) {
    this.associatedNames = associatedNames;
  }


  public EmailValidation200Response associatedPhoneNumbers(EmailValidation200ResponseAssociatedPhoneNumbers associatedPhoneNumbers) {
    this.associatedPhoneNumbers = associatedPhoneNumbers;
    return this;
  }

  /**
   * Get associatedPhoneNumbers
   * @return associatedPhoneNumbers
   */
  @javax.annotation.Nullable
  public EmailValidation200ResponseAssociatedPhoneNumbers getAssociatedPhoneNumbers() {
    return associatedPhoneNumbers;
  }

  public void setAssociatedPhoneNumbers(EmailValidation200ResponseAssociatedPhoneNumbers associatedPhoneNumbers) {
    this.associatedPhoneNumbers = associatedPhoneNumbers;
  }


  public EmailValidation200Response catchAll(Boolean catchAll) {
    this.catchAll = catchAll;
    return this;
  }

  /**
   * Get catchAll
   * @return catchAll
   */
  @javax.annotation.Nullable
  public Boolean getCatchAll() {
    return catchAll;
  }

  public void setCatchAll(Boolean catchAll) {
    this.catchAll = catchAll;
  }


  public EmailValidation200Response common(Boolean common) {
    this.common = common;
    return this;
  }

  /**
   * Get common
   * @return common
   */
  @javax.annotation.Nullable
  public Boolean getCommon() {
    return common;
  }

  public void setCommon(Boolean common) {
    this.common = common;
  }


  public EmailValidation200Response deliverability(String deliverability) {
    this.deliverability = deliverability;
    return this;
  }

  /**
   * Get deliverability
   * @return deliverability
   */
  @javax.annotation.Nullable
  public String getDeliverability() {
    return deliverability;
  }

  public void setDeliverability(String deliverability) {
    this.deliverability = deliverability;
  }


  public EmailValidation200Response disposable(Boolean disposable) {
    this.disposable = disposable;
    return this;
  }

  /**
   * Get disposable
   * @return disposable
   */
  @javax.annotation.Nullable
  public Boolean getDisposable() {
    return disposable;
  }

  public void setDisposable(Boolean disposable) {
    this.disposable = disposable;
  }


  public EmailValidation200Response dnsValid(Boolean dnsValid) {
    this.dnsValid = dnsValid;
    return this;
  }

  /**
   * Get dnsValid
   * @return dnsValid
   */
  @javax.annotation.Nullable
  public Boolean getDnsValid() {
    return dnsValid;
  }

  public void setDnsValid(Boolean dnsValid) {
    this.dnsValid = dnsValid;
  }


  public EmailValidation200Response domainAge(EmailValidation200ResponseDomainAge domainAge) {
    this.domainAge = domainAge;
    return this;
  }

  /**
   * Get domainAge
   * @return domainAge
   */
  @javax.annotation.Nullable
  public EmailValidation200ResponseDomainAge getDomainAge() {
    return domainAge;
  }

  public void setDomainAge(EmailValidation200ResponseDomainAge domainAge) {
    this.domainAge = domainAge;
  }


  public EmailValidation200Response domainVelocity(String domainVelocity) {
    this.domainVelocity = domainVelocity;
    return this;
  }

  /**
   * Get domainVelocity
   * @return domainVelocity
   */
  @javax.annotation.Nullable
  public String getDomainVelocity() {
    return domainVelocity;
  }

  public void setDomainVelocity(String domainVelocity) {
    this.domainVelocity = domainVelocity;
  }


  public EmailValidation200Response firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public EmailValidation200Response firstSeen(EmailValidation200ResponseDomainAge firstSeen) {
    this.firstSeen = firstSeen;
    return this;
  }

  /**
   * Get firstSeen
   * @return firstSeen
   */
  @javax.annotation.Nullable
  public EmailValidation200ResponseDomainAge getFirstSeen() {
    return firstSeen;
  }

  public void setFirstSeen(EmailValidation200ResponseDomainAge firstSeen) {
    this.firstSeen = firstSeen;
  }


  public EmailValidation200Response fraudScore(BigDecimal fraudScore) {
    this.fraudScore = fraudScore;
    return this;
  }

  /**
   * Get fraudScore
   * @return fraudScore
   */
  @javax.annotation.Nullable
  public BigDecimal getFraudScore() {
    return fraudScore;
  }

  public void setFraudScore(BigDecimal fraudScore) {
    this.fraudScore = fraudScore;
  }


  public EmailValidation200Response frequentComplainer(Boolean frequentComplainer) {
    this.frequentComplainer = frequentComplainer;
    return this;
  }

  /**
   * Get frequentComplainer
   * @return frequentComplainer
   */
  @javax.annotation.Nullable
  public Boolean getFrequentComplainer() {
    return frequentComplainer;
  }

  public void setFrequentComplainer(Boolean frequentComplainer) {
    this.frequentComplainer = frequentComplainer;
  }


  public EmailValidation200Response generic(Boolean generic) {
    this.generic = generic;
    return this;
  }

  /**
   * Get generic
   * @return generic
   */
  @javax.annotation.Nullable
  public Boolean getGeneric() {
    return generic;
  }

  public void setGeneric(Boolean generic) {
    this.generic = generic;
  }


  public EmailValidation200Response honeypot(Boolean honeypot) {
    this.honeypot = honeypot;
    return this;
  }

  /**
   * Get honeypot
   * @return honeypot
   */
  @javax.annotation.Nullable
  public Boolean getHoneypot() {
    return honeypot;
  }

  public void setHoneypot(Boolean honeypot) {
    this.honeypot = honeypot;
  }


  public EmailValidation200Response leaked(Boolean leaked) {
    this.leaked = leaked;
    return this;
  }

  /**
   * Get leaked
   * @return leaked
   */
  @javax.annotation.Nullable
  public Boolean getLeaked() {
    return leaked;
  }

  public void setLeaked(Boolean leaked) {
    this.leaked = leaked;
  }


  public EmailValidation200Response message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public EmailValidation200Response overallScore(BigDecimal overallScore) {
    this.overallScore = overallScore;
    return this;
  }

  /**
   * Get overallScore
   * @return overallScore
   */
  @javax.annotation.Nullable
  public BigDecimal getOverallScore() {
    return overallScore;
  }

  public void setOverallScore(BigDecimal overallScore) {
    this.overallScore = overallScore;
  }


  public EmailValidation200Response recentAbuse(Boolean recentAbuse) {
    this.recentAbuse = recentAbuse;
    return this;
  }

  /**
   * Get recentAbuse
   * @return recentAbuse
   */
  @javax.annotation.Nullable
  public Boolean getRecentAbuse() {
    return recentAbuse;
  }

  public void setRecentAbuse(Boolean recentAbuse) {
    this.recentAbuse = recentAbuse;
  }


  public EmailValidation200Response requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Get requestId
   * @return requestId
   */
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public EmailValidation200Response sanitizedEmail(String sanitizedEmail) {
    this.sanitizedEmail = sanitizedEmail;
    return this;
  }

  /**
   * Get sanitizedEmail
   * @return sanitizedEmail
   */
  @javax.annotation.Nullable
  public String getSanitizedEmail() {
    return sanitizedEmail;
  }

  public void setSanitizedEmail(String sanitizedEmail) {
    this.sanitizedEmail = sanitizedEmail;
  }


  public EmailValidation200Response smtpScore(BigDecimal smtpScore) {
    this.smtpScore = smtpScore;
    return this;
  }

  /**
   * Get smtpScore
   * @return smtpScore
   */
  @javax.annotation.Nullable
  public BigDecimal getSmtpScore() {
    return smtpScore;
  }

  public void setSmtpScore(BigDecimal smtpScore) {
    this.smtpScore = smtpScore;
  }


  public EmailValidation200Response spamTrapScore(String spamTrapScore) {
    this.spamTrapScore = spamTrapScore;
    return this;
  }

  /**
   * Get spamTrapScore
   * @return spamTrapScore
   */
  @javax.annotation.Nullable
  public String getSpamTrapScore() {
    return spamTrapScore;
  }

  public void setSpamTrapScore(String spamTrapScore) {
    this.spamTrapScore = spamTrapScore;
  }


  public EmailValidation200Response success(Boolean success) {
    this.success = success;
    return this;
  }

  /**
   * Get success
   * @return success
   */
  @javax.annotation.Nullable
  public Boolean getSuccess() {
    return success;
  }

  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public EmailValidation200Response suggestedDomain(String suggestedDomain) {
    this.suggestedDomain = suggestedDomain;
    return this;
  }

  /**
   * Get suggestedDomain
   * @return suggestedDomain
   */
  @javax.annotation.Nullable
  public String getSuggestedDomain() {
    return suggestedDomain;
  }

  public void setSuggestedDomain(String suggestedDomain) {
    this.suggestedDomain = suggestedDomain;
  }


  public EmailValidation200Response suspect(Boolean suspect) {
    this.suspect = suspect;
    return this;
  }

  /**
   * Get suspect
   * @return suspect
   */
  @javax.annotation.Nullable
  public Boolean getSuspect() {
    return suspect;
  }

  public void setSuspect(Boolean suspect) {
    this.suspect = suspect;
  }


  public EmailValidation200Response timedOut(Boolean timedOut) {
    this.timedOut = timedOut;
    return this;
  }

  /**
   * Get timedOut
   * @return timedOut
   */
  @javax.annotation.Nullable
  public Boolean getTimedOut() {
    return timedOut;
  }

  public void setTimedOut(Boolean timedOut) {
    this.timedOut = timedOut;
  }


  public EmailValidation200Response userActivity(String userActivity) {
    this.userActivity = userActivity;
    return this;
  }

  /**
   * Get userActivity
   * @return userActivity
   */
  @javax.annotation.Nullable
  public String getUserActivity() {
    return userActivity;
  }

  public void setUserActivity(String userActivity) {
    this.userActivity = userActivity;
  }


  public EmailValidation200Response valid(Boolean valid) {
    this.valid = valid;
    return this;
  }

  /**
   * Get valid
   * @return valid
   */
  @javax.annotation.Nullable
  public Boolean getValid() {
    return valid;
  }

  public void setValid(Boolean valid) {
    this.valid = valid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailValidation200Response emailValidation200Response = (EmailValidation200Response) o;
    return Objects.equals(this.associatedNames, emailValidation200Response.associatedNames) &&
        Objects.equals(this.associatedPhoneNumbers, emailValidation200Response.associatedPhoneNumbers) &&
        Objects.equals(this.catchAll, emailValidation200Response.catchAll) &&
        Objects.equals(this.common, emailValidation200Response.common) &&
        Objects.equals(this.deliverability, emailValidation200Response.deliverability) &&
        Objects.equals(this.disposable, emailValidation200Response.disposable) &&
        Objects.equals(this.dnsValid, emailValidation200Response.dnsValid) &&
        Objects.equals(this.domainAge, emailValidation200Response.domainAge) &&
        Objects.equals(this.domainVelocity, emailValidation200Response.domainVelocity) &&
        Objects.equals(this.firstName, emailValidation200Response.firstName) &&
        Objects.equals(this.firstSeen, emailValidation200Response.firstSeen) &&
        Objects.equals(this.fraudScore, emailValidation200Response.fraudScore) &&
        Objects.equals(this.frequentComplainer, emailValidation200Response.frequentComplainer) &&
        Objects.equals(this.generic, emailValidation200Response.generic) &&
        Objects.equals(this.honeypot, emailValidation200Response.honeypot) &&
        Objects.equals(this.leaked, emailValidation200Response.leaked) &&
        Objects.equals(this.message, emailValidation200Response.message) &&
        Objects.equals(this.overallScore, emailValidation200Response.overallScore) &&
        Objects.equals(this.recentAbuse, emailValidation200Response.recentAbuse) &&
        Objects.equals(this.requestId, emailValidation200Response.requestId) &&
        Objects.equals(this.sanitizedEmail, emailValidation200Response.sanitizedEmail) &&
        Objects.equals(this.smtpScore, emailValidation200Response.smtpScore) &&
        Objects.equals(this.spamTrapScore, emailValidation200Response.spamTrapScore) &&
        Objects.equals(this.success, emailValidation200Response.success) &&
        Objects.equals(this.suggestedDomain, emailValidation200Response.suggestedDomain) &&
        Objects.equals(this.suspect, emailValidation200Response.suspect) &&
        Objects.equals(this.timedOut, emailValidation200Response.timedOut) &&
        Objects.equals(this.userActivity, emailValidation200Response.userActivity) &&
        Objects.equals(this.valid, emailValidation200Response.valid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(associatedNames, associatedPhoneNumbers, catchAll, common, deliverability, disposable, dnsValid, domainAge, domainVelocity, firstName, firstSeen, fraudScore, frequentComplainer, generic, honeypot, leaked, message, overallScore, recentAbuse, requestId, sanitizedEmail, smtpScore, spamTrapScore, success, suggestedDomain, suspect, timedOut, userActivity, valid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailValidation200Response {\n");
    sb.append("    associatedNames: ").append(toIndentedString(associatedNames)).append("\n");
    sb.append("    associatedPhoneNumbers: ").append(toIndentedString(associatedPhoneNumbers)).append("\n");
    sb.append("    catchAll: ").append(toIndentedString(catchAll)).append("\n");
    sb.append("    common: ").append(toIndentedString(common)).append("\n");
    sb.append("    deliverability: ").append(toIndentedString(deliverability)).append("\n");
    sb.append("    disposable: ").append(toIndentedString(disposable)).append("\n");
    sb.append("    dnsValid: ").append(toIndentedString(dnsValid)).append("\n");
    sb.append("    domainAge: ").append(toIndentedString(domainAge)).append("\n");
    sb.append("    domainVelocity: ").append(toIndentedString(domainVelocity)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    firstSeen: ").append(toIndentedString(firstSeen)).append("\n");
    sb.append("    fraudScore: ").append(toIndentedString(fraudScore)).append("\n");
    sb.append("    frequentComplainer: ").append(toIndentedString(frequentComplainer)).append("\n");
    sb.append("    generic: ").append(toIndentedString(generic)).append("\n");
    sb.append("    honeypot: ").append(toIndentedString(honeypot)).append("\n");
    sb.append("    leaked: ").append(toIndentedString(leaked)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    overallScore: ").append(toIndentedString(overallScore)).append("\n");
    sb.append("    recentAbuse: ").append(toIndentedString(recentAbuse)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    sanitizedEmail: ").append(toIndentedString(sanitizedEmail)).append("\n");
    sb.append("    smtpScore: ").append(toIndentedString(smtpScore)).append("\n");
    sb.append("    spamTrapScore: ").append(toIndentedString(spamTrapScore)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    suggestedDomain: ").append(toIndentedString(suggestedDomain)).append("\n");
    sb.append("    suspect: ").append(toIndentedString(suspect)).append("\n");
    sb.append("    timedOut: ").append(toIndentedString(timedOut)).append("\n");
    sb.append("    userActivity: ").append(toIndentedString(userActivity)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("associated_names");
    openapiFields.add("associated_phone_numbers");
    openapiFields.add("catch_all");
    openapiFields.add("common");
    openapiFields.add("deliverability");
    openapiFields.add("disposable");
    openapiFields.add("dns_valid");
    openapiFields.add("domain_age");
    openapiFields.add("domain_velocity");
    openapiFields.add("first_name");
    openapiFields.add("first_seen");
    openapiFields.add("fraud_score");
    openapiFields.add("frequent_complainer");
    openapiFields.add("generic");
    openapiFields.add("honeypot");
    openapiFields.add("leaked");
    openapiFields.add("message");
    openapiFields.add("overall_score");
    openapiFields.add("recent_abuse");
    openapiFields.add("request_id");
    openapiFields.add("sanitized_email");
    openapiFields.add("smtp_score");
    openapiFields.add("spam_trap_score");
    openapiFields.add("success");
    openapiFields.add("suggested_domain");
    openapiFields.add("suspect");
    openapiFields.add("timed_out");
    openapiFields.add("user_activity");
    openapiFields.add("valid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EmailValidation200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EmailValidation200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailValidation200Response is not found in the empty JSON string", EmailValidation200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EmailValidation200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailValidation200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `associated_names`
      if (jsonObj.get("associated_names") != null && !jsonObj.get("associated_names").isJsonNull()) {
        EmailValidation200ResponseAssociatedNames.validateJsonElement(jsonObj.get("associated_names"));
      }
      // validate the optional field `associated_phone_numbers`
      if (jsonObj.get("associated_phone_numbers") != null && !jsonObj.get("associated_phone_numbers").isJsonNull()) {
        EmailValidation200ResponseAssociatedPhoneNumbers.validateJsonElement(jsonObj.get("associated_phone_numbers"));
      }
      if ((jsonObj.get("deliverability") != null && !jsonObj.get("deliverability").isJsonNull()) && !jsonObj.get("deliverability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliverability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliverability").toString()));
      }
      // validate the optional field `domain_age`
      if (jsonObj.get("domain_age") != null && !jsonObj.get("domain_age").isJsonNull()) {
        EmailValidation200ResponseDomainAge.validateJsonElement(jsonObj.get("domain_age"));
      }
      if ((jsonObj.get("domain_velocity") != null && !jsonObj.get("domain_velocity").isJsonNull()) && !jsonObj.get("domain_velocity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain_velocity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain_velocity").toString()));
      }
      if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      // validate the optional field `first_seen`
      if (jsonObj.get("first_seen") != null && !jsonObj.get("first_seen").isJsonNull()) {
        EmailValidation200ResponseDomainAge.validateJsonElement(jsonObj.get("first_seen"));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("request_id") != null && !jsonObj.get("request_id").isJsonNull()) && !jsonObj.get("request_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_id").toString()));
      }
      if ((jsonObj.get("sanitized_email") != null && !jsonObj.get("sanitized_email").isJsonNull()) && !jsonObj.get("sanitized_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sanitized_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sanitized_email").toString()));
      }
      if ((jsonObj.get("spam_trap_score") != null && !jsonObj.get("spam_trap_score").isJsonNull()) && !jsonObj.get("spam_trap_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spam_trap_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spam_trap_score").toString()));
      }
      if ((jsonObj.get("suggested_domain") != null && !jsonObj.get("suggested_domain").isJsonNull()) && !jsonObj.get("suggested_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suggested_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suggested_domain").toString()));
      }
      if ((jsonObj.get("user_activity") != null && !jsonObj.get("user_activity").isJsonNull()) && !jsonObj.get("user_activity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_activity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_activity").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailValidation200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailValidation200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailValidation200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailValidation200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailValidation200Response>() {
           @Override
           public void write(JsonWriter out, EmailValidation200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailValidation200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EmailValidation200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EmailValidation200Response
   * @throws IOException if the JSON string is invalid with respect to EmailValidation200Response
   */
  public static EmailValidation200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailValidation200Response.class);
  }

  /**
   * Convert an instance of EmailValidation200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

