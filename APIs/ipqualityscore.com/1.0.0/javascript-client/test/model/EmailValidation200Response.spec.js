/**
 * IPQualityScore API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IpQualityScoreApi);
  }
}(this, function(expect, IpQualityScoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IpQualityScoreApi.EmailValidation200Response();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EmailValidation200Response', function() {
    it('should create an instance of EmailValidation200Response', function() {
      // uncomment below and update the code to test EmailValidation200Response
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be.a(IpQualityScoreApi.EmailValidation200Response);
    });

    it('should have the property associatedNames (base name: "associated_names")', function() {
      // uncomment below and update the code to test the property associatedNames
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property associatedPhoneNumbers (base name: "associated_phone_numbers")', function() {
      // uncomment below and update the code to test the property associatedPhoneNumbers
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property catchAll (base name: "catch_all")', function() {
      // uncomment below and update the code to test the property catchAll
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property common (base name: "common")', function() {
      // uncomment below and update the code to test the property common
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property deliverability (base name: "deliverability")', function() {
      // uncomment below and update the code to test the property deliverability
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property disposable (base name: "disposable")', function() {
      // uncomment below and update the code to test the property disposable
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property dnsValid (base name: "dns_valid")', function() {
      // uncomment below and update the code to test the property dnsValid
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property domainAge (base name: "domain_age")', function() {
      // uncomment below and update the code to test the property domainAge
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property domainVelocity (base name: "domain_velocity")', function() {
      // uncomment below and update the code to test the property domainVelocity
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property firstSeen (base name: "first_seen")', function() {
      // uncomment below and update the code to test the property firstSeen
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property fraudScore (base name: "fraud_score")', function() {
      // uncomment below and update the code to test the property fraudScore
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property frequentComplainer (base name: "frequent_complainer")', function() {
      // uncomment below and update the code to test the property frequentComplainer
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property generic (base name: "generic")', function() {
      // uncomment below and update the code to test the property generic
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property honeypot (base name: "honeypot")', function() {
      // uncomment below and update the code to test the property honeypot
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property leaked (base name: "leaked")', function() {
      // uncomment below and update the code to test the property leaked
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property overallScore (base name: "overall_score")', function() {
      // uncomment below and update the code to test the property overallScore
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property recentAbuse (base name: "recent_abuse")', function() {
      // uncomment below and update the code to test the property recentAbuse
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property requestId (base name: "request_id")', function() {
      // uncomment below and update the code to test the property requestId
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property sanitizedEmail (base name: "sanitized_email")', function() {
      // uncomment below and update the code to test the property sanitizedEmail
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property smtpScore (base name: "smtp_score")', function() {
      // uncomment below and update the code to test the property smtpScore
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property spamTrapScore (base name: "spam_trap_score")', function() {
      // uncomment below and update the code to test the property spamTrapScore
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property success (base name: "success")', function() {
      // uncomment below and update the code to test the property success
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property suggestedDomain (base name: "suggested_domain")', function() {
      // uncomment below and update the code to test the property suggestedDomain
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property suspect (base name: "suspect")', function() {
      // uncomment below and update the code to test the property suspect
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property timedOut (base name: "timed_out")', function() {
      // uncomment below and update the code to test the property timedOut
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property userActivity (base name: "user_activity")', function() {
      // uncomment below and update the code to test the property userActivity
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property valid (base name: "valid")', function() {
      // uncomment below and update the code to test the property valid
      //var instance = new IpQualityScoreApi.EmailValidation200Response();
      //expect(instance).to.be();
    });

  });

}));
