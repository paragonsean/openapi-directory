/**
 * IPQualityScore API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IpQualityScoreApi);
  }
}(this, function(expect, IpQualityScoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IpQualityScoreApi.PhoneValidation200Response();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PhoneValidation200Response', function() {
    it('should create an instance of PhoneValidation200Response', function() {
      // uncomment below and update the code to test PhoneValidation200Response
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be.a(IpQualityScoreApi.PhoneValidation200Response);
    });

    it('should have the property VOIP (base name: "VOIP")', function() {
      // uncomment below and update the code to test the property VOIP
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property activeStatus (base name: "active_status")', function() {
      // uncomment below and update the code to test the property activeStatus
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property associatedEmailAddresses (base name: "associated_email_addresses")', function() {
      // uncomment below and update the code to test the property associatedEmailAddresses
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property carrier (base name: "carrier")', function() {
      // uncomment below and update the code to test the property carrier
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property dialingCode (base name: "dialing_code")', function() {
      // uncomment below and update the code to test the property dialingCode
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property doNotCall (base name: "do_not_call")', function() {
      // uncomment below and update the code to test the property doNotCall
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property formatted (base name: "formatted")', function() {
      // uncomment below and update the code to test the property formatted
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property fraudScore (base name: "fraud_score")', function() {
      // uncomment below and update the code to test the property fraudScore
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property leaked (base name: "leaked")', function() {
      // uncomment below and update the code to test the property leaked
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property lineType (base name: "line_type")', function() {
      // uncomment below and update the code to test the property lineType
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property localFormat (base name: "local_format")', function() {
      // uncomment below and update the code to test the property localFormat
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property mcc (base name: "mcc")', function() {
      // uncomment below and update the code to test the property mcc
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property mnc (base name: "mnc")', function() {
      // uncomment below and update the code to test the property mnc
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property prepaid (base name: "prepaid")', function() {
      // uncomment below and update the code to test the property prepaid
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property recentAbuse (base name: "recent_abuse")', function() {
      // uncomment below and update the code to test the property recentAbuse
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property requestId (base name: "request_id")', function() {
      // uncomment below and update the code to test the property requestId
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property risky (base name: "risky")', function() {
      // uncomment below and update the code to test the property risky
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property smsDomain (base name: "sms_domain")', function() {
      // uncomment below and update the code to test the property smsDomain
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property smsEmail (base name: "sms_email")', function() {
      // uncomment below and update the code to test the property smsEmail
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property spammer (base name: "spammer")', function() {
      // uncomment below and update the code to test the property spammer
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property success (base name: "success")', function() {
      // uncomment below and update the code to test the property success
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property userActivity (base name: "user_activity")', function() {
      // uncomment below and update the code to test the property userActivity
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property valid (base name: "valid")', function() {
      // uncomment below and update the code to test the property valid
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "zip_code")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instance = new IpQualityScoreApi.PhoneValidation200Response();
      //expect(instance).to.be();
    });

  });

}));
