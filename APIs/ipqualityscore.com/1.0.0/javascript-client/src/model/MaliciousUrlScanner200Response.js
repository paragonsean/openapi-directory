/**
 * IPQualityScore API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MaliciousUrlScanner200ResponseDomainAge from './MaliciousUrlScanner200ResponseDomainAge';

/**
 * The MaliciousUrlScanner200Response model module.
 * @module model/MaliciousUrlScanner200Response
 * @version 1.0.0
 */
class MaliciousUrlScanner200Response {
    /**
     * Constructs a new <code>MaliciousUrlScanner200Response</code>.
     * @alias module:model/MaliciousUrlScanner200Response
     */
    constructor() { 
        
        MaliciousUrlScanner200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MaliciousUrlScanner200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MaliciousUrlScanner200Response} obj Optional instance to populate.
     * @return {module:model/MaliciousUrlScanner200Response} The populated <code>MaliciousUrlScanner200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MaliciousUrlScanner200Response();

            if (data.hasOwnProperty('adult')) {
                obj['adult'] = ApiClient.convertToType(data['adult'], 'Boolean');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('content_type')) {
                obj['content_type'] = ApiClient.convertToType(data['content_type'], 'String');
            }
            if (data.hasOwnProperty('dns_valid')) {
                obj['dns_valid'] = ApiClient.convertToType(data['dns_valid'], 'Boolean');
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('domain_age')) {
                obj['domain_age'] = MaliciousUrlScanner200ResponseDomainAge.constructFromObject(data['domain_age']);
            }
            if (data.hasOwnProperty('domain_rank')) {
                obj['domain_rank'] = ApiClient.convertToType(data['domain_rank'], 'Number');
            }
            if (data.hasOwnProperty('ip_address')) {
                obj['ip_address'] = ApiClient.convertToType(data['ip_address'], 'String');
            }
            if (data.hasOwnProperty('malware')) {
                obj['malware'] = ApiClient.convertToType(data['malware'], 'Boolean');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('page_size')) {
                obj['page_size'] = ApiClient.convertToType(data['page_size'], 'Number');
            }
            if (data.hasOwnProperty('parking')) {
                obj['parking'] = ApiClient.convertToType(data['parking'], 'Boolean');
            }
            if (data.hasOwnProperty('phishing')) {
                obj['phishing'] = ApiClient.convertToType(data['phishing'], 'Boolean');
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('risk_score')) {
                obj['risk_score'] = ApiClient.convertToType(data['risk_score'], 'Number');
            }
            if (data.hasOwnProperty('server')) {
                obj['server'] = ApiClient.convertToType(data['server'], 'String');
            }
            if (data.hasOwnProperty('spamming')) {
                obj['spamming'] = ApiClient.convertToType(data['spamming'], 'Boolean');
            }
            if (data.hasOwnProperty('status_code')) {
                obj['status_code'] = ApiClient.convertToType(data['status_code'], 'Number');
            }
            if (data.hasOwnProperty('success')) {
                obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');
            }
            if (data.hasOwnProperty('suspicious')) {
                obj['suspicious'] = ApiClient.convertToType(data['suspicious'], 'Boolean');
            }
            if (data.hasOwnProperty('unsafe')) {
                obj['unsafe'] = ApiClient.convertToType(data['unsafe'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MaliciousUrlScanner200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MaliciousUrlScanner200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['content_type'] && !(typeof data['content_type'] === 'string' || data['content_type'] instanceof String)) {
            throw new Error("Expected the field `content_type` to be a primitive type in the JSON string but got " + data['content_type']);
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // validate the optional field `domain_age`
        if (data['domain_age']) { // data not null
          MaliciousUrlScanner200ResponseDomainAge.validateJSON(data['domain_age']);
        }
        // ensure the json data is a string
        if (data['ip_address'] && !(typeof data['ip_address'] === 'string' || data['ip_address'] instanceof String)) {
            throw new Error("Expected the field `ip_address` to be a primitive type in the JSON string but got " + data['ip_address']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        // ensure the json data is a string
        if (data['server'] && !(typeof data['server'] === 'string' || data['server'] instanceof String)) {
            throw new Error("Expected the field `server` to be a primitive type in the JSON string but got " + data['server']);
        }

        return true;
    }


}



/**
 * @member {Boolean} adult
 */
MaliciousUrlScanner200Response.prototype['adult'] = undefined;

/**
 * @member {String} category
 */
MaliciousUrlScanner200Response.prototype['category'] = undefined;

/**
 * @member {String} content_type
 */
MaliciousUrlScanner200Response.prototype['content_type'] = undefined;

/**
 * @member {Boolean} dns_valid
 */
MaliciousUrlScanner200Response.prototype['dns_valid'] = undefined;

/**
 * @member {String} domain
 */
MaliciousUrlScanner200Response.prototype['domain'] = undefined;

/**
 * @member {module:model/MaliciousUrlScanner200ResponseDomainAge} domain_age
 */
MaliciousUrlScanner200Response.prototype['domain_age'] = undefined;

/**
 * @member {Number} domain_rank
 */
MaliciousUrlScanner200Response.prototype['domain_rank'] = undefined;

/**
 * @member {String} ip_address
 */
MaliciousUrlScanner200Response.prototype['ip_address'] = undefined;

/**
 * @member {Boolean} malware
 */
MaliciousUrlScanner200Response.prototype['malware'] = undefined;

/**
 * @member {String} message
 */
MaliciousUrlScanner200Response.prototype['message'] = undefined;

/**
 * @member {Number} page_size
 */
MaliciousUrlScanner200Response.prototype['page_size'] = undefined;

/**
 * @member {Boolean} parking
 */
MaliciousUrlScanner200Response.prototype['parking'] = undefined;

/**
 * @member {Boolean} phishing
 */
MaliciousUrlScanner200Response.prototype['phishing'] = undefined;

/**
 * @member {String} request_id
 */
MaliciousUrlScanner200Response.prototype['request_id'] = undefined;

/**
 * @member {Number} risk_score
 */
MaliciousUrlScanner200Response.prototype['risk_score'] = undefined;

/**
 * @member {String} server
 */
MaliciousUrlScanner200Response.prototype['server'] = undefined;

/**
 * @member {Boolean} spamming
 */
MaliciousUrlScanner200Response.prototype['spamming'] = undefined;

/**
 * @member {Number} status_code
 */
MaliciousUrlScanner200Response.prototype['status_code'] = undefined;

/**
 * @member {Boolean} success
 */
MaliciousUrlScanner200Response.prototype['success'] = undefined;

/**
 * @member {Boolean} suspicious
 */
MaliciousUrlScanner200Response.prototype['suspicious'] = undefined;

/**
 * @member {Boolean} unsafe
 */
MaliciousUrlScanner200Response.prototype['unsafe'] = undefined;






export default MaliciousUrlScanner200Response;

