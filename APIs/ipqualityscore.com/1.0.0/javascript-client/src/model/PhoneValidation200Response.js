/**
 * IPQualityScore API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PhoneValidation200ResponseAssociatedEmailAddresses from './PhoneValidation200ResponseAssociatedEmailAddresses';

/**
 * The PhoneValidation200Response model module.
 * @module model/PhoneValidation200Response
 * @version 1.0.0
 */
class PhoneValidation200Response {
    /**
     * Constructs a new <code>PhoneValidation200Response</code>.
     * @alias module:model/PhoneValidation200Response
     */
    constructor() { 
        
        PhoneValidation200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PhoneValidation200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PhoneValidation200Response} obj Optional instance to populate.
     * @return {module:model/PhoneValidation200Response} The populated <code>PhoneValidation200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PhoneValidation200Response();

            if (data.hasOwnProperty('VOIP')) {
                obj['VOIP'] = ApiClient.convertToType(data['VOIP'], 'Boolean');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('active_status')) {
                obj['active_status'] = ApiClient.convertToType(data['active_status'], 'String');
            }
            if (data.hasOwnProperty('associated_email_addresses')) {
                obj['associated_email_addresses'] = PhoneValidation200ResponseAssociatedEmailAddresses.constructFromObject(data['associated_email_addresses']);
            }
            if (data.hasOwnProperty('carrier')) {
                obj['carrier'] = ApiClient.convertToType(data['carrier'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('dialing_code')) {
                obj['dialing_code'] = ApiClient.convertToType(data['dialing_code'], 'Number');
            }
            if (data.hasOwnProperty('do_not_call')) {
                obj['do_not_call'] = ApiClient.convertToType(data['do_not_call'], 'Boolean');
            }
            if (data.hasOwnProperty('formatted')) {
                obj['formatted'] = ApiClient.convertToType(data['formatted'], 'String');
            }
            if (data.hasOwnProperty('fraud_score')) {
                obj['fraud_score'] = ApiClient.convertToType(data['fraud_score'], 'Number');
            }
            if (data.hasOwnProperty('leaked')) {
                obj['leaked'] = ApiClient.convertToType(data['leaked'], 'Boolean');
            }
            if (data.hasOwnProperty('line_type')) {
                obj['line_type'] = ApiClient.convertToType(data['line_type'], 'String');
            }
            if (data.hasOwnProperty('local_format')) {
                obj['local_format'] = ApiClient.convertToType(data['local_format'], 'String');
            }
            if (data.hasOwnProperty('mcc')) {
                obj['mcc'] = ApiClient.convertToType(data['mcc'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('mnc')) {
                obj['mnc'] = ApiClient.convertToType(data['mnc'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('prepaid')) {
                obj['prepaid'] = ApiClient.convertToType(data['prepaid'], 'String');
            }
            if (data.hasOwnProperty('recent_abuse')) {
                obj['recent_abuse'] = ApiClient.convertToType(data['recent_abuse'], 'Boolean');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('risky')) {
                obj['risky'] = ApiClient.convertToType(data['risky'], 'Boolean');
            }
            if (data.hasOwnProperty('sms_domain')) {
                obj['sms_domain'] = ApiClient.convertToType(data['sms_domain'], 'String');
            }
            if (data.hasOwnProperty('sms_email')) {
                obj['sms_email'] = ApiClient.convertToType(data['sms_email'], 'String');
            }
            if (data.hasOwnProperty('spammer')) {
                obj['spammer'] = ApiClient.convertToType(data['spammer'], 'Boolean');
            }
            if (data.hasOwnProperty('success')) {
                obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
            }
            if (data.hasOwnProperty('user_activity')) {
                obj['user_activity'] = ApiClient.convertToType(data['user_activity'], 'String');
            }
            if (data.hasOwnProperty('valid')) {
                obj['valid'] = ApiClient.convertToType(data['valid'], 'Boolean');
            }
            if (data.hasOwnProperty('zip_code')) {
                obj['zip_code'] = ApiClient.convertToType(data['zip_code'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PhoneValidation200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PhoneValidation200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['active_status'] && !(typeof data['active_status'] === 'string' || data['active_status'] instanceof String)) {
            throw new Error("Expected the field `active_status` to be a primitive type in the JSON string but got " + data['active_status']);
        }
        // validate the optional field `associated_email_addresses`
        if (data['associated_email_addresses']) { // data not null
          PhoneValidation200ResponseAssociatedEmailAddresses.validateJSON(data['associated_email_addresses']);
        }
        // ensure the json data is a string
        if (data['carrier'] && !(typeof data['carrier'] === 'string' || data['carrier'] instanceof String)) {
            throw new Error("Expected the field `carrier` to be a primitive type in the JSON string but got " + data['carrier']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['formatted'] && !(typeof data['formatted'] === 'string' || data['formatted'] instanceof String)) {
            throw new Error("Expected the field `formatted` to be a primitive type in the JSON string but got " + data['formatted']);
        }
        // ensure the json data is a string
        if (data['line_type'] && !(typeof data['line_type'] === 'string' || data['line_type'] instanceof String)) {
            throw new Error("Expected the field `line_type` to be a primitive type in the JSON string but got " + data['line_type']);
        }
        // ensure the json data is a string
        if (data['local_format'] && !(typeof data['local_format'] === 'string' || data['local_format'] instanceof String)) {
            throw new Error("Expected the field `local_format` to be a primitive type in the JSON string but got " + data['local_format']);
        }
        // ensure the json data is a string
        if (data['mcc'] && !(typeof data['mcc'] === 'string' || data['mcc'] instanceof String)) {
            throw new Error("Expected the field `mcc` to be a primitive type in the JSON string but got " + data['mcc']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['mnc'] && !(typeof data['mnc'] === 'string' || data['mnc'] instanceof String)) {
            throw new Error("Expected the field `mnc` to be a primitive type in the JSON string but got " + data['mnc']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['prepaid'] && !(typeof data['prepaid'] === 'string' || data['prepaid'] instanceof String)) {
            throw new Error("Expected the field `prepaid` to be a primitive type in the JSON string but got " + data['prepaid']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        // ensure the json data is a string
        if (data['sms_domain'] && !(typeof data['sms_domain'] === 'string' || data['sms_domain'] instanceof String)) {
            throw new Error("Expected the field `sms_domain` to be a primitive type in the JSON string but got " + data['sms_domain']);
        }
        // ensure the json data is a string
        if (data['sms_email'] && !(typeof data['sms_email'] === 'string' || data['sms_email'] instanceof String)) {
            throw new Error("Expected the field `sms_email` to be a primitive type in the JSON string but got " + data['sms_email']);
        }
        // ensure the json data is a string
        if (data['timezone'] && !(typeof data['timezone'] === 'string' || data['timezone'] instanceof String)) {
            throw new Error("Expected the field `timezone` to be a primitive type in the JSON string but got " + data['timezone']);
        }
        // ensure the json data is a string
        if (data['user_activity'] && !(typeof data['user_activity'] === 'string' || data['user_activity'] instanceof String)) {
            throw new Error("Expected the field `user_activity` to be a primitive type in the JSON string but got " + data['user_activity']);
        }
        // ensure the json data is a string
        if (data['zip_code'] && !(typeof data['zip_code'] === 'string' || data['zip_code'] instanceof String)) {
            throw new Error("Expected the field `zip_code` to be a primitive type in the JSON string but got " + data['zip_code']);
        }

        return true;
    }


}



/**
 * @member {Boolean} VOIP
 */
PhoneValidation200Response.prototype['VOIP'] = undefined;

/**
 * @member {Boolean} active
 */
PhoneValidation200Response.prototype['active'] = undefined;

/**
 * @member {String} active_status
 */
PhoneValidation200Response.prototype['active_status'] = undefined;

/**
 * @member {module:model/PhoneValidation200ResponseAssociatedEmailAddresses} associated_email_addresses
 */
PhoneValidation200Response.prototype['associated_email_addresses'] = undefined;

/**
 * @member {String} carrier
 */
PhoneValidation200Response.prototype['carrier'] = undefined;

/**
 * @member {String} city
 */
PhoneValidation200Response.prototype['city'] = undefined;

/**
 * @member {String} country
 */
PhoneValidation200Response.prototype['country'] = undefined;

/**
 * @member {Number} dialing_code
 */
PhoneValidation200Response.prototype['dialing_code'] = undefined;

/**
 * @member {Boolean} do_not_call
 */
PhoneValidation200Response.prototype['do_not_call'] = undefined;

/**
 * @member {String} formatted
 */
PhoneValidation200Response.prototype['formatted'] = undefined;

/**
 * @member {Number} fraud_score
 */
PhoneValidation200Response.prototype['fraud_score'] = undefined;

/**
 * @member {Boolean} leaked
 */
PhoneValidation200Response.prototype['leaked'] = undefined;

/**
 * @member {String} line_type
 */
PhoneValidation200Response.prototype['line_type'] = undefined;

/**
 * @member {String} local_format
 */
PhoneValidation200Response.prototype['local_format'] = undefined;

/**
 * @member {String} mcc
 */
PhoneValidation200Response.prototype['mcc'] = undefined;

/**
 * @member {String} message
 */
PhoneValidation200Response.prototype['message'] = undefined;

/**
 * @member {String} mnc
 */
PhoneValidation200Response.prototype['mnc'] = undefined;

/**
 * @member {String} name
 */
PhoneValidation200Response.prototype['name'] = undefined;

/**
 * @member {String} prepaid
 */
PhoneValidation200Response.prototype['prepaid'] = undefined;

/**
 * @member {Boolean} recent_abuse
 */
PhoneValidation200Response.prototype['recent_abuse'] = undefined;

/**
 * @member {String} region
 */
PhoneValidation200Response.prototype['region'] = undefined;

/**
 * @member {String} request_id
 */
PhoneValidation200Response.prototype['request_id'] = undefined;

/**
 * @member {Boolean} risky
 */
PhoneValidation200Response.prototype['risky'] = undefined;

/**
 * @member {String} sms_domain
 */
PhoneValidation200Response.prototype['sms_domain'] = undefined;

/**
 * @member {String} sms_email
 */
PhoneValidation200Response.prototype['sms_email'] = undefined;

/**
 * @member {Boolean} spammer
 */
PhoneValidation200Response.prototype['spammer'] = undefined;

/**
 * @member {Boolean} success
 */
PhoneValidation200Response.prototype['success'] = undefined;

/**
 * @member {String} timezone
 */
PhoneValidation200Response.prototype['timezone'] = undefined;

/**
 * @member {String} user_activity
 */
PhoneValidation200Response.prototype['user_activity'] = undefined;

/**
 * @member {Boolean} valid
 */
PhoneValidation200Response.prototype['valid'] = undefined;

/**
 * @member {String} zip_code
 */
PhoneValidation200Response.prototype['zip_code'] = undefined;






export default PhoneValidation200Response;

