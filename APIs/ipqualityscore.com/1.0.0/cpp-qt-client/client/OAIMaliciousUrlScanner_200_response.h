/**
 * IPQualityScore API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMaliciousUrlScanner_200_response.h
 *
 * 
 */

#ifndef OAIMaliciousUrlScanner_200_response_H
#define OAIMaliciousUrlScanner_200_response_H

#include <QJsonObject>

#include "OAIMaliciousUrlScanner_200_response_domain_age.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMaliciousUrlScanner_200_response_domain_age;

class OAIMaliciousUrlScanner_200_response : public OAIObject {
public:
    OAIMaliciousUrlScanner_200_response();
    OAIMaliciousUrlScanner_200_response(QString json);
    ~OAIMaliciousUrlScanner_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAdult() const;
    void setAdult(const bool &adult);
    bool is_adult_Set() const;
    bool is_adult_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    bool isDnsValid() const;
    void setDnsValid(const bool &dns_valid);
    bool is_dns_valid_Set() const;
    bool is_dns_valid_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    OAIMaliciousUrlScanner_200_response_domain_age getDomainAge() const;
    void setDomainAge(const OAIMaliciousUrlScanner_200_response_domain_age &domain_age);
    bool is_domain_age_Set() const;
    bool is_domain_age_Valid() const;

    double getDomainRank() const;
    void setDomainRank(const double &domain_rank);
    bool is_domain_rank_Set() const;
    bool is_domain_rank_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    bool isMalware() const;
    void setMalware(const bool &malware);
    bool is_malware_Set() const;
    bool is_malware_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    double getPageSize() const;
    void setPageSize(const double &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    bool isParking() const;
    void setParking(const bool &parking);
    bool is_parking_Set() const;
    bool is_parking_Valid() const;

    bool isPhishing() const;
    void setPhishing(const bool &phishing);
    bool is_phishing_Set() const;
    bool is_phishing_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    double getRiskScore() const;
    void setRiskScore(const double &risk_score);
    bool is_risk_score_Set() const;
    bool is_risk_score_Valid() const;

    QString getServer() const;
    void setServer(const QString &server);
    bool is_server_Set() const;
    bool is_server_Valid() const;

    bool isSpamming() const;
    void setSpamming(const bool &spamming);
    bool is_spamming_Set() const;
    bool is_spamming_Valid() const;

    double getStatusCode() const;
    void setStatusCode(const double &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    bool isSuccess() const;
    void setSuccess(const bool &success);
    bool is_success_Set() const;
    bool is_success_Valid() const;

    bool isSuspicious() const;
    void setSuspicious(const bool &suspicious);
    bool is_suspicious_Set() const;
    bool is_suspicious_Valid() const;

    bool isUnsafe() const;
    void setUnsafe(const bool &unsafe);
    bool is_unsafe_Set() const;
    bool is_unsafe_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_adult;
    bool m_adult_isSet;
    bool m_adult_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    bool m_dns_valid;
    bool m_dns_valid_isSet;
    bool m_dns_valid_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    OAIMaliciousUrlScanner_200_response_domain_age m_domain_age;
    bool m_domain_age_isSet;
    bool m_domain_age_isValid;

    double m_domain_rank;
    bool m_domain_rank_isSet;
    bool m_domain_rank_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    bool m_malware;
    bool m_malware_isSet;
    bool m_malware_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    double m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    bool m_parking;
    bool m_parking_isSet;
    bool m_parking_isValid;

    bool m_phishing;
    bool m_phishing_isSet;
    bool m_phishing_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    double m_risk_score;
    bool m_risk_score_isSet;
    bool m_risk_score_isValid;

    QString m_server;
    bool m_server_isSet;
    bool m_server_isValid;

    bool m_spamming;
    bool m_spamming_isSet;
    bool m_spamming_isValid;

    double m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    bool m_success;
    bool m_success_isSet;
    bool m_success_isValid;

    bool m_suspicious;
    bool m_suspicious_isSet;
    bool m_suspicious_isValid;

    bool m_unsafe;
    bool m_unsafe_isSet;
    bool m_unsafe_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMaliciousUrlScanner_200_response)

#endif // OAIMaliciousUrlScanner_200_response_H
