# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.phone_validation200_response_associated_email_addresses import PhoneValidation200ResponseAssociatedEmailAddresses
from openapi_server import util


class PhoneValidation200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, voip: bool=None, active: bool=None, active_status: str=None, associated_email_addresses: PhoneValidation200ResponseAssociatedEmailAddresses=None, carrier: str=None, city: str=None, country: str=None, dialing_code: float=None, do_not_call: bool=None, formatted: str=None, fraud_score: float=None, leaked: bool=None, line_type: str=None, local_format: str=None, mcc: str=None, message: str=None, mnc: str=None, name: str=None, prepaid: str=None, recent_abuse: bool=None, region: str=None, request_id: str=None, risky: bool=None, sms_domain: str=None, sms_email: str=None, spammer: bool=None, success: bool=None, timezone: str=None, user_activity: str=None, valid: bool=None, zip_code: str=None):
        """PhoneValidation200Response - a model defined in OpenAPI

        :param voip: The voip of this PhoneValidation200Response.
        :param active: The active of this PhoneValidation200Response.
        :param active_status: The active_status of this PhoneValidation200Response.
        :param associated_email_addresses: The associated_email_addresses of this PhoneValidation200Response.
        :param carrier: The carrier of this PhoneValidation200Response.
        :param city: The city of this PhoneValidation200Response.
        :param country: The country of this PhoneValidation200Response.
        :param dialing_code: The dialing_code of this PhoneValidation200Response.
        :param do_not_call: The do_not_call of this PhoneValidation200Response.
        :param formatted: The formatted of this PhoneValidation200Response.
        :param fraud_score: The fraud_score of this PhoneValidation200Response.
        :param leaked: The leaked of this PhoneValidation200Response.
        :param line_type: The line_type of this PhoneValidation200Response.
        :param local_format: The local_format of this PhoneValidation200Response.
        :param mcc: The mcc of this PhoneValidation200Response.
        :param message: The message of this PhoneValidation200Response.
        :param mnc: The mnc of this PhoneValidation200Response.
        :param name: The name of this PhoneValidation200Response.
        :param prepaid: The prepaid of this PhoneValidation200Response.
        :param recent_abuse: The recent_abuse of this PhoneValidation200Response.
        :param region: The region of this PhoneValidation200Response.
        :param request_id: The request_id of this PhoneValidation200Response.
        :param risky: The risky of this PhoneValidation200Response.
        :param sms_domain: The sms_domain of this PhoneValidation200Response.
        :param sms_email: The sms_email of this PhoneValidation200Response.
        :param spammer: The spammer of this PhoneValidation200Response.
        :param success: The success of this PhoneValidation200Response.
        :param timezone: The timezone of this PhoneValidation200Response.
        :param user_activity: The user_activity of this PhoneValidation200Response.
        :param valid: The valid of this PhoneValidation200Response.
        :param zip_code: The zip_code of this PhoneValidation200Response.
        """
        self.openapi_types = {
            'voip': bool,
            'active': bool,
            'active_status': str,
            'associated_email_addresses': PhoneValidation200ResponseAssociatedEmailAddresses,
            'carrier': str,
            'city': str,
            'country': str,
            'dialing_code': float,
            'do_not_call': bool,
            'formatted': str,
            'fraud_score': float,
            'leaked': bool,
            'line_type': str,
            'local_format': str,
            'mcc': str,
            'message': str,
            'mnc': str,
            'name': str,
            'prepaid': str,
            'recent_abuse': bool,
            'region': str,
            'request_id': str,
            'risky': bool,
            'sms_domain': str,
            'sms_email': str,
            'spammer': bool,
            'success': bool,
            'timezone': str,
            'user_activity': str,
            'valid': bool,
            'zip_code': str
        }

        self.attribute_map = {
            'voip': 'VOIP',
            'active': 'active',
            'active_status': 'active_status',
            'associated_email_addresses': 'associated_email_addresses',
            'carrier': 'carrier',
            'city': 'city',
            'country': 'country',
            'dialing_code': 'dialing_code',
            'do_not_call': 'do_not_call',
            'formatted': 'formatted',
            'fraud_score': 'fraud_score',
            'leaked': 'leaked',
            'line_type': 'line_type',
            'local_format': 'local_format',
            'mcc': 'mcc',
            'message': 'message',
            'mnc': 'mnc',
            'name': 'name',
            'prepaid': 'prepaid',
            'recent_abuse': 'recent_abuse',
            'region': 'region',
            'request_id': 'request_id',
            'risky': 'risky',
            'sms_domain': 'sms_domain',
            'sms_email': 'sms_email',
            'spammer': 'spammer',
            'success': 'success',
            'timezone': 'timezone',
            'user_activity': 'user_activity',
            'valid': 'valid',
            'zip_code': 'zip_code'
        }

        self._voip = voip
        self._active = active
        self._active_status = active_status
        self._associated_email_addresses = associated_email_addresses
        self._carrier = carrier
        self._city = city
        self._country = country
        self._dialing_code = dialing_code
        self._do_not_call = do_not_call
        self._formatted = formatted
        self._fraud_score = fraud_score
        self._leaked = leaked
        self._line_type = line_type
        self._local_format = local_format
        self._mcc = mcc
        self._message = message
        self._mnc = mnc
        self._name = name
        self._prepaid = prepaid
        self._recent_abuse = recent_abuse
        self._region = region
        self._request_id = request_id
        self._risky = risky
        self._sms_domain = sms_domain
        self._sms_email = sms_email
        self._spammer = spammer
        self._success = success
        self._timezone = timezone
        self._user_activity = user_activity
        self._valid = valid
        self._zip_code = zip_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhoneValidation200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The phoneValidation_200_response of this PhoneValidation200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def voip(self):
        """Gets the voip of this PhoneValidation200Response.


        :return: The voip of this PhoneValidation200Response.
        :rtype: bool
        """
        return self._voip

    @voip.setter
    def voip(self, voip):
        """Sets the voip of this PhoneValidation200Response.


        :param voip: The voip of this PhoneValidation200Response.
        :type voip: bool
        """

        self._voip = voip

    @property
    def active(self):
        """Gets the active of this PhoneValidation200Response.


        :return: The active of this PhoneValidation200Response.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this PhoneValidation200Response.


        :param active: The active of this PhoneValidation200Response.
        :type active: bool
        """

        self._active = active

    @property
    def active_status(self):
        """Gets the active_status of this PhoneValidation200Response.


        :return: The active_status of this PhoneValidation200Response.
        :rtype: str
        """
        return self._active_status

    @active_status.setter
    def active_status(self, active_status):
        """Sets the active_status of this PhoneValidation200Response.


        :param active_status: The active_status of this PhoneValidation200Response.
        :type active_status: str
        """

        self._active_status = active_status

    @property
    def associated_email_addresses(self):
        """Gets the associated_email_addresses of this PhoneValidation200Response.


        :return: The associated_email_addresses of this PhoneValidation200Response.
        :rtype: PhoneValidation200ResponseAssociatedEmailAddresses
        """
        return self._associated_email_addresses

    @associated_email_addresses.setter
    def associated_email_addresses(self, associated_email_addresses):
        """Sets the associated_email_addresses of this PhoneValidation200Response.


        :param associated_email_addresses: The associated_email_addresses of this PhoneValidation200Response.
        :type associated_email_addresses: PhoneValidation200ResponseAssociatedEmailAddresses
        """

        self._associated_email_addresses = associated_email_addresses

    @property
    def carrier(self):
        """Gets the carrier of this PhoneValidation200Response.


        :return: The carrier of this PhoneValidation200Response.
        :rtype: str
        """
        return self._carrier

    @carrier.setter
    def carrier(self, carrier):
        """Sets the carrier of this PhoneValidation200Response.


        :param carrier: The carrier of this PhoneValidation200Response.
        :type carrier: str
        """

        self._carrier = carrier

    @property
    def city(self):
        """Gets the city of this PhoneValidation200Response.


        :return: The city of this PhoneValidation200Response.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this PhoneValidation200Response.


        :param city: The city of this PhoneValidation200Response.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this PhoneValidation200Response.


        :return: The country of this PhoneValidation200Response.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this PhoneValidation200Response.


        :param country: The country of this PhoneValidation200Response.
        :type country: str
        """

        self._country = country

    @property
    def dialing_code(self):
        """Gets the dialing_code of this PhoneValidation200Response.


        :return: The dialing_code of this PhoneValidation200Response.
        :rtype: float
        """
        return self._dialing_code

    @dialing_code.setter
    def dialing_code(self, dialing_code):
        """Sets the dialing_code of this PhoneValidation200Response.


        :param dialing_code: The dialing_code of this PhoneValidation200Response.
        :type dialing_code: float
        """

        self._dialing_code = dialing_code

    @property
    def do_not_call(self):
        """Gets the do_not_call of this PhoneValidation200Response.


        :return: The do_not_call of this PhoneValidation200Response.
        :rtype: bool
        """
        return self._do_not_call

    @do_not_call.setter
    def do_not_call(self, do_not_call):
        """Sets the do_not_call of this PhoneValidation200Response.


        :param do_not_call: The do_not_call of this PhoneValidation200Response.
        :type do_not_call: bool
        """

        self._do_not_call = do_not_call

    @property
    def formatted(self):
        """Gets the formatted of this PhoneValidation200Response.


        :return: The formatted of this PhoneValidation200Response.
        :rtype: str
        """
        return self._formatted

    @formatted.setter
    def formatted(self, formatted):
        """Sets the formatted of this PhoneValidation200Response.


        :param formatted: The formatted of this PhoneValidation200Response.
        :type formatted: str
        """

        self._formatted = formatted

    @property
    def fraud_score(self):
        """Gets the fraud_score of this PhoneValidation200Response.


        :return: The fraud_score of this PhoneValidation200Response.
        :rtype: float
        """
        return self._fraud_score

    @fraud_score.setter
    def fraud_score(self, fraud_score):
        """Sets the fraud_score of this PhoneValidation200Response.


        :param fraud_score: The fraud_score of this PhoneValidation200Response.
        :type fraud_score: float
        """

        self._fraud_score = fraud_score

    @property
    def leaked(self):
        """Gets the leaked of this PhoneValidation200Response.


        :return: The leaked of this PhoneValidation200Response.
        :rtype: bool
        """
        return self._leaked

    @leaked.setter
    def leaked(self, leaked):
        """Sets the leaked of this PhoneValidation200Response.


        :param leaked: The leaked of this PhoneValidation200Response.
        :type leaked: bool
        """

        self._leaked = leaked

    @property
    def line_type(self):
        """Gets the line_type of this PhoneValidation200Response.


        :return: The line_type of this PhoneValidation200Response.
        :rtype: str
        """
        return self._line_type

    @line_type.setter
    def line_type(self, line_type):
        """Sets the line_type of this PhoneValidation200Response.


        :param line_type: The line_type of this PhoneValidation200Response.
        :type line_type: str
        """

        self._line_type = line_type

    @property
    def local_format(self):
        """Gets the local_format of this PhoneValidation200Response.


        :return: The local_format of this PhoneValidation200Response.
        :rtype: str
        """
        return self._local_format

    @local_format.setter
    def local_format(self, local_format):
        """Sets the local_format of this PhoneValidation200Response.


        :param local_format: The local_format of this PhoneValidation200Response.
        :type local_format: str
        """

        self._local_format = local_format

    @property
    def mcc(self):
        """Gets the mcc of this PhoneValidation200Response.


        :return: The mcc of this PhoneValidation200Response.
        :rtype: str
        """
        return self._mcc

    @mcc.setter
    def mcc(self, mcc):
        """Sets the mcc of this PhoneValidation200Response.


        :param mcc: The mcc of this PhoneValidation200Response.
        :type mcc: str
        """

        self._mcc = mcc

    @property
    def message(self):
        """Gets the message of this PhoneValidation200Response.


        :return: The message of this PhoneValidation200Response.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this PhoneValidation200Response.


        :param message: The message of this PhoneValidation200Response.
        :type message: str
        """

        self._message = message

    @property
    def mnc(self):
        """Gets the mnc of this PhoneValidation200Response.


        :return: The mnc of this PhoneValidation200Response.
        :rtype: str
        """
        return self._mnc

    @mnc.setter
    def mnc(self, mnc):
        """Sets the mnc of this PhoneValidation200Response.


        :param mnc: The mnc of this PhoneValidation200Response.
        :type mnc: str
        """

        self._mnc = mnc

    @property
    def name(self):
        """Gets the name of this PhoneValidation200Response.


        :return: The name of this PhoneValidation200Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PhoneValidation200Response.


        :param name: The name of this PhoneValidation200Response.
        :type name: str
        """

        self._name = name

    @property
    def prepaid(self):
        """Gets the prepaid of this PhoneValidation200Response.


        :return: The prepaid of this PhoneValidation200Response.
        :rtype: str
        """
        return self._prepaid

    @prepaid.setter
    def prepaid(self, prepaid):
        """Sets the prepaid of this PhoneValidation200Response.


        :param prepaid: The prepaid of this PhoneValidation200Response.
        :type prepaid: str
        """

        self._prepaid = prepaid

    @property
    def recent_abuse(self):
        """Gets the recent_abuse of this PhoneValidation200Response.


        :return: The recent_abuse of this PhoneValidation200Response.
        :rtype: bool
        """
        return self._recent_abuse

    @recent_abuse.setter
    def recent_abuse(self, recent_abuse):
        """Sets the recent_abuse of this PhoneValidation200Response.


        :param recent_abuse: The recent_abuse of this PhoneValidation200Response.
        :type recent_abuse: bool
        """

        self._recent_abuse = recent_abuse

    @property
    def region(self):
        """Gets the region of this PhoneValidation200Response.


        :return: The region of this PhoneValidation200Response.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this PhoneValidation200Response.


        :param region: The region of this PhoneValidation200Response.
        :type region: str
        """

        self._region = region

    @property
    def request_id(self):
        """Gets the request_id of this PhoneValidation200Response.


        :return: The request_id of this PhoneValidation200Response.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this PhoneValidation200Response.


        :param request_id: The request_id of this PhoneValidation200Response.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def risky(self):
        """Gets the risky of this PhoneValidation200Response.


        :return: The risky of this PhoneValidation200Response.
        :rtype: bool
        """
        return self._risky

    @risky.setter
    def risky(self, risky):
        """Sets the risky of this PhoneValidation200Response.


        :param risky: The risky of this PhoneValidation200Response.
        :type risky: bool
        """

        self._risky = risky

    @property
    def sms_domain(self):
        """Gets the sms_domain of this PhoneValidation200Response.


        :return: The sms_domain of this PhoneValidation200Response.
        :rtype: str
        """
        return self._sms_domain

    @sms_domain.setter
    def sms_domain(self, sms_domain):
        """Sets the sms_domain of this PhoneValidation200Response.


        :param sms_domain: The sms_domain of this PhoneValidation200Response.
        :type sms_domain: str
        """

        self._sms_domain = sms_domain

    @property
    def sms_email(self):
        """Gets the sms_email of this PhoneValidation200Response.


        :return: The sms_email of this PhoneValidation200Response.
        :rtype: str
        """
        return self._sms_email

    @sms_email.setter
    def sms_email(self, sms_email):
        """Sets the sms_email of this PhoneValidation200Response.


        :param sms_email: The sms_email of this PhoneValidation200Response.
        :type sms_email: str
        """

        self._sms_email = sms_email

    @property
    def spammer(self):
        """Gets the spammer of this PhoneValidation200Response.


        :return: The spammer of this PhoneValidation200Response.
        :rtype: bool
        """
        return self._spammer

    @spammer.setter
    def spammer(self, spammer):
        """Sets the spammer of this PhoneValidation200Response.


        :param spammer: The spammer of this PhoneValidation200Response.
        :type spammer: bool
        """

        self._spammer = spammer

    @property
    def success(self):
        """Gets the success of this PhoneValidation200Response.


        :return: The success of this PhoneValidation200Response.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this PhoneValidation200Response.


        :param success: The success of this PhoneValidation200Response.
        :type success: bool
        """

        self._success = success

    @property
    def timezone(self):
        """Gets the timezone of this PhoneValidation200Response.


        :return: The timezone of this PhoneValidation200Response.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this PhoneValidation200Response.


        :param timezone: The timezone of this PhoneValidation200Response.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def user_activity(self):
        """Gets the user_activity of this PhoneValidation200Response.


        :return: The user_activity of this PhoneValidation200Response.
        :rtype: str
        """
        return self._user_activity

    @user_activity.setter
    def user_activity(self, user_activity):
        """Sets the user_activity of this PhoneValidation200Response.


        :param user_activity: The user_activity of this PhoneValidation200Response.
        :type user_activity: str
        """

        self._user_activity = user_activity

    @property
    def valid(self):
        """Gets the valid of this PhoneValidation200Response.


        :return: The valid of this PhoneValidation200Response.
        :rtype: bool
        """
        return self._valid

    @valid.setter
    def valid(self, valid):
        """Sets the valid of this PhoneValidation200Response.


        :param valid: The valid of this PhoneValidation200Response.
        :type valid: bool
        """

        self._valid = valid

    @property
    def zip_code(self):
        """Gets the zip_code of this PhoneValidation200Response.


        :return: The zip_code of this PhoneValidation200Response.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this PhoneValidation200Response.


        :param zip_code: The zip_code of this PhoneValidation200Response.
        :type zip_code: str
        """

        self._zip_code = zip_code
