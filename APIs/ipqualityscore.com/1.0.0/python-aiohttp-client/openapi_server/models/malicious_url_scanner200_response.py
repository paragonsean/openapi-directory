# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.malicious_url_scanner200_response_domain_age import MaliciousUrlScanner200ResponseDomainAge
from openapi_server import util


class MaliciousUrlScanner200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adult: bool=None, category: str=None, content_type: str=None, dns_valid: bool=None, domain: str=None, domain_age: MaliciousUrlScanner200ResponseDomainAge=None, domain_rank: float=None, ip_address: str=None, malware: bool=None, message: str=None, page_size: float=None, parking: bool=None, phishing: bool=None, request_id: str=None, risk_score: float=None, server: str=None, spamming: bool=None, status_code: float=None, success: bool=None, suspicious: bool=None, unsafe: bool=None):
        """MaliciousUrlScanner200Response - a model defined in OpenAPI

        :param adult: The adult of this MaliciousUrlScanner200Response.
        :param category: The category of this MaliciousUrlScanner200Response.
        :param content_type: The content_type of this MaliciousUrlScanner200Response.
        :param dns_valid: The dns_valid of this MaliciousUrlScanner200Response.
        :param domain: The domain of this MaliciousUrlScanner200Response.
        :param domain_age: The domain_age of this MaliciousUrlScanner200Response.
        :param domain_rank: The domain_rank of this MaliciousUrlScanner200Response.
        :param ip_address: The ip_address of this MaliciousUrlScanner200Response.
        :param malware: The malware of this MaliciousUrlScanner200Response.
        :param message: The message of this MaliciousUrlScanner200Response.
        :param page_size: The page_size of this MaliciousUrlScanner200Response.
        :param parking: The parking of this MaliciousUrlScanner200Response.
        :param phishing: The phishing of this MaliciousUrlScanner200Response.
        :param request_id: The request_id of this MaliciousUrlScanner200Response.
        :param risk_score: The risk_score of this MaliciousUrlScanner200Response.
        :param server: The server of this MaliciousUrlScanner200Response.
        :param spamming: The spamming of this MaliciousUrlScanner200Response.
        :param status_code: The status_code of this MaliciousUrlScanner200Response.
        :param success: The success of this MaliciousUrlScanner200Response.
        :param suspicious: The suspicious of this MaliciousUrlScanner200Response.
        :param unsafe: The unsafe of this MaliciousUrlScanner200Response.
        """
        self.openapi_types = {
            'adult': bool,
            'category': str,
            'content_type': str,
            'dns_valid': bool,
            'domain': str,
            'domain_age': MaliciousUrlScanner200ResponseDomainAge,
            'domain_rank': float,
            'ip_address': str,
            'malware': bool,
            'message': str,
            'page_size': float,
            'parking': bool,
            'phishing': bool,
            'request_id': str,
            'risk_score': float,
            'server': str,
            'spamming': bool,
            'status_code': float,
            'success': bool,
            'suspicious': bool,
            'unsafe': bool
        }

        self.attribute_map = {
            'adult': 'adult',
            'category': 'category',
            'content_type': 'content_type',
            'dns_valid': 'dns_valid',
            'domain': 'domain',
            'domain_age': 'domain_age',
            'domain_rank': 'domain_rank',
            'ip_address': 'ip_address',
            'malware': 'malware',
            'message': 'message',
            'page_size': 'page_size',
            'parking': 'parking',
            'phishing': 'phishing',
            'request_id': 'request_id',
            'risk_score': 'risk_score',
            'server': 'server',
            'spamming': 'spamming',
            'status_code': 'status_code',
            'success': 'success',
            'suspicious': 'suspicious',
            'unsafe': 'unsafe'
        }

        self._adult = adult
        self._category = category
        self._content_type = content_type
        self._dns_valid = dns_valid
        self._domain = domain
        self._domain_age = domain_age
        self._domain_rank = domain_rank
        self._ip_address = ip_address
        self._malware = malware
        self._message = message
        self._page_size = page_size
        self._parking = parking
        self._phishing = phishing
        self._request_id = request_id
        self._risk_score = risk_score
        self._server = server
        self._spamming = spamming
        self._status_code = status_code
        self._success = success
        self._suspicious = suspicious
        self._unsafe = unsafe

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MaliciousUrlScanner200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The maliciousUrlScanner_200_response of this MaliciousUrlScanner200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adult(self):
        """Gets the adult of this MaliciousUrlScanner200Response.


        :return: The adult of this MaliciousUrlScanner200Response.
        :rtype: bool
        """
        return self._adult

    @adult.setter
    def adult(self, adult):
        """Sets the adult of this MaliciousUrlScanner200Response.


        :param adult: The adult of this MaliciousUrlScanner200Response.
        :type adult: bool
        """

        self._adult = adult

    @property
    def category(self):
        """Gets the category of this MaliciousUrlScanner200Response.


        :return: The category of this MaliciousUrlScanner200Response.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this MaliciousUrlScanner200Response.


        :param category: The category of this MaliciousUrlScanner200Response.
        :type category: str
        """

        self._category = category

    @property
    def content_type(self):
        """Gets the content_type of this MaliciousUrlScanner200Response.


        :return: The content_type of this MaliciousUrlScanner200Response.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this MaliciousUrlScanner200Response.


        :param content_type: The content_type of this MaliciousUrlScanner200Response.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def dns_valid(self):
        """Gets the dns_valid of this MaliciousUrlScanner200Response.


        :return: The dns_valid of this MaliciousUrlScanner200Response.
        :rtype: bool
        """
        return self._dns_valid

    @dns_valid.setter
    def dns_valid(self, dns_valid):
        """Sets the dns_valid of this MaliciousUrlScanner200Response.


        :param dns_valid: The dns_valid of this MaliciousUrlScanner200Response.
        :type dns_valid: bool
        """

        self._dns_valid = dns_valid

    @property
    def domain(self):
        """Gets the domain of this MaliciousUrlScanner200Response.


        :return: The domain of this MaliciousUrlScanner200Response.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this MaliciousUrlScanner200Response.


        :param domain: The domain of this MaliciousUrlScanner200Response.
        :type domain: str
        """

        self._domain = domain

    @property
    def domain_age(self):
        """Gets the domain_age of this MaliciousUrlScanner200Response.


        :return: The domain_age of this MaliciousUrlScanner200Response.
        :rtype: MaliciousUrlScanner200ResponseDomainAge
        """
        return self._domain_age

    @domain_age.setter
    def domain_age(self, domain_age):
        """Sets the domain_age of this MaliciousUrlScanner200Response.


        :param domain_age: The domain_age of this MaliciousUrlScanner200Response.
        :type domain_age: MaliciousUrlScanner200ResponseDomainAge
        """

        self._domain_age = domain_age

    @property
    def domain_rank(self):
        """Gets the domain_rank of this MaliciousUrlScanner200Response.


        :return: The domain_rank of this MaliciousUrlScanner200Response.
        :rtype: float
        """
        return self._domain_rank

    @domain_rank.setter
    def domain_rank(self, domain_rank):
        """Sets the domain_rank of this MaliciousUrlScanner200Response.


        :param domain_rank: The domain_rank of this MaliciousUrlScanner200Response.
        :type domain_rank: float
        """

        self._domain_rank = domain_rank

    @property
    def ip_address(self):
        """Gets the ip_address of this MaliciousUrlScanner200Response.


        :return: The ip_address of this MaliciousUrlScanner200Response.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this MaliciousUrlScanner200Response.


        :param ip_address: The ip_address of this MaliciousUrlScanner200Response.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def malware(self):
        """Gets the malware of this MaliciousUrlScanner200Response.


        :return: The malware of this MaliciousUrlScanner200Response.
        :rtype: bool
        """
        return self._malware

    @malware.setter
    def malware(self, malware):
        """Sets the malware of this MaliciousUrlScanner200Response.


        :param malware: The malware of this MaliciousUrlScanner200Response.
        :type malware: bool
        """

        self._malware = malware

    @property
    def message(self):
        """Gets the message of this MaliciousUrlScanner200Response.


        :return: The message of this MaliciousUrlScanner200Response.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this MaliciousUrlScanner200Response.


        :param message: The message of this MaliciousUrlScanner200Response.
        :type message: str
        """

        self._message = message

    @property
    def page_size(self):
        """Gets the page_size of this MaliciousUrlScanner200Response.


        :return: The page_size of this MaliciousUrlScanner200Response.
        :rtype: float
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this MaliciousUrlScanner200Response.


        :param page_size: The page_size of this MaliciousUrlScanner200Response.
        :type page_size: float
        """

        self._page_size = page_size

    @property
    def parking(self):
        """Gets the parking of this MaliciousUrlScanner200Response.


        :return: The parking of this MaliciousUrlScanner200Response.
        :rtype: bool
        """
        return self._parking

    @parking.setter
    def parking(self, parking):
        """Sets the parking of this MaliciousUrlScanner200Response.


        :param parking: The parking of this MaliciousUrlScanner200Response.
        :type parking: bool
        """

        self._parking = parking

    @property
    def phishing(self):
        """Gets the phishing of this MaliciousUrlScanner200Response.


        :return: The phishing of this MaliciousUrlScanner200Response.
        :rtype: bool
        """
        return self._phishing

    @phishing.setter
    def phishing(self, phishing):
        """Sets the phishing of this MaliciousUrlScanner200Response.


        :param phishing: The phishing of this MaliciousUrlScanner200Response.
        :type phishing: bool
        """

        self._phishing = phishing

    @property
    def request_id(self):
        """Gets the request_id of this MaliciousUrlScanner200Response.


        :return: The request_id of this MaliciousUrlScanner200Response.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this MaliciousUrlScanner200Response.


        :param request_id: The request_id of this MaliciousUrlScanner200Response.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def risk_score(self):
        """Gets the risk_score of this MaliciousUrlScanner200Response.


        :return: The risk_score of this MaliciousUrlScanner200Response.
        :rtype: float
        """
        return self._risk_score

    @risk_score.setter
    def risk_score(self, risk_score):
        """Sets the risk_score of this MaliciousUrlScanner200Response.


        :param risk_score: The risk_score of this MaliciousUrlScanner200Response.
        :type risk_score: float
        """

        self._risk_score = risk_score

    @property
    def server(self):
        """Gets the server of this MaliciousUrlScanner200Response.


        :return: The server of this MaliciousUrlScanner200Response.
        :rtype: str
        """
        return self._server

    @server.setter
    def server(self, server):
        """Sets the server of this MaliciousUrlScanner200Response.


        :param server: The server of this MaliciousUrlScanner200Response.
        :type server: str
        """

        self._server = server

    @property
    def spamming(self):
        """Gets the spamming of this MaliciousUrlScanner200Response.


        :return: The spamming of this MaliciousUrlScanner200Response.
        :rtype: bool
        """
        return self._spamming

    @spamming.setter
    def spamming(self, spamming):
        """Sets the spamming of this MaliciousUrlScanner200Response.


        :param spamming: The spamming of this MaliciousUrlScanner200Response.
        :type spamming: bool
        """

        self._spamming = spamming

    @property
    def status_code(self):
        """Gets the status_code of this MaliciousUrlScanner200Response.


        :return: The status_code of this MaliciousUrlScanner200Response.
        :rtype: float
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this MaliciousUrlScanner200Response.


        :param status_code: The status_code of this MaliciousUrlScanner200Response.
        :type status_code: float
        """

        self._status_code = status_code

    @property
    def success(self):
        """Gets the success of this MaliciousUrlScanner200Response.


        :return: The success of this MaliciousUrlScanner200Response.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this MaliciousUrlScanner200Response.


        :param success: The success of this MaliciousUrlScanner200Response.
        :type success: bool
        """

        self._success = success

    @property
    def suspicious(self):
        """Gets the suspicious of this MaliciousUrlScanner200Response.


        :return: The suspicious of this MaliciousUrlScanner200Response.
        :rtype: bool
        """
        return self._suspicious

    @suspicious.setter
    def suspicious(self, suspicious):
        """Sets the suspicious of this MaliciousUrlScanner200Response.


        :param suspicious: The suspicious of this MaliciousUrlScanner200Response.
        :type suspicious: bool
        """

        self._suspicious = suspicious

    @property
    def unsafe(self):
        """Gets the unsafe of this MaliciousUrlScanner200Response.


        :return: The unsafe of this MaliciousUrlScanner200Response.
        :rtype: bool
        """
        return self._unsafe

    @unsafe.setter
    def unsafe(self, unsafe):
        """Sets the unsafe of this MaliciousUrlScanner200Response.


        :param unsafe: The unsafe of this MaliciousUrlScanner200Response.
        :type unsafe: bool
        """

        self._unsafe = unsafe
