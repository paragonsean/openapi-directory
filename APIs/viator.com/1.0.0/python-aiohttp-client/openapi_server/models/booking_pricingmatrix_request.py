# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BookingPricingmatrixRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, booking_date: str=None, currency_code: str=None, product_code: str=None, tour_grade_code: str=None):
        """BookingPricingmatrixRequest - a model defined in OpenAPI

        :param booking_date: The booking_date of this BookingPricingmatrixRequest.
        :param currency_code: The currency_code of this BookingPricingmatrixRequest.
        :param product_code: The product_code of this BookingPricingmatrixRequest.
        :param tour_grade_code: The tour_grade_code of this BookingPricingmatrixRequest.
        """
        self.openapi_types = {
            'booking_date': str,
            'currency_code': str,
            'product_code': str,
            'tour_grade_code': str
        }

        self.attribute_map = {
            'booking_date': 'bookingDate',
            'currency_code': 'currencyCode',
            'product_code': 'productCode',
            'tour_grade_code': 'tourGradeCode'
        }

        self._booking_date = booking_date
        self._currency_code = currency_code
        self._product_code = product_code
        self._tour_grade_code = tour_grade_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingPricingmatrixRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookingPricingmatrix_request of this BookingPricingmatrixRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def booking_date(self):
        """Gets the booking_date of this BookingPricingmatrixRequest.

        **date** for which to retrieve pricing data  (must be in the future) (**note**: this is an optional parameter for normal products; if the date is *not* provided then the nearest available date is determined)

        :return: The booking_date of this BookingPricingmatrixRequest.
        :rtype: str
        """
        return self._booking_date

    @booking_date.setter
    def booking_date(self, booking_date):
        """Sets the booking_date of this BookingPricingmatrixRequest.

        **date** for which to retrieve pricing data  (must be in the future) (**note**: this is an optional parameter for normal products; if the date is *not* provided then the nearest available date is determined)

        :param booking_date: The booking_date of this BookingPricingmatrixRequest.
        :type booking_date: str
        """

        self._booking_date = booking_date

    @property
    def currency_code(self):
        """Gets the currency_code of this BookingPricingmatrixRequest.

        **currency code** of the currency in which to display pricing information

        :return: The currency_code of this BookingPricingmatrixRequest.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this BookingPricingmatrixRequest.

        **currency code** of the currency in which to display pricing information

        :param currency_code: The currency_code of this BookingPricingmatrixRequest.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def product_code(self):
        """Gets the product_code of this BookingPricingmatrixRequest.

        **unique alphanumeric identifier** of the product for which to retrieve the pricing matrix

        :return: The product_code of this BookingPricingmatrixRequest.
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this BookingPricingmatrixRequest.

        **unique alphanumeric identifier** of the product for which to retrieve the pricing matrix

        :param product_code: The product_code of this BookingPricingmatrixRequest.
        :type product_code: str
        """

        self._product_code = product_code

    @property
    def tour_grade_code(self):
        """Gets the tour_grade_code of this BookingPricingmatrixRequest.

        **alphanumeric identifier** of the product tour grade for which to retrieve the pricing matrix

        :return: The tour_grade_code of this BookingPricingmatrixRequest.
        :rtype: str
        """
        return self._tour_grade_code

    @tour_grade_code.setter
    def tour_grade_code(self, tour_grade_code):
        """Sets the tour_grade_code of this BookingPricingmatrixRequest.

        **alphanumeric identifier** of the product tour grade for which to retrieve the pricing matrix

        :param tour_grade_code: The tour_grade_code of this BookingPricingmatrixRequest.
        :type tour_grade_code: str
        """

        self._tour_grade_code = tour_grade_code
