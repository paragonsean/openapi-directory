# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Product200ResponseAllOfDataPassengerAttributesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_attribute_kgs: str=None, custom_attribute_lbs: str=None, error_missing_message: str=None, error_validation_message: str=None, question_id: str=None, required: bool=None, title: str=None, validate_type: str=None):
        """Product200ResponseAllOfDataPassengerAttributesInner - a model defined in OpenAPI

        :param custom_attribute_kgs: The custom_attribute_kgs of this Product200ResponseAllOfDataPassengerAttributesInner.
        :param custom_attribute_lbs: The custom_attribute_lbs of this Product200ResponseAllOfDataPassengerAttributesInner.
        :param error_missing_message: The error_missing_message of this Product200ResponseAllOfDataPassengerAttributesInner.
        :param error_validation_message: The error_validation_message of this Product200ResponseAllOfDataPassengerAttributesInner.
        :param question_id: The question_id of this Product200ResponseAllOfDataPassengerAttributesInner.
        :param required: The required of this Product200ResponseAllOfDataPassengerAttributesInner.
        :param title: The title of this Product200ResponseAllOfDataPassengerAttributesInner.
        :param validate_type: The validate_type of this Product200ResponseAllOfDataPassengerAttributesInner.
        """
        self.openapi_types = {
            'custom_attribute_kgs': str,
            'custom_attribute_lbs': str,
            'error_missing_message': str,
            'error_validation_message': str,
            'question_id': str,
            'required': bool,
            'title': str,
            'validate_type': str
        }

        self.attribute_map = {
            'custom_attribute_kgs': 'customAttribute_kgs',
            'custom_attribute_lbs': 'customAttribute_lbs',
            'error_missing_message': 'errorMissingMessage',
            'error_validation_message': 'errorValidationMessage',
            'question_id': 'questionId',
            'required': 'required',
            'title': 'title',
            'validate_type': 'validateType'
        }

        self._custom_attribute_kgs = custom_attribute_kgs
        self._custom_attribute_lbs = custom_attribute_lbs
        self._error_missing_message = error_missing_message
        self._error_validation_message = error_validation_message
        self._question_id = question_id
        self._required = required
        self._title = title
        self._validate_type = validate_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Product200ResponseAllOfDataPassengerAttributesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The product_200_response_allOf_data_passengerAttributes_inner of this Product200ResponseAllOfDataPassengerAttributesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_attribute_kgs(self):
        """Gets the custom_attribute_kgs of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :return: The custom_attribute_kgs of this Product200ResponseAllOfDataPassengerAttributesInner.
        :rtype: str
        """
        return self._custom_attribute_kgs

    @custom_attribute_kgs.setter
    def custom_attribute_kgs(self, custom_attribute_kgs):
        """Sets the custom_attribute_kgs of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :param custom_attribute_kgs: The custom_attribute_kgs of this Product200ResponseAllOfDataPassengerAttributesInner.
        :type custom_attribute_kgs: str
        """

        self._custom_attribute_kgs = custom_attribute_kgs

    @property
    def custom_attribute_lbs(self):
        """Gets the custom_attribute_lbs of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :return: The custom_attribute_lbs of this Product200ResponseAllOfDataPassengerAttributesInner.
        :rtype: str
        """
        return self._custom_attribute_lbs

    @custom_attribute_lbs.setter
    def custom_attribute_lbs(self, custom_attribute_lbs):
        """Sets the custom_attribute_lbs of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :param custom_attribute_lbs: The custom_attribute_lbs of this Product200ResponseAllOfDataPassengerAttributesInner.
        :type custom_attribute_lbs: str
        """

        self._custom_attribute_lbs = custom_attribute_lbs

    @property
    def error_missing_message(self):
        """Gets the error_missing_message of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :return: The error_missing_message of this Product200ResponseAllOfDataPassengerAttributesInner.
        :rtype: str
        """
        return self._error_missing_message

    @error_missing_message.setter
    def error_missing_message(self, error_missing_message):
        """Sets the error_missing_message of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :param error_missing_message: The error_missing_message of this Product200ResponseAllOfDataPassengerAttributesInner.
        :type error_missing_message: str
        """

        self._error_missing_message = error_missing_message

    @property
    def error_validation_message(self):
        """Gets the error_validation_message of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :return: The error_validation_message of this Product200ResponseAllOfDataPassengerAttributesInner.
        :rtype: str
        """
        return self._error_validation_message

    @error_validation_message.setter
    def error_validation_message(self, error_validation_message):
        """Sets the error_validation_message of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :param error_validation_message: The error_validation_message of this Product200ResponseAllOfDataPassengerAttributesInner.
        :type error_validation_message: str
        """

        self._error_validation_message = error_validation_message

    @property
    def question_id(self):
        """Gets the question_id of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :return: The question_id of this Product200ResponseAllOfDataPassengerAttributesInner.
        :rtype: str
        """
        return self._question_id

    @question_id.setter
    def question_id(self, question_id):
        """Sets the question_id of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :param question_id: The question_id of this Product200ResponseAllOfDataPassengerAttributesInner.
        :type question_id: str
        """

        self._question_id = question_id

    @property
    def required(self):
        """Gets the required of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :return: The required of this Product200ResponseAllOfDataPassengerAttributesInner.
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :param required: The required of this Product200ResponseAllOfDataPassengerAttributesInner.
        :type required: bool
        """

        self._required = required

    @property
    def title(self):
        """Gets the title of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :return: The title of this Product200ResponseAllOfDataPassengerAttributesInner.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :param title: The title of this Product200ResponseAllOfDataPassengerAttributesInner.
        :type title: str
        """

        self._title = title

    @property
    def validate_type(self):
        """Gets the validate_type of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :return: The validate_type of this Product200ResponseAllOfDataPassengerAttributesInner.
        :rtype: str
        """
        return self._validate_type

    @validate_type.setter
    def validate_type(self, validate_type):
        """Sets the validate_type of this Product200ResponseAllOfDataPassengerAttributesInner.

        ignore (Viator only)

        :param validate_type: The validate_type of this Product200ResponseAllOfDataPassengerAttributesInner.
        :type validate_type: str
        """

        self._validate_type = validate_type
