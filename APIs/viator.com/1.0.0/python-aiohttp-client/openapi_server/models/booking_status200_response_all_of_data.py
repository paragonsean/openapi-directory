# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.booking_status200_response_all_of_data_item_summaries_inner import BookingStatus200ResponseAllOfDataItemSummariesInner
from openapi_server.models.booking_status_itinerary import BookingStatusItinerary
from openapi_server import util


class BookingStatus200ResponseAllOfData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, booking_date: str=None, booking_status: BookingStatusItinerary=None, distributor_ref: str=None, item_summaries: List[BookingStatus200ResponseAllOfDataItemSummariesInner]=None, itinerary_id: int=None, sort_order: int=None):
        """BookingStatus200ResponseAllOfData - a model defined in OpenAPI

        :param booking_date: The booking_date of this BookingStatus200ResponseAllOfData.
        :param booking_status: The booking_status of this BookingStatus200ResponseAllOfData.
        :param distributor_ref: The distributor_ref of this BookingStatus200ResponseAllOfData.
        :param item_summaries: The item_summaries of this BookingStatus200ResponseAllOfData.
        :param itinerary_id: The itinerary_id of this BookingStatus200ResponseAllOfData.
        :param sort_order: The sort_order of this BookingStatus200ResponseAllOfData.
        """
        self.openapi_types = {
            'booking_date': str,
            'booking_status': BookingStatusItinerary,
            'distributor_ref': str,
            'item_summaries': List[BookingStatus200ResponseAllOfDataItemSummariesInner],
            'itinerary_id': int,
            'sort_order': int
        }

        self.attribute_map = {
            'booking_date': 'bookingDate',
            'booking_status': 'bookingStatus',
            'distributor_ref': 'distributorRef',
            'item_summaries': 'itemSummaries',
            'itinerary_id': 'itineraryId',
            'sort_order': 'sortOrder'
        }

        self._booking_date = booking_date
        self._booking_status = booking_status
        self._distributor_ref = distributor_ref
        self._item_summaries = item_summaries
        self._itinerary_id = itinerary_id
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingStatus200ResponseAllOfData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookingStatus_200_response_allOf_data of this BookingStatus200ResponseAllOfData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def booking_date(self):
        """Gets the booking_date of this BookingStatus200ResponseAllOfData.

        **date**: of *this* booking

        :return: The booking_date of this BookingStatus200ResponseAllOfData.
        :rtype: str
        """
        return self._booking_date

    @booking_date.setter
    def booking_date(self, booking_date):
        """Sets the booking_date of this BookingStatus200ResponseAllOfData.

        **date**: of *this* booking

        :param booking_date: The booking_date of this BookingStatus200ResponseAllOfData.
        :type booking_date: str
        """

        self._booking_date = booking_date

    @property
    def booking_status(self):
        """Gets the booking_status of this BookingStatus200ResponseAllOfData.


        :return: The booking_status of this BookingStatus200ResponseAllOfData.
        :rtype: BookingStatusItinerary
        """
        return self._booking_status

    @booking_status.setter
    def booking_status(self, booking_status):
        """Sets the booking_status of this BookingStatus200ResponseAllOfData.


        :param booking_status: The booking_status of this BookingStatus200ResponseAllOfData.
        :type booking_status: BookingStatusItinerary
        """

        self._booking_status = booking_status

    @property
    def distributor_ref(self):
        """Gets the distributor_ref of this BookingStatus200ResponseAllOfData.

        **alphanumeric identifer** of the distributor for *this* booking

        :return: The distributor_ref of this BookingStatus200ResponseAllOfData.
        :rtype: str
        """
        return self._distributor_ref

    @distributor_ref.setter
    def distributor_ref(self, distributor_ref):
        """Sets the distributor_ref of this BookingStatus200ResponseAllOfData.

        **alphanumeric identifer** of the distributor for *this* booking

        :param distributor_ref: The distributor_ref of this BookingStatus200ResponseAllOfData.
        :type distributor_ref: str
        """

        self._distributor_ref = distributor_ref

    @property
    def item_summaries(self):
        """Gets the item_summaries of this BookingStatus200ResponseAllOfData.

        **array** of item summary objects

        :return: The item_summaries of this BookingStatus200ResponseAllOfData.
        :rtype: List[BookingStatus200ResponseAllOfDataItemSummariesInner]
        """
        return self._item_summaries

    @item_summaries.setter
    def item_summaries(self, item_summaries):
        """Sets the item_summaries of this BookingStatus200ResponseAllOfData.

        **array** of item summary objects

        :param item_summaries: The item_summaries of this BookingStatus200ResponseAllOfData.
        :type item_summaries: List[BookingStatus200ResponseAllOfDataItemSummariesInner]
        """

        self._item_summaries = item_summaries

    @property
    def itinerary_id(self):
        """Gets the itinerary_id of this BookingStatus200ResponseAllOfData.

        ignore (Viator only)

        :return: The itinerary_id of this BookingStatus200ResponseAllOfData.
        :rtype: int
        """
        return self._itinerary_id

    @itinerary_id.setter
    def itinerary_id(self, itinerary_id):
        """Sets the itinerary_id of this BookingStatus200ResponseAllOfData.

        ignore (Viator only)

        :param itinerary_id: The itinerary_id of this BookingStatus200ResponseAllOfData.
        :type itinerary_id: int
        """

        self._itinerary_id = itinerary_id

    @property
    def sort_order(self):
        """Gets the sort_order of this BookingStatus200ResponseAllOfData.

        **sort order** for *this* response

        :return: The sort_order of this BookingStatus200ResponseAllOfData.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this BookingStatus200ResponseAllOfData.

        **sort order** for *this* response

        :param sort_order: The sort_order of this BookingStatus200ResponseAllOfData.
        :type sort_order: int
        """

        self._sort_order = sort_order
