# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day_range_max: int=None, day_range_min: int=None, percentage_refundable: int=None, policy_end_timestamp: int=None, policy_start_timestamp: int=None):
        """BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner - a model defined in OpenAPI

        :param day_range_max: The day_range_max of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :param day_range_min: The day_range_min of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :param percentage_refundable: The percentage_refundable of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :param policy_end_timestamp: The policy_end_timestamp of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :param policy_start_timestamp: The policy_start_timestamp of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        """
        self.openapi_types = {
            'day_range_max': int,
            'day_range_min': int,
            'percentage_refundable': int,
            'policy_end_timestamp': int,
            'policy_start_timestamp': int
        }

        self.attribute_map = {
            'day_range_max': 'dayRangeMax',
            'day_range_min': 'dayRangeMin',
            'percentage_refundable': 'percentageRefundable',
            'policy_end_timestamp': 'policyEndTimestamp',
            'policy_start_timestamp': 'policyStartTimestamp'
        }

        self._day_range_max = day_range_max
        self._day_range_min = day_range_min
        self._percentage_refundable = percentage_refundable
        self._policy_end_timestamp = policy_end_timestamp
        self._policy_start_timestamp = policy_start_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookingBook_200_response_allOf_data_itemSummaries_inner_merchantTermsAndConditions_cancellationFromTourDate_inner of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day_range_max(self):
        """Gets the day_range_max of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.

        **number** of days prior to the tour start date that *this* policy window begins. `null` signifies open-endedness

        :return: The day_range_max of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :rtype: int
        """
        return self._day_range_max

    @day_range_max.setter
    def day_range_max(self, day_range_max):
        """Sets the day_range_max of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.

        **number** of days prior to the tour start date that *this* policy window begins. `null` signifies open-endedness

        :param day_range_max: The day_range_max of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :type day_range_max: int
        """

        self._day_range_max = day_range_max

    @property
    def day_range_min(self):
        """Gets the day_range_min of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.

        **number** of days prior to the tour start date that *this* policy window ends

        :return: The day_range_min of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :rtype: int
        """
        return self._day_range_min

    @day_range_min.setter
    def day_range_min(self, day_range_min):
        """Sets the day_range_min of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.

        **number** of days prior to the tour start date that *this* policy window ends

        :param day_range_min: The day_range_min of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :type day_range_min: int
        """

        self._day_range_min = day_range_min

    @property
    def percentage_refundable(self):
        """Gets the percentage_refundable of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.

        **percentage** of total price refundable if cancelled within *this* time window

        :return: The percentage_refundable of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :rtype: int
        """
        return self._percentage_refundable

    @percentage_refundable.setter
    def percentage_refundable(self, percentage_refundable):
        """Sets the percentage_refundable of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.

        **percentage** of total price refundable if cancelled within *this* time window

        :param percentage_refundable: The percentage_refundable of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :type percentage_refundable: int
        """

        self._percentage_refundable = percentage_refundable

    @property
    def policy_end_timestamp(self):
        """Gets the policy_end_timestamp of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.

        **Unix timestamp** giving the exact time the policy ends

        :return: The policy_end_timestamp of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :rtype: int
        """
        return self._policy_end_timestamp

    @policy_end_timestamp.setter
    def policy_end_timestamp(self, policy_end_timestamp):
        """Sets the policy_end_timestamp of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.

        **Unix timestamp** giving the exact time the policy ends

        :param policy_end_timestamp: The policy_end_timestamp of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :type policy_end_timestamp: int
        """

        self._policy_end_timestamp = policy_end_timestamp

    @property
    def policy_start_timestamp(self):
        """Gets the policy_start_timestamp of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.

        **Unix timestamp** giving the exact time the policy commences

        :return: The policy_start_timestamp of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :rtype: int
        """
        return self._policy_start_timestamp

    @policy_start_timestamp.setter
    def policy_start_timestamp(self, policy_start_timestamp):
        """Sets the policy_start_timestamp of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.

        **Unix timestamp** giving the exact time the policy commences

        :param policy_start_timestamp: The policy_start_timestamp of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner.
        :type policy_start_timestamp: int
        """

        self._policy_start_timestamp = policy_start_timestamp
