# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.booking_availability_tourgrades_pricingmatrix200_response_all_of_data_dates_inner import BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfDataDatesInner
from openapi_server import util


class BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, booking_month: str=None, dates: List[BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfDataDatesInner]=None, pricing_unit: str=None):
        """BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData - a model defined in OpenAPI

        :param booking_month: The booking_month of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.
        :param dates: The dates of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.
        :param pricing_unit: The pricing_unit of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.
        """
        self.openapi_types = {
            'booking_month': str,
            'dates': List[BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfDataDatesInner],
            'pricing_unit': str
        }

        self.attribute_map = {
            'booking_month': 'bookingMonth',
            'dates': 'dates',
            'pricing_unit': 'pricingUnit'
        }

        self._booking_month = booking_month
        self._dates = dates
        self._pricing_unit = pricing_unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookingAvailabilityTourgradesPricingmatrix_200_response_allOf_data of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def booking_month(self):
        """Gets the booking_month of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.

        **month of year** (as text) by which to filter results

        :return: The booking_month of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.
        :rtype: str
        """
        return self._booking_month

    @booking_month.setter
    def booking_month(self, booking_month):
        """Sets the booking_month of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.

        **month of year** (as text) by which to filter results

        :param booking_month: The booking_month of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.
        :type booking_month: str
        """

        self._booking_month = booking_month

    @property
    def dates(self):
        """Gets the dates of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.

        **array of tour grade pricing objects** each detailing availability on a single day

        :return: The dates of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.
        :rtype: List[BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfDataDatesInner]
        """
        return self._dates

    @dates.setter
    def dates(self, dates):
        """Sets the dates of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.

        **array of tour grade pricing objects** each detailing availability on a single day

        :param dates: The dates of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.
        :type dates: List[BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfDataDatesInner]
        """

        self._dates = dates

    @property
    def pricing_unit(self):
        """Gets the pricing_unit of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.

        **natural-language label** for the pricing terms of this tour grade - see [Understanding the pricingUnit field](#section/Using-the-API/Understanding-the-pricingUnit-field) for more information 

        :return: The pricing_unit of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.
        :rtype: str
        """
        return self._pricing_unit

    @pricing_unit.setter
    def pricing_unit(self, pricing_unit):
        """Sets the pricing_unit of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.

        **natural-language label** for the pricing terms of this tour grade - see [Understanding the pricingUnit field](#section/Using-the-API/Understanding-the-pricingUnit-field) for more information 

        :param pricing_unit: The pricing_unit of this BookingAvailabilityTourgradesPricingmatrix200ResponseAllOfData.
        :type pricing_unit: str
        """

        self._pricing_unit = pricing_unit
