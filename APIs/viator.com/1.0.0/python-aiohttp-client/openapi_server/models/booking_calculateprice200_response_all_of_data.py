# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.booking_calculateprice200_response_all_of_data_itinerary import BookingCalculateprice200ResponseAllOfDataItinerary
from openapi_server import util


class BookingCalculateprice200ResponseAllOfData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None, has_promo_code: bool=None, itinerary: BookingCalculateprice200ResponseAllOfDataItinerary=None, itinerary_from_price: float=None, itinerary_from_price_formatted: str=None, itinerary_new_price: float=None, itinerary_new_price_formatted: str=None, itinerary_saving: int=None, itinerary_saving_formatted: str=None, payment_gateway_info: str=None, promo_code: str=None, promo_code_expired: bool=None, promo_code_valid: bool=None, rules_applied: List[str]=None):
        """BookingCalculateprice200ResponseAllOfData - a model defined in OpenAPI

        :param currency_code: The currency_code of this BookingCalculateprice200ResponseAllOfData.
        :param has_promo_code: The has_promo_code of this BookingCalculateprice200ResponseAllOfData.
        :param itinerary: The itinerary of this BookingCalculateprice200ResponseAllOfData.
        :param itinerary_from_price: The itinerary_from_price of this BookingCalculateprice200ResponseAllOfData.
        :param itinerary_from_price_formatted: The itinerary_from_price_formatted of this BookingCalculateprice200ResponseAllOfData.
        :param itinerary_new_price: The itinerary_new_price of this BookingCalculateprice200ResponseAllOfData.
        :param itinerary_new_price_formatted: The itinerary_new_price_formatted of this BookingCalculateprice200ResponseAllOfData.
        :param itinerary_saving: The itinerary_saving of this BookingCalculateprice200ResponseAllOfData.
        :param itinerary_saving_formatted: The itinerary_saving_formatted of this BookingCalculateprice200ResponseAllOfData.
        :param payment_gateway_info: The payment_gateway_info of this BookingCalculateprice200ResponseAllOfData.
        :param promo_code: The promo_code of this BookingCalculateprice200ResponseAllOfData.
        :param promo_code_expired: The promo_code_expired of this BookingCalculateprice200ResponseAllOfData.
        :param promo_code_valid: The promo_code_valid of this BookingCalculateprice200ResponseAllOfData.
        :param rules_applied: The rules_applied of this BookingCalculateprice200ResponseAllOfData.
        """
        self.openapi_types = {
            'currency_code': str,
            'has_promo_code': bool,
            'itinerary': BookingCalculateprice200ResponseAllOfDataItinerary,
            'itinerary_from_price': float,
            'itinerary_from_price_formatted': str,
            'itinerary_new_price': float,
            'itinerary_new_price_formatted': str,
            'itinerary_saving': int,
            'itinerary_saving_formatted': str,
            'payment_gateway_info': str,
            'promo_code': str,
            'promo_code_expired': bool,
            'promo_code_valid': bool,
            'rules_applied': List[str]
        }

        self.attribute_map = {
            'currency_code': 'currencyCode',
            'has_promo_code': 'hasPromoCode',
            'itinerary': 'itinerary',
            'itinerary_from_price': 'itineraryFromPrice',
            'itinerary_from_price_formatted': 'itineraryFromPriceFormatted',
            'itinerary_new_price': 'itineraryNewPrice',
            'itinerary_new_price_formatted': 'itineraryNewPriceFormatted',
            'itinerary_saving': 'itinerarySaving',
            'itinerary_saving_formatted': 'itinerarySavingFormatted',
            'payment_gateway_info': 'paymentGatewayInfo',
            'promo_code': 'promoCode',
            'promo_code_expired': 'promoCodeExpired',
            'promo_code_valid': 'promoCodeValid',
            'rules_applied': 'rulesApplied'
        }

        self._currency_code = currency_code
        self._has_promo_code = has_promo_code
        self._itinerary = itinerary
        self._itinerary_from_price = itinerary_from_price
        self._itinerary_from_price_formatted = itinerary_from_price_formatted
        self._itinerary_new_price = itinerary_new_price
        self._itinerary_new_price_formatted = itinerary_new_price_formatted
        self._itinerary_saving = itinerary_saving
        self._itinerary_saving_formatted = itinerary_saving_formatted
        self._payment_gateway_info = payment_gateway_info
        self._promo_code = promo_code
        self._promo_code_expired = promo_code_expired
        self._promo_code_valid = promo_code_valid
        self._rules_applied = rules_applied

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingCalculateprice200ResponseAllOfData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookingCalculateprice_200_response_allOf_data of this BookingCalculateprice200ResponseAllOfData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this BookingCalculateprice200ResponseAllOfData.

        **specifier of the currency** in which pricing details are displayed

        :return: The currency_code of this BookingCalculateprice200ResponseAllOfData.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this BookingCalculateprice200ResponseAllOfData.

        **specifier of the currency** in which pricing details are displayed

        :param currency_code: The currency_code of this BookingCalculateprice200ResponseAllOfData.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def has_promo_code(self):
        """Gets the has_promo_code of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The has_promo_code of this BookingCalculateprice200ResponseAllOfData.
        :rtype: bool
        """
        return self._has_promo_code

    @has_promo_code.setter
    def has_promo_code(self, has_promo_code):
        """Sets the has_promo_code of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param has_promo_code: The has_promo_code of this BookingCalculateprice200ResponseAllOfData.
        :type has_promo_code: bool
        """

        self._has_promo_code = has_promo_code

    @property
    def itinerary(self):
        """Gets the itinerary of this BookingCalculateprice200ResponseAllOfData.


        :return: The itinerary of this BookingCalculateprice200ResponseAllOfData.
        :rtype: BookingCalculateprice200ResponseAllOfDataItinerary
        """
        return self._itinerary

    @itinerary.setter
    def itinerary(self, itinerary):
        """Sets the itinerary of this BookingCalculateprice200ResponseAllOfData.


        :param itinerary: The itinerary of this BookingCalculateprice200ResponseAllOfData.
        :type itinerary: BookingCalculateprice200ResponseAllOfDataItinerary
        """

        self._itinerary = itinerary

    @property
    def itinerary_from_price(self):
        """Gets the itinerary_from_price of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The itinerary_from_price of this BookingCalculateprice200ResponseAllOfData.
        :rtype: float
        """
        return self._itinerary_from_price

    @itinerary_from_price.setter
    def itinerary_from_price(self, itinerary_from_price):
        """Sets the itinerary_from_price of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param itinerary_from_price: The itinerary_from_price of this BookingCalculateprice200ResponseAllOfData.
        :type itinerary_from_price: float
        """

        self._itinerary_from_price = itinerary_from_price

    @property
    def itinerary_from_price_formatted(self):
        """Gets the itinerary_from_price_formatted of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The itinerary_from_price_formatted of this BookingCalculateprice200ResponseAllOfData.
        :rtype: str
        """
        return self._itinerary_from_price_formatted

    @itinerary_from_price_formatted.setter
    def itinerary_from_price_formatted(self, itinerary_from_price_formatted):
        """Sets the itinerary_from_price_formatted of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param itinerary_from_price_formatted: The itinerary_from_price_formatted of this BookingCalculateprice200ResponseAllOfData.
        :type itinerary_from_price_formatted: str
        """

        self._itinerary_from_price_formatted = itinerary_from_price_formatted

    @property
    def itinerary_new_price(self):
        """Gets the itinerary_new_price of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The itinerary_new_price of this BookingCalculateprice200ResponseAllOfData.
        :rtype: float
        """
        return self._itinerary_new_price

    @itinerary_new_price.setter
    def itinerary_new_price(self, itinerary_new_price):
        """Sets the itinerary_new_price of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param itinerary_new_price: The itinerary_new_price of this BookingCalculateprice200ResponseAllOfData.
        :type itinerary_new_price: float
        """

        self._itinerary_new_price = itinerary_new_price

    @property
    def itinerary_new_price_formatted(self):
        """Gets the itinerary_new_price_formatted of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The itinerary_new_price_formatted of this BookingCalculateprice200ResponseAllOfData.
        :rtype: str
        """
        return self._itinerary_new_price_formatted

    @itinerary_new_price_formatted.setter
    def itinerary_new_price_formatted(self, itinerary_new_price_formatted):
        """Sets the itinerary_new_price_formatted of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param itinerary_new_price_formatted: The itinerary_new_price_formatted of this BookingCalculateprice200ResponseAllOfData.
        :type itinerary_new_price_formatted: str
        """

        self._itinerary_new_price_formatted = itinerary_new_price_formatted

    @property
    def itinerary_saving(self):
        """Gets the itinerary_saving of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The itinerary_saving of this BookingCalculateprice200ResponseAllOfData.
        :rtype: int
        """
        return self._itinerary_saving

    @itinerary_saving.setter
    def itinerary_saving(self, itinerary_saving):
        """Sets the itinerary_saving of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param itinerary_saving: The itinerary_saving of this BookingCalculateprice200ResponseAllOfData.
        :type itinerary_saving: int
        """

        self._itinerary_saving = itinerary_saving

    @property
    def itinerary_saving_formatted(self):
        """Gets the itinerary_saving_formatted of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The itinerary_saving_formatted of this BookingCalculateprice200ResponseAllOfData.
        :rtype: str
        """
        return self._itinerary_saving_formatted

    @itinerary_saving_formatted.setter
    def itinerary_saving_formatted(self, itinerary_saving_formatted):
        """Sets the itinerary_saving_formatted of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param itinerary_saving_formatted: The itinerary_saving_formatted of this BookingCalculateprice200ResponseAllOfData.
        :type itinerary_saving_formatted: str
        """

        self._itinerary_saving_formatted = itinerary_saving_formatted

    @property
    def payment_gateway_info(self):
        """Gets the payment_gateway_info of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The payment_gateway_info of this BookingCalculateprice200ResponseAllOfData.
        :rtype: str
        """
        return self._payment_gateway_info

    @payment_gateway_info.setter
    def payment_gateway_info(self, payment_gateway_info):
        """Sets the payment_gateway_info of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param payment_gateway_info: The payment_gateway_info of this BookingCalculateprice200ResponseAllOfData.
        :type payment_gateway_info: str
        """

        self._payment_gateway_info = payment_gateway_info

    @property
    def promo_code(self):
        """Gets the promo_code of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The promo_code of this BookingCalculateprice200ResponseAllOfData.
        :rtype: str
        """
        return self._promo_code

    @promo_code.setter
    def promo_code(self, promo_code):
        """Sets the promo_code of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param promo_code: The promo_code of this BookingCalculateprice200ResponseAllOfData.
        :type promo_code: str
        """

        self._promo_code = promo_code

    @property
    def promo_code_expired(self):
        """Gets the promo_code_expired of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The promo_code_expired of this BookingCalculateprice200ResponseAllOfData.
        :rtype: bool
        """
        return self._promo_code_expired

    @promo_code_expired.setter
    def promo_code_expired(self, promo_code_expired):
        """Sets the promo_code_expired of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param promo_code_expired: The promo_code_expired of this BookingCalculateprice200ResponseAllOfData.
        :type promo_code_expired: bool
        """

        self._promo_code_expired = promo_code_expired

    @property
    def promo_code_valid(self):
        """Gets the promo_code_valid of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The promo_code_valid of this BookingCalculateprice200ResponseAllOfData.
        :rtype: bool
        """
        return self._promo_code_valid

    @promo_code_valid.setter
    def promo_code_valid(self, promo_code_valid):
        """Sets the promo_code_valid of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param promo_code_valid: The promo_code_valid of this BookingCalculateprice200ResponseAllOfData.
        :type promo_code_valid: bool
        """

        self._promo_code_valid = promo_code_valid

    @property
    def rules_applied(self):
        """Gets the rules_applied of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :return: The rules_applied of this BookingCalculateprice200ResponseAllOfData.
        :rtype: List[str]
        """
        return self._rules_applied

    @rules_applied.setter
    def rules_applied(self, rules_applied):
        """Sets the rules_applied of this BookingCalculateprice200ResponseAllOfData.

        ignore (Viator only)

        :param rules_applied: The rules_applied of this BookingCalculateprice200ResponseAllOfData.
        :type rules_applied: List[str]
        """

        self._rules_applied = rules_applied
