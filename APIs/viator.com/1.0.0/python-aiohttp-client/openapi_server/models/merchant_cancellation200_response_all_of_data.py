# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.merchant_cancellation200_response_all_of_data_cancel_items_inner import MerchantCancellation200ResponseAllOfDataCancelItemsInner
from openapi_server import util


class MerchantCancellation200ResponseAllOfData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancel_items: List[MerchantCancellation200ResponseAllOfDataCancelItemsInner]=None, distributor_ref: str=None, itinerary_id: int=None):
        """MerchantCancellation200ResponseAllOfData - a model defined in OpenAPI

        :param cancel_items: The cancel_items of this MerchantCancellation200ResponseAllOfData.
        :param distributor_ref: The distributor_ref of this MerchantCancellation200ResponseAllOfData.
        :param itinerary_id: The itinerary_id of this MerchantCancellation200ResponseAllOfData.
        """
        self.openapi_types = {
            'cancel_items': List[MerchantCancellation200ResponseAllOfDataCancelItemsInner],
            'distributor_ref': str,
            'itinerary_id': int
        }

        self.attribute_map = {
            'cancel_items': 'cancelItems',
            'distributor_ref': 'distributorRef',
            'itinerary_id': 'itineraryId'
        }

        self._cancel_items = cancel_items
        self._distributor_ref = distributor_ref
        self._itinerary_id = itinerary_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantCancellation200ResponseAllOfData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The merchantCancellation_200_response_allOf_data of this MerchantCancellation200ResponseAllOfData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancel_items(self):
        """Gets the cancel_items of this MerchantCancellation200ResponseAllOfData.

        **array** of items to be cancelled

        :return: The cancel_items of this MerchantCancellation200ResponseAllOfData.
        :rtype: List[MerchantCancellation200ResponseAllOfDataCancelItemsInner]
        """
        return self._cancel_items

    @cancel_items.setter
    def cancel_items(self, cancel_items):
        """Sets the cancel_items of this MerchantCancellation200ResponseAllOfData.

        **array** of items to be cancelled

        :param cancel_items: The cancel_items of this MerchantCancellation200ResponseAllOfData.
        :type cancel_items: List[MerchantCancellation200ResponseAllOfDataCancelItemsInner]
        """

        self._cancel_items = cancel_items

    @property
    def distributor_ref(self):
        """Gets the distributor_ref of this MerchantCancellation200ResponseAllOfData.

        **reference code** for the distributor

        :return: The distributor_ref of this MerchantCancellation200ResponseAllOfData.
        :rtype: str
        """
        return self._distributor_ref

    @distributor_ref.setter
    def distributor_ref(self, distributor_ref):
        """Sets the distributor_ref of this MerchantCancellation200ResponseAllOfData.

        **reference code** for the distributor

        :param distributor_ref: The distributor_ref of this MerchantCancellation200ResponseAllOfData.
        :type distributor_ref: str
        """

        self._distributor_ref = distributor_ref

    @property
    def itinerary_id(self):
        """Gets the itinerary_id of this MerchantCancellation200ResponseAllOfData.

        **numeric** identifier for the itinerary

        :return: The itinerary_id of this MerchantCancellation200ResponseAllOfData.
        :rtype: int
        """
        return self._itinerary_id

    @itinerary_id.setter
    def itinerary_id(self, itinerary_id):
        """Sets the itinerary_id of this MerchantCancellation200ResponseAllOfData.

        **numeric** identifier for the itinerary

        :param itinerary_id: The itinerary_id of this MerchantCancellation200ResponseAllOfData.
        :type itinerary_id: int
        """

        self._itinerary_id = itinerary_id
