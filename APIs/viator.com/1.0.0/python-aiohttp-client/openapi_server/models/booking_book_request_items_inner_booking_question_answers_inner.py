# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BookingBookRequestItemsInnerBookingQuestionAnswersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer: str=None, question_id: int=None):
        """BookingBookRequestItemsInnerBookingQuestionAnswersInner - a model defined in OpenAPI

        :param answer: The answer of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.
        :param question_id: The question_id of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.
        """
        self.openapi_types = {
            'answer': str,
            'question_id': int
        }

        self.attribute_map = {
            'answer': 'answer',
            'question_id': 'questionId'
        }

        self._answer = answer
        self._question_id = question_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingBookRequestItemsInnerBookingQuestionAnswersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookingBook_request_items_inner_bookingQuestionAnswers_inner of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer(self):
        """Gets the answer of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.

        **answer** to the question for the `questionId` listed (recommended length for the answer is 500 characters)  **Note**: To specify answers for each traveler, separate the values with a comma as in the per_person_booking_questions request example 

        :return: The answer of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer):
        """Sets the answer of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.

        **answer** to the question for the `questionId` listed (recommended length for the answer is 500 characters)  **Note**: To specify answers for each traveler, separate the values with a comma as in the per_person_booking_questions request example 

        :param answer: The answer of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.
        :type answer: str
        """

        self._answer = answer

    @property
    def question_id(self):
        """Gets the question_id of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.

        **numeric identifier** for the question (**note**: `questionId` can be retrieved from the [/product](#operation/product) service)

        :return: The question_id of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.
        :rtype: int
        """
        return self._question_id

    @question_id.setter
    def question_id(self, question_id):
        """Sets the question_id of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.

        **numeric identifier** for the question (**note**: `questionId` can be retrieved from the [/product](#operation/product) service)

        :param question_id: The question_id of this BookingBookRequestItemsInnerBookingQuestionAnswersInner.
        :type question_id: int
        """

        self._question_id = question_id
