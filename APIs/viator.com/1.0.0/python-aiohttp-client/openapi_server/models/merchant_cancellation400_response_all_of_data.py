# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MerchantCancellation400ResponseAllOfData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancellation_response_description: str=None, cancellation_response_status_code: str=None, distributor_item_ref: str=None, item_id: str=None):
        """MerchantCancellation400ResponseAllOfData - a model defined in OpenAPI

        :param cancellation_response_description: The cancellation_response_description of this MerchantCancellation400ResponseAllOfData.
        :param cancellation_response_status_code: The cancellation_response_status_code of this MerchantCancellation400ResponseAllOfData.
        :param distributor_item_ref: The distributor_item_ref of this MerchantCancellation400ResponseAllOfData.
        :param item_id: The item_id of this MerchantCancellation400ResponseAllOfData.
        """
        self.openapi_types = {
            'cancellation_response_description': str,
            'cancellation_response_status_code': str,
            'distributor_item_ref': str,
            'item_id': str
        }

        self.attribute_map = {
            'cancellation_response_description': 'cancellationResponseDescription',
            'cancellation_response_status_code': 'cancellationResponseStatusCode',
            'distributor_item_ref': 'distributorItemRef',
            'item_id': 'itemId'
        }

        self._cancellation_response_description = cancellation_response_description
        self._cancellation_response_status_code = cancellation_response_status_code
        self._distributor_item_ref = distributor_item_ref
        self._item_id = item_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantCancellation400ResponseAllOfData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The merchantCancellation_400_response_allOf_data of this MerchantCancellation400ResponseAllOfData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancellation_response_description(self):
        """Gets the cancellation_response_description of this MerchantCancellation400ResponseAllOfData.

        **natural-language description** for this response (see response codes table)

        :return: The cancellation_response_description of this MerchantCancellation400ResponseAllOfData.
        :rtype: str
        """
        return self._cancellation_response_description

    @cancellation_response_description.setter
    def cancellation_response_description(self, cancellation_response_description):
        """Sets the cancellation_response_description of this MerchantCancellation400ResponseAllOfData.

        **natural-language description** for this response (see response codes table)

        :param cancellation_response_description: The cancellation_response_description of this MerchantCancellation400ResponseAllOfData.
        :type cancellation_response_description: str
        """

        self._cancellation_response_description = cancellation_response_description

    @property
    def cancellation_response_status_code(self):
        """Gets the cancellation_response_status_code of this MerchantCancellation400ResponseAllOfData.

        **status code** for this response (see response codes table)

        :return: The cancellation_response_status_code of this MerchantCancellation400ResponseAllOfData.
        :rtype: str
        """
        return self._cancellation_response_status_code

    @cancellation_response_status_code.setter
    def cancellation_response_status_code(self, cancellation_response_status_code):
        """Sets the cancellation_response_status_code of this MerchantCancellation400ResponseAllOfData.

        **status code** for this response (see response codes table)

        :param cancellation_response_status_code: The cancellation_response_status_code of this MerchantCancellation400ResponseAllOfData.
        :type cancellation_response_status_code: str
        """

        self._cancellation_response_status_code = cancellation_response_status_code

    @property
    def distributor_item_ref(self):
        """Gets the distributor_item_ref of this MerchantCancellation400ResponseAllOfData.

        **alphanumeric reference code** of the distributor item

        :return: The distributor_item_ref of this MerchantCancellation400ResponseAllOfData.
        :rtype: str
        """
        return self._distributor_item_ref

    @distributor_item_ref.setter
    def distributor_item_ref(self, distributor_item_ref):
        """Sets the distributor_item_ref of this MerchantCancellation400ResponseAllOfData.

        **alphanumeric reference code** of the distributor item

        :param distributor_item_ref: The distributor_item_ref of this MerchantCancellation400ResponseAllOfData.
        :type distributor_item_ref: str
        """

        self._distributor_item_ref = distributor_item_ref

    @property
    def item_id(self):
        """Gets the item_id of this MerchantCancellation400ResponseAllOfData.

        **identifier** for the item to cancel

        :return: The item_id of this MerchantCancellation400ResponseAllOfData.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this MerchantCancellation400ResponseAllOfData.

        **identifier** for the item to cancel

        :param item_id: The item_id of this MerchantCancellation400ResponseAllOfData.
        :type item_id: str
        """

        self._item_id = item_id
