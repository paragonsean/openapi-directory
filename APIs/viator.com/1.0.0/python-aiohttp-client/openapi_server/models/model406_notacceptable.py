# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Model406NOTACCEPTABLE(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, message: str=None, timestamp: str=None, tracking_id: str=None):
        """Model406NOTACCEPTABLE - a model defined in OpenAPI

        :param code: The code of this Model406NOTACCEPTABLE.
        :param message: The message of this Model406NOTACCEPTABLE.
        :param timestamp: The timestamp of this Model406NOTACCEPTABLE.
        :param tracking_id: The tracking_id of this Model406NOTACCEPTABLE.
        """
        self.openapi_types = {
            'code': str,
            'message': str,
            'timestamp': str,
            'tracking_id': str
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'timestamp': 'timestamp',
            'tracking_id': 'trackingId'
        }

        self._code = code
        self._message = message
        self._timestamp = timestamp
        self._tracking_id = tracking_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Model406NOTACCEPTABLE':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The 406_NOT_ACCEPTABLE of this Model406NOTACCEPTABLE.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this Model406NOTACCEPTABLE.


        :return: The code of this Model406NOTACCEPTABLE.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Model406NOTACCEPTABLE.


        :param code: The code of this Model406NOTACCEPTABLE.
        :type code: str
        """
        allowed_values = ["INVALID_HEADER_VALUE"]  # noqa: E501
        if code not in allowed_values:
            raise ValueError(
                "Invalid value for `code` ({0}), must be one of {1}"
                .format(code, allowed_values)
            )

        self._code = code

    @property
    def message(self):
        """Gets the message of this Model406NOTACCEPTABLE.

        Describes which in-header parameter was not acceptable to this system; e.g., 'Invalid value for header: exp-api-key'

        :return: The message of this Model406NOTACCEPTABLE.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Model406NOTACCEPTABLE.

        Describes which in-header parameter was not acceptable to this system; e.g., 'Invalid value for header: exp-api-key'

        :param message: The message of this Model406NOTACCEPTABLE.
        :type message: str
        """

        self._message = message

    @property
    def timestamp(self):
        """Gets the timestamp of this Model406NOTACCEPTABLE.

        Timestamp of the request    * e.g.: `2019-09-17T03:20:45.737043Z` 

        :return: The timestamp of this Model406NOTACCEPTABLE.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this Model406NOTACCEPTABLE.

        Timestamp of the request    * e.g.: `2019-09-17T03:20:45.737043Z` 

        :param timestamp: The timestamp of this Model406NOTACCEPTABLE.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def tracking_id(self):
        """Gets the tracking_id of this Model406NOTACCEPTABLE.

        Tracking identifier for this error response

        :return: The tracking_id of this Model406NOTACCEPTABLE.
        :rtype: str
        """
        return self._tracking_id

    @tracking_id.setter
    def tracking_id(self, tracking_id):
        """Sets the tracking_id of this Model406NOTACCEPTABLE.

        Tracking identifier for this error response

        :param tracking_id: The tracking_id of this Model406NOTACCEPTABLE.
        :type tracking_id: str
        """

        self._tracking_id = tracking_id
