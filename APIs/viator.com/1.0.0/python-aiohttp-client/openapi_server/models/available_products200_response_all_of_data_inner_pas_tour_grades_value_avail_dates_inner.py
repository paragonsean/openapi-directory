# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.available_products200_response_all_of_data_inner_pas_tour_grades_value_avail_dates_inner_price_quote import AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInnerPriceQuote
from openapi_server import util


class AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_list: str=None, price_from: str=None, price_quote: AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInnerPriceQuote=None):
        """AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner - a model defined in OpenAPI

        :param date_list: The date_list of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.
        :param price_from: The price_from of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.
        :param price_quote: The price_quote of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.
        """
        self.openapi_types = {
            'date_list': str,
            'price_from': str,
            'price_quote': AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInnerPriceQuote
        }

        self.attribute_map = {
            'date_list': 'dateList',
            'price_from': 'priceFrom',
            'price_quote': 'priceQuote'
        }

        self._date_list = date_list
        self._price_from = price_from
        self._price_quote = price_quote

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The availableProducts_200_response_allOf_data_inner_pas_tourGrades_value_availDates_inner of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_list(self):
        """Gets the date_list of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.

        **list of dates** on which *this* tour grade is available formatted according to the example

        :return: The date_list of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.
        :rtype: str
        """
        return self._date_list

    @date_list.setter
    def date_list(self, date_list):
        """Sets the date_list of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.

        **list of dates** on which *this* tour grade is available formatted according to the example

        :param date_list: The date_list of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.
        :type date_list: str
        """

        self._date_list = date_list

    @property
    def price_from(self):
        """Gets the price_from of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.

        **lowest sale price** for *this* tour grade formatted according to the example

        :return: The price_from of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.
        :rtype: str
        """
        return self._price_from

    @price_from.setter
    def price_from(self, price_from):
        """Sets the price_from of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.

        **lowest sale price** for *this* tour grade formatted according to the example

        :param price_from: The price_from of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.
        :type price_from: str
        """

        self._price_from = price_from

    @property
    def price_quote(self):
        """Gets the price_quote of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.


        :return: The price_quote of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.
        :rtype: AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInnerPriceQuote
        """
        return self._price_quote

    @price_quote.setter
    def price_quote(self, price_quote):
        """Sets the price_quote of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.


        :param price_quote: The price_quote of this AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInner.
        :type price_quote: AvailableProducts200ResponseAllOfDataInnerPasTourGradesValueAvailDatesInnerPriceQuote
        """

        self._price_quote = price_quote
