# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Product200ResponseAllOfDataProductPhotosInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, caption: str=None, photo_url: str=None, supplier: str=None):
        """Product200ResponseAllOfDataProductPhotosInner - a model defined in OpenAPI

        :param caption: The caption of this Product200ResponseAllOfDataProductPhotosInner.
        :param photo_url: The photo_url of this Product200ResponseAllOfDataProductPhotosInner.
        :param supplier: The supplier of this Product200ResponseAllOfDataProductPhotosInner.
        """
        self.openapi_types = {
            'caption': str,
            'photo_url': str,
            'supplier': str
        }

        self.attribute_map = {
            'caption': 'caption',
            'photo_url': 'photoURL',
            'supplier': 'supplier'
        }

        self._caption = caption
        self._photo_url = photo_url
        self._supplier = supplier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Product200ResponseAllOfDataProductPhotosInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The product_200_response_allOf_data_productPhotos_inner of this Product200ResponseAllOfDataProductPhotosInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def caption(self):
        """Gets the caption of this Product200ResponseAllOfDataProductPhotosInner.

        **natural-language caption** for *this* photo

        :return: The caption of this Product200ResponseAllOfDataProductPhotosInner.
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this Product200ResponseAllOfDataProductPhotosInner.

        **natural-language caption** for *this* photo

        :param caption: The caption of this Product200ResponseAllOfDataProductPhotosInner.
        :type caption: str
        """

        self._caption = caption

    @property
    def photo_url(self):
        """Gets the photo_url of this Product200ResponseAllOfDataProductPhotosInner.

        **URL** of *this* photo

        :return: The photo_url of this Product200ResponseAllOfDataProductPhotosInner.
        :rtype: str
        """
        return self._photo_url

    @photo_url.setter
    def photo_url(self, photo_url):
        """Sets the photo_url of this Product200ResponseAllOfDataProductPhotosInner.

        **URL** of *this* photo

        :param photo_url: The photo_url of this Product200ResponseAllOfDataProductPhotosInner.
        :type photo_url: str
        """

        self._photo_url = photo_url

    @property
    def supplier(self):
        """Gets the supplier of this Product200ResponseAllOfDataProductPhotosInner.

        **natural-language name** of the supplier of *this* photo

        :return: The supplier of this Product200ResponseAllOfDataProductPhotosInner.
        :rtype: str
        """
        return self._supplier

    @supplier.setter
    def supplier(self, supplier):
        """Sets the supplier of this Product200ResponseAllOfDataProductPhotosInner.

        **natural-language name** of the supplier of *this* photo

        :param supplier: The supplier of this Product200ResponseAllOfDataProductPhotosInner.
        :type supplier: str
        """

        self._supplier = supplier
