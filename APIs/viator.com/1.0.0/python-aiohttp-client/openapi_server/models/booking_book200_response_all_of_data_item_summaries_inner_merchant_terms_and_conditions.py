# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.booking_book200_response_all_of_data_item_summaries_inner_merchant_terms_and_conditions_cancellation_from_tour_date_inner import BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner
from openapi_server import util


class BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_refundable: str=None, cancellation_from_tour_date: List[BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner]=None, terms_and_conditions: str=None):
        """BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions - a model defined in OpenAPI

        :param amount_refundable: The amount_refundable of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.
        :param cancellation_from_tour_date: The cancellation_from_tour_date of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.
        :param terms_and_conditions: The terms_and_conditions of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.
        """
        self.openapi_types = {
            'amount_refundable': str,
            'cancellation_from_tour_date': List[BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner],
            'terms_and_conditions': str
        }

        self.attribute_map = {
            'amount_refundable': 'amountRefundable',
            'cancellation_from_tour_date': 'cancellationFromTourDate',
            'terms_and_conditions': 'termsAndConditions'
        }

        self._amount_refundable = amount_refundable
        self._cancellation_from_tour_date = cancellation_from_tour_date
        self._terms_and_conditions = terms_and_conditions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookingBook_200_response_allOf_data_itemSummaries_inner_merchantTermsAndConditions of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_refundable(self):
        """Gets the amount_refundable of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.

        **currency-formatted** amount that will be refunded if the cancellation is processed now.

        :return: The amount_refundable of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.
        :rtype: str
        """
        return self._amount_refundable

    @amount_refundable.setter
    def amount_refundable(self, amount_refundable):
        """Sets the amount_refundable of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.

        **currency-formatted** amount that will be refunded if the cancellation is processed now.

        :param amount_refundable: The amount_refundable of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.
        :type amount_refundable: str
        """

        self._amount_refundable = amount_refundable

    @property
    def cancellation_from_tour_date(self):
        """Gets the cancellation_from_tour_date of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.

        **array** of cancellation policy objects

        :return: The cancellation_from_tour_date of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.
        :rtype: List[BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner]
        """
        return self._cancellation_from_tour_date

    @cancellation_from_tour_date.setter
    def cancellation_from_tour_date(self, cancellation_from_tour_date):
        """Sets the cancellation_from_tour_date of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.

        **array** of cancellation policy objects

        :param cancellation_from_tour_date: The cancellation_from_tour_date of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.
        :type cancellation_from_tour_date: List[BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditionsCancellationFromTourDateInner]
        """

        self._cancellation_from_tour_date = cancellation_from_tour_date

    @property
    def terms_and_conditions(self):
        """Gets the terms_and_conditions of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.

        **natural-language description** of the terms and conditions for *this* product

        :return: The terms_and_conditions of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.
        :rtype: str
        """
        return self._terms_and_conditions

    @terms_and_conditions.setter
    def terms_and_conditions(self, terms_and_conditions):
        """Sets the terms_and_conditions of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.

        **natural-language description** of the terms and conditions for *this* product

        :param terms_and_conditions: The terms_and_conditions of this BookingBook200ResponseAllOfDataItemSummariesInnerMerchantTermsAndConditions.
        :type terms_and_conditions: str
        """

        self._terms_and_conditions = terms_and_conditions
