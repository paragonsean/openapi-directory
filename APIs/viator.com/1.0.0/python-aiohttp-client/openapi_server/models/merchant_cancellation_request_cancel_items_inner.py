# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MerchantCancellationRequestCancelItemsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancel_code: str=None, cancel_description: str=None, distributor_item_ref: str=None, item_id: int=None):
        """MerchantCancellationRequestCancelItemsInner - a model defined in OpenAPI

        :param cancel_code: The cancel_code of this MerchantCancellationRequestCancelItemsInner.
        :param cancel_description: The cancel_description of this MerchantCancellationRequestCancelItemsInner.
        :param distributor_item_ref: The distributor_item_ref of this MerchantCancellationRequestCancelItemsInner.
        :param item_id: The item_id of this MerchantCancellationRequestCancelItemsInner.
        """
        self.openapi_types = {
            'cancel_code': str,
            'cancel_description': str,
            'distributor_item_ref': str,
            'item_id': int
        }

        self.attribute_map = {
            'cancel_code': 'cancelCode',
            'cancel_description': 'cancelDescription',
            'distributor_item_ref': 'distributorItemRef',
            'item_id': 'itemId'
        }

        self._cancel_code = cancel_code
        self._cancel_description = cancel_description
        self._distributor_item_ref = distributor_item_ref
        self._item_id = item_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantCancellationRequestCancelItemsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The merchantCancellation_request_cancelItems_inner of this MerchantCancellationRequestCancelItemsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancel_code(self):
        """Gets the cancel_code of this MerchantCancellationRequestCancelItemsInner.

        **cancellation code** that describes the reason for the cancellation - see: [Suggested cancellation codes](#suggested-cancellation-codes) 

        :return: The cancel_code of this MerchantCancellationRequestCancelItemsInner.
        :rtype: str
        """
        return self._cancel_code

    @cancel_code.setter
    def cancel_code(self, cancel_code):
        """Sets the cancel_code of this MerchantCancellationRequestCancelItemsInner.

        **cancellation code** that describes the reason for the cancellation - see: [Suggested cancellation codes](#suggested-cancellation-codes) 

        :param cancel_code: The cancel_code of this MerchantCancellationRequestCancelItemsInner.
        :type cancel_code: str
        """

        self._cancel_code = cancel_code

    @property
    def cancel_description(self):
        """Gets the cancel_description of this MerchantCancellationRequestCancelItemsInner.

        **natural-language description** of the reason for cancellation (a reason must be provided if `cancelCode` is `62` or `66`)

        :return: The cancel_description of this MerchantCancellationRequestCancelItemsInner.
        :rtype: str
        """
        return self._cancel_description

    @cancel_description.setter
    def cancel_description(self, cancel_description):
        """Sets the cancel_description of this MerchantCancellationRequestCancelItemsInner.

        **natural-language description** of the reason for cancellation (a reason must be provided if `cancelCode` is `62` or `66`)

        :param cancel_description: The cancel_description of this MerchantCancellationRequestCancelItemsInner.
        :type cancel_description: str
        """

        self._cancel_description = cancel_description

    @property
    def distributor_item_ref(self):
        """Gets the distributor_item_ref of this MerchantCancellationRequestCancelItemsInner.

        **alphanumeric reference code** of the distributor item

        :return: The distributor_item_ref of this MerchantCancellationRequestCancelItemsInner.
        :rtype: str
        """
        return self._distributor_item_ref

    @distributor_item_ref.setter
    def distributor_item_ref(self, distributor_item_ref):
        """Sets the distributor_item_ref of this MerchantCancellationRequestCancelItemsInner.

        **alphanumeric reference code** of the distributor item

        :param distributor_item_ref: The distributor_item_ref of this MerchantCancellationRequestCancelItemsInner.
        :type distributor_item_ref: str
        """

        self._distributor_item_ref = distributor_item_ref

    @property
    def item_id(self):
        """Gets the item_id of this MerchantCancellationRequestCancelItemsInner.

        **numeric identifier** of item to cancel in itinerary

        :return: The item_id of this MerchantCancellationRequestCancelItemsInner.
        :rtype: int
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this MerchantCancellationRequestCancelItemsInner.

        **numeric identifier** of item to cancel in itinerary

        :param item_id: The item_id of this MerchantCancellationRequestCancelItemsInner.
        :type item_id: int
        """

        self._item_id = item_id
