# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AvailableProductsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None, end_date: str=None, num_adults: int=None, product_codes: List[str]=None, start_date: str=None):
        """AvailableProductsRequest - a model defined in OpenAPI

        :param currency_code: The currency_code of this AvailableProductsRequest.
        :param end_date: The end_date of this AvailableProductsRequest.
        :param num_adults: The num_adults of this AvailableProductsRequest.
        :param product_codes: The product_codes of this AvailableProductsRequest.
        :param start_date: The start_date of this AvailableProductsRequest.
        """
        self.openapi_types = {
            'currency_code': str,
            'end_date': str,
            'num_adults': int,
            'product_codes': List[str],
            'start_date': str
        }

        self.attribute_map = {
            'currency_code': 'currencyCode',
            'end_date': 'endDate',
            'num_adults': 'numAdults',
            'product_codes': 'productCodes',
            'start_date': 'startDate'
        }

        self._currency_code = currency_code
        self._end_date = end_date
        self._num_adults = num_adults
        self._product_codes = product_codes
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailableProductsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The availableProducts_request of this AvailableProductsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this AvailableProductsRequest.

        **currency** in which to display product pricing - default: `'USD'` 

        :return: The currency_code of this AvailableProductsRequest.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this AvailableProductsRequest.

        **currency** in which to display product pricing - default: `'USD'` 

        :param currency_code: The currency_code of this AvailableProductsRequest.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def end_date(self):
        """Gets the end_date of this AvailableProductsRequest.

        **end date** of the date range to search within (must be in the future)

        :return: The end_date of this AvailableProductsRequest.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this AvailableProductsRequest.

        **end date** of the date range to search within (must be in the future)

        :param end_date: The end_date of this AvailableProductsRequest.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def num_adults(self):
        """Gets the num_adults of this AvailableProductsRequest.

        **number of adult travelers** who wish to participate - default: `1` 

        :return: The num_adults of this AvailableProductsRequest.
        :rtype: int
        """
        return self._num_adults

    @num_adults.setter
    def num_adults(self, num_adults):
        """Sets the num_adults of this AvailableProductsRequest.

        **number of adult travelers** who wish to participate - default: `1` 

        :param num_adults: The num_adults of this AvailableProductsRequest.
        :type num_adults: int
        """

        self._num_adults = num_adults

    @property
    def product_codes(self):
        """Gets the product_codes of this AvailableProductsRequest.

        **array of unique alphanumeric product identifiers** specifying which products to find the availability of - maximum: `50` 

        :return: The product_codes of this AvailableProductsRequest.
        :rtype: List[str]
        """
        return self._product_codes

    @product_codes.setter
    def product_codes(self, product_codes):
        """Sets the product_codes of this AvailableProductsRequest.

        **array of unique alphanumeric product identifiers** specifying which products to find the availability of - maximum: `50` 

        :param product_codes: The product_codes of this AvailableProductsRequest.
        :type product_codes: List[str]
        """

        self._product_codes = product_codes

    @property
    def start_date(self):
        """Gets the start_date of this AvailableProductsRequest.

        **start date** of the date range to search within (must be in the future)

        :return: The start_date of this AvailableProductsRequest.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this AvailableProductsRequest.

        **start date** of the date range to search within (must be in the future)

        :param start_date: The start_date of this AvailableProductsRequest.
        :type start_date: str
        """

        self._start_date = start_date
