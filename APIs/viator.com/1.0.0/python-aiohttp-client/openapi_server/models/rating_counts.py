# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RatingCounts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _1: float=None, _2: float=None, _3: float=None, _4: float=None, _5: float=None):
        """RatingCounts - a model defined in OpenAPI

        :param _1: The _1 of this RatingCounts.
        :param _2: The _2 of this RatingCounts.
        :param _3: The _3 of this RatingCounts.
        :param _4: The _4 of this RatingCounts.
        :param _5: The _5 of this RatingCounts.
        """
        self.openapi_types = {
            '_1': float,
            '_2': float,
            '_3': float,
            '_4': float,
            '_5': float
        }

        self.attribute_map = {
            '_1': '1',
            '_2': '2',
            '_3': '3',
            '_4': '4',
            '_5': '5'
        }

        self.__1 = _1
        self.__2 = _2
        self.__3 = _3
        self.__4 = _4
        self.__5 = _5

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RatingCounts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ratingCounts of this RatingCounts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _1(self):
        """Gets the _1 of this RatingCounts.

        Number of reviews with a one star rating

        :return: The _1 of this RatingCounts.
        :rtype: float
        """
        return self.__1

    @_1.setter
    def _1(self, _1):
        """Sets the _1 of this RatingCounts.

        Number of reviews with a one star rating

        :param _1: The _1 of this RatingCounts.
        :type _1: float
        """

        self.__1 = _1

    @property
    def _2(self):
        """Gets the _2 of this RatingCounts.

        Number of reviews with a two star rating

        :return: The _2 of this RatingCounts.
        :rtype: float
        """
        return self.__2

    @_2.setter
    def _2(self, _2):
        """Sets the _2 of this RatingCounts.

        Number of reviews with a two star rating

        :param _2: The _2 of this RatingCounts.
        :type _2: float
        """

        self.__2 = _2

    @property
    def _3(self):
        """Gets the _3 of this RatingCounts.

        Number of reviews with a three star rating

        :return: The _3 of this RatingCounts.
        :rtype: float
        """
        return self.__3

    @_3.setter
    def _3(self, _3):
        """Sets the _3 of this RatingCounts.

        Number of reviews with a three star rating

        :param _3: The _3 of this RatingCounts.
        :type _3: float
        """

        self.__3 = _3

    @property
    def _4(self):
        """Gets the _4 of this RatingCounts.

        Number of reviews with a four star rating

        :return: The _4 of this RatingCounts.
        :rtype: float
        """
        return self.__4

    @_4.setter
    def _4(self, _4):
        """Sets the _4 of this RatingCounts.

        Number of reviews with a four star rating

        :param _4: The _4 of this RatingCounts.
        :type _4: float
        """

        self.__4 = _4

    @property
    def _5(self):
        """Gets the _5 of this RatingCounts.

        Number of reviews with a five star rating

        :return: The _5 of this RatingCounts.
        :rtype: float
        """
        return self.__5

    @_5.setter
    def _5(self, _5):
        """Sets the _5 of this RatingCounts.

        Number of reviews with a five star rating

        :param _5: The _5 of this RatingCounts.
        :type _5: float
        """

        self.__5 = _5
