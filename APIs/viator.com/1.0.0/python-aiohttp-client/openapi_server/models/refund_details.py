# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RefundDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None, item_price: float=None, refund_amount: float=None, refund_percentage: float=None):
        """RefundDetails - a model defined in OpenAPI

        :param currency_code: The currency_code of this RefundDetails.
        :param item_price: The item_price of this RefundDetails.
        :param refund_amount: The refund_amount of this RefundDetails.
        :param refund_percentage: The refund_percentage of this RefundDetails.
        """
        self.openapi_types = {
            'currency_code': str,
            'item_price': float,
            'refund_amount': float,
            'refund_percentage': float
        }

        self.attribute_map = {
            'currency_code': 'currencyCode',
            'item_price': 'itemPrice',
            'refund_amount': 'refundAmount',
            'refund_percentage': 'refundPercentage'
        }

        self._currency_code = currency_code
        self._item_price = item_price
        self._refund_amount = refund_amount
        self._refund_percentage = refund_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RefundDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RefundDetails of this RefundDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this RefundDetails.

        Three-letter code indicating the currency in which `itemPrice` and `refundAmount` are displayed

        :return: The currency_code of this RefundDetails.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this RefundDetails.

        Three-letter code indicating the currency in which `itemPrice` and `refundAmount` are displayed

        :param currency_code: The currency_code of this RefundDetails.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def item_price(self):
        """Gets the item_price of this RefundDetails.

        The merchant net price at the time this product was booked

        :return: The item_price of this RefundDetails.
        :rtype: float
        """
        return self._item_price

    @item_price.setter
    def item_price(self, item_price):
        """Sets the item_price of this RefundDetails.

        The merchant net price at the time this product was booked

        :param item_price: The item_price of this RefundDetails.
        :type item_price: float
        """

        self._item_price = item_price

    @property
    def refund_amount(self):
        """Gets the refund_amount of this RefundDetails.

        Numeric currency amount that will be refunded if this booking is cancelled now

        :return: The refund_amount of this RefundDetails.
        :rtype: float
        """
        return self._refund_amount

    @refund_amount.setter
    def refund_amount(self, refund_amount):
        """Sets the refund_amount of this RefundDetails.

        Numeric currency amount that will be refunded if this booking is cancelled now

        :param refund_amount: The refund_amount of this RefundDetails.
        :type refund_amount: float
        """

        self._refund_amount = refund_amount

    @property
    def refund_percentage(self):
        """Gets the refund_percentage of this RefundDetails.

        Percentage of the item price that will be refunded if this booking is cancelled now

        :return: The refund_percentage of this RefundDetails.
        :rtype: float
        """
        return self._refund_percentage

    @refund_percentage.setter
    def refund_percentage(self, refund_percentage):
        """Sets the refund_percentage of this RefundDetails.

        Percentage of the item price that will be refunded if this booking is cancelled now

        :param refund_percentage: The refund_percentage of this RefundDetails.
        :type refund_percentage: float
        """

        self._refund_percentage = refund_percentage
