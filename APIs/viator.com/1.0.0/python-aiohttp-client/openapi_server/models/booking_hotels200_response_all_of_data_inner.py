# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BookingHotels200ResponseAllOfDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, brand: str=None, city: str=None, destination_id: int=None, hotel_string: str=None, id: str=None, latitude: float=None, longitude: float=None, name: str=None, notes: str=None, phone: str=None, postcode: str=None, product_codes: List[str]=None, sort_order: int=None):
        """BookingHotels200ResponseAllOfDataInner - a model defined in OpenAPI

        :param address: The address of this BookingHotels200ResponseAllOfDataInner.
        :param brand: The brand of this BookingHotels200ResponseAllOfDataInner.
        :param city: The city of this BookingHotels200ResponseAllOfDataInner.
        :param destination_id: The destination_id of this BookingHotels200ResponseAllOfDataInner.
        :param hotel_string: The hotel_string of this BookingHotels200ResponseAllOfDataInner.
        :param id: The id of this BookingHotels200ResponseAllOfDataInner.
        :param latitude: The latitude of this BookingHotels200ResponseAllOfDataInner.
        :param longitude: The longitude of this BookingHotels200ResponseAllOfDataInner.
        :param name: The name of this BookingHotels200ResponseAllOfDataInner.
        :param notes: The notes of this BookingHotels200ResponseAllOfDataInner.
        :param phone: The phone of this BookingHotels200ResponseAllOfDataInner.
        :param postcode: The postcode of this BookingHotels200ResponseAllOfDataInner.
        :param product_codes: The product_codes of this BookingHotels200ResponseAllOfDataInner.
        :param sort_order: The sort_order of this BookingHotels200ResponseAllOfDataInner.
        """
        self.openapi_types = {
            'address': str,
            'brand': str,
            'city': str,
            'destination_id': int,
            'hotel_string': str,
            'id': str,
            'latitude': float,
            'longitude': float,
            'name': str,
            'notes': str,
            'phone': str,
            'postcode': str,
            'product_codes': List[str],
            'sort_order': int
        }

        self.attribute_map = {
            'address': 'address',
            'brand': 'brand',
            'city': 'city',
            'destination_id': 'destinationId',
            'hotel_string': 'hotelString',
            'id': 'id',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'name': 'name',
            'notes': 'notes',
            'phone': 'phone',
            'postcode': 'postcode',
            'product_codes': 'productCodes',
            'sort_order': 'sortOrder'
        }

        self._address = address
        self._brand = brand
        self._city = city
        self._destination_id = destination_id
        self._hotel_string = hotel_string
        self._id = id
        self._latitude = latitude
        self._longitude = longitude
        self._name = name
        self._notes = notes
        self._phone = phone
        self._postcode = postcode
        self._product_codes = product_codes
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingHotels200ResponseAllOfDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookingHotels_200_response_allOf_data_inner of this BookingHotels200ResponseAllOfDataInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this BookingHotels200ResponseAllOfDataInner.

        **natural-language address** of hotel pick-up point

        :return: The address of this BookingHotels200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this BookingHotels200ResponseAllOfDataInner.

        **natural-language address** of hotel pick-up point

        :param address: The address of this BookingHotels200ResponseAllOfDataInner.
        :type address: str
        """

        self._address = address

    @property
    def brand(self):
        """Gets the brand of this BookingHotels200ResponseAllOfDataInner.

        ignore (Viator only)

        :return: The brand of this BookingHotels200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this BookingHotels200ResponseAllOfDataInner.

        ignore (Viator only)

        :param brand: The brand of this BookingHotels200ResponseAllOfDataInner.
        :type brand: str
        """

        self._brand = brand

    @property
    def city(self):
        """Gets the city of this BookingHotels200ResponseAllOfDataInner.

        **natural-language name** of the destination that *this* hotel pick-up point pertains to

        :return: The city of this BookingHotels200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this BookingHotels200ResponseAllOfDataInner.

        **natural-language name** of the destination that *this* hotel pick-up point pertains to

        :param city: The city of this BookingHotels200ResponseAllOfDataInner.
        :type city: str
        """

        self._city = city

    @property
    def destination_id(self):
        """Gets the destination_id of this BookingHotels200ResponseAllOfDataInner.

        **unique numeric identifer** of the destination that *this* hotel pick-up point pertains to

        :return: The destination_id of this BookingHotels200ResponseAllOfDataInner.
        :rtype: int
        """
        return self._destination_id

    @destination_id.setter
    def destination_id(self, destination_id):
        """Sets the destination_id of this BookingHotels200ResponseAllOfDataInner.

        **unique numeric identifer** of the destination that *this* hotel pick-up point pertains to

        :param destination_id: The destination_id of this BookingHotels200ResponseAllOfDataInner.
        :type destination_id: int
        """

        self._destination_id = destination_id

    @property
    def hotel_string(self):
        """Gets the hotel_string of this BookingHotels200ResponseAllOfDataInner.

        ignore (Viator only)

        :return: The hotel_string of this BookingHotels200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._hotel_string

    @hotel_string.setter
    def hotel_string(self, hotel_string):
        """Sets the hotel_string of this BookingHotels200ResponseAllOfDataInner.

        ignore (Viator only)

        :param hotel_string: The hotel_string of this BookingHotels200ResponseAllOfDataInner.
        :type hotel_string: str
        """

        self._hotel_string = hotel_string

    @property
    def id(self):
        """Gets the id of this BookingHotels200ResponseAllOfDataInner.

        **identifier** of *this* hotel pick-up point`

        :return: The id of this BookingHotels200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BookingHotels200ResponseAllOfDataInner.

        **identifier** of *this* hotel pick-up point`

        :param id: The id of this BookingHotels200ResponseAllOfDataInner.
        :type id: str
        """

        self._id = id

    @property
    def latitude(self):
        """Gets the latitude of this BookingHotels200ResponseAllOfDataInner.

        **numeric latitude component** of *this* hotel pick-up point's geolocation

        :return: The latitude of this BookingHotels200ResponseAllOfDataInner.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this BookingHotels200ResponseAllOfDataInner.

        **numeric latitude component** of *this* hotel pick-up point's geolocation

        :param latitude: The latitude of this BookingHotels200ResponseAllOfDataInner.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this BookingHotels200ResponseAllOfDataInner.

        **numeric longitude component** of *this* hotel pick-up point's geolocation

        :return: The longitude of this BookingHotels200ResponseAllOfDataInner.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this BookingHotels200ResponseAllOfDataInner.

        **numeric longitude component** of *this* hotel pick-up point's geolocation

        :param longitude: The longitude of this BookingHotels200ResponseAllOfDataInner.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def name(self):
        """Gets the name of this BookingHotels200ResponseAllOfDataInner.

        **natural-language name** of hotel pick-up point

        :return: The name of this BookingHotels200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BookingHotels200ResponseAllOfDataInner.

        **natural-language name** of hotel pick-up point

        :param name: The name of this BookingHotels200ResponseAllOfDataInner.
        :type name: str
        """

        self._name = name

    @property
    def notes(self):
        """Gets the notes of this BookingHotels200ResponseAllOfDataInner.

        **natural-language notes** about *this* hotel pick-up point

        :return: The notes of this BookingHotels200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this BookingHotels200ResponseAllOfDataInner.

        **natural-language notes** about *this* hotel pick-up point

        :param notes: The notes of this BookingHotels200ResponseAllOfDataInner.
        :type notes: str
        """

        self._notes = notes

    @property
    def phone(self):
        """Gets the phone of this BookingHotels200ResponseAllOfDataInner.

        **phone number** of *this* hotel pick-up point

        :return: The phone of this BookingHotels200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this BookingHotels200ResponseAllOfDataInner.

        **phone number** of *this* hotel pick-up point

        :param phone: The phone of this BookingHotels200ResponseAllOfDataInner.
        :type phone: str
        """

        self._phone = phone

    @property
    def postcode(self):
        """Gets the postcode of this BookingHotels200ResponseAllOfDataInner.

        **post code** of *this* hotel pick-up point

        :return: The postcode of this BookingHotels200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this BookingHotels200ResponseAllOfDataInner.

        **post code** of *this* hotel pick-up point

        :param postcode: The postcode of this BookingHotels200ResponseAllOfDataInner.
        :type postcode: str
        """

        self._postcode = postcode

    @property
    def product_codes(self):
        """Gets the product_codes of this BookingHotels200ResponseAllOfDataInner.

        **array** of product codes pertaining to *this* hotel pick-up point

        :return: The product_codes of this BookingHotels200ResponseAllOfDataInner.
        :rtype: List[str]
        """
        return self._product_codes

    @product_codes.setter
    def product_codes(self, product_codes):
        """Sets the product_codes of this BookingHotels200ResponseAllOfDataInner.

        **array** of product codes pertaining to *this* hotel pick-up point

        :param product_codes: The product_codes of this BookingHotels200ResponseAllOfDataInner.
        :type product_codes: List[str]
        """

        self._product_codes = product_codes

    @property
    def sort_order(self):
        """Gets the sort_order of this BookingHotels200ResponseAllOfDataInner.

        **sort-order** of *this* hotel pick-up point

        :return: The sort_order of this BookingHotels200ResponseAllOfDataInner.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this BookingHotels200ResponseAllOfDataInner.

        **sort-order** of *this* hotel pick-up point

        :param sort_order: The sort_order of this BookingHotels200ResponseAllOfDataInner.
        :type sort_order: int
        """

        self._sort_order = sort_order
