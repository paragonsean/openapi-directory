# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BookingAvailabilityTourgradesRequestAgeBandsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, band_id: int=None, count: int=None):
        """BookingAvailabilityTourgradesRequestAgeBandsInner - a model defined in OpenAPI

        :param band_id: The band_id of this BookingAvailabilityTourgradesRequestAgeBandsInner.
        :param count: The count of this BookingAvailabilityTourgradesRequestAgeBandsInner.
        """
        self.openapi_types = {
            'band_id': int,
            'count': int
        }

        self.attribute_map = {
            'band_id': 'bandId',
            'count': 'count'
        }

        self._band_id = band_id
        self._count = count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingAvailabilityTourgradesRequestAgeBandsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookingAvailabilityTourgrades_request_ageBands_inner of this BookingAvailabilityTourgradesRequestAgeBandsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def band_id(self):
        """Gets the band_id of this BookingAvailabilityTourgradesRequestAgeBandsInner.

        **unique numeric identifier** for the age band - See: [Working with age bands](#section/Appendices/Working-with-age-bands) 

        :return: The band_id of this BookingAvailabilityTourgradesRequestAgeBandsInner.
        :rtype: int
        """
        return self._band_id

    @band_id.setter
    def band_id(self, band_id):
        """Sets the band_id of this BookingAvailabilityTourgradesRequestAgeBandsInner.

        **unique numeric identifier** for the age band - See: [Working with age bands](#section/Appendices/Working-with-age-bands) 

        :param band_id: The band_id of this BookingAvailabilityTourgradesRequestAgeBandsInner.
        :type band_id: int
        """

        self._band_id = band_id

    @property
    def count(self):
        """Gets the count of this BookingAvailabilityTourgradesRequestAgeBandsInner.

        **numeric count** of number of travelers in *this* age band

        :return: The count of this BookingAvailabilityTourgradesRequestAgeBandsInner.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this BookingAvailabilityTourgradesRequestAgeBandsInner.

        **numeric count** of number of travelers in *this* age band

        :param count: The count of this BookingAvailabilityTourgradesRequestAgeBandsInner.
        :type count: int
        """

        self._count = count
