# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.booking_pricingmatrix200_response_all_of_data_inner_age_band_prices_inner import BookingPricingmatrix200ResponseAllOfDataInnerAgeBandPricesInner
from openapi_server import util


class BookingPricingmatrix200ResponseAllOfDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, age_band_prices: List[BookingPricingmatrix200ResponseAllOfDataInnerAgeBandPricesInner]=None, booking_date: str=None, pricing_unit: str=None, sort_order: int=None):
        """BookingPricingmatrix200ResponseAllOfDataInner - a model defined in OpenAPI

        :param age_band_prices: The age_band_prices of this BookingPricingmatrix200ResponseAllOfDataInner.
        :param booking_date: The booking_date of this BookingPricingmatrix200ResponseAllOfDataInner.
        :param pricing_unit: The pricing_unit of this BookingPricingmatrix200ResponseAllOfDataInner.
        :param sort_order: The sort_order of this BookingPricingmatrix200ResponseAllOfDataInner.
        """
        self.openapi_types = {
            'age_band_prices': List[BookingPricingmatrix200ResponseAllOfDataInnerAgeBandPricesInner],
            'booking_date': str,
            'pricing_unit': str,
            'sort_order': int
        }

        self.attribute_map = {
            'age_band_prices': 'ageBandPrices',
            'booking_date': 'bookingDate',
            'pricing_unit': 'pricingUnit',
            'sort_order': 'sortOrder'
        }

        self._age_band_prices = age_band_prices
        self._booking_date = booking_date
        self._pricing_unit = pricing_unit
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingPricingmatrix200ResponseAllOfDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookingPricingmatrix_200_response_allOf_data_inner of this BookingPricingmatrix200ResponseAllOfDataInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def age_band_prices(self):
        """Gets the age_band_prices of this BookingPricingmatrix200ResponseAllOfDataInner.

        **array** of age band pricing objects

        :return: The age_band_prices of this BookingPricingmatrix200ResponseAllOfDataInner.
        :rtype: List[BookingPricingmatrix200ResponseAllOfDataInnerAgeBandPricesInner]
        """
        return self._age_band_prices

    @age_band_prices.setter
    def age_band_prices(self, age_band_prices):
        """Sets the age_band_prices of this BookingPricingmatrix200ResponseAllOfDataInner.

        **array** of age band pricing objects

        :param age_band_prices: The age_band_prices of this BookingPricingmatrix200ResponseAllOfDataInner.
        :type age_band_prices: List[BookingPricingmatrix200ResponseAllOfDataInnerAgeBandPricesInner]
        """

        self._age_band_prices = age_band_prices

    @property
    def booking_date(self):
        """Gets the booking_date of this BookingPricingmatrix200ResponseAllOfDataInner.

        **date** for which to retrieve pricing information

        :return: The booking_date of this BookingPricingmatrix200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._booking_date

    @booking_date.setter
    def booking_date(self, booking_date):
        """Sets the booking_date of this BookingPricingmatrix200ResponseAllOfDataInner.

        **date** for which to retrieve pricing information

        :param booking_date: The booking_date of this BookingPricingmatrix200ResponseAllOfDataInner.
        :type booking_date: str
        """

        self._booking_date = booking_date

    @property
    def pricing_unit(self):
        """Gets the pricing_unit of this BookingPricingmatrix200ResponseAllOfDataInner.

        **unit** in which pricing is calculated (currently, only 'per person' is supported) - see [Understanding the pricingUnit field](#section/Using-the-API/Understanding-the-pricingUnit-field) for more information 

        :return: The pricing_unit of this BookingPricingmatrix200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._pricing_unit

    @pricing_unit.setter
    def pricing_unit(self, pricing_unit):
        """Sets the pricing_unit of this BookingPricingmatrix200ResponseAllOfDataInner.

        **unit** in which pricing is calculated (currently, only 'per person' is supported) - see [Understanding the pricingUnit field](#section/Using-the-API/Understanding-the-pricingUnit-field) for more information 

        :param pricing_unit: The pricing_unit of this BookingPricingmatrix200ResponseAllOfDataInner.
        :type pricing_unit: str
        """

        self._pricing_unit = pricing_unit

    @property
    def sort_order(self):
        """Gets the sort_order of this BookingPricingmatrix200ResponseAllOfDataInner.

        **sort order** for *this* response object

        :return: The sort_order of this BookingPricingmatrix200ResponseAllOfDataInner.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this BookingPricingmatrix200ResponseAllOfDataInner.

        **sort order** for *this* response object

        :param sort_order: The sort_order of this BookingPricingmatrix200ResponseAllOfDataInner.
        :type sort_order: int
        """

        self._sort_order = sort_order
