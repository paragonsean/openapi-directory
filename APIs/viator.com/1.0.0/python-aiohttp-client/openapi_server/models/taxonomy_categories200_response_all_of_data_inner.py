# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.taxonomy_categories200_response_all_of_data_inner_subcategories_inner import TaxonomyCategories200ResponseAllOfDataInnerSubcategoriesInner
from openapi_server import util


class TaxonomyCategories200ResponseAllOfDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_name: str=None, group_url_name: str=None, id: int=None, product_count: int=None, subcategories: List[TaxonomyCategories200ResponseAllOfDataInnerSubcategoriesInner]=None, thumbnail_url: str=None):
        """TaxonomyCategories200ResponseAllOfDataInner - a model defined in OpenAPI

        :param group_name: The group_name of this TaxonomyCategories200ResponseAllOfDataInner.
        :param group_url_name: The group_url_name of this TaxonomyCategories200ResponseAllOfDataInner.
        :param id: The id of this TaxonomyCategories200ResponseAllOfDataInner.
        :param product_count: The product_count of this TaxonomyCategories200ResponseAllOfDataInner.
        :param subcategories: The subcategories of this TaxonomyCategories200ResponseAllOfDataInner.
        :param thumbnail_url: The thumbnail_url of this TaxonomyCategories200ResponseAllOfDataInner.
        """
        self.openapi_types = {
            'group_name': str,
            'group_url_name': str,
            'id': int,
            'product_count': int,
            'subcategories': List[TaxonomyCategories200ResponseAllOfDataInnerSubcategoriesInner],
            'thumbnail_url': str
        }

        self.attribute_map = {
            'group_name': 'groupName',
            'group_url_name': 'groupUrlName',
            'id': 'id',
            'product_count': 'productCount',
            'subcategories': 'subcategories',
            'thumbnail_url': 'thumbnailURL'
        }

        self._group_name = group_name
        self._group_url_name = group_url_name
        self._id = id
        self._product_count = product_count
        self._subcategories = subcategories
        self._thumbnail_url = thumbnail_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaxonomyCategories200ResponseAllOfDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The taxonomyCategories_200_response_allOf_data_inner of this TaxonomyCategories200ResponseAllOfDataInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_name(self):
        """Gets the group_name of this TaxonomyCategories200ResponseAllOfDataInner.

        **natural-language name** of *this* product category

        :return: The group_name of this TaxonomyCategories200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name):
        """Sets the group_name of this TaxonomyCategories200ResponseAllOfDataInner.

        **natural-language name** of *this* product category

        :param group_name: The group_name of this TaxonomyCategories200ResponseAllOfDataInner.
        :type group_name: str
        """

        self._group_name = group_name

    @property
    def group_url_name(self):
        """Gets the group_url_name of this TaxonomyCategories200ResponseAllOfDataInner.

        **URL-formatted name** of *this* product category

        :return: The group_url_name of this TaxonomyCategories200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._group_url_name

    @group_url_name.setter
    def group_url_name(self, group_url_name):
        """Sets the group_url_name of this TaxonomyCategories200ResponseAllOfDataInner.

        **URL-formatted name** of *this* product category

        :param group_url_name: The group_url_name of this TaxonomyCategories200ResponseAllOfDataInner.
        :type group_url_name: str
        """

        self._group_url_name = group_url_name

    @property
    def id(self):
        """Gets the id of this TaxonomyCategories200ResponseAllOfDataInner.

        **unique numeric identifier** for the category

        :return: The id of this TaxonomyCategories200ResponseAllOfDataInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TaxonomyCategories200ResponseAllOfDataInner.

        **unique numeric identifier** for the category

        :param id: The id of this TaxonomyCategories200ResponseAllOfDataInner.
        :type id: int
        """

        self._id = id

    @property
    def product_count(self):
        """Gets the product_count of this TaxonomyCategories200ResponseAllOfDataInner.

        **number** of products in this category in the destination specified by `destId` - **note**: will be `null` if no `destId` is included in the query 

        :return: The product_count of this TaxonomyCategories200ResponseAllOfDataInner.
        :rtype: int
        """
        return self._product_count

    @product_count.setter
    def product_count(self, product_count):
        """Sets the product_count of this TaxonomyCategories200ResponseAllOfDataInner.

        **number** of products in this category in the destination specified by `destId` - **note**: will be `null` if no `destId` is included in the query 

        :param product_count: The product_count of this TaxonomyCategories200ResponseAllOfDataInner.
        :type product_count: int
        """

        self._product_count = product_count

    @property
    def subcategories(self):
        """Gets the subcategories of this TaxonomyCategories200ResponseAllOfDataInner.

        **array** of subcategory objects

        :return: The subcategories of this TaxonomyCategories200ResponseAllOfDataInner.
        :rtype: List[TaxonomyCategories200ResponseAllOfDataInnerSubcategoriesInner]
        """
        return self._subcategories

    @subcategories.setter
    def subcategories(self, subcategories):
        """Sets the subcategories of this TaxonomyCategories200ResponseAllOfDataInner.

        **array** of subcategory objects

        :param subcategories: The subcategories of this TaxonomyCategories200ResponseAllOfDataInner.
        :type subcategories: List[TaxonomyCategories200ResponseAllOfDataInnerSubcategoriesInner]
        """

        self._subcategories = subcategories

    @property
    def thumbnail_url(self):
        """Gets the thumbnail_url of this TaxonomyCategories200ResponseAllOfDataInner.

        **URL** for this category's thumbnail image, selected from the most popular product within the category - **note:** will be `null` if no `destId` is included in the query 

        :return: The thumbnail_url of this TaxonomyCategories200ResponseAllOfDataInner.
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url):
        """Sets the thumbnail_url of this TaxonomyCategories200ResponseAllOfDataInner.

        **URL** for this category's thumbnail image, selected from the most popular product within the category - **note:** will be `null` if no `destId` is included in the query 

        :param thumbnail_url: The thumbnail_url of this TaxonomyCategories200ResponseAllOfDataInner.
        :type thumbnail_url: str
        """

        self._thumbnail_url = thumbnail_url
