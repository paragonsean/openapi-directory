/**
 * Auckland Museum API
 * This is technical documentation for the Auckland Museum API 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Search service.
* @module api/SearchApi
* @version 2.0.0
*/
export default class SearchApi {

    /**
    * Constructs a new SearchApi. 
    * @alias module:api/SearchApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getSearch operation.
     * @callback module:api/SearchApi~getSearchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform simple search queries over Auckland Museum Collections and Cenotaph data
     * Use this endpoint to perform simple search queries for finding information and subjects you may be interested in  Searches performed via this endpoint run against an [Elastic](www.elastic.co) server. This endpoint mirrors the Elastic search API documented [here](https://www.elastic.co/guide/en/elasticsearch/reference/1.5/search-search.html)  Use the   - `collectionsonline` index to perform searches over other all Collections data   - `cenotaph` index to perform searches over Cenotaph data 
     * @param {String} index search index name Possible values: * `collectionsonline` * `cenotaph` 
     * @param {String} operation One of the supported elasticsearch operations like `_search` or `_suggest`
     * @param {Object} opts Optional parameters
     * @param {String} [q] One of the supported elasticsearch query parameter values for key `q`
     * @param {module:api/SearchApi~getSearchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getSearch(index, operation, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'index' is set
      if (index === undefined || index === null) {
        throw new Error("Missing the required parameter 'index' when calling getSearch");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling getSearch");
      }

      let pathParams = {
        'index': index,
        'operation': operation
      };
      let queryParams = {
        'q': opts['q']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/search/{index}/{operation}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postSearch operation.
     * @callback module:api/SearchApi~postSearchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform complex search queries over Auckland Museum Collections and Cenotaph data
     * Searches performed via this endpoint run against an [Elastic](www.elastic.co) server. This endpoint mirrors the Elastic search API documented [here](https://www.elastic.co/guide/en/elasticsearch/reference/1.5/search-search.html)  Use the   - `collectionsonline` index to perform searches over other all Collections data   - `cenotaph` index to perform searches over Cenotaph data 
     * @param {String} index search index name Possible values: * `collectionsonline` * `cenotaph` 
     * @param {String} operation One of the supported elasticsearch operations like `_search` or `_suggest`
     * @param {Object} opts Optional parameters
     * @param {Object.<String, Object>} [body] body
     * @param {module:api/SearchApi~postSearchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postSearch(index, operation, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'index' is set
      if (index === undefined || index === null) {
        throw new Error("Missing the required parameter 'index' when calling postSearch");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling postSearch");
      }

      let pathParams = {
        'index': index,
        'operation': operation
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/search/{index}/{operation}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
