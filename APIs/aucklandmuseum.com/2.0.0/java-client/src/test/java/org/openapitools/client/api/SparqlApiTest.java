/*
 * Auckland Museum API
 * This is technical documentation for the Auckland Museum API 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SparqlApi
 */
@Disabled
public class SparqlApiTest {

    private final SparqlApi api = new SparqlApi();

    /**
     * Auckland Museum SPARQL endpoint
     *
     * You can execute your [SPARQL](http://www.w3.org/TR/rdf-sparql-query/) queries against this endpoint.  The sparql query should be provided as the value of the request parameter &#x60;query&#x60;. Set the &#x60;Accept&#x60; header to &#x60;application/sparql-results+xml&#x60; to get results in XML. Set it to &#x60;application/sparql-results+json&#x60; to get results in JSON.   **Note:** This endpoints supports [JSON-P](http://json-p.org/). In order to get a JSON-P response, set the query parameter &#x60;callback&#x60; to your preferred callback function name. The default function name is &#x60;callback()&#x60;. When using JSON-P, there is no need to set the &#x60;Accept&#x60; header because the response will always be in &#x60;application/javascript&#x60;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSparqlTest() throws ApiException {
        String query = null;
        String paramCallback = null;
        Boolean infer = null;
        Object response = api.getSparql(query, paramCallback, infer);
        // TODO: test validations
    }

    /**
     * Auckland Museum SPARQL endpoint
     *
     * You can execute your [SPARQL](http://www.w3.org/TR/rdf-sparql-query/) queries against this endpoint. The sparql query should be provided as the value of the request parameter &#x60;query&#x60;. Set the &#x60;Accept&#x60; header to &#x60;application/sparql-results+xml&#x60; to get results in XML. Set it to &#x60;application/sparql-results+json&#x60; to get results in JSON.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postSparqlTest() throws ApiException {
        String query = null;
        Boolean infer = null;
        api.postSparql(query, infer);
        // TODO: test validations
    }

}
