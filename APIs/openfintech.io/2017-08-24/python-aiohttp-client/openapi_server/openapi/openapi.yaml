openapi: 3.0.1
info:
  contact: {}
  description: "# Introduction\n[OpenFinTech.io](https://openfintech.io) is an open\
    \ database that comprises of standardized primary data for FinTech industry.<br>\n\
    It contains such information as geolocation data (countries, cities, regions),\
    \ organizations, currencies (national, digital, virtual, crypto), banks, digital\
    \ exchangers, payment providers (PSP), payment methods, etc.<br>\nIt is created\
    \ for communication of cross-integrated micro-services on \"one language\". This\
    \ is achieved through standardization of entity identifiers that are used to exchange\
    \ information among different services.<br>\n\n### UML\nUML Domain Model diagram\
    \ you can find [here](https://api.openfintech.io/public_domain_model.png).<br>\n\
    \n### Persistence\nEntities are updated not more than 1 time per day.<br>\n\n\
    ### Terms and Conditions\nThis *OpenFinTech.io* is made available under the [Open\
    \ Database License](http://opendatacommons.org/licenses/odbl/1.0/).<br>\nAny rights\
    \ in individual contents of the database are licensed under the [Database Contents\
    \ License](http://opendatacommons.org/licenses/dbcl/1.0/).<br>\n\n### Contacts\n\
    For any questions, please email - info@openfintech.io<br>\nOr you can contact\
    \ us at <a href=\"https://gitter.im/paymaxicom/openfintech.io\">Gitter</a><br>\n\
    \nPowered by [Paymaxi](https://www.paymaxi.com)\n\n# Get Started\n\nIf you use\
    \ [POSTMAN](https://www.getpostman.com) or similar program which can operate with\
    \ swagger`s files - just [download](https://docs.openfintech.io) our spec and\
    \ [import it](https://www.getpostman.com/docs/importing_swagger). Also you can\
    \ try live [API demo](https://api.openfintech.io).\n\n## Overview\n\nThe OpenFinTech\
    \ API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer).\
    \ Our API has predictable, resource-oriented URLs, and uses HTTP response codes\
    \ to indicate API errors.<br>\nAPI is based on [JSON API](http://jsonapi.org)\
    \ standard. JSON is returned by all API responses, including errors, although\
    \ our API libraries convert responses to appropriate language-specific objects.<br>\n\
    JSON API requires use of the JSON API media type (`application/vnd.api+json`)\
    \ for exchanging data.<br>\n### Additional Request Headers\n#### ACCEPT HEADER\n\
    Your requests should always include the header:\n```curl\nAccept: application/vnd.api+json\n\
    ```\n\n## Authentication\n\nTo use OpenFinTech API no needed authorization.\n\n\
    ## Versioning\n\nWhen we make changes to the API, we release new, dated versions.\
    \ The current version is **2017-08-24**. Read our [API upgrades guide]() to see\
    \ our API changelog and to learn more about backwards compatibility.\n\n## Pagination\n\
    \nOpenFinTech APIs to retrieve lists of banks, currencies and other resources\
    \ - paginated to **100** items by default. The pagination information will be\
    \ included in the list API response under the node name `meta` - contains information\
    \ about listed objects [`total` - contains information about total count of listed\
    \ objects, `pages` - count of pages], `links` - contain links to navigate between\
    \ pages [`first` - link to first page, `prev` - link to previous page, `next`\
    \ - link to next page, `last` - link to last page].<br>\nBy default first page\
    \ will be listed. For navigating through pages, use the page parameter (e.g. `page[number]`,\
    \ `page[size]`).<br>\nThe `page[size]` parameter can be used to set the number\
    \ of records that you want to receive in the response.<br>\nThe `page[number]`\
    \ parameter can be used to set needed page number.<br>\nExample of response:\n\
    ```json\n{\n  \"meta\": {\n    \"total\": 419,\n    \"pages\": 42\n  },\n  \"\
    links\": {\n    \"first\": \"/v1/{path}?page[number]=1&page[size]=10\",\n    \"\
    prev\": \"/v1/{path}?page[number]=39&page[size]=10\",\n    \"next\": \"/v1/{path}?page[number]=41&page[size]=10\"\
    ,\n    \"last\": \"/v1/{path}?page[number]=42&page[size]=10\"\n  }\n```\n\n###\
    \ Sorting\n\nOpenFinTech\\`s API supported query parameter to sort result collection\
    \ [e.g. `?sort=code`]. Information about available parameters may be found in\
    \ the endpoint description. Positive parameter [e.g. `?sort=code`] points to ascending\
    \ sorting, negative  [e.g. `?sort=-code`] - to descending sorting. Also, supported\
    \ multiple sorting parameters [e.g. `?sort=code, -name, id`, etc.]\n```curl\n\
    https://api.openfintech.io/v1/countries?sort=name,-area\n```\n\n### Filtering\n\
    \nFiltering provided by unique query key `filter[*filtering_condition*]`. Information\
    \ about available parameters may be found in the endpoint description.\n```curl\n\
    https://api.openfintech.io/v1/countries?filter[region]=europe\n```\n\n## Images\n\
    \nOpenFinTech provides two types of images: icons and logos. To get one of those\
    \ types you should to use next url pattern:\n``` curl\nhttps://api.openfintech.io/v1/{path}/{id}/{icon/logo}\n\
    ```\nAlso, images can be resized by adding next parameters: `h={height}&w={width}`.\
    \ For example, you want to get organization icon with width equals to 20 pixels:\n\
    ``` curl\nhttps://api.openfintech.io/v1/organizations/{id}/icon?w=20&h=20\n```\n\
    If argument height or width is missing API returns original image with real sizes.\n\
    \n## Errors\n\nAPI uses conventional HTTP response codes to indicate the success\
    \ or failure of an API request. In general, codes in the `2xx` range indicate\
    \ success, codes in the `4xx` range indicate an error that failed given the information\
    \ provided (e.g., a required parameter was omitted, etc.), and codes in the `5xx`\
    \ range indicate an error with OpenFinTech's servers (these are rare).\n\n| Code\
    \ | Description |\n|------|-------------|\n| 200 - OK\t| Everything worked as\
    \ expected. |\n| 400 - Bad Request |\tThe request was unacceptable, often due\
    \ to missing a required parameter. |\n| 401 - Unauthorized |\tNo valid API key\
    \ provided. |\n| 402 - Request Failed\t| The parameters were valid but the request\
    \ failed. |\n| 404 - Not Found |\tThe requested resource doesn't exist. |\n| 409\
    \ - Conflict\t| The request conflicts with another request (perhaps due to using\
    \ the same idempotent key). |\n| 429 - Too Many Requests |\tToo many requests\
    \ hit the API too quickly. We recommend an exponential backoff of your requests.\
    \ |\n| 500, 502, 503, 504 - Server Errors |\tSomething went wrong on OpenFinTech's\
    \ end. (These are rare.) |\n"
  title: OpenFinTech.io
  version: 2017-08-24
  x-apisguru-categories:
  - financial
  x-logo:
    url: https://twitter.com/openfintech/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://docs.openfintech.io/swagger.yaml
    version: "2.0"
  x-providerName: openfintech.io
servers:
- url: https://api.openfintech.io/v1/
tags:
- description: Information about countries
  name: Countries
- description: Information about currencies
  name: Currencies
- description: Information about organizations
  name: Organizations
- description: Information about exchangers
  name: Exchangers
- description: Information about banks
  name: Banks
- description: Information about payment methods
  name: Payment methods
- description: Information about deposit methods
  name: Deposit methods
- description: Information about payment providers
  name: Payment providers
- description: Information about merchant industries
  name: Merchant industries
paths:
  /banks:
    get:
      description: |
        Returns list of banks. Each object contains general information about bank such as name and status, also information about bank details and related link to main organization.
      operationId: banks_get
      parameters:
      - description: Current page number.
        in: query
        name: "page[number]"
        schema:
          type: integer
      - description: |
          Page size.<br>*Default value: 100*
        in: query
        name: "page[size]"
        schema:
          type: integer
      - description: Filtering by banks code.
        in: query
        name: "filter[sort_code]"
        schema:
          type: string
      - description: Filtering by code.
        in: query
        name: "filter[code]"
        schema:
          type: string
      - description: Filtration by status.
        explode: false
        in: query
        name: "filter[status]"
        schema:
          items:
            enum:
            - active
            - liquidated
            - problem
            - deleted
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: |
          Sort params:<br>

          | ASC | DESC |
          |-----|------|
          | name | -name |
          | code | -code |
          | status | -status |
          | sort_code | -sort_code |
        explode: false
        in: query
        name: sort
        schema:
          items:
            enum:
            - name
            - -name
            - status
            - -status
            - code
            - -code
            - sort_code
            - -sort_code
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/BanksResponse'
          description: List of banks.
      summary: List of banks
      tags:
      - Banks
      x-openapi-router-controller: openapi_server.controllers.banks_controller
  /banks/{id}:
    get:
      description: |
        Returns bank with specific ID.
      operationId: banks_id_get
      parameters:
      - description: Unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/BankResponse'
          description: Bank information.
        "404":
          content: {}
          description: Bank ID is not valid.
      summary: Bank by ID
      tags:
      - Banks
      x-openapi-router-controller: openapi_server.controllers.banks_controller
  /countries:
    get:
      description: |
        Returns all available countries.
      operationId: countries_get
      parameters:
      - description: Current page number.
        in: query
        name: page_number
        schema:
          type: integer
      - description: |
          Page size.<br>*Default value: 100*
        in: query
        name: page_size
        schema:
          type: integer
      - description: Filtration by region.
        explode: false
        in: query
        name: "filter[region]"
        schema:
          items:
            enum:
            - africa
            - americas
            - asia
            - europe
            - oceania
            - polar
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filtration by sub region.
        explode: false
        in: query
        name: "filter[sub_region]"
        schema:
          items:
            enum:
            - northern_africa
            - southern_africa
            - western_africa
            - eastern_africa
            - middle_africa
            - northern_america
            - south_america
            - central_america
            - caribbean
            - southern_asia
            - western_asia
            - eastern_asia
            - south_eastern_asia
            - central_asia
            - northern_europe
            - southern_europe
            - western_europe
            - eastern_europe
            - polynesia
            - australia_and_new_zealand
            - micronesia
            - melanesia
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: |
          Sort params:<br>

          | ASC | DESC |
          |-----|------|
          | name | -name |
          | area | -area |
          | population | -population |
          | region | -region |
          | sub_region | -sub_region |
        explode: false
        in: query
        name: sort
        schema:
          items:
            enum:
            - name
            - -name
            - area
            - -area
            - population
            - -population
            - region
            - -region
            - sub_region
            - -sub_region
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CountriesResponse'
          description: List of countries.
      summary: List of countries
      tags:
      - Countries
      x-openapi-router-controller: openapi_server.controllers.countries_controller
  /countries/{id}:
    get:
      description: |
        Returns country with specific ID.
      operationId: countries_id_get
      parameters:
      - description: Unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CountryResponse'
          description: Country informatiion.
        "404":
          content: {}
          description: Country ID is not valid.
      summary: Country by ID
      tags:
      - Countries
      x-openapi-router-controller: openapi_server.controllers.countries_controller
  /currencies:
    get:
      description: |
        Returns all available currencies.
      operationId: currencies_get
      parameters:
      - description: Current page number.
        in: query
        name: page_number
        schema:
          type: integer
      - description: |
          Page size.<br>*Default value: 100*
        in: query
        name: page_size
        schema:
          type: integer
      - description: "Full text search with name, code, type, code_iso_alpha3, code_jsons_alpha,\
          \ code_estandards_alpha, category."
        in: query
        name: "filter[search]"
        schema:
          type: string
      - description: Filtering by ISO code.
        in: query
        name: "filter[code_iso_alpha3]"
        schema:
          type: string
      - description: Filtering by ISO number.
        in: query
        name: "filter[code_iso_numeric3]"
        schema:
          type: integer
      - description: Filtering by estandards code.
        in: query
        name: "filter[code_estandards_alpha]"
        schema:
          type: string
      - description: Filtration by currency type.
        explode: false
        in: query
        name: "filter[currency_type]"
        schema:
          items:
            enum:
            - national
            - digital
            - virtual
            - metal
            - energy
            - crypto
            - code
            - technical
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filtration by category.
        explode: false
        in: query
        name: "filter[category]"
        schema:
          items:
            enum:
            - electronic
            - online_bankings
            - money_transfers
            - crypto_exchangers
            - crypto_currencies
            - vouchers
            - cards
            - cash
            - games
            - psps
            - others
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: |
          Sort params:<br>

          | ASC | DESC |
          |-----|------|
          | name | -name |
          | type | -type |
          | category | -category |
          | code | -code |
          | code_iso_alpha3 | -code_iso_alpha3 |
          | code_iso_numeric3 | -code_iso_numeric3 |
          | code_estandards_alpha | -code_estandards_alpha |
        explode: false
        in: query
        name: sort
        schema:
          items:
            enum:
            - name
            - -name
            - type
            - -type
            - category
            - -category
            - code
            - -code
            - code_iso_alpha3
            - -code_iso_alpha3
            - code_iso_numeric3
            - -code_iso_numeric3
            - code_estandards_alpha
            - -code_estandards_alpha
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CurrenciesResponse'
          description: List of currencies.
      summary: List of currencies
      tags:
      - Currencies
      x-openapi-router-controller: openapi_server.controllers.currencies_controller
  /currencies/{id}:
    get:
      description: |
        Returns currency with specific ID.
      operationId: currencies_id_get
      parameters:
      - description: Unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CurrencyResponse'
          description: Currency information.
        "404":
          content: {}
          description: Currency ID is not valid.
      summary: Currency by ID
      tags:
      - Currencies
      x-openapi-router-controller: openapi_server.controllers.currencies_controller
  /deposit-methods:
    get:
      description: |
        Returns list of deposit methods. Each object contains information about deposit method such as name and category, also related link to deposit method issuer (which processing it).
      operationId: deposit_methods_get
      parameters:
      - description: Current page number.
        in: query
        name: page_number
        schema:
          type: integer
      - description: |
          Page size.<br>*Default value: 100*
        in: query
        name: page_size
        schema:
          type: integer
      - description: "Full text search with id, name, code, category."
        in: query
        name: "filter[search]"
        schema:
          type: string
      - description: Filtering by name.
        in: query
        name: "filter[name]"
        schema:
          type: string
      - description: Filtering by code.
        in: query
        name: filter_code
        schema:
          type: string
      - description: Filtering by processor_name.
        in: query
        name: "filter[processor_name]"
        schema:
          type: string
      - description: Filtering by category.
        explode: false
        in: query
        name: "filter[category]"
        schema:
          items:
            enum:
            - card
            - alternative
            - wallet
            - credit_cards
            - debit_cards
            - prepaid_cards
            - check
            - invoice
            - bank_transaction
            - direct_debits
            - mobile_carrier_billing
            - cash_on_delivery
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: |
          Sort params:<br>

          | ASC | DESC |
          |-----|------|
          | name | -name |
          | code | -code |
          | processor_name | -processor_name |
          | category | -category |
        explode: false
        in: query
        name: sort
        schema:
          items:
            enum:
            - name
            - -name
            - code
            - -code
            - processor_name
            - -processor_name
            - category
            - -category
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DepositMethodsResponse'
          description: List of deposit methods.
      summary: List of deposit methods
      tags:
      - Deposit methods
      x-openapi-router-controller: openapi_server.controllers.deposit_methods_controller
  /deposit-methods/{id}:
    get:
      description: |
        Returns deposit method with specific ID.
      operationId: deposit_methods_id_get
      parameters:
      - description: Unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DepositMethodResponse'
          description: Deposit method information.
        "404":
          content: {}
          description: deposit method ID is not valid.
      summary: Deposit method by ID
      tags:
      - Deposit methods
      x-openapi-router-controller: openapi_server.controllers.deposit_methods_controller
  /exchangers:
    get:
      description: |
        Returns list of exchange markets. Each object contains general information about exchanger such as name and status, also information about rates export and related link to main organization.<br>
        Rates export standards is represented by:
        * [estandards](http://estandards.info)
        * [jsons](http://jsons.info)
        * ratex - our internal standard
      operationId: exchangers_get
      parameters:
      - description: Current page number.
        in: query
        name: page_number
        schema:
          type: integer
      - description: |
          Page size.<br>*Default value: 100*
        in: query
        name: page_size
        schema:
          type: integer
      - description: Filtering by name.
        in: query
        name: filter_name
        schema:
          type: string
      - description: Filtration by status.
        explode: false
        in: query
        name: "filter[status]"
        schema:
          items:
            enum:
            - active
            - blocked
            - deleted
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: |
          Sort params:<br>

          | ASC | DESC |
          |-----|------|
          | name | -name |
          | status | -status |
          | wmid | -wmid |
          | rate_type | -rate_type |
          | rates_export_standard | <nobr>-rates_export_standard</nobr> |
        explode: false
        in: query
        name: sort
        schema:
          items:
            enum:
            - name
            - -name
            - status
            - -status
            - wmid
            - -wmid
            - rate_type
            - -rate_type
            - rates_export_standard
            - -rates_export_standard
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ExchangersResponse'
          description: List of exchangers.
      summary: List of exchangers
      tags:
      - Exchangers
      x-openapi-router-controller: openapi_server.controllers.exchangers_controller
  /exchangers/{id}:
    get:
      description: |
        Returns exchanger with specific ID.
      operationId: exchangers_id_get
      parameters:
      - description: Unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ExchangerResponse'
          description: Exchanger information.
        "404":
          content: {}
          description: Exchanger ID is not valid.
      summary: Exchanger by ID
      tags:
      - Exchangers
      x-openapi-router-controller: openapi_server.controllers.exchangers_controller
  /merchant-industries:
    get:
      description: |
        Returns all available merchant fields of activity.
      operationId: merchant_industries_get
      parameters:
      - description: Current page number.
        in: query
        name: page_number
        schema:
          type: integer
      - description: |
          Page size.<br>*Default value: 100*
        in: query
        name: page_size
        schema:
          type: integer
      - description: Filtering by name.
        in: query
        name: filter_name
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MerchantIndustriesResponse'
          description: List of Merchant industries.
      summary: List of merchant industries
      tags:
      - Merchant industries
      x-openapi-router-controller: openapi_server.controllers.merchant_industries_controller
  /merchant-industries/{id}:
    get:
      description: |
        Returns merchant industry with specific ID.
      operationId: merchant_industries_id_get
      parameters:
      - description: Unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MerchantIndustryResponse'
          description: Merchant industry.
        "404":
          content: {}
          description: Merchant industry ID is not valid.
      summary: Merchant industry by ID
      tags:
      - Merchant industries
      x-openapi-router-controller: openapi_server.controllers.merchant_industries_controller
  /organizations:
    get:
      description: |
        This endpoint retrievs the list of organizations present in the system. The data displays general, public information, without reference to the type of activity (for example - name, address, contacts, etc.).
      operationId: organizations_get
      parameters:
      - description: Current page number.
        in: query
        name: page_number
        schema:
          type: integer
      - description: |
          Page size.<br>*Default value: 100*
        in: query
        name: page_size
        schema:
          type: integer
      - description: "Full text search with id, name, code."
        in: query
        name: "filter[search]"
        schema:
          type: string
      - description: Filtering by name.
        in: query
        name: filter_name
        schema:
          type: string
      - description: Filtering by code.
        in: query
        name: filter_code
        schema:
          type: string
      - description: Filtration by status.
        explode: false
        in: query
        name: filter_status
        schema:
          items:
            enum:
            - active
            - blocked
            - deleted
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filtering by industries.
        in: query
        name: "filter[industries]"
        schema:
          type: string
      - description: |
          Sort params:<br>

          | ASC | DESC |
          |-----|------|
          | name | -name |
          | code | -code |
          | status | -status |
          | description | -description |
        explode: false
        in: query
        name: sort
        schema:
          items:
            enum:
            - name
            - -name
            - code
            - -code
            - status
            - -status
            - description
            - -description
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrganizationsResponse'
          description: List of Organizations.
      summary: List of organizations
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
  /organizations/{id}:
    get:
      description: |
        Returns organization with specific ID.
      operationId: organizations_id_get
      parameters:
      - description: Unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
          description: Organization information.
        "404":
          content: {}
          description: Organization ID is not valid.
      summary: Organization by ID
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
  /payment-methods:
    get:
      description: |
        Returns list of payment methods. Each object contains information about payment method such as name and category, also related link to payment method issuer (which processing it).
      operationId: payment_methods_get
      parameters:
      - description: Current page number.
        in: query
        name: page_number
        schema:
          type: integer
      - description: |
          Page size.<br>*Default value: 100*
        in: query
        name: page_size
        schema:
          type: integer
      - description: "Full text search with id, name, code, category."
        in: query
        name: "filter[search]"
        schema:
          type: string
      - description: Filtering by name.
        in: query
        name: filter_name
        schema:
          type: string
      - description: Filtering by code.
        in: query
        name: filter_code
        schema:
          type: string
      - description: Filtering by processor_name.
        in: query
        name: "filter[processor_name]"
        schema:
          type: string
      - description: Filtering by category.
        explode: false
        in: query
        name: "filter[category]"
        schema:
          items:
            enum:
            - card
            - alternative
            - wallet
            - credit_cards
            - debit_cards
            - prepaid_cards
            - check
            - invoice
            - bank_transaction
            - direct_debits
            - mobile_carrier_billing
            - cash_on_delivery
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: |
          Sort params:<br>

          | ASC | DESC |
          |-----|------|
          | name | -name |
          | code | -code |
          | processor_name | -processor_name |
          | category | -category |
        explode: false
        in: query
        name: sort
        schema:
          items:
            enum:
            - name
            - -name
            - code
            - -code
            - processor_name
            - -processor_name
            - category
            - -category
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsResponse'
          description: List of payment methods.
      summary: List of payment methods
      tags:
      - Payment methods
      x-openapi-router-controller: openapi_server.controllers.payment_methods_controller
  /payment-methods/{id}:
    get:
      description: |
        Returns payment method with specific ID.
      operationId: payment_methods_id_get
      parameters:
      - description: Unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
          description: Payment method information.
        "404":
          content: {}
          description: Payment method ID is not valid.
      summary: Payment method by ID
      tags:
      - Payment methods
      x-openapi-router-controller: openapi_server.controllers.payment_methods_controller
  /payment-providers:
    get:
      description: |
        A payment service provider (PSP) offers shops online services for accepting electronic payments by a variety of payment methods.<br> Endpoint returns list of PSPs. Each object contains: name, type, supported features and sales channels, also related link to available payment methods and main organization.
      operationId: payment_providers_get
      parameters:
      - description: Current page number.
        in: query
        name: page_number
        schema:
          type: integer
      - description: |
          Page size.<br>*Default value: 100*
        in: query
        name: page_size
        schema:
          type: integer
      - description: "Full text search with id, code, name."
        in: query
        name: "filter[search]"
        schema:
          type: string
      - description: Filtering by name.
        in: query
        name: filter_name
        schema:
          type: string
      - description: Filtering by code.
        in: query
        name: filter_code
        schema:
          type: string
      - description: Filtering by types.
        explode: false
        in: query
        name: "filter[types]"
        schema:
          items:
            enum:
            - distributor
            - aggregator
            - collector
            - acquirer
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filtering by sales channels.
        explode: false
        in: query
        name: "filter[sales_channels]"
        schema:
          items:
            enum:
            - e_commerce
            - in_app
            - m_commerce
            - moto
            - m_pos
            - pos
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filtering by features.
        explode: false
        in: query
        name: "filter[features]"
        schema:
          items:
            enum:
            - e_commerce
            - installments
            - partial_captures
            - mastercard_secure
            - american_express_safe_key
            - a_b_testing
            - payment_transfer
            - hosted_payment_page
            - edcc
            - multi_lingual
            - fraud_scrubbing
            - multi_currency
            - pay_out_of_winnings
            - refunds
            - verified_by_visa
            - tokenization
            - recurring_payments
            - avs
            - pre_authorisation
            - chargeback_management
            - discover_protectbuy
            - level_iii_data
            - j_secure_by_jcb
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: |
          Sort params:<br>

          | ASC | DESC |
          |-----|------|
          | name | -name |
          | code | -code |
        explode: false
        in: query
        name: sort
        schema:
          items:
            enum:
            - name
            - -name
            - code
            - -code
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaymentProvidersResponse'
          description: List of Payment providers.
      summary: List of payment providers
      tags:
      - Payment providers
      x-openapi-router-controller: openapi_server.controllers.payment_providers_controller
  /payment-providers/{id}:
    get:
      description: |
        Returns payment provider with specific ID.
      operationId: payment_providers_id_get
      parameters:
      - description: Unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaymentProviderResponse'
          description: Payment provider.
        "404":
          content: {}
          description: Payment provider ID is not valid.
      summary: Payment provider by ID
      tags:
      - Payment providers
      x-openapi-router-controller: openapi_server.controllers.payment_providers_controller
components:
  parameters:
    filter[code]:
      description: Filtering by code.
      in: query
      name: "filter[code]"
      schema:
        type: string
    filter[name]:
      description: Filtering by name.
      in: query
      name: "filter[name]"
      schema:
        type: string
    filter[status]:
      description: Filtration by status.
      explode: false
      in: query
      name: "filter[status]"
      schema:
        items:
          enum:
          - active
          - blocked
          - deleted
          type: string
        type: array
        uniqueItems: true
      style: form
    id:
      description: Unique ID.
      in: path
      name: id
      required: true
      schema:
        type: string
    page[number]:
      description: Current page number.
      in: query
      name: "page[number]"
      schema:
        type: integer
    page[size]:
      description: |
        Page size.<br>*Default value: 100*
      in: query
      name: "page[size]"
      schema:
        type: integer
    second_filter[status]:
      description: Filtration by status.
      explode: false
      in: query
      name: "filter[status]"
      schema:
        items:
          enum:
          - active
          - liquidated
          - problem
          - deleted
          type: string
        type: array
        uniqueItems: true
      style: form
  schemas:
    ActiveInCountriesRelationship:
      description: Active in countries
      properties:
        data:
          items:
            $ref: '#/components/schemas/ActiveInCountriesRelationship_data_inner'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/ActiveInCountriesRelationship_links'
      title: ActiveInCountriesRelationship
      type: object
    Bank:
      properties:
        attributes:
          $ref: '#/components/schemas/BankAttributes'
        id:
          description: Bank`s ID
          example: bnk_ROO9xUfcBUwOIsqI
          title: id
          type: string
        links:
          $ref: '#/components/schemas/SelfLinks'
        relationships:
          $ref: '#/components/schemas/BankRelationships'
        type:
          example: banks
          title: type
          type: string
      title: Bank
      type: object
    BankAttributes:
      description: Array of bank attributes
      properties:
        account_number:
          title: account_number
          type: string
        bank_code:
          title: bank_code
          type: string
        bic:
          title: bic
          type: string
        code:
          description: Bank`s code
          example: pat_kb_privatbank
          title: code
          type: string
        iban:
          title: iban
          type: string
        name:
          description: Bank`s name
          example: Test
          title: name
          type: string
        sort_code:
          example: "305299"
          title: sort_code
          type: string
        status:
          description: "Status [active, liquidated, problem, deleted]"
          example: active
          title: status
          type: string
        vatin:
          title: vatin
          type: string
      title: BankAttributes
      type: object
    BankOrganization:
      properties:
        data:
          $ref: '#/components/schemas/BankOrganizationData'
        links:
          $ref: '#/components/schemas/BankOrganizationLinks'
      title: BankOrganization
      type: object
    BankOrganizationData:
      properties:
        id:
          description: Organization`s ID
          example: org_qXJX8D9I5VCQjCOH
          title: id
          type: string
        type:
          example: organizations
          title: type
          type: string
      title: BankOrganizationData
      type: object
    BankOrganizationLinks:
      properties:
        related:
          example: /v1/banks/bnk_ROO9xUfcBUwOIsqI/organization
          title: related
          type: string
      title: BankOrganizationLinks
      type: object
    BankRelationships:
      properties:
        organization:
          $ref: '#/components/schemas/BankOrganization'
      title: BankRelationships
      type: object
    BankResponse:
      properties:
        data:
          $ref: '#/components/schemas/Bank'
      title: BankResponse
      type: object
    BanksResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Bank'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/ResponseLinks'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      title: BanksResponse
      type: object
    CountriesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Country'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/ResponseLinks'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      title: CountriesResponse
      type: object
    Country:
      properties:
        attributes:
          $ref: '#/components/schemas/CountryAttributes'
        id:
          description: Country`s ID
          example: UA
          title: id
          type: string
        links:
          $ref: '#/components/schemas/SelfLinks'
        relationships:
          $ref: '#/components/schemas/CountryRelationships'
        type:
          example: countries
          title: type
          type: string
      title: Country
      type: object
    CountryAttributes:
      properties:
        area:
          description: Countryâ€™s area (sq km)
          example: "603700"
          title: area
          type: string
        calling_codes:
          description: Array of country`s phone codes
          example:
          - 380
          items:
            type: integer
          title: calling_codes
          type: array
        capital:
          description: Countryâ€™s capital
          example: Kyiv
          title: capital
          type: string
        code_alpha3:
          description: Country`s ISO alpha3 code
          example: UKR
          title: code_alpha3
          type: string
        languages:
          description: Array of country`s languages
          example:
          - uk
          items:
            type: string
          title: languages
          type: array
        name:
          description: Country`s name
          example: Ukraine
          title: name
          type: string
        native_name:
          description: Country`s nativ name
          example: Ð£ÐºÑ€Ð°Ñ—Ð½Ð°
          title: native_name
          type: string
        population:
          description: Countryâ€™s population
          example: "42836922"
          title: population
          type: string
        region:
          description: |
            Countryâ€™s region:<br>

              * Africa
              * Americas
              * Asia
              * Europe
              * Oceania
              * Polar
          example: europe
          title: region
          type: string
        sub_region:
          description: |
            Countryâ€™s sub region:<br>

              * Northern Africa
              * Southern Africa
              * Western Africa
              * Eastern Africa
              * Middle Africa
              * Northern America
              * South America
              * Central America
              * Caribbean
              * Southern Asia
              * Western Asia
              * Eastern Asia
              * South-Eastern Asia
              * Central Asia
              * Northern Europe
              * Southern Europe
              * Western Europe
              * Eastern Europe
              * Polynesia
              * Australia and New Zealand
              * Micronesia
              * Melanesia
          example: eastern_europe
          title: sub_region
          type: string
        timezones:
          description: Array of country`s timezones (UTC)
          example:
          - UTC+02:00
          items:
            type: string
          title: timezones
          type: array
        top_level_domains:
          description: Array of country`s domains
          example:
          - .ua
          items:
            type: string
          title: top_level_domains
          type: array
      title: CountryAttributes
      type: object
    CountryRelationships:
      properties:
        translations:
          $ref: '#/components/schemas/CountryTranslations'
      title: CountryRelationships
      type: object
    CountryResponse:
      properties:
        data:
          $ref: '#/components/schemas/Country'
      title: CountryResponse
      type: object
    CountryTranslations:
      properties:
        links:
          $ref: '#/components/schemas/CountryTranslationsLinks'
      title: CountryTranslations
      type: object
    CountryTranslationsLinks:
      properties:
        related:
          example: /v1/countries/UA/translations
          title: related
          type: string
      title: CountryTranslationsLinks
      type: object
    CurrenciesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Currency'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/ResponseLinks'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      title: CurrenciesResponse
      type: object
    Currency:
      properties:
        attributes:
          $ref: '#/components/schemas/CurrencyAttributes'
        id:
          description: Currency ID
          example: UAH
          title: id
          type: string
        links:
          $ref: '#/components/schemas/SelfLinks'
        relationships:
          $ref: '#/components/schemas/CurrencyRelationships'
        type:
          example: currencies
          title: type
          type: string
      title: Currency
      type: object
    CurrencyAttributes:
      description: Array of currencies attributes
      properties:
        category:
          description: Currency category
          example: others
          title: category
          type: string
        code:
          description: Currency system code
          example: UAH
          title: code
          type: string
        code_estandards_alpha:
          example: none
          title: code_estandards_alpha
          type: string
        code_iso_alpha3:
          description: Currency ISO code
          example: UAH
          title: code_iso_alpha3
          type: string
        code_iso_numeric3:
          description: Currency ISO numeric code
          example: 980
          title: code_iso_numeric3
          type: integer
        code_json_alpha:
          example: none
          title: code_json_alpha
          type: string
        created:
          description: Created date in system (in Unixtime)
          example: "1486051665"
          title: created
          type: string
        currency_type:
          description: "Type of currencies [national, digital, virtual, metal, energy]"
          example: national
          title: currency_type
          type: string
        decimal_e:
          description: Number of digits after the decimal separator
          example: "2"
          title: decimal_e
          type: string
        icon:
          $ref: '#/components/schemas/CurrencyAttributesIcon'
        issuer:
          description: Currency`s issuer
          title: issuer
          type: string
        name:
          description: Currency description
          example: Hryvnia
          title: name
          type: string
        native_symbol:
          description: "Currencyâ€™s symbol. In general, only for nationals currencies"
          example: â‚´
          title: native_symbol
          type: string
        symbol:
          description: "Currencyâ€™s symbol. In general, only for nationals currencies"
          example: â‚´
          title: symbol
          type: string
      title: CurrencyAttributes
      type: object
    CurrencyAttributesIcon:
      description: Links to currency icons
      properties:
        "16":
          description: 16x16 icon
          example: https://i.openfintech.io/currencies/UAH/icon_16.png
          title: "16"
          type: string
        "32":
          description: 32x32 icon
          example: https://i.openfintech.io/currencies/UAH/icon_32.png
          title: "32"
          type: string
        "64":
          description: 64x64 icon
          example: https://i.openfintech.io/currencies/UAH/icon_64.png
          title: "64"
          type: string
      title: CurrencyAttributesIcon
      type: object
    CurrencyCountries:
      properties:
        links:
          $ref: '#/components/schemas/CurrencyCountryLinks'
      title: CurrencyCountries
      type: object
    CurrencyCountryLinks:
      properties:
        related:
          example: /v1/currencies/UAH/countries
          title: related
          type: string
      title: CurrencyCountryLinks
      type: object
    CurrencyIssuer:
      description: |
        Currency Issuer. 'Only for virtual currency'
      properties:
        data:
          $ref: '#/components/schemas/CurrencyIssuertData'
        links:
          $ref: '#/components/schemas/CurrencyIssuerLinks'
      title: CurrencyIssuer
      type: object
    CurrencyIssuerLinks:
      properties:
        related:
          example: /v1/currencies/UAH/issuer
          title: related
          type: string
      title: CurrencyIssuerLinks
      type: object
    CurrencyIssuerOrganization:
      description: |
        Issuer.
      properties:
        data:
          $ref: '#/components/schemas/CurrencyIssuerOrganizationData'
        links:
          $ref: '#/components/schemas/CurrencyIssuerOrganizationLinks'
      title: CurrencyIssuerOrganization
      type: object
    CurrencyIssuerOrganizationData:
      properties:
        id:
          description: Issuer organization ID
          title: id
          type: string
        type:
          example: currencies
          title: type
          type: string
      title: CurrencyIssuerOrganizationData
      type: object
    CurrencyIssuerOrganizationLinks:
      properties:
        related:
          example: /v1/currencies/UAH/issuer_organization
          title: related
          type: string
      title: CurrencyIssuerOrganizationLinks
      type: object
    CurrencyIssuertData:
      properties:
        id:
          description: Issuer ID
          title: id
          type: string
        type:
          example: issuer
          title: type
          type: string
      title: CurrencyIssuertData
      type: object
    CurrencyParent:
      description: |
        Parent currency. 'Only for virtual currency'
      properties:
        data:
          $ref: '#/components/schemas/CurrencyParentData'
        links:
          $ref: '#/components/schemas/CurrencyParentLinks'
      title: CurrencyParent
      type: object
    CurrencyParentData:
      properties:
        id:
          description: Parent currency ID
          example: UAH
          title: id
          type: string
        type:
          example: currencies
          title: type
          type: string
      title: CurrencyParentData
      type: object
    CurrencyParentLinks:
      properties:
        related:
          example: /v1/currencies/UAH/parent
          title: related
          type: string
      title: CurrencyParentLinks
      type: object
    CurrencyRelationships:
      properties:
        countries:
          $ref: '#/components/schemas/CurrencyCountries'
        issuer:
          $ref: '#/components/schemas/CurrencyIssuer'
        issuer_organization:
          $ref: '#/components/schemas/CurrencyIssuerOrganization'
        parent:
          $ref: '#/components/schemas/CurrencyParent'
      title: CurrencyRelationships
      type: object
    CurrencyResponse:
      properties:
        data:
          $ref: '#/components/schemas/Currency'
      title: CurrencyResponse
      type: object
    DepositMethod:
      properties:
        attributes:
          $ref: '#/components/schemas/DepositMethodAttributes'
        id:
          description: Deposit-methods`s ID
          example: paym_8NBX4V5fAEmqr3PO
          title: id
          type: string
        links:
          $ref: '#/components/schemas/SelfLinks'
        relationships:
          $ref: '#/components/schemas/DepositMethodRelationships'
        type:
          example: deposit-methods
          title: type
          type: string
      title: DepositMethod
      type: object
    DepositMethodAttributes:
      description: Array of Deposit-method attributes
      properties:
        category:
          example: wallet
          title: category
          type: string
        code:
          description: Deposit-method`s code
          example: justpayewallet
          title: code
          type: string
        name:
          description: Deposit-method`s name
          example: TOT Just Pay
          title: name
          type: string
        processor_name:
          description: Deposit-method`s processor
          example: TOT Just Pay
          title: processor_name
          type: string
      title: DepositMethodAttributes
      type: object
    DepositMethodProcessorData:
      description: Processor`s Data.
      properties:
        data:
          items:
            $ref: '#/components/schemas/DepositMethodProcessorData_data_inner'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/DepositMethodProcessorData_links'
      title: DepositMethodProcessorData
      type: object
    DepositMethodRelationships:
      properties:
        actiove_in_countries:
          $ref: '#/components/schemas/ActiveInCountriesRelationship'
        currencies:
          $ref: '#/components/schemas/CurrencyParent'
        payment_processor:
          $ref: '#/components/schemas/DepositMethodProcessorData'
        supported_psps:
          $ref: '#/components/schemas/SupportedPspsRelationship'
      title: DepositMethodRelationships
      type: object
    DepositMethodResponse:
      properties:
        data:
          $ref: '#/components/schemas/DepositMethod'
      title: DepositMethodResponse
      type: object
    DepositMethodsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/DepositMethod'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/ResponseLinks'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      title: DepositMethodsResponse
      type: object
    Exchanger:
      properties:
        attributes:
          $ref: '#/components/schemas/ExchangerAttributes'
        id:
          description: Exchanger`s ID
          example: exch_1oClKBr43J1xxxAa
          title: id
          type: string
        links:
          $ref: '#/components/schemas/SelfLinks'
        relationships:
          $ref: '#/components/schemas/ExchangerRelationships'
        type:
          example: exchangers
          title: type
          type: string
      title: Exchanger
      type: object
    ExchangerAttributes:
      properties:
        name:
          description: Exchanger`s name
          example: Xchange.cc
          title: name
          type: string
        rates_export_standard:
          example: estandard
          title: rates_export_standard
          type: string
        rates_export_url:
          example: https://xchange.cc/valuta.xml
          title: rates_export_url
          type: string
        status:
          description: "Exchanger`s status [active, blocked, deleted]"
          example: active
          title: status
          type: string
        wmid:
          description: Exchanger`s WebMoney ID
          example: 612345678901
          title: wmid
          type: integer
      title: ExchangerAttributes
      type: object
    ExchangerOrganization:
      properties:
        data:
          $ref: '#/components/schemas/ExchangerOrganizationData'
        links:
          $ref: '#/components/schemas/ExchangerOrganizationLinks'
      title: ExchangerOrganization
      type: object
    ExchangerOrganizationData:
      properties:
        id:
          description: Organization ID
          example: org_Dr5Wi728plQ0RPA5
          title: id
          type: string
        type:
          example: organizations
          title: type
          type: string
      title: ExchangerOrganizationData
      type: object
    ExchangerOrganizationLinks:
      properties:
        related:
          example: /v1/exchangers/exch_1oClKBr43J1xxxAa/organization
          title: related
          type: string
      title: ExchangerOrganizationLinks
      type: object
    ExchangerRelationships:
      properties:
        organization:
          $ref: '#/components/schemas/ExchangerOrganization'
      title: ExchangerRelationships
      type: object
    ExchangerResponse:
      properties:
        data:
          $ref: '#/components/schemas/Exchanger'
      title: ExchangerResponse
      type: object
    ExchangersResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Exchanger'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/ResponseLinks'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      title: ExchangersResponse
      type: object
    MerchantIndustriesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MerchantIndustry'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/ResponseLinks'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      title: MerchantIndustriesResponse
      type: object
    MerchantIndustry:
      properties:
        attributes:
          $ref: '#/components/schemas/MerchantIndustryAttributes'
        id:
          description: Merchant-industry`s ID
          example: merchind_Cukwq7LEFXiaRpkZ
          title: id
          type: string
        type:
          example: merchant-industries
          title: type
          type: string
      title: MerchantIndustry
      type: object
    MerchantIndustryAttributes:
      description: Array of Merchant-industry attributes
      properties:
        name:
          description: Merchant-industry`s name
          example: Airlines
          title: name
          type: string
      title: MerchantIndustryAttributes
      type: object
    MerchantIndustryResponse:
      properties:
        data:
          $ref: '#/components/schemas/MerchantIndustry'
      title: MerchantIndustryResponse
      type: object
    Organization:
      properties:
        attributes:
          $ref: '#/components/schemas/OrganizationAttributes'
        id:
          description: Organization`s ID
          example: org_RysJXOwKaGT5o1SZ
          title: id
          type: string
        links:
          $ref: '#/components/schemas/SelfLinks'
        relationships:
          $ref: '#/components/schemas/OrganizationRelationships'
        type:
          example: organizations
          title: type
          type: string
      title: Organization
      type: object
    OrganizationActive:
      properties:
        data:
          example: none
          items:
            type: string
          title: data
          type: array
        links:
          $ref: '#/components/schemas/OrganizationActiveLinks'
      title: OrganizationActive
      type: object
    OrganizationActiveLinks:
      properties:
        related:
          example: /v1/organizations/org_lK1mIKXO1kHOrTeJ/active_in_countries
          title: related
          type: string
      title: OrganizationActiveLinks
      type: object
    OrganizationAddress:
      description: Organization`s address
      properties:
        city:
          example: Kyiv
          title: city
          type: string
        country:
          example: Ukraine
          title: country
          type: string
        post_code:
          example: 2184
          title: post_code
          type: integer
        region:
          description: |
            Countryâ€™s region:<br>

              * Africa
              * Americas
              * Asia
              * Europe
              * Oceania
              * Polar
          example: Europe
          title: region
          type: string
        street:
          example: Obolonska nab
          title: street
          type: string
      title: OrganizationAddress
      type: object
    OrganizationAttributes:
      properties:
        address:
          $ref: '#/components/schemas/OrganizationAddress'
        blog:
          description: Organization`s blog
          example: none
          title: blog
          type: string
        code:
          description: Organization`s code
          example: interkassa
          title: code
          type: string
        contacts:
          $ref: '#/components/schemas/OrganizationContacts'
        description:
          description: Description
          example: Payment acceptance system
          title: description
          type: string
        icon:
          $ref: '#/components/schemas/OrganizationAttributesIcon'
        industries:
          description: Industries
          example:
          - psp
          items:
            type: string
          title: industries
          type: array
        logo:
          $ref: '#/components/schemas/OrganizationAttributesLogo'
        name:
          description: Organization`s name
          example: Interkassa
          title: name
          type: string
        site:
          description: Organization`s site
          example: https://www.interkassa.com
          title: site
          type: string
        social_profiles:
          $ref: '#/components/schemas/OrganizationSocial'
        status:
          description: "Organization`s status [active, liquidated, deleted]"
          example: active
          title: status
          type: string
        wiki:
          description: Organization`s wiki
          example: https://www.interkassa.com/wiki/
          title: wiki
          type: string
      title: OrganizationAttributes
      type: object
    OrganizationAttributesIcon:
      description: Links to organization icons
      properties:
        "16":
          description: 16x16 icon
          example: https://i.openfintech.io/organizations/Interkassa/icon_16.png
          title: "16"
          type: string
        "32":
          description: 32x32 icon
          example: https://i.openfintech.io/organizations/Interkassa/icon_32.png
          title: "32"
          type: string
        "64":
          description: 64x64 icon
          example: https://i.openfintech.io/organizations/Interkassa/icon_64.png
          title: "64"
          type: string
      title: OrganizationAttributesIcon
      type: object
    OrganizationAttributesLogo:
      description: Links to organization logos
      properties:
        "50":
          description: 50x50 logo
          example: https://i.openfintech.io/organizations/Interkassa/logo_50.png
          title: "50"
          type: string
        "100":
          description: 100x100 logo
          example: https://i.openfintech.io/organizations/Interkassa/logo_100.png
          title: "100"
          type: string
        "150":
          description: 150x150 logo
          example: https://i.openfintech.io/organizations/Interkassa/logo_150.png
          title: "150"
          type: string
      title: OrganizationAttributesLogo
      type: object
    OrganizationContacts:
      description: Organization`s contacts
      properties:
        email:
          example: support@interkassa.com
          title: email
          type: string
        fax:
          example: "1234"
          title: fax
          type: string
        phone:
          example: "380445859331"
          title: phone
          type: string
        skype:
          example: skype.ik
          title: skype
          type: string
      title: OrganizationContacts
      type: object
    OrganizationHq:
      properties:
        data:
          $ref: '#/components/schemas/OrganizationHqData'
        links:
          $ref: '#/components/schemas/OrganizationHqLinks'
      title: OrganizationHq
      type: object
    OrganizationHqData:
      properties:
        id:
          description: HQ location
          example: UA
          title: id
          type: string
        type:
          example: countries
          title: type
          type: string
      title: OrganizationHqData
      type: object
    OrganizationHqLinks:
      properties:
        related:
          example: /v1/organizations/org_lK1mIKXO1kHOrTeJ/hq_in_country
          title: related
          type: string
      title: OrganizationHqLinks
      type: object
    OrganizationRelationships:
      properties:
        active_in_countries:
          $ref: '#/components/schemas/OrganizationActive'
        hq_in_country:
          $ref: '#/components/schemas/OrganizationHq'
        source_register_org:
          $ref: '#/components/schemas/OrganizationSource'
      title: OrganizationRelationships
      type: object
    OrganizationResponse:
      properties:
        data:
          $ref: '#/components/schemas/Organization'
      title: OrganizationResponse
      type: object
    OrganizationSocial:
      description: Social profiles
      properties:
        facebook:
          example: none
          title: facebook
          type: string
        google_plus:
          example: none
          title: google_plus
          type: string
        linked_in:
          example: none
          title: linked_in
          type: string
        twitter:
          example: none
          title: twitter
          type: string
        vkontakte:
          example: none
          title: vkontakte
          type: string
      title: OrganizationSocial
      type: object
    OrganizationSource:
      properties:
        data:
          $ref: '#/components/schemas/OrganizationSourceData'
        links:
          $ref: '#/components/schemas/OrganizationSourceLinks'
      title: OrganizationSource
      type: object
    OrganizationSourceData:
      properties:
        id:
          title: id
          type: string
        type:
          title: type
          type: string
      title: OrganizationSourceData
      type: object
    OrganizationSourceLinks:
      properties:
        related:
          example: /v1/organizations/org_lK1mIKXO1kHOrTeJ/source_register_org
          title: related
          type: string
      title: OrganizationSourceLinks
      type: object
    OrganizationsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Organization'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/ResponseLinks'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      title: OrganizationsResponse
      type: object
    PaymentMethod:
      properties:
        attributes:
          $ref: '#/components/schemas/PaymentMethodAttributes'
        id:
          description: Payment-methods`s ID
          example: paym_8NBX4V5fAEmqr3PO
          title: id
          type: string
        links:
          $ref: '#/components/schemas/SelfLinks'
        relationships:
          $ref: '#/components/schemas/PaymentMethodRelationships'
        type:
          example: payment-methods
          title: type
          type: string
      title: PaymentMethod
      type: object
    PaymentMethodAttributes:
      description: Array of Payment-method attributes
      properties:
        category:
          example: wallet
          title: category
          type: string
        code:
          description: Payment-method`s code
          example: justpayewallet
          title: code
          type: string
        name:
          description: Payment-method`s name
          example: TOT Just Pay
          title: name
          type: string
        processor_name:
          description: Payment-method`s processor
          example: TOT Just Pay
          title: processor_name
          type: string
      title: PaymentMethodAttributes
      type: object
    PaymentMethodCurrencies:
      properties:
        data:
          items:
            type: string
          title: data
          type: array
        links:
          $ref: '#/components/schemas/PaymentMethodCurrenciesLinks'
      title: PaymentMethodCurrencies
      type: object
    PaymentMethodCurrenciesLinks:
      properties:
        related:
          example: /v1/payment-methods/pm_QcW80uZ5XefiQYwp/payment-processor
          title: related
          type: string
      title: PaymentMethodCurrenciesLinks
      type: object
    PaymentMethodProcessor:
      description: Payment-method issuer.
      properties:
        data:
          $ref: '#/components/schemas/PaymentMethodProcessorData'
        links:
          $ref: '#/components/schemas/PaymentMethodProcessorLinks'
      title: PaymentMethodProcessor
      type: object
    PaymentMethodProcessorData:
      description: Processor`s Data.
      properties:
        id:
          description: Processor`s id.
          example: ppr_zkqg6xJKCIoWjBB9
          title: id
          type: string
        type:
          description: Processor`s type.
          example: payment-method-issuer
          title: type
          type: string
      title: PaymentMethodProcessorData
      type: object
    PaymentMethodProcessorLinks:
      properties:
        related:
          example: /v1/payment-methods/paym_8NBX4V5fAEmqr3PO/payment-processor
          title: related
          type: string
      title: PaymentMethodProcessorLinks
      type: object
    PaymentMethodRelationships:
      properties:
        currencies:
          $ref: '#/components/schemas/PaymentMethodCurrencies'
        payment-processor:
          $ref: '#/components/schemas/PaymentMethodProcessor'
      title: PaymentMethodRelationships
      type: object
    PaymentMethodResponse:
      properties:
        data:
          $ref: '#/components/schemas/PaymentMethod'
      title: PaymentMethodResponse
      type: object
    PaymentMethodsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PaymentMethod'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/ResponseLinks'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      title: PaymentMethodsResponse
      type: object
    PaymentProvider:
      properties:
        attributes:
          $ref: '#/components/schemas/PaymentProviderAttributes'
        id:
          description: Payment-provider`s ID
          example: psp_f9VUSVUhsl7Rm0JD
          title: id
          type: string
        links:
          $ref: '#/components/schemas/SelfLinks'
        relationships:
          $ref: '#/components/schemas/PaymentProviderRelationships'
        type:
          example: payment-providers
          title: type
          type: string
      title: PaymentProvider
      type: object
    PaymentProviderAttributes:
      description: Array of Payment-provider attributes
      properties:
        code:
          description: Payment-provider`s code
          example: Interkassa
          title: code
          type: string
        features:
          example: "[ \"multi_currency\" ]"
          items:
            type: string
          title: features
          type: array
        name:
          description: Payment-provider`s name
          example: interkassa
          title: name
          type: string
        sales_channels:
          example: "[ \"e_commerce\" ]"
          items:
            type: string
          title: sales_channels
          type: array
        types:
          example: |-
            [
              "aggregator"
            ]
          items:
            type: string
          title: types
          type: array
      title: PaymentProviderAttributes
      type: object
    PaymentProviderOrganization:
      properties:
        data:
          $ref: '#/components/schemas/PaymentProviderOrganizationData'
        links:
          $ref: '#/components/schemas/PaymentProviderOrganizationLinks'
      title: PaymentProviderOrganization
      type: object
    PaymentProviderOrganizationData:
      properties:
        id:
          description: Organization`s ID
          example: org_lK1mIKXO1kHOrTeJ
          title: id
          type: string
        type:
          example: organizations
          title: type
          type: string
      title: PaymentProviderOrganizationData
      type: object
    PaymentProviderOrganizationLinks:
      properties:
        related:
          example: /v1/payment-providers/psp_f9VUSVUhsl7Rm0JD/organization
          title: related
          type: string
      title: PaymentProviderOrganizationLinks
      type: object
    PaymentProviderPaymentMethods:
      properties:
        data:
          example: []
          items:
            type: string
          title: data
          type: array
        links:
          $ref: '#/components/schemas/PaymentProviderPaymentMethodsLinks'
      title: PaymentProviderPaymentMethods
      type: object
    PaymentProviderPaymentMethodsLinks:
      properties:
        related:
          example: /v1/payment-providers/psp_f9VUSVUhsl7Rm0JD/payment-methods
          title: related
          type: string
      title: PaymentProviderPaymentMethodsLinks
      type: object
    PaymentProviderRelationships:
      properties:
        organization:
          $ref: '#/components/schemas/PaymentProviderOrganization'
        payment-methods:
          $ref: '#/components/schemas/PaymentProviderPaymentMethods'
      title: PaymentProviderRelationships
      type: object
    PaymentProviderResponse:
      properties:
        data:
          $ref: '#/components/schemas/PaymentProvider'
      title: PaymentProviderResponse
      type: object
    PaymentProvidersResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PaymentProvider'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/ResponseLinks'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      title: PaymentProvidersResponse
      type: object
    ResponseLinks:
      properties:
        first:
          description: first page of query
          example: "/v1/{path}?page[number]=1&page[size]=10"
          title: first
          type: string
        last:
          description: last page of query
          example: "/v1/{path}?page[number]=42&page[size]=10"
          title: last
          type: string
        next:
          description: next page in query
          example: "/v1/{path}?page[number]=41&page[size]=10"
          title: next
          type: string
        prev:
          description: previous page in query
          example: "/v1/{path}?page[number]=39&page[size]=10"
          title: prev
          type: string
      required:
      - first
      - last
      title: ResponseLinks
      type: object
    ResponseMeta:
      properties:
        pages:
          description: total pages
          example: 42
          title: pages
          type: integer
        total:
          description: total objects in query
          example: 419
          title: total
          type: integer
      title: ResponseMeta
      type: object
    SelfLinks:
      properties:
        self:
          example: "/v1/{path}/{id}"
          title: self
          type: string
      title: SelfLinks
      type: object
    SupportedPspsRelationship:
      description: Supported psps
      properties:
        data:
          items:
            $ref: '#/components/schemas/SupportedPspsRelationship_data_inner'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/SupportedPspsRelationship_links'
      title: SupportedPspsRelationship
      type: object
    ActiveInCountriesRelationship_data_inner:
      properties:
        id:
          example: UA
          title: id
          type: string
        type:
          example: countries
          title: type
          type: string
      title: ActiveInCountriesRelationship_data_inner
      type: object
    ActiveInCountriesRelationship_links:
      properties:
        related:
          example: /v1/deposit-methods/dm_fyBYShF7DuOXzeiR/active_in_countries
          title: related
          type: string
      title: ActiveInCountriesRelationship_links
      type: object
    DepositMethodProcessorData_data_inner:
      properties:
        id:
          description: Processor`s id.
          example: ppr_zkqg6xJKCIoWjBB9
          title: id
          type: string
        type:
          description: Processor`s type.
          example: organizations
          title: type
          type: string
      title: DepositMethodProcessorData_data_inner
      type: object
    DepositMethodProcessorData_links:
      properties:
        related:
          example: /v1/payment-methods/pm_QcW80uZ5XefiQYwp/payment-processor
          title: related
          type: string
      title: DepositMethodProcessorData_links
      type: object
    SupportedPspsRelationship_data_inner:
      properties:
        id:
          example: psp_xhaKgsBvEUZzWGIP
          title: id
          type: string
        type:
          example: payment-providers
          title: type
          type: string
      title: SupportedPspsRelationship_data_inner
      type: object
    SupportedPspsRelationship_links:
      properties:
        related:
          example: /v1/deposit-methods/dm_fyBYShF7DuOXzeiR/supported_psps
          title: related
          type: string
      title: SupportedPspsRelationship_links
      type: object
x-original-swagger-version: "2.0"
