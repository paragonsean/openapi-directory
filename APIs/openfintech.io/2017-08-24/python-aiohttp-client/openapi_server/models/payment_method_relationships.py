# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payment_method_currencies import PaymentMethodCurrencies
from openapi_server.models.payment_method_processor import PaymentMethodProcessor
from openapi_server import util


class PaymentMethodRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currencies: PaymentMethodCurrencies=None, payment_processor: PaymentMethodProcessor=None):
        """PaymentMethodRelationships - a model defined in OpenAPI

        :param currencies: The currencies of this PaymentMethodRelationships.
        :param payment_processor: The payment_processor of this PaymentMethodRelationships.
        """
        self.openapi_types = {
            'currencies': PaymentMethodCurrencies,
            'payment_processor': PaymentMethodProcessor
        }

        self.attribute_map = {
            'currencies': 'currencies',
            'payment_processor': 'payment-processor'
        }

        self._currencies = currencies
        self._payment_processor = payment_processor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentMethodRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentMethodRelationships of this PaymentMethodRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currencies(self):
        """Gets the currencies of this PaymentMethodRelationships.


        :return: The currencies of this PaymentMethodRelationships.
        :rtype: PaymentMethodCurrencies
        """
        return self._currencies

    @currencies.setter
    def currencies(self, currencies):
        """Sets the currencies of this PaymentMethodRelationships.


        :param currencies: The currencies of this PaymentMethodRelationships.
        :type currencies: PaymentMethodCurrencies
        """

        self._currencies = currencies

    @property
    def payment_processor(self):
        """Gets the payment_processor of this PaymentMethodRelationships.


        :return: The payment_processor of this PaymentMethodRelationships.
        :rtype: PaymentMethodProcessor
        """
        return self._payment_processor

    @payment_processor.setter
    def payment_processor(self, payment_processor):
        """Sets the payment_processor of this PaymentMethodRelationships.


        :param payment_processor: The payment_processor of this PaymentMethodRelationships.
        :type payment_processor: PaymentMethodProcessor
        """

        self._payment_processor = payment_processor
