# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CurrencyAttributesIcon(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _16: str=None, _32: str=None, _64: str=None):
        """CurrencyAttributesIcon - a model defined in OpenAPI

        :param _16: The _16 of this CurrencyAttributesIcon.
        :param _32: The _32 of this CurrencyAttributesIcon.
        :param _64: The _64 of this CurrencyAttributesIcon.
        """
        self.openapi_types = {
            '_16': str,
            '_32': str,
            '_64': str
        }

        self.attribute_map = {
            '_16': '16',
            '_32': '32',
            '_64': '64'
        }

        self.__16 = _16
        self.__32 = _32
        self.__64 = _64

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CurrencyAttributesIcon':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CurrencyAttributesIcon of this CurrencyAttributesIcon.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _16(self):
        """Gets the _16 of this CurrencyAttributesIcon.

        16x16 icon

        :return: The _16 of this CurrencyAttributesIcon.
        :rtype: str
        """
        return self.__16

    @_16.setter
    def _16(self, _16):
        """Sets the _16 of this CurrencyAttributesIcon.

        16x16 icon

        :param _16: The _16 of this CurrencyAttributesIcon.
        :type _16: str
        """

        self.__16 = _16

    @property
    def _32(self):
        """Gets the _32 of this CurrencyAttributesIcon.

        32x32 icon

        :return: The _32 of this CurrencyAttributesIcon.
        :rtype: str
        """
        return self.__32

    @_32.setter
    def _32(self, _32):
        """Sets the _32 of this CurrencyAttributesIcon.

        32x32 icon

        :param _32: The _32 of this CurrencyAttributesIcon.
        :type _32: str
        """

        self.__32 = _32

    @property
    def _64(self):
        """Gets the _64 of this CurrencyAttributesIcon.

        64x64 icon

        :return: The _64 of this CurrencyAttributesIcon.
        :rtype: str
        """
        return self.__64

    @_64.setter
    def _64(self, _64):
        """Sets the _64 of this CurrencyAttributesIcon.

        64x64 icon

        :param _64: The _64 of this CurrencyAttributesIcon.
        :type _64: str
        """

        self.__64 = _64
