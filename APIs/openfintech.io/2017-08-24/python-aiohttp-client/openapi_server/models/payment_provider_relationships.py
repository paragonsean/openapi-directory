# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payment_provider_organization import PaymentProviderOrganization
from openapi_server.models.payment_provider_payment_methods import PaymentProviderPaymentMethods
from openapi_server import util


class PaymentProviderRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, organization: PaymentProviderOrganization=None, payment_methods: PaymentProviderPaymentMethods=None):
        """PaymentProviderRelationships - a model defined in OpenAPI

        :param organization: The organization of this PaymentProviderRelationships.
        :param payment_methods: The payment_methods of this PaymentProviderRelationships.
        """
        self.openapi_types = {
            'organization': PaymentProviderOrganization,
            'payment_methods': PaymentProviderPaymentMethods
        }

        self.attribute_map = {
            'organization': 'organization',
            'payment_methods': 'payment-methods'
        }

        self._organization = organization
        self._payment_methods = payment_methods

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentProviderRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentProviderRelationships of this PaymentProviderRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organization(self):
        """Gets the organization of this PaymentProviderRelationships.


        :return: The organization of this PaymentProviderRelationships.
        :rtype: PaymentProviderOrganization
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this PaymentProviderRelationships.


        :param organization: The organization of this PaymentProviderRelationships.
        :type organization: PaymentProviderOrganization
        """

        self._organization = organization

    @property
    def payment_methods(self):
        """Gets the payment_methods of this PaymentProviderRelationships.


        :return: The payment_methods of this PaymentProviderRelationships.
        :rtype: PaymentProviderPaymentMethods
        """
        return self._payment_methods

    @payment_methods.setter
    def payment_methods(self, payment_methods):
        """Sets the payment_methods of this PaymentProviderRelationships.


        :param payment_methods: The payment_methods of this PaymentProviderRelationships.
        :type payment_methods: PaymentProviderPaymentMethods
        """

        self._payment_methods = payment_methods
