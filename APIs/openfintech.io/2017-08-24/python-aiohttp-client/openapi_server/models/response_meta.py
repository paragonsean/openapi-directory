# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pages: int=None, total: int=None):
        """ResponseMeta - a model defined in OpenAPI

        :param pages: The pages of this ResponseMeta.
        :param total: The total of this ResponseMeta.
        """
        self.openapi_types = {
            'pages': int,
            'total': int
        }

        self.attribute_map = {
            'pages': 'pages',
            'total': 'total'
        }

        self._pages = pages
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseMeta of this ResponseMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pages(self):
        """Gets the pages of this ResponseMeta.

        total pages

        :return: The pages of this ResponseMeta.
        :rtype: int
        """
        return self._pages

    @pages.setter
    def pages(self, pages):
        """Sets the pages of this ResponseMeta.

        total pages

        :param pages: The pages of this ResponseMeta.
        :type pages: int
        """

        self._pages = pages

    @property
    def total(self):
        """Gets the total of this ResponseMeta.

        total objects in query

        :return: The total of this ResponseMeta.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this ResponseMeta.

        total objects in query

        :param total: The total of this ResponseMeta.
        :type total: int
        """

        self._total = total
