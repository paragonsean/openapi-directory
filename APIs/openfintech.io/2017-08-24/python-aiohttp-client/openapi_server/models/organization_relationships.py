# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.organization_active import OrganizationActive
from openapi_server.models.organization_hq import OrganizationHq
from openapi_server.models.organization_source import OrganizationSource
from openapi_server import util


class OrganizationRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_in_countries: OrganizationActive=None, hq_in_country: OrganizationHq=None, source_register_org: OrganizationSource=None):
        """OrganizationRelationships - a model defined in OpenAPI

        :param active_in_countries: The active_in_countries of this OrganizationRelationships.
        :param hq_in_country: The hq_in_country of this OrganizationRelationships.
        :param source_register_org: The source_register_org of this OrganizationRelationships.
        """
        self.openapi_types = {
            'active_in_countries': OrganizationActive,
            'hq_in_country': OrganizationHq,
            'source_register_org': OrganizationSource
        }

        self.attribute_map = {
            'active_in_countries': 'active_in_countries',
            'hq_in_country': 'hq_in_country',
            'source_register_org': 'source_register_org'
        }

        self._active_in_countries = active_in_countries
        self._hq_in_country = hq_in_country
        self._source_register_org = source_register_org

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationRelationships of this OrganizationRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_in_countries(self):
        """Gets the active_in_countries of this OrganizationRelationships.


        :return: The active_in_countries of this OrganizationRelationships.
        :rtype: OrganizationActive
        """
        return self._active_in_countries

    @active_in_countries.setter
    def active_in_countries(self, active_in_countries):
        """Sets the active_in_countries of this OrganizationRelationships.


        :param active_in_countries: The active_in_countries of this OrganizationRelationships.
        :type active_in_countries: OrganizationActive
        """

        self._active_in_countries = active_in_countries

    @property
    def hq_in_country(self):
        """Gets the hq_in_country of this OrganizationRelationships.


        :return: The hq_in_country of this OrganizationRelationships.
        :rtype: OrganizationHq
        """
        return self._hq_in_country

    @hq_in_country.setter
    def hq_in_country(self, hq_in_country):
        """Sets the hq_in_country of this OrganizationRelationships.


        :param hq_in_country: The hq_in_country of this OrganizationRelationships.
        :type hq_in_country: OrganizationHq
        """

        self._hq_in_country = hq_in_country

    @property
    def source_register_org(self):
        """Gets the source_register_org of this OrganizationRelationships.


        :return: The source_register_org of this OrganizationRelationships.
        :rtype: OrganizationSource
        """
        return self._source_register_org

    @source_register_org.setter
    def source_register_org(self, source_register_org):
        """Sets the source_register_org of this OrganizationRelationships.


        :param source_register_org: The source_register_org of this OrganizationRelationships.
        :type source_register_org: OrganizationSource
        """

        self._source_register_org = source_register_org
