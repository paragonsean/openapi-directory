# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExchangerAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, rates_export_standard: str=None, rates_export_url: str=None, status: str=None, wmid: int=None):
        """ExchangerAttributes - a model defined in OpenAPI

        :param name: The name of this ExchangerAttributes.
        :param rates_export_standard: The rates_export_standard of this ExchangerAttributes.
        :param rates_export_url: The rates_export_url of this ExchangerAttributes.
        :param status: The status of this ExchangerAttributes.
        :param wmid: The wmid of this ExchangerAttributes.
        """
        self.openapi_types = {
            'name': str,
            'rates_export_standard': str,
            'rates_export_url': str,
            'status': str,
            'wmid': int
        }

        self.attribute_map = {
            'name': 'name',
            'rates_export_standard': 'rates_export_standard',
            'rates_export_url': 'rates_export_url',
            'status': 'status',
            'wmid': 'wmid'
        }

        self._name = name
        self._rates_export_standard = rates_export_standard
        self._rates_export_url = rates_export_url
        self._status = status
        self._wmid = wmid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExchangerAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExchangerAttributes of this ExchangerAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ExchangerAttributes.

        Exchanger`s name

        :return: The name of this ExchangerAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ExchangerAttributes.

        Exchanger`s name

        :param name: The name of this ExchangerAttributes.
        :type name: str
        """

        self._name = name

    @property
    def rates_export_standard(self):
        """Gets the rates_export_standard of this ExchangerAttributes.


        :return: The rates_export_standard of this ExchangerAttributes.
        :rtype: str
        """
        return self._rates_export_standard

    @rates_export_standard.setter
    def rates_export_standard(self, rates_export_standard):
        """Sets the rates_export_standard of this ExchangerAttributes.


        :param rates_export_standard: The rates_export_standard of this ExchangerAttributes.
        :type rates_export_standard: str
        """

        self._rates_export_standard = rates_export_standard

    @property
    def rates_export_url(self):
        """Gets the rates_export_url of this ExchangerAttributes.


        :return: The rates_export_url of this ExchangerAttributes.
        :rtype: str
        """
        return self._rates_export_url

    @rates_export_url.setter
    def rates_export_url(self, rates_export_url):
        """Sets the rates_export_url of this ExchangerAttributes.


        :param rates_export_url: The rates_export_url of this ExchangerAttributes.
        :type rates_export_url: str
        """

        self._rates_export_url = rates_export_url

    @property
    def status(self):
        """Gets the status of this ExchangerAttributes.

        Exchanger`s status [active, blocked, deleted]

        :return: The status of this ExchangerAttributes.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ExchangerAttributes.

        Exchanger`s status [active, blocked, deleted]

        :param status: The status of this ExchangerAttributes.
        :type status: str
        """

        self._status = status

    @property
    def wmid(self):
        """Gets the wmid of this ExchangerAttributes.

        Exchanger`s WebMoney ID

        :return: The wmid of this ExchangerAttributes.
        :rtype: int
        """
        return self._wmid

    @wmid.setter
    def wmid(self, wmid):
        """Sets the wmid of this ExchangerAttributes.

        Exchanger`s WebMoney ID

        :param wmid: The wmid of this ExchangerAttributes.
        :type wmid: int
        """

        self._wmid = wmid
