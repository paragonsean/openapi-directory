# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrganizationAttributesLogo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _50: str=None, _100: str=None, _150: str=None):
        """OrganizationAttributesLogo - a model defined in OpenAPI

        :param _50: The _50 of this OrganizationAttributesLogo.
        :param _100: The _100 of this OrganizationAttributesLogo.
        :param _150: The _150 of this OrganizationAttributesLogo.
        """
        self.openapi_types = {
            '_50': str,
            '_100': str,
            '_150': str
        }

        self.attribute_map = {
            '_50': '50',
            '_100': '100',
            '_150': '150'
        }

        self.__50 = _50
        self.__100 = _100
        self.__150 = _150

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationAttributesLogo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationAttributesLogo of this OrganizationAttributesLogo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _50(self):
        """Gets the _50 of this OrganizationAttributesLogo.

        50x50 logo

        :return: The _50 of this OrganizationAttributesLogo.
        :rtype: str
        """
        return self.__50

    @_50.setter
    def _50(self, _50):
        """Sets the _50 of this OrganizationAttributesLogo.

        50x50 logo

        :param _50: The _50 of this OrganizationAttributesLogo.
        :type _50: str
        """

        self.__50 = _50

    @property
    def _100(self):
        """Gets the _100 of this OrganizationAttributesLogo.

        100x100 logo

        :return: The _100 of this OrganizationAttributesLogo.
        :rtype: str
        """
        return self.__100

    @_100.setter
    def _100(self, _100):
        """Sets the _100 of this OrganizationAttributesLogo.

        100x100 logo

        :param _100: The _100 of this OrganizationAttributesLogo.
        :type _100: str
        """

        self.__100 = _100

    @property
    def _150(self):
        """Gets the _150 of this OrganizationAttributesLogo.

        150x150 logo

        :return: The _150 of this OrganizationAttributesLogo.
        :rtype: str
        """
        return self.__150

    @_150.setter
    def _150(self, _150):
        """Sets the _150 of this OrganizationAttributesLogo.

        150x150 logo

        :param _150: The _150 of this OrganizationAttributesLogo.
        :type _150: str
        """

        self.__150 = _150
