# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrganizationContacts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, fax: str=None, phone: str=None, skype: str=None):
        """OrganizationContacts - a model defined in OpenAPI

        :param email: The email of this OrganizationContacts.
        :param fax: The fax of this OrganizationContacts.
        :param phone: The phone of this OrganizationContacts.
        :param skype: The skype of this OrganizationContacts.
        """
        self.openapi_types = {
            'email': str,
            'fax': str,
            'phone': str,
            'skype': str
        }

        self.attribute_map = {
            'email': 'email',
            'fax': 'fax',
            'phone': 'phone',
            'skype': 'skype'
        }

        self._email = email
        self._fax = fax
        self._phone = phone
        self._skype = skype

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationContacts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationContacts of this OrganizationContacts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this OrganizationContacts.


        :return: The email of this OrganizationContacts.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this OrganizationContacts.


        :param email: The email of this OrganizationContacts.
        :type email: str
        """

        self._email = email

    @property
    def fax(self):
        """Gets the fax of this OrganizationContacts.


        :return: The fax of this OrganizationContacts.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this OrganizationContacts.


        :param fax: The fax of this OrganizationContacts.
        :type fax: str
        """

        self._fax = fax

    @property
    def phone(self):
        """Gets the phone of this OrganizationContacts.


        :return: The phone of this OrganizationContacts.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this OrganizationContacts.


        :param phone: The phone of this OrganizationContacts.
        :type phone: str
        """

        self._phone = phone

    @property
    def skype(self):
        """Gets the skype of this OrganizationContacts.


        :return: The skype of this OrganizationContacts.
        :rtype: str
        """
        return self._skype

    @skype.setter
    def skype(self, skype):
        """Sets the skype of this OrganizationContacts.


        :param skype: The skype of this OrganizationContacts.
        :type skype: str
        """

        self._skype = skype
