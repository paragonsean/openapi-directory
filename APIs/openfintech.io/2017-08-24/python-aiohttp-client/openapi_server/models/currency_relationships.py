# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency_countries import CurrencyCountries
from openapi_server.models.currency_issuer import CurrencyIssuer
from openapi_server.models.currency_issuer_organization import CurrencyIssuerOrganization
from openapi_server.models.currency_parent import CurrencyParent
from openapi_server import util


class CurrencyRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, countries: CurrencyCountries=None, issuer: CurrencyIssuer=None, issuer_organization: CurrencyIssuerOrganization=None, parent: CurrencyParent=None):
        """CurrencyRelationships - a model defined in OpenAPI

        :param countries: The countries of this CurrencyRelationships.
        :param issuer: The issuer of this CurrencyRelationships.
        :param issuer_organization: The issuer_organization of this CurrencyRelationships.
        :param parent: The parent of this CurrencyRelationships.
        """
        self.openapi_types = {
            'countries': CurrencyCountries,
            'issuer': CurrencyIssuer,
            'issuer_organization': CurrencyIssuerOrganization,
            'parent': CurrencyParent
        }

        self.attribute_map = {
            'countries': 'countries',
            'issuer': 'issuer',
            'issuer_organization': 'issuer_organization',
            'parent': 'parent'
        }

        self._countries = countries
        self._issuer = issuer
        self._issuer_organization = issuer_organization
        self._parent = parent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CurrencyRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CurrencyRelationships of this CurrencyRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def countries(self):
        """Gets the countries of this CurrencyRelationships.


        :return: The countries of this CurrencyRelationships.
        :rtype: CurrencyCountries
        """
        return self._countries

    @countries.setter
    def countries(self, countries):
        """Sets the countries of this CurrencyRelationships.


        :param countries: The countries of this CurrencyRelationships.
        :type countries: CurrencyCountries
        """

        self._countries = countries

    @property
    def issuer(self):
        """Gets the issuer of this CurrencyRelationships.


        :return: The issuer of this CurrencyRelationships.
        :rtype: CurrencyIssuer
        """
        return self._issuer

    @issuer.setter
    def issuer(self, issuer):
        """Sets the issuer of this CurrencyRelationships.


        :param issuer: The issuer of this CurrencyRelationships.
        :type issuer: CurrencyIssuer
        """

        self._issuer = issuer

    @property
    def issuer_organization(self):
        """Gets the issuer_organization of this CurrencyRelationships.


        :return: The issuer_organization of this CurrencyRelationships.
        :rtype: CurrencyIssuerOrganization
        """
        return self._issuer_organization

    @issuer_organization.setter
    def issuer_organization(self, issuer_organization):
        """Sets the issuer_organization of this CurrencyRelationships.


        :param issuer_organization: The issuer_organization of this CurrencyRelationships.
        :type issuer_organization: CurrencyIssuerOrganization
        """

        self._issuer_organization = issuer_organization

    @property
    def parent(self):
        """Gets the parent of this CurrencyRelationships.


        :return: The parent of this CurrencyRelationships.
        :rtype: CurrencyParent
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this CurrencyRelationships.


        :param parent: The parent of this CurrencyRelationships.
        :type parent: CurrencyParent
        """

        self._parent = parent
