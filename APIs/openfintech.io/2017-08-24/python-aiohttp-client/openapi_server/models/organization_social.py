# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrganizationSocial(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, facebook: str=None, google_plus: str=None, linked_in: str=None, twitter: str=None, vkontakte: str=None):
        """OrganizationSocial - a model defined in OpenAPI

        :param facebook: The facebook of this OrganizationSocial.
        :param google_plus: The google_plus of this OrganizationSocial.
        :param linked_in: The linked_in of this OrganizationSocial.
        :param twitter: The twitter of this OrganizationSocial.
        :param vkontakte: The vkontakte of this OrganizationSocial.
        """
        self.openapi_types = {
            'facebook': str,
            'google_plus': str,
            'linked_in': str,
            'twitter': str,
            'vkontakte': str
        }

        self.attribute_map = {
            'facebook': 'facebook',
            'google_plus': 'google_plus',
            'linked_in': 'linked_in',
            'twitter': 'twitter',
            'vkontakte': 'vkontakte'
        }

        self._facebook = facebook
        self._google_plus = google_plus
        self._linked_in = linked_in
        self._twitter = twitter
        self._vkontakte = vkontakte

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationSocial':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationSocial of this OrganizationSocial.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def facebook(self):
        """Gets the facebook of this OrganizationSocial.


        :return: The facebook of this OrganizationSocial.
        :rtype: str
        """
        return self._facebook

    @facebook.setter
    def facebook(self, facebook):
        """Sets the facebook of this OrganizationSocial.


        :param facebook: The facebook of this OrganizationSocial.
        :type facebook: str
        """

        self._facebook = facebook

    @property
    def google_plus(self):
        """Gets the google_plus of this OrganizationSocial.


        :return: The google_plus of this OrganizationSocial.
        :rtype: str
        """
        return self._google_plus

    @google_plus.setter
    def google_plus(self, google_plus):
        """Sets the google_plus of this OrganizationSocial.


        :param google_plus: The google_plus of this OrganizationSocial.
        :type google_plus: str
        """

        self._google_plus = google_plus

    @property
    def linked_in(self):
        """Gets the linked_in of this OrganizationSocial.


        :return: The linked_in of this OrganizationSocial.
        :rtype: str
        """
        return self._linked_in

    @linked_in.setter
    def linked_in(self, linked_in):
        """Sets the linked_in of this OrganizationSocial.


        :param linked_in: The linked_in of this OrganizationSocial.
        :type linked_in: str
        """

        self._linked_in = linked_in

    @property
    def twitter(self):
        """Gets the twitter of this OrganizationSocial.


        :return: The twitter of this OrganizationSocial.
        :rtype: str
        """
        return self._twitter

    @twitter.setter
    def twitter(self, twitter):
        """Sets the twitter of this OrganizationSocial.


        :param twitter: The twitter of this OrganizationSocial.
        :type twitter: str
        """

        self._twitter = twitter

    @property
    def vkontakte(self):
        """Gets the vkontakte of this OrganizationSocial.


        :return: The vkontakte of this OrganizationSocial.
        :rtype: str
        """
        return self._vkontakte

    @vkontakte.setter
    def vkontakte(self, vkontakte):
        """Sets the vkontakte of this OrganizationSocial.


        :param vkontakte: The vkontakte of this OrganizationSocial.
        :type vkontakte: str
        """

        self._vkontakte = vkontakte
