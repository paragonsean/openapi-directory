/*
 * vs API
 * # Introduction This API returns data regarding almost all nouns in vedic literature. The results are JSON objects that contain the word transliterated to the Roman script, the word in the Nagari script, the meaning of the word, and the category the word belongs to. Proper nouns are not included (yet).  The API uses the Swagger 2.0 specification.  # Authentication This is an open API.  # Try it out This sandbox can be used to get data for only one kind of resource, that is, to fetch data for a string contained in the meaning of any of the words.  The remaining resources work a similar fashion. For details, see the reference documentation. 
 *
 * The version of the OpenAPI document: 1.2
 * Contact: ab.techwriter@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for resourcesGet
     * @param description The string you are looking for in the word meaning, for example, chariot. Wildcards are allowed, for example, char\\*. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Entries fetched. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> No such string exists in this API. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call resourcesGetCall(String description, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/resources";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (description != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("description", description));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call resourcesGetValidateBeforeCall(String description, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'description' is set
        if (description == null) {
            throw new ApiException("Missing the required parameter 'description' when calling resourcesGet(Async)");
        }

        return resourcesGetCall(description, _callback);

    }

    /**
     * Fetch all meanings that contain a specific English string
     * 
     * @param description The string you are looking for in the word meaning, for example, chariot. Wildcards are allowed, for example, char\\*. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Entries fetched. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> No such string exists in this API. </td><td>  -  </td></tr>
     </table>
     */
    public void resourcesGet(String description) throws ApiException {
        resourcesGetWithHttpInfo(description);
    }

    /**
     * Fetch all meanings that contain a specific English string
     * 
     * @param description The string you are looking for in the word meaning, for example, chariot. Wildcards are allowed, for example, char\\*. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Entries fetched. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> No such string exists in this API. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> resourcesGetWithHttpInfo(String description) throws ApiException {
        okhttp3.Call localVarCall = resourcesGetValidateBeforeCall(description, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Fetch all meanings that contain a specific English string (asynchronously)
     * 
     * @param description The string you are looking for in the word meaning, for example, chariot. Wildcards are allowed, for example, char\\*. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Entries fetched. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> No such string exists in this API. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call resourcesGetAsync(String description, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = resourcesGetValidateBeforeCall(description, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
