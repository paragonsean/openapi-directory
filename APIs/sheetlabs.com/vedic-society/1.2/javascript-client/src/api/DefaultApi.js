/**
 * vs API
 * # Introduction This API returns data regarding almost all nouns in vedic literature. The results are JSON objects that contain the word transliterated to the Roman script, the word in the Nagari script, the meaning of the word, and the category the word belongs to. Proper nouns are not included (yet).  The API uses the Swagger 2.0 specification.  # Authentication This is an open API.  # Try it out This sandbox can be used to get data for only one kind of resource, that is, to fetch data for a string contained in the meaning of any of the words.  The remaining resources work a similar fashion. For details, see the reference documentation. 
 *
 * The version of the OpenAPI document: 1.2
 * Contact: ab.techwriter@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Default service.
* @module api/DefaultApi
* @version 1.2
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the resourcesGet operation.
     * @callback module:api/DefaultApi~resourcesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch all meanings that contain a specific English string
     * @param {String} description The string you are looking for in the word meaning, for example, chariot. Wildcards are allowed, for example, char\\*.
     * @param {module:api/DefaultApi~resourcesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    resourcesGet(description, callback) {
      let postBody = null;
      // verify the required parameter 'description' is set
      if (description === undefined || description === null) {
        throw new Error("Missing the required parameter 'description' when calling resourcesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'description': description
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/resources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
