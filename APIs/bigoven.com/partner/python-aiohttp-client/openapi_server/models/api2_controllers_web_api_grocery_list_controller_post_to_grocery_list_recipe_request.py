# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, department: str=None, name: str=None, notes: str=None, quantity: str=None, unit: str=None):
        """API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest - a model defined in OpenAPI

        :param department: The department of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :param name: The name of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :param notes: The notes of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :param quantity: The quantity of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :param unit: The unit of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        """
        self.openapi_types = {
            'department': str,
            'name': str,
            'notes': str,
            'quantity': str,
            'unit': str
        }

        self.attribute_map = {
            'department': 'department',
            'name': 'name',
            'notes': 'notes',
            'quantity': 'quantity',
            'unit': 'unit'
        }

        self._department = department
        self._name = name
        self._notes = notes
        self._quantity = quantity
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The API2.Controllers.WebAPI.GroceryListController.PostToGroceryListRecipeRequest of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def department(self):
        """Gets the department of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.

        Gets or sets the department.

        :return: The department of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.

        Gets or sets the department.

        :param department: The department of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :type department: str
        """

        self._department = department

    @property
    def name(self):
        """Gets the name of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.

        Gets or sets the name.

        :return: The name of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.

        Gets or sets the name.

        :param name: The name of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :type name: str
        """

        self._name = name

    @property
    def notes(self):
        """Gets the notes of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.

        Gets or sets the notes.

        :return: The notes of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.

        Gets or sets the notes.

        :param notes: The notes of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :type notes: str
        """

        self._notes = notes

    @property
    def quantity(self):
        """Gets the quantity of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.

        Gets or sets the quantity.

        :return: The quantity of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.

        Gets or sets the quantity.

        :param quantity: The quantity of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :type quantity: str
        """

        self._quantity = quantity

    @property
    def unit(self):
        """Gets the unit of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.

        Gets or sets the unit.

        :return: The unit of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.

        Gets or sets the unit.

        :param unit: The unit of this API2ControllersWebAPIGroceryListControllerPostToGroceryListRecipeRequest.
        :type unit: str
        """

        self._unit = unit
