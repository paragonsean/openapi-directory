# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api2_models_counts import API2ModelsCounts
from openapi_server import util


class API2ModelsProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, about_me: str=None, background_url: str=None, counts: API2ModelsCounts=None, first_name: str=None, full_name: str=None, home_url: str=None, last_name: str=None, photo_url: str=None, user_id: int=None, user_name: str=None):
        """API2ModelsProfile - a model defined in OpenAPI

        :param about_me: The about_me of this API2ModelsProfile.
        :param background_url: The background_url of this API2ModelsProfile.
        :param counts: The counts of this API2ModelsProfile.
        :param first_name: The first_name of this API2ModelsProfile.
        :param full_name: The full_name of this API2ModelsProfile.
        :param home_url: The home_url of this API2ModelsProfile.
        :param last_name: The last_name of this API2ModelsProfile.
        :param photo_url: The photo_url of this API2ModelsProfile.
        :param user_id: The user_id of this API2ModelsProfile.
        :param user_name: The user_name of this API2ModelsProfile.
        """
        self.openapi_types = {
            'about_me': str,
            'background_url': str,
            'counts': API2ModelsCounts,
            'first_name': str,
            'full_name': str,
            'home_url': str,
            'last_name': str,
            'photo_url': str,
            'user_id': int,
            'user_name': str
        }

        self.attribute_map = {
            'about_me': 'AboutMe',
            'background_url': 'BackgroundUrl',
            'counts': 'Counts',
            'first_name': 'FirstName',
            'full_name': 'FullName',
            'home_url': 'HomeUrl',
            'last_name': 'LastName',
            'photo_url': 'PhotoUrl',
            'user_id': 'UserID',
            'user_name': 'UserName'
        }

        self._about_me = about_me
        self._background_url = background_url
        self._counts = counts
        self._first_name = first_name
        self._full_name = full_name
        self._home_url = home_url
        self._last_name = last_name
        self._photo_url = photo_url
        self._user_id = user_id
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'API2ModelsProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The API2.Models.Profile of this API2ModelsProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def about_me(self):
        """Gets the about_me of this API2ModelsProfile.

        

        :return: The about_me of this API2ModelsProfile.
        :rtype: str
        """
        return self._about_me

    @about_me.setter
    def about_me(self, about_me):
        """Sets the about_me of this API2ModelsProfile.

        

        :param about_me: The about_me of this API2ModelsProfile.
        :type about_me: str
        """

        self._about_me = about_me

    @property
    def background_url(self):
        """Gets the background_url of this API2ModelsProfile.

        

        :return: The background_url of this API2ModelsProfile.
        :rtype: str
        """
        return self._background_url

    @background_url.setter
    def background_url(self, background_url):
        """Sets the background_url of this API2ModelsProfile.

        

        :param background_url: The background_url of this API2ModelsProfile.
        :type background_url: str
        """

        self._background_url = background_url

    @property
    def counts(self):
        """Gets the counts of this API2ModelsProfile.


        :return: The counts of this API2ModelsProfile.
        :rtype: API2ModelsCounts
        """
        return self._counts

    @counts.setter
    def counts(self, counts):
        """Sets the counts of this API2ModelsProfile.


        :param counts: The counts of this API2ModelsProfile.
        :type counts: API2ModelsCounts
        """

        self._counts = counts

    @property
    def first_name(self):
        """Gets the first_name of this API2ModelsProfile.

        

        :return: The first_name of this API2ModelsProfile.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this API2ModelsProfile.

        

        :param first_name: The first_name of this API2ModelsProfile.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def full_name(self):
        """Gets the full_name of this API2ModelsProfile.

        

        :return: The full_name of this API2ModelsProfile.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this API2ModelsProfile.

        

        :param full_name: The full_name of this API2ModelsProfile.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def home_url(self):
        """Gets the home_url of this API2ModelsProfile.

        

        :return: The home_url of this API2ModelsProfile.
        :rtype: str
        """
        return self._home_url

    @home_url.setter
    def home_url(self, home_url):
        """Sets the home_url of this API2ModelsProfile.

        

        :param home_url: The home_url of this API2ModelsProfile.
        :type home_url: str
        """

        self._home_url = home_url

    @property
    def last_name(self):
        """Gets the last_name of this API2ModelsProfile.

        

        :return: The last_name of this API2ModelsProfile.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this API2ModelsProfile.

        

        :param last_name: The last_name of this API2ModelsProfile.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def photo_url(self):
        """Gets the photo_url of this API2ModelsProfile.

        

        :return: The photo_url of this API2ModelsProfile.
        :rtype: str
        """
        return self._photo_url

    @photo_url.setter
    def photo_url(self, photo_url):
        """Sets the photo_url of this API2ModelsProfile.

        

        :param photo_url: The photo_url of this API2ModelsProfile.
        :type photo_url: str
        """

        self._photo_url = photo_url

    @property
    def user_id(self):
        """Gets the user_id of this API2ModelsProfile.

        

        :return: The user_id of this API2ModelsProfile.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this API2ModelsProfile.

        

        :param user_id: The user_id of this API2ModelsProfile.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def user_name(self):
        """Gets the user_name of this API2ModelsProfile.

        

        :return: The user_name of this API2ModelsProfile.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this API2ModelsProfile.

        

        :param user_name: The user_name of this API2ModelsProfile.
        :type user_name: str
        """

        self._user_name = user_name
