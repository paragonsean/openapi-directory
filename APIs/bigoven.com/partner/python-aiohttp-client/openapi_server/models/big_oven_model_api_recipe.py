# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.big_oven_model_api_ingredient import BigOvenModelAPIIngredient
from openapi_server.models.big_oven_model_api_nutrition_info import BigOvenModelAPINutritionInfo
from openapi_server.models.big_oven_model_api_user_info import BigOvenModelAPIUserInfo
from openapi_server import util


class BigOvenModelAPIRecipe(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_minutes: int=None, ad_tags: str=None, admin_boost: int=None, all_categories_text: str=None, bookmark_image_url: str=None, bookmark_site_logo: str=None, bookmark_url: str=None, category: str=None, collection: str=None, collection_id: int=None, creation_date: datetime=None, cuisine: str=None, description: str=None, favorite_count: int=None, hero_photo_url: str=None, image_squares: List[int]=None, image_url: str=None, ingredients: List[BigOvenModelAPIIngredient]=None, ingredients_text_block: str=None, instructions: str=None, is_bookmark: bool=None, is_private: bool=None, is_recipe_scan: bool=None, is_sponsored: bool=None, last_modified: datetime=None, max_image_square: int=None, medal_count: int=None, menu_count: int=None, microcategory: str=None, notes_count: int=None, nutrition_info: BigOvenModelAPINutritionInfo=None, poster: BigOvenModelAPIUserInfo=None, primary_ingredient: str=None, recipe_id: int=None, review_count: int=None, star_rating: float=None, subcategory: str=None, title: str=None, total_minutes: int=None, variant_of_recipe_id: int=None, verified_by_class: str=None, verified_date_time: datetime=None, web_url: str=None, yield_number: float=None, yield_unit: str=None):
        """BigOvenModelAPIRecipe - a model defined in OpenAPI

        :param active_minutes: The active_minutes of this BigOvenModelAPIRecipe.
        :param ad_tags: The ad_tags of this BigOvenModelAPIRecipe.
        :param admin_boost: The admin_boost of this BigOvenModelAPIRecipe.
        :param all_categories_text: The all_categories_text of this BigOvenModelAPIRecipe.
        :param bookmark_image_url: The bookmark_image_url of this BigOvenModelAPIRecipe.
        :param bookmark_site_logo: The bookmark_site_logo of this BigOvenModelAPIRecipe.
        :param bookmark_url: The bookmark_url of this BigOvenModelAPIRecipe.
        :param category: The category of this BigOvenModelAPIRecipe.
        :param collection: The collection of this BigOvenModelAPIRecipe.
        :param collection_id: The collection_id of this BigOvenModelAPIRecipe.
        :param creation_date: The creation_date of this BigOvenModelAPIRecipe.
        :param cuisine: The cuisine of this BigOvenModelAPIRecipe.
        :param description: The description of this BigOvenModelAPIRecipe.
        :param favorite_count: The favorite_count of this BigOvenModelAPIRecipe.
        :param hero_photo_url: The hero_photo_url of this BigOvenModelAPIRecipe.
        :param image_squares: The image_squares of this BigOvenModelAPIRecipe.
        :param image_url: The image_url of this BigOvenModelAPIRecipe.
        :param ingredients: The ingredients of this BigOvenModelAPIRecipe.
        :param ingredients_text_block: The ingredients_text_block of this BigOvenModelAPIRecipe.
        :param instructions: The instructions of this BigOvenModelAPIRecipe.
        :param is_bookmark: The is_bookmark of this BigOvenModelAPIRecipe.
        :param is_private: The is_private of this BigOvenModelAPIRecipe.
        :param is_recipe_scan: The is_recipe_scan of this BigOvenModelAPIRecipe.
        :param is_sponsored: The is_sponsored of this BigOvenModelAPIRecipe.
        :param last_modified: The last_modified of this BigOvenModelAPIRecipe.
        :param max_image_square: The max_image_square of this BigOvenModelAPIRecipe.
        :param medal_count: The medal_count of this BigOvenModelAPIRecipe.
        :param menu_count: The menu_count of this BigOvenModelAPIRecipe.
        :param microcategory: The microcategory of this BigOvenModelAPIRecipe.
        :param notes_count: The notes_count of this BigOvenModelAPIRecipe.
        :param nutrition_info: The nutrition_info of this BigOvenModelAPIRecipe.
        :param poster: The poster of this BigOvenModelAPIRecipe.
        :param primary_ingredient: The primary_ingredient of this BigOvenModelAPIRecipe.
        :param recipe_id: The recipe_id of this BigOvenModelAPIRecipe.
        :param review_count: The review_count of this BigOvenModelAPIRecipe.
        :param star_rating: The star_rating of this BigOvenModelAPIRecipe.
        :param subcategory: The subcategory of this BigOvenModelAPIRecipe.
        :param title: The title of this BigOvenModelAPIRecipe.
        :param total_minutes: The total_minutes of this BigOvenModelAPIRecipe.
        :param variant_of_recipe_id: The variant_of_recipe_id of this BigOvenModelAPIRecipe.
        :param verified_by_class: The verified_by_class of this BigOvenModelAPIRecipe.
        :param verified_date_time: The verified_date_time of this BigOvenModelAPIRecipe.
        :param web_url: The web_url of this BigOvenModelAPIRecipe.
        :param yield_number: The yield_number of this BigOvenModelAPIRecipe.
        :param yield_unit: The yield_unit of this BigOvenModelAPIRecipe.
        """
        self.openapi_types = {
            'active_minutes': int,
            'ad_tags': str,
            'admin_boost': int,
            'all_categories_text': str,
            'bookmark_image_url': str,
            'bookmark_site_logo': str,
            'bookmark_url': str,
            'category': str,
            'collection': str,
            'collection_id': int,
            'creation_date': datetime,
            'cuisine': str,
            'description': str,
            'favorite_count': int,
            'hero_photo_url': str,
            'image_squares': List[int],
            'image_url': str,
            'ingredients': List[BigOvenModelAPIIngredient],
            'ingredients_text_block': str,
            'instructions': str,
            'is_bookmark': bool,
            'is_private': bool,
            'is_recipe_scan': bool,
            'is_sponsored': bool,
            'last_modified': datetime,
            'max_image_square': int,
            'medal_count': int,
            'menu_count': int,
            'microcategory': str,
            'notes_count': int,
            'nutrition_info': BigOvenModelAPINutritionInfo,
            'poster': BigOvenModelAPIUserInfo,
            'primary_ingredient': str,
            'recipe_id': int,
            'review_count': int,
            'star_rating': float,
            'subcategory': str,
            'title': str,
            'total_minutes': int,
            'variant_of_recipe_id': int,
            'verified_by_class': str,
            'verified_date_time': datetime,
            'web_url': str,
            'yield_number': float,
            'yield_unit': str
        }

        self.attribute_map = {
            'active_minutes': 'ActiveMinutes',
            'ad_tags': 'AdTags',
            'admin_boost': 'AdminBoost',
            'all_categories_text': 'AllCategoriesText',
            'bookmark_image_url': 'BookmarkImageURL',
            'bookmark_site_logo': 'BookmarkSiteLogo',
            'bookmark_url': 'BookmarkURL',
            'category': 'Category',
            'collection': 'Collection',
            'collection_id': 'CollectionID',
            'creation_date': 'CreationDate',
            'cuisine': 'Cuisine',
            'description': 'Description',
            'favorite_count': 'FavoriteCount',
            'hero_photo_url': 'HeroPhotoUrl',
            'image_squares': 'ImageSquares',
            'image_url': 'ImageURL',
            'ingredients': 'Ingredients',
            'ingredients_text_block': 'IngredientsTextBlock',
            'instructions': 'Instructions',
            'is_bookmark': 'IsBookmark',
            'is_private': 'IsPrivate',
            'is_recipe_scan': 'IsRecipeScan',
            'is_sponsored': 'IsSponsored',
            'last_modified': 'LastModified',
            'max_image_square': 'MaxImageSquare',
            'medal_count': 'MedalCount',
            'menu_count': 'MenuCount',
            'microcategory': 'Microcategory',
            'notes_count': 'NotesCount',
            'nutrition_info': 'NutritionInfo',
            'poster': 'Poster',
            'primary_ingredient': 'PrimaryIngredient',
            'recipe_id': 'RecipeID',
            'review_count': 'ReviewCount',
            'star_rating': 'StarRating',
            'subcategory': 'Subcategory',
            'title': 'Title',
            'total_minutes': 'TotalMinutes',
            'variant_of_recipe_id': 'VariantOfRecipeID',
            'verified_by_class': 'VerifiedByClass',
            'verified_date_time': 'VerifiedDateTime',
            'web_url': 'WebURL',
            'yield_number': 'YieldNumber',
            'yield_unit': 'YieldUnit'
        }

        self._active_minutes = active_minutes
        self._ad_tags = ad_tags
        self._admin_boost = admin_boost
        self._all_categories_text = all_categories_text
        self._bookmark_image_url = bookmark_image_url
        self._bookmark_site_logo = bookmark_site_logo
        self._bookmark_url = bookmark_url
        self._category = category
        self._collection = collection
        self._collection_id = collection_id
        self._creation_date = creation_date
        self._cuisine = cuisine
        self._description = description
        self._favorite_count = favorite_count
        self._hero_photo_url = hero_photo_url
        self._image_squares = image_squares
        self._image_url = image_url
        self._ingredients = ingredients
        self._ingredients_text_block = ingredients_text_block
        self._instructions = instructions
        self._is_bookmark = is_bookmark
        self._is_private = is_private
        self._is_recipe_scan = is_recipe_scan
        self._is_sponsored = is_sponsored
        self._last_modified = last_modified
        self._max_image_square = max_image_square
        self._medal_count = medal_count
        self._menu_count = menu_count
        self._microcategory = microcategory
        self._notes_count = notes_count
        self._nutrition_info = nutrition_info
        self._poster = poster
        self._primary_ingredient = primary_ingredient
        self._recipe_id = recipe_id
        self._review_count = review_count
        self._star_rating = star_rating
        self._subcategory = subcategory
        self._title = title
        self._total_minutes = total_minutes
        self._variant_of_recipe_id = variant_of_recipe_id
        self._verified_by_class = verified_by_class
        self._verified_date_time = verified_date_time
        self._web_url = web_url
        self._yield_number = yield_number
        self._yield_unit = yield_unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BigOvenModelAPIRecipe':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BigOven.Model.API.Recipe of this BigOvenModelAPIRecipe.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_minutes(self):
        """Gets the active_minutes of this BigOvenModelAPIRecipe.


        :return: The active_minutes of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._active_minutes

    @active_minutes.setter
    def active_minutes(self, active_minutes):
        """Sets the active_minutes of this BigOvenModelAPIRecipe.


        :param active_minutes: The active_minutes of this BigOvenModelAPIRecipe.
        :type active_minutes: int
        """

        self._active_minutes = active_minutes

    @property
    def ad_tags(self):
        """Gets the ad_tags of this BigOvenModelAPIRecipe.


        :return: The ad_tags of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._ad_tags

    @ad_tags.setter
    def ad_tags(self, ad_tags):
        """Sets the ad_tags of this BigOvenModelAPIRecipe.


        :param ad_tags: The ad_tags of this BigOvenModelAPIRecipe.
        :type ad_tags: str
        """

        self._ad_tags = ad_tags

    @property
    def admin_boost(self):
        """Gets the admin_boost of this BigOvenModelAPIRecipe.


        :return: The admin_boost of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._admin_boost

    @admin_boost.setter
    def admin_boost(self, admin_boost):
        """Sets the admin_boost of this BigOvenModelAPIRecipe.


        :param admin_boost: The admin_boost of this BigOvenModelAPIRecipe.
        :type admin_boost: int
        """

        self._admin_boost = admin_boost

    @property
    def all_categories_text(self):
        """Gets the all_categories_text of this BigOvenModelAPIRecipe.


        :return: The all_categories_text of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._all_categories_text

    @all_categories_text.setter
    def all_categories_text(self, all_categories_text):
        """Sets the all_categories_text of this BigOvenModelAPIRecipe.


        :param all_categories_text: The all_categories_text of this BigOvenModelAPIRecipe.
        :type all_categories_text: str
        """

        self._all_categories_text = all_categories_text

    @property
    def bookmark_image_url(self):
        """Gets the bookmark_image_url of this BigOvenModelAPIRecipe.


        :return: The bookmark_image_url of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._bookmark_image_url

    @bookmark_image_url.setter
    def bookmark_image_url(self, bookmark_image_url):
        """Sets the bookmark_image_url of this BigOvenModelAPIRecipe.


        :param bookmark_image_url: The bookmark_image_url of this BigOvenModelAPIRecipe.
        :type bookmark_image_url: str
        """

        self._bookmark_image_url = bookmark_image_url

    @property
    def bookmark_site_logo(self):
        """Gets the bookmark_site_logo of this BigOvenModelAPIRecipe.


        :return: The bookmark_site_logo of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._bookmark_site_logo

    @bookmark_site_logo.setter
    def bookmark_site_logo(self, bookmark_site_logo):
        """Sets the bookmark_site_logo of this BigOvenModelAPIRecipe.


        :param bookmark_site_logo: The bookmark_site_logo of this BigOvenModelAPIRecipe.
        :type bookmark_site_logo: str
        """

        self._bookmark_site_logo = bookmark_site_logo

    @property
    def bookmark_url(self):
        """Gets the bookmark_url of this BigOvenModelAPIRecipe.


        :return: The bookmark_url of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._bookmark_url

    @bookmark_url.setter
    def bookmark_url(self, bookmark_url):
        """Sets the bookmark_url of this BigOvenModelAPIRecipe.


        :param bookmark_url: The bookmark_url of this BigOvenModelAPIRecipe.
        :type bookmark_url: str
        """

        self._bookmark_url = bookmark_url

    @property
    def category(self):
        """Gets the category of this BigOvenModelAPIRecipe.


        :return: The category of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this BigOvenModelAPIRecipe.


        :param category: The category of this BigOvenModelAPIRecipe.
        :type category: str
        """

        self._category = category

    @property
    def collection(self):
        """Gets the collection of this BigOvenModelAPIRecipe.


        :return: The collection of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._collection

    @collection.setter
    def collection(self, collection):
        """Sets the collection of this BigOvenModelAPIRecipe.


        :param collection: The collection of this BigOvenModelAPIRecipe.
        :type collection: str
        """

        self._collection = collection

    @property
    def collection_id(self):
        """Gets the collection_id of this BigOvenModelAPIRecipe.


        :return: The collection_id of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._collection_id

    @collection_id.setter
    def collection_id(self, collection_id):
        """Sets the collection_id of this BigOvenModelAPIRecipe.


        :param collection_id: The collection_id of this BigOvenModelAPIRecipe.
        :type collection_id: int
        """

        self._collection_id = collection_id

    @property
    def creation_date(self):
        """Gets the creation_date of this BigOvenModelAPIRecipe.


        :return: The creation_date of this BigOvenModelAPIRecipe.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this BigOvenModelAPIRecipe.


        :param creation_date: The creation_date of this BigOvenModelAPIRecipe.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def cuisine(self):
        """Gets the cuisine of this BigOvenModelAPIRecipe.


        :return: The cuisine of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._cuisine

    @cuisine.setter
    def cuisine(self, cuisine):
        """Sets the cuisine of this BigOvenModelAPIRecipe.


        :param cuisine: The cuisine of this BigOvenModelAPIRecipe.
        :type cuisine: str
        """

        self._cuisine = cuisine

    @property
    def description(self):
        """Gets the description of this BigOvenModelAPIRecipe.


        :return: The description of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BigOvenModelAPIRecipe.


        :param description: The description of this BigOvenModelAPIRecipe.
        :type description: str
        """

        self._description = description

    @property
    def favorite_count(self):
        """Gets the favorite_count of this BigOvenModelAPIRecipe.


        :return: The favorite_count of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._favorite_count

    @favorite_count.setter
    def favorite_count(self, favorite_count):
        """Sets the favorite_count of this BigOvenModelAPIRecipe.


        :param favorite_count: The favorite_count of this BigOvenModelAPIRecipe.
        :type favorite_count: int
        """

        self._favorite_count = favorite_count

    @property
    def hero_photo_url(self):
        """Gets the hero_photo_url of this BigOvenModelAPIRecipe.


        :return: The hero_photo_url of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._hero_photo_url

    @hero_photo_url.setter
    def hero_photo_url(self, hero_photo_url):
        """Sets the hero_photo_url of this BigOvenModelAPIRecipe.


        :param hero_photo_url: The hero_photo_url of this BigOvenModelAPIRecipe.
        :type hero_photo_url: str
        """

        self._hero_photo_url = hero_photo_url

    @property
    def image_squares(self):
        """Gets the image_squares of this BigOvenModelAPIRecipe.


        :return: The image_squares of this BigOvenModelAPIRecipe.
        :rtype: List[int]
        """
        return self._image_squares

    @image_squares.setter
    def image_squares(self, image_squares):
        """Sets the image_squares of this BigOvenModelAPIRecipe.


        :param image_squares: The image_squares of this BigOvenModelAPIRecipe.
        :type image_squares: List[int]
        """

        self._image_squares = image_squares

    @property
    def image_url(self):
        """Gets the image_url of this BigOvenModelAPIRecipe.


        :return: The image_url of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this BigOvenModelAPIRecipe.


        :param image_url: The image_url of this BigOvenModelAPIRecipe.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def ingredients(self):
        """Gets the ingredients of this BigOvenModelAPIRecipe.


        :return: The ingredients of this BigOvenModelAPIRecipe.
        :rtype: List[BigOvenModelAPIIngredient]
        """
        return self._ingredients

    @ingredients.setter
    def ingredients(self, ingredients):
        """Sets the ingredients of this BigOvenModelAPIRecipe.


        :param ingredients: The ingredients of this BigOvenModelAPIRecipe.
        :type ingredients: List[BigOvenModelAPIIngredient]
        """

        self._ingredients = ingredients

    @property
    def ingredients_text_block(self):
        """Gets the ingredients_text_block of this BigOvenModelAPIRecipe.


        :return: The ingredients_text_block of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._ingredients_text_block

    @ingredients_text_block.setter
    def ingredients_text_block(self, ingredients_text_block):
        """Sets the ingredients_text_block of this BigOvenModelAPIRecipe.


        :param ingredients_text_block: The ingredients_text_block of this BigOvenModelAPIRecipe.
        :type ingredients_text_block: str
        """

        self._ingredients_text_block = ingredients_text_block

    @property
    def instructions(self):
        """Gets the instructions of this BigOvenModelAPIRecipe.


        :return: The instructions of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions):
        """Sets the instructions of this BigOvenModelAPIRecipe.


        :param instructions: The instructions of this BigOvenModelAPIRecipe.
        :type instructions: str
        """

        self._instructions = instructions

    @property
    def is_bookmark(self):
        """Gets the is_bookmark of this BigOvenModelAPIRecipe.


        :return: The is_bookmark of this BigOvenModelAPIRecipe.
        :rtype: bool
        """
        return self._is_bookmark

    @is_bookmark.setter
    def is_bookmark(self, is_bookmark):
        """Sets the is_bookmark of this BigOvenModelAPIRecipe.


        :param is_bookmark: The is_bookmark of this BigOvenModelAPIRecipe.
        :type is_bookmark: bool
        """

        self._is_bookmark = is_bookmark

    @property
    def is_private(self):
        """Gets the is_private of this BigOvenModelAPIRecipe.


        :return: The is_private of this BigOvenModelAPIRecipe.
        :rtype: bool
        """
        return self._is_private

    @is_private.setter
    def is_private(self, is_private):
        """Sets the is_private of this BigOvenModelAPIRecipe.


        :param is_private: The is_private of this BigOvenModelAPIRecipe.
        :type is_private: bool
        """

        self._is_private = is_private

    @property
    def is_recipe_scan(self):
        """Gets the is_recipe_scan of this BigOvenModelAPIRecipe.


        :return: The is_recipe_scan of this BigOvenModelAPIRecipe.
        :rtype: bool
        """
        return self._is_recipe_scan

    @is_recipe_scan.setter
    def is_recipe_scan(self, is_recipe_scan):
        """Sets the is_recipe_scan of this BigOvenModelAPIRecipe.


        :param is_recipe_scan: The is_recipe_scan of this BigOvenModelAPIRecipe.
        :type is_recipe_scan: bool
        """

        self._is_recipe_scan = is_recipe_scan

    @property
    def is_sponsored(self):
        """Gets the is_sponsored of this BigOvenModelAPIRecipe.


        :return: The is_sponsored of this BigOvenModelAPIRecipe.
        :rtype: bool
        """
        return self._is_sponsored

    @is_sponsored.setter
    def is_sponsored(self, is_sponsored):
        """Sets the is_sponsored of this BigOvenModelAPIRecipe.


        :param is_sponsored: The is_sponsored of this BigOvenModelAPIRecipe.
        :type is_sponsored: bool
        """

        self._is_sponsored = is_sponsored

    @property
    def last_modified(self):
        """Gets the last_modified of this BigOvenModelAPIRecipe.


        :return: The last_modified of this BigOvenModelAPIRecipe.
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this BigOvenModelAPIRecipe.


        :param last_modified: The last_modified of this BigOvenModelAPIRecipe.
        :type last_modified: datetime
        """

        self._last_modified = last_modified

    @property
    def max_image_square(self):
        """Gets the max_image_square of this BigOvenModelAPIRecipe.


        :return: The max_image_square of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._max_image_square

    @max_image_square.setter
    def max_image_square(self, max_image_square):
        """Sets the max_image_square of this BigOvenModelAPIRecipe.


        :param max_image_square: The max_image_square of this BigOvenModelAPIRecipe.
        :type max_image_square: int
        """

        self._max_image_square = max_image_square

    @property
    def medal_count(self):
        """Gets the medal_count of this BigOvenModelAPIRecipe.


        :return: The medal_count of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._medal_count

    @medal_count.setter
    def medal_count(self, medal_count):
        """Sets the medal_count of this BigOvenModelAPIRecipe.


        :param medal_count: The medal_count of this BigOvenModelAPIRecipe.
        :type medal_count: int
        """

        self._medal_count = medal_count

    @property
    def menu_count(self):
        """Gets the menu_count of this BigOvenModelAPIRecipe.


        :return: The menu_count of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._menu_count

    @menu_count.setter
    def menu_count(self, menu_count):
        """Sets the menu_count of this BigOvenModelAPIRecipe.


        :param menu_count: The menu_count of this BigOvenModelAPIRecipe.
        :type menu_count: int
        """

        self._menu_count = menu_count

    @property
    def microcategory(self):
        """Gets the microcategory of this BigOvenModelAPIRecipe.


        :return: The microcategory of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._microcategory

    @microcategory.setter
    def microcategory(self, microcategory):
        """Sets the microcategory of this BigOvenModelAPIRecipe.


        :param microcategory: The microcategory of this BigOvenModelAPIRecipe.
        :type microcategory: str
        """

        self._microcategory = microcategory

    @property
    def notes_count(self):
        """Gets the notes_count of this BigOvenModelAPIRecipe.


        :return: The notes_count of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._notes_count

    @notes_count.setter
    def notes_count(self, notes_count):
        """Sets the notes_count of this BigOvenModelAPIRecipe.


        :param notes_count: The notes_count of this BigOvenModelAPIRecipe.
        :type notes_count: int
        """

        self._notes_count = notes_count

    @property
    def nutrition_info(self):
        """Gets the nutrition_info of this BigOvenModelAPIRecipe.


        :return: The nutrition_info of this BigOvenModelAPIRecipe.
        :rtype: BigOvenModelAPINutritionInfo
        """
        return self._nutrition_info

    @nutrition_info.setter
    def nutrition_info(self, nutrition_info):
        """Sets the nutrition_info of this BigOvenModelAPIRecipe.


        :param nutrition_info: The nutrition_info of this BigOvenModelAPIRecipe.
        :type nutrition_info: BigOvenModelAPINutritionInfo
        """

        self._nutrition_info = nutrition_info

    @property
    def poster(self):
        """Gets the poster of this BigOvenModelAPIRecipe.


        :return: The poster of this BigOvenModelAPIRecipe.
        :rtype: BigOvenModelAPIUserInfo
        """
        return self._poster

    @poster.setter
    def poster(self, poster):
        """Sets the poster of this BigOvenModelAPIRecipe.


        :param poster: The poster of this BigOvenModelAPIRecipe.
        :type poster: BigOvenModelAPIUserInfo
        """

        self._poster = poster

    @property
    def primary_ingredient(self):
        """Gets the primary_ingredient of this BigOvenModelAPIRecipe.


        :return: The primary_ingredient of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._primary_ingredient

    @primary_ingredient.setter
    def primary_ingredient(self, primary_ingredient):
        """Sets the primary_ingredient of this BigOvenModelAPIRecipe.


        :param primary_ingredient: The primary_ingredient of this BigOvenModelAPIRecipe.
        :type primary_ingredient: str
        """

        self._primary_ingredient = primary_ingredient

    @property
    def recipe_id(self):
        """Gets the recipe_id of this BigOvenModelAPIRecipe.


        :return: The recipe_id of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._recipe_id

    @recipe_id.setter
    def recipe_id(self, recipe_id):
        """Sets the recipe_id of this BigOvenModelAPIRecipe.


        :param recipe_id: The recipe_id of this BigOvenModelAPIRecipe.
        :type recipe_id: int
        """

        self._recipe_id = recipe_id

    @property
    def review_count(self):
        """Gets the review_count of this BigOvenModelAPIRecipe.


        :return: The review_count of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._review_count

    @review_count.setter
    def review_count(self, review_count):
        """Sets the review_count of this BigOvenModelAPIRecipe.


        :param review_count: The review_count of this BigOvenModelAPIRecipe.
        :type review_count: int
        """

        self._review_count = review_count

    @property
    def star_rating(self):
        """Gets the star_rating of this BigOvenModelAPIRecipe.


        :return: The star_rating of this BigOvenModelAPIRecipe.
        :rtype: float
        """
        return self._star_rating

    @star_rating.setter
    def star_rating(self, star_rating):
        """Sets the star_rating of this BigOvenModelAPIRecipe.


        :param star_rating: The star_rating of this BigOvenModelAPIRecipe.
        :type star_rating: float
        """

        self._star_rating = star_rating

    @property
    def subcategory(self):
        """Gets the subcategory of this BigOvenModelAPIRecipe.


        :return: The subcategory of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._subcategory

    @subcategory.setter
    def subcategory(self, subcategory):
        """Sets the subcategory of this BigOvenModelAPIRecipe.


        :param subcategory: The subcategory of this BigOvenModelAPIRecipe.
        :type subcategory: str
        """

        self._subcategory = subcategory

    @property
    def title(self):
        """Gets the title of this BigOvenModelAPIRecipe.


        :return: The title of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this BigOvenModelAPIRecipe.


        :param title: The title of this BigOvenModelAPIRecipe.
        :type title: str
        """

        self._title = title

    @property
    def total_minutes(self):
        """Gets the total_minutes of this BigOvenModelAPIRecipe.


        :return: The total_minutes of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._total_minutes

    @total_minutes.setter
    def total_minutes(self, total_minutes):
        """Sets the total_minutes of this BigOvenModelAPIRecipe.


        :param total_minutes: The total_minutes of this BigOvenModelAPIRecipe.
        :type total_minutes: int
        """

        self._total_minutes = total_minutes

    @property
    def variant_of_recipe_id(self):
        """Gets the variant_of_recipe_id of this BigOvenModelAPIRecipe.


        :return: The variant_of_recipe_id of this BigOvenModelAPIRecipe.
        :rtype: int
        """
        return self._variant_of_recipe_id

    @variant_of_recipe_id.setter
    def variant_of_recipe_id(self, variant_of_recipe_id):
        """Sets the variant_of_recipe_id of this BigOvenModelAPIRecipe.


        :param variant_of_recipe_id: The variant_of_recipe_id of this BigOvenModelAPIRecipe.
        :type variant_of_recipe_id: int
        """

        self._variant_of_recipe_id = variant_of_recipe_id

    @property
    def verified_by_class(self):
        """Gets the verified_by_class of this BigOvenModelAPIRecipe.


        :return: The verified_by_class of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._verified_by_class

    @verified_by_class.setter
    def verified_by_class(self, verified_by_class):
        """Sets the verified_by_class of this BigOvenModelAPIRecipe.


        :param verified_by_class: The verified_by_class of this BigOvenModelAPIRecipe.
        :type verified_by_class: str
        """

        self._verified_by_class = verified_by_class

    @property
    def verified_date_time(self):
        """Gets the verified_date_time of this BigOvenModelAPIRecipe.


        :return: The verified_date_time of this BigOvenModelAPIRecipe.
        :rtype: datetime
        """
        return self._verified_date_time

    @verified_date_time.setter
    def verified_date_time(self, verified_date_time):
        """Sets the verified_date_time of this BigOvenModelAPIRecipe.


        :param verified_date_time: The verified_date_time of this BigOvenModelAPIRecipe.
        :type verified_date_time: datetime
        """

        self._verified_date_time = verified_date_time

    @property
    def web_url(self):
        """Gets the web_url of this BigOvenModelAPIRecipe.


        :return: The web_url of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._web_url

    @web_url.setter
    def web_url(self, web_url):
        """Sets the web_url of this BigOvenModelAPIRecipe.


        :param web_url: The web_url of this BigOvenModelAPIRecipe.
        :type web_url: str
        """

        self._web_url = web_url

    @property
    def yield_number(self):
        """Gets the yield_number of this BigOvenModelAPIRecipe.


        :return: The yield_number of this BigOvenModelAPIRecipe.
        :rtype: float
        """
        return self._yield_number

    @yield_number.setter
    def yield_number(self, yield_number):
        """Sets the yield_number of this BigOvenModelAPIRecipe.


        :param yield_number: The yield_number of this BigOvenModelAPIRecipe.
        :type yield_number: float
        """

        self._yield_number = yield_number

    @property
    def yield_unit(self):
        """Gets the yield_unit of this BigOvenModelAPIRecipe.


        :return: The yield_unit of this BigOvenModelAPIRecipe.
        :rtype: str
        """
        return self._yield_unit

    @yield_unit.setter
    def yield_unit(self, yield_unit):
        """Sets the yield_unit of this BigOvenModelAPIRecipe.


        :param yield_unit: The yield_unit of this BigOvenModelAPIRecipe.
        :type yield_unit: str
        """

        self._yield_unit = yield_unit
