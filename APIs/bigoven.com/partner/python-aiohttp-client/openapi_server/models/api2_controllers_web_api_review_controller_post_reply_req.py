# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class API2ControllersWebAPIReviewControllerPostReplyReq(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None):
        """API2ControllersWebAPIReviewControllerPostReplyReq - a model defined in OpenAPI

        :param comment: The comment of this API2ControllersWebAPIReviewControllerPostReplyReq.
        """
        self.openapi_types = {
            'comment': str
        }

        self.attribute_map = {
            'comment': 'Comment'
        }

        self._comment = comment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'API2ControllersWebAPIReviewControllerPostReplyReq':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The API2.Controllers.WebAPI.ReviewController.PostReplyReq of this API2ControllersWebAPIReviewControllerPostReplyReq.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this API2ControllersWebAPIReviewControllerPostReplyReq.

        The comment. If mentioning any user(s) (optional), include them as @username in the text body. Do not use @ symbol for anything but mentioning @usernames.

        :return: The comment of this API2ControllersWebAPIReviewControllerPostReplyReq.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this API2ControllersWebAPIReviewControllerPostReplyReq.

        The comment. If mentioning any user(s) (optional), include them as @username in the text body. Do not use @ symbol for anything but mentioning @usernames.

        :param comment: The comment of this API2ControllersWebAPIReviewControllerPostReplyReq.
        :type comment: str
        """

        self._comment = comment
