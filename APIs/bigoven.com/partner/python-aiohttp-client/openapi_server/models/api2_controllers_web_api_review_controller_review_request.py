# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class API2ControllersWebAPIReviewControllerReviewRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_minutes: int=None, comment: str=None, make_again: str=None, star_rating: int=None, total_minutes: int=None):
        """API2ControllersWebAPIReviewControllerReviewRequest - a model defined in OpenAPI

        :param active_minutes: The active_minutes of this API2ControllersWebAPIReviewControllerReviewRequest.
        :param comment: The comment of this API2ControllersWebAPIReviewControllerReviewRequest.
        :param make_again: The make_again of this API2ControllersWebAPIReviewControllerReviewRequest.
        :param star_rating: The star_rating of this API2ControllersWebAPIReviewControllerReviewRequest.
        :param total_minutes: The total_minutes of this API2ControllersWebAPIReviewControllerReviewRequest.
        """
        self.openapi_types = {
            'active_minutes': int,
            'comment': str,
            'make_again': str,
            'star_rating': int,
            'total_minutes': int
        }

        self.attribute_map = {
            'active_minutes': 'ActiveMinutes',
            'comment': 'Comment',
            'make_again': 'MakeAgain',
            'star_rating': 'StarRating',
            'total_minutes': 'TotalMinutes'
        }

        self._active_minutes = active_minutes
        self._comment = comment
        self._make_again = make_again
        self._star_rating = star_rating
        self._total_minutes = total_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'API2ControllersWebAPIReviewControllerReviewRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The API2.Controllers.WebAPI.ReviewController.ReviewRequest of this API2ControllersWebAPIReviewControllerReviewRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_minutes(self):
        """Gets the active_minutes of this API2ControllersWebAPIReviewControllerReviewRequest.

        How many minutes of ACTIVE time (i.e., actively working on the recipe, not waiting for rising, baking, etc.) did it               demand of the cook? Optional.

        :return: The active_minutes of this API2ControllersWebAPIReviewControllerReviewRequest.
        :rtype: int
        """
        return self._active_minutes

    @active_minutes.setter
    def active_minutes(self, active_minutes):
        """Sets the active_minutes of this API2ControllersWebAPIReviewControllerReviewRequest.

        How many minutes of ACTIVE time (i.e., actively working on the recipe, not waiting for rising, baking, etc.) did it               demand of the cook? Optional.

        :param active_minutes: The active_minutes of this API2ControllersWebAPIReviewControllerReviewRequest.
        :type active_minutes: int
        """

        self._active_minutes = active_minutes

    @property
    def comment(self):
        """Gets the comment of this API2ControllersWebAPIReviewControllerReviewRequest.

        The notes

        :return: The comment of this API2ControllersWebAPIReviewControllerReviewRequest.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this API2ControllersWebAPIReviewControllerReviewRequest.

        The notes

        :param comment: The comment of this API2ControllersWebAPIReviewControllerReviewRequest.
        :type comment: str
        """

        self._comment = comment

    @property
    def make_again(self):
        """Gets the make_again of this API2ControllersWebAPIReviewControllerReviewRequest.

        \"yes\" or \"no\"

        :return: The make_again of this API2ControllersWebAPIReviewControllerReviewRequest.
        :rtype: str
        """
        return self._make_again

    @make_again.setter
    def make_again(self, make_again):
        """Sets the make_again of this API2ControllersWebAPIReviewControllerReviewRequest.

        \"yes\" or \"no\"

        :param make_again: The make_again of this API2ControllersWebAPIReviewControllerReviewRequest.
        :type make_again: str
        """

        self._make_again = make_again

    @property
    def star_rating(self):
        """Gets the star_rating of this API2ControllersWebAPIReviewControllerReviewRequest.

        1, 2, 3, 4, or 5

        :return: The star_rating of this API2ControllersWebAPIReviewControllerReviewRequest.
        :rtype: int
        """
        return self._star_rating

    @star_rating.setter
    def star_rating(self, star_rating):
        """Sets the star_rating of this API2ControllersWebAPIReviewControllerReviewRequest.

        1, 2, 3, 4, or 5

        :param star_rating: The star_rating of this API2ControllersWebAPIReviewControllerReviewRequest.
        :type star_rating: int
        """

        self._star_rating = star_rating

    @property
    def total_minutes(self):
        """Gets the total_minutes of this API2ControllersWebAPIReviewControllerReviewRequest.

        How long, start to finish, in minutes (integer) did it take? Optional.

        :return: The total_minutes of this API2ControllersWebAPIReviewControllerReviewRequest.
        :rtype: int
        """
        return self._total_minutes

    @total_minutes.setter
    def total_minutes(self, total_minutes):
        """Sets the total_minutes of this API2ControllersWebAPIReviewControllerReviewRequest.

        How long, start to finish, in minutes (integer) did it take? Optional.

        :param total_minutes: The total_minutes of this API2ControllersWebAPIReviewControllerReviewRequest.
        :type total_minutes: int
        """

        self._total_minutes = total_minutes
