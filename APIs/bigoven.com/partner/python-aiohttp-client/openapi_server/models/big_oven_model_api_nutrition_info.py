# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BigOvenModelAPINutritionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calories_from_fat: float=None, cholesterol: float=None, cholesterol_pct: float=None, dietary_fiber: float=None, dietary_fiber_pct: float=None, mono_fat: float=None, poly_fat: float=None, potassium: float=None, potassium_pct: float=None, protein: float=None, protein_pct: float=None, sat_fat: float=None, sat_fat_pct: float=None, singular_yield_unit: str=None, sodium: float=None, sodium_pct: float=None, sugar: float=None, total_calories: float=None, total_carbs: float=None, total_carbs_pct: float=None, total_fat: float=None, total_fat_pct: float=None, trans_fat: float=None):
        """BigOvenModelAPINutritionInfo - a model defined in OpenAPI

        :param calories_from_fat: The calories_from_fat of this BigOvenModelAPINutritionInfo.
        :param cholesterol: The cholesterol of this BigOvenModelAPINutritionInfo.
        :param cholesterol_pct: The cholesterol_pct of this BigOvenModelAPINutritionInfo.
        :param dietary_fiber: The dietary_fiber of this BigOvenModelAPINutritionInfo.
        :param dietary_fiber_pct: The dietary_fiber_pct of this BigOvenModelAPINutritionInfo.
        :param mono_fat: The mono_fat of this BigOvenModelAPINutritionInfo.
        :param poly_fat: The poly_fat of this BigOvenModelAPINutritionInfo.
        :param potassium: The potassium of this BigOvenModelAPINutritionInfo.
        :param potassium_pct: The potassium_pct of this BigOvenModelAPINutritionInfo.
        :param protein: The protein of this BigOvenModelAPINutritionInfo.
        :param protein_pct: The protein_pct of this BigOvenModelAPINutritionInfo.
        :param sat_fat: The sat_fat of this BigOvenModelAPINutritionInfo.
        :param sat_fat_pct: The sat_fat_pct of this BigOvenModelAPINutritionInfo.
        :param singular_yield_unit: The singular_yield_unit of this BigOvenModelAPINutritionInfo.
        :param sodium: The sodium of this BigOvenModelAPINutritionInfo.
        :param sodium_pct: The sodium_pct of this BigOvenModelAPINutritionInfo.
        :param sugar: The sugar of this BigOvenModelAPINutritionInfo.
        :param total_calories: The total_calories of this BigOvenModelAPINutritionInfo.
        :param total_carbs: The total_carbs of this BigOvenModelAPINutritionInfo.
        :param total_carbs_pct: The total_carbs_pct of this BigOvenModelAPINutritionInfo.
        :param total_fat: The total_fat of this BigOvenModelAPINutritionInfo.
        :param total_fat_pct: The total_fat_pct of this BigOvenModelAPINutritionInfo.
        :param trans_fat: The trans_fat of this BigOvenModelAPINutritionInfo.
        """
        self.openapi_types = {
            'calories_from_fat': float,
            'cholesterol': float,
            'cholesterol_pct': float,
            'dietary_fiber': float,
            'dietary_fiber_pct': float,
            'mono_fat': float,
            'poly_fat': float,
            'potassium': float,
            'potassium_pct': float,
            'protein': float,
            'protein_pct': float,
            'sat_fat': float,
            'sat_fat_pct': float,
            'singular_yield_unit': str,
            'sodium': float,
            'sodium_pct': float,
            'sugar': float,
            'total_calories': float,
            'total_carbs': float,
            'total_carbs_pct': float,
            'total_fat': float,
            'total_fat_pct': float,
            'trans_fat': float
        }

        self.attribute_map = {
            'calories_from_fat': 'CaloriesFromFat',
            'cholesterol': 'Cholesterol',
            'cholesterol_pct': 'CholesterolPct',
            'dietary_fiber': 'DietaryFiber',
            'dietary_fiber_pct': 'DietaryFiberPct',
            'mono_fat': 'MonoFat',
            'poly_fat': 'PolyFat',
            'potassium': 'Potassium',
            'potassium_pct': 'PotassiumPct',
            'protein': 'Protein',
            'protein_pct': 'ProteinPct',
            'sat_fat': 'SatFat',
            'sat_fat_pct': 'SatFatPct',
            'singular_yield_unit': 'SingularYieldUnit',
            'sodium': 'Sodium',
            'sodium_pct': 'SodiumPct',
            'sugar': 'Sugar',
            'total_calories': 'TotalCalories',
            'total_carbs': 'TotalCarbs',
            'total_carbs_pct': 'TotalCarbsPct',
            'total_fat': 'TotalFat',
            'total_fat_pct': 'TotalFatPct',
            'trans_fat': 'TransFat'
        }

        self._calories_from_fat = calories_from_fat
        self._cholesterol = cholesterol
        self._cholesterol_pct = cholesterol_pct
        self._dietary_fiber = dietary_fiber
        self._dietary_fiber_pct = dietary_fiber_pct
        self._mono_fat = mono_fat
        self._poly_fat = poly_fat
        self._potassium = potassium
        self._potassium_pct = potassium_pct
        self._protein = protein
        self._protein_pct = protein_pct
        self._sat_fat = sat_fat
        self._sat_fat_pct = sat_fat_pct
        self._singular_yield_unit = singular_yield_unit
        self._sodium = sodium
        self._sodium_pct = sodium_pct
        self._sugar = sugar
        self._total_calories = total_calories
        self._total_carbs = total_carbs
        self._total_carbs_pct = total_carbs_pct
        self._total_fat = total_fat
        self._total_fat_pct = total_fat_pct
        self._trans_fat = trans_fat

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BigOvenModelAPINutritionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BigOven.Model.API.NutritionInfo of this BigOvenModelAPINutritionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calories_from_fat(self):
        """Gets the calories_from_fat of this BigOvenModelAPINutritionInfo.


        :return: The calories_from_fat of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._calories_from_fat

    @calories_from_fat.setter
    def calories_from_fat(self, calories_from_fat):
        """Sets the calories_from_fat of this BigOvenModelAPINutritionInfo.


        :param calories_from_fat: The calories_from_fat of this BigOvenModelAPINutritionInfo.
        :type calories_from_fat: float
        """

        self._calories_from_fat = calories_from_fat

    @property
    def cholesterol(self):
        """Gets the cholesterol of this BigOvenModelAPINutritionInfo.


        :return: The cholesterol of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._cholesterol

    @cholesterol.setter
    def cholesterol(self, cholesterol):
        """Sets the cholesterol of this BigOvenModelAPINutritionInfo.


        :param cholesterol: The cholesterol of this BigOvenModelAPINutritionInfo.
        :type cholesterol: float
        """

        self._cholesterol = cholesterol

    @property
    def cholesterol_pct(self):
        """Gets the cholesterol_pct of this BigOvenModelAPINutritionInfo.


        :return: The cholesterol_pct of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._cholesterol_pct

    @cholesterol_pct.setter
    def cholesterol_pct(self, cholesterol_pct):
        """Sets the cholesterol_pct of this BigOvenModelAPINutritionInfo.


        :param cholesterol_pct: The cholesterol_pct of this BigOvenModelAPINutritionInfo.
        :type cholesterol_pct: float
        """

        self._cholesterol_pct = cholesterol_pct

    @property
    def dietary_fiber(self):
        """Gets the dietary_fiber of this BigOvenModelAPINutritionInfo.


        :return: The dietary_fiber of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._dietary_fiber

    @dietary_fiber.setter
    def dietary_fiber(self, dietary_fiber):
        """Sets the dietary_fiber of this BigOvenModelAPINutritionInfo.


        :param dietary_fiber: The dietary_fiber of this BigOvenModelAPINutritionInfo.
        :type dietary_fiber: float
        """

        self._dietary_fiber = dietary_fiber

    @property
    def dietary_fiber_pct(self):
        """Gets the dietary_fiber_pct of this BigOvenModelAPINutritionInfo.


        :return: The dietary_fiber_pct of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._dietary_fiber_pct

    @dietary_fiber_pct.setter
    def dietary_fiber_pct(self, dietary_fiber_pct):
        """Sets the dietary_fiber_pct of this BigOvenModelAPINutritionInfo.


        :param dietary_fiber_pct: The dietary_fiber_pct of this BigOvenModelAPINutritionInfo.
        :type dietary_fiber_pct: float
        """

        self._dietary_fiber_pct = dietary_fiber_pct

    @property
    def mono_fat(self):
        """Gets the mono_fat of this BigOvenModelAPINutritionInfo.


        :return: The mono_fat of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._mono_fat

    @mono_fat.setter
    def mono_fat(self, mono_fat):
        """Sets the mono_fat of this BigOvenModelAPINutritionInfo.


        :param mono_fat: The mono_fat of this BigOvenModelAPINutritionInfo.
        :type mono_fat: float
        """

        self._mono_fat = mono_fat

    @property
    def poly_fat(self):
        """Gets the poly_fat of this BigOvenModelAPINutritionInfo.


        :return: The poly_fat of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._poly_fat

    @poly_fat.setter
    def poly_fat(self, poly_fat):
        """Sets the poly_fat of this BigOvenModelAPINutritionInfo.


        :param poly_fat: The poly_fat of this BigOvenModelAPINutritionInfo.
        :type poly_fat: float
        """

        self._poly_fat = poly_fat

    @property
    def potassium(self):
        """Gets the potassium of this BigOvenModelAPINutritionInfo.


        :return: The potassium of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._potassium

    @potassium.setter
    def potassium(self, potassium):
        """Sets the potassium of this BigOvenModelAPINutritionInfo.


        :param potassium: The potassium of this BigOvenModelAPINutritionInfo.
        :type potassium: float
        """

        self._potassium = potassium

    @property
    def potassium_pct(self):
        """Gets the potassium_pct of this BigOvenModelAPINutritionInfo.


        :return: The potassium_pct of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._potassium_pct

    @potassium_pct.setter
    def potassium_pct(self, potassium_pct):
        """Sets the potassium_pct of this BigOvenModelAPINutritionInfo.


        :param potassium_pct: The potassium_pct of this BigOvenModelAPINutritionInfo.
        :type potassium_pct: float
        """

        self._potassium_pct = potassium_pct

    @property
    def protein(self):
        """Gets the protein of this BigOvenModelAPINutritionInfo.


        :return: The protein of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._protein

    @protein.setter
    def protein(self, protein):
        """Sets the protein of this BigOvenModelAPINutritionInfo.


        :param protein: The protein of this BigOvenModelAPINutritionInfo.
        :type protein: float
        """

        self._protein = protein

    @property
    def protein_pct(self):
        """Gets the protein_pct of this BigOvenModelAPINutritionInfo.


        :return: The protein_pct of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._protein_pct

    @protein_pct.setter
    def protein_pct(self, protein_pct):
        """Sets the protein_pct of this BigOvenModelAPINutritionInfo.


        :param protein_pct: The protein_pct of this BigOvenModelAPINutritionInfo.
        :type protein_pct: float
        """

        self._protein_pct = protein_pct

    @property
    def sat_fat(self):
        """Gets the sat_fat of this BigOvenModelAPINutritionInfo.


        :return: The sat_fat of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._sat_fat

    @sat_fat.setter
    def sat_fat(self, sat_fat):
        """Sets the sat_fat of this BigOvenModelAPINutritionInfo.


        :param sat_fat: The sat_fat of this BigOvenModelAPINutritionInfo.
        :type sat_fat: float
        """

        self._sat_fat = sat_fat

    @property
    def sat_fat_pct(self):
        """Gets the sat_fat_pct of this BigOvenModelAPINutritionInfo.


        :return: The sat_fat_pct of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._sat_fat_pct

    @sat_fat_pct.setter
    def sat_fat_pct(self, sat_fat_pct):
        """Sets the sat_fat_pct of this BigOvenModelAPINutritionInfo.


        :param sat_fat_pct: The sat_fat_pct of this BigOvenModelAPINutritionInfo.
        :type sat_fat_pct: float
        """

        self._sat_fat_pct = sat_fat_pct

    @property
    def singular_yield_unit(self):
        """Gets the singular_yield_unit of this BigOvenModelAPINutritionInfo.


        :return: The singular_yield_unit of this BigOvenModelAPINutritionInfo.
        :rtype: str
        """
        return self._singular_yield_unit

    @singular_yield_unit.setter
    def singular_yield_unit(self, singular_yield_unit):
        """Sets the singular_yield_unit of this BigOvenModelAPINutritionInfo.


        :param singular_yield_unit: The singular_yield_unit of this BigOvenModelAPINutritionInfo.
        :type singular_yield_unit: str
        """

        self._singular_yield_unit = singular_yield_unit

    @property
    def sodium(self):
        """Gets the sodium of this BigOvenModelAPINutritionInfo.


        :return: The sodium of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._sodium

    @sodium.setter
    def sodium(self, sodium):
        """Sets the sodium of this BigOvenModelAPINutritionInfo.


        :param sodium: The sodium of this BigOvenModelAPINutritionInfo.
        :type sodium: float
        """

        self._sodium = sodium

    @property
    def sodium_pct(self):
        """Gets the sodium_pct of this BigOvenModelAPINutritionInfo.


        :return: The sodium_pct of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._sodium_pct

    @sodium_pct.setter
    def sodium_pct(self, sodium_pct):
        """Sets the sodium_pct of this BigOvenModelAPINutritionInfo.


        :param sodium_pct: The sodium_pct of this BigOvenModelAPINutritionInfo.
        :type sodium_pct: float
        """

        self._sodium_pct = sodium_pct

    @property
    def sugar(self):
        """Gets the sugar of this BigOvenModelAPINutritionInfo.


        :return: The sugar of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._sugar

    @sugar.setter
    def sugar(self, sugar):
        """Sets the sugar of this BigOvenModelAPINutritionInfo.


        :param sugar: The sugar of this BigOvenModelAPINutritionInfo.
        :type sugar: float
        """

        self._sugar = sugar

    @property
    def total_calories(self):
        """Gets the total_calories of this BigOvenModelAPINutritionInfo.


        :return: The total_calories of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._total_calories

    @total_calories.setter
    def total_calories(self, total_calories):
        """Sets the total_calories of this BigOvenModelAPINutritionInfo.


        :param total_calories: The total_calories of this BigOvenModelAPINutritionInfo.
        :type total_calories: float
        """

        self._total_calories = total_calories

    @property
    def total_carbs(self):
        """Gets the total_carbs of this BigOvenModelAPINutritionInfo.


        :return: The total_carbs of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._total_carbs

    @total_carbs.setter
    def total_carbs(self, total_carbs):
        """Sets the total_carbs of this BigOvenModelAPINutritionInfo.


        :param total_carbs: The total_carbs of this BigOvenModelAPINutritionInfo.
        :type total_carbs: float
        """

        self._total_carbs = total_carbs

    @property
    def total_carbs_pct(self):
        """Gets the total_carbs_pct of this BigOvenModelAPINutritionInfo.


        :return: The total_carbs_pct of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._total_carbs_pct

    @total_carbs_pct.setter
    def total_carbs_pct(self, total_carbs_pct):
        """Sets the total_carbs_pct of this BigOvenModelAPINutritionInfo.


        :param total_carbs_pct: The total_carbs_pct of this BigOvenModelAPINutritionInfo.
        :type total_carbs_pct: float
        """

        self._total_carbs_pct = total_carbs_pct

    @property
    def total_fat(self):
        """Gets the total_fat of this BigOvenModelAPINutritionInfo.


        :return: The total_fat of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._total_fat

    @total_fat.setter
    def total_fat(self, total_fat):
        """Sets the total_fat of this BigOvenModelAPINutritionInfo.


        :param total_fat: The total_fat of this BigOvenModelAPINutritionInfo.
        :type total_fat: float
        """

        self._total_fat = total_fat

    @property
    def total_fat_pct(self):
        """Gets the total_fat_pct of this BigOvenModelAPINutritionInfo.


        :return: The total_fat_pct of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._total_fat_pct

    @total_fat_pct.setter
    def total_fat_pct(self, total_fat_pct):
        """Sets the total_fat_pct of this BigOvenModelAPINutritionInfo.


        :param total_fat_pct: The total_fat_pct of this BigOvenModelAPINutritionInfo.
        :type total_fat_pct: float
        """

        self._total_fat_pct = total_fat_pct

    @property
    def trans_fat(self):
        """Gets the trans_fat of this BigOvenModelAPINutritionInfo.


        :return: The trans_fat of this BigOvenModelAPINutritionInfo.
        :rtype: float
        """
        return self._trans_fat

    @trans_fat.setter
    def trans_fat(self, trans_fat):
        """Sets the trans_fat of this BigOvenModelAPINutritionInfo.


        :param trans_fat: The trans_fat of this BigOvenModelAPINutritionInfo.
        :type trans_fat: float
        """

        self._trans_fat = trans_fat
