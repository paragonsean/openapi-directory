# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BigOvenModelRecipeCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, default_active_minutes: int=None, default_total_minutes: int=None, id: int=None, parent_id: int=None, primary_image: str=None, short_description: str=None):
        """BigOvenModelRecipeCategory - a model defined in OpenAPI

        :param category: The category of this BigOvenModelRecipeCategory.
        :param default_active_minutes: The default_active_minutes of this BigOvenModelRecipeCategory.
        :param default_total_minutes: The default_total_minutes of this BigOvenModelRecipeCategory.
        :param id: The id of this BigOvenModelRecipeCategory.
        :param parent_id: The parent_id of this BigOvenModelRecipeCategory.
        :param primary_image: The primary_image of this BigOvenModelRecipeCategory.
        :param short_description: The short_description of this BigOvenModelRecipeCategory.
        """
        self.openapi_types = {
            'category': str,
            'default_active_minutes': int,
            'default_total_minutes': int,
            'id': int,
            'parent_id': int,
            'primary_image': str,
            'short_description': str
        }

        self.attribute_map = {
            'category': 'Category',
            'default_active_minutes': 'DefaultActiveMinutes',
            'default_total_minutes': 'DefaultTotalMinutes',
            'id': 'ID',
            'parent_id': 'ParentID',
            'primary_image': 'PrimaryImage',
            'short_description': 'ShortDescription'
        }

        self._category = category
        self._default_active_minutes = default_active_minutes
        self._default_total_minutes = default_total_minutes
        self._id = id
        self._parent_id = parent_id
        self._primary_image = primary_image
        self._short_description = short_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BigOvenModelRecipeCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BigOven.Model.RecipeCategory of this BigOvenModelRecipeCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this BigOvenModelRecipeCategory.


        :return: The category of this BigOvenModelRecipeCategory.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this BigOvenModelRecipeCategory.


        :param category: The category of this BigOvenModelRecipeCategory.
        :type category: str
        """

        self._category = category

    @property
    def default_active_minutes(self):
        """Gets the default_active_minutes of this BigOvenModelRecipeCategory.


        :return: The default_active_minutes of this BigOvenModelRecipeCategory.
        :rtype: int
        """
        return self._default_active_minutes

    @default_active_minutes.setter
    def default_active_minutes(self, default_active_minutes):
        """Sets the default_active_minutes of this BigOvenModelRecipeCategory.


        :param default_active_minutes: The default_active_minutes of this BigOvenModelRecipeCategory.
        :type default_active_minutes: int
        """

        self._default_active_minutes = default_active_minutes

    @property
    def default_total_minutes(self):
        """Gets the default_total_minutes of this BigOvenModelRecipeCategory.


        :return: The default_total_minutes of this BigOvenModelRecipeCategory.
        :rtype: int
        """
        return self._default_total_minutes

    @default_total_minutes.setter
    def default_total_minutes(self, default_total_minutes):
        """Sets the default_total_minutes of this BigOvenModelRecipeCategory.


        :param default_total_minutes: The default_total_minutes of this BigOvenModelRecipeCategory.
        :type default_total_minutes: int
        """

        self._default_total_minutes = default_total_minutes

    @property
    def id(self):
        """Gets the id of this BigOvenModelRecipeCategory.


        :return: The id of this BigOvenModelRecipeCategory.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BigOvenModelRecipeCategory.


        :param id: The id of this BigOvenModelRecipeCategory.
        :type id: int
        """

        self._id = id

    @property
    def parent_id(self):
        """Gets the parent_id of this BigOvenModelRecipeCategory.


        :return: The parent_id of this BigOvenModelRecipeCategory.
        :rtype: int
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this BigOvenModelRecipeCategory.


        :param parent_id: The parent_id of this BigOvenModelRecipeCategory.
        :type parent_id: int
        """

        self._parent_id = parent_id

    @property
    def primary_image(self):
        """Gets the primary_image of this BigOvenModelRecipeCategory.


        :return: The primary_image of this BigOvenModelRecipeCategory.
        :rtype: str
        """
        return self._primary_image

    @primary_image.setter
    def primary_image(self, primary_image):
        """Sets the primary_image of this BigOvenModelRecipeCategory.


        :param primary_image: The primary_image of this BigOvenModelRecipeCategory.
        :type primary_image: str
        """

        self._primary_image = primary_image

    @property
    def short_description(self):
        """Gets the short_description of this BigOvenModelRecipeCategory.


        :return: The short_description of this BigOvenModelRecipeCategory.
        :rtype: str
        """
        return self._short_description

    @short_description.setter
    def short_description(self, short_description):
        """Sets the short_description of this BigOvenModelRecipeCategory.


        :param short_description: The short_description of this BigOvenModelRecipeCategory.
        :type short_description: str
        """

        self._short_description = short_description
