# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class API2ModelsLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, country: str=None, dma: int=None):
        """API2ModelsLocation - a model defined in OpenAPI

        :param city: The city of this API2ModelsLocation.
        :param country: The country of this API2ModelsLocation.
        :param dma: The dma of this API2ModelsLocation.
        """
        self.openapi_types = {
            'city': str,
            'country': str,
            'dma': int
        }

        self.attribute_map = {
            'city': 'City',
            'country': 'Country',
            'dma': 'DMA'
        }

        self._city = city
        self._country = country
        self._dma = dma

    @classmethod
    def from_dict(cls, dikt: dict) -> 'API2ModelsLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The API2.Models.Location of this API2ModelsLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this API2ModelsLocation.

        

        :return: The city of this API2ModelsLocation.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this API2ModelsLocation.

        

        :param city: The city of this API2ModelsLocation.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this API2ModelsLocation.

        

        :return: The country of this API2ModelsLocation.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this API2ModelsLocation.

        

        :param country: The country of this API2ModelsLocation.
        :type country: str
        """

        self._country = country

    @property
    def dma(self):
        """Gets the dma of this API2ModelsLocation.

        

        :return: The dma of this API2ModelsLocation.
        :rtype: int
        """
        return self._dma

    @dma.setter
    def dma(self, dma):
        """Sets the dma of this API2ModelsLocation.

        

        :param dma: The dma of this API2ModelsLocation.
        :type dma: int
        """

        self._dma = dma
