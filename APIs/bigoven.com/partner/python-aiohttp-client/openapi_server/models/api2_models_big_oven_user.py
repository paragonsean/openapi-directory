# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api2_models_accounting import API2ModelsAccounting
from openapi_server.models.api2_models_personal import API2ModelsPersonal
from openapi_server.models.api2_models_preference import API2ModelsPreference
from openapi_server.models.api2_models_profile import API2ModelsProfile
from openapi_server import util


class API2ModelsBigOvenUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounting: API2ModelsAccounting=None, bo_auth_token: str=None, last_change_log_id: str=None, personal: API2ModelsPersonal=None, preferences: API2ModelsPreference=None, profile: API2ModelsProfile=None):
        """API2ModelsBigOvenUser - a model defined in OpenAPI

        :param accounting: The accounting of this API2ModelsBigOvenUser.
        :param bo_auth_token: The bo_auth_token of this API2ModelsBigOvenUser.
        :param last_change_log_id: The last_change_log_id of this API2ModelsBigOvenUser.
        :param personal: The personal of this API2ModelsBigOvenUser.
        :param preferences: The preferences of this API2ModelsBigOvenUser.
        :param profile: The profile of this API2ModelsBigOvenUser.
        """
        self.openapi_types = {
            'accounting': API2ModelsAccounting,
            'bo_auth_token': str,
            'last_change_log_id': str,
            'personal': API2ModelsPersonal,
            'preferences': API2ModelsPreference,
            'profile': API2ModelsProfile
        }

        self.attribute_map = {
            'accounting': 'Accounting',
            'bo_auth_token': 'BOAuthToken',
            'last_change_log_id': 'LastChangeLogID',
            'personal': 'Personal',
            'preferences': 'Preferences',
            'profile': 'Profile'
        }

        self._accounting = accounting
        self._bo_auth_token = bo_auth_token
        self._last_change_log_id = last_change_log_id
        self._personal = personal
        self._preferences = preferences
        self._profile = profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'API2ModelsBigOvenUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The API2.Models.BigOvenUser of this API2ModelsBigOvenUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounting(self):
        """Gets the accounting of this API2ModelsBigOvenUser.


        :return: The accounting of this API2ModelsBigOvenUser.
        :rtype: API2ModelsAccounting
        """
        return self._accounting

    @accounting.setter
    def accounting(self, accounting):
        """Sets the accounting of this API2ModelsBigOvenUser.


        :param accounting: The accounting of this API2ModelsBigOvenUser.
        :type accounting: API2ModelsAccounting
        """

        self._accounting = accounting

    @property
    def bo_auth_token(self):
        """Gets the bo_auth_token of this API2ModelsBigOvenUser.

        The user-specific authentication token

        :return: The bo_auth_token of this API2ModelsBigOvenUser.
        :rtype: str
        """
        return self._bo_auth_token

    @bo_auth_token.setter
    def bo_auth_token(self, bo_auth_token):
        """Sets the bo_auth_token of this API2ModelsBigOvenUser.

        The user-specific authentication token

        :param bo_auth_token: The bo_auth_token of this API2ModelsBigOvenUser.
        :type bo_auth_token: str
        """

        self._bo_auth_token = bo_auth_token

    @property
    def last_change_log_id(self):
        """Gets the last_change_log_id of this API2ModelsBigOvenUser.

        Last change log

        :return: The last_change_log_id of this API2ModelsBigOvenUser.
        :rtype: str
        """
        return self._last_change_log_id

    @last_change_log_id.setter
    def last_change_log_id(self, last_change_log_id):
        """Sets the last_change_log_id of this API2ModelsBigOvenUser.

        Last change log

        :param last_change_log_id: The last_change_log_id of this API2ModelsBigOvenUser.
        :type last_change_log_id: str
        """

        self._last_change_log_id = last_change_log_id

    @property
    def personal(self):
        """Gets the personal of this API2ModelsBigOvenUser.


        :return: The personal of this API2ModelsBigOvenUser.
        :rtype: API2ModelsPersonal
        """
        return self._personal

    @personal.setter
    def personal(self, personal):
        """Sets the personal of this API2ModelsBigOvenUser.


        :param personal: The personal of this API2ModelsBigOvenUser.
        :type personal: API2ModelsPersonal
        """

        self._personal = personal

    @property
    def preferences(self):
        """Gets the preferences of this API2ModelsBigOvenUser.


        :return: The preferences of this API2ModelsBigOvenUser.
        :rtype: API2ModelsPreference
        """
        return self._preferences

    @preferences.setter
    def preferences(self, preferences):
        """Sets the preferences of this API2ModelsBigOvenUser.


        :param preferences: The preferences of this API2ModelsBigOvenUser.
        :type preferences: API2ModelsPreference
        """

        self._preferences = preferences

    @property
    def profile(self):
        """Gets the profile of this API2ModelsBigOvenUser.


        :return: The profile of this API2ModelsBigOvenUser.
        :rtype: API2ModelsProfile
        """
        return self._profile

    @profile.setter
    def profile(self, profile):
        """Sets the profile of this API2ModelsBigOvenUser.


        :param profile: The profile of this API2ModelsBigOvenUser.
        :type profile: API2ModelsProfile
        """

        self._profile = profile
