/*
 * 1,000,000+ Recipe and Grocery List API (v2)
 * #Documentation    This is the documentation for the partner endpoint of the BigOven Recipe and Grocery List API.    The update brings with it Swagger-based documentation. [Swagger](http://swagger.io) is an emerging standard for describing REST-based APIs, and with this Swagger-compliant endpoint (above), you can make ready-to-go interface libraries for your code via [swagger-codegen](https://github.com/swagger-api/swagger-codegen). For instance, it's easy to generate libraries for Node.js, Java, Ruby, ASP.NET MVC, jQuery, php and more!    You can also try out the endpoint calls with your own api_key right here on this page. Be sure to enter your api_key above to use the \"Try it out!\" buttons on this page.    ##Start Here    Developers new to the BigOven API should start with this version, not with the legacy API. We'll be making improvements to this API over time, and doing only bug fixes on the v1 API.        To pretend you're a BigOven user (for instance, to get your recently viewed recipes or your grocery list), you need to pass in Basic Authentication information in the header, just as with the v1 API. We do now require that you make all calls via https. You need to pass your api_key in with every call, though this can now be done on the header (send a request header \"X-BigOven-API-Key\" set to your api_key value, e.g., Request[\"X-BigOven-API-Key\"]=\"your-key-here\".)    ##Migration Notes    For existing partners, we encourage you to [migrate](https://api2.bigoven.com), and while at this writing we have no hard-and-fast termination date for the v1 API, we strongly prefer that you migrate by January 1, 2017. While the changes aren't overly complex, there are several breaking changes, including refactoring of recipe search and results and removal of support for XML. This is not a simply plug-and-play replacement to the v1 API. With respect to an exclusive focus on JSON, the world has spoken, and it prefers JSON for REST-based API's. We've taken numerous steps to refactor the API to make it more REST-compliant. Note that this v2 API will be the preferred API from this point onward, so we encourage developers to migrate to this new format. We have put together some [migration notes](/web/documentation/migration-to-v2) that we encourage you to read carefully.    ##Photos    See our [photos documentation](https://api2.bigoven.com/web/documentation/recipe-images).     For more information on usage of this API, including features, pricing, rate limits, terms and conditions, please visit the [BigOven API website](https://api2.bigoven.com).
 *
 * The version of the OpenAPI document: partner
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BigOvenModelAPIUserInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:31.647548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BigOvenModelAPIUserInfo {
  public static final String SERIALIZED_NAME_FIRST_NAME = "FirstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_IMAGE_URL48 = "ImageUrl48";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL48)
  private String imageUrl48;

  public static final String SERIALIZED_NAME_IS_KITCHEN_HELPER = "IsKitchenHelper";
  @SerializedName(SERIALIZED_NAME_IS_KITCHEN_HELPER)
  private Boolean isKitchenHelper;

  public static final String SERIALIZED_NAME_IS_PREMIUM = "IsPremium";
  @SerializedName(SERIALIZED_NAME_IS_PREMIUM)
  private Boolean isPremium;

  public static final String SERIALIZED_NAME_IS_USING_RECURLY = "IsUsingRecurly";
  @SerializedName(SERIALIZED_NAME_IS_USING_RECURLY)
  private Boolean isUsingRecurly;

  public static final String SERIALIZED_NAME_LAST_NAME = "LastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_MEMBER_SINCE = "MemberSince";
  @SerializedName(SERIALIZED_NAME_MEMBER_SINCE)
  private OffsetDateTime memberSince;

  public static final String SERIALIZED_NAME_PHOTO_URL = "PhotoUrl";
  @SerializedName(SERIALIZED_NAME_PHOTO_URL)
  private String photoUrl;

  public static final String SERIALIZED_NAME_PHOTO_URL48 = "PhotoUrl48";
  @SerializedName(SERIALIZED_NAME_PHOTO_URL48)
  private String photoUrl48;

  public static final String SERIALIZED_NAME_PREMIUM_EXPIRY_DATE = "PremiumExpiryDate";
  @SerializedName(SERIALIZED_NAME_PREMIUM_EXPIRY_DATE)
  private OffsetDateTime premiumExpiryDate;

  public static final String SERIALIZED_NAME_USER_I_D = "UserID";
  @SerializedName(SERIALIZED_NAME_USER_I_D)
  private Integer userID;

  public static final String SERIALIZED_NAME_USER_NAME = "UserName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_WEB_URL = "WebUrl";
  @SerializedName(SERIALIZED_NAME_WEB_URL)
  private String webUrl;

  public BigOvenModelAPIUserInfo() {
  }

  public BigOvenModelAPIUserInfo(
     String photoUrl48, 
     String webUrl
  ) {
    this();
    this.photoUrl48 = photoUrl48;
    this.webUrl = webUrl;
  }

  public BigOvenModelAPIUserInfo firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public BigOvenModelAPIUserInfo imageUrl48(String imageUrl48) {
    this.imageUrl48 = imageUrl48;
    return this;
  }

  /**
   * Get imageUrl48
   * @return imageUrl48
   */
  @javax.annotation.Nullable
  public String getImageUrl48() {
    return imageUrl48;
  }

  public void setImageUrl48(String imageUrl48) {
    this.imageUrl48 = imageUrl48;
  }


  public BigOvenModelAPIUserInfo isKitchenHelper(Boolean isKitchenHelper) {
    this.isKitchenHelper = isKitchenHelper;
    return this;
  }

  /**
   * Get isKitchenHelper
   * @return isKitchenHelper
   */
  @javax.annotation.Nullable
  public Boolean getIsKitchenHelper() {
    return isKitchenHelper;
  }

  public void setIsKitchenHelper(Boolean isKitchenHelper) {
    this.isKitchenHelper = isKitchenHelper;
  }


  public BigOvenModelAPIUserInfo isPremium(Boolean isPremium) {
    this.isPremium = isPremium;
    return this;
  }

  /**
   * Get isPremium
   * @return isPremium
   */
  @javax.annotation.Nullable
  public Boolean getIsPremium() {
    return isPremium;
  }

  public void setIsPremium(Boolean isPremium) {
    this.isPremium = isPremium;
  }


  public BigOvenModelAPIUserInfo isUsingRecurly(Boolean isUsingRecurly) {
    this.isUsingRecurly = isUsingRecurly;
    return this;
  }

  /**
   * Get isUsingRecurly
   * @return isUsingRecurly
   */
  @javax.annotation.Nullable
  public Boolean getIsUsingRecurly() {
    return isUsingRecurly;
  }

  public void setIsUsingRecurly(Boolean isUsingRecurly) {
    this.isUsingRecurly = isUsingRecurly;
  }


  public BigOvenModelAPIUserInfo lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public BigOvenModelAPIUserInfo memberSince(OffsetDateTime memberSince) {
    this.memberSince = memberSince;
    return this;
  }

  /**
   * Get memberSince
   * @return memberSince
   */
  @javax.annotation.Nullable
  public OffsetDateTime getMemberSince() {
    return memberSince;
  }

  public void setMemberSince(OffsetDateTime memberSince) {
    this.memberSince = memberSince;
  }


  public BigOvenModelAPIUserInfo photoUrl(String photoUrl) {
    this.photoUrl = photoUrl;
    return this;
  }

  /**
   * Get photoUrl
   * @return photoUrl
   */
  @javax.annotation.Nullable
  public String getPhotoUrl() {
    return photoUrl;
  }

  public void setPhotoUrl(String photoUrl) {
    this.photoUrl = photoUrl;
  }


  /**
   * Get photoUrl48
   * @return photoUrl48
   */
  @javax.annotation.Nullable
  public String getPhotoUrl48() {
    return photoUrl48;
  }



  public BigOvenModelAPIUserInfo premiumExpiryDate(OffsetDateTime premiumExpiryDate) {
    this.premiumExpiryDate = premiumExpiryDate;
    return this;
  }

  /**
   * Get premiumExpiryDate
   * @return premiumExpiryDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPremiumExpiryDate() {
    return premiumExpiryDate;
  }

  public void setPremiumExpiryDate(OffsetDateTime premiumExpiryDate) {
    this.premiumExpiryDate = premiumExpiryDate;
  }


  public BigOvenModelAPIUserInfo userID(Integer userID) {
    this.userID = userID;
    return this;
  }

  /**
   * Get userID
   * @return userID
   */
  @javax.annotation.Nullable
  public Integer getUserID() {
    return userID;
  }

  public void setUserID(Integer userID) {
    this.userID = userID;
  }


  public BigOvenModelAPIUserInfo userName(String userName) {
    this.userName = userName;
    return this;
  }

  /**
   * Get userName
   * @return userName
   */
  @javax.annotation.Nullable
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  /**
   * Get webUrl
   * @return webUrl
   */
  @javax.annotation.Nullable
  public String getWebUrl() {
    return webUrl;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BigOvenModelAPIUserInfo bigOvenModelAPIUserInfo = (BigOvenModelAPIUserInfo) o;
    return Objects.equals(this.firstName, bigOvenModelAPIUserInfo.firstName) &&
        Objects.equals(this.imageUrl48, bigOvenModelAPIUserInfo.imageUrl48) &&
        Objects.equals(this.isKitchenHelper, bigOvenModelAPIUserInfo.isKitchenHelper) &&
        Objects.equals(this.isPremium, bigOvenModelAPIUserInfo.isPremium) &&
        Objects.equals(this.isUsingRecurly, bigOvenModelAPIUserInfo.isUsingRecurly) &&
        Objects.equals(this.lastName, bigOvenModelAPIUserInfo.lastName) &&
        Objects.equals(this.memberSince, bigOvenModelAPIUserInfo.memberSince) &&
        Objects.equals(this.photoUrl, bigOvenModelAPIUserInfo.photoUrl) &&
        Objects.equals(this.photoUrl48, bigOvenModelAPIUserInfo.photoUrl48) &&
        Objects.equals(this.premiumExpiryDate, bigOvenModelAPIUserInfo.premiumExpiryDate) &&
        Objects.equals(this.userID, bigOvenModelAPIUserInfo.userID) &&
        Objects.equals(this.userName, bigOvenModelAPIUserInfo.userName) &&
        Objects.equals(this.webUrl, bigOvenModelAPIUserInfo.webUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, imageUrl48, isKitchenHelper, isPremium, isUsingRecurly, lastName, memberSince, photoUrl, photoUrl48, premiumExpiryDate, userID, userName, webUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BigOvenModelAPIUserInfo {\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    imageUrl48: ").append(toIndentedString(imageUrl48)).append("\n");
    sb.append("    isKitchenHelper: ").append(toIndentedString(isKitchenHelper)).append("\n");
    sb.append("    isPremium: ").append(toIndentedString(isPremium)).append("\n");
    sb.append("    isUsingRecurly: ").append(toIndentedString(isUsingRecurly)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    memberSince: ").append(toIndentedString(memberSince)).append("\n");
    sb.append("    photoUrl: ").append(toIndentedString(photoUrl)).append("\n");
    sb.append("    photoUrl48: ").append(toIndentedString(photoUrl48)).append("\n");
    sb.append("    premiumExpiryDate: ").append(toIndentedString(premiumExpiryDate)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FirstName");
    openapiFields.add("ImageUrl48");
    openapiFields.add("IsKitchenHelper");
    openapiFields.add("IsPremium");
    openapiFields.add("IsUsingRecurly");
    openapiFields.add("LastName");
    openapiFields.add("MemberSince");
    openapiFields.add("PhotoUrl");
    openapiFields.add("PhotoUrl48");
    openapiFields.add("PremiumExpiryDate");
    openapiFields.add("UserID");
    openapiFields.add("UserName");
    openapiFields.add("WebUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BigOvenModelAPIUserInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BigOvenModelAPIUserInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BigOvenModelAPIUserInfo is not found in the empty JSON string", BigOvenModelAPIUserInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BigOvenModelAPIUserInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BigOvenModelAPIUserInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("FirstName") != null && !jsonObj.get("FirstName").isJsonNull()) && !jsonObj.get("FirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FirstName").toString()));
      }
      if ((jsonObj.get("ImageUrl48") != null && !jsonObj.get("ImageUrl48").isJsonNull()) && !jsonObj.get("ImageUrl48").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ImageUrl48` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ImageUrl48").toString()));
      }
      if ((jsonObj.get("LastName") != null && !jsonObj.get("LastName").isJsonNull()) && !jsonObj.get("LastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastName").toString()));
      }
      if ((jsonObj.get("PhotoUrl") != null && !jsonObj.get("PhotoUrl").isJsonNull()) && !jsonObj.get("PhotoUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PhotoUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PhotoUrl").toString()));
      }
      if ((jsonObj.get("PhotoUrl48") != null && !jsonObj.get("PhotoUrl48").isJsonNull()) && !jsonObj.get("PhotoUrl48").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PhotoUrl48` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PhotoUrl48").toString()));
      }
      if ((jsonObj.get("UserName") != null && !jsonObj.get("UserName").isJsonNull()) && !jsonObj.get("UserName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UserName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UserName").toString()));
      }
      if ((jsonObj.get("WebUrl") != null && !jsonObj.get("WebUrl").isJsonNull()) && !jsonObj.get("WebUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WebUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WebUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BigOvenModelAPIUserInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BigOvenModelAPIUserInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BigOvenModelAPIUserInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BigOvenModelAPIUserInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<BigOvenModelAPIUserInfo>() {
           @Override
           public void write(JsonWriter out, BigOvenModelAPIUserInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BigOvenModelAPIUserInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BigOvenModelAPIUserInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BigOvenModelAPIUserInfo
   * @throws IOException if the JSON string is invalid with respect to BigOvenModelAPIUserInfo
   */
  public static BigOvenModelAPIUserInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BigOvenModelAPIUserInfo.class);
  }

  /**
   * Convert an instance of BigOvenModelAPIUserInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

