/*
 * 1,000,000+ Recipe and Grocery List API (v2)
 * #Documentation    This is the documentation for the partner endpoint of the BigOven Recipe and Grocery List API.    The update brings with it Swagger-based documentation. [Swagger](http://swagger.io) is an emerging standard for describing REST-based APIs, and with this Swagger-compliant endpoint (above), you can make ready-to-go interface libraries for your code via [swagger-codegen](https://github.com/swagger-api/swagger-codegen). For instance, it's easy to generate libraries for Node.js, Java, Ruby, ASP.NET MVC, jQuery, php and more!    You can also try out the endpoint calls with your own api_key right here on this page. Be sure to enter your api_key above to use the \"Try it out!\" buttons on this page.    ##Start Here    Developers new to the BigOven API should start with this version, not with the legacy API. We'll be making improvements to this API over time, and doing only bug fixes on the v1 API.        To pretend you're a BigOven user (for instance, to get your recently viewed recipes or your grocery list), you need to pass in Basic Authentication information in the header, just as with the v1 API. We do now require that you make all calls via https. You need to pass your api_key in with every call, though this can now be done on the header (send a request header \"X-BigOven-API-Key\" set to your api_key value, e.g., Request[\"X-BigOven-API-Key\"]=\"your-key-here\".)    ##Migration Notes    For existing partners, we encourage you to [migrate](https://api2.bigoven.com), and while at this writing we have no hard-and-fast termination date for the v1 API, we strongly prefer that you migrate by January 1, 2017. While the changes aren't overly complex, there are several breaking changes, including refactoring of recipe search and results and removal of support for XML. This is not a simply plug-and-play replacement to the v1 API. With respect to an exclusive focus on JSON, the world has spoken, and it prefers JSON for REST-based API's. We've taken numerous steps to refactor the API to make it more REST-compliant. Note that this v2 API will be the preferred API from this point onward, so we encourage developers to migrate to this new format. We have put together some [migration notes](/web/documentation/migration-to-v2) that we encourage you to read carefully.    ##Photos    See our [photos documentation](https://api2.bigoven.com/web/documentation/recipe-images).     For more information on usage of this API, including features, pricing, rate limits, terms and conditions, please visit the [BigOven API website](https://api2.bigoven.com).
 *
 * The version of the OpenAPI document: partner
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BigOvenModelAPI2RecipeInfox;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BigOvenModelAPI2CollectionInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:31.647548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BigOvenModelAPI2CollectionInfo {
  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_I_D = "ID";
  @SerializedName(SERIALIZED_NAME_I_D)
  private Integer ID;

  public static final String SERIALIZED_NAME_IS_FILTERED = "IsFiltered";
  @SerializedName(SERIALIZED_NAME_IS_FILTERED)
  private Boolean isFiltered;

  public static final String SERIALIZED_NAME_IS_SPONSORED = "IsSponsored";
  @SerializedName(SERIALIZED_NAME_IS_SPONSORED)
  private Boolean isSponsored;

  public static final String SERIALIZED_NAME_MOBILE_URL = "MobileUrl";
  @SerializedName(SERIALIZED_NAME_MOBILE_URL)
  private String mobileUrl;

  public static final String SERIALIZED_NAME_P_R_O = "PRO";
  @SerializedName(SERIALIZED_NAME_P_R_O)
  private Boolean PRO;

  public static final String SERIALIZED_NAME_PHOTO_URL = "PhotoUrl";
  @SerializedName(SERIALIZED_NAME_PHOTO_URL)
  private String photoUrl;

  public static final String SERIALIZED_NAME_RESULTS = "Results";
  @SerializedName(SERIALIZED_NAME_RESULTS)
  private List<BigOvenModelAPI2RecipeInfox> results = new ArrayList<>();

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TOKEN = "Token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_WEB_URL = "WebUrl";
  @SerializedName(SERIALIZED_NAME_WEB_URL)
  private String webUrl;

  public BigOvenModelAPI2CollectionInfo() {
  }

  public BigOvenModelAPI2CollectionInfo description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public BigOvenModelAPI2CollectionInfo ID(Integer ID) {
    this.ID = ID;
    return this;
  }

  /**
   * Get ID
   * @return ID
   */
  @javax.annotation.Nullable
  public Integer getID() {
    return ID;
  }

  public void setID(Integer ID) {
    this.ID = ID;
  }


  public BigOvenModelAPI2CollectionInfo isFiltered(Boolean isFiltered) {
    this.isFiltered = isFiltered;
    return this;
  }

  /**
   * Get isFiltered
   * @return isFiltered
   */
  @javax.annotation.Nullable
  public Boolean getIsFiltered() {
    return isFiltered;
  }

  public void setIsFiltered(Boolean isFiltered) {
    this.isFiltered = isFiltered;
  }


  public BigOvenModelAPI2CollectionInfo isSponsored(Boolean isSponsored) {
    this.isSponsored = isSponsored;
    return this;
  }

  /**
   * Get isSponsored
   * @return isSponsored
   */
  @javax.annotation.Nullable
  public Boolean getIsSponsored() {
    return isSponsored;
  }

  public void setIsSponsored(Boolean isSponsored) {
    this.isSponsored = isSponsored;
  }


  public BigOvenModelAPI2CollectionInfo mobileUrl(String mobileUrl) {
    this.mobileUrl = mobileUrl;
    return this;
  }

  /**
   * Get mobileUrl
   * @return mobileUrl
   */
  @javax.annotation.Nullable
  public String getMobileUrl() {
    return mobileUrl;
  }

  public void setMobileUrl(String mobileUrl) {
    this.mobileUrl = mobileUrl;
  }


  public BigOvenModelAPI2CollectionInfo PRO(Boolean PRO) {
    this.PRO = PRO;
    return this;
  }

  /**
   * Get PRO
   * @return PRO
   */
  @javax.annotation.Nullable
  public Boolean getPRO() {
    return PRO;
  }

  public void setPRO(Boolean PRO) {
    this.PRO = PRO;
  }


  public BigOvenModelAPI2CollectionInfo photoUrl(String photoUrl) {
    this.photoUrl = photoUrl;
    return this;
  }

  /**
   * Get photoUrl
   * @return photoUrl
   */
  @javax.annotation.Nullable
  public String getPhotoUrl() {
    return photoUrl;
  }

  public void setPhotoUrl(String photoUrl) {
    this.photoUrl = photoUrl;
  }


  public BigOvenModelAPI2CollectionInfo results(List<BigOvenModelAPI2RecipeInfox> results) {
    this.results = results;
    return this;
  }

  public BigOvenModelAPI2CollectionInfo addResultsItem(BigOvenModelAPI2RecipeInfox resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

  /**
   * Get results
   * @return results
   */
  @javax.annotation.Nullable
  public List<BigOvenModelAPI2RecipeInfox> getResults() {
    return results;
  }

  public void setResults(List<BigOvenModelAPI2RecipeInfox> results) {
    this.results = results;
  }


  public BigOvenModelAPI2CollectionInfo title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public BigOvenModelAPI2CollectionInfo token(String token) {
    this.token = token;
    return this;
  }

  /**
   * Get token
   * @return token
   */
  @javax.annotation.Nullable
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }


  public BigOvenModelAPI2CollectionInfo webUrl(String webUrl) {
    this.webUrl = webUrl;
    return this;
  }

  /**
   * Get webUrl
   * @return webUrl
   */
  @javax.annotation.Nullable
  public String getWebUrl() {
    return webUrl;
  }

  public void setWebUrl(String webUrl) {
    this.webUrl = webUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BigOvenModelAPI2CollectionInfo bigOvenModelAPI2CollectionInfo = (BigOvenModelAPI2CollectionInfo) o;
    return Objects.equals(this.description, bigOvenModelAPI2CollectionInfo.description) &&
        Objects.equals(this.ID, bigOvenModelAPI2CollectionInfo.ID) &&
        Objects.equals(this.isFiltered, bigOvenModelAPI2CollectionInfo.isFiltered) &&
        Objects.equals(this.isSponsored, bigOvenModelAPI2CollectionInfo.isSponsored) &&
        Objects.equals(this.mobileUrl, bigOvenModelAPI2CollectionInfo.mobileUrl) &&
        Objects.equals(this.PRO, bigOvenModelAPI2CollectionInfo.PRO) &&
        Objects.equals(this.photoUrl, bigOvenModelAPI2CollectionInfo.photoUrl) &&
        Objects.equals(this.results, bigOvenModelAPI2CollectionInfo.results) &&
        Objects.equals(this.title, bigOvenModelAPI2CollectionInfo.title) &&
        Objects.equals(this.token, bigOvenModelAPI2CollectionInfo.token) &&
        Objects.equals(this.webUrl, bigOvenModelAPI2CollectionInfo.webUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, ID, isFiltered, isSponsored, mobileUrl, PRO, photoUrl, results, title, token, webUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BigOvenModelAPI2CollectionInfo {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    isFiltered: ").append(toIndentedString(isFiltered)).append("\n");
    sb.append("    isSponsored: ").append(toIndentedString(isSponsored)).append("\n");
    sb.append("    mobileUrl: ").append(toIndentedString(mobileUrl)).append("\n");
    sb.append("    PRO: ").append(toIndentedString(PRO)).append("\n");
    sb.append("    photoUrl: ").append(toIndentedString(photoUrl)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Description");
    openapiFields.add("ID");
    openapiFields.add("IsFiltered");
    openapiFields.add("IsSponsored");
    openapiFields.add("MobileUrl");
    openapiFields.add("PRO");
    openapiFields.add("PhotoUrl");
    openapiFields.add("Results");
    openapiFields.add("Title");
    openapiFields.add("Token");
    openapiFields.add("WebUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BigOvenModelAPI2CollectionInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BigOvenModelAPI2CollectionInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BigOvenModelAPI2CollectionInfo is not found in the empty JSON string", BigOvenModelAPI2CollectionInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BigOvenModelAPI2CollectionInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BigOvenModelAPI2CollectionInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if ((jsonObj.get("MobileUrl") != null && !jsonObj.get("MobileUrl").isJsonNull()) && !jsonObj.get("MobileUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MobileUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MobileUrl").toString()));
      }
      if ((jsonObj.get("PhotoUrl") != null && !jsonObj.get("PhotoUrl").isJsonNull()) && !jsonObj.get("PhotoUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PhotoUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PhotoUrl").toString()));
      }
      if (jsonObj.get("Results") != null && !jsonObj.get("Results").isJsonNull()) {
        JsonArray jsonArrayresults = jsonObj.getAsJsonArray("Results");
        if (jsonArrayresults != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Results").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Results` to be an array in the JSON string but got `%s`", jsonObj.get("Results").toString()));
          }

          // validate the optional field `Results` (array)
          for (int i = 0; i < jsonArrayresults.size(); i++) {
            BigOvenModelAPI2RecipeInfox.validateJsonElement(jsonArrayresults.get(i));
          };
        }
      }
      if ((jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) && !jsonObj.get("Title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Title").toString()));
      }
      if ((jsonObj.get("Token") != null && !jsonObj.get("Token").isJsonNull()) && !jsonObj.get("Token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Token").toString()));
      }
      if ((jsonObj.get("WebUrl") != null && !jsonObj.get("WebUrl").isJsonNull()) && !jsonObj.get("WebUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WebUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WebUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BigOvenModelAPI2CollectionInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BigOvenModelAPI2CollectionInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BigOvenModelAPI2CollectionInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BigOvenModelAPI2CollectionInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<BigOvenModelAPI2CollectionInfo>() {
           @Override
           public void write(JsonWriter out, BigOvenModelAPI2CollectionInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BigOvenModelAPI2CollectionInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BigOvenModelAPI2CollectionInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BigOvenModelAPI2CollectionInfo
   * @throws IOException if the JSON string is invalid with respect to BigOvenModelAPI2CollectionInfo
   */
  public static BigOvenModelAPI2CollectionInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BigOvenModelAPI2CollectionInfo.class);
  }

  /**
   * Convert an instance of BigOvenModelAPI2CollectionInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

