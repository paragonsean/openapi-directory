/*
 * 1,000,000+ Recipe and Grocery List API (v2)
 * #Documentation    This is the documentation for the partner endpoint of the BigOven Recipe and Grocery List API.    The update brings with it Swagger-based documentation. [Swagger](http://swagger.io) is an emerging standard for describing REST-based APIs, and with this Swagger-compliant endpoint (above), you can make ready-to-go interface libraries for your code via [swagger-codegen](https://github.com/swagger-api/swagger-codegen). For instance, it's easy to generate libraries for Node.js, Java, Ruby, ASP.NET MVC, jQuery, php and more!    You can also try out the endpoint calls with your own api_key right here on this page. Be sure to enter your api_key above to use the \"Try it out!\" buttons on this page.    ##Start Here    Developers new to the BigOven API should start with this version, not with the legacy API. We'll be making improvements to this API over time, and doing only bug fixes on the v1 API.        To pretend you're a BigOven user (for instance, to get your recently viewed recipes or your grocery list), you need to pass in Basic Authentication information in the header, just as with the v1 API. We do now require that you make all calls via https. You need to pass your api_key in with every call, though this can now be done on the header (send a request header \"X-BigOven-API-Key\" set to your api_key value, e.g., Request[\"X-BigOven-API-Key\"]=\"your-key-here\".)    ##Migration Notes    For existing partners, we encourage you to [migrate](https://api2.bigoven.com), and while at this writing we have no hard-and-fast termination date for the v1 API, we strongly prefer that you migrate by January 1, 2017. While the changes aren't overly complex, there are several breaking changes, including refactoring of recipe search and results and removal of support for XML. This is not a simply plug-and-play replacement to the v1 API. With respect to an exclusive focus on JSON, the world has spoken, and it prefers JSON for REST-based API's. We've taken numerous steps to refactor the API to make it more REST-compliant. Note that this v2 API will be the preferred API from this point onward, so we encourage developers to migrate to this new format. We have put together some [migration notes](/web/documentation/migration-to-v2) that we encourage you to read carefully.    ##Photos    See our [photos documentation](https://api2.bigoven.com/web/documentation/recipe-images).     For more information on usage of this API, including features, pricing, rate limits, terms and conditions, please visit the [BigOven API website](https://api2.bigoven.com).
 *
 * The version of the OpenAPI document: partner
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.API2ModelsRecipesRecipeVideoResponse;
import org.openapitools.client.model.BigOvenModelAPIIngredient;
import org.openapitools.client.model.BigOvenModelAPINutritionInfo;
import org.openapitools.client.model.BigOvenModelAPIUserInfo;
import org.openapitools.client.model.BigOvenModelInstructionStep;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DTO used to return a recipe with videos
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:31.647548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class API2ModelsRecipesRecipeResponse {
  public static final String SERIALIZED_NAME_ACTIVE_MINUTES = "ActiveMinutes";
  @SerializedName(SERIALIZED_NAME_ACTIVE_MINUTES)
  private Integer activeMinutes;

  public static final String SERIALIZED_NAME_AD_TAGS = "AdTags";
  @SerializedName(SERIALIZED_NAME_AD_TAGS)
  private String adTags;

  public static final String SERIALIZED_NAME_ADMIN_BOOST = "AdminBoost";
  @SerializedName(SERIALIZED_NAME_ADMIN_BOOST)
  private Integer adminBoost;

  public static final String SERIALIZED_NAME_ALL_CATEGORIES_TEXT = "AllCategoriesText";
  @SerializedName(SERIALIZED_NAME_ALL_CATEGORIES_TEXT)
  private String allCategoriesText;

  public static final String SERIALIZED_NAME_BOOKMARK_IMAGE_U_R_L = "BookmarkImageURL";
  @SerializedName(SERIALIZED_NAME_BOOKMARK_IMAGE_U_R_L)
  private String bookmarkImageURL;

  public static final String SERIALIZED_NAME_BOOKMARK_SITE_LOGO = "BookmarkSiteLogo";
  @SerializedName(SERIALIZED_NAME_BOOKMARK_SITE_LOGO)
  private String bookmarkSiteLogo;

  public static final String SERIALIZED_NAME_BOOKMARK_U_R_L = "BookmarkURL";
  @SerializedName(SERIALIZED_NAME_BOOKMARK_U_R_L)
  private String bookmarkURL;

  public static final String SERIALIZED_NAME_CATEGORY = "Category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_COLLECTION = "Collection";
  @SerializedName(SERIALIZED_NAME_COLLECTION)
  private String collection;

  public static final String SERIALIZED_NAME_COLLECTION_I_D = "CollectionID";
  @SerializedName(SERIALIZED_NAME_COLLECTION_I_D)
  private Integer collectionID;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_CUISINE = "Cuisine";
  @SerializedName(SERIALIZED_NAME_CUISINE)
  private String cuisine;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FAVORITE_COUNT = "FavoriteCount";
  @SerializedName(SERIALIZED_NAME_FAVORITE_COUNT)
  private Integer favoriteCount;

  public static final String SERIALIZED_NAME_IMAGE_SQUARES = "ImageSquares";
  @SerializedName(SERIALIZED_NAME_IMAGE_SQUARES)
  private List<Integer> imageSquares = new ArrayList<>();

  public static final String SERIALIZED_NAME_IMAGE_U_R_L = "ImageURL";
  @SerializedName(SERIALIZED_NAME_IMAGE_U_R_L)
  private String imageURL;

  public static final String SERIALIZED_NAME_INGREDIENTS = "Ingredients";
  @SerializedName(SERIALIZED_NAME_INGREDIENTS)
  private List<BigOvenModelAPIIngredient> ingredients = new ArrayList<>();

  public static final String SERIALIZED_NAME_INGREDIENTS_TEXT_BLOCK = "IngredientsTextBlock";
  @SerializedName(SERIALIZED_NAME_INGREDIENTS_TEXT_BLOCK)
  private String ingredientsTextBlock;

  public static final String SERIALIZED_NAME_INSTRUCTIONS = "Instructions";
  @SerializedName(SERIALIZED_NAME_INSTRUCTIONS)
  private String instructions;

  public static final String SERIALIZED_NAME_IS_BOOKMARK = "IsBookmark";
  @SerializedName(SERIALIZED_NAME_IS_BOOKMARK)
  private Boolean isBookmark;

  public static final String SERIALIZED_NAME_IS_PRIVATE = "IsPrivate";
  @SerializedName(SERIALIZED_NAME_IS_PRIVATE)
  private Boolean isPrivate;

  public static final String SERIALIZED_NAME_IS_RECIPE_SCAN = "IsRecipeScan";
  @SerializedName(SERIALIZED_NAME_IS_RECIPE_SCAN)
  private Boolean isRecipeScan;

  public static final String SERIALIZED_NAME_IS_SPONSORED = "IsSponsored";
  @SerializedName(SERIALIZED_NAME_IS_SPONSORED)
  private Boolean isSponsored;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "LastModified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private OffsetDateTime lastModified;

  public static final String SERIALIZED_NAME_MAX_IMAGE_SQUARE = "MaxImageSquare";
  @SerializedName(SERIALIZED_NAME_MAX_IMAGE_SQUARE)
  private Integer maxImageSquare;

  public static final String SERIALIZED_NAME_MEDAL_COUNT = "MedalCount";
  @SerializedName(SERIALIZED_NAME_MEDAL_COUNT)
  private Integer medalCount;

  public static final String SERIALIZED_NAME_MENU_COUNT = "MenuCount";
  @SerializedName(SERIALIZED_NAME_MENU_COUNT)
  private Integer menuCount;

  public static final String SERIALIZED_NAME_MICROCATEGORY = "Microcategory";
  @SerializedName(SERIALIZED_NAME_MICROCATEGORY)
  private String microcategory;

  public static final String SERIALIZED_NAME_NOTES_COUNT = "NotesCount";
  @SerializedName(SERIALIZED_NAME_NOTES_COUNT)
  private Integer notesCount;

  public static final String SERIALIZED_NAME_NUTRITION_INFO = "NutritionInfo";
  @SerializedName(SERIALIZED_NAME_NUTRITION_INFO)
  private BigOvenModelAPINutritionInfo nutritionInfo;

  public static final String SERIALIZED_NAME_PHOTO_URL = "PhotoUrl";
  @SerializedName(SERIALIZED_NAME_PHOTO_URL)
  private String photoUrl;

  public static final String SERIALIZED_NAME_POSTER = "Poster";
  @SerializedName(SERIALIZED_NAME_POSTER)
  private BigOvenModelAPIUserInfo poster;

  public static final String SERIALIZED_NAME_PRIMARY_INGREDIENT = "PrimaryIngredient";
  @SerializedName(SERIALIZED_NAME_PRIMARY_INGREDIENT)
  private String primaryIngredient;

  public static final String SERIALIZED_NAME_RECIPE_I_D = "RecipeID";
  @SerializedName(SERIALIZED_NAME_RECIPE_I_D)
  private Integer recipeID;

  public static final String SERIALIZED_NAME_REVIEW_COUNT = "ReviewCount";
  @SerializedName(SERIALIZED_NAME_REVIEW_COUNT)
  private Integer reviewCount;

  public static final String SERIALIZED_NAME_STAR_RATING = "StarRating";
  @SerializedName(SERIALIZED_NAME_STAR_RATING)
  private Double starRating;

  public static final String SERIALIZED_NAME_STEPS = "Steps";
  @SerializedName(SERIALIZED_NAME_STEPS)
  private List<BigOvenModelInstructionStep> steps = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUBCATEGORY = "Subcategory";
  @SerializedName(SERIALIZED_NAME_SUBCATEGORY)
  private String subcategory;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TOTAL_MINUTES = "TotalMinutes";
  @SerializedName(SERIALIZED_NAME_TOTAL_MINUTES)
  private Integer totalMinutes;

  public static final String SERIALIZED_NAME_VARIANT_OF_RECIPE_I_D = "VariantOfRecipeID";
  @SerializedName(SERIALIZED_NAME_VARIANT_OF_RECIPE_I_D)
  private Integer variantOfRecipeID;

  public static final String SERIALIZED_NAME_VERIFIED_BY_CLASS = "VerifiedByClass";
  @SerializedName(SERIALIZED_NAME_VERIFIED_BY_CLASS)
  private String verifiedByClass;

  public static final String SERIALIZED_NAME_VERIFIED_DATE_TIME = "VerifiedDateTime";
  @SerializedName(SERIALIZED_NAME_VERIFIED_DATE_TIME)
  private OffsetDateTime verifiedDateTime;

  public static final String SERIALIZED_NAME_VIDEOS = "Videos";
  @SerializedName(SERIALIZED_NAME_VIDEOS)
  private List<API2ModelsRecipesRecipeVideoResponse> videos = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEB_U_R_L = "WebURL";
  @SerializedName(SERIALIZED_NAME_WEB_U_R_L)
  private String webURL;

  public static final String SERIALIZED_NAME_YIELD_NUMBER = "YieldNumber";
  @SerializedName(SERIALIZED_NAME_YIELD_NUMBER)
  private Double yieldNumber;

  public static final String SERIALIZED_NAME_YIELD_UNIT = "YieldUnit";
  @SerializedName(SERIALIZED_NAME_YIELD_UNIT)
  private String yieldUnit;

  public API2ModelsRecipesRecipeResponse() {
  }

  public API2ModelsRecipesRecipeResponse activeMinutes(Integer activeMinutes) {
    this.activeMinutes = activeMinutes;
    return this;
  }

  /**
   * Get activeMinutes
   * @return activeMinutes
   */
  @javax.annotation.Nullable
  public Integer getActiveMinutes() {
    return activeMinutes;
  }

  public void setActiveMinutes(Integer activeMinutes) {
    this.activeMinutes = activeMinutes;
  }


  public API2ModelsRecipesRecipeResponse adTags(String adTags) {
    this.adTags = adTags;
    return this;
  }

  /**
   * Get adTags
   * @return adTags
   */
  @javax.annotation.Nullable
  public String getAdTags() {
    return adTags;
  }

  public void setAdTags(String adTags) {
    this.adTags = adTags;
  }


  public API2ModelsRecipesRecipeResponse adminBoost(Integer adminBoost) {
    this.adminBoost = adminBoost;
    return this;
  }

  /**
   * Get adminBoost
   * @return adminBoost
   */
  @javax.annotation.Nullable
  public Integer getAdminBoost() {
    return adminBoost;
  }

  public void setAdminBoost(Integer adminBoost) {
    this.adminBoost = adminBoost;
  }


  public API2ModelsRecipesRecipeResponse allCategoriesText(String allCategoriesText) {
    this.allCategoriesText = allCategoriesText;
    return this;
  }

  /**
   * Get allCategoriesText
   * @return allCategoriesText
   */
  @javax.annotation.Nullable
  public String getAllCategoriesText() {
    return allCategoriesText;
  }

  public void setAllCategoriesText(String allCategoriesText) {
    this.allCategoriesText = allCategoriesText;
  }


  public API2ModelsRecipesRecipeResponse bookmarkImageURL(String bookmarkImageURL) {
    this.bookmarkImageURL = bookmarkImageURL;
    return this;
  }

  /**
   * Get bookmarkImageURL
   * @return bookmarkImageURL
   */
  @javax.annotation.Nullable
  public String getBookmarkImageURL() {
    return bookmarkImageURL;
  }

  public void setBookmarkImageURL(String bookmarkImageURL) {
    this.bookmarkImageURL = bookmarkImageURL;
  }


  public API2ModelsRecipesRecipeResponse bookmarkSiteLogo(String bookmarkSiteLogo) {
    this.bookmarkSiteLogo = bookmarkSiteLogo;
    return this;
  }

  /**
   * Get bookmarkSiteLogo
   * @return bookmarkSiteLogo
   */
  @javax.annotation.Nullable
  public String getBookmarkSiteLogo() {
    return bookmarkSiteLogo;
  }

  public void setBookmarkSiteLogo(String bookmarkSiteLogo) {
    this.bookmarkSiteLogo = bookmarkSiteLogo;
  }


  public API2ModelsRecipesRecipeResponse bookmarkURL(String bookmarkURL) {
    this.bookmarkURL = bookmarkURL;
    return this;
  }

  /**
   * Get bookmarkURL
   * @return bookmarkURL
   */
  @javax.annotation.Nullable
  public String getBookmarkURL() {
    return bookmarkURL;
  }

  public void setBookmarkURL(String bookmarkURL) {
    this.bookmarkURL = bookmarkURL;
  }


  public API2ModelsRecipesRecipeResponse category(String category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public API2ModelsRecipesRecipeResponse collection(String collection) {
    this.collection = collection;
    return this;
  }

  /**
   * Get collection
   * @return collection
   */
  @javax.annotation.Nullable
  public String getCollection() {
    return collection;
  }

  public void setCollection(String collection) {
    this.collection = collection;
  }


  public API2ModelsRecipesRecipeResponse collectionID(Integer collectionID) {
    this.collectionID = collectionID;
    return this;
  }

  /**
   * Get collectionID
   * @return collectionID
   */
  @javax.annotation.Nullable
  public Integer getCollectionID() {
    return collectionID;
  }

  public void setCollectionID(Integer collectionID) {
    this.collectionID = collectionID;
  }


  public API2ModelsRecipesRecipeResponse creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public API2ModelsRecipesRecipeResponse cuisine(String cuisine) {
    this.cuisine = cuisine;
    return this;
  }

  /**
   * Get cuisine
   * @return cuisine
   */
  @javax.annotation.Nullable
  public String getCuisine() {
    return cuisine;
  }

  public void setCuisine(String cuisine) {
    this.cuisine = cuisine;
  }


  public API2ModelsRecipesRecipeResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public API2ModelsRecipesRecipeResponse favoriteCount(Integer favoriteCount) {
    this.favoriteCount = favoriteCount;
    return this;
  }

  /**
   * Get favoriteCount
   * @return favoriteCount
   */
  @javax.annotation.Nullable
  public Integer getFavoriteCount() {
    return favoriteCount;
  }

  public void setFavoriteCount(Integer favoriteCount) {
    this.favoriteCount = favoriteCount;
  }


  public API2ModelsRecipesRecipeResponse imageSquares(List<Integer> imageSquares) {
    this.imageSquares = imageSquares;
    return this;
  }

  public API2ModelsRecipesRecipeResponse addImageSquaresItem(Integer imageSquaresItem) {
    if (this.imageSquares == null) {
      this.imageSquares = new ArrayList<>();
    }
    this.imageSquares.add(imageSquaresItem);
    return this;
  }

  /**
   * Get imageSquares
   * @return imageSquares
   */
  @javax.annotation.Nullable
  public List<Integer> getImageSquares() {
    return imageSquares;
  }

  public void setImageSquares(List<Integer> imageSquares) {
    this.imageSquares = imageSquares;
  }


  public API2ModelsRecipesRecipeResponse imageURL(String imageURL) {
    this.imageURL = imageURL;
    return this;
  }

  /**
   * Get imageURL
   * @return imageURL
   */
  @javax.annotation.Nullable
  public String getImageURL() {
    return imageURL;
  }

  public void setImageURL(String imageURL) {
    this.imageURL = imageURL;
  }


  public API2ModelsRecipesRecipeResponse ingredients(List<BigOvenModelAPIIngredient> ingredients) {
    this.ingredients = ingredients;
    return this;
  }

  public API2ModelsRecipesRecipeResponse addIngredientsItem(BigOvenModelAPIIngredient ingredientsItem) {
    if (this.ingredients == null) {
      this.ingredients = new ArrayList<>();
    }
    this.ingredients.add(ingredientsItem);
    return this;
  }

  /**
   * Get ingredients
   * @return ingredients
   */
  @javax.annotation.Nullable
  public List<BigOvenModelAPIIngredient> getIngredients() {
    return ingredients;
  }

  public void setIngredients(List<BigOvenModelAPIIngredient> ingredients) {
    this.ingredients = ingredients;
  }


  public API2ModelsRecipesRecipeResponse ingredientsTextBlock(String ingredientsTextBlock) {
    this.ingredientsTextBlock = ingredientsTextBlock;
    return this;
  }

  /**
   * Get ingredientsTextBlock
   * @return ingredientsTextBlock
   */
  @javax.annotation.Nullable
  public String getIngredientsTextBlock() {
    return ingredientsTextBlock;
  }

  public void setIngredientsTextBlock(String ingredientsTextBlock) {
    this.ingredientsTextBlock = ingredientsTextBlock;
  }


  public API2ModelsRecipesRecipeResponse instructions(String instructions) {
    this.instructions = instructions;
    return this;
  }

  /**
   * Get instructions
   * @return instructions
   */
  @javax.annotation.Nullable
  public String getInstructions() {
    return instructions;
  }

  public void setInstructions(String instructions) {
    this.instructions = instructions;
  }


  public API2ModelsRecipesRecipeResponse isBookmark(Boolean isBookmark) {
    this.isBookmark = isBookmark;
    return this;
  }

  /**
   * Get isBookmark
   * @return isBookmark
   */
  @javax.annotation.Nullable
  public Boolean getIsBookmark() {
    return isBookmark;
  }

  public void setIsBookmark(Boolean isBookmark) {
    this.isBookmark = isBookmark;
  }


  public API2ModelsRecipesRecipeResponse isPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
    return this;
  }

  /**
   * Get isPrivate
   * @return isPrivate
   */
  @javax.annotation.Nullable
  public Boolean getIsPrivate() {
    return isPrivate;
  }

  public void setIsPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
  }


  public API2ModelsRecipesRecipeResponse isRecipeScan(Boolean isRecipeScan) {
    this.isRecipeScan = isRecipeScan;
    return this;
  }

  /**
   * Get isRecipeScan
   * @return isRecipeScan
   */
  @javax.annotation.Nullable
  public Boolean getIsRecipeScan() {
    return isRecipeScan;
  }

  public void setIsRecipeScan(Boolean isRecipeScan) {
    this.isRecipeScan = isRecipeScan;
  }


  public API2ModelsRecipesRecipeResponse isSponsored(Boolean isSponsored) {
    this.isSponsored = isSponsored;
    return this;
  }

  /**
   * Get isSponsored
   * @return isSponsored
   */
  @javax.annotation.Nullable
  public Boolean getIsSponsored() {
    return isSponsored;
  }

  public void setIsSponsored(Boolean isSponsored) {
    this.isSponsored = isSponsored;
  }


  public API2ModelsRecipesRecipeResponse lastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
    return this;
  }

  /**
   * Get lastModified
   * @return lastModified
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModified() {
    return lastModified;
  }

  public void setLastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
  }


  public API2ModelsRecipesRecipeResponse maxImageSquare(Integer maxImageSquare) {
    this.maxImageSquare = maxImageSquare;
    return this;
  }

  /**
   * Get maxImageSquare
   * @return maxImageSquare
   */
  @javax.annotation.Nullable
  public Integer getMaxImageSquare() {
    return maxImageSquare;
  }

  public void setMaxImageSquare(Integer maxImageSquare) {
    this.maxImageSquare = maxImageSquare;
  }


  public API2ModelsRecipesRecipeResponse medalCount(Integer medalCount) {
    this.medalCount = medalCount;
    return this;
  }

  /**
   * Get medalCount
   * @return medalCount
   */
  @javax.annotation.Nullable
  public Integer getMedalCount() {
    return medalCount;
  }

  public void setMedalCount(Integer medalCount) {
    this.medalCount = medalCount;
  }


  public API2ModelsRecipesRecipeResponse menuCount(Integer menuCount) {
    this.menuCount = menuCount;
    return this;
  }

  /**
   * Get menuCount
   * @return menuCount
   */
  @javax.annotation.Nullable
  public Integer getMenuCount() {
    return menuCount;
  }

  public void setMenuCount(Integer menuCount) {
    this.menuCount = menuCount;
  }


  public API2ModelsRecipesRecipeResponse microcategory(String microcategory) {
    this.microcategory = microcategory;
    return this;
  }

  /**
   * Get microcategory
   * @return microcategory
   */
  @javax.annotation.Nullable
  public String getMicrocategory() {
    return microcategory;
  }

  public void setMicrocategory(String microcategory) {
    this.microcategory = microcategory;
  }


  public API2ModelsRecipesRecipeResponse notesCount(Integer notesCount) {
    this.notesCount = notesCount;
    return this;
  }

  /**
   * Get notesCount
   * @return notesCount
   */
  @javax.annotation.Nullable
  public Integer getNotesCount() {
    return notesCount;
  }

  public void setNotesCount(Integer notesCount) {
    this.notesCount = notesCount;
  }


  public API2ModelsRecipesRecipeResponse nutritionInfo(BigOvenModelAPINutritionInfo nutritionInfo) {
    this.nutritionInfo = nutritionInfo;
    return this;
  }

  /**
   * Get nutritionInfo
   * @return nutritionInfo
   */
  @javax.annotation.Nullable
  public BigOvenModelAPINutritionInfo getNutritionInfo() {
    return nutritionInfo;
  }

  public void setNutritionInfo(BigOvenModelAPINutritionInfo nutritionInfo) {
    this.nutritionInfo = nutritionInfo;
  }


  public API2ModelsRecipesRecipeResponse photoUrl(String photoUrl) {
    this.photoUrl = photoUrl;
    return this;
  }

  /**
   * Get photoUrl
   * @return photoUrl
   */
  @javax.annotation.Nullable
  public String getPhotoUrl() {
    return photoUrl;
  }

  public void setPhotoUrl(String photoUrl) {
    this.photoUrl = photoUrl;
  }


  public API2ModelsRecipesRecipeResponse poster(BigOvenModelAPIUserInfo poster) {
    this.poster = poster;
    return this;
  }

  /**
   * Get poster
   * @return poster
   */
  @javax.annotation.Nullable
  public BigOvenModelAPIUserInfo getPoster() {
    return poster;
  }

  public void setPoster(BigOvenModelAPIUserInfo poster) {
    this.poster = poster;
  }


  public API2ModelsRecipesRecipeResponse primaryIngredient(String primaryIngredient) {
    this.primaryIngredient = primaryIngredient;
    return this;
  }

  /**
   * Get primaryIngredient
   * @return primaryIngredient
   */
  @javax.annotation.Nullable
  public String getPrimaryIngredient() {
    return primaryIngredient;
  }

  public void setPrimaryIngredient(String primaryIngredient) {
    this.primaryIngredient = primaryIngredient;
  }


  public API2ModelsRecipesRecipeResponse recipeID(Integer recipeID) {
    this.recipeID = recipeID;
    return this;
  }

  /**
   * Get recipeID
   * @return recipeID
   */
  @javax.annotation.Nullable
  public Integer getRecipeID() {
    return recipeID;
  }

  public void setRecipeID(Integer recipeID) {
    this.recipeID = recipeID;
  }


  public API2ModelsRecipesRecipeResponse reviewCount(Integer reviewCount) {
    this.reviewCount = reviewCount;
    return this;
  }

  /**
   * Get reviewCount
   * @return reviewCount
   */
  @javax.annotation.Nullable
  public Integer getReviewCount() {
    return reviewCount;
  }

  public void setReviewCount(Integer reviewCount) {
    this.reviewCount = reviewCount;
  }


  public API2ModelsRecipesRecipeResponse starRating(Double starRating) {
    this.starRating = starRating;
    return this;
  }

  /**
   * Get starRating
   * @return starRating
   */
  @javax.annotation.Nullable
  public Double getStarRating() {
    return starRating;
  }

  public void setStarRating(Double starRating) {
    this.starRating = starRating;
  }


  public API2ModelsRecipesRecipeResponse steps(List<BigOvenModelInstructionStep> steps) {
    this.steps = steps;
    return this;
  }

  public API2ModelsRecipesRecipeResponse addStepsItem(BigOvenModelInstructionStep stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<>();
    }
    this.steps.add(stepsItem);
    return this;
  }

  /**
   * Get steps
   * @return steps
   */
  @javax.annotation.Nullable
  public List<BigOvenModelInstructionStep> getSteps() {
    return steps;
  }

  public void setSteps(List<BigOvenModelInstructionStep> steps) {
    this.steps = steps;
  }


  public API2ModelsRecipesRecipeResponse subcategory(String subcategory) {
    this.subcategory = subcategory;
    return this;
  }

  /**
   * Get subcategory
   * @return subcategory
   */
  @javax.annotation.Nullable
  public String getSubcategory() {
    return subcategory;
  }

  public void setSubcategory(String subcategory) {
    this.subcategory = subcategory;
  }


  public API2ModelsRecipesRecipeResponse title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public API2ModelsRecipesRecipeResponse totalMinutes(Integer totalMinutes) {
    this.totalMinutes = totalMinutes;
    return this;
  }

  /**
   * Get totalMinutes
   * @return totalMinutes
   */
  @javax.annotation.Nullable
  public Integer getTotalMinutes() {
    return totalMinutes;
  }

  public void setTotalMinutes(Integer totalMinutes) {
    this.totalMinutes = totalMinutes;
  }


  public API2ModelsRecipesRecipeResponse variantOfRecipeID(Integer variantOfRecipeID) {
    this.variantOfRecipeID = variantOfRecipeID;
    return this;
  }

  /**
   * Get variantOfRecipeID
   * @return variantOfRecipeID
   */
  @javax.annotation.Nullable
  public Integer getVariantOfRecipeID() {
    return variantOfRecipeID;
  }

  public void setVariantOfRecipeID(Integer variantOfRecipeID) {
    this.variantOfRecipeID = variantOfRecipeID;
  }


  public API2ModelsRecipesRecipeResponse verifiedByClass(String verifiedByClass) {
    this.verifiedByClass = verifiedByClass;
    return this;
  }

  /**
   * Get verifiedByClass
   * @return verifiedByClass
   */
  @javax.annotation.Nullable
  public String getVerifiedByClass() {
    return verifiedByClass;
  }

  public void setVerifiedByClass(String verifiedByClass) {
    this.verifiedByClass = verifiedByClass;
  }


  public API2ModelsRecipesRecipeResponse verifiedDateTime(OffsetDateTime verifiedDateTime) {
    this.verifiedDateTime = verifiedDateTime;
    return this;
  }

  /**
   * Get verifiedDateTime
   * @return verifiedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getVerifiedDateTime() {
    return verifiedDateTime;
  }

  public void setVerifiedDateTime(OffsetDateTime verifiedDateTime) {
    this.verifiedDateTime = verifiedDateTime;
  }


  public API2ModelsRecipesRecipeResponse videos(List<API2ModelsRecipesRecipeVideoResponse> videos) {
    this.videos = videos;
    return this;
  }

  public API2ModelsRecipesRecipeResponse addVideosItem(API2ModelsRecipesRecipeVideoResponse videosItem) {
    if (this.videos == null) {
      this.videos = new ArrayList<>();
    }
    this.videos.add(videosItem);
    return this;
  }

  /**
   * Gets or sets the recipe videos, i.e. a list of type {API2.Models.Recipes.RecipeVideoResponse}
   * @return videos
   */
  @javax.annotation.Nullable
  public List<API2ModelsRecipesRecipeVideoResponse> getVideos() {
    return videos;
  }

  public void setVideos(List<API2ModelsRecipesRecipeVideoResponse> videos) {
    this.videos = videos;
  }


  public API2ModelsRecipesRecipeResponse webURL(String webURL) {
    this.webURL = webURL;
    return this;
  }

  /**
   * Get webURL
   * @return webURL
   */
  @javax.annotation.Nullable
  public String getWebURL() {
    return webURL;
  }

  public void setWebURL(String webURL) {
    this.webURL = webURL;
  }


  public API2ModelsRecipesRecipeResponse yieldNumber(Double yieldNumber) {
    this.yieldNumber = yieldNumber;
    return this;
  }

  /**
   * Get yieldNumber
   * @return yieldNumber
   */
  @javax.annotation.Nullable
  public Double getYieldNumber() {
    return yieldNumber;
  }

  public void setYieldNumber(Double yieldNumber) {
    this.yieldNumber = yieldNumber;
  }


  public API2ModelsRecipesRecipeResponse yieldUnit(String yieldUnit) {
    this.yieldUnit = yieldUnit;
    return this;
  }

  /**
   * Get yieldUnit
   * @return yieldUnit
   */
  @javax.annotation.Nullable
  public String getYieldUnit() {
    return yieldUnit;
  }

  public void setYieldUnit(String yieldUnit) {
    this.yieldUnit = yieldUnit;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    API2ModelsRecipesRecipeResponse apI2ModelsRecipesRecipeResponse = (API2ModelsRecipesRecipeResponse) o;
    return Objects.equals(this.activeMinutes, apI2ModelsRecipesRecipeResponse.activeMinutes) &&
        Objects.equals(this.adTags, apI2ModelsRecipesRecipeResponse.adTags) &&
        Objects.equals(this.adminBoost, apI2ModelsRecipesRecipeResponse.adminBoost) &&
        Objects.equals(this.allCategoriesText, apI2ModelsRecipesRecipeResponse.allCategoriesText) &&
        Objects.equals(this.bookmarkImageURL, apI2ModelsRecipesRecipeResponse.bookmarkImageURL) &&
        Objects.equals(this.bookmarkSiteLogo, apI2ModelsRecipesRecipeResponse.bookmarkSiteLogo) &&
        Objects.equals(this.bookmarkURL, apI2ModelsRecipesRecipeResponse.bookmarkURL) &&
        Objects.equals(this.category, apI2ModelsRecipesRecipeResponse.category) &&
        Objects.equals(this.collection, apI2ModelsRecipesRecipeResponse.collection) &&
        Objects.equals(this.collectionID, apI2ModelsRecipesRecipeResponse.collectionID) &&
        Objects.equals(this.creationDate, apI2ModelsRecipesRecipeResponse.creationDate) &&
        Objects.equals(this.cuisine, apI2ModelsRecipesRecipeResponse.cuisine) &&
        Objects.equals(this.description, apI2ModelsRecipesRecipeResponse.description) &&
        Objects.equals(this.favoriteCount, apI2ModelsRecipesRecipeResponse.favoriteCount) &&
        Objects.equals(this.imageSquares, apI2ModelsRecipesRecipeResponse.imageSquares) &&
        Objects.equals(this.imageURL, apI2ModelsRecipesRecipeResponse.imageURL) &&
        Objects.equals(this.ingredients, apI2ModelsRecipesRecipeResponse.ingredients) &&
        Objects.equals(this.ingredientsTextBlock, apI2ModelsRecipesRecipeResponse.ingredientsTextBlock) &&
        Objects.equals(this.instructions, apI2ModelsRecipesRecipeResponse.instructions) &&
        Objects.equals(this.isBookmark, apI2ModelsRecipesRecipeResponse.isBookmark) &&
        Objects.equals(this.isPrivate, apI2ModelsRecipesRecipeResponse.isPrivate) &&
        Objects.equals(this.isRecipeScan, apI2ModelsRecipesRecipeResponse.isRecipeScan) &&
        Objects.equals(this.isSponsored, apI2ModelsRecipesRecipeResponse.isSponsored) &&
        Objects.equals(this.lastModified, apI2ModelsRecipesRecipeResponse.lastModified) &&
        Objects.equals(this.maxImageSquare, apI2ModelsRecipesRecipeResponse.maxImageSquare) &&
        Objects.equals(this.medalCount, apI2ModelsRecipesRecipeResponse.medalCount) &&
        Objects.equals(this.menuCount, apI2ModelsRecipesRecipeResponse.menuCount) &&
        Objects.equals(this.microcategory, apI2ModelsRecipesRecipeResponse.microcategory) &&
        Objects.equals(this.notesCount, apI2ModelsRecipesRecipeResponse.notesCount) &&
        Objects.equals(this.nutritionInfo, apI2ModelsRecipesRecipeResponse.nutritionInfo) &&
        Objects.equals(this.photoUrl, apI2ModelsRecipesRecipeResponse.photoUrl) &&
        Objects.equals(this.poster, apI2ModelsRecipesRecipeResponse.poster) &&
        Objects.equals(this.primaryIngredient, apI2ModelsRecipesRecipeResponse.primaryIngredient) &&
        Objects.equals(this.recipeID, apI2ModelsRecipesRecipeResponse.recipeID) &&
        Objects.equals(this.reviewCount, apI2ModelsRecipesRecipeResponse.reviewCount) &&
        Objects.equals(this.starRating, apI2ModelsRecipesRecipeResponse.starRating) &&
        Objects.equals(this.steps, apI2ModelsRecipesRecipeResponse.steps) &&
        Objects.equals(this.subcategory, apI2ModelsRecipesRecipeResponse.subcategory) &&
        Objects.equals(this.title, apI2ModelsRecipesRecipeResponse.title) &&
        Objects.equals(this.totalMinutes, apI2ModelsRecipesRecipeResponse.totalMinutes) &&
        Objects.equals(this.variantOfRecipeID, apI2ModelsRecipesRecipeResponse.variantOfRecipeID) &&
        Objects.equals(this.verifiedByClass, apI2ModelsRecipesRecipeResponse.verifiedByClass) &&
        Objects.equals(this.verifiedDateTime, apI2ModelsRecipesRecipeResponse.verifiedDateTime) &&
        Objects.equals(this.videos, apI2ModelsRecipesRecipeResponse.videos) &&
        Objects.equals(this.webURL, apI2ModelsRecipesRecipeResponse.webURL) &&
        Objects.equals(this.yieldNumber, apI2ModelsRecipesRecipeResponse.yieldNumber) &&
        Objects.equals(this.yieldUnit, apI2ModelsRecipesRecipeResponse.yieldUnit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeMinutes, adTags, adminBoost, allCategoriesText, bookmarkImageURL, bookmarkSiteLogo, bookmarkURL, category, collection, collectionID, creationDate, cuisine, description, favoriteCount, imageSquares, imageURL, ingredients, ingredientsTextBlock, instructions, isBookmark, isPrivate, isRecipeScan, isSponsored, lastModified, maxImageSquare, medalCount, menuCount, microcategory, notesCount, nutritionInfo, photoUrl, poster, primaryIngredient, recipeID, reviewCount, starRating, steps, subcategory, title, totalMinutes, variantOfRecipeID, verifiedByClass, verifiedDateTime, videos, webURL, yieldNumber, yieldUnit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class API2ModelsRecipesRecipeResponse {\n");
    sb.append("    activeMinutes: ").append(toIndentedString(activeMinutes)).append("\n");
    sb.append("    adTags: ").append(toIndentedString(adTags)).append("\n");
    sb.append("    adminBoost: ").append(toIndentedString(adminBoost)).append("\n");
    sb.append("    allCategoriesText: ").append(toIndentedString(allCategoriesText)).append("\n");
    sb.append("    bookmarkImageURL: ").append(toIndentedString(bookmarkImageURL)).append("\n");
    sb.append("    bookmarkSiteLogo: ").append(toIndentedString(bookmarkSiteLogo)).append("\n");
    sb.append("    bookmarkURL: ").append(toIndentedString(bookmarkURL)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    collection: ").append(toIndentedString(collection)).append("\n");
    sb.append("    collectionID: ").append(toIndentedString(collectionID)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    cuisine: ").append(toIndentedString(cuisine)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    favoriteCount: ").append(toIndentedString(favoriteCount)).append("\n");
    sb.append("    imageSquares: ").append(toIndentedString(imageSquares)).append("\n");
    sb.append("    imageURL: ").append(toIndentedString(imageURL)).append("\n");
    sb.append("    ingredients: ").append(toIndentedString(ingredients)).append("\n");
    sb.append("    ingredientsTextBlock: ").append(toIndentedString(ingredientsTextBlock)).append("\n");
    sb.append("    instructions: ").append(toIndentedString(instructions)).append("\n");
    sb.append("    isBookmark: ").append(toIndentedString(isBookmark)).append("\n");
    sb.append("    isPrivate: ").append(toIndentedString(isPrivate)).append("\n");
    sb.append("    isRecipeScan: ").append(toIndentedString(isRecipeScan)).append("\n");
    sb.append("    isSponsored: ").append(toIndentedString(isSponsored)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    maxImageSquare: ").append(toIndentedString(maxImageSquare)).append("\n");
    sb.append("    medalCount: ").append(toIndentedString(medalCount)).append("\n");
    sb.append("    menuCount: ").append(toIndentedString(menuCount)).append("\n");
    sb.append("    microcategory: ").append(toIndentedString(microcategory)).append("\n");
    sb.append("    notesCount: ").append(toIndentedString(notesCount)).append("\n");
    sb.append("    nutritionInfo: ").append(toIndentedString(nutritionInfo)).append("\n");
    sb.append("    photoUrl: ").append(toIndentedString(photoUrl)).append("\n");
    sb.append("    poster: ").append(toIndentedString(poster)).append("\n");
    sb.append("    primaryIngredient: ").append(toIndentedString(primaryIngredient)).append("\n");
    sb.append("    recipeID: ").append(toIndentedString(recipeID)).append("\n");
    sb.append("    reviewCount: ").append(toIndentedString(reviewCount)).append("\n");
    sb.append("    starRating: ").append(toIndentedString(starRating)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    subcategory: ").append(toIndentedString(subcategory)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    totalMinutes: ").append(toIndentedString(totalMinutes)).append("\n");
    sb.append("    variantOfRecipeID: ").append(toIndentedString(variantOfRecipeID)).append("\n");
    sb.append("    verifiedByClass: ").append(toIndentedString(verifiedByClass)).append("\n");
    sb.append("    verifiedDateTime: ").append(toIndentedString(verifiedDateTime)).append("\n");
    sb.append("    videos: ").append(toIndentedString(videos)).append("\n");
    sb.append("    webURL: ").append(toIndentedString(webURL)).append("\n");
    sb.append("    yieldNumber: ").append(toIndentedString(yieldNumber)).append("\n");
    sb.append("    yieldUnit: ").append(toIndentedString(yieldUnit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ActiveMinutes");
    openapiFields.add("AdTags");
    openapiFields.add("AdminBoost");
    openapiFields.add("AllCategoriesText");
    openapiFields.add("BookmarkImageURL");
    openapiFields.add("BookmarkSiteLogo");
    openapiFields.add("BookmarkURL");
    openapiFields.add("Category");
    openapiFields.add("Collection");
    openapiFields.add("CollectionID");
    openapiFields.add("CreationDate");
    openapiFields.add("Cuisine");
    openapiFields.add("Description");
    openapiFields.add("FavoriteCount");
    openapiFields.add("ImageSquares");
    openapiFields.add("ImageURL");
    openapiFields.add("Ingredients");
    openapiFields.add("IngredientsTextBlock");
    openapiFields.add("Instructions");
    openapiFields.add("IsBookmark");
    openapiFields.add("IsPrivate");
    openapiFields.add("IsRecipeScan");
    openapiFields.add("IsSponsored");
    openapiFields.add("LastModified");
    openapiFields.add("MaxImageSquare");
    openapiFields.add("MedalCount");
    openapiFields.add("MenuCount");
    openapiFields.add("Microcategory");
    openapiFields.add("NotesCount");
    openapiFields.add("NutritionInfo");
    openapiFields.add("PhotoUrl");
    openapiFields.add("Poster");
    openapiFields.add("PrimaryIngredient");
    openapiFields.add("RecipeID");
    openapiFields.add("ReviewCount");
    openapiFields.add("StarRating");
    openapiFields.add("Steps");
    openapiFields.add("Subcategory");
    openapiFields.add("Title");
    openapiFields.add("TotalMinutes");
    openapiFields.add("VariantOfRecipeID");
    openapiFields.add("VerifiedByClass");
    openapiFields.add("VerifiedDateTime");
    openapiFields.add("Videos");
    openapiFields.add("WebURL");
    openapiFields.add("YieldNumber");
    openapiFields.add("YieldUnit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to API2ModelsRecipesRecipeResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!API2ModelsRecipesRecipeResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in API2ModelsRecipesRecipeResponse is not found in the empty JSON string", API2ModelsRecipesRecipeResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!API2ModelsRecipesRecipeResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `API2ModelsRecipesRecipeResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AdTags") != null && !jsonObj.get("AdTags").isJsonNull()) && !jsonObj.get("AdTags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AdTags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AdTags").toString()));
      }
      if ((jsonObj.get("AllCategoriesText") != null && !jsonObj.get("AllCategoriesText").isJsonNull()) && !jsonObj.get("AllCategoriesText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AllCategoriesText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AllCategoriesText").toString()));
      }
      if ((jsonObj.get("BookmarkImageURL") != null && !jsonObj.get("BookmarkImageURL").isJsonNull()) && !jsonObj.get("BookmarkImageURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BookmarkImageURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BookmarkImageURL").toString()));
      }
      if ((jsonObj.get("BookmarkSiteLogo") != null && !jsonObj.get("BookmarkSiteLogo").isJsonNull()) && !jsonObj.get("BookmarkSiteLogo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BookmarkSiteLogo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BookmarkSiteLogo").toString()));
      }
      if ((jsonObj.get("BookmarkURL") != null && !jsonObj.get("BookmarkURL").isJsonNull()) && !jsonObj.get("BookmarkURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BookmarkURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BookmarkURL").toString()));
      }
      if ((jsonObj.get("Category") != null && !jsonObj.get("Category").isJsonNull()) && !jsonObj.get("Category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Category").toString()));
      }
      if ((jsonObj.get("Collection") != null && !jsonObj.get("Collection").isJsonNull()) && !jsonObj.get("Collection").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Collection` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Collection").toString()));
      }
      if ((jsonObj.get("Cuisine") != null && !jsonObj.get("Cuisine").isJsonNull()) && !jsonObj.get("Cuisine").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Cuisine` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Cuisine").toString()));
      }
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ImageSquares") != null && !jsonObj.get("ImageSquares").isJsonNull() && !jsonObj.get("ImageSquares").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ImageSquares` to be an array in the JSON string but got `%s`", jsonObj.get("ImageSquares").toString()));
      }
      if ((jsonObj.get("ImageURL") != null && !jsonObj.get("ImageURL").isJsonNull()) && !jsonObj.get("ImageURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ImageURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ImageURL").toString()));
      }
      if (jsonObj.get("Ingredients") != null && !jsonObj.get("Ingredients").isJsonNull()) {
        JsonArray jsonArrayingredients = jsonObj.getAsJsonArray("Ingredients");
        if (jsonArrayingredients != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Ingredients").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Ingredients` to be an array in the JSON string but got `%s`", jsonObj.get("Ingredients").toString()));
          }

          // validate the optional field `Ingredients` (array)
          for (int i = 0; i < jsonArrayingredients.size(); i++) {
            BigOvenModelAPIIngredient.validateJsonElement(jsonArrayingredients.get(i));
          };
        }
      }
      if ((jsonObj.get("IngredientsTextBlock") != null && !jsonObj.get("IngredientsTextBlock").isJsonNull()) && !jsonObj.get("IngredientsTextBlock").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IngredientsTextBlock` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IngredientsTextBlock").toString()));
      }
      if ((jsonObj.get("Instructions") != null && !jsonObj.get("Instructions").isJsonNull()) && !jsonObj.get("Instructions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Instructions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Instructions").toString()));
      }
      if ((jsonObj.get("Microcategory") != null && !jsonObj.get("Microcategory").isJsonNull()) && !jsonObj.get("Microcategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Microcategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Microcategory").toString()));
      }
      // validate the optional field `NutritionInfo`
      if (jsonObj.get("NutritionInfo") != null && !jsonObj.get("NutritionInfo").isJsonNull()) {
        BigOvenModelAPINutritionInfo.validateJsonElement(jsonObj.get("NutritionInfo"));
      }
      if ((jsonObj.get("PhotoUrl") != null && !jsonObj.get("PhotoUrl").isJsonNull()) && !jsonObj.get("PhotoUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PhotoUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PhotoUrl").toString()));
      }
      // validate the optional field `Poster`
      if (jsonObj.get("Poster") != null && !jsonObj.get("Poster").isJsonNull()) {
        BigOvenModelAPIUserInfo.validateJsonElement(jsonObj.get("Poster"));
      }
      if ((jsonObj.get("PrimaryIngredient") != null && !jsonObj.get("PrimaryIngredient").isJsonNull()) && !jsonObj.get("PrimaryIngredient").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PrimaryIngredient` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PrimaryIngredient").toString()));
      }
      if (jsonObj.get("Steps") != null && !jsonObj.get("Steps").isJsonNull()) {
        JsonArray jsonArraysteps = jsonObj.getAsJsonArray("Steps");
        if (jsonArraysteps != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Steps").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Steps` to be an array in the JSON string but got `%s`", jsonObj.get("Steps").toString()));
          }

          // validate the optional field `Steps` (array)
          for (int i = 0; i < jsonArraysteps.size(); i++) {
            BigOvenModelInstructionStep.validateJsonElement(jsonArraysteps.get(i));
          };
        }
      }
      if ((jsonObj.get("Subcategory") != null && !jsonObj.get("Subcategory").isJsonNull()) && !jsonObj.get("Subcategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Subcategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Subcategory").toString()));
      }
      if ((jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) && !jsonObj.get("Title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Title").toString()));
      }
      if ((jsonObj.get("VerifiedByClass") != null && !jsonObj.get("VerifiedByClass").isJsonNull()) && !jsonObj.get("VerifiedByClass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `VerifiedByClass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("VerifiedByClass").toString()));
      }
      if (jsonObj.get("Videos") != null && !jsonObj.get("Videos").isJsonNull()) {
        JsonArray jsonArrayvideos = jsonObj.getAsJsonArray("Videos");
        if (jsonArrayvideos != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Videos").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Videos` to be an array in the JSON string but got `%s`", jsonObj.get("Videos").toString()));
          }

          // validate the optional field `Videos` (array)
          for (int i = 0; i < jsonArrayvideos.size(); i++) {
            API2ModelsRecipesRecipeVideoResponse.validateJsonElement(jsonArrayvideos.get(i));
          };
        }
      }
      if ((jsonObj.get("WebURL") != null && !jsonObj.get("WebURL").isJsonNull()) && !jsonObj.get("WebURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WebURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WebURL").toString()));
      }
      if ((jsonObj.get("YieldUnit") != null && !jsonObj.get("YieldUnit").isJsonNull()) && !jsonObj.get("YieldUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `YieldUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("YieldUnit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!API2ModelsRecipesRecipeResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'API2ModelsRecipesRecipeResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<API2ModelsRecipesRecipeResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(API2ModelsRecipesRecipeResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<API2ModelsRecipesRecipeResponse>() {
           @Override
           public void write(JsonWriter out, API2ModelsRecipesRecipeResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public API2ModelsRecipesRecipeResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of API2ModelsRecipesRecipeResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of API2ModelsRecipesRecipeResponse
   * @throws IOException if the JSON string is invalid with respect to API2ModelsRecipesRecipeResponse
   */
  public static API2ModelsRecipesRecipeResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, API2ModelsRecipesRecipeResponse.class);
  }

  /**
   * Convert an instance of API2ModelsRecipesRecipeResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

