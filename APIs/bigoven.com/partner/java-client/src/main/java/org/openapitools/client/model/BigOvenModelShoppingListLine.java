/*
 * 1,000,000+ Recipe and Grocery List API (v2)
 * #Documentation    This is the documentation for the partner endpoint of the BigOven Recipe and Grocery List API.    The update brings with it Swagger-based documentation. [Swagger](http://swagger.io) is an emerging standard for describing REST-based APIs, and with this Swagger-compliant endpoint (above), you can make ready-to-go interface libraries for your code via [swagger-codegen](https://github.com/swagger-api/swagger-codegen). For instance, it's easy to generate libraries for Node.js, Java, Ruby, ASP.NET MVC, jQuery, php and more!    You can also try out the endpoint calls with your own api_key right here on this page. Be sure to enter your api_key above to use the \"Try it out!\" buttons on this page.    ##Start Here    Developers new to the BigOven API should start with this version, not with the legacy API. We'll be making improvements to this API over time, and doing only bug fixes on the v1 API.        To pretend you're a BigOven user (for instance, to get your recently viewed recipes or your grocery list), you need to pass in Basic Authentication information in the header, just as with the v1 API. We do now require that you make all calls via https. You need to pass your api_key in with every call, though this can now be done on the header (send a request header \"X-BigOven-API-Key\" set to your api_key value, e.g., Request[\"X-BigOven-API-Key\"]=\"your-key-here\".)    ##Migration Notes    For existing partners, we encourage you to [migrate](https://api2.bigoven.com), and while at this writing we have no hard-and-fast termination date for the v1 API, we strongly prefer that you migrate by January 1, 2017. While the changes aren't overly complex, there are several breaking changes, including refactoring of recipe search and results and removal of support for XML. This is not a simply plug-and-play replacement to the v1 API. With respect to an exclusive focus on JSON, the world has spoken, and it prefers JSON for REST-based API's. We've taken numerous steps to refactor the API to make it more REST-compliant. Note that this v2 API will be the preferred API from this point onward, so we encourage developers to migrate to this new format. We have put together some [migration notes](/web/documentation/migration-to-v2) that we encourage you to read carefully.    ##Photos    See our [photos documentation](https://api2.bigoven.com/web/documentation/recipe-images).     For more information on usage of this API, including features, pricing, rate limits, terms and conditions, please visit the [BigOven API website](https://api2.bigoven.com).
 *
 * The version of the OpenAPI document: partner
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BigOvenModelShoppingListLine
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:31.647548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BigOvenModelShoppingListLine {
  public static final String SERIALIZED_NAME_DATE_ADDED = "DateAdded";
  @SerializedName(SERIALIZED_NAME_DATE_ADDED)
  private OffsetDateTime dateAdded;

  public static final String SERIALIZED_NAME_DEPT = "Dept";
  @SerializedName(SERIALIZED_NAME_DEPT)
  private String dept;

  public static final String SERIALIZED_NAME_G_U_I_D = "GUID";
  @SerializedName(SERIALIZED_NAME_G_U_I_D)
  private String GUID;

  public static final String SERIALIZED_NAME_HT_M_L_ITEM_NAME = "HTMLItemName";
  @SerializedName(SERIALIZED_NAME_HT_M_L_ITEM_NAME)
  private String htMLItemName;

  public static final String SERIALIZED_NAME_IS_CHECKED = "IsChecked";
  @SerializedName(SERIALIZED_NAME_IS_CHECKED)
  private Boolean isChecked;

  public static final String SERIALIZED_NAME_ITEM_NAME = "ItemName";
  @SerializedName(SERIALIZED_NAME_ITEM_NAME)
  private String itemName;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "LastModified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private OffsetDateTime lastModified;

  public static final String SERIALIZED_NAME_LIST_I_D = "ListID";
  @SerializedName(SERIALIZED_NAME_LIST_I_D)
  private Long listID;

  public static final String SERIALIZED_NAME_MEAL_PLAN_I_D = "MealPlanID";
  @SerializedName(SERIALIZED_NAME_MEAL_PLAN_I_D)
  private Integer mealPlanID;

  public static final String SERIALIZED_NAME_MEAL_PLAN_OBJECT_TYPE = "MealPlanObjectType";
  @SerializedName(SERIALIZED_NAME_MEAL_PLAN_OBJECT_TYPE)
  private Integer mealPlanObjectType;

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_PENDING_ADDITION = "PendingAddition";
  @SerializedName(SERIALIZED_NAME_PENDING_ADDITION)
  private Boolean pendingAddition;

  public static final String SERIALIZED_NAME_RECIPE_I_D = "RecipeID";
  @SerializedName(SERIALIZED_NAME_RECIPE_I_D)
  private Integer recipeID;

  public static final String SERIALIZED_NAME_SHOPPING_LIST_LINE_I_D = "ShoppingListLineID";
  @SerializedName(SERIALIZED_NAME_SHOPPING_LIST_LINE_I_D)
  private Long shoppingListLineID;

  public static final String SERIALIZED_NAME_STORE = "Store";
  @SerializedName(SERIALIZED_NAME_STORE)
  private String store;

  public static final String SERIALIZED_NAME_TEXT_AMT = "TextAmt";
  @SerializedName(SERIALIZED_NAME_TEXT_AMT)
  private String textAmt;

  public static final String SERIALIZED_NAME_THIRD_PARTY_HOST = "ThirdPartyHost";
  @SerializedName(SERIALIZED_NAME_THIRD_PARTY_HOST)
  private String thirdPartyHost;

  public static final String SERIALIZED_NAME_THIRD_PARTY_TITLE = "ThirdPartyTitle";
  @SerializedName(SERIALIZED_NAME_THIRD_PARTY_TITLE)
  private String thirdPartyTitle;

  public static final String SERIALIZED_NAME_THIRD_PARTY_U_R_L = "ThirdPartyURL";
  @SerializedName(SERIALIZED_NAME_THIRD_PARTY_U_R_L)
  private String thirdPartyURL;

  public BigOvenModelShoppingListLine() {
  }

  public BigOvenModelShoppingListLine dateAdded(OffsetDateTime dateAdded) {
    this.dateAdded = dateAdded;
    return this;
  }

  /**
   * Get dateAdded
   * @return dateAdded
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateAdded() {
    return dateAdded;
  }

  public void setDateAdded(OffsetDateTime dateAdded) {
    this.dateAdded = dateAdded;
  }


  public BigOvenModelShoppingListLine dept(String dept) {
    this.dept = dept;
    return this;
  }

  /**
   * Get dept
   * @return dept
   */
  @javax.annotation.Nullable
  public String getDept() {
    return dept;
  }

  public void setDept(String dept) {
    this.dept = dept;
  }


  public BigOvenModelShoppingListLine GUID(String GUID) {
    this.GUID = GUID;
    return this;
  }

  /**
   * Get GUID
   * @return GUID
   */
  @javax.annotation.Nullable
  public String getGUID() {
    return GUID;
  }

  public void setGUID(String GUID) {
    this.GUID = GUID;
  }


  public BigOvenModelShoppingListLine htMLItemName(String htMLItemName) {
    this.htMLItemName = htMLItemName;
    return this;
  }

  /**
   * Get htMLItemName
   * @return htMLItemName
   */
  @javax.annotation.Nullable
  public String getHtMLItemName() {
    return htMLItemName;
  }

  public void setHtMLItemName(String htMLItemName) {
    this.htMLItemName = htMLItemName;
  }


  public BigOvenModelShoppingListLine isChecked(Boolean isChecked) {
    this.isChecked = isChecked;
    return this;
  }

  /**
   * Get isChecked
   * @return isChecked
   */
  @javax.annotation.Nullable
  public Boolean getIsChecked() {
    return isChecked;
  }

  public void setIsChecked(Boolean isChecked) {
    this.isChecked = isChecked;
  }


  public BigOvenModelShoppingListLine itemName(String itemName) {
    this.itemName = itemName;
    return this;
  }

  /**
   * Get itemName
   * @return itemName
   */
  @javax.annotation.Nullable
  public String getItemName() {
    return itemName;
  }

  public void setItemName(String itemName) {
    this.itemName = itemName;
  }


  public BigOvenModelShoppingListLine lastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
    return this;
  }

  /**
   * Get lastModified
   * @return lastModified
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModified() {
    return lastModified;
  }

  public void setLastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
  }


  public BigOvenModelShoppingListLine listID(Long listID) {
    this.listID = listID;
    return this;
  }

  /**
   * Get listID
   * @return listID
   */
  @javax.annotation.Nullable
  public Long getListID() {
    return listID;
  }

  public void setListID(Long listID) {
    this.listID = listID;
  }


  public BigOvenModelShoppingListLine mealPlanID(Integer mealPlanID) {
    this.mealPlanID = mealPlanID;
    return this;
  }

  /**
   * Get mealPlanID
   * @return mealPlanID
   */
  @javax.annotation.Nullable
  public Integer getMealPlanID() {
    return mealPlanID;
  }

  public void setMealPlanID(Integer mealPlanID) {
    this.mealPlanID = mealPlanID;
  }


  public BigOvenModelShoppingListLine mealPlanObjectType(Integer mealPlanObjectType) {
    this.mealPlanObjectType = mealPlanObjectType;
    return this;
  }

  /**
   * Get mealPlanObjectType
   * @return mealPlanObjectType
   */
  @javax.annotation.Nullable
  public Integer getMealPlanObjectType() {
    return mealPlanObjectType;
  }

  public void setMealPlanObjectType(Integer mealPlanObjectType) {
    this.mealPlanObjectType = mealPlanObjectType;
  }


  public BigOvenModelShoppingListLine notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public BigOvenModelShoppingListLine pendingAddition(Boolean pendingAddition) {
    this.pendingAddition = pendingAddition;
    return this;
  }

  /**
   * Get pendingAddition
   * @return pendingAddition
   */
  @javax.annotation.Nullable
  public Boolean getPendingAddition() {
    return pendingAddition;
  }

  public void setPendingAddition(Boolean pendingAddition) {
    this.pendingAddition = pendingAddition;
  }


  public BigOvenModelShoppingListLine recipeID(Integer recipeID) {
    this.recipeID = recipeID;
    return this;
  }

  /**
   * Get recipeID
   * @return recipeID
   */
  @javax.annotation.Nullable
  public Integer getRecipeID() {
    return recipeID;
  }

  public void setRecipeID(Integer recipeID) {
    this.recipeID = recipeID;
  }


  public BigOvenModelShoppingListLine shoppingListLineID(Long shoppingListLineID) {
    this.shoppingListLineID = shoppingListLineID;
    return this;
  }

  /**
   * Get shoppingListLineID
   * @return shoppingListLineID
   */
  @javax.annotation.Nullable
  public Long getShoppingListLineID() {
    return shoppingListLineID;
  }

  public void setShoppingListLineID(Long shoppingListLineID) {
    this.shoppingListLineID = shoppingListLineID;
  }


  public BigOvenModelShoppingListLine store(String store) {
    this.store = store;
    return this;
  }

  /**
   * Get store
   * @return store
   */
  @javax.annotation.Nullable
  public String getStore() {
    return store;
  }

  public void setStore(String store) {
    this.store = store;
  }


  public BigOvenModelShoppingListLine textAmt(String textAmt) {
    this.textAmt = textAmt;
    return this;
  }

  /**
   * Get textAmt
   * @return textAmt
   */
  @javax.annotation.Nullable
  public String getTextAmt() {
    return textAmt;
  }

  public void setTextAmt(String textAmt) {
    this.textAmt = textAmt;
  }


  public BigOvenModelShoppingListLine thirdPartyHost(String thirdPartyHost) {
    this.thirdPartyHost = thirdPartyHost;
    return this;
  }

  /**
   * Get thirdPartyHost
   * @return thirdPartyHost
   */
  @javax.annotation.Nullable
  public String getThirdPartyHost() {
    return thirdPartyHost;
  }

  public void setThirdPartyHost(String thirdPartyHost) {
    this.thirdPartyHost = thirdPartyHost;
  }


  public BigOvenModelShoppingListLine thirdPartyTitle(String thirdPartyTitle) {
    this.thirdPartyTitle = thirdPartyTitle;
    return this;
  }

  /**
   * Get thirdPartyTitle
   * @return thirdPartyTitle
   */
  @javax.annotation.Nullable
  public String getThirdPartyTitle() {
    return thirdPartyTitle;
  }

  public void setThirdPartyTitle(String thirdPartyTitle) {
    this.thirdPartyTitle = thirdPartyTitle;
  }


  public BigOvenModelShoppingListLine thirdPartyURL(String thirdPartyURL) {
    this.thirdPartyURL = thirdPartyURL;
    return this;
  }

  /**
   * Get thirdPartyURL
   * @return thirdPartyURL
   */
  @javax.annotation.Nullable
  public String getThirdPartyURL() {
    return thirdPartyURL;
  }

  public void setThirdPartyURL(String thirdPartyURL) {
    this.thirdPartyURL = thirdPartyURL;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BigOvenModelShoppingListLine bigOvenModelShoppingListLine = (BigOvenModelShoppingListLine) o;
    return Objects.equals(this.dateAdded, bigOvenModelShoppingListLine.dateAdded) &&
        Objects.equals(this.dept, bigOvenModelShoppingListLine.dept) &&
        Objects.equals(this.GUID, bigOvenModelShoppingListLine.GUID) &&
        Objects.equals(this.htMLItemName, bigOvenModelShoppingListLine.htMLItemName) &&
        Objects.equals(this.isChecked, bigOvenModelShoppingListLine.isChecked) &&
        Objects.equals(this.itemName, bigOvenModelShoppingListLine.itemName) &&
        Objects.equals(this.lastModified, bigOvenModelShoppingListLine.lastModified) &&
        Objects.equals(this.listID, bigOvenModelShoppingListLine.listID) &&
        Objects.equals(this.mealPlanID, bigOvenModelShoppingListLine.mealPlanID) &&
        Objects.equals(this.mealPlanObjectType, bigOvenModelShoppingListLine.mealPlanObjectType) &&
        Objects.equals(this.notes, bigOvenModelShoppingListLine.notes) &&
        Objects.equals(this.pendingAddition, bigOvenModelShoppingListLine.pendingAddition) &&
        Objects.equals(this.recipeID, bigOvenModelShoppingListLine.recipeID) &&
        Objects.equals(this.shoppingListLineID, bigOvenModelShoppingListLine.shoppingListLineID) &&
        Objects.equals(this.store, bigOvenModelShoppingListLine.store) &&
        Objects.equals(this.textAmt, bigOvenModelShoppingListLine.textAmt) &&
        Objects.equals(this.thirdPartyHost, bigOvenModelShoppingListLine.thirdPartyHost) &&
        Objects.equals(this.thirdPartyTitle, bigOvenModelShoppingListLine.thirdPartyTitle) &&
        Objects.equals(this.thirdPartyURL, bigOvenModelShoppingListLine.thirdPartyURL);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateAdded, dept, GUID, htMLItemName, isChecked, itemName, lastModified, listID, mealPlanID, mealPlanObjectType, notes, pendingAddition, recipeID, shoppingListLineID, store, textAmt, thirdPartyHost, thirdPartyTitle, thirdPartyURL);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BigOvenModelShoppingListLine {\n");
    sb.append("    dateAdded: ").append(toIndentedString(dateAdded)).append("\n");
    sb.append("    dept: ").append(toIndentedString(dept)).append("\n");
    sb.append("    GUID: ").append(toIndentedString(GUID)).append("\n");
    sb.append("    htMLItemName: ").append(toIndentedString(htMLItemName)).append("\n");
    sb.append("    isChecked: ").append(toIndentedString(isChecked)).append("\n");
    sb.append("    itemName: ").append(toIndentedString(itemName)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    listID: ").append(toIndentedString(listID)).append("\n");
    sb.append("    mealPlanID: ").append(toIndentedString(mealPlanID)).append("\n");
    sb.append("    mealPlanObjectType: ").append(toIndentedString(mealPlanObjectType)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    pendingAddition: ").append(toIndentedString(pendingAddition)).append("\n");
    sb.append("    recipeID: ").append(toIndentedString(recipeID)).append("\n");
    sb.append("    shoppingListLineID: ").append(toIndentedString(shoppingListLineID)).append("\n");
    sb.append("    store: ").append(toIndentedString(store)).append("\n");
    sb.append("    textAmt: ").append(toIndentedString(textAmt)).append("\n");
    sb.append("    thirdPartyHost: ").append(toIndentedString(thirdPartyHost)).append("\n");
    sb.append("    thirdPartyTitle: ").append(toIndentedString(thirdPartyTitle)).append("\n");
    sb.append("    thirdPartyURL: ").append(toIndentedString(thirdPartyURL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DateAdded");
    openapiFields.add("Dept");
    openapiFields.add("GUID");
    openapiFields.add("HTMLItemName");
    openapiFields.add("IsChecked");
    openapiFields.add("ItemName");
    openapiFields.add("LastModified");
    openapiFields.add("ListID");
    openapiFields.add("MealPlanID");
    openapiFields.add("MealPlanObjectType");
    openapiFields.add("Notes");
    openapiFields.add("PendingAddition");
    openapiFields.add("RecipeID");
    openapiFields.add("ShoppingListLineID");
    openapiFields.add("Store");
    openapiFields.add("TextAmt");
    openapiFields.add("ThirdPartyHost");
    openapiFields.add("ThirdPartyTitle");
    openapiFields.add("ThirdPartyURL");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BigOvenModelShoppingListLine
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BigOvenModelShoppingListLine.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BigOvenModelShoppingListLine is not found in the empty JSON string", BigOvenModelShoppingListLine.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BigOvenModelShoppingListLine.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BigOvenModelShoppingListLine` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Dept") != null && !jsonObj.get("Dept").isJsonNull()) && !jsonObj.get("Dept").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Dept` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Dept").toString()));
      }
      if ((jsonObj.get("GUID") != null && !jsonObj.get("GUID").isJsonNull()) && !jsonObj.get("GUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GUID").toString()));
      }
      if ((jsonObj.get("HTMLItemName") != null && !jsonObj.get("HTMLItemName").isJsonNull()) && !jsonObj.get("HTMLItemName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `HTMLItemName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("HTMLItemName").toString()));
      }
      if ((jsonObj.get("ItemName") != null && !jsonObj.get("ItemName").isJsonNull()) && !jsonObj.get("ItemName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ItemName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ItemName").toString()));
      }
      if ((jsonObj.get("Notes") != null && !jsonObj.get("Notes").isJsonNull()) && !jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      if ((jsonObj.get("Store") != null && !jsonObj.get("Store").isJsonNull()) && !jsonObj.get("Store").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Store` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Store").toString()));
      }
      if ((jsonObj.get("TextAmt") != null && !jsonObj.get("TextAmt").isJsonNull()) && !jsonObj.get("TextAmt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TextAmt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TextAmt").toString()));
      }
      if ((jsonObj.get("ThirdPartyHost") != null && !jsonObj.get("ThirdPartyHost").isJsonNull()) && !jsonObj.get("ThirdPartyHost").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ThirdPartyHost` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ThirdPartyHost").toString()));
      }
      if ((jsonObj.get("ThirdPartyTitle") != null && !jsonObj.get("ThirdPartyTitle").isJsonNull()) && !jsonObj.get("ThirdPartyTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ThirdPartyTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ThirdPartyTitle").toString()));
      }
      if ((jsonObj.get("ThirdPartyURL") != null && !jsonObj.get("ThirdPartyURL").isJsonNull()) && !jsonObj.get("ThirdPartyURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ThirdPartyURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ThirdPartyURL").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BigOvenModelShoppingListLine.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BigOvenModelShoppingListLine' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BigOvenModelShoppingListLine> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BigOvenModelShoppingListLine.class));

       return (TypeAdapter<T>) new TypeAdapter<BigOvenModelShoppingListLine>() {
           @Override
           public void write(JsonWriter out, BigOvenModelShoppingListLine value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BigOvenModelShoppingListLine read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BigOvenModelShoppingListLine given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BigOvenModelShoppingListLine
   * @throws IOException if the JSON string is invalid with respect to BigOvenModelShoppingListLine
   */
  public static BigOvenModelShoppingListLine fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BigOvenModelShoppingListLine.class);
  }

  /**
   * Convert an instance of BigOvenModelShoppingListLine to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

