/*
 * 1,000,000+ Recipe and Grocery List API (v2)
 * #Documentation    This is the documentation for the partner endpoint of the BigOven Recipe and Grocery List API.    The update brings with it Swagger-based documentation. [Swagger](http://swagger.io) is an emerging standard for describing REST-based APIs, and with this Swagger-compliant endpoint (above), you can make ready-to-go interface libraries for your code via [swagger-codegen](https://github.com/swagger-api/swagger-codegen). For instance, it's easy to generate libraries for Node.js, Java, Ruby, ASP.NET MVC, jQuery, php and more!    You can also try out the endpoint calls with your own api_key right here on this page. Be sure to enter your api_key above to use the \"Try it out!\" buttons on this page.    ##Start Here    Developers new to the BigOven API should start with this version, not with the legacy API. We'll be making improvements to this API over time, and doing only bug fixes on the v1 API.        To pretend you're a BigOven user (for instance, to get your recently viewed recipes or your grocery list), you need to pass in Basic Authentication information in the header, just as with the v1 API. We do now require that you make all calls via https. You need to pass your api_key in with every call, though this can now be done on the header (send a request header \"X-BigOven-API-Key\" set to your api_key value, e.g., Request[\"X-BigOven-API-Key\"]=\"your-key-here\".)    ##Migration Notes    For existing partners, we encourage you to [migrate](https://api2.bigoven.com), and while at this writing we have no hard-and-fast termination date for the v1 API, we strongly prefer that you migrate by January 1, 2017. While the changes aren't overly complex, there are several breaking changes, including refactoring of recipe search and results and removal of support for XML. This is not a simply plug-and-play replacement to the v1 API. With respect to an exclusive focus on JSON, the world has spoken, and it prefers JSON for REST-based API's. We've taken numerous steps to refactor the API to make it more REST-compliant. Note that this v2 API will be the preferred API from this point onward, so we encourage developers to migrate to this new format. We have put together some [migration notes](/web/documentation/migration-to-v2) that we encourage you to read carefully.    ##Photos    See our [photos documentation](https://api2.bigoven.com/web/documentation/recipe-images).     For more information on usage of this API, including features, pricing, rate limits, terms and conditions, please visit the [BigOven API website](https://api2.bigoven.com).
 *
 * The version of the OpenAPI document: partner
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BigOvenModelAPIReply;
import org.openapitools.client.model.BigOvenModelAPIUserInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BigOvenModelAPIReview
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:31.647548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BigOvenModelAPIReview {
  public static final String SERIALIZED_NAME_ACTIVE_MINUTES = "ActiveMinutes";
  @SerializedName(SERIALIZED_NAME_ACTIVE_MINUTES)
  private Integer activeMinutes;

  public static final String SERIALIZED_NAME_COMMENT = "Comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_FEATURED_REPLY = "FeaturedReply";
  @SerializedName(SERIALIZED_NAME_FEATURED_REPLY)
  private BigOvenModelAPIReply featuredReply;

  public static final String SERIALIZED_NAME_G_U_I_D = "GUID";
  @SerializedName(SERIALIZED_NAME_G_U_I_D)
  private String GUID;

  public static final String SERIALIZED_NAME_I_D = "ID";
  @SerializedName(SERIALIZED_NAME_I_D)
  private String ID;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "LastModified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private OffsetDateTime lastModified;

  public static final String SERIALIZED_NAME_PARENT_I_D = "ParentID";
  @SerializedName(SERIALIZED_NAME_PARENT_I_D)
  private Long parentID;

  public static final String SERIALIZED_NAME_POSTER = "Poster";
  @SerializedName(SERIALIZED_NAME_POSTER)
  private BigOvenModelAPIUserInfo poster;

  public static final String SERIALIZED_NAME_REPLIES = "Replies";
  @SerializedName(SERIALIZED_NAME_REPLIES)
  private List<BigOvenModelAPIReview> replies = new ArrayList<>();

  public static final String SERIALIZED_NAME_REPLY_COUNT = "ReplyCount";
  @SerializedName(SERIALIZED_NAME_REPLY_COUNT)
  private Integer replyCount;

  public static final String SERIALIZED_NAME_REVIEW_I_D = "ReviewID";
  @SerializedName(SERIALIZED_NAME_REVIEW_I_D)
  private Long reviewID;

  public static final String SERIALIZED_NAME_STAR_RATING = "StarRating";
  @SerializedName(SERIALIZED_NAME_STAR_RATING)
  private Double starRating;

  public static final String SERIALIZED_NAME_TOTAL_MINUTES = "TotalMinutes";
  @SerializedName(SERIALIZED_NAME_TOTAL_MINUTES)
  private Integer totalMinutes;

  public BigOvenModelAPIReview() {
  }

  public BigOvenModelAPIReview activeMinutes(Integer activeMinutes) {
    this.activeMinutes = activeMinutes;
    return this;
  }

  /**
   * Get activeMinutes
   * @return activeMinutes
   */
  @javax.annotation.Nullable
  public Integer getActiveMinutes() {
    return activeMinutes;
  }

  public void setActiveMinutes(Integer activeMinutes) {
    this.activeMinutes = activeMinutes;
  }


  public BigOvenModelAPIReview comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public BigOvenModelAPIReview creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public BigOvenModelAPIReview featuredReply(BigOvenModelAPIReply featuredReply) {
    this.featuredReply = featuredReply;
    return this;
  }

  /**
   * Get featuredReply
   * @return featuredReply
   */
  @javax.annotation.Nullable
  public BigOvenModelAPIReply getFeaturedReply() {
    return featuredReply;
  }

  public void setFeaturedReply(BigOvenModelAPIReply featuredReply) {
    this.featuredReply = featuredReply;
  }


  public BigOvenModelAPIReview GUID(String GUID) {
    this.GUID = GUID;
    return this;
  }

  /**
   * Get GUID
   * @return GUID
   */
  @javax.annotation.Nullable
  public String getGUID() {
    return GUID;
  }

  public void setGUID(String GUID) {
    this.GUID = GUID;
  }


  public BigOvenModelAPIReview ID(String ID) {
    this.ID = ID;
    return this;
  }

  /**
   * Get ID
   * @return ID
   */
  @javax.annotation.Nullable
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }


  public BigOvenModelAPIReview lastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
    return this;
  }

  /**
   * Get lastModified
   * @return lastModified
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModified() {
    return lastModified;
  }

  public void setLastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
  }


  public BigOvenModelAPIReview parentID(Long parentID) {
    this.parentID = parentID;
    return this;
  }

  /**
   * Get parentID
   * @return parentID
   */
  @javax.annotation.Nullable
  public Long getParentID() {
    return parentID;
  }

  public void setParentID(Long parentID) {
    this.parentID = parentID;
  }


  public BigOvenModelAPIReview poster(BigOvenModelAPIUserInfo poster) {
    this.poster = poster;
    return this;
  }

  /**
   * Get poster
   * @return poster
   */
  @javax.annotation.Nullable
  public BigOvenModelAPIUserInfo getPoster() {
    return poster;
  }

  public void setPoster(BigOvenModelAPIUserInfo poster) {
    this.poster = poster;
  }


  public BigOvenModelAPIReview replies(List<BigOvenModelAPIReview> replies) {
    this.replies = replies;
    return this;
  }

  public BigOvenModelAPIReview addRepliesItem(BigOvenModelAPIReview repliesItem) {
    if (this.replies == null) {
      this.replies = new ArrayList<>();
    }
    this.replies.add(repliesItem);
    return this;
  }

  /**
   * Get replies
   * @return replies
   */
  @javax.annotation.Nullable
  public List<BigOvenModelAPIReview> getReplies() {
    return replies;
  }

  public void setReplies(List<BigOvenModelAPIReview> replies) {
    this.replies = replies;
  }


  public BigOvenModelAPIReview replyCount(Integer replyCount) {
    this.replyCount = replyCount;
    return this;
  }

  /**
   * Get replyCount
   * @return replyCount
   */
  @javax.annotation.Nullable
  public Integer getReplyCount() {
    return replyCount;
  }

  public void setReplyCount(Integer replyCount) {
    this.replyCount = replyCount;
  }


  public BigOvenModelAPIReview reviewID(Long reviewID) {
    this.reviewID = reviewID;
    return this;
  }

  /**
   * Get reviewID
   * @return reviewID
   */
  @javax.annotation.Nullable
  public Long getReviewID() {
    return reviewID;
  }

  public void setReviewID(Long reviewID) {
    this.reviewID = reviewID;
  }


  public BigOvenModelAPIReview starRating(Double starRating) {
    this.starRating = starRating;
    return this;
  }

  /**
   * Get starRating
   * @return starRating
   */
  @javax.annotation.Nullable
  public Double getStarRating() {
    return starRating;
  }

  public void setStarRating(Double starRating) {
    this.starRating = starRating;
  }


  public BigOvenModelAPIReview totalMinutes(Integer totalMinutes) {
    this.totalMinutes = totalMinutes;
    return this;
  }

  /**
   * Get totalMinutes
   * @return totalMinutes
   */
  @javax.annotation.Nullable
  public Integer getTotalMinutes() {
    return totalMinutes;
  }

  public void setTotalMinutes(Integer totalMinutes) {
    this.totalMinutes = totalMinutes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BigOvenModelAPIReview bigOvenModelAPIReview = (BigOvenModelAPIReview) o;
    return Objects.equals(this.activeMinutes, bigOvenModelAPIReview.activeMinutes) &&
        Objects.equals(this.comment, bigOvenModelAPIReview.comment) &&
        Objects.equals(this.creationDate, bigOvenModelAPIReview.creationDate) &&
        Objects.equals(this.featuredReply, bigOvenModelAPIReview.featuredReply) &&
        Objects.equals(this.GUID, bigOvenModelAPIReview.GUID) &&
        Objects.equals(this.ID, bigOvenModelAPIReview.ID) &&
        Objects.equals(this.lastModified, bigOvenModelAPIReview.lastModified) &&
        Objects.equals(this.parentID, bigOvenModelAPIReview.parentID) &&
        Objects.equals(this.poster, bigOvenModelAPIReview.poster) &&
        Objects.equals(this.replies, bigOvenModelAPIReview.replies) &&
        Objects.equals(this.replyCount, bigOvenModelAPIReview.replyCount) &&
        Objects.equals(this.reviewID, bigOvenModelAPIReview.reviewID) &&
        Objects.equals(this.starRating, bigOvenModelAPIReview.starRating) &&
        Objects.equals(this.totalMinutes, bigOvenModelAPIReview.totalMinutes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeMinutes, comment, creationDate, featuredReply, GUID, ID, lastModified, parentID, poster, replies, replyCount, reviewID, starRating, totalMinutes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BigOvenModelAPIReview {\n");
    sb.append("    activeMinutes: ").append(toIndentedString(activeMinutes)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    featuredReply: ").append(toIndentedString(featuredReply)).append("\n");
    sb.append("    GUID: ").append(toIndentedString(GUID)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    poster: ").append(toIndentedString(poster)).append("\n");
    sb.append("    replies: ").append(toIndentedString(replies)).append("\n");
    sb.append("    replyCount: ").append(toIndentedString(replyCount)).append("\n");
    sb.append("    reviewID: ").append(toIndentedString(reviewID)).append("\n");
    sb.append("    starRating: ").append(toIndentedString(starRating)).append("\n");
    sb.append("    totalMinutes: ").append(toIndentedString(totalMinutes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ActiveMinutes");
    openapiFields.add("Comment");
    openapiFields.add("CreationDate");
    openapiFields.add("FeaturedReply");
    openapiFields.add("GUID");
    openapiFields.add("ID");
    openapiFields.add("LastModified");
    openapiFields.add("ParentID");
    openapiFields.add("Poster");
    openapiFields.add("Replies");
    openapiFields.add("ReplyCount");
    openapiFields.add("ReviewID");
    openapiFields.add("StarRating");
    openapiFields.add("TotalMinutes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BigOvenModelAPIReview
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BigOvenModelAPIReview.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BigOvenModelAPIReview is not found in the empty JSON string", BigOvenModelAPIReview.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BigOvenModelAPIReview.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BigOvenModelAPIReview` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Comment") != null && !jsonObj.get("Comment").isJsonNull()) && !jsonObj.get("Comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Comment").toString()));
      }
      // validate the optional field `FeaturedReply`
      if (jsonObj.get("FeaturedReply") != null && !jsonObj.get("FeaturedReply").isJsonNull()) {
        BigOvenModelAPIReply.validateJsonElement(jsonObj.get("FeaturedReply"));
      }
      if ((jsonObj.get("GUID") != null && !jsonObj.get("GUID").isJsonNull()) && !jsonObj.get("GUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GUID").toString()));
      }
      if ((jsonObj.get("ID") != null && !jsonObj.get("ID").isJsonNull()) && !jsonObj.get("ID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ID").toString()));
      }
      // validate the optional field `Poster`
      if (jsonObj.get("Poster") != null && !jsonObj.get("Poster").isJsonNull()) {
        BigOvenModelAPIUserInfo.validateJsonElement(jsonObj.get("Poster"));
      }
      if (jsonObj.get("Replies") != null && !jsonObj.get("Replies").isJsonNull()) {
        JsonArray jsonArrayreplies = jsonObj.getAsJsonArray("Replies");
        if (jsonArrayreplies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Replies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Replies` to be an array in the JSON string but got `%s`", jsonObj.get("Replies").toString()));
          }

          // validate the optional field `Replies` (array)
          for (int i = 0; i < jsonArrayreplies.size(); i++) {
            BigOvenModelAPIReview.validateJsonElement(jsonArrayreplies.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BigOvenModelAPIReview.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BigOvenModelAPIReview' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BigOvenModelAPIReview> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BigOvenModelAPIReview.class));

       return (TypeAdapter<T>) new TypeAdapter<BigOvenModelAPIReview>() {
           @Override
           public void write(JsonWriter out, BigOvenModelAPIReview value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BigOvenModelAPIReview read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BigOvenModelAPIReview given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BigOvenModelAPIReview
   * @throws IOException if the JSON string is invalid with respect to BigOvenModelAPIReview
   */
  public static BigOvenModelAPIReview fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BigOvenModelAPIReview.class);
  }

  /**
   * Convert an instance of BigOvenModelAPIReview to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

