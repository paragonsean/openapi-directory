/**
 * 1,000,000+ Recipe and Grocery List API (v2)
 * #Documentation    This is the documentation for the partner endpoint of the BigOven Recipe and Grocery List API.    The update brings with it Swagger-based documentation. [Swagger](http://swagger.io) is an emerging standard for describing REST-based APIs, and with this Swagger-compliant endpoint (above), you can make ready-to-go interface libraries for your code via [swagger-codegen](https://github.com/swagger-api/swagger-codegen). For instance, it's easy to generate libraries for Node.js, Java, Ruby, ASP.NET MVC, jQuery, php and more!    You can also try out the endpoint calls with your own api_key right here on this page. Be sure to enter your api_key above to use the \"Try it out!\" buttons on this page.    ##Start Here    Developers new to the BigOven API should start with this version, not with the legacy API. We'll be making improvements to this API over time, and doing only bug fixes on the v1 API.        To pretend you're a BigOven user (for instance, to get your recently viewed recipes or your grocery list), you need to pass in Basic Authentication information in the header, just as with the v1 API. We do now require that you make all calls via https. You need to pass your api_key in with every call, though this can now be done on the header (send a request header \"X-BigOven-API-Key\" set to your api_key value, e.g., Request[\"X-BigOven-API-Key\"]=\"your-key-here\".)    ##Migration Notes    For existing partners, we encourage you to [migrate](https://api2.bigoven.com), and while at this writing we have no hard-and-fast termination date for the v1 API, we strongly prefer that you migrate by January 1, 2017. While the changes aren't overly complex, there are several breaking changes, including refactoring of recipe search and results and removal of support for XML. This is not a simply plug-and-play replacement to the v1 API. With respect to an exclusive focus on JSON, the world has spoken, and it prefers JSON for REST-based API's. We've taken numerous steps to refactor the API to make it more REST-compliant. Note that this v2 API will be the preferred API from this point onward, so we encourage developers to migrate to this new format. We have put together some [migration notes](/web/documentation/migration-to-v2) that we encourage you to read carefully.    ##Photos    See our [photos documentation](https://api2.bigoven.com/web/documentation/recipe-images).     For more information on usage of this API, including features, pricing, rate limits, terms and conditions, please visit the [BigOven API website](https://api2.bigoven.com).
 *
 * The version of the OpenAPI document: partner
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBigOven_Model_API_Review.h
 *
 * 
 */

#ifndef OAIBigOven_Model_API_Review_H
#define OAIBigOven_Model_API_Review_H

#include <QJsonObject>

#include "OAIBigOven_Model_API_Reply.h"
#include "OAIBigOven_Model_API_UserInfo.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBigOven_Model_API_Reply;
class OAIBigOven_Model_API_UserInfo;

class OAIBigOven_Model_API_Review : public OAIObject {
public:
    OAIBigOven_Model_API_Review();
    OAIBigOven_Model_API_Review(QString json);
    ~OAIBigOven_Model_API_Review() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActiveMinutes() const;
    void setActiveMinutes(const qint32 &active_minutes);
    bool is_active_minutes_Set() const;
    bool is_active_minutes_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    OAIBigOven_Model_API_Reply getFeaturedReply() const;
    void setFeaturedReply(const OAIBigOven_Model_API_Reply &featured_reply);
    bool is_featured_reply_Set() const;
    bool is_featured_reply_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastModified() const;
    void setLastModified(const QDateTime &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    qint64 getParentId() const;
    void setParentId(const qint64 &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    OAIBigOven_Model_API_UserInfo getPoster() const;
    void setPoster(const OAIBigOven_Model_API_UserInfo &poster);
    bool is_poster_Set() const;
    bool is_poster_Valid() const;

    QList<OAIBigOven_Model_API_Review> getReplies() const;
    void setReplies(const QList<OAIBigOven_Model_API_Review> &replies);
    bool is_replies_Set() const;
    bool is_replies_Valid() const;

    qint32 getReplyCount() const;
    void setReplyCount(const qint32 &reply_count);
    bool is_reply_count_Set() const;
    bool is_reply_count_Valid() const;

    qint64 getReviewId() const;
    void setReviewId(const qint64 &review_id);
    bool is_review_id_Set() const;
    bool is_review_id_Valid() const;

    double getStarRating() const;
    void setStarRating(const double &star_rating);
    bool is_star_rating_Set() const;
    bool is_star_rating_Valid() const;

    qint32 getTotalMinutes() const;
    void setTotalMinutes(const qint32 &total_minutes);
    bool is_total_minutes_Set() const;
    bool is_total_minutes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_active_minutes;
    bool m_active_minutes_isSet;
    bool m_active_minutes_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    OAIBigOven_Model_API_Reply m_featured_reply;
    bool m_featured_reply_isSet;
    bool m_featured_reply_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    qint64 m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    OAIBigOven_Model_API_UserInfo m_poster;
    bool m_poster_isSet;
    bool m_poster_isValid;

    QList<OAIBigOven_Model_API_Review> m_replies;
    bool m_replies_isSet;
    bool m_replies_isValid;

    qint32 m_reply_count;
    bool m_reply_count_isSet;
    bool m_reply_count_isValid;

    qint64 m_review_id;
    bool m_review_id_isSet;
    bool m_review_id_isValid;

    double m_star_rating;
    bool m_star_rating_isSet;
    bool m_star_rating_isValid;

    qint32 m_total_minutes;
    bool m_total_minutes_isSet;
    bool m_total_minutes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBigOven_Model_API_Review)

#endif // OAIBigOven_Model_API_Review_H
