/**
 * 1,000,000+ Recipe and Grocery List API (v2)
 * #Documentation    This is the documentation for the partner endpoint of the BigOven Recipe and Grocery List API.    The update brings with it Swagger-based documentation. [Swagger](http://swagger.io) is an emerging standard for describing REST-based APIs, and with this Swagger-compliant endpoint (above), you can make ready-to-go interface libraries for your code via [swagger-codegen](https://github.com/swagger-api/swagger-codegen). For instance, it's easy to generate libraries for Node.js, Java, Ruby, ASP.NET MVC, jQuery, php and more!    You can also try out the endpoint calls with your own api_key right here on this page. Be sure to enter your api_key above to use the \"Try it out!\" buttons on this page.    ##Start Here    Developers new to the BigOven API should start with this version, not with the legacy API. We'll be making improvements to this API over time, and doing only bug fixes on the v1 API.        To pretend you're a BigOven user (for instance, to get your recently viewed recipes or your grocery list), you need to pass in Basic Authentication information in the header, just as with the v1 API. We do now require that you make all calls via https. You need to pass your api_key in with every call, though this can now be done on the header (send a request header \"X-BigOven-API-Key\" set to your api_key value, e.g., Request[\"X-BigOven-API-Key\"]=\"your-key-here\".)    ##Migration Notes    For existing partners, we encourage you to [migrate](https://api2.bigoven.com), and while at this writing we have no hard-and-fast termination date for the v1 API, we strongly prefer that you migrate by January 1, 2017. While the changes aren't overly complex, there are several breaking changes, including refactoring of recipe search and results and removal of support for XML. This is not a simply plug-and-play replacement to the v1 API. With respect to an exclusive focus on JSON, the world has spoken, and it prefers JSON for REST-based API's. We've taken numerous steps to refactor the API to make it more REST-compliant. Note that this v2 API will be the preferred API from this point onward, so we encourage developers to migrate to this new format. We have put together some [migration notes](/web/documentation/migration-to-v2) that we encourage you to read carefully.    ##Photos    See our [photos documentation](https://api2.bigoven.com/web/documentation/recipe-images).     For more information on usage of this API, including features, pricing, rate limits, terms and conditions, please visit the [BigOven API website](https://api2.bigoven.com).
 *
 * The version of the OpenAPI document: partner
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIGroceryListApi_H
#define OAI_OAIGroceryListApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIAPI2_Controllers_WebAPI_GroceryListController_DepartmentModel.h"
#include "OAIAPI2_Controllers_WebAPI_GroceryListController_PostGroceryListAddLineRequest.h"
#include "OAIAPI2_Controllers_WebAPI_GroceryListController_PostGroceryListRecipeRequest.h"
#include "OAIAPI2_Controllers_WebAPI_GroceryListController_PostGroceryListSyncRequest.h"
#include "OAIAPI2_Controllers_WebAPI_GroceryListController_PostToGroceryListRecipeRequest.h"
#include "OAIAPI2_Controllers_WebAPI_GroceryListController_UpdateItemByGuidRequest.h"
#include "OAIAPI2_GroceryListDepartmentResult.h"
#include "OAIBigOven_Model_API2_GroceryList.h"
#include "OAIBigOven_Model_ShoppingListLine.h"
#include "OAIObject.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIGroceryListApi : public QObject {
    Q_OBJECT

public:
    OAIGroceryListApi(const int timeOut = 0);
    ~OAIGroceryListApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  oaiapi2_controllers_web_api_grocery_list_controller_post_grocery_list_recipe_request OAIAPI2_Controllers_WebAPI_GroceryListController_PostGroceryListRecipeRequest [required]
    */
    virtual void groceryListAddRecipe(const OAIAPI2_Controllers_WebAPI_GroceryListController_PostGroceryListRecipeRequest &oaiapi2_controllers_web_api_grocery_list_controller_post_grocery_list_recipe_request);


    virtual void groceryListDelete();

    /**
    * @param[in]  guid QString [required]
    */
    virtual void groceryListDeleteItemByGuid(const QString &guid);

    /**
    * @param[in]  oaiapi2_controllers_web_api_grocery_list_controller_department_model OAIAPI2_Controllers_WebAPI_GroceryListController_DepartmentModel [required]
    */
    virtual void groceryListDepartment(const OAIAPI2_Controllers_WebAPI_GroceryListController_DepartmentModel &oaiapi2_controllers_web_api_grocery_list_controller_department_model);


    virtual void groceryListGet();

    /**
    * @param[in]  guid QString [required]
    * @param[in]  oaiapi2_controllers_web_api_grocery_list_controller_update_item_by_guid_request OAIAPI2_Controllers_WebAPI_GroceryListController_UpdateItemByGuidRequest [required]
    */
    virtual void groceryListGroceryListItemGuid(const QString &guid, const OAIAPI2_Controllers_WebAPI_GroceryListController_UpdateItemByGuidRequest &oaiapi2_controllers_web_api_grocery_list_controller_update_item_by_guid_request);


    virtual void groceryListGroceryListRemoveMarkedItems();

    /**
    * @param[in]  oaiapi2_controllers_web_api_grocery_list_controller_post_grocery_list_add_line_request OAIAPI2_Controllers_WebAPI_GroceryListController_PostGroceryListAddLineRequest [required]
    */
    virtual void groceryListPost(const OAIAPI2_Controllers_WebAPI_GroceryListController_PostGroceryListAddLineRequest &oaiapi2_controllers_web_api_grocery_list_controller_post_grocery_list_add_line_request);

    /**
    * @param[in]  oaiapi2_controllers_web_api_grocery_list_controller_post_grocery_list_sync_request OAIAPI2_Controllers_WebAPI_GroceryListController_PostGroceryListSyncRequest [required]
    */
    virtual void groceryListPostGroceryListSync(const OAIAPI2_Controllers_WebAPI_GroceryListController_PostGroceryListSyncRequest &oaiapi2_controllers_web_api_grocery_list_controller_post_grocery_list_sync_request);

    /**
    * @param[in]  oaiapi2_controllers_web_api_grocery_list_controller_post_to_grocery_list_recipe_request OAIAPI2_Controllers_WebAPI_GroceryListController_PostToGroceryListRecipeRequest [required]
    */
    virtual void grocerylistItemPost(const OAIAPI2_Controllers_WebAPI_GroceryListController_PostToGroceryListRecipeRequest &oaiapi2_controllers_web_api_grocery_list_controller_post_to_grocery_list_recipe_request);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void groceryListAddRecipeCallback(OAIHttpRequestWorker *worker);
    void groceryListDeleteCallback(OAIHttpRequestWorker *worker);
    void groceryListDeleteItemByGuidCallback(OAIHttpRequestWorker *worker);
    void groceryListDepartmentCallback(OAIHttpRequestWorker *worker);
    void groceryListGetCallback(OAIHttpRequestWorker *worker);
    void groceryListGroceryListItemGuidCallback(OAIHttpRequestWorker *worker);
    void groceryListGroceryListRemoveMarkedItemsCallback(OAIHttpRequestWorker *worker);
    void groceryListPostCallback(OAIHttpRequestWorker *worker);
    void groceryListPostGroceryListSyncCallback(OAIHttpRequestWorker *worker);
    void grocerylistItemPostCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void groceryListAddRecipeSignal(OAIObject summary);
    void groceryListDeleteSignal(OAIObject summary);
    void groceryListDeleteItemByGuidSignal(OAIObject summary);
    void groceryListDepartmentSignal(QList<OAIAPI2_GroceryListDepartmentResult> summary);
    void groceryListGetSignal(OAIBigOven_Model_API2_GroceryList summary);
    void groceryListGroceryListItemGuidSignal(OAIObject summary);
    void groceryListGroceryListRemoveMarkedItemsSignal(OAIBigOven_Model_API2_GroceryList summary);
    void groceryListPostSignal(OAIBigOven_Model_ShoppingListLine summary);
    void groceryListPostGroceryListSyncSignal(OAIObject summary);
    void grocerylistItemPostSignal(OAIBigOven_Model_ShoppingListLine summary);


    void groceryListAddRecipeSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void groceryListDeleteSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void groceryListDeleteItemByGuidSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void groceryListDepartmentSignalFull(OAIHttpRequestWorker *worker, QList<OAIAPI2_GroceryListDepartmentResult> summary);
    void groceryListGetSignalFull(OAIHttpRequestWorker *worker, OAIBigOven_Model_API2_GroceryList summary);
    void groceryListGroceryListItemGuidSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void groceryListGroceryListRemoveMarkedItemsSignalFull(OAIHttpRequestWorker *worker, OAIBigOven_Model_API2_GroceryList summary);
    void groceryListPostSignalFull(OAIHttpRequestWorker *worker, OAIBigOven_Model_ShoppingListLine summary);
    void groceryListPostGroceryListSyncSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void grocerylistItemPostSignalFull(OAIHttpRequestWorker *worker, OAIBigOven_Model_ShoppingListLine summary);

    Q_DECL_DEPRECATED_X("Use groceryListAddRecipeSignalError() instead")
    void groceryListAddRecipeSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListAddRecipeSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListDeleteSignalError() instead")
    void groceryListDeleteSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListDeleteSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListDeleteItemByGuidSignalError() instead")
    void groceryListDeleteItemByGuidSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListDeleteItemByGuidSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListDepartmentSignalError() instead")
    void groceryListDepartmentSignalE(QList<OAIAPI2_GroceryListDepartmentResult> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListDepartmentSignalError(QList<OAIAPI2_GroceryListDepartmentResult> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListGetSignalError() instead")
    void groceryListGetSignalE(OAIBigOven_Model_API2_GroceryList summary, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListGetSignalError(OAIBigOven_Model_API2_GroceryList summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListGroceryListItemGuidSignalError() instead")
    void groceryListGroceryListItemGuidSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListGroceryListItemGuidSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListGroceryListRemoveMarkedItemsSignalError() instead")
    void groceryListGroceryListRemoveMarkedItemsSignalE(OAIBigOven_Model_API2_GroceryList summary, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListGroceryListRemoveMarkedItemsSignalError(OAIBigOven_Model_API2_GroceryList summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListPostSignalError() instead")
    void groceryListPostSignalE(OAIBigOven_Model_ShoppingListLine summary, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListPostSignalError(OAIBigOven_Model_ShoppingListLine summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListPostGroceryListSyncSignalError() instead")
    void groceryListPostGroceryListSyncSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListPostGroceryListSyncSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use grocerylistItemPostSignalError() instead")
    void grocerylistItemPostSignalE(OAIBigOven_Model_ShoppingListLine summary, QNetworkReply::NetworkError error_type, QString error_str);
    void grocerylistItemPostSignalError(OAIBigOven_Model_ShoppingListLine summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use groceryListAddRecipeSignalErrorFull() instead")
    void groceryListAddRecipeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListAddRecipeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListDeleteSignalErrorFull() instead")
    void groceryListDeleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListDeleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListDeleteItemByGuidSignalErrorFull() instead")
    void groceryListDeleteItemByGuidSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListDeleteItemByGuidSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListDepartmentSignalErrorFull() instead")
    void groceryListDepartmentSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListDepartmentSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListGetSignalErrorFull() instead")
    void groceryListGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListGroceryListItemGuidSignalErrorFull() instead")
    void groceryListGroceryListItemGuidSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListGroceryListItemGuidSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListGroceryListRemoveMarkedItemsSignalErrorFull() instead")
    void groceryListGroceryListRemoveMarkedItemsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListGroceryListRemoveMarkedItemsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListPostSignalErrorFull() instead")
    void groceryListPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use groceryListPostGroceryListSyncSignalErrorFull() instead")
    void groceryListPostGroceryListSyncSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void groceryListPostGroceryListSyncSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use grocerylistItemPostSignalErrorFull() instead")
    void grocerylistItemPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void grocerylistItemPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
