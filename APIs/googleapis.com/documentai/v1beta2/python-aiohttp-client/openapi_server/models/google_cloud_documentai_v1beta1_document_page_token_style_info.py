# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_color import GoogleTypeColor
from openapi_server import util


class GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, background_color: GoogleTypeColor=None, bold: bool=None, font_size: int=None, font_type: str=None, font_weight: int=None, handwritten: bool=None, italic: bool=None, letter_spacing: float=None, pixel_font_size: float=None, smallcaps: bool=None, strikeout: bool=None, subscript: bool=None, superscript: bool=None, text_color: GoogleTypeColor=None, underlined: bool=None):
        """GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo - a model defined in OpenAPI

        :param background_color: The background_color of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param bold: The bold of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param font_size: The font_size of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param font_type: The font_type of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param font_weight: The font_weight of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param handwritten: The handwritten of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param italic: The italic of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param letter_spacing: The letter_spacing of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param pixel_font_size: The pixel_font_size of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param smallcaps: The smallcaps of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param strikeout: The strikeout of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param subscript: The subscript of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param superscript: The superscript of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param text_color: The text_color of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :param underlined: The underlined of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        """
        self.openapi_types = {
            'background_color': GoogleTypeColor,
            'bold': bool,
            'font_size': int,
            'font_type': str,
            'font_weight': int,
            'handwritten': bool,
            'italic': bool,
            'letter_spacing': float,
            'pixel_font_size': float,
            'smallcaps': bool,
            'strikeout': bool,
            'subscript': bool,
            'superscript': bool,
            'text_color': GoogleTypeColor,
            'underlined': bool
        }

        self.attribute_map = {
            'background_color': 'backgroundColor',
            'bold': 'bold',
            'font_size': 'fontSize',
            'font_type': 'fontType',
            'font_weight': 'fontWeight',
            'handwritten': 'handwritten',
            'italic': 'italic',
            'letter_spacing': 'letterSpacing',
            'pixel_font_size': 'pixelFontSize',
            'smallcaps': 'smallcaps',
            'strikeout': 'strikeout',
            'subscript': 'subscript',
            'superscript': 'superscript',
            'text_color': 'textColor',
            'underlined': 'underlined'
        }

        self._background_color = background_color
        self._bold = bold
        self._font_size = font_size
        self._font_type = font_type
        self._font_weight = font_weight
        self._handwritten = handwritten
        self._italic = italic
        self._letter_spacing = letter_spacing
        self._pixel_font_size = pixel_font_size
        self._smallcaps = smallcaps
        self._strikeout = strikeout
        self._subscript = subscript
        self._superscript = superscript
        self._text_color = text_color
        self._underlined = underlined

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def background_color(self):
        """Gets the background_color of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.


        :return: The background_color of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: GoogleTypeColor
        """
        return self._background_color

    @background_color.setter
    def background_color(self, background_color):
        """Sets the background_color of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.


        :param background_color: The background_color of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type background_color: GoogleTypeColor
        """

        self._background_color = background_color

    @property
    def bold(self):
        """Gets the bold of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is bold (equivalent to font_weight is at least `700`).

        :return: The bold of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: bool
        """
        return self._bold

    @bold.setter
    def bold(self, bold):
        """Sets the bold of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is bold (equivalent to font_weight is at least `700`).

        :param bold: The bold of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type bold: bool
        """

        self._bold = bold

    @property
    def font_size(self):
        """Gets the font_size of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Font size in points (`1` point is `¹⁄₇₂` inches).

        :return: The font_size of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: int
        """
        return self._font_size

    @font_size.setter
    def font_size(self, font_size):
        """Sets the font_size of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Font size in points (`1` point is `¹⁄₇₂` inches).

        :param font_size: The font_size of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type font_size: int
        """

        self._font_size = font_size

    @property
    def font_type(self):
        """Gets the font_type of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Name or style of the font.

        :return: The font_type of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: str
        """
        return self._font_type

    @font_type.setter
    def font_type(self, font_type):
        """Sets the font_type of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Name or style of the font.

        :param font_type: The font_type of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type font_type: str
        """

        self._font_type = font_type

    @property
    def font_weight(self):
        """Gets the font_weight of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.

        :return: The font_weight of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: int
        """
        return self._font_weight

    @font_weight.setter
    def font_weight(self, font_weight):
        """Sets the font_weight of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.

        :param font_weight: The font_weight of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type font_weight: int
        """

        self._font_weight = font_weight

    @property
    def handwritten(self):
        """Gets the handwritten of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is handwritten.

        :return: The handwritten of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: bool
        """
        return self._handwritten

    @handwritten.setter
    def handwritten(self, handwritten):
        """Sets the handwritten of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is handwritten.

        :param handwritten: The handwritten of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type handwritten: bool
        """

        self._handwritten = handwritten

    @property
    def italic(self):
        """Gets the italic of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is italic.

        :return: The italic of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: bool
        """
        return self._italic

    @italic.setter
    def italic(self, italic):
        """Sets the italic of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is italic.

        :param italic: The italic of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type italic: bool
        """

        self._italic = italic

    @property
    def letter_spacing(self):
        """Gets the letter_spacing of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Letter spacing in points.

        :return: The letter_spacing of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: float
        """
        return self._letter_spacing

    @letter_spacing.setter
    def letter_spacing(self, letter_spacing):
        """Sets the letter_spacing of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Letter spacing in points.

        :param letter_spacing: The letter_spacing of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type letter_spacing: float
        """

        self._letter_spacing = letter_spacing

    @property
    def pixel_font_size(self):
        """Gets the pixel_font_size of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`.

        :return: The pixel_font_size of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: float
        """
        return self._pixel_font_size

    @pixel_font_size.setter
    def pixel_font_size(self, pixel_font_size):
        """Sets the pixel_font_size of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`.

        :param pixel_font_size: The pixel_font_size of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type pixel_font_size: float
        """

        self._pixel_font_size = pixel_font_size

    @property
    def smallcaps(self):
        """Gets the smallcaps of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is in small caps.

        :return: The smallcaps of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: bool
        """
        return self._smallcaps

    @smallcaps.setter
    def smallcaps(self, smallcaps):
        """Sets the smallcaps of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is in small caps.

        :param smallcaps: The smallcaps of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type smallcaps: bool
        """

        self._smallcaps = smallcaps

    @property
    def strikeout(self):
        """Gets the strikeout of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is strikethrough.

        :return: The strikeout of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: bool
        """
        return self._strikeout

    @strikeout.setter
    def strikeout(self, strikeout):
        """Sets the strikeout of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is strikethrough.

        :param strikeout: The strikeout of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type strikeout: bool
        """

        self._strikeout = strikeout

    @property
    def subscript(self):
        """Gets the subscript of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is a subscript.

        :return: The subscript of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: bool
        """
        return self._subscript

    @subscript.setter
    def subscript(self, subscript):
        """Sets the subscript of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is a subscript.

        :param subscript: The subscript of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type subscript: bool
        """

        self._subscript = subscript

    @property
    def superscript(self):
        """Gets the superscript of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is a superscript.

        :return: The superscript of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: bool
        """
        return self._superscript

    @superscript.setter
    def superscript(self, superscript):
        """Sets the superscript of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is a superscript.

        :param superscript: The superscript of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type superscript: bool
        """

        self._superscript = superscript

    @property
    def text_color(self):
        """Gets the text_color of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.


        :return: The text_color of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: GoogleTypeColor
        """
        return self._text_color

    @text_color.setter
    def text_color(self, text_color):
        """Sets the text_color of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.


        :param text_color: The text_color of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type text_color: GoogleTypeColor
        """

        self._text_color = text_color

    @property
    def underlined(self):
        """Gets the underlined of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is underlined.

        :return: The underlined of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :rtype: bool
        """
        return self._underlined

    @underlined.setter
    def underlined(self, underlined):
        """Sets the underlined of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.

        Whether the text is underlined.

        :param underlined: The underlined of this GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo.
        :type underlined: bool
        """

        self._underlined = underlined
