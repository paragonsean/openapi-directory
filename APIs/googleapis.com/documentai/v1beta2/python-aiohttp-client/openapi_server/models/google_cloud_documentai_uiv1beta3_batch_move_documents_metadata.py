# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_uiv1beta3_batch_move_documents_metadata_individual_batch_move_status import GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus
from openapi_server.models.google_cloud_documentai_uiv1beta3_common_operation_metadata import GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata
from openapi_server import util


class GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, common_metadata: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata=None, dest_dataset_type: str=None, dest_split_type: str=None, individual_batch_move_statuses: List[GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus]=None):
        """GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata - a model defined in OpenAPI

        :param common_metadata: The common_metadata of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :param dest_dataset_type: The dest_dataset_type of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :param dest_split_type: The dest_split_type of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :param individual_batch_move_statuses: The individual_batch_move_statuses of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        """
        self.openapi_types = {
            'common_metadata': GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata,
            'dest_dataset_type': str,
            'dest_split_type': str,
            'individual_batch_move_statuses': List[GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus]
        }

        self.attribute_map = {
            'common_metadata': 'commonMetadata',
            'dest_dataset_type': 'destDatasetType',
            'dest_split_type': 'destSplitType',
            'individual_batch_move_statuses': 'individualBatchMoveStatuses'
        }

        self._common_metadata = common_metadata
        self._dest_dataset_type = dest_dataset_type
        self._dest_split_type = dest_split_type
        self._individual_batch_move_statuses = individual_batch_move_statuses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def common_metadata(self):
        """Gets the common_metadata of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.


        :return: The common_metadata of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :rtype: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata
        """
        return self._common_metadata

    @common_metadata.setter
    def common_metadata(self, common_metadata):
        """Sets the common_metadata of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.


        :param common_metadata: The common_metadata of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :type common_metadata: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata
        """

        self._common_metadata = common_metadata

    @property
    def dest_dataset_type(self):
        """Gets the dest_dataset_type of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.

        The destination dataset split type.

        :return: The dest_dataset_type of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :rtype: str
        """
        return self._dest_dataset_type

    @dest_dataset_type.setter
    def dest_dataset_type(self, dest_dataset_type):
        """Sets the dest_dataset_type of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.

        The destination dataset split type.

        :param dest_dataset_type: The dest_dataset_type of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :type dest_dataset_type: str
        """
        allowed_values = ["DATASET_SPLIT_TYPE_UNSPECIFIED", "DATASET_SPLIT_TRAIN", "DATASET_SPLIT_TEST", "DATASET_SPLIT_UNASSIGNED"]  # noqa: E501
        if dest_dataset_type not in allowed_values:
            raise ValueError(
                "Invalid value for `dest_dataset_type` ({0}), must be one of {1}"
                .format(dest_dataset_type, allowed_values)
            )

        self._dest_dataset_type = dest_dataset_type

    @property
    def dest_split_type(self):
        """Gets the dest_split_type of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.

        The destination dataset split type.

        :return: The dest_split_type of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :rtype: str
        """
        return self._dest_split_type

    @dest_split_type.setter
    def dest_split_type(self, dest_split_type):
        """Sets the dest_split_type of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.

        The destination dataset split type.

        :param dest_split_type: The dest_split_type of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :type dest_split_type: str
        """
        allowed_values = ["DATASET_SPLIT_TYPE_UNSPECIFIED", "DATASET_SPLIT_TRAIN", "DATASET_SPLIT_TEST", "DATASET_SPLIT_UNASSIGNED"]  # noqa: E501
        if dest_split_type not in allowed_values:
            raise ValueError(
                "Invalid value for `dest_split_type` ({0}), must be one of {1}"
                .format(dest_split_type, allowed_values)
            )

        self._dest_split_type = dest_split_type

    @property
    def individual_batch_move_statuses(self):
        """Gets the individual_batch_move_statuses of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.

        The list of response details of each document.

        :return: The individual_batch_move_statuses of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :rtype: List[GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus]
        """
        return self._individual_batch_move_statuses

    @individual_batch_move_statuses.setter
    def individual_batch_move_statuses(self, individual_batch_move_statuses):
        """Sets the individual_batch_move_statuses of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.

        The list of response details of each document.

        :param individual_batch_move_statuses: The individual_batch_move_statuses of this GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.
        :type individual_batch_move_statuses: List[GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus]
        """

        self._individual_batch_move_statuses = individual_batch_move_statuses
