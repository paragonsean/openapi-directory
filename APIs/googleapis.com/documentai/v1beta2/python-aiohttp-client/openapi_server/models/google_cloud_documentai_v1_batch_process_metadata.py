# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1_batch_process_metadata_individual_process_status import GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus
from openapi_server import util


class GoogleCloudDocumentaiV1BatchProcessMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, individual_process_statuses: List[GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus]=None, state: str=None, state_message: str=None, update_time: str=None):
        """GoogleCloudDocumentaiV1BatchProcessMetadata - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :param individual_process_statuses: The individual_process_statuses of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :param state: The state of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :param state_message: The state_message of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :param update_time: The update_time of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        """
        self.openapi_types = {
            'create_time': str,
            'individual_process_statuses': List[GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus],
            'state': str,
            'state_message': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'individual_process_statuses': 'individualProcessStatuses',
            'state': 'state',
            'state_message': 'stateMessage',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._individual_process_statuses = individual_process_statuses
        self._state = state
        self._state_message = state_message
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1BatchProcessMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1BatchProcessMetadata of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDocumentaiV1BatchProcessMetadata.

        The creation time of the operation.

        :return: The create_time of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDocumentaiV1BatchProcessMetadata.

        The creation time of the operation.

        :param create_time: The create_time of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def individual_process_statuses(self):
        """Gets the individual_process_statuses of this GoogleCloudDocumentaiV1BatchProcessMetadata.

        The list of response details of each document.

        :return: The individual_process_statuses of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :rtype: List[GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus]
        """
        return self._individual_process_statuses

    @individual_process_statuses.setter
    def individual_process_statuses(self, individual_process_statuses):
        """Sets the individual_process_statuses of this GoogleCloudDocumentaiV1BatchProcessMetadata.

        The list of response details of each document.

        :param individual_process_statuses: The individual_process_statuses of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :type individual_process_statuses: List[GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus]
        """

        self._individual_process_statuses = individual_process_statuses

    @property
    def state(self):
        """Gets the state of this GoogleCloudDocumentaiV1BatchProcessMetadata.

        The state of the current batch processing.

        :return: The state of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDocumentaiV1BatchProcessMetadata.

        The state of the current batch processing.

        :param state: The state of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "WAITING", "RUNNING", "SUCCEEDED", "CANCELLING", "CANCELLED", "FAILED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def state_message(self):
        """Gets the state_message of this GoogleCloudDocumentaiV1BatchProcessMetadata.

        A message providing more details about the current state of processing. For example, the error message if the operation is failed.

        :return: The state_message of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :rtype: str
        """
        return self._state_message

    @state_message.setter
    def state_message(self, state_message):
        """Sets the state_message of this GoogleCloudDocumentaiV1BatchProcessMetadata.

        A message providing more details about the current state of processing. For example, the error message if the operation is failed.

        :param state_message: The state_message of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :type state_message: str
        """

        self._state_message = state_message

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudDocumentaiV1BatchProcessMetadata.

        The last update time of the operation.

        :return: The update_time of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudDocumentaiV1BatchProcessMetadata.

        The last update time of the operation.

        :param update_time: The update_time of this GoogleCloudDocumentaiV1BatchProcessMetadata.
        :type update_time: str
        """

        self._update_time = update_time
