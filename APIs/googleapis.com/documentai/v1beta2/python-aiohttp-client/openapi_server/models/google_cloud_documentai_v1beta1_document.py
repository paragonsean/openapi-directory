# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1beta1_document_entity import GoogleCloudDocumentaiV1beta1DocumentEntity
from openapi_server.models.google_cloud_documentai_v1beta1_document_entity_relation import GoogleCloudDocumentaiV1beta1DocumentEntityRelation
from openapi_server.models.google_cloud_documentai_v1beta1_document_page import GoogleCloudDocumentaiV1beta1DocumentPage
from openapi_server.models.google_cloud_documentai_v1beta1_document_revision import GoogleCloudDocumentaiV1beta1DocumentRevision
from openapi_server.models.google_cloud_documentai_v1beta1_document_shard_info import GoogleCloudDocumentaiV1beta1DocumentShardInfo
from openapi_server.models.google_cloud_documentai_v1beta1_document_style import GoogleCloudDocumentaiV1beta1DocumentStyle
from openapi_server.models.google_cloud_documentai_v1beta1_document_text_change import GoogleCloudDocumentaiV1beta1DocumentTextChange
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudDocumentaiV1beta1Document(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, entities: List[GoogleCloudDocumentaiV1beta1DocumentEntity]=None, entity_relations: List[GoogleCloudDocumentaiV1beta1DocumentEntityRelation]=None, error: GoogleRpcStatus=None, mime_type: str=None, pages: List[GoogleCloudDocumentaiV1beta1DocumentPage]=None, revisions: List[GoogleCloudDocumentaiV1beta1DocumentRevision]=None, shard_info: GoogleCloudDocumentaiV1beta1DocumentShardInfo=None, text: str=None, text_changes: List[GoogleCloudDocumentaiV1beta1DocumentTextChange]=None, text_styles: List[GoogleCloudDocumentaiV1beta1DocumentStyle]=None, uri: str=None):
        """GoogleCloudDocumentaiV1beta1Document - a model defined in OpenAPI

        :param content: The content of this GoogleCloudDocumentaiV1beta1Document.
        :param entities: The entities of this GoogleCloudDocumentaiV1beta1Document.
        :param entity_relations: The entity_relations of this GoogleCloudDocumentaiV1beta1Document.
        :param error: The error of this GoogleCloudDocumentaiV1beta1Document.
        :param mime_type: The mime_type of this GoogleCloudDocumentaiV1beta1Document.
        :param pages: The pages of this GoogleCloudDocumentaiV1beta1Document.
        :param revisions: The revisions of this GoogleCloudDocumentaiV1beta1Document.
        :param shard_info: The shard_info of this GoogleCloudDocumentaiV1beta1Document.
        :param text: The text of this GoogleCloudDocumentaiV1beta1Document.
        :param text_changes: The text_changes of this GoogleCloudDocumentaiV1beta1Document.
        :param text_styles: The text_styles of this GoogleCloudDocumentaiV1beta1Document.
        :param uri: The uri of this GoogleCloudDocumentaiV1beta1Document.
        """
        self.openapi_types = {
            'content': str,
            'entities': List[GoogleCloudDocumentaiV1beta1DocumentEntity],
            'entity_relations': List[GoogleCloudDocumentaiV1beta1DocumentEntityRelation],
            'error': GoogleRpcStatus,
            'mime_type': str,
            'pages': List[GoogleCloudDocumentaiV1beta1DocumentPage],
            'revisions': List[GoogleCloudDocumentaiV1beta1DocumentRevision],
            'shard_info': GoogleCloudDocumentaiV1beta1DocumentShardInfo,
            'text': str,
            'text_changes': List[GoogleCloudDocumentaiV1beta1DocumentTextChange],
            'text_styles': List[GoogleCloudDocumentaiV1beta1DocumentStyle],
            'uri': str
        }

        self.attribute_map = {
            'content': 'content',
            'entities': 'entities',
            'entity_relations': 'entityRelations',
            'error': 'error',
            'mime_type': 'mimeType',
            'pages': 'pages',
            'revisions': 'revisions',
            'shard_info': 'shardInfo',
            'text': 'text',
            'text_changes': 'textChanges',
            'text_styles': 'textStyles',
            'uri': 'uri'
        }

        self._content = content
        self._entities = entities
        self._entity_relations = entity_relations
        self._error = error
        self._mime_type = mime_type
        self._pages = pages
        self._revisions = revisions
        self._shard_info = shard_info
        self._text = text
        self._text_changes = text_changes
        self._text_styles = text_styles
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta1Document':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta1Document of this GoogleCloudDocumentaiV1beta1Document.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this GoogleCloudDocumentaiV1beta1Document.

        Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.

        :return: The content of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this GoogleCloudDocumentaiV1beta1Document.

        Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.

        :param content: The content of this GoogleCloudDocumentaiV1beta1Document.
        :type content: str
        """

        self._content = content

    @property
    def entities(self):
        """Gets the entities of this GoogleCloudDocumentaiV1beta1Document.

        A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.

        :return: The entities of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentEntity]
        """
        return self._entities

    @entities.setter
    def entities(self, entities):
        """Sets the entities of this GoogleCloudDocumentaiV1beta1Document.

        A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.

        :param entities: The entities of this GoogleCloudDocumentaiV1beta1Document.
        :type entities: List[GoogleCloudDocumentaiV1beta1DocumentEntity]
        """

        self._entities = entities

    @property
    def entity_relations(self):
        """Gets the entity_relations of this GoogleCloudDocumentaiV1beta1Document.

        Placeholder. Relationship among Document.entities.

        :return: The entity_relations of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentEntityRelation]
        """
        return self._entity_relations

    @entity_relations.setter
    def entity_relations(self, entity_relations):
        """Sets the entity_relations of this GoogleCloudDocumentaiV1beta1Document.

        Placeholder. Relationship among Document.entities.

        :param entity_relations: The entity_relations of this GoogleCloudDocumentaiV1beta1Document.
        :type entity_relations: List[GoogleCloudDocumentaiV1beta1DocumentEntityRelation]
        """

        self._entity_relations = entity_relations

    @property
    def error(self):
        """Gets the error of this GoogleCloudDocumentaiV1beta1Document.


        :return: The error of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: GoogleRpcStatus
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GoogleCloudDocumentaiV1beta1Document.


        :param error: The error of this GoogleCloudDocumentaiV1beta1Document.
        :type error: GoogleRpcStatus
        """

        self._error = error

    @property
    def mime_type(self):
        """Gets the mime_type of this GoogleCloudDocumentaiV1beta1Document.

        An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml).

        :return: The mime_type of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this GoogleCloudDocumentaiV1beta1Document.

        An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml).

        :param mime_type: The mime_type of this GoogleCloudDocumentaiV1beta1Document.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def pages(self):
        """Gets the pages of this GoogleCloudDocumentaiV1beta1Document.

        Visual page layout for the Document.

        :return: The pages of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPage]
        """
        return self._pages

    @pages.setter
    def pages(self, pages):
        """Sets the pages of this GoogleCloudDocumentaiV1beta1Document.

        Visual page layout for the Document.

        :param pages: The pages of this GoogleCloudDocumentaiV1beta1Document.
        :type pages: List[GoogleCloudDocumentaiV1beta1DocumentPage]
        """

        self._pages = pages

    @property
    def revisions(self):
        """Gets the revisions of this GoogleCloudDocumentaiV1beta1Document.

        Placeholder. Revision history of this document.

        :return: The revisions of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentRevision]
        """
        return self._revisions

    @revisions.setter
    def revisions(self, revisions):
        """Sets the revisions of this GoogleCloudDocumentaiV1beta1Document.

        Placeholder. Revision history of this document.

        :param revisions: The revisions of this GoogleCloudDocumentaiV1beta1Document.
        :type revisions: List[GoogleCloudDocumentaiV1beta1DocumentRevision]
        """

        self._revisions = revisions

    @property
    def shard_info(self):
        """Gets the shard_info of this GoogleCloudDocumentaiV1beta1Document.


        :return: The shard_info of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: GoogleCloudDocumentaiV1beta1DocumentShardInfo
        """
        return self._shard_info

    @shard_info.setter
    def shard_info(self, shard_info):
        """Sets the shard_info of this GoogleCloudDocumentaiV1beta1Document.


        :param shard_info: The shard_info of this GoogleCloudDocumentaiV1beta1Document.
        :type shard_info: GoogleCloudDocumentaiV1beta1DocumentShardInfo
        """

        self._shard_info = shard_info

    @property
    def text(self):
        """Gets the text of this GoogleCloudDocumentaiV1beta1Document.

        Optional. UTF-8 encoded text in reading order from the document.

        :return: The text of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GoogleCloudDocumentaiV1beta1Document.

        Optional. UTF-8 encoded text in reading order from the document.

        :param text: The text of this GoogleCloudDocumentaiV1beta1Document.
        :type text: str
        """

        self._text = text

    @property
    def text_changes(self):
        """Gets the text_changes of this GoogleCloudDocumentaiV1beta1Document.

        Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.

        :return: The text_changes of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentTextChange]
        """
        return self._text_changes

    @text_changes.setter
    def text_changes(self, text_changes):
        """Sets the text_changes of this GoogleCloudDocumentaiV1beta1Document.

        Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.

        :param text_changes: The text_changes of this GoogleCloudDocumentaiV1beta1Document.
        :type text_changes: List[GoogleCloudDocumentaiV1beta1DocumentTextChange]
        """

        self._text_changes = text_changes

    @property
    def text_styles(self):
        """Gets the text_styles of this GoogleCloudDocumentaiV1beta1Document.

        Styles for the Document.text.

        :return: The text_styles of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentStyle]
        """
        return self._text_styles

    @text_styles.setter
    def text_styles(self, text_styles):
        """Sets the text_styles of this GoogleCloudDocumentaiV1beta1Document.

        Styles for the Document.text.

        :param text_styles: The text_styles of this GoogleCloudDocumentaiV1beta1Document.
        :type text_styles: List[GoogleCloudDocumentaiV1beta1DocumentStyle]
        """

        self._text_styles = text_styles

    @property
    def uri(self):
        """Gets the uri of this GoogleCloudDocumentaiV1beta1Document.

        Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris).

        :return: The uri of this GoogleCloudDocumentaiV1beta1Document.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this GoogleCloudDocumentaiV1beta1Document.

        Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris).

        :param uri: The uri of this GoogleCloudDocumentaiV1beta1Document.
        :type uri: str
        """

        self._uri = uri
