# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_block import GoogleCloudDocumentaiV1beta1DocumentPageBlock
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_detected_barcode import GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_detected_language import GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_dimension import GoogleCloudDocumentaiV1beta1DocumentPageDimension
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_form_field import GoogleCloudDocumentaiV1beta1DocumentPageFormField
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_image import GoogleCloudDocumentaiV1beta1DocumentPageImage
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_image_quality_scores import GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_layout import GoogleCloudDocumentaiV1beta1DocumentPageLayout
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_line import GoogleCloudDocumentaiV1beta1DocumentPageLine
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_matrix import GoogleCloudDocumentaiV1beta1DocumentPageMatrix
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_paragraph import GoogleCloudDocumentaiV1beta1DocumentPageParagraph
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_symbol import GoogleCloudDocumentaiV1beta1DocumentPageSymbol
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_table import GoogleCloudDocumentaiV1beta1DocumentPageTable
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_token import GoogleCloudDocumentaiV1beta1DocumentPageToken
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_visual_element import GoogleCloudDocumentaiV1beta1DocumentPageVisualElement
from openapi_server.models.google_cloud_documentai_v1beta1_document_provenance import GoogleCloudDocumentaiV1beta1DocumentProvenance
from openapi_server import util


class GoogleCloudDocumentaiV1beta1DocumentPage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blocks: List[GoogleCloudDocumentaiV1beta1DocumentPageBlock]=None, detected_barcodes: List[GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode]=None, detected_languages: List[GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage]=None, dimension: GoogleCloudDocumentaiV1beta1DocumentPageDimension=None, form_fields: List[GoogleCloudDocumentaiV1beta1DocumentPageFormField]=None, image: GoogleCloudDocumentaiV1beta1DocumentPageImage=None, image_quality_scores: GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores=None, layout: GoogleCloudDocumentaiV1beta1DocumentPageLayout=None, lines: List[GoogleCloudDocumentaiV1beta1DocumentPageLine]=None, page_number: int=None, paragraphs: List[GoogleCloudDocumentaiV1beta1DocumentPageParagraph]=None, provenance: GoogleCloudDocumentaiV1beta1DocumentProvenance=None, symbols: List[GoogleCloudDocumentaiV1beta1DocumentPageSymbol]=None, tables: List[GoogleCloudDocumentaiV1beta1DocumentPageTable]=None, tokens: List[GoogleCloudDocumentaiV1beta1DocumentPageToken]=None, transforms: List[GoogleCloudDocumentaiV1beta1DocumentPageMatrix]=None, visual_elements: List[GoogleCloudDocumentaiV1beta1DocumentPageVisualElement]=None):
        """GoogleCloudDocumentaiV1beta1DocumentPage - a model defined in OpenAPI

        :param blocks: The blocks of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param detected_barcodes: The detected_barcodes of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param detected_languages: The detected_languages of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param dimension: The dimension of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param form_fields: The form_fields of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param image: The image of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param image_quality_scores: The image_quality_scores of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param layout: The layout of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param lines: The lines of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param page_number: The page_number of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param paragraphs: The paragraphs of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param provenance: The provenance of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param symbols: The symbols of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param tables: The tables of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param tokens: The tokens of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param transforms: The transforms of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :param visual_elements: The visual_elements of this GoogleCloudDocumentaiV1beta1DocumentPage.
        """
        self.openapi_types = {
            'blocks': List[GoogleCloudDocumentaiV1beta1DocumentPageBlock],
            'detected_barcodes': List[GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode],
            'detected_languages': List[GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage],
            'dimension': GoogleCloudDocumentaiV1beta1DocumentPageDimension,
            'form_fields': List[GoogleCloudDocumentaiV1beta1DocumentPageFormField],
            'image': GoogleCloudDocumentaiV1beta1DocumentPageImage,
            'image_quality_scores': GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores,
            'layout': GoogleCloudDocumentaiV1beta1DocumentPageLayout,
            'lines': List[GoogleCloudDocumentaiV1beta1DocumentPageLine],
            'page_number': int,
            'paragraphs': List[GoogleCloudDocumentaiV1beta1DocumentPageParagraph],
            'provenance': GoogleCloudDocumentaiV1beta1DocumentProvenance,
            'symbols': List[GoogleCloudDocumentaiV1beta1DocumentPageSymbol],
            'tables': List[GoogleCloudDocumentaiV1beta1DocumentPageTable],
            'tokens': List[GoogleCloudDocumentaiV1beta1DocumentPageToken],
            'transforms': List[GoogleCloudDocumentaiV1beta1DocumentPageMatrix],
            'visual_elements': List[GoogleCloudDocumentaiV1beta1DocumentPageVisualElement]
        }

        self.attribute_map = {
            'blocks': 'blocks',
            'detected_barcodes': 'detectedBarcodes',
            'detected_languages': 'detectedLanguages',
            'dimension': 'dimension',
            'form_fields': 'formFields',
            'image': 'image',
            'image_quality_scores': 'imageQualityScores',
            'layout': 'layout',
            'lines': 'lines',
            'page_number': 'pageNumber',
            'paragraphs': 'paragraphs',
            'provenance': 'provenance',
            'symbols': 'symbols',
            'tables': 'tables',
            'tokens': 'tokens',
            'transforms': 'transforms',
            'visual_elements': 'visualElements'
        }

        self._blocks = blocks
        self._detected_barcodes = detected_barcodes
        self._detected_languages = detected_languages
        self._dimension = dimension
        self._form_fields = form_fields
        self._image = image
        self._image_quality_scores = image_quality_scores
        self._layout = layout
        self._lines = lines
        self._page_number = page_number
        self._paragraphs = paragraphs
        self._provenance = provenance
        self._symbols = symbols
        self._tables = tables
        self._tokens = tokens
        self._transforms = transforms
        self._visual_elements = visual_elements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta1DocumentPage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta1DocumentPage of this GoogleCloudDocumentaiV1beta1DocumentPage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocks(self):
        """Gets the blocks of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.

        :return: The blocks of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageBlock]
        """
        return self._blocks

    @blocks.setter
    def blocks(self, blocks):
        """Sets the blocks of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.

        :param blocks: The blocks of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type blocks: List[GoogleCloudDocumentaiV1beta1DocumentPageBlock]
        """

        self._blocks = blocks

    @property
    def detected_barcodes(self):
        """Gets the detected_barcodes of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of detected barcodes.

        :return: The detected_barcodes of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode]
        """
        return self._detected_barcodes

    @detected_barcodes.setter
    def detected_barcodes(self, detected_barcodes):
        """Sets the detected_barcodes of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of detected barcodes.

        :param detected_barcodes: The detected_barcodes of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type detected_barcodes: List[GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode]
        """

        self._detected_barcodes = detected_barcodes

    @property
    def detected_languages(self):
        """Gets the detected_languages of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of detected languages together with confidence.

        :return: The detected_languages of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage]
        """
        return self._detected_languages

    @detected_languages.setter
    def detected_languages(self, detected_languages):
        """Sets the detected_languages of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of detected languages together with confidence.

        :param detected_languages: The detected_languages of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type detected_languages: List[GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage]
        """

        self._detected_languages = detected_languages

    @property
    def dimension(self):
        """Gets the dimension of this GoogleCloudDocumentaiV1beta1DocumentPage.


        :return: The dimension of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: GoogleCloudDocumentaiV1beta1DocumentPageDimension
        """
        return self._dimension

    @dimension.setter
    def dimension(self, dimension):
        """Sets the dimension of this GoogleCloudDocumentaiV1beta1DocumentPage.


        :param dimension: The dimension of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type dimension: GoogleCloudDocumentaiV1beta1DocumentPageDimension
        """

        self._dimension = dimension

    @property
    def form_fields(self):
        """Gets the form_fields of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected form fields on the page.

        :return: The form_fields of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageFormField]
        """
        return self._form_fields

    @form_fields.setter
    def form_fields(self, form_fields):
        """Sets the form_fields of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected form fields on the page.

        :param form_fields: The form_fields of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type form_fields: List[GoogleCloudDocumentaiV1beta1DocumentPageFormField]
        """

        self._form_fields = form_fields

    @property
    def image(self):
        """Gets the image of this GoogleCloudDocumentaiV1beta1DocumentPage.


        :return: The image of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: GoogleCloudDocumentaiV1beta1DocumentPageImage
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this GoogleCloudDocumentaiV1beta1DocumentPage.


        :param image: The image of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type image: GoogleCloudDocumentaiV1beta1DocumentPageImage
        """

        self._image = image

    @property
    def image_quality_scores(self):
        """Gets the image_quality_scores of this GoogleCloudDocumentaiV1beta1DocumentPage.


        :return: The image_quality_scores of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores
        """
        return self._image_quality_scores

    @image_quality_scores.setter
    def image_quality_scores(self, image_quality_scores):
        """Sets the image_quality_scores of this GoogleCloudDocumentaiV1beta1DocumentPage.


        :param image_quality_scores: The image_quality_scores of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type image_quality_scores: GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores
        """

        self._image_quality_scores = image_quality_scores

    @property
    def layout(self):
        """Gets the layout of this GoogleCloudDocumentaiV1beta1DocumentPage.


        :return: The layout of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: GoogleCloudDocumentaiV1beta1DocumentPageLayout
        """
        return self._layout

    @layout.setter
    def layout(self, layout):
        """Sets the layout of this GoogleCloudDocumentaiV1beta1DocumentPage.


        :param layout: The layout of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type layout: GoogleCloudDocumentaiV1beta1DocumentPageLayout
        """

        self._layout = layout

    @property
    def lines(self):
        """Gets the lines of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.

        :return: The lines of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageLine]
        """
        return self._lines

    @lines.setter
    def lines(self, lines):
        """Sets the lines of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.

        :param lines: The lines of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type lines: List[GoogleCloudDocumentaiV1beta1DocumentPageLine]
        """

        self._lines = lines

    @property
    def page_number(self):
        """Gets the page_number of this GoogleCloudDocumentaiV1beta1DocumentPage.

        1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.

        :return: The page_number of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this GoogleCloudDocumentaiV1beta1DocumentPage.

        1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.

        :param page_number: The page_number of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type page_number: int
        """

        self._page_number = page_number

    @property
    def paragraphs(self):
        """Gets the paragraphs of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.

        :return: The paragraphs of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageParagraph]
        """
        return self._paragraphs

    @paragraphs.setter
    def paragraphs(self, paragraphs):
        """Sets the paragraphs of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.

        :param paragraphs: The paragraphs of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type paragraphs: List[GoogleCloudDocumentaiV1beta1DocumentPageParagraph]
        """

        self._paragraphs = paragraphs

    @property
    def provenance(self):
        """Gets the provenance of this GoogleCloudDocumentaiV1beta1DocumentPage.


        :return: The provenance of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: GoogleCloudDocumentaiV1beta1DocumentProvenance
        """
        return self._provenance

    @provenance.setter
    def provenance(self, provenance):
        """Sets the provenance of this GoogleCloudDocumentaiV1beta1DocumentPage.


        :param provenance: The provenance of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type provenance: GoogleCloudDocumentaiV1beta1DocumentProvenance
        """

        self._provenance = provenance

    @property
    def symbols(self):
        """Gets the symbols of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected symbols on the page.

        :return: The symbols of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageSymbol]
        """
        return self._symbols

    @symbols.setter
    def symbols(self, symbols):
        """Sets the symbols of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected symbols on the page.

        :param symbols: The symbols of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type symbols: List[GoogleCloudDocumentaiV1beta1DocumentPageSymbol]
        """

        self._symbols = symbols

    @property
    def tables(self):
        """Gets the tables of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected tables on the page.

        :return: The tables of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageTable]
        """
        return self._tables

    @tables.setter
    def tables(self, tables):
        """Sets the tables of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected tables on the page.

        :param tables: The tables of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type tables: List[GoogleCloudDocumentaiV1beta1DocumentPageTable]
        """

        self._tables = tables

    @property
    def tokens(self):
        """Gets the tokens of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected tokens on the page.

        :return: The tokens of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageToken]
        """
        return self._tokens

    @tokens.setter
    def tokens(self, tokens):
        """Sets the tokens of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of visually detected tokens on the page.

        :param tokens: The tokens of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type tokens: List[GoogleCloudDocumentaiV1beta1DocumentPageToken]
        """

        self._tokens = tokens

    @property
    def transforms(self):
        """Gets the transforms of this GoogleCloudDocumentaiV1beta1DocumentPage.

        Transformation matrices that were applied to the original document image to produce Page.image.

        :return: The transforms of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageMatrix]
        """
        return self._transforms

    @transforms.setter
    def transforms(self, transforms):
        """Sets the transforms of this GoogleCloudDocumentaiV1beta1DocumentPage.

        Transformation matrices that were applied to the original document image to produce Page.image.

        :param transforms: The transforms of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type transforms: List[GoogleCloudDocumentaiV1beta1DocumentPageMatrix]
        """

        self._transforms = transforms

    @property
    def visual_elements(self):
        """Gets the visual_elements of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.

        :return: The visual_elements of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageVisualElement]
        """
        return self._visual_elements

    @visual_elements.setter
    def visual_elements(self, visual_elements):
        """Sets the visual_elements of this GoogleCloudDocumentaiV1beta1DocumentPage.

        A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.

        :param visual_elements: The visual_elements of this GoogleCloudDocumentaiV1beta1DocumentPage.
        :type visual_elements: List[GoogleCloudDocumentaiV1beta1DocumentPageVisualElement]
        """

        self._visual_elements = visual_elements
