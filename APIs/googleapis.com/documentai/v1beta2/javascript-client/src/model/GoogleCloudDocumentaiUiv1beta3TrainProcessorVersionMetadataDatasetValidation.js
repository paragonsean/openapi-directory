/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation model module.
 * @module model/GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation
 * @version v1beta2
 */
class GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation</code>.
     * The dataset validation information. This includes any and all errors with documents and the dataset.
     * @alias module:model/GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation
     */
    constructor() { 
        
        GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation} The populated <code>GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation();

            if (data.hasOwnProperty('datasetErrorCount')) {
                obj['datasetErrorCount'] = ApiClient.convertToType(data['datasetErrorCount'], 'Number');
            }
            if (data.hasOwnProperty('datasetErrors')) {
                obj['datasetErrors'] = ApiClient.convertToType(data['datasetErrors'], [GoogleRpcStatus]);
            }
            if (data.hasOwnProperty('documentErrorCount')) {
                obj['documentErrorCount'] = ApiClient.convertToType(data['documentErrorCount'], 'Number');
            }
            if (data.hasOwnProperty('documentErrors')) {
                obj['documentErrors'] = ApiClient.convertToType(data['documentErrors'], [GoogleRpcStatus]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation</code>.
     */
    static validateJSON(data) {
        if (data['datasetErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['datasetErrors'])) {
                throw new Error("Expected the field `datasetErrors` to be an array in the JSON data but got " + data['datasetErrors']);
            }
            // validate the optional field `datasetErrors` (array)
            for (const item of data['datasetErrors']) {
                GoogleRpcStatus.validateJSON(item);
            };
        }
        if (data['documentErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['documentErrors'])) {
                throw new Error("Expected the field `documentErrors` to be an array in the JSON data but got " + data['documentErrors']);
            }
            // validate the optional field `documentErrors` (array)
            for (const item of data['documentErrors']) {
                GoogleRpcStatus.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The total number of dataset errors.
 * @member {Number} datasetErrorCount
 */
GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation.prototype['datasetErrorCount'] = undefined;

/**
 * Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.
 * @member {Array.<module:model/GoogleRpcStatus>} datasetErrors
 */
GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation.prototype['datasetErrors'] = undefined;

/**
 * The total number of document errors.
 * @member {Number} documentErrorCount
 */
GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation.prototype['documentErrorCount'] = undefined;

/**
 * Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.
 * @member {Array.<module:model/GoogleRpcStatus>} documentErrors
 */
GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation.prototype['documentErrors'] = undefined;






export default GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation;

