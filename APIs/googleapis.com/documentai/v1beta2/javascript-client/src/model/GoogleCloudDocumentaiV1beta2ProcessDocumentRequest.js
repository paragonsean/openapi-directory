/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDocumentaiV1beta2AutoMlParams from './GoogleCloudDocumentaiV1beta2AutoMlParams';
import GoogleCloudDocumentaiV1beta2EntityExtractionParams from './GoogleCloudDocumentaiV1beta2EntityExtractionParams';
import GoogleCloudDocumentaiV1beta2FormExtractionParams from './GoogleCloudDocumentaiV1beta2FormExtractionParams';
import GoogleCloudDocumentaiV1beta2InputConfig from './GoogleCloudDocumentaiV1beta2InputConfig';
import GoogleCloudDocumentaiV1beta2OcrParams from './GoogleCloudDocumentaiV1beta2OcrParams';
import GoogleCloudDocumentaiV1beta2OutputConfig from './GoogleCloudDocumentaiV1beta2OutputConfig';
import GoogleCloudDocumentaiV1beta2TableExtractionParams from './GoogleCloudDocumentaiV1beta2TableExtractionParams';

/**
 * The GoogleCloudDocumentaiV1beta2ProcessDocumentRequest model module.
 * @module model/GoogleCloudDocumentaiV1beta2ProcessDocumentRequest
 * @version v1beta2
 */
class GoogleCloudDocumentaiV1beta2ProcessDocumentRequest {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1beta2ProcessDocumentRequest</code>.
     * Request to process one document.
     * @alias module:model/GoogleCloudDocumentaiV1beta2ProcessDocumentRequest
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1beta2ProcessDocumentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1beta2ProcessDocumentRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1beta2ProcessDocumentRequest} The populated <code>GoogleCloudDocumentaiV1beta2ProcessDocumentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1beta2ProcessDocumentRequest();

            if (data.hasOwnProperty('automlParams')) {
                obj['automlParams'] = GoogleCloudDocumentaiV1beta2AutoMlParams.constructFromObject(data['automlParams']);
            }
            if (data.hasOwnProperty('documentType')) {
                obj['documentType'] = ApiClient.convertToType(data['documentType'], 'String');
            }
            if (data.hasOwnProperty('entityExtractionParams')) {
                obj['entityExtractionParams'] = GoogleCloudDocumentaiV1beta2EntityExtractionParams.constructFromObject(data['entityExtractionParams']);
            }
            if (data.hasOwnProperty('formExtractionParams')) {
                obj['formExtractionParams'] = GoogleCloudDocumentaiV1beta2FormExtractionParams.constructFromObject(data['formExtractionParams']);
            }
            if (data.hasOwnProperty('inputConfig')) {
                obj['inputConfig'] = GoogleCloudDocumentaiV1beta2InputConfig.constructFromObject(data['inputConfig']);
            }
            if (data.hasOwnProperty('ocrParams')) {
                obj['ocrParams'] = GoogleCloudDocumentaiV1beta2OcrParams.constructFromObject(data['ocrParams']);
            }
            if (data.hasOwnProperty('outputConfig')) {
                obj['outputConfig'] = GoogleCloudDocumentaiV1beta2OutputConfig.constructFromObject(data['outputConfig']);
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'String');
            }
            if (data.hasOwnProperty('tableExtractionParams')) {
                obj['tableExtractionParams'] = GoogleCloudDocumentaiV1beta2TableExtractionParams.constructFromObject(data['tableExtractionParams']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1beta2ProcessDocumentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1beta2ProcessDocumentRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `automlParams`
        if (data['automlParams']) { // data not null
          GoogleCloudDocumentaiV1beta2AutoMlParams.validateJSON(data['automlParams']);
        }
        // ensure the json data is a string
        if (data['documentType'] && !(typeof data['documentType'] === 'string' || data['documentType'] instanceof String)) {
            throw new Error("Expected the field `documentType` to be a primitive type in the JSON string but got " + data['documentType']);
        }
        // validate the optional field `entityExtractionParams`
        if (data['entityExtractionParams']) { // data not null
          GoogleCloudDocumentaiV1beta2EntityExtractionParams.validateJSON(data['entityExtractionParams']);
        }
        // validate the optional field `formExtractionParams`
        if (data['formExtractionParams']) { // data not null
          GoogleCloudDocumentaiV1beta2FormExtractionParams.validateJSON(data['formExtractionParams']);
        }
        // validate the optional field `inputConfig`
        if (data['inputConfig']) { // data not null
          GoogleCloudDocumentaiV1beta2InputConfig.validateJSON(data['inputConfig']);
        }
        // validate the optional field `ocrParams`
        if (data['ocrParams']) { // data not null
          GoogleCloudDocumentaiV1beta2OcrParams.validateJSON(data['ocrParams']);
        }
        // validate the optional field `outputConfig`
        if (data['outputConfig']) { // data not null
          GoogleCloudDocumentaiV1beta2OutputConfig.validateJSON(data['outputConfig']);
        }
        // ensure the json data is a string
        if (data['parent'] && !(typeof data['parent'] === 'string' || data['parent'] instanceof String)) {
            throw new Error("Expected the field `parent` to be a primitive type in the JSON string but got " + data['parent']);
        }
        // validate the optional field `tableExtractionParams`
        if (data['tableExtractionParams']) { // data not null
          GoogleCloudDocumentaiV1beta2TableExtractionParams.validateJSON(data['tableExtractionParams']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDocumentaiV1beta2AutoMlParams} automlParams
 */
GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.prototype['automlParams'] = undefined;

/**
 * Specifies a known document type for deeper structure detection. Valid values are currently \"general\" and \"invoice\". If not provided, \"general\"\\ is used as default. If any other value is given, the request is rejected.
 * @member {String} documentType
 */
GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.prototype['documentType'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta2EntityExtractionParams} entityExtractionParams
 */
GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.prototype['entityExtractionParams'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta2FormExtractionParams} formExtractionParams
 */
GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.prototype['formExtractionParams'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta2InputConfig} inputConfig
 */
GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.prototype['inputConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta2OcrParams} ocrParams
 */
GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.prototype['ocrParams'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta2OutputConfig} outputConfig
 */
GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.prototype['outputConfig'] = undefined;

/**
 * Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.
 * @member {String} parent
 */
GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.prototype['parent'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta2TableExtractionParams} tableExtractionParams
 */
GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.prototype['tableExtractionParams'] = undefined;






export default GoogleCloudDocumentaiV1beta2ProcessDocumentRequest;

