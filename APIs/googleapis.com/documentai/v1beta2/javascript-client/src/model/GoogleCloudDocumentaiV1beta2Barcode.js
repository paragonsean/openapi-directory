/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDocumentaiV1beta2Barcode model module.
 * @module model/GoogleCloudDocumentaiV1beta2Barcode
 * @version v1beta2
 */
class GoogleCloudDocumentaiV1beta2Barcode {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1beta2Barcode</code>.
     * Encodes the detailed information of a barcode.
     * @alias module:model/GoogleCloudDocumentaiV1beta2Barcode
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1beta2Barcode.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1beta2Barcode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1beta2Barcode} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1beta2Barcode} The populated <code>GoogleCloudDocumentaiV1beta2Barcode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1beta2Barcode();

            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('rawValue')) {
                obj['rawValue'] = ApiClient.convertToType(data['rawValue'], 'String');
            }
            if (data.hasOwnProperty('valueFormat')) {
                obj['valueFormat'] = ApiClient.convertToType(data['valueFormat'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1beta2Barcode</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1beta2Barcode</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['rawValue'] && !(typeof data['rawValue'] === 'string' || data['rawValue'] instanceof String)) {
            throw new Error("Expected the field `rawValue` to be a primitive type in the JSON string but got " + data['rawValue']);
        }
        // ensure the json data is a string
        if (data['valueFormat'] && !(typeof data['valueFormat'] === 'string' || data['valueFormat'] instanceof String)) {
            throw new Error("Expected the field `valueFormat` to be a primitive type in the JSON string but got " + data['valueFormat']);
        }

        return true;
    }


}



/**
 * Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.
 * @member {String} format
 */
GoogleCloudDocumentaiV1beta2Barcode.prototype['format'] = undefined;

/**
 * Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.
 * @member {String} rawValue
 */
GoogleCloudDocumentaiV1beta2Barcode.prototype['rawValue'] = undefined;

/**
 * Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license.
 * @member {String} valueFormat
 */
GoogleCloudDocumentaiV1beta2Barcode.prototype['valueFormat'] = undefined;






export default GoogleCloudDocumentaiV1beta2Barcode;

