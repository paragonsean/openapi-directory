/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata() {
    this->initializeModel();
}

OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::~OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata() {}

void OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::initializeModel() {

    m_common_metadata_isSet = false;
    m_common_metadata_isValid = false;

    m_error_document_count_isSet = false;
    m_error_document_count_isValid = false;

    m_individual_batch_delete_statuses_isSet = false;
    m_individual_batch_delete_statuses_isValid = false;

    m_total_document_count_isSet = false;
    m_total_document_count_isValid = false;
}

void OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::fromJsonObject(QJsonObject json) {

    m_common_metadata_isValid = ::OpenAPI::fromJsonValue(m_common_metadata, json[QString("commonMetadata")]);
    m_common_metadata_isSet = !json[QString("commonMetadata")].isNull() && m_common_metadata_isValid;

    m_error_document_count_isValid = ::OpenAPI::fromJsonValue(m_error_document_count, json[QString("errorDocumentCount")]);
    m_error_document_count_isSet = !json[QString("errorDocumentCount")].isNull() && m_error_document_count_isValid;

    m_individual_batch_delete_statuses_isValid = ::OpenAPI::fromJsonValue(m_individual_batch_delete_statuses, json[QString("individualBatchDeleteStatuses")]);
    m_individual_batch_delete_statuses_isSet = !json[QString("individualBatchDeleteStatuses")].isNull() && m_individual_batch_delete_statuses_isValid;

    m_total_document_count_isValid = ::OpenAPI::fromJsonValue(m_total_document_count, json[QString("totalDocumentCount")]);
    m_total_document_count_isSet = !json[QString("totalDocumentCount")].isNull() && m_total_document_count_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_common_metadata.isSet()) {
        obj.insert(QString("commonMetadata"), ::OpenAPI::toJsonValue(m_common_metadata));
    }
    if (m_error_document_count_isSet) {
        obj.insert(QString("errorDocumentCount"), ::OpenAPI::toJsonValue(m_error_document_count));
    }
    if (m_individual_batch_delete_statuses.size() > 0) {
        obj.insert(QString("individualBatchDeleteStatuses"), ::OpenAPI::toJsonValue(m_individual_batch_delete_statuses));
    }
    if (m_total_document_count_isSet) {
        obj.insert(QString("totalDocumentCount"), ::OpenAPI::toJsonValue(m_total_document_count));
    }
    return obj;
}

OAIGoogleCloudDocumentaiV1beta3CommonOperationMetadata OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::getCommonMetadata() const {
    return m_common_metadata;
}
void OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::setCommonMetadata(const OAIGoogleCloudDocumentaiV1beta3CommonOperationMetadata &common_metadata) {
    m_common_metadata = common_metadata;
    m_common_metadata_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::is_common_metadata_Set() const{
    return m_common_metadata_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::is_common_metadata_Valid() const{
    return m_common_metadata_isValid;
}

qint32 OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::getErrorDocumentCount() const {
    return m_error_document_count;
}
void OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::setErrorDocumentCount(const qint32 &error_document_count) {
    m_error_document_count = error_document_count;
    m_error_document_count_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::is_error_document_count_Set() const{
    return m_error_document_count_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::is_error_document_count_Valid() const{
    return m_error_document_count_isValid;
}

QList<OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus> OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::getIndividualBatchDeleteStatuses() const {
    return m_individual_batch_delete_statuses;
}
void OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::setIndividualBatchDeleteStatuses(const QList<OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus> &individual_batch_delete_statuses) {
    m_individual_batch_delete_statuses = individual_batch_delete_statuses;
    m_individual_batch_delete_statuses_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::is_individual_batch_delete_statuses_Set() const{
    return m_individual_batch_delete_statuses_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::is_individual_batch_delete_statuses_Valid() const{
    return m_individual_batch_delete_statuses_isValid;
}

qint32 OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::getTotalDocumentCount() const {
    return m_total_document_count;
}
void OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::setTotalDocumentCount(const qint32 &total_document_count) {
    m_total_document_count = total_document_count;
    m_total_document_count_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::is_total_document_count_Set() const{
    return m_total_document_count_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::is_total_document_count_Valid() const{
    return m_total_document_count_isValid;
}

bool OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_common_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_document_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_batch_delete_statuses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_document_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
