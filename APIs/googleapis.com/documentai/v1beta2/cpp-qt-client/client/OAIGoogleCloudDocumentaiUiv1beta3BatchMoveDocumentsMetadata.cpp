/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata() {
    this->initializeModel();
}

OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::~OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata() {}

void OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::initializeModel() {

    m_common_metadata_isSet = false;
    m_common_metadata_isValid = false;

    m_dest_dataset_type_isSet = false;
    m_dest_dataset_type_isValid = false;

    m_dest_split_type_isSet = false;
    m_dest_split_type_isValid = false;

    m_individual_batch_move_statuses_isSet = false;
    m_individual_batch_move_statuses_isValid = false;
}

void OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::fromJsonObject(QJsonObject json) {

    m_common_metadata_isValid = ::OpenAPI::fromJsonValue(m_common_metadata, json[QString("commonMetadata")]);
    m_common_metadata_isSet = !json[QString("commonMetadata")].isNull() && m_common_metadata_isValid;

    m_dest_dataset_type_isValid = ::OpenAPI::fromJsonValue(m_dest_dataset_type, json[QString("destDatasetType")]);
    m_dest_dataset_type_isSet = !json[QString("destDatasetType")].isNull() && m_dest_dataset_type_isValid;

    m_dest_split_type_isValid = ::OpenAPI::fromJsonValue(m_dest_split_type, json[QString("destSplitType")]);
    m_dest_split_type_isSet = !json[QString("destSplitType")].isNull() && m_dest_split_type_isValid;

    m_individual_batch_move_statuses_isValid = ::OpenAPI::fromJsonValue(m_individual_batch_move_statuses, json[QString("individualBatchMoveStatuses")]);
    m_individual_batch_move_statuses_isSet = !json[QString("individualBatchMoveStatuses")].isNull() && m_individual_batch_move_statuses_isValid;
}

QString OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_common_metadata.isSet()) {
        obj.insert(QString("commonMetadata"), ::OpenAPI::toJsonValue(m_common_metadata));
    }
    if (m_dest_dataset_type_isSet) {
        obj.insert(QString("destDatasetType"), ::OpenAPI::toJsonValue(m_dest_dataset_type));
    }
    if (m_dest_split_type_isSet) {
        obj.insert(QString("destSplitType"), ::OpenAPI::toJsonValue(m_dest_split_type));
    }
    if (m_individual_batch_move_statuses.size() > 0) {
        obj.insert(QString("individualBatchMoveStatuses"), ::OpenAPI::toJsonValue(m_individual_batch_move_statuses));
    }
    return obj;
}

OAIGoogleCloudDocumentaiUiv1beta3CommonOperationMetadata OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::getCommonMetadata() const {
    return m_common_metadata;
}
void OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::setCommonMetadata(const OAIGoogleCloudDocumentaiUiv1beta3CommonOperationMetadata &common_metadata) {
    m_common_metadata = common_metadata;
    m_common_metadata_isSet = true;
}

bool OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::is_common_metadata_Set() const{
    return m_common_metadata_isSet;
}

bool OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::is_common_metadata_Valid() const{
    return m_common_metadata_isValid;
}

QString OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::getDestDatasetType() const {
    return m_dest_dataset_type;
}
void OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::setDestDatasetType(const QString &dest_dataset_type) {
    m_dest_dataset_type = dest_dataset_type;
    m_dest_dataset_type_isSet = true;
}

bool OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::is_dest_dataset_type_Set() const{
    return m_dest_dataset_type_isSet;
}

bool OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::is_dest_dataset_type_Valid() const{
    return m_dest_dataset_type_isValid;
}

QString OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::getDestSplitType() const {
    return m_dest_split_type;
}
void OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::setDestSplitType(const QString &dest_split_type) {
    m_dest_split_type = dest_split_type;
    m_dest_split_type_isSet = true;
}

bool OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::is_dest_split_type_Set() const{
    return m_dest_split_type_isSet;
}

bool OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::is_dest_split_type_Valid() const{
    return m_dest_split_type_isValid;
}

QList<OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus> OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::getIndividualBatchMoveStatuses() const {
    return m_individual_batch_move_statuses;
}
void OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::setIndividualBatchMoveStatuses(const QList<OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus> &individual_batch_move_statuses) {
    m_individual_batch_move_statuses = individual_batch_move_statuses;
    m_individual_batch_move_statuses_isSet = true;
}

bool OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::is_individual_batch_move_statuses_Set() const{
    return m_individual_batch_move_statuses_isSet;
}

bool OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::is_individual_batch_move_statuses_Valid() const{
    return m_individual_batch_move_statuses_isValid;
}

bool OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_common_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dest_dataset_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dest_split_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_batch_move_statuses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
