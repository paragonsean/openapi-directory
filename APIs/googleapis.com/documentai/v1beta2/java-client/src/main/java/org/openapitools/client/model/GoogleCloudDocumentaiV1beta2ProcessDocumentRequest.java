/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2AutoMlParams;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2EntityExtractionParams;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2FormExtractionParams;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2InputConfig;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2OcrParams;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2OutputConfig;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2TableExtractionParams;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request to process one document.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:51.583823-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta2ProcessDocumentRequest {
  public static final String SERIALIZED_NAME_AUTOML_PARAMS = "automlParams";
  @SerializedName(SERIALIZED_NAME_AUTOML_PARAMS)
  private GoogleCloudDocumentaiV1beta2AutoMlParams automlParams;

  public static final String SERIALIZED_NAME_DOCUMENT_TYPE = "documentType";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_TYPE)
  private String documentType;

  public static final String SERIALIZED_NAME_ENTITY_EXTRACTION_PARAMS = "entityExtractionParams";
  @SerializedName(SERIALIZED_NAME_ENTITY_EXTRACTION_PARAMS)
  private GoogleCloudDocumentaiV1beta2EntityExtractionParams entityExtractionParams;

  public static final String SERIALIZED_NAME_FORM_EXTRACTION_PARAMS = "formExtractionParams";
  @SerializedName(SERIALIZED_NAME_FORM_EXTRACTION_PARAMS)
  private GoogleCloudDocumentaiV1beta2FormExtractionParams formExtractionParams;

  public static final String SERIALIZED_NAME_INPUT_CONFIG = "inputConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIG)
  private GoogleCloudDocumentaiV1beta2InputConfig inputConfig;

  public static final String SERIALIZED_NAME_OCR_PARAMS = "ocrParams";
  @SerializedName(SERIALIZED_NAME_OCR_PARAMS)
  private GoogleCloudDocumentaiV1beta2OcrParams ocrParams;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "outputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private GoogleCloudDocumentaiV1beta2OutputConfig outputConfig;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private String parent;

  public static final String SERIALIZED_NAME_TABLE_EXTRACTION_PARAMS = "tableExtractionParams";
  @SerializedName(SERIALIZED_NAME_TABLE_EXTRACTION_PARAMS)
  private GoogleCloudDocumentaiV1beta2TableExtractionParams tableExtractionParams;

  public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest() {
  }

  public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest automlParams(GoogleCloudDocumentaiV1beta2AutoMlParams automlParams) {
    this.automlParams = automlParams;
    return this;
  }

  /**
   * Get automlParams
   * @return automlParams
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2AutoMlParams getAutomlParams() {
    return automlParams;
  }

  public void setAutomlParams(GoogleCloudDocumentaiV1beta2AutoMlParams automlParams) {
    this.automlParams = automlParams;
  }


  public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest documentType(String documentType) {
    this.documentType = documentType;
    return this;
  }

  /**
   * Specifies a known document type for deeper structure detection. Valid values are currently \&quot;general\&quot; and \&quot;invoice\&quot;. If not provided, \&quot;general\&quot;\\ is used as default. If any other value is given, the request is rejected.
   * @return documentType
   */
  @javax.annotation.Nullable
  public String getDocumentType() {
    return documentType;
  }

  public void setDocumentType(String documentType) {
    this.documentType = documentType;
  }


  public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest entityExtractionParams(GoogleCloudDocumentaiV1beta2EntityExtractionParams entityExtractionParams) {
    this.entityExtractionParams = entityExtractionParams;
    return this;
  }

  /**
   * Get entityExtractionParams
   * @return entityExtractionParams
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2EntityExtractionParams getEntityExtractionParams() {
    return entityExtractionParams;
  }

  public void setEntityExtractionParams(GoogleCloudDocumentaiV1beta2EntityExtractionParams entityExtractionParams) {
    this.entityExtractionParams = entityExtractionParams;
  }


  public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest formExtractionParams(GoogleCloudDocumentaiV1beta2FormExtractionParams formExtractionParams) {
    this.formExtractionParams = formExtractionParams;
    return this;
  }

  /**
   * Get formExtractionParams
   * @return formExtractionParams
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2FormExtractionParams getFormExtractionParams() {
    return formExtractionParams;
  }

  public void setFormExtractionParams(GoogleCloudDocumentaiV1beta2FormExtractionParams formExtractionParams) {
    this.formExtractionParams = formExtractionParams;
  }


  public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest inputConfig(GoogleCloudDocumentaiV1beta2InputConfig inputConfig) {
    this.inputConfig = inputConfig;
    return this;
  }

  /**
   * Get inputConfig
   * @return inputConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2InputConfig getInputConfig() {
    return inputConfig;
  }

  public void setInputConfig(GoogleCloudDocumentaiV1beta2InputConfig inputConfig) {
    this.inputConfig = inputConfig;
  }


  public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest ocrParams(GoogleCloudDocumentaiV1beta2OcrParams ocrParams) {
    this.ocrParams = ocrParams;
    return this;
  }

  /**
   * Get ocrParams
   * @return ocrParams
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2OcrParams getOcrParams() {
    return ocrParams;
  }

  public void setOcrParams(GoogleCloudDocumentaiV1beta2OcrParams ocrParams) {
    this.ocrParams = ocrParams;
  }


  public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest outputConfig(GoogleCloudDocumentaiV1beta2OutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2OutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(GoogleCloudDocumentaiV1beta2OutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest parent(String parent) {
    this.parent = parent;
    return this;
  }

  /**
   * Target project and location to make a call. Format: &#x60;projects/{project-id}/locations/{location-id}&#x60;. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.
   * @return parent
   */
  @javax.annotation.Nullable
  public String getParent() {
    return parent;
  }

  public void setParent(String parent) {
    this.parent = parent;
  }


  public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest tableExtractionParams(GoogleCloudDocumentaiV1beta2TableExtractionParams tableExtractionParams) {
    this.tableExtractionParams = tableExtractionParams;
    return this;
  }

  /**
   * Get tableExtractionParams
   * @return tableExtractionParams
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2TableExtractionParams getTableExtractionParams() {
    return tableExtractionParams;
  }

  public void setTableExtractionParams(GoogleCloudDocumentaiV1beta2TableExtractionParams tableExtractionParams) {
    this.tableExtractionParams = tableExtractionParams;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta2ProcessDocumentRequest googleCloudDocumentaiV1beta2ProcessDocumentRequest = (GoogleCloudDocumentaiV1beta2ProcessDocumentRequest) o;
    return Objects.equals(this.automlParams, googleCloudDocumentaiV1beta2ProcessDocumentRequest.automlParams) &&
        Objects.equals(this.documentType, googleCloudDocumentaiV1beta2ProcessDocumentRequest.documentType) &&
        Objects.equals(this.entityExtractionParams, googleCloudDocumentaiV1beta2ProcessDocumentRequest.entityExtractionParams) &&
        Objects.equals(this.formExtractionParams, googleCloudDocumentaiV1beta2ProcessDocumentRequest.formExtractionParams) &&
        Objects.equals(this.inputConfig, googleCloudDocumentaiV1beta2ProcessDocumentRequest.inputConfig) &&
        Objects.equals(this.ocrParams, googleCloudDocumentaiV1beta2ProcessDocumentRequest.ocrParams) &&
        Objects.equals(this.outputConfig, googleCloudDocumentaiV1beta2ProcessDocumentRequest.outputConfig) &&
        Objects.equals(this.parent, googleCloudDocumentaiV1beta2ProcessDocumentRequest.parent) &&
        Objects.equals(this.tableExtractionParams, googleCloudDocumentaiV1beta2ProcessDocumentRequest.tableExtractionParams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automlParams, documentType, entityExtractionParams, formExtractionParams, inputConfig, ocrParams, outputConfig, parent, tableExtractionParams);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta2ProcessDocumentRequest {\n");
    sb.append("    automlParams: ").append(toIndentedString(automlParams)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    entityExtractionParams: ").append(toIndentedString(entityExtractionParams)).append("\n");
    sb.append("    formExtractionParams: ").append(toIndentedString(formExtractionParams)).append("\n");
    sb.append("    inputConfig: ").append(toIndentedString(inputConfig)).append("\n");
    sb.append("    ocrParams: ").append(toIndentedString(ocrParams)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    tableExtractionParams: ").append(toIndentedString(tableExtractionParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("automlParams");
    openapiFields.add("documentType");
    openapiFields.add("entityExtractionParams");
    openapiFields.add("formExtractionParams");
    openapiFields.add("inputConfig");
    openapiFields.add("ocrParams");
    openapiFields.add("outputConfig");
    openapiFields.add("parent");
    openapiFields.add("tableExtractionParams");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta2ProcessDocumentRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta2ProcessDocumentRequest is not found in the empty JSON string", GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta2ProcessDocumentRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `automlParams`
      if (jsonObj.get("automlParams") != null && !jsonObj.get("automlParams").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2AutoMlParams.validateJsonElement(jsonObj.get("automlParams"));
      }
      if ((jsonObj.get("documentType") != null && !jsonObj.get("documentType").isJsonNull()) && !jsonObj.get("documentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `documentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("documentType").toString()));
      }
      // validate the optional field `entityExtractionParams`
      if (jsonObj.get("entityExtractionParams") != null && !jsonObj.get("entityExtractionParams").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2EntityExtractionParams.validateJsonElement(jsonObj.get("entityExtractionParams"));
      }
      // validate the optional field `formExtractionParams`
      if (jsonObj.get("formExtractionParams") != null && !jsonObj.get("formExtractionParams").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2FormExtractionParams.validateJsonElement(jsonObj.get("formExtractionParams"));
      }
      // validate the optional field `inputConfig`
      if (jsonObj.get("inputConfig") != null && !jsonObj.get("inputConfig").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2InputConfig.validateJsonElement(jsonObj.get("inputConfig"));
      }
      // validate the optional field `ocrParams`
      if (jsonObj.get("ocrParams") != null && !jsonObj.get("ocrParams").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2OcrParams.validateJsonElement(jsonObj.get("ocrParams"));
      }
      // validate the optional field `outputConfig`
      if (jsonObj.get("outputConfig") != null && !jsonObj.get("outputConfig").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2OutputConfig.validateJsonElement(jsonObj.get("outputConfig"));
      }
      if ((jsonObj.get("parent") != null && !jsonObj.get("parent").isJsonNull()) && !jsonObj.get("parent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent").toString()));
      }
      // validate the optional field `tableExtractionParams`
      if (jsonObj.get("tableExtractionParams") != null && !jsonObj.get("tableExtractionParams").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2TableExtractionParams.validateJsonElement(jsonObj.get("tableExtractionParams"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta2ProcessDocumentRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta2ProcessDocumentRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta2ProcessDocumentRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta2ProcessDocumentRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta2ProcessDocumentRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta2ProcessDocumentRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta2ProcessDocumentRequest
   */
  public static GoogleCloudDocumentaiV1beta2ProcessDocumentRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta2ProcessDocumentRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta2ProcessDocumentRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

