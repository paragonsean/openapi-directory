/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleTypeDate;
import org.openapitools.client.model.GoogleTypeDateTime;
import org.openapitools.client.model.GoogleTypeMoney;
import org.openapitools.client.model.GoogleTypePostalAddress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Parsed and normalized entity value.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:51.583823-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue {
  public static final String SERIALIZED_NAME_ADDRESS_VALUE = "addressValue";
  @SerializedName(SERIALIZED_NAME_ADDRESS_VALUE)
  private GoogleTypePostalAddress addressValue;

  public static final String SERIALIZED_NAME_BOOLEAN_VALUE = "booleanValue";
  @SerializedName(SERIALIZED_NAME_BOOLEAN_VALUE)
  private Boolean booleanValue;

  public static final String SERIALIZED_NAME_DATE_VALUE = "dateValue";
  @SerializedName(SERIALIZED_NAME_DATE_VALUE)
  private GoogleTypeDate dateValue;

  public static final String SERIALIZED_NAME_DATETIME_VALUE = "datetimeValue";
  @SerializedName(SERIALIZED_NAME_DATETIME_VALUE)
  private GoogleTypeDateTime datetimeValue;

  public static final String SERIALIZED_NAME_FLOAT_VALUE = "floatValue";
  @SerializedName(SERIALIZED_NAME_FLOAT_VALUE)
  private Float floatValue;

  public static final String SERIALIZED_NAME_INTEGER_VALUE = "integerValue";
  @SerializedName(SERIALIZED_NAME_INTEGER_VALUE)
  private Integer integerValue;

  public static final String SERIALIZED_NAME_MONEY_VALUE = "moneyValue";
  @SerializedName(SERIALIZED_NAME_MONEY_VALUE)
  private GoogleTypeMoney moneyValue;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue() {
  }

  public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue addressValue(GoogleTypePostalAddress addressValue) {
    this.addressValue = addressValue;
    return this;
  }

  /**
   * Get addressValue
   * @return addressValue
   */
  @javax.annotation.Nullable
  public GoogleTypePostalAddress getAddressValue() {
    return addressValue;
  }

  public void setAddressValue(GoogleTypePostalAddress addressValue) {
    this.addressValue = addressValue;
  }


  public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue booleanValue(Boolean booleanValue) {
    this.booleanValue = booleanValue;
    return this;
  }

  /**
   * Boolean value. Can be used for entities with binary values, or for checkboxes.
   * @return booleanValue
   */
  @javax.annotation.Nullable
  public Boolean getBooleanValue() {
    return booleanValue;
  }

  public void setBooleanValue(Boolean booleanValue) {
    this.booleanValue = booleanValue;
  }


  public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue dateValue(GoogleTypeDate dateValue) {
    this.dateValue = dateValue;
    return this;
  }

  /**
   * Get dateValue
   * @return dateValue
   */
  @javax.annotation.Nullable
  public GoogleTypeDate getDateValue() {
    return dateValue;
  }

  public void setDateValue(GoogleTypeDate dateValue) {
    this.dateValue = dateValue;
  }


  public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue datetimeValue(GoogleTypeDateTime datetimeValue) {
    this.datetimeValue = datetimeValue;
    return this;
  }

  /**
   * Get datetimeValue
   * @return datetimeValue
   */
  @javax.annotation.Nullable
  public GoogleTypeDateTime getDatetimeValue() {
    return datetimeValue;
  }

  public void setDatetimeValue(GoogleTypeDateTime datetimeValue) {
    this.datetimeValue = datetimeValue;
  }


  public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue floatValue(Float floatValue) {
    this.floatValue = floatValue;
    return this;
  }

  /**
   * Float value.
   * @return floatValue
   */
  @javax.annotation.Nullable
  public Float getFloatValue() {
    return floatValue;
  }

  public void setFloatValue(Float floatValue) {
    this.floatValue = floatValue;
  }


  public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue integerValue(Integer integerValue) {
    this.integerValue = integerValue;
    return this;
  }

  /**
   * Integer value.
   * @return integerValue
   */
  @javax.annotation.Nullable
  public Integer getIntegerValue() {
    return integerValue;
  }

  public void setIntegerValue(Integer integerValue) {
    this.integerValue = integerValue;
  }


  public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue moneyValue(GoogleTypeMoney moneyValue) {
    this.moneyValue = moneyValue;
    return this;
  }

  /**
   * Get moneyValue
   * @return moneyValue
   */
  @javax.annotation.Nullable
  public GoogleTypeMoney getMoneyValue() {
    return moneyValue;
  }

  public void setMoneyValue(GoogleTypeMoney moneyValue) {
    this.moneyValue = moneyValue;
  }


  public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue text(String text) {
    this.text = text;
    return this;
  }

  /**
   * Optional. An optional field to store a normalized string. For some entity types, one of respective &#x60;structured_value&#x60; fields may also be populated. Also not all the types of &#x60;structured_value&#x60; will be normalized. For example, some processors may not generate &#x60;float&#x60; or &#x60;integer&#x60; normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (&#x60;money_value&#x60;) is in the ISO 4217 text format. - Date type (&#x60;date_value&#x60;) is in the ISO 8601 text format. - Datetime type (&#x60;datetime_value&#x60;) is in the ISO 8601 text format.
   * @return text
   */
  @javax.annotation.Nullable
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue googleCloudDocumentaiV1beta2DocumentEntityNormalizedValue = (GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue) o;
    return Objects.equals(this.addressValue, googleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.addressValue) &&
        Objects.equals(this.booleanValue, googleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.booleanValue) &&
        Objects.equals(this.dateValue, googleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.dateValue) &&
        Objects.equals(this.datetimeValue, googleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.datetimeValue) &&
        Objects.equals(this.floatValue, googleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.floatValue) &&
        Objects.equals(this.integerValue, googleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.integerValue) &&
        Objects.equals(this.moneyValue, googleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.moneyValue) &&
        Objects.equals(this.text, googleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressValue, booleanValue, dateValue, datetimeValue, floatValue, integerValue, moneyValue, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue {\n");
    sb.append("    addressValue: ").append(toIndentedString(addressValue)).append("\n");
    sb.append("    booleanValue: ").append(toIndentedString(booleanValue)).append("\n");
    sb.append("    dateValue: ").append(toIndentedString(dateValue)).append("\n");
    sb.append("    datetimeValue: ").append(toIndentedString(datetimeValue)).append("\n");
    sb.append("    floatValue: ").append(toIndentedString(floatValue)).append("\n");
    sb.append("    integerValue: ").append(toIndentedString(integerValue)).append("\n");
    sb.append("    moneyValue: ").append(toIndentedString(moneyValue)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addressValue");
    openapiFields.add("booleanValue");
    openapiFields.add("dateValue");
    openapiFields.add("datetimeValue");
    openapiFields.add("floatValue");
    openapiFields.add("integerValue");
    openapiFields.add("moneyValue");
    openapiFields.add("text");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue is not found in the empty JSON string", GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `addressValue`
      if (jsonObj.get("addressValue") != null && !jsonObj.get("addressValue").isJsonNull()) {
        GoogleTypePostalAddress.validateJsonElement(jsonObj.get("addressValue"));
      }
      // validate the optional field `dateValue`
      if (jsonObj.get("dateValue") != null && !jsonObj.get("dateValue").isJsonNull()) {
        GoogleTypeDate.validateJsonElement(jsonObj.get("dateValue"));
      }
      // validate the optional field `datetimeValue`
      if (jsonObj.get("datetimeValue") != null && !jsonObj.get("datetimeValue").isJsonNull()) {
        GoogleTypeDateTime.validateJsonElement(jsonObj.get("datetimeValue"));
      }
      // validate the optional field `moneyValue`
      if (jsonObj.get("moneyValue") != null && !jsonObj.get("moneyValue").isJsonNull()) {
        GoogleTypeMoney.validateJsonElement(jsonObj.get("moneyValue"));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue
   */
  public static GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

