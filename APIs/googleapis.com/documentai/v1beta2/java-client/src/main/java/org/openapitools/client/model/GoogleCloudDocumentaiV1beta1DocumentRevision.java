/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains past or forward revisions of this document.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:51.583823-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta1DocumentRevision {
  public static final String SERIALIZED_NAME_AGENT = "agent";
  @SerializedName(SERIALIZED_NAME_AGENT)
  private String agent;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_HUMAN_REVIEW = "humanReview";
  @SerializedName(SERIALIZED_NAME_HUMAN_REVIEW)
  private GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview humanReview;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PARENT)
  private List<Integer> parent = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARENT_IDS = "parentIds";
  @SerializedName(SERIALIZED_NAME_PARENT_IDS)
  private List<String> parentIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROCESSOR = "processor";
  @SerializedName(SERIALIZED_NAME_PROCESSOR)
  private String processor;

  public GoogleCloudDocumentaiV1beta1DocumentRevision() {
  }

  public GoogleCloudDocumentaiV1beta1DocumentRevision agent(String agent) {
    this.agent = agent;
    return this;
  }

  /**
   * If the change was made by a person specify the name or id of that person.
   * @return agent
   */
  @javax.annotation.Nullable
  public String getAgent() {
    return agent;
  }

  public void setAgent(String agent) {
    this.agent = agent;
  }


  public GoogleCloudDocumentaiV1beta1DocumentRevision createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The time that the revision was created, internally generated by doc proto storage at the time of create.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudDocumentaiV1beta1DocumentRevision humanReview(GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview humanReview) {
    this.humanReview = humanReview;
    return this;
  }

  /**
   * Get humanReview
   * @return humanReview
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview getHumanReview() {
    return humanReview;
  }

  public void setHumanReview(GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview humanReview) {
    this.humanReview = humanReview;
  }


  public GoogleCloudDocumentaiV1beta1DocumentRevision id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Id of the revision, internally generated by doc proto storage. Unique within the context of the document.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Deprecated
  public GoogleCloudDocumentaiV1beta1DocumentRevision parent(List<Integer> parent) {
    this.parent = parent;
    return this;
  }

  public GoogleCloudDocumentaiV1beta1DocumentRevision addParentItem(Integer parentItem) {
    if (this.parent == null) {
      this.parent = new ArrayList<>();
    }
    this.parent.add(parentItem);
    return this;
  }

  /**
   * The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the &#x60;revisions&#x60; field.
   * @return parent
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<Integer> getParent() {
    return parent;
  }

  @Deprecated
  public void setParent(List<Integer> parent) {
    this.parent = parent;
  }


  public GoogleCloudDocumentaiV1beta1DocumentRevision parentIds(List<String> parentIds) {
    this.parentIds = parentIds;
    return this;
  }

  public GoogleCloudDocumentaiV1beta1DocumentRevision addParentIdsItem(String parentIdsItem) {
    if (this.parentIds == null) {
      this.parentIds = new ArrayList<>();
    }
    this.parentIds.add(parentIdsItem);
    return this;
  }

  /**
   * The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are &#x60;provenance.parent.revision&#x60; fields that index into this field.
   * @return parentIds
   */
  @javax.annotation.Nullable
  public List<String> getParentIds() {
    return parentIds;
  }

  public void setParentIds(List<String> parentIds) {
    this.parentIds = parentIds;
  }


  public GoogleCloudDocumentaiV1beta1DocumentRevision processor(String processor) {
    this.processor = processor;
    return this;
  }

  /**
   * If the annotation was made by processor identify the processor by its resource name.
   * @return processor
   */
  @javax.annotation.Nullable
  public String getProcessor() {
    return processor;
  }

  public void setProcessor(String processor) {
    this.processor = processor;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta1DocumentRevision googleCloudDocumentaiV1beta1DocumentRevision = (GoogleCloudDocumentaiV1beta1DocumentRevision) o;
    return Objects.equals(this.agent, googleCloudDocumentaiV1beta1DocumentRevision.agent) &&
        Objects.equals(this.createTime, googleCloudDocumentaiV1beta1DocumentRevision.createTime) &&
        Objects.equals(this.humanReview, googleCloudDocumentaiV1beta1DocumentRevision.humanReview) &&
        Objects.equals(this.id, googleCloudDocumentaiV1beta1DocumentRevision.id) &&
        Objects.equals(this.parent, googleCloudDocumentaiV1beta1DocumentRevision.parent) &&
        Objects.equals(this.parentIds, googleCloudDocumentaiV1beta1DocumentRevision.parentIds) &&
        Objects.equals(this.processor, googleCloudDocumentaiV1beta1DocumentRevision.processor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agent, createTime, humanReview, id, parent, parentIds, processor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta1DocumentRevision {\n");
    sb.append("    agent: ").append(toIndentedString(agent)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    humanReview: ").append(toIndentedString(humanReview)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    parentIds: ").append(toIndentedString(parentIds)).append("\n");
    sb.append("    processor: ").append(toIndentedString(processor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agent");
    openapiFields.add("createTime");
    openapiFields.add("humanReview");
    openapiFields.add("id");
    openapiFields.add("parent");
    openapiFields.add("parentIds");
    openapiFields.add("processor");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta1DocumentRevision
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta1DocumentRevision.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta1DocumentRevision is not found in the empty JSON string", GoogleCloudDocumentaiV1beta1DocumentRevision.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta1DocumentRevision.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta1DocumentRevision` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("agent") != null && !jsonObj.get("agent").isJsonNull()) && !jsonObj.get("agent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agent").toString()));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `humanReview`
      if (jsonObj.get("humanReview") != null && !jsonObj.get("humanReview").isJsonNull()) {
        GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview.validateJsonElement(jsonObj.get("humanReview"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("parent") != null && !jsonObj.get("parent").isJsonNull() && !jsonObj.get("parent").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent` to be an array in the JSON string but got `%s`", jsonObj.get("parent").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("parentIds") != null && !jsonObj.get("parentIds").isJsonNull() && !jsonObj.get("parentIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentIds` to be an array in the JSON string but got `%s`", jsonObj.get("parentIds").toString()));
      }
      if ((jsonObj.get("processor") != null && !jsonObj.get("processor").isJsonNull()) && !jsonObj.get("processor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processor").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta1DocumentRevision.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta1DocumentRevision' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta1DocumentRevision> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta1DocumentRevision.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta1DocumentRevision>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta1DocumentRevision value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta1DocumentRevision read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta1DocumentRevision given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta1DocumentRevision
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta1DocumentRevision
   */
  public static GoogleCloudDocumentaiV1beta1DocumentRevision fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta1DocumentRevision.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta1DocumentRevision to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

