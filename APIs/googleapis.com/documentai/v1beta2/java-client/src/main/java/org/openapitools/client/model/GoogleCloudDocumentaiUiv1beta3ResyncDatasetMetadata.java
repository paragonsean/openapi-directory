/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
import org.openapitools.client.model.GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus;
import org.openapitools.client.model.GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The metadata proto of &#x60;ResyncDataset&#x60; method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:51.583823-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata {
  public static final String SERIALIZED_NAME_COMMON_METADATA = "commonMetadata";
  @SerializedName(SERIALIZED_NAME_COMMON_METADATA)
  private GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata commonMetadata;

  public static final String SERIALIZED_NAME_DATASET_RESYNC_STATUSES = "datasetResyncStatuses";
  @SerializedName(SERIALIZED_NAME_DATASET_RESYNC_STATUSES)
  private List<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus> datasetResyncStatuses = new ArrayList<>();

  public static final String SERIALIZED_NAME_INDIVIDUAL_DOCUMENT_RESYNC_STATUSES = "individualDocumentResyncStatuses";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_DOCUMENT_RESYNC_STATUSES)
  private List<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus> individualDocumentResyncStatuses = new ArrayList<>();

  public GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata() {
  }

  public GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata commonMetadata(GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata commonMetadata) {
    this.commonMetadata = commonMetadata;
    return this;
  }

  /**
   * Get commonMetadata
   * @return commonMetadata
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata getCommonMetadata() {
    return commonMetadata;
  }

  public void setCommonMetadata(GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata commonMetadata) {
    this.commonMetadata = commonMetadata;
  }


  public GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata datasetResyncStatuses(List<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus> datasetResyncStatuses) {
    this.datasetResyncStatuses = datasetResyncStatuses;
    return this;
  }

  public GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata addDatasetResyncStatusesItem(GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus datasetResyncStatusesItem) {
    if (this.datasetResyncStatuses == null) {
      this.datasetResyncStatuses = new ArrayList<>();
    }
    this.datasetResyncStatuses.add(datasetResyncStatusesItem);
    return this;
  }

  /**
   * The list of dataset resync statuses. Not checked when ResyncDatasetRequest.dataset_documents is specified.
   * @return datasetResyncStatuses
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus> getDatasetResyncStatuses() {
    return datasetResyncStatuses;
  }

  public void setDatasetResyncStatuses(List<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus> datasetResyncStatuses) {
    this.datasetResyncStatuses = datasetResyncStatuses;
  }


  public GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata individualDocumentResyncStatuses(List<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus> individualDocumentResyncStatuses) {
    this.individualDocumentResyncStatuses = individualDocumentResyncStatuses;
    return this;
  }

  public GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata addIndividualDocumentResyncStatusesItem(GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus individualDocumentResyncStatusesItem) {
    if (this.individualDocumentResyncStatuses == null) {
      this.individualDocumentResyncStatuses = new ArrayList<>();
    }
    this.individualDocumentResyncStatuses.add(individualDocumentResyncStatusesItem);
    return this;
  }

  /**
   * The list of document resync statuses. The same document could have multiple &#x60;individual_document_resync_statuses&#x60; if it has multiple inconsistencies.
   * @return individualDocumentResyncStatuses
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus> getIndividualDocumentResyncStatuses() {
    return individualDocumentResyncStatuses;
  }

  public void setIndividualDocumentResyncStatuses(List<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus> individualDocumentResyncStatuses) {
    this.individualDocumentResyncStatuses = individualDocumentResyncStatuses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata googleCloudDocumentaiUiv1beta3ResyncDatasetMetadata = (GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata) o;
    return Objects.equals(this.commonMetadata, googleCloudDocumentaiUiv1beta3ResyncDatasetMetadata.commonMetadata) &&
        Objects.equals(this.datasetResyncStatuses, googleCloudDocumentaiUiv1beta3ResyncDatasetMetadata.datasetResyncStatuses) &&
        Objects.equals(this.individualDocumentResyncStatuses, googleCloudDocumentaiUiv1beta3ResyncDatasetMetadata.individualDocumentResyncStatuses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commonMetadata, datasetResyncStatuses, individualDocumentResyncStatuses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata {\n");
    sb.append("    commonMetadata: ").append(toIndentedString(commonMetadata)).append("\n");
    sb.append("    datasetResyncStatuses: ").append(toIndentedString(datasetResyncStatuses)).append("\n");
    sb.append("    individualDocumentResyncStatuses: ").append(toIndentedString(individualDocumentResyncStatuses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("commonMetadata");
    openapiFields.add("datasetResyncStatuses");
    openapiFields.add("individualDocumentResyncStatuses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata is not found in the empty JSON string", GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `commonMetadata`
      if (jsonObj.get("commonMetadata") != null && !jsonObj.get("commonMetadata").isJsonNull()) {
        GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata.validateJsonElement(jsonObj.get("commonMetadata"));
      }
      if (jsonObj.get("datasetResyncStatuses") != null && !jsonObj.get("datasetResyncStatuses").isJsonNull()) {
        JsonArray jsonArraydatasetResyncStatuses = jsonObj.getAsJsonArray("datasetResyncStatuses");
        if (jsonArraydatasetResyncStatuses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("datasetResyncStatuses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `datasetResyncStatuses` to be an array in the JSON string but got `%s`", jsonObj.get("datasetResyncStatuses").toString()));
          }

          // validate the optional field `datasetResyncStatuses` (array)
          for (int i = 0; i < jsonArraydatasetResyncStatuses.size(); i++) {
            GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus.validateJsonElement(jsonArraydatasetResyncStatuses.get(i));
          };
        }
      }
      if (jsonObj.get("individualDocumentResyncStatuses") != null && !jsonObj.get("individualDocumentResyncStatuses").isJsonNull()) {
        JsonArray jsonArrayindividualDocumentResyncStatuses = jsonObj.getAsJsonArray("individualDocumentResyncStatuses");
        if (jsonArrayindividualDocumentResyncStatuses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("individualDocumentResyncStatuses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `individualDocumentResyncStatuses` to be an array in the JSON string but got `%s`", jsonObj.get("individualDocumentResyncStatuses").toString()));
          }

          // validate the optional field `individualDocumentResyncStatuses` (array)
          for (int i = 0; i < jsonArrayindividualDocumentResyncStatuses.size(); i++) {
            GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus.validateJsonElement(jsonArrayindividualDocumentResyncStatuses.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata
   */
  public static GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

