/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudDocumentAiApi);
  }
}(this, function(expect, CloudDocumentAiApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudDocumentaiV1beta1Document', function() {
    it('should create an instance of GoogleCloudDocumentaiV1beta1Document', function() {
      // uncomment below and update the code to test GoogleCloudDocumentaiV1beta1Document
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be.a(CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document);
    });

    it('should have the property content (base name: "content")', function() {
      // uncomment below and update the code to test the property content
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property entities (base name: "entities")', function() {
      // uncomment below and update the code to test the property entities
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property entityRelations (base name: "entityRelations")', function() {
      // uncomment below and update the code to test the property entityRelations
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property error (base name: "error")', function() {
      // uncomment below and update the code to test the property error
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property mimeType (base name: "mimeType")', function() {
      // uncomment below and update the code to test the property mimeType
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property pages (base name: "pages")', function() {
      // uncomment below and update the code to test the property pages
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property revisions (base name: "revisions")', function() {
      // uncomment below and update the code to test the property revisions
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property shardInfo (base name: "shardInfo")', function() {
      // uncomment below and update the code to test the property shardInfo
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property text (base name: "text")', function() {
      // uncomment below and update the code to test the property text
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property textChanges (base name: "textChanges")', function() {
      // uncomment below and update the code to test the property textChanges
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property textStyles (base name: "textStyles")', function() {
      // uncomment below and update the code to test the property textStyles
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

    it('should have the property uri (base name: "uri")', function() {
      // uncomment below and update the code to test the property uri
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta1Document();
      //expect(instance).to.be();
    });

  });

}));
