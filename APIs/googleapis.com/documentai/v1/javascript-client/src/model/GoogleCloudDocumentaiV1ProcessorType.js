/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDocumentaiV1ProcessorTypeLocationInfo from './GoogleCloudDocumentaiV1ProcessorTypeLocationInfo';

/**
 * The GoogleCloudDocumentaiV1ProcessorType model module.
 * @module model/GoogleCloudDocumentaiV1ProcessorType
 * @version v1
 */
class GoogleCloudDocumentaiV1ProcessorType {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1ProcessorType</code>.
     * A processor type is responsible for performing a certain document understanding task on a certain type of document.
     * @alias module:model/GoogleCloudDocumentaiV1ProcessorType
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1ProcessorType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1ProcessorType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1ProcessorType} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1ProcessorType} The populated <code>GoogleCloudDocumentaiV1ProcessorType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1ProcessorType();

            if (data.hasOwnProperty('allowCreation')) {
                obj['allowCreation'] = ApiClient.convertToType(data['allowCreation'], 'Boolean');
            }
            if (data.hasOwnProperty('availableLocations')) {
                obj['availableLocations'] = ApiClient.convertToType(data['availableLocations'], [GoogleCloudDocumentaiV1ProcessorTypeLocationInfo]);
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('launchStage')) {
                obj['launchStage'] = ApiClient.convertToType(data['launchStage'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sampleDocumentUris')) {
                obj['sampleDocumentUris'] = ApiClient.convertToType(data['sampleDocumentUris'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1ProcessorType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1ProcessorType</code>.
     */
    static validateJSON(data) {
        if (data['availableLocations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['availableLocations'])) {
                throw new Error("Expected the field `availableLocations` to be an array in the JSON data but got " + data['availableLocations']);
            }
            // validate the optional field `availableLocations` (array)
            for (const item of data['availableLocations']) {
                GoogleCloudDocumentaiV1ProcessorTypeLocationInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['launchStage'] && !(typeof data['launchStage'] === 'string' || data['launchStage'] instanceof String)) {
            throw new Error("Expected the field `launchStage` to be a primitive type in the JSON string but got " + data['launchStage']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sampleDocumentUris'])) {
            throw new Error("Expected the field `sampleDocumentUris` to be an array in the JSON data but got " + data['sampleDocumentUris']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access.
 * @member {Boolean} allowCreation
 */
GoogleCloudDocumentaiV1ProcessorType.prototype['allowCreation'] = undefined;

/**
 * The locations in which this processor is available.
 * @member {Array.<module:model/GoogleCloudDocumentaiV1ProcessorTypeLocationInfo>} availableLocations
 */
GoogleCloudDocumentaiV1ProcessorType.prototype['availableLocations'] = undefined;

/**
 * The processor category, used by UI to group processor types.
 * @member {String} category
 */
GoogleCloudDocumentaiV1ProcessorType.prototype['category'] = undefined;

/**
 * Launch stage of the processor type
 * @member {module:model/GoogleCloudDocumentaiV1ProcessorType.LaunchStageEnum} launchStage
 */
GoogleCloudDocumentaiV1ProcessorType.prototype['launchStage'] = undefined;

/**
 * The resource name of the processor type. Format: `projects/{project}/processorTypes/{processor_type}`
 * @member {String} name
 */
GoogleCloudDocumentaiV1ProcessorType.prototype['name'] = undefined;

/**
 * A set of Cloud Storage URIs of sample documents for this processor.
 * @member {Array.<String>} sampleDocumentUris
 */
GoogleCloudDocumentaiV1ProcessorType.prototype['sampleDocumentUris'] = undefined;

/**
 * The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`.
 * @member {String} type
 */
GoogleCloudDocumentaiV1ProcessorType.prototype['type'] = undefined;





/**
 * Allowed values for the <code>launchStage</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDocumentaiV1ProcessorType['LaunchStageEnum'] = {

    /**
     * value: "LAUNCH_STAGE_UNSPECIFIED"
     * @const
     */
    "LAUNCH_STAGE_UNSPECIFIED": "LAUNCH_STAGE_UNSPECIFIED",

    /**
     * value: "UNIMPLEMENTED"
     * @const
     */
    "UNIMPLEMENTED": "UNIMPLEMENTED",

    /**
     * value: "PRELAUNCH"
     * @const
     */
    "PRELAUNCH": "PRELAUNCH",

    /**
     * value: "EARLY_ACCESS"
     * @const
     */
    "EARLY_ACCESS": "EARLY_ACCESS",

    /**
     * value: "ALPHA"
     * @const
     */
    "ALPHA": "ALPHA",

    /**
     * value: "BETA"
     * @const
     */
    "BETA": "BETA",

    /**
     * value: "GA"
     * @const
     */
    "GA": "GA",

    /**
     * value: "DEPRECATED"
     * @const
     */
    "DEPRECATED": "DEPRECATED"
};



export default GoogleCloudDocumentaiV1ProcessorType;

