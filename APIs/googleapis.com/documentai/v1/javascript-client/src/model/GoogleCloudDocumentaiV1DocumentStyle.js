/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDocumentaiV1DocumentStyleFontSize from './GoogleCloudDocumentaiV1DocumentStyleFontSize';
import GoogleCloudDocumentaiV1DocumentTextAnchor from './GoogleCloudDocumentaiV1DocumentTextAnchor';
import GoogleTypeColor from './GoogleTypeColor';

/**
 * The GoogleCloudDocumentaiV1DocumentStyle model module.
 * @module model/GoogleCloudDocumentaiV1DocumentStyle
 * @version v1
 */
class GoogleCloudDocumentaiV1DocumentStyle {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1DocumentStyle</code>.
     * Annotation for common text style attributes. This adheres to CSS conventions as much as possible.
     * @alias module:model/GoogleCloudDocumentaiV1DocumentStyle
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1DocumentStyle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1DocumentStyle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1DocumentStyle} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1DocumentStyle} The populated <code>GoogleCloudDocumentaiV1DocumentStyle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1DocumentStyle();

            if (data.hasOwnProperty('backgroundColor')) {
                obj['backgroundColor'] = GoogleTypeColor.constructFromObject(data['backgroundColor']);
            }
            if (data.hasOwnProperty('color')) {
                obj['color'] = GoogleTypeColor.constructFromObject(data['color']);
            }
            if (data.hasOwnProperty('fontFamily')) {
                obj['fontFamily'] = ApiClient.convertToType(data['fontFamily'], 'String');
            }
            if (data.hasOwnProperty('fontSize')) {
                obj['fontSize'] = GoogleCloudDocumentaiV1DocumentStyleFontSize.constructFromObject(data['fontSize']);
            }
            if (data.hasOwnProperty('fontWeight')) {
                obj['fontWeight'] = ApiClient.convertToType(data['fontWeight'], 'String');
            }
            if (data.hasOwnProperty('textAnchor')) {
                obj['textAnchor'] = GoogleCloudDocumentaiV1DocumentTextAnchor.constructFromObject(data['textAnchor']);
            }
            if (data.hasOwnProperty('textDecoration')) {
                obj['textDecoration'] = ApiClient.convertToType(data['textDecoration'], 'String');
            }
            if (data.hasOwnProperty('textStyle')) {
                obj['textStyle'] = ApiClient.convertToType(data['textStyle'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1DocumentStyle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1DocumentStyle</code>.
     */
    static validateJSON(data) {
        // validate the optional field `backgroundColor`
        if (data['backgroundColor']) { // data not null
          GoogleTypeColor.validateJSON(data['backgroundColor']);
        }
        // validate the optional field `color`
        if (data['color']) { // data not null
          GoogleTypeColor.validateJSON(data['color']);
        }
        // ensure the json data is a string
        if (data['fontFamily'] && !(typeof data['fontFamily'] === 'string' || data['fontFamily'] instanceof String)) {
            throw new Error("Expected the field `fontFamily` to be a primitive type in the JSON string but got " + data['fontFamily']);
        }
        // validate the optional field `fontSize`
        if (data['fontSize']) { // data not null
          GoogleCloudDocumentaiV1DocumentStyleFontSize.validateJSON(data['fontSize']);
        }
        // ensure the json data is a string
        if (data['fontWeight'] && !(typeof data['fontWeight'] === 'string' || data['fontWeight'] instanceof String)) {
            throw new Error("Expected the field `fontWeight` to be a primitive type in the JSON string but got " + data['fontWeight']);
        }
        // validate the optional field `textAnchor`
        if (data['textAnchor']) { // data not null
          GoogleCloudDocumentaiV1DocumentTextAnchor.validateJSON(data['textAnchor']);
        }
        // ensure the json data is a string
        if (data['textDecoration'] && !(typeof data['textDecoration'] === 'string' || data['textDecoration'] instanceof String)) {
            throw new Error("Expected the field `textDecoration` to be a primitive type in the JSON string but got " + data['textDecoration']);
        }
        // ensure the json data is a string
        if (data['textStyle'] && !(typeof data['textStyle'] === 'string' || data['textStyle'] instanceof String)) {
            throw new Error("Expected the field `textStyle` to be a primitive type in the JSON string but got " + data['textStyle']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleTypeColor} backgroundColor
 */
GoogleCloudDocumentaiV1DocumentStyle.prototype['backgroundColor'] = undefined;

/**
 * @member {module:model/GoogleTypeColor} color
 */
GoogleCloudDocumentaiV1DocumentStyle.prototype['color'] = undefined;

/**
 * Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp
 * @member {String} fontFamily
 */
GoogleCloudDocumentaiV1DocumentStyle.prototype['fontFamily'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1DocumentStyleFontSize} fontSize
 */
GoogleCloudDocumentaiV1DocumentStyle.prototype['fontSize'] = undefined;

/**
 * [Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`.
 * @member {String} fontWeight
 */
GoogleCloudDocumentaiV1DocumentStyle.prototype['fontWeight'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1DocumentTextAnchor} textAnchor
 */
GoogleCloudDocumentaiV1DocumentStyle.prototype['textAnchor'] = undefined;

/**
 * [Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. 
 * @member {String} textDecoration
 */
GoogleCloudDocumentaiV1DocumentStyle.prototype['textDecoration'] = undefined;

/**
 * [Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`.
 * @member {String} textStyle
 */
GoogleCloudDocumentaiV1DocumentStyle.prototype['textStyle'] = undefined;






export default GoogleCloudDocumentaiV1DocumentStyle;

