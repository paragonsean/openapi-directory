/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDocumentaiV1beta2DocumentProvenanceParent from './GoogleCloudDocumentaiV1beta2DocumentProvenanceParent';

/**
 * The GoogleCloudDocumentaiV1beta2DocumentProvenance model module.
 * @module model/GoogleCloudDocumentaiV1beta2DocumentProvenance
 * @version v1
 */
class GoogleCloudDocumentaiV1beta2DocumentProvenance {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1beta2DocumentProvenance</code>.
     * Structure to identify provenance relationships between annotations in different revisions.
     * @alias module:model/GoogleCloudDocumentaiV1beta2DocumentProvenance
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1beta2DocumentProvenance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1beta2DocumentProvenance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1beta2DocumentProvenance} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1beta2DocumentProvenance} The populated <code>GoogleCloudDocumentaiV1beta2DocumentProvenance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1beta2DocumentProvenance();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('parents')) {
                obj['parents'] = ApiClient.convertToType(data['parents'], [GoogleCloudDocumentaiV1beta2DocumentProvenanceParent]);
            }
            if (data.hasOwnProperty('revision')) {
                obj['revision'] = ApiClient.convertToType(data['revision'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1beta2DocumentProvenance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1beta2DocumentProvenance</code>.
     */
    static validateJSON(data) {
        if (data['parents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parents'])) {
                throw new Error("Expected the field `parents` to be an array in the JSON data but got " + data['parents']);
            }
            // validate the optional field `parents` (array)
            for (const item of data['parents']) {
                GoogleCloudDocumentaiV1beta2DocumentProvenanceParent.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The Id of this operation. Needs to be unique within the scope of the revision.
 * @member {Number} id
 */
GoogleCloudDocumentaiV1beta2DocumentProvenance.prototype['id'] = undefined;

/**
 * References to the original elements that are replaced.
 * @member {Array.<module:model/GoogleCloudDocumentaiV1beta2DocumentProvenanceParent>} parents
 */
GoogleCloudDocumentaiV1beta2DocumentProvenance.prototype['parents'] = undefined;

/**
 * The index of the revision that produced this element.
 * @member {Number} revision
 */
GoogleCloudDocumentaiV1beta2DocumentProvenance.prototype['revision'] = undefined;

/**
 * The type of provenance operation.
 * @member {module:model/GoogleCloudDocumentaiV1beta2DocumentProvenance.TypeEnum} type
 */
GoogleCloudDocumentaiV1beta2DocumentProvenance.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDocumentaiV1beta2DocumentProvenance['TypeEnum'] = {

    /**
     * value: "OPERATION_TYPE_UNSPECIFIED"
     * @const
     */
    "OPERATION_TYPE_UNSPECIFIED": "OPERATION_TYPE_UNSPECIFIED",

    /**
     * value: "ADD"
     * @const
     */
    "ADD": "ADD",

    /**
     * value: "REMOVE"
     * @const
     */
    "REMOVE": "REMOVE",

    /**
     * value: "UPDATE"
     * @const
     */
    "UPDATE": "UPDATE",

    /**
     * value: "REPLACE"
     * @const
     */
    "REPLACE": "REPLACE",

    /**
     * value: "EVAL_REQUESTED"
     * @const
     */
    "EVAL_REQUESTED": "EVAL_REQUESTED",

    /**
     * value: "EVAL_APPROVED"
     * @const
     */
    "EVAL_APPROVED": "EVAL_APPROVED",

    /**
     * value: "EVAL_SKIPPED"
     * @const
     */
    "EVAL_SKIPPED": "EVAL_SKIPPED"
};



export default GoogleCloudDocumentaiV1beta2DocumentProvenance;

