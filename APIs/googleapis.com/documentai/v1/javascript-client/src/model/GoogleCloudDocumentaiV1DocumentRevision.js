/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDocumentaiV1DocumentRevisionHumanReview from './GoogleCloudDocumentaiV1DocumentRevisionHumanReview';

/**
 * The GoogleCloudDocumentaiV1DocumentRevision model module.
 * @module model/GoogleCloudDocumentaiV1DocumentRevision
 * @version v1
 */
class GoogleCloudDocumentaiV1DocumentRevision {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1DocumentRevision</code>.
     * Contains past or forward revisions of this document.
     * @alias module:model/GoogleCloudDocumentaiV1DocumentRevision
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1DocumentRevision.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1DocumentRevision</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1DocumentRevision} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1DocumentRevision} The populated <code>GoogleCloudDocumentaiV1DocumentRevision</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1DocumentRevision();

            if (data.hasOwnProperty('agent')) {
                obj['agent'] = ApiClient.convertToType(data['agent'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('humanReview')) {
                obj['humanReview'] = GoogleCloudDocumentaiV1DocumentRevisionHumanReview.constructFromObject(data['humanReview']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], ['Number']);
            }
            if (data.hasOwnProperty('parentIds')) {
                obj['parentIds'] = ApiClient.convertToType(data['parentIds'], ['String']);
            }
            if (data.hasOwnProperty('processor')) {
                obj['processor'] = ApiClient.convertToType(data['processor'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1DocumentRevision</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1DocumentRevision</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['agent'] && !(typeof data['agent'] === 'string' || data['agent'] instanceof String)) {
            throw new Error("Expected the field `agent` to be a primitive type in the JSON string but got " + data['agent']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `humanReview`
        if (data['humanReview']) { // data not null
          GoogleCloudDocumentaiV1DocumentRevisionHumanReview.validateJSON(data['humanReview']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['parent'])) {
            throw new Error("Expected the field `parent` to be an array in the JSON data but got " + data['parent']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['parentIds'])) {
            throw new Error("Expected the field `parentIds` to be an array in the JSON data but got " + data['parentIds']);
        }
        // ensure the json data is a string
        if (data['processor'] && !(typeof data['processor'] === 'string' || data['processor'] instanceof String)) {
            throw new Error("Expected the field `processor` to be a primitive type in the JSON string but got " + data['processor']);
        }

        return true;
    }


}



/**
 * If the change was made by a person specify the name or id of that person.
 * @member {String} agent
 */
GoogleCloudDocumentaiV1DocumentRevision.prototype['agent'] = undefined;

/**
 * The time that the revision was created, internally generated by doc proto storage at the time of create.
 * @member {String} createTime
 */
GoogleCloudDocumentaiV1DocumentRevision.prototype['createTime'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1DocumentRevisionHumanReview} humanReview
 */
GoogleCloudDocumentaiV1DocumentRevision.prototype['humanReview'] = undefined;

/**
 * Id of the revision, internally generated by doc proto storage. Unique within the context of the document.
 * @member {String} id
 */
GoogleCloudDocumentaiV1DocumentRevision.prototype['id'] = undefined;

/**
 * The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.
 * @member {Array.<Number>} parent
 */
GoogleCloudDocumentaiV1DocumentRevision.prototype['parent'] = undefined;

/**
 * The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.
 * @member {Array.<String>} parentIds
 */
GoogleCloudDocumentaiV1DocumentRevision.prototype['parentIds'] = undefined;

/**
 * If the annotation was made by processor identify the processor by its resource name.
 * @member {String} processor
 */
GoogleCloudDocumentaiV1DocumentRevision.prototype['processor'] = undefined;






export default GoogleCloudDocumentaiV1DocumentRevision;

