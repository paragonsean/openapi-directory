/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleTypeDate from './GoogleTypeDate';
import GoogleTypeDateTime from './GoogleTypeDateTime';
import GoogleTypeMoney from './GoogleTypeMoney';
import GoogleTypePostalAddress from './GoogleTypePostalAddress';

/**
 * The GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue model module.
 * @module model/GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue
 * @version v1
 */
class GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue</code>.
     * Parsed and normalized entity value.
     * @alias module:model/GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue} The populated <code>GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue();

            if (data.hasOwnProperty('addressValue')) {
                obj['addressValue'] = GoogleTypePostalAddress.constructFromObject(data['addressValue']);
            }
            if (data.hasOwnProperty('booleanValue')) {
                obj['booleanValue'] = ApiClient.convertToType(data['booleanValue'], 'Boolean');
            }
            if (data.hasOwnProperty('dateValue')) {
                obj['dateValue'] = GoogleTypeDate.constructFromObject(data['dateValue']);
            }
            if (data.hasOwnProperty('datetimeValue')) {
                obj['datetimeValue'] = GoogleTypeDateTime.constructFromObject(data['datetimeValue']);
            }
            if (data.hasOwnProperty('floatValue')) {
                obj['floatValue'] = ApiClient.convertToType(data['floatValue'], 'Number');
            }
            if (data.hasOwnProperty('integerValue')) {
                obj['integerValue'] = ApiClient.convertToType(data['integerValue'], 'Number');
            }
            if (data.hasOwnProperty('moneyValue')) {
                obj['moneyValue'] = GoogleTypeMoney.constructFromObject(data['moneyValue']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue</code>.
     */
    static validateJSON(data) {
        // validate the optional field `addressValue`
        if (data['addressValue']) { // data not null
          GoogleTypePostalAddress.validateJSON(data['addressValue']);
        }
        // validate the optional field `dateValue`
        if (data['dateValue']) { // data not null
          GoogleTypeDate.validateJSON(data['dateValue']);
        }
        // validate the optional field `datetimeValue`
        if (data['datetimeValue']) { // data not null
          GoogleTypeDateTime.validateJSON(data['datetimeValue']);
        }
        // validate the optional field `moneyValue`
        if (data['moneyValue']) { // data not null
          GoogleTypeMoney.validateJSON(data['moneyValue']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleTypePostalAddress} addressValue
 */
GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue.prototype['addressValue'] = undefined;

/**
 * Boolean value. Can be used for entities with binary values, or for checkboxes.
 * @member {Boolean} booleanValue
 */
GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue.prototype['booleanValue'] = undefined;

/**
 * @member {module:model/GoogleTypeDate} dateValue
 */
GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue.prototype['dateValue'] = undefined;

/**
 * @member {module:model/GoogleTypeDateTime} datetimeValue
 */
GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue.prototype['datetimeValue'] = undefined;

/**
 * Float value.
 * @member {Number} floatValue
 */
GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue.prototype['floatValue'] = undefined;

/**
 * Integer value.
 * @member {Number} integerValue
 */
GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue.prototype['integerValue'] = undefined;

/**
 * @member {module:model/GoogleTypeMoney} moneyValue
 */
GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue.prototype['moneyValue'] = undefined;

/**
 * Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.
 * @member {String} text
 */
GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue.prototype['text'] = undefined;






export default GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue;

