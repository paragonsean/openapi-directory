/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleTypeMoney.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleTypeMoney::OAIGoogleTypeMoney(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleTypeMoney::OAIGoogleTypeMoney() {
    this->initializeModel();
}

OAIGoogleTypeMoney::~OAIGoogleTypeMoney() {}

void OAIGoogleTypeMoney::initializeModel() {

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_nanos_isSet = false;
    m_nanos_isValid = false;

    m_units_isSet = false;
    m_units_isValid = false;
}

void OAIGoogleTypeMoney::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleTypeMoney::fromJsonObject(QJsonObject json) {

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_nanos_isValid = ::OpenAPI::fromJsonValue(m_nanos, json[QString("nanos")]);
    m_nanos_isSet = !json[QString("nanos")].isNull() && m_nanos_isValid;

    m_units_isValid = ::OpenAPI::fromJsonValue(m_units, json[QString("units")]);
    m_units_isSet = !json[QString("units")].isNull() && m_units_isValid;
}

QString OAIGoogleTypeMoney::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleTypeMoney::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_nanos_isSet) {
        obj.insert(QString("nanos"), ::OpenAPI::toJsonValue(m_nanos));
    }
    if (m_units_isSet) {
        obj.insert(QString("units"), ::OpenAPI::toJsonValue(m_units));
    }
    return obj;
}

QString OAIGoogleTypeMoney::getCurrencyCode() const {
    return m_currency_code;
}
void OAIGoogleTypeMoney::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIGoogleTypeMoney::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIGoogleTypeMoney::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

qint32 OAIGoogleTypeMoney::getNanos() const {
    return m_nanos;
}
void OAIGoogleTypeMoney::setNanos(const qint32 &nanos) {
    m_nanos = nanos;
    m_nanos_isSet = true;
}

bool OAIGoogleTypeMoney::is_nanos_Set() const{
    return m_nanos_isSet;
}

bool OAIGoogleTypeMoney::is_nanos_Valid() const{
    return m_nanos_isValid;
}

QString OAIGoogleTypeMoney::getUnits() const {
    return m_units;
}
void OAIGoogleTypeMoney::setUnits(const QString &units) {
    m_units = units;
    m_units_isSet = true;
}

bool OAIGoogleTypeMoney::is_units_Set() const{
    return m_units_isSet;
}

bool OAIGoogleTypeMoney::is_units_Valid() const{
    return m_units_isValid;
}

bool OAIGoogleTypeMoney::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nanos_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_units_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleTypeMoney::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
