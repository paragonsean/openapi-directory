/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDocumentaiV1Evaluation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDocumentaiV1Evaluation::OAIGoogleCloudDocumentaiV1Evaluation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDocumentaiV1Evaluation::OAIGoogleCloudDocumentaiV1Evaluation() {
    this->initializeModel();
}

OAIGoogleCloudDocumentaiV1Evaluation::~OAIGoogleCloudDocumentaiV1Evaluation() {}

void OAIGoogleCloudDocumentaiV1Evaluation::initializeModel() {

    m_all_entities_metrics_isSet = false;
    m_all_entities_metrics_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_document_counters_isSet = false;
    m_document_counters_isValid = false;

    m_entity_metrics_isSet = false;
    m_entity_metrics_isValid = false;

    m_kms_key_name_isSet = false;
    m_kms_key_name_isValid = false;

    m_kms_key_version_name_isSet = false;
    m_kms_key_version_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudDocumentaiV1Evaluation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDocumentaiV1Evaluation::fromJsonObject(QJsonObject json) {

    m_all_entities_metrics_isValid = ::OpenAPI::fromJsonValue(m_all_entities_metrics, json[QString("allEntitiesMetrics")]);
    m_all_entities_metrics_isSet = !json[QString("allEntitiesMetrics")].isNull() && m_all_entities_metrics_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_document_counters_isValid = ::OpenAPI::fromJsonValue(m_document_counters, json[QString("documentCounters")]);
    m_document_counters_isSet = !json[QString("documentCounters")].isNull() && m_document_counters_isValid;

    m_entity_metrics_isValid = ::OpenAPI::fromJsonValue(m_entity_metrics, json[QString("entityMetrics")]);
    m_entity_metrics_isSet = !json[QString("entityMetrics")].isNull() && m_entity_metrics_isValid;

    m_kms_key_name_isValid = ::OpenAPI::fromJsonValue(m_kms_key_name, json[QString("kmsKeyName")]);
    m_kms_key_name_isSet = !json[QString("kmsKeyName")].isNull() && m_kms_key_name_isValid;

    m_kms_key_version_name_isValid = ::OpenAPI::fromJsonValue(m_kms_key_version_name, json[QString("kmsKeyVersionName")]);
    m_kms_key_version_name_isSet = !json[QString("kmsKeyVersionName")].isNull() && m_kms_key_version_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudDocumentaiV1Evaluation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDocumentaiV1Evaluation::asJsonObject() const {
    QJsonObject obj;
    if (m_all_entities_metrics.isSet()) {
        obj.insert(QString("allEntitiesMetrics"), ::OpenAPI::toJsonValue(m_all_entities_metrics));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_document_counters.isSet()) {
        obj.insert(QString("documentCounters"), ::OpenAPI::toJsonValue(m_document_counters));
    }
    if (m_entity_metrics.size() > 0) {
        obj.insert(QString("entityMetrics"), ::OpenAPI::toJsonValue(m_entity_metrics));
    }
    if (m_kms_key_name_isSet) {
        obj.insert(QString("kmsKeyName"), ::OpenAPI::toJsonValue(m_kms_key_name));
    }
    if (m_kms_key_version_name_isSet) {
        obj.insert(QString("kmsKeyVersionName"), ::OpenAPI::toJsonValue(m_kms_key_version_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIGoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics OAIGoogleCloudDocumentaiV1Evaluation::getAllEntitiesMetrics() const {
    return m_all_entities_metrics;
}
void OAIGoogleCloudDocumentaiV1Evaluation::setAllEntitiesMetrics(const OAIGoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics &all_entities_metrics) {
    m_all_entities_metrics = all_entities_metrics;
    m_all_entities_metrics_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_all_entities_metrics_Set() const{
    return m_all_entities_metrics_isSet;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_all_entities_metrics_Valid() const{
    return m_all_entities_metrics_isValid;
}

QString OAIGoogleCloudDocumentaiV1Evaluation::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDocumentaiV1Evaluation::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudDocumentaiV1EvaluationCounters OAIGoogleCloudDocumentaiV1Evaluation::getDocumentCounters() const {
    return m_document_counters;
}
void OAIGoogleCloudDocumentaiV1Evaluation::setDocumentCounters(const OAIGoogleCloudDocumentaiV1EvaluationCounters &document_counters) {
    m_document_counters = document_counters;
    m_document_counters_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_document_counters_Set() const{
    return m_document_counters_isSet;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_document_counters_Valid() const{
    return m_document_counters_isValid;
}

QMap<QString, OAIGoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics> OAIGoogleCloudDocumentaiV1Evaluation::getEntityMetrics() const {
    return m_entity_metrics;
}
void OAIGoogleCloudDocumentaiV1Evaluation::setEntityMetrics(const QMap<QString, OAIGoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics> &entity_metrics) {
    m_entity_metrics = entity_metrics;
    m_entity_metrics_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_entity_metrics_Set() const{
    return m_entity_metrics_isSet;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_entity_metrics_Valid() const{
    return m_entity_metrics_isValid;
}

QString OAIGoogleCloudDocumentaiV1Evaluation::getKmsKeyName() const {
    return m_kms_key_name;
}
void OAIGoogleCloudDocumentaiV1Evaluation::setKmsKeyName(const QString &kms_key_name) {
    m_kms_key_name = kms_key_name;
    m_kms_key_name_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_kms_key_name_Set() const{
    return m_kms_key_name_isSet;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_kms_key_name_Valid() const{
    return m_kms_key_name_isValid;
}

QString OAIGoogleCloudDocumentaiV1Evaluation::getKmsKeyVersionName() const {
    return m_kms_key_version_name;
}
void OAIGoogleCloudDocumentaiV1Evaluation::setKmsKeyVersionName(const QString &kms_key_version_name) {
    m_kms_key_version_name = kms_key_version_name;
    m_kms_key_version_name_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_kms_key_version_name_Set() const{
    return m_kms_key_version_name_isSet;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_kms_key_version_name_Valid() const{
    return m_kms_key_version_name_isValid;
}

QString OAIGoogleCloudDocumentaiV1Evaluation::getName() const {
    return m_name;
}
void OAIGoogleCloudDocumentaiV1Evaluation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_all_entities_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_counters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_version_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDocumentaiV1Evaluation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
