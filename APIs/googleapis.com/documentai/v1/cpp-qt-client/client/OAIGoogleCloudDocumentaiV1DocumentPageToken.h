/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1DocumentPageToken.h
 *
 * A detected token.
 */

#ifndef OAIGoogleCloudDocumentaiV1DocumentPageToken_H
#define OAIGoogleCloudDocumentaiV1DocumentPageToken_H

#include <QJsonObject>

#include "OAIGoogleCloudDocumentaiV1DocumentPageDetectedLanguage.h"
#include "OAIGoogleCloudDocumentaiV1DocumentPageLayout.h"
#include "OAIGoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak.h"
#include "OAIGoogleCloudDocumentaiV1DocumentPageTokenStyleInfo.h"
#include "OAIGoogleCloudDocumentaiV1DocumentProvenance.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak;
class OAIGoogleCloudDocumentaiV1DocumentPageDetectedLanguage;
class OAIGoogleCloudDocumentaiV1DocumentPageLayout;
class OAIGoogleCloudDocumentaiV1DocumentProvenance;
class OAIGoogleCloudDocumentaiV1DocumentPageTokenStyleInfo;

class OAIGoogleCloudDocumentaiV1DocumentPageToken : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1DocumentPageToken();
    OAIGoogleCloudDocumentaiV1DocumentPageToken(QString json);
    ~OAIGoogleCloudDocumentaiV1DocumentPageToken() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak getDetectedBreak() const;
    void setDetectedBreak(const OAIGoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak &detected_break);
    bool is_detected_break_Set() const;
    bool is_detected_break_Valid() const;

    QList<OAIGoogleCloudDocumentaiV1DocumentPageDetectedLanguage> getDetectedLanguages() const;
    void setDetectedLanguages(const QList<OAIGoogleCloudDocumentaiV1DocumentPageDetectedLanguage> &detected_languages);
    bool is_detected_languages_Set() const;
    bool is_detected_languages_Valid() const;

    OAIGoogleCloudDocumentaiV1DocumentPageLayout getLayout() const;
    void setLayout(const OAIGoogleCloudDocumentaiV1DocumentPageLayout &layout);
    bool is_layout_Set() const;
    bool is_layout_Valid() const;

    OAIGoogleCloudDocumentaiV1DocumentProvenance getProvenance() const;
    void setProvenance(const OAIGoogleCloudDocumentaiV1DocumentProvenance &provenance);
    bool is_provenance_Set() const;
    bool is_provenance_Valid() const;

    OAIGoogleCloudDocumentaiV1DocumentPageTokenStyleInfo getStyleInfo() const;
    void setStyleInfo(const OAIGoogleCloudDocumentaiV1DocumentPageTokenStyleInfo &style_info);
    bool is_style_info_Set() const;
    bool is_style_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak m_detected_break;
    bool m_detected_break_isSet;
    bool m_detected_break_isValid;

    QList<OAIGoogleCloudDocumentaiV1DocumentPageDetectedLanguage> m_detected_languages;
    bool m_detected_languages_isSet;
    bool m_detected_languages_isValid;

    OAIGoogleCloudDocumentaiV1DocumentPageLayout m_layout;
    bool m_layout_isSet;
    bool m_layout_isValid;

    OAIGoogleCloudDocumentaiV1DocumentProvenance m_provenance;
    bool m_provenance_isSet;
    bool m_provenance_isValid;

    OAIGoogleCloudDocumentaiV1DocumentPageTokenStyleInfo m_style_info;
    bool m_style_info_isSet;
    bool m_style_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1DocumentPageToken)

#endif // OAIGoogleCloudDocumentaiV1DocumentPageToken_H
