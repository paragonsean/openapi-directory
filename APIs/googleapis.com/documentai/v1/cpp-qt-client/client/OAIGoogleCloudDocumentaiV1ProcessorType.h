/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1ProcessorType.h
 *
 * A processor type is responsible for performing a certain document understanding task on a certain type of document.
 */

#ifndef OAIGoogleCloudDocumentaiV1ProcessorType_H
#define OAIGoogleCloudDocumentaiV1ProcessorType_H

#include <QJsonObject>

#include "OAIGoogleCloudDocumentaiV1ProcessorTypeLocationInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDocumentaiV1ProcessorTypeLocationInfo;

class OAIGoogleCloudDocumentaiV1ProcessorType : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1ProcessorType();
    OAIGoogleCloudDocumentaiV1ProcessorType(QString json);
    ~OAIGoogleCloudDocumentaiV1ProcessorType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowCreation() const;
    void setAllowCreation(const bool &allow_creation);
    bool is_allow_creation_Set() const;
    bool is_allow_creation_Valid() const;

    QList<OAIGoogleCloudDocumentaiV1ProcessorTypeLocationInfo> getAvailableLocations() const;
    void setAvailableLocations(const QList<OAIGoogleCloudDocumentaiV1ProcessorTypeLocationInfo> &available_locations);
    bool is_available_locations_Set() const;
    bool is_available_locations_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getLaunchStage() const;
    void setLaunchStage(const QString &launch_stage);
    bool is_launch_stage_Set() const;
    bool is_launch_stage_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getSampleDocumentUris() const;
    void setSampleDocumentUris(const QList<QString> &sample_document_uris);
    bool is_sample_document_uris_Set() const;
    bool is_sample_document_uris_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_creation;
    bool m_allow_creation_isSet;
    bool m_allow_creation_isValid;

    QList<OAIGoogleCloudDocumentaiV1ProcessorTypeLocationInfo> m_available_locations;
    bool m_available_locations_isSet;
    bool m_available_locations_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_launch_stage;
    bool m_launch_stage_isSet;
    bool m_launch_stage_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_sample_document_uris;
    bool m_sample_document_uris_isSet;
    bool m_sample_document_uris_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1ProcessorType)

#endif // OAIGoogleCloudDocumentaiV1ProcessorType_H
