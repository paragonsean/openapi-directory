/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse() {
    this->initializeModel();
}

OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::~OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse() {}

void OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::initializeModel() {

    m_processor_version_isSet = false;
    m_processor_version_isValid = false;
}

void OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::fromJsonObject(QJsonObject json) {

    m_processor_version_isValid = ::OpenAPI::fromJsonValue(m_processor_version, json[QString("processorVersion")]);
    m_processor_version_isSet = !json[QString("processorVersion")].isNull() && m_processor_version_isValid;
}

QString OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_processor_version_isSet) {
        obj.insert(QString("processorVersion"), ::OpenAPI::toJsonValue(m_processor_version));
    }
    return obj;
}

QString OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::getProcessorVersion() const {
    return m_processor_version;
}
void OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::setProcessorVersion(const QString &processor_version) {
    m_processor_version = processor_version;
    m_processor_version_isSet = true;
}

bool OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::is_processor_version_Set() const{
    return m_processor_version_isSet;
}

bool OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::is_processor_version_Valid() const{
    return m_processor_version_isValid;
}

bool OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_processor_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
