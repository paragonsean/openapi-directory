/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue() {
    this->initializeModel();
}

OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::~OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue() {}

void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::initializeModel() {

    m_address_value_isSet = false;
    m_address_value_isValid = false;

    m_boolean_value_isSet = false;
    m_boolean_value_isValid = false;

    m_date_value_isSet = false;
    m_date_value_isValid = false;

    m_datetime_value_isSet = false;
    m_datetime_value_isValid = false;

    m_float_value_isSet = false;
    m_float_value_isValid = false;

    m_integer_value_isSet = false;
    m_integer_value_isValid = false;

    m_money_value_isSet = false;
    m_money_value_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::fromJsonObject(QJsonObject json) {

    m_address_value_isValid = ::OpenAPI::fromJsonValue(m_address_value, json[QString("addressValue")]);
    m_address_value_isSet = !json[QString("addressValue")].isNull() && m_address_value_isValid;

    m_boolean_value_isValid = ::OpenAPI::fromJsonValue(m_boolean_value, json[QString("booleanValue")]);
    m_boolean_value_isSet = !json[QString("booleanValue")].isNull() && m_boolean_value_isValid;

    m_date_value_isValid = ::OpenAPI::fromJsonValue(m_date_value, json[QString("dateValue")]);
    m_date_value_isSet = !json[QString("dateValue")].isNull() && m_date_value_isValid;

    m_datetime_value_isValid = ::OpenAPI::fromJsonValue(m_datetime_value, json[QString("datetimeValue")]);
    m_datetime_value_isSet = !json[QString("datetimeValue")].isNull() && m_datetime_value_isValid;

    m_float_value_isValid = ::OpenAPI::fromJsonValue(m_float_value, json[QString("floatValue")]);
    m_float_value_isSet = !json[QString("floatValue")].isNull() && m_float_value_isValid;

    m_integer_value_isValid = ::OpenAPI::fromJsonValue(m_integer_value, json[QString("integerValue")]);
    m_integer_value_isSet = !json[QString("integerValue")].isNull() && m_integer_value_isValid;

    m_money_value_isValid = ::OpenAPI::fromJsonValue(m_money_value, json[QString("moneyValue")]);
    m_money_value_isSet = !json[QString("moneyValue")].isNull() && m_money_value_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::asJsonObject() const {
    QJsonObject obj;
    if (m_address_value.isSet()) {
        obj.insert(QString("addressValue"), ::OpenAPI::toJsonValue(m_address_value));
    }
    if (m_boolean_value_isSet) {
        obj.insert(QString("booleanValue"), ::OpenAPI::toJsonValue(m_boolean_value));
    }
    if (m_date_value.isSet()) {
        obj.insert(QString("dateValue"), ::OpenAPI::toJsonValue(m_date_value));
    }
    if (m_datetime_value.isSet()) {
        obj.insert(QString("datetimeValue"), ::OpenAPI::toJsonValue(m_datetime_value));
    }
    if (m_float_value_isSet) {
        obj.insert(QString("floatValue"), ::OpenAPI::toJsonValue(m_float_value));
    }
    if (m_integer_value_isSet) {
        obj.insert(QString("integerValue"), ::OpenAPI::toJsonValue(m_integer_value));
    }
    if (m_money_value.isSet()) {
        obj.insert(QString("moneyValue"), ::OpenAPI::toJsonValue(m_money_value));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

OAIGoogleTypePostalAddress OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::getAddressValue() const {
    return m_address_value;
}
void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::setAddressValue(const OAIGoogleTypePostalAddress &address_value) {
    m_address_value = address_value;
    m_address_value_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_address_value_Set() const{
    return m_address_value_isSet;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_address_value_Valid() const{
    return m_address_value_isValid;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::isBooleanValue() const {
    return m_boolean_value;
}
void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::setBooleanValue(const bool &boolean_value) {
    m_boolean_value = boolean_value;
    m_boolean_value_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_boolean_value_Set() const{
    return m_boolean_value_isSet;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_boolean_value_Valid() const{
    return m_boolean_value_isValid;
}

OAIGoogleTypeDate OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::getDateValue() const {
    return m_date_value;
}
void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::setDateValue(const OAIGoogleTypeDate &date_value) {
    m_date_value = date_value;
    m_date_value_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_date_value_Set() const{
    return m_date_value_isSet;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_date_value_Valid() const{
    return m_date_value_isValid;
}

OAIGoogleTypeDateTime OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::getDatetimeValue() const {
    return m_datetime_value;
}
void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::setDatetimeValue(const OAIGoogleTypeDateTime &datetime_value) {
    m_datetime_value = datetime_value;
    m_datetime_value_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_datetime_value_Set() const{
    return m_datetime_value_isSet;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_datetime_value_Valid() const{
    return m_datetime_value_isValid;
}

float OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::getFloatValue() const {
    return m_float_value;
}
void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::setFloatValue(const float &float_value) {
    m_float_value = float_value;
    m_float_value_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_float_value_Set() const{
    return m_float_value_isSet;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_float_value_Valid() const{
    return m_float_value_isValid;
}

qint32 OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::getIntegerValue() const {
    return m_integer_value;
}
void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::setIntegerValue(const qint32 &integer_value) {
    m_integer_value = integer_value;
    m_integer_value_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_integer_value_Set() const{
    return m_integer_value_isSet;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_integer_value_Valid() const{
    return m_integer_value_isValid;
}

OAIGoogleTypeMoney OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::getMoneyValue() const {
    return m_money_value;
}
void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::setMoneyValue(const OAIGoogleTypeMoney &money_value) {
    m_money_value = money_value;
    m_money_value_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_money_value_Set() const{
    return m_money_value_isSet;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_money_value_Valid() const{
    return m_money_value_isValid;
}

QString OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::getText() const {
    return m_text;
}
void OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_text_Set() const{
    return m_text_isSet;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_boolean_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_datetime_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_float_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_integer_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_money_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDocumentaiV1DocumentEntityNormalizedValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
