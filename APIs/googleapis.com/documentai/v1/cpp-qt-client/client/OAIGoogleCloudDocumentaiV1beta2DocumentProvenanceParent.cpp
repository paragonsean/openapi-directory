/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent() {
    this->initializeModel();
}

OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::~OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent() {}

void OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_index_isSet = false;
    m_index_isValid = false;

    m_revision_isSet = false;
    m_revision_isValid = false;
}

void OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_revision_isValid = ::OpenAPI::fromJsonValue(m_revision, json[QString("revision")]);
    m_revision_isSet = !json[QString("revision")].isNull() && m_revision_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_revision_isSet) {
        obj.insert(QString("revision"), ::OpenAPI::toJsonValue(m_revision));
    }
    return obj;
}

qint32 OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::getId() const {
    return m_id;
}
void OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::getIndex() const {
    return m_index;
}
void OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::setIndex(const qint32 &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::is_index_Set() const{
    return m_index_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::is_index_Valid() const{
    return m_index_isValid;
}

qint32 OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::getRevision() const {
    return m_revision;
}
void OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::setRevision(const qint32 &revision) {
    m_revision = revision;
    m_revision_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::is_revision_Set() const{
    return m_revision_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::is_revision_Valid() const{
    return m_revision_isValid;
}

bool OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDocumentaiV1beta2DocumentProvenanceParent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
