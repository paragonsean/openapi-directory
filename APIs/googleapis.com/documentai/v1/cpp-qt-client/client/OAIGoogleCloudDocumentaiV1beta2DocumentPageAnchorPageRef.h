/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef.h
 *
 * Represents a weak reference to a page element within a document.
 */

#ifndef OAIGoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef_H
#define OAIGoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef_H

#include <QJsonObject>

#include "OAIGoogleCloudDocumentaiV1beta2BoundingPoly.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDocumentaiV1beta2BoundingPoly;

class OAIGoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef();
    OAIGoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef(QString json);
    ~OAIGoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudDocumentaiV1beta2BoundingPoly getBoundingPoly() const;
    void setBoundingPoly(const OAIGoogleCloudDocumentaiV1beta2BoundingPoly &bounding_poly);
    bool is_bounding_poly_Set() const;
    bool is_bounding_poly_Valid() const;

    float getConfidence() const;
    void setConfidence(const float &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    Q_DECL_DEPRECATED QString getLayoutId() const;
    Q_DECL_DEPRECATED void setLayoutId(const QString &layout_id);
    Q_DECL_DEPRECATED bool is_layout_id_Set() const;
    Q_DECL_DEPRECATED bool is_layout_id_Valid() const;

    QString getLayoutType() const;
    void setLayoutType(const QString &layout_type);
    bool is_layout_type_Set() const;
    bool is_layout_type_Valid() const;

    QString getPage() const;
    void setPage(const QString &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudDocumentaiV1beta2BoundingPoly m_bounding_poly;
    bool m_bounding_poly_isSet;
    bool m_bounding_poly_isValid;

    float m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    QString m_layout_id;
    bool m_layout_id_isSet;
    bool m_layout_id_isValid;

    QString m_layout_type;
    bool m_layout_type_isSet;
    bool m_layout_type_isValid;

    QString m_page;
    bool m_page_isSet;
    bool m_page_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef)

#endif // OAIGoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef_H
