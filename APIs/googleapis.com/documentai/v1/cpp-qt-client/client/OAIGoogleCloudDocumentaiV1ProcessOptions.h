/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1ProcessOptions.h
 *
 * Options for Process API
 */

#ifndef OAIGoogleCloudDocumentaiV1ProcessOptions_H
#define OAIGoogleCloudDocumentaiV1ProcessOptions_H

#include <QJsonObject>

#include "OAIGoogleCloudDocumentaiV1DocumentSchema.h"
#include "OAIGoogleCloudDocumentaiV1OcrConfig.h"
#include "OAIGoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector;
class OAIGoogleCloudDocumentaiV1OcrConfig;
class OAIGoogleCloudDocumentaiV1DocumentSchema;

class OAIGoogleCloudDocumentaiV1ProcessOptions : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1ProcessOptions();
    OAIGoogleCloudDocumentaiV1ProcessOptions(QString json);
    ~OAIGoogleCloudDocumentaiV1ProcessOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFromEnd() const;
    void setFromEnd(const qint32 &from_end);
    bool is_from_end_Set() const;
    bool is_from_end_Valid() const;

    qint32 getFromStart() const;
    void setFromStart(const qint32 &from_start);
    bool is_from_start_Set() const;
    bool is_from_start_Valid() const;

    OAIGoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector getIndividualPageSelector() const;
    void setIndividualPageSelector(const OAIGoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector &individual_page_selector);
    bool is_individual_page_selector_Set() const;
    bool is_individual_page_selector_Valid() const;

    OAIGoogleCloudDocumentaiV1OcrConfig getOcrConfig() const;
    void setOcrConfig(const OAIGoogleCloudDocumentaiV1OcrConfig &ocr_config);
    bool is_ocr_config_Set() const;
    bool is_ocr_config_Valid() const;

    OAIGoogleCloudDocumentaiV1DocumentSchema getSchemaOverride() const;
    void setSchemaOverride(const OAIGoogleCloudDocumentaiV1DocumentSchema &schema_override);
    bool is_schema_override_Set() const;
    bool is_schema_override_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_from_end;
    bool m_from_end_isSet;
    bool m_from_end_isValid;

    qint32 m_from_start;
    bool m_from_start_isSet;
    bool m_from_start_isValid;

    OAIGoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector m_individual_page_selector;
    bool m_individual_page_selector_isSet;
    bool m_individual_page_selector_isValid;

    OAIGoogleCloudDocumentaiV1OcrConfig m_ocr_config;
    bool m_ocr_config_isSet;
    bool m_ocr_config_isValid;

    OAIGoogleCloudDocumentaiV1DocumentSchema m_schema_override;
    bool m_schema_override_isSet;
    bool m_schema_override_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1ProcessOptions)

#endif // OAIGoogleCloudDocumentaiV1ProcessOptions_H
