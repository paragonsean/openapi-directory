/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1beta2DocumentStyle.h
 *
 * Annotation for common text style attributes. This adheres to CSS conventions as much as possible.
 */

#ifndef OAIGoogleCloudDocumentaiV1beta2DocumentStyle_H
#define OAIGoogleCloudDocumentaiV1beta2DocumentStyle_H

#include <QJsonObject>

#include "OAIGoogleCloudDocumentaiV1beta2DocumentStyleFontSize.h"
#include "OAIGoogleCloudDocumentaiV1beta2DocumentTextAnchor.h"
#include "OAIGoogleTypeColor.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleTypeColor;
class OAIGoogleCloudDocumentaiV1beta2DocumentStyleFontSize;
class OAIGoogleCloudDocumentaiV1beta2DocumentTextAnchor;

class OAIGoogleCloudDocumentaiV1beta2DocumentStyle : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1beta2DocumentStyle();
    OAIGoogleCloudDocumentaiV1beta2DocumentStyle(QString json);
    ~OAIGoogleCloudDocumentaiV1beta2DocumentStyle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleTypeColor getBackgroundColor() const;
    void setBackgroundColor(const OAIGoogleTypeColor &background_color);
    bool is_background_color_Set() const;
    bool is_background_color_Valid() const;

    OAIGoogleTypeColor getColor() const;
    void setColor(const OAIGoogleTypeColor &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QString getFontFamily() const;
    void setFontFamily(const QString &font_family);
    bool is_font_family_Set() const;
    bool is_font_family_Valid() const;

    OAIGoogleCloudDocumentaiV1beta2DocumentStyleFontSize getFontSize() const;
    void setFontSize(const OAIGoogleCloudDocumentaiV1beta2DocumentStyleFontSize &font_size);
    bool is_font_size_Set() const;
    bool is_font_size_Valid() const;

    QString getFontWeight() const;
    void setFontWeight(const QString &font_weight);
    bool is_font_weight_Set() const;
    bool is_font_weight_Valid() const;

    OAIGoogleCloudDocumentaiV1beta2DocumentTextAnchor getTextAnchor() const;
    void setTextAnchor(const OAIGoogleCloudDocumentaiV1beta2DocumentTextAnchor &text_anchor);
    bool is_text_anchor_Set() const;
    bool is_text_anchor_Valid() const;

    QString getTextDecoration() const;
    void setTextDecoration(const QString &text_decoration);
    bool is_text_decoration_Set() const;
    bool is_text_decoration_Valid() const;

    QString getTextStyle() const;
    void setTextStyle(const QString &text_style);
    bool is_text_style_Set() const;
    bool is_text_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleTypeColor m_background_color;
    bool m_background_color_isSet;
    bool m_background_color_isValid;

    OAIGoogleTypeColor m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QString m_font_family;
    bool m_font_family_isSet;
    bool m_font_family_isValid;

    OAIGoogleCloudDocumentaiV1beta2DocumentStyleFontSize m_font_size;
    bool m_font_size_isSet;
    bool m_font_size_isValid;

    QString m_font_weight;
    bool m_font_weight_isSet;
    bool m_font_weight_isValid;

    OAIGoogleCloudDocumentaiV1beta2DocumentTextAnchor m_text_anchor;
    bool m_text_anchor_isSet;
    bool m_text_anchor_isValid;

    QString m_text_decoration;
    bool m_text_decoration_isSet;
    bool m_text_decoration_isValid;

    QString m_text_style;
    bool m_text_style_isSet;
    bool m_text_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1beta2DocumentStyle)

#endif // OAIGoogleCloudDocumentaiV1beta2DocumentStyle_H
