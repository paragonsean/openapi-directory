/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1beta2DocumentShardInfo.h
 *
 * For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.
 */

#ifndef OAIGoogleCloudDocumentaiV1beta2DocumentShardInfo_H
#define OAIGoogleCloudDocumentaiV1beta2DocumentShardInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDocumentaiV1beta2DocumentShardInfo : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1beta2DocumentShardInfo();
    OAIGoogleCloudDocumentaiV1beta2DocumentShardInfo(QString json);
    ~OAIGoogleCloudDocumentaiV1beta2DocumentShardInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getShardCount() const;
    void setShardCount(const QString &shard_count);
    bool is_shard_count_Set() const;
    bool is_shard_count_Valid() const;

    QString getShardIndex() const;
    void setShardIndex(const QString &shard_index);
    bool is_shard_index_Set() const;
    bool is_shard_index_Valid() const;

    QString getTextOffset() const;
    void setTextOffset(const QString &text_offset);
    bool is_text_offset_Set() const;
    bool is_text_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_shard_count;
    bool m_shard_count_isSet;
    bool m_shard_count_isValid;

    QString m_shard_index;
    bool m_shard_index_isSet;
    bool m_shard_index_isValid;

    QString m_text_offset;
    bool m_text_offset_isSet;
    bool m_text_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1beta2DocumentShardInfo)

#endif // OAIGoogleCloudDocumentaiV1beta2DocumentShardInfo_H
