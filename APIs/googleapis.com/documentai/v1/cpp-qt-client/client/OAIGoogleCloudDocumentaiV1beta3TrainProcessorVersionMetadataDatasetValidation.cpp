/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation() {
    this->initializeModel();
}

OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::~OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation() {}

void OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::initializeModel() {

    m_dataset_error_count_isSet = false;
    m_dataset_error_count_isValid = false;

    m_dataset_errors_isSet = false;
    m_dataset_errors_isValid = false;

    m_document_error_count_isSet = false;
    m_document_error_count_isValid = false;

    m_document_errors_isSet = false;
    m_document_errors_isValid = false;
}

void OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::fromJsonObject(QJsonObject json) {

    m_dataset_error_count_isValid = ::OpenAPI::fromJsonValue(m_dataset_error_count, json[QString("datasetErrorCount")]);
    m_dataset_error_count_isSet = !json[QString("datasetErrorCount")].isNull() && m_dataset_error_count_isValid;

    m_dataset_errors_isValid = ::OpenAPI::fromJsonValue(m_dataset_errors, json[QString("datasetErrors")]);
    m_dataset_errors_isSet = !json[QString("datasetErrors")].isNull() && m_dataset_errors_isValid;

    m_document_error_count_isValid = ::OpenAPI::fromJsonValue(m_document_error_count, json[QString("documentErrorCount")]);
    m_document_error_count_isSet = !json[QString("documentErrorCount")].isNull() && m_document_error_count_isValid;

    m_document_errors_isValid = ::OpenAPI::fromJsonValue(m_document_errors, json[QString("documentErrors")]);
    m_document_errors_isSet = !json[QString("documentErrors")].isNull() && m_document_errors_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::asJsonObject() const {
    QJsonObject obj;
    if (m_dataset_error_count_isSet) {
        obj.insert(QString("datasetErrorCount"), ::OpenAPI::toJsonValue(m_dataset_error_count));
    }
    if (m_dataset_errors.size() > 0) {
        obj.insert(QString("datasetErrors"), ::OpenAPI::toJsonValue(m_dataset_errors));
    }
    if (m_document_error_count_isSet) {
        obj.insert(QString("documentErrorCount"), ::OpenAPI::toJsonValue(m_document_error_count));
    }
    if (m_document_errors.size() > 0) {
        obj.insert(QString("documentErrors"), ::OpenAPI::toJsonValue(m_document_errors));
    }
    return obj;
}

qint32 OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::getDatasetErrorCount() const {
    return m_dataset_error_count;
}
void OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::setDatasetErrorCount(const qint32 &dataset_error_count) {
    m_dataset_error_count = dataset_error_count;
    m_dataset_error_count_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::is_dataset_error_count_Set() const{
    return m_dataset_error_count_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::is_dataset_error_count_Valid() const{
    return m_dataset_error_count_isValid;
}

QList<OAIGoogleRpcStatus> OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::getDatasetErrors() const {
    return m_dataset_errors;
}
void OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::setDatasetErrors(const QList<OAIGoogleRpcStatus> &dataset_errors) {
    m_dataset_errors = dataset_errors;
    m_dataset_errors_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::is_dataset_errors_Set() const{
    return m_dataset_errors_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::is_dataset_errors_Valid() const{
    return m_dataset_errors_isValid;
}

qint32 OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::getDocumentErrorCount() const {
    return m_document_error_count;
}
void OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::setDocumentErrorCount(const qint32 &document_error_count) {
    m_document_error_count = document_error_count;
    m_document_error_count_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::is_document_error_count_Set() const{
    return m_document_error_count_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::is_document_error_count_Valid() const{
    return m_document_error_count_isValid;
}

QList<OAIGoogleRpcStatus> OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::getDocumentErrors() const {
    return m_document_errors;
}
void OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::setDocumentErrors(const QList<OAIGoogleRpcStatus> &document_errors) {
    m_document_errors = document_errors;
    m_document_errors_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::is_document_errors_Set() const{
    return m_document_errors_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::is_document_errors_Valid() const{
    return m_document_errors_isValid;
}

bool OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dataset_error_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataset_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_error_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
