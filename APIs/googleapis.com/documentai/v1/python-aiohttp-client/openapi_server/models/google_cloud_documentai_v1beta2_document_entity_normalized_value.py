# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_date import GoogleTypeDate
from openapi_server.models.google_type_date_time import GoogleTypeDateTime
from openapi_server.models.google_type_money import GoogleTypeMoney
from openapi_server.models.google_type_postal_address import GoogleTypePostalAddress
from openapi_server import util


class GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_value: GoogleTypePostalAddress=None, boolean_value: bool=None, date_value: GoogleTypeDate=None, datetime_value: GoogleTypeDateTime=None, float_value: float=None, integer_value: int=None, money_value: GoogleTypeMoney=None, text: str=None):
        """GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue - a model defined in OpenAPI

        :param address_value: The address_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :param boolean_value: The boolean_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :param date_value: The date_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :param datetime_value: The datetime_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :param float_value: The float_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :param integer_value: The integer_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :param money_value: The money_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :param text: The text of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        """
        self.openapi_types = {
            'address_value': GoogleTypePostalAddress,
            'boolean_value': bool,
            'date_value': GoogleTypeDate,
            'datetime_value': GoogleTypeDateTime,
            'float_value': float,
            'integer_value': int,
            'money_value': GoogleTypeMoney,
            'text': str
        }

        self.attribute_map = {
            'address_value': 'addressValue',
            'boolean_value': 'booleanValue',
            'date_value': 'dateValue',
            'datetime_value': 'datetimeValue',
            'float_value': 'floatValue',
            'integer_value': 'integerValue',
            'money_value': 'moneyValue',
            'text': 'text'
        }

        self._address_value = address_value
        self._boolean_value = boolean_value
        self._date_value = date_value
        self._datetime_value = datetime_value
        self._float_value = float_value
        self._integer_value = integer_value
        self._money_value = money_value
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_value(self):
        """Gets the address_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.


        :return: The address_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :rtype: GoogleTypePostalAddress
        """
        return self._address_value

    @address_value.setter
    def address_value(self, address_value):
        """Sets the address_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.


        :param address_value: The address_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :type address_value: GoogleTypePostalAddress
        """

        self._address_value = address_value

    @property
    def boolean_value(self):
        """Gets the boolean_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.

        Boolean value. Can be used for entities with binary values, or for checkboxes.

        :return: The boolean_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :rtype: bool
        """
        return self._boolean_value

    @boolean_value.setter
    def boolean_value(self, boolean_value):
        """Sets the boolean_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.

        Boolean value. Can be used for entities with binary values, or for checkboxes.

        :param boolean_value: The boolean_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :type boolean_value: bool
        """

        self._boolean_value = boolean_value

    @property
    def date_value(self):
        """Gets the date_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.


        :return: The date_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :rtype: GoogleTypeDate
        """
        return self._date_value

    @date_value.setter
    def date_value(self, date_value):
        """Sets the date_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.


        :param date_value: The date_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :type date_value: GoogleTypeDate
        """

        self._date_value = date_value

    @property
    def datetime_value(self):
        """Gets the datetime_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.


        :return: The datetime_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :rtype: GoogleTypeDateTime
        """
        return self._datetime_value

    @datetime_value.setter
    def datetime_value(self, datetime_value):
        """Sets the datetime_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.


        :param datetime_value: The datetime_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :type datetime_value: GoogleTypeDateTime
        """

        self._datetime_value = datetime_value

    @property
    def float_value(self):
        """Gets the float_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.

        Float value.

        :return: The float_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :rtype: float
        """
        return self._float_value

    @float_value.setter
    def float_value(self, float_value):
        """Sets the float_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.

        Float value.

        :param float_value: The float_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :type float_value: float
        """

        self._float_value = float_value

    @property
    def integer_value(self):
        """Gets the integer_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.

        Integer value.

        :return: The integer_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :rtype: int
        """
        return self._integer_value

    @integer_value.setter
    def integer_value(self, integer_value):
        """Sets the integer_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.

        Integer value.

        :param integer_value: The integer_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :type integer_value: int
        """

        self._integer_value = integer_value

    @property
    def money_value(self):
        """Gets the money_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.


        :return: The money_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :rtype: GoogleTypeMoney
        """
        return self._money_value

    @money_value.setter
    def money_value(self, money_value):
        """Sets the money_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.


        :param money_value: The money_value of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :type money_value: GoogleTypeMoney
        """

        self._money_value = money_value

    @property
    def text(self):
        """Gets the text of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.

        Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.

        :return: The text of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.

        Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.

        :param text: The text of this GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue.
        :type text: str
        """

        self._text = text
