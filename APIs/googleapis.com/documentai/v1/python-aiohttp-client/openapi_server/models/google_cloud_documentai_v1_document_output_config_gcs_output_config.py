# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1_document_output_config_gcs_output_config_sharding_config import GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig
from openapi_server import util


class GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_mask: str=None, gcs_uri: str=None, sharding_config: GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig=None):
        """GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig - a model defined in OpenAPI

        :param field_mask: The field_mask of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.
        :param gcs_uri: The gcs_uri of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.
        :param sharding_config: The sharding_config of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.
        """
        self.openapi_types = {
            'field_mask': str,
            'gcs_uri': str,
            'sharding_config': GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig
        }

        self.attribute_map = {
            'field_mask': 'fieldMask',
            'gcs_uri': 'gcsUri',
            'sharding_config': 'shardingConfig'
        }

        self._field_mask = field_mask
        self._gcs_uri = gcs_uri
        self._sharding_config = sharding_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_mask(self):
        """Gets the field_mask of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.

        Specifies which fields to include in the output documents. Only supports top level document and pages field so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`.

        :return: The field_mask of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.
        :rtype: str
        """
        return self._field_mask

    @field_mask.setter
    def field_mask(self, field_mask):
        """Sets the field_mask of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.

        Specifies which fields to include in the output documents. Only supports top level document and pages field so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`.

        :param field_mask: The field_mask of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.
        :type field_mask: str
        """

        self._field_mask = field_mask

    @property
    def gcs_uri(self):
        """Gets the gcs_uri of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.

        The Cloud Storage uri (a directory) of the output.

        :return: The gcs_uri of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.
        :rtype: str
        """
        return self._gcs_uri

    @gcs_uri.setter
    def gcs_uri(self, gcs_uri):
        """Sets the gcs_uri of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.

        The Cloud Storage uri (a directory) of the output.

        :param gcs_uri: The gcs_uri of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.
        :type gcs_uri: str
        """

        self._gcs_uri = gcs_uri

    @property
    def sharding_config(self):
        """Gets the sharding_config of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.


        :return: The sharding_config of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.
        :rtype: GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig
        """
        return self._sharding_config

    @sharding_config.setter
    def sharding_config(self, sharding_config):
        """Sets the sharding_config of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.


        :param sharding_config: The sharding_config of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig.
        :type sharding_config: GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig
        """

        self._sharding_config = sharding_config
