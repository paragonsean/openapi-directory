# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1_ocr_config_hints import GoogleCloudDocumentaiV1OcrConfigHints
from openapi_server.models.google_cloud_documentai_v1_ocr_config_premium_features import GoogleCloudDocumentaiV1OcrConfigPremiumFeatures
from openapi_server import util


class GoogleCloudDocumentaiV1OcrConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advanced_ocr_options: List[str]=None, compute_style_info: bool=None, disable_character_boxes_detection: bool=None, enable_image_quality_scores: bool=None, enable_native_pdf_parsing: bool=None, enable_symbol: bool=None, hints: GoogleCloudDocumentaiV1OcrConfigHints=None, premium_features: GoogleCloudDocumentaiV1OcrConfigPremiumFeatures=None):
        """GoogleCloudDocumentaiV1OcrConfig - a model defined in OpenAPI

        :param advanced_ocr_options: The advanced_ocr_options of this GoogleCloudDocumentaiV1OcrConfig.
        :param compute_style_info: The compute_style_info of this GoogleCloudDocumentaiV1OcrConfig.
        :param disable_character_boxes_detection: The disable_character_boxes_detection of this GoogleCloudDocumentaiV1OcrConfig.
        :param enable_image_quality_scores: The enable_image_quality_scores of this GoogleCloudDocumentaiV1OcrConfig.
        :param enable_native_pdf_parsing: The enable_native_pdf_parsing of this GoogleCloudDocumentaiV1OcrConfig.
        :param enable_symbol: The enable_symbol of this GoogleCloudDocumentaiV1OcrConfig.
        :param hints: The hints of this GoogleCloudDocumentaiV1OcrConfig.
        :param premium_features: The premium_features of this GoogleCloudDocumentaiV1OcrConfig.
        """
        self.openapi_types = {
            'advanced_ocr_options': List[str],
            'compute_style_info': bool,
            'disable_character_boxes_detection': bool,
            'enable_image_quality_scores': bool,
            'enable_native_pdf_parsing': bool,
            'enable_symbol': bool,
            'hints': GoogleCloudDocumentaiV1OcrConfigHints,
            'premium_features': GoogleCloudDocumentaiV1OcrConfigPremiumFeatures
        }

        self.attribute_map = {
            'advanced_ocr_options': 'advancedOcrOptions',
            'compute_style_info': 'computeStyleInfo',
            'disable_character_boxes_detection': 'disableCharacterBoxesDetection',
            'enable_image_quality_scores': 'enableImageQualityScores',
            'enable_native_pdf_parsing': 'enableNativePdfParsing',
            'enable_symbol': 'enableSymbol',
            'hints': 'hints',
            'premium_features': 'premiumFeatures'
        }

        self._advanced_ocr_options = advanced_ocr_options
        self._compute_style_info = compute_style_info
        self._disable_character_boxes_detection = disable_character_boxes_detection
        self._enable_image_quality_scores = enable_image_quality_scores
        self._enable_native_pdf_parsing = enable_native_pdf_parsing
        self._enable_symbol = enable_symbol
        self._hints = hints
        self._premium_features = premium_features

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1OcrConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1OcrConfig of this GoogleCloudDocumentaiV1OcrConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advanced_ocr_options(self):
        """Gets the advanced_ocr_options of this GoogleCloudDocumentaiV1OcrConfig.

        A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - `legacy_layout`: a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation.

        :return: The advanced_ocr_options of this GoogleCloudDocumentaiV1OcrConfig.
        :rtype: List[str]
        """
        return self._advanced_ocr_options

    @advanced_ocr_options.setter
    def advanced_ocr_options(self, advanced_ocr_options):
        """Sets the advanced_ocr_options of this GoogleCloudDocumentaiV1OcrConfig.

        A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - `legacy_layout`: a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation.

        :param advanced_ocr_options: The advanced_ocr_options of this GoogleCloudDocumentaiV1OcrConfig.
        :type advanced_ocr_options: List[str]
        """

        self._advanced_ocr_options = advanced_ocr_options

    @property
    def compute_style_info(self):
        """Gets the compute_style_info of this GoogleCloudDocumentaiV1OcrConfig.

        Turn on font identification model and return font style information. Deprecated, use PremiumFeatures.compute_style_info instead.

        :return: The compute_style_info of this GoogleCloudDocumentaiV1OcrConfig.
        :rtype: bool
        """
        return self._compute_style_info

    @compute_style_info.setter
    def compute_style_info(self, compute_style_info):
        """Sets the compute_style_info of this GoogleCloudDocumentaiV1OcrConfig.

        Turn on font identification model and return font style information. Deprecated, use PremiumFeatures.compute_style_info instead.

        :param compute_style_info: The compute_style_info of this GoogleCloudDocumentaiV1OcrConfig.
        :type compute_style_info: bool
        """

        self._compute_style_info = compute_style_info

    @property
    def disable_character_boxes_detection(self):
        """Gets the disable_character_boxes_detection of this GoogleCloudDocumentaiV1OcrConfig.

        Turn off character box detector in OCR engine. Character box detection is enabled by default in OCR 2.0 (and later) processors.

        :return: The disable_character_boxes_detection of this GoogleCloudDocumentaiV1OcrConfig.
        :rtype: bool
        """
        return self._disable_character_boxes_detection

    @disable_character_boxes_detection.setter
    def disable_character_boxes_detection(self, disable_character_boxes_detection):
        """Sets the disable_character_boxes_detection of this GoogleCloudDocumentaiV1OcrConfig.

        Turn off character box detector in OCR engine. Character box detection is enabled by default in OCR 2.0 (and later) processors.

        :param disable_character_boxes_detection: The disable_character_boxes_detection of this GoogleCloudDocumentaiV1OcrConfig.
        :type disable_character_boxes_detection: bool
        """

        self._disable_character_boxes_detection = disable_character_boxes_detection

    @property
    def enable_image_quality_scores(self):
        """Gets the enable_image_quality_scores of this GoogleCloudDocumentaiV1OcrConfig.

        Enables intelligent document quality scores after OCR. Can help with diagnosing why OCR responses are of poor quality for a given input. Adds additional latency comparable to regular OCR to the process call.

        :return: The enable_image_quality_scores of this GoogleCloudDocumentaiV1OcrConfig.
        :rtype: bool
        """
        return self._enable_image_quality_scores

    @enable_image_quality_scores.setter
    def enable_image_quality_scores(self, enable_image_quality_scores):
        """Sets the enable_image_quality_scores of this GoogleCloudDocumentaiV1OcrConfig.

        Enables intelligent document quality scores after OCR. Can help with diagnosing why OCR responses are of poor quality for a given input. Adds additional latency comparable to regular OCR to the process call.

        :param enable_image_quality_scores: The enable_image_quality_scores of this GoogleCloudDocumentaiV1OcrConfig.
        :type enable_image_quality_scores: bool
        """

        self._enable_image_quality_scores = enable_image_quality_scores

    @property
    def enable_native_pdf_parsing(self):
        """Gets the enable_native_pdf_parsing of this GoogleCloudDocumentaiV1OcrConfig.

        Enables special handling for PDFs with existing text information. Results in better text extraction quality in such PDF inputs.

        :return: The enable_native_pdf_parsing of this GoogleCloudDocumentaiV1OcrConfig.
        :rtype: bool
        """
        return self._enable_native_pdf_parsing

    @enable_native_pdf_parsing.setter
    def enable_native_pdf_parsing(self, enable_native_pdf_parsing):
        """Sets the enable_native_pdf_parsing of this GoogleCloudDocumentaiV1OcrConfig.

        Enables special handling for PDFs with existing text information. Results in better text extraction quality in such PDF inputs.

        :param enable_native_pdf_parsing: The enable_native_pdf_parsing of this GoogleCloudDocumentaiV1OcrConfig.
        :type enable_native_pdf_parsing: bool
        """

        self._enable_native_pdf_parsing = enable_native_pdf_parsing

    @property
    def enable_symbol(self):
        """Gets the enable_symbol of this GoogleCloudDocumentaiV1OcrConfig.

        Includes symbol level OCR information if set to true.

        :return: The enable_symbol of this GoogleCloudDocumentaiV1OcrConfig.
        :rtype: bool
        """
        return self._enable_symbol

    @enable_symbol.setter
    def enable_symbol(self, enable_symbol):
        """Sets the enable_symbol of this GoogleCloudDocumentaiV1OcrConfig.

        Includes symbol level OCR information if set to true.

        :param enable_symbol: The enable_symbol of this GoogleCloudDocumentaiV1OcrConfig.
        :type enable_symbol: bool
        """

        self._enable_symbol = enable_symbol

    @property
    def hints(self):
        """Gets the hints of this GoogleCloudDocumentaiV1OcrConfig.


        :return: The hints of this GoogleCloudDocumentaiV1OcrConfig.
        :rtype: GoogleCloudDocumentaiV1OcrConfigHints
        """
        return self._hints

    @hints.setter
    def hints(self, hints):
        """Sets the hints of this GoogleCloudDocumentaiV1OcrConfig.


        :param hints: The hints of this GoogleCloudDocumentaiV1OcrConfig.
        :type hints: GoogleCloudDocumentaiV1OcrConfigHints
        """

        self._hints = hints

    @property
    def premium_features(self):
        """Gets the premium_features of this GoogleCloudDocumentaiV1OcrConfig.


        :return: The premium_features of this GoogleCloudDocumentaiV1OcrConfig.
        :rtype: GoogleCloudDocumentaiV1OcrConfigPremiumFeatures
        """
        return self._premium_features

    @premium_features.setter
    def premium_features(self, premium_features):
        """Sets the premium_features of this GoogleCloudDocumentaiV1OcrConfig.


        :param premium_features: The premium_features of this GoogleCloudDocumentaiV1OcrConfig.
        :type premium_features: GoogleCloudDocumentaiV1OcrConfigPremiumFeatures
        """

        self._premium_features = premium_features
