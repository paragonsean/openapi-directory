# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1_batch_documents_input_config import GoogleCloudDocumentaiV1BatchDocumentsInputConfig
from openapi_server.models.google_cloud_documentai_v1_document_output_config import GoogleCloudDocumentaiV1DocumentOutputConfig
from openapi_server.models.google_cloud_documentai_v1_process_options import GoogleCloudDocumentaiV1ProcessOptions
from openapi_server import util


class GoogleCloudDocumentaiV1BatchProcessRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_output_config: GoogleCloudDocumentaiV1DocumentOutputConfig=None, input_documents: GoogleCloudDocumentaiV1BatchDocumentsInputConfig=None, labels: Dict[str, str]=None, process_options: GoogleCloudDocumentaiV1ProcessOptions=None, skip_human_review: bool=None):
        """GoogleCloudDocumentaiV1BatchProcessRequest - a model defined in OpenAPI

        :param document_output_config: The document_output_config of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :param input_documents: The input_documents of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :param labels: The labels of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :param process_options: The process_options of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :param skip_human_review: The skip_human_review of this GoogleCloudDocumentaiV1BatchProcessRequest.
        """
        self.openapi_types = {
            'document_output_config': GoogleCloudDocumentaiV1DocumentOutputConfig,
            'input_documents': GoogleCloudDocumentaiV1BatchDocumentsInputConfig,
            'labels': Dict[str, str],
            'process_options': GoogleCloudDocumentaiV1ProcessOptions,
            'skip_human_review': bool
        }

        self.attribute_map = {
            'document_output_config': 'documentOutputConfig',
            'input_documents': 'inputDocuments',
            'labels': 'labels',
            'process_options': 'processOptions',
            'skip_human_review': 'skipHumanReview'
        }

        self._document_output_config = document_output_config
        self._input_documents = input_documents
        self._labels = labels
        self._process_options = process_options
        self._skip_human_review = skip_human_review

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1BatchProcessRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1BatchProcessRequest of this GoogleCloudDocumentaiV1BatchProcessRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_output_config(self):
        """Gets the document_output_config of this GoogleCloudDocumentaiV1BatchProcessRequest.


        :return: The document_output_config of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :rtype: GoogleCloudDocumentaiV1DocumentOutputConfig
        """
        return self._document_output_config

    @document_output_config.setter
    def document_output_config(self, document_output_config):
        """Sets the document_output_config of this GoogleCloudDocumentaiV1BatchProcessRequest.


        :param document_output_config: The document_output_config of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :type document_output_config: GoogleCloudDocumentaiV1DocumentOutputConfig
        """

        self._document_output_config = document_output_config

    @property
    def input_documents(self):
        """Gets the input_documents of this GoogleCloudDocumentaiV1BatchProcessRequest.


        :return: The input_documents of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :rtype: GoogleCloudDocumentaiV1BatchDocumentsInputConfig
        """
        return self._input_documents

    @input_documents.setter
    def input_documents(self, input_documents):
        """Sets the input_documents of this GoogleCloudDocumentaiV1BatchProcessRequest.


        :param input_documents: The input_documents of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :type input_documents: GoogleCloudDocumentaiV1BatchDocumentsInputConfig
        """

        self._input_documents = input_documents

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudDocumentaiV1BatchProcessRequest.

        Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.

        :return: The labels of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudDocumentaiV1BatchProcessRequest.

        Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.

        :param labels: The labels of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def process_options(self):
        """Gets the process_options of this GoogleCloudDocumentaiV1BatchProcessRequest.


        :return: The process_options of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :rtype: GoogleCloudDocumentaiV1ProcessOptions
        """
        return self._process_options

    @process_options.setter
    def process_options(self, process_options):
        """Sets the process_options of this GoogleCloudDocumentaiV1BatchProcessRequest.


        :param process_options: The process_options of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :type process_options: GoogleCloudDocumentaiV1ProcessOptions
        """

        self._process_options = process_options

    @property
    def skip_human_review(self):
        """Gets the skip_human_review of this GoogleCloudDocumentaiV1BatchProcessRequest.

        Whether human review should be skipped for this request. Default to `false`.

        :return: The skip_human_review of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :rtype: bool
        """
        return self._skip_human_review

    @skip_human_review.setter
    def skip_human_review(self, skip_human_review):
        """Sets the skip_human_review of this GoogleCloudDocumentaiV1BatchProcessRequest.

        Whether human review should be skipped for this request. Default to `false`.

        :param skip_human_review: The skip_human_review of this GoogleCloudDocumentaiV1BatchProcessRequest.
        :type skip_human_review: bool
        """

        self._skip_human_review = skip_human_review
