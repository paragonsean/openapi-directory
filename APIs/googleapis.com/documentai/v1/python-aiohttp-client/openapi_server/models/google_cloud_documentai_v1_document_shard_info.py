# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDocumentaiV1DocumentShardInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shard_count: str=None, shard_index: str=None, text_offset: str=None):
        """GoogleCloudDocumentaiV1DocumentShardInfo - a model defined in OpenAPI

        :param shard_count: The shard_count of this GoogleCloudDocumentaiV1DocumentShardInfo.
        :param shard_index: The shard_index of this GoogleCloudDocumentaiV1DocumentShardInfo.
        :param text_offset: The text_offset of this GoogleCloudDocumentaiV1DocumentShardInfo.
        """
        self.openapi_types = {
            'shard_count': str,
            'shard_index': str,
            'text_offset': str
        }

        self.attribute_map = {
            'shard_count': 'shardCount',
            'shard_index': 'shardIndex',
            'text_offset': 'textOffset'
        }

        self._shard_count = shard_count
        self._shard_index = shard_index
        self._text_offset = text_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1DocumentShardInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1DocumentShardInfo of this GoogleCloudDocumentaiV1DocumentShardInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shard_count(self):
        """Gets the shard_count of this GoogleCloudDocumentaiV1DocumentShardInfo.

        Total number of shards.

        :return: The shard_count of this GoogleCloudDocumentaiV1DocumentShardInfo.
        :rtype: str
        """
        return self._shard_count

    @shard_count.setter
    def shard_count(self, shard_count):
        """Sets the shard_count of this GoogleCloudDocumentaiV1DocumentShardInfo.

        Total number of shards.

        :param shard_count: The shard_count of this GoogleCloudDocumentaiV1DocumentShardInfo.
        :type shard_count: str
        """

        self._shard_count = shard_count

    @property
    def shard_index(self):
        """Gets the shard_index of this GoogleCloudDocumentaiV1DocumentShardInfo.

        The 0-based index of this shard.

        :return: The shard_index of this GoogleCloudDocumentaiV1DocumentShardInfo.
        :rtype: str
        """
        return self._shard_index

    @shard_index.setter
    def shard_index(self, shard_index):
        """Sets the shard_index of this GoogleCloudDocumentaiV1DocumentShardInfo.

        The 0-based index of this shard.

        :param shard_index: The shard_index of this GoogleCloudDocumentaiV1DocumentShardInfo.
        :type shard_index: str
        """

        self._shard_index = shard_index

    @property
    def text_offset(self):
        """Gets the text_offset of this GoogleCloudDocumentaiV1DocumentShardInfo.

        The index of the first character in Document.text in the overall document global text.

        :return: The text_offset of this GoogleCloudDocumentaiV1DocumentShardInfo.
        :rtype: str
        """
        return self._text_offset

    @text_offset.setter
    def text_offset(self, text_offset):
        """Sets the text_offset of this GoogleCloudDocumentaiV1DocumentShardInfo.

        The index of the first character in Document.text in the overall document global text.

        :param text_offset: The text_offset of this GoogleCloudDocumentaiV1DocumentShardInfo.
        :type text_offset: str
        """

        self._text_offset = text_offset
