# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1beta1_document_page_image_quality_scores_detected_defect import GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect
from openapi_server import util


class GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detected_defects: List[GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect]=None, quality_score: float=None):
        """GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores - a model defined in OpenAPI

        :param detected_defects: The detected_defects of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.
        :param quality_score: The quality_score of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.
        """
        self.openapi_types = {
            'detected_defects': List[GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect],
            'quality_score': float
        }

        self.attribute_map = {
            'detected_defects': 'detectedDefects',
            'quality_score': 'qualityScore'
        }

        self._detected_defects = detected_defects
        self._quality_score = quality_score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detected_defects(self):
        """Gets the detected_defects of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.

        A list of detected defects.

        :return: The detected_defects of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.
        :rtype: List[GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect]
        """
        return self._detected_defects

    @detected_defects.setter
    def detected_defects(self, detected_defects):
        """Sets the detected_defects of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.

        A list of detected defects.

        :param detected_defects: The detected_defects of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.
        :type detected_defects: List[GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect]
        """

        self._detected_defects = detected_defects

    @property
    def quality_score(self):
        """Gets the quality_score of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.

        The overall quality score. Range `[0, 1]` where `1` is perfect quality.

        :return: The quality_score of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.
        :rtype: float
        """
        return self._quality_score

    @quality_score.setter
    def quality_score(self, quality_score):
        """Sets the quality_score of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.

        The overall quality score. Range `[0, 1]` where `1` is perfect quality.

        :param quality_score: The quality_score of this GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores.
        :type quality_score: float
        """

        self._quality_score = quality_score
