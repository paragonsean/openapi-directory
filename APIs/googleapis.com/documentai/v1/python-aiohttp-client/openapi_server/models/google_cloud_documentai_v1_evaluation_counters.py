# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDocumentaiV1EvaluationCounters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, evaluated_documents_count: int=None, failed_documents_count: int=None, input_documents_count: int=None, invalid_documents_count: int=None):
        """GoogleCloudDocumentaiV1EvaluationCounters - a model defined in OpenAPI

        :param evaluated_documents_count: The evaluated_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :param failed_documents_count: The failed_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :param input_documents_count: The input_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :param invalid_documents_count: The invalid_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        """
        self.openapi_types = {
            'evaluated_documents_count': int,
            'failed_documents_count': int,
            'input_documents_count': int,
            'invalid_documents_count': int
        }

        self.attribute_map = {
            'evaluated_documents_count': 'evaluatedDocumentsCount',
            'failed_documents_count': 'failedDocumentsCount',
            'input_documents_count': 'inputDocumentsCount',
            'invalid_documents_count': 'invalidDocumentsCount'
        }

        self._evaluated_documents_count = evaluated_documents_count
        self._failed_documents_count = failed_documents_count
        self._input_documents_count = input_documents_count
        self._invalid_documents_count = invalid_documents_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1EvaluationCounters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1EvaluationCounters of this GoogleCloudDocumentaiV1EvaluationCounters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def evaluated_documents_count(self):
        """Gets the evaluated_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.

        How many documents were used in the evaluation.

        :return: The evaluated_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :rtype: int
        """
        return self._evaluated_documents_count

    @evaluated_documents_count.setter
    def evaluated_documents_count(self, evaluated_documents_count):
        """Sets the evaluated_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.

        How many documents were used in the evaluation.

        :param evaluated_documents_count: The evaluated_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :type evaluated_documents_count: int
        """

        self._evaluated_documents_count = evaluated_documents_count

    @property
    def failed_documents_count(self):
        """Gets the failed_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.

        How many documents were not included in the evaluation as Document AI failed to process them.

        :return: The failed_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :rtype: int
        """
        return self._failed_documents_count

    @failed_documents_count.setter
    def failed_documents_count(self, failed_documents_count):
        """Sets the failed_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.

        How many documents were not included in the evaluation as Document AI failed to process them.

        :param failed_documents_count: The failed_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :type failed_documents_count: int
        """

        self._failed_documents_count = failed_documents_count

    @property
    def input_documents_count(self):
        """Gets the input_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.

        How many documents were sent for evaluation.

        :return: The input_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :rtype: int
        """
        return self._input_documents_count

    @input_documents_count.setter
    def input_documents_count(self, input_documents_count):
        """Sets the input_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.

        How many documents were sent for evaluation.

        :param input_documents_count: The input_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :type input_documents_count: int
        """

        self._input_documents_count = input_documents_count

    @property
    def invalid_documents_count(self):
        """Gets the invalid_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.

        How many documents were not included in the evaluation as they didn't pass validation.

        :return: The invalid_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :rtype: int
        """
        return self._invalid_documents_count

    @invalid_documents_count.setter
    def invalid_documents_count(self, invalid_documents_count):
        """Sets the invalid_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.

        How many documents were not included in the evaluation as they didn't pass validation.

        :param invalid_documents_count: The invalid_documents_count of this GoogleCloudDocumentaiV1EvaluationCounters.
        :type invalid_documents_count: int
        """

        self._invalid_documents_count = invalid_documents_count
