# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pages_overlap: int=None, pages_per_shard: int=None):
        """GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig - a model defined in OpenAPI

        :param pages_overlap: The pages_overlap of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.
        :param pages_per_shard: The pages_per_shard of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.
        """
        self.openapi_types = {
            'pages_overlap': int,
            'pages_per_shard': int
        }

        self.attribute_map = {
            'pages_overlap': 'pagesOverlap',
            'pages_per_shard': 'pagesPerShard'
        }

        self._pages_overlap = pages_overlap
        self._pages_per_shard = pages_per_shard

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pages_overlap(self):
        """Gets the pages_overlap of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.

        The number of overlapping pages between consecutive shards.

        :return: The pages_overlap of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.
        :rtype: int
        """
        return self._pages_overlap

    @pages_overlap.setter
    def pages_overlap(self, pages_overlap):
        """Sets the pages_overlap of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.

        The number of overlapping pages between consecutive shards.

        :param pages_overlap: The pages_overlap of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.
        :type pages_overlap: int
        """

        self._pages_overlap = pages_overlap

    @property
    def pages_per_shard(self):
        """Gets the pages_per_shard of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.

        The number of pages per shard.

        :return: The pages_per_shard of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.
        :rtype: int
        """
        return self._pages_per_shard

    @pages_per_shard.setter
    def pages_per_shard(self, pages_per_shard):
        """Sets the pages_per_shard of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.

        The number of pages per shard.

        :param pages_per_shard: The pages_per_shard of this GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig.
        :type pages_per_shard: int
        """

        self._pages_per_shard = pages_per_shard
