/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the alias and the aliased resource name of processor version.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:46.913641-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1ProcessorVersionAlias {
  public static final String SERIALIZED_NAME_ALIAS = "alias";
  @SerializedName(SERIALIZED_NAME_ALIAS)
  private String alias;

  public static final String SERIALIZED_NAME_PROCESSOR_VERSION = "processorVersion";
  @SerializedName(SERIALIZED_NAME_PROCESSOR_VERSION)
  private String processorVersion;

  public GoogleCloudDocumentaiV1ProcessorVersionAlias() {
  }

  public GoogleCloudDocumentaiV1ProcessorVersionAlias alias(String alias) {
    this.alias = alias;
    return this;
  }

  /**
   * The alias in the form of &#x60;processor_version&#x60; resource name.
   * @return alias
   */
  @javax.annotation.Nullable
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }


  public GoogleCloudDocumentaiV1ProcessorVersionAlias processorVersion(String processorVersion) {
    this.processorVersion = processorVersion;
    return this;
  }

  /**
   * The resource name of aliased processor version.
   * @return processorVersion
   */
  @javax.annotation.Nullable
  public String getProcessorVersion() {
    return processorVersion;
  }

  public void setProcessorVersion(String processorVersion) {
    this.processorVersion = processorVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1ProcessorVersionAlias googleCloudDocumentaiV1ProcessorVersionAlias = (GoogleCloudDocumentaiV1ProcessorVersionAlias) o;
    return Objects.equals(this.alias, googleCloudDocumentaiV1ProcessorVersionAlias.alias) &&
        Objects.equals(this.processorVersion, googleCloudDocumentaiV1ProcessorVersionAlias.processorVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alias, processorVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1ProcessorVersionAlias {\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    processorVersion: ").append(toIndentedString(processorVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alias");
    openapiFields.add("processorVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1ProcessorVersionAlias
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1ProcessorVersionAlias.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1ProcessorVersionAlias is not found in the empty JSON string", GoogleCloudDocumentaiV1ProcessorVersionAlias.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1ProcessorVersionAlias.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1ProcessorVersionAlias` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("alias") != null && !jsonObj.get("alias").isJsonNull()) && !jsonObj.get("alias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alias").toString()));
      }
      if ((jsonObj.get("processorVersion") != null && !jsonObj.get("processorVersion").isJsonNull()) && !jsonObj.get("processorVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processorVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processorVersion").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1ProcessorVersionAlias.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1ProcessorVersionAlias' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1ProcessorVersionAlias> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1ProcessorVersionAlias.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1ProcessorVersionAlias>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1ProcessorVersionAlias value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1ProcessorVersionAlias read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1ProcessorVersionAlias given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1ProcessorVersionAlias
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1ProcessorVersionAlias
   */
  public static GoogleCloudDocumentaiV1ProcessorVersionAlias fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1ProcessorVersionAlias.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1ProcessorVersionAlias to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

