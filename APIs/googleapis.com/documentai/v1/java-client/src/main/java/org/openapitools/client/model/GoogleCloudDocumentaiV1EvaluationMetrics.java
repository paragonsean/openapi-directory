/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Evaluation metrics, either in aggregate or about a specific entity.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:46.913641-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1EvaluationMetrics {
  public static final String SERIALIZED_NAME_F1_SCORE = "f1Score";
  @SerializedName(SERIALIZED_NAME_F1_SCORE)
  private Float f1Score;

  public static final String SERIALIZED_NAME_FALSE_NEGATIVES_COUNT = "falseNegativesCount";
  @SerializedName(SERIALIZED_NAME_FALSE_NEGATIVES_COUNT)
  private Integer falseNegativesCount;

  public static final String SERIALIZED_NAME_FALSE_POSITIVES_COUNT = "falsePositivesCount";
  @SerializedName(SERIALIZED_NAME_FALSE_POSITIVES_COUNT)
  private Integer falsePositivesCount;

  public static final String SERIALIZED_NAME_GROUND_TRUTH_DOCUMENT_COUNT = "groundTruthDocumentCount";
  @SerializedName(SERIALIZED_NAME_GROUND_TRUTH_DOCUMENT_COUNT)
  private Integer groundTruthDocumentCount;

  public static final String SERIALIZED_NAME_GROUND_TRUTH_OCCURRENCES_COUNT = "groundTruthOccurrencesCount";
  @SerializedName(SERIALIZED_NAME_GROUND_TRUTH_OCCURRENCES_COUNT)
  private Integer groundTruthOccurrencesCount;

  public static final String SERIALIZED_NAME_PRECISION = "precision";
  @SerializedName(SERIALIZED_NAME_PRECISION)
  private Float precision;

  public static final String SERIALIZED_NAME_PREDICTED_DOCUMENT_COUNT = "predictedDocumentCount";
  @SerializedName(SERIALIZED_NAME_PREDICTED_DOCUMENT_COUNT)
  private Integer predictedDocumentCount;

  public static final String SERIALIZED_NAME_PREDICTED_OCCURRENCES_COUNT = "predictedOccurrencesCount";
  @SerializedName(SERIALIZED_NAME_PREDICTED_OCCURRENCES_COUNT)
  private Integer predictedOccurrencesCount;

  public static final String SERIALIZED_NAME_RECALL = "recall";
  @SerializedName(SERIALIZED_NAME_RECALL)
  private Float recall;

  public static final String SERIALIZED_NAME_TOTAL_DOCUMENTS_COUNT = "totalDocumentsCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_DOCUMENTS_COUNT)
  private Integer totalDocumentsCount;

  public static final String SERIALIZED_NAME_TRUE_POSITIVES_COUNT = "truePositivesCount";
  @SerializedName(SERIALIZED_NAME_TRUE_POSITIVES_COUNT)
  private Integer truePositivesCount;

  public GoogleCloudDocumentaiV1EvaluationMetrics() {
  }

  public GoogleCloudDocumentaiV1EvaluationMetrics f1Score(Float f1Score) {
    this.f1Score = f1Score;
    return this;
  }

  /**
   * The calculated f1 score.
   * @return f1Score
   */
  @javax.annotation.Nullable
  public Float getF1Score() {
    return f1Score;
  }

  public void setF1Score(Float f1Score) {
    this.f1Score = f1Score;
  }


  public GoogleCloudDocumentaiV1EvaluationMetrics falseNegativesCount(Integer falseNegativesCount) {
    this.falseNegativesCount = falseNegativesCount;
    return this;
  }

  /**
   * The amount of false negatives.
   * @return falseNegativesCount
   */
  @javax.annotation.Nullable
  public Integer getFalseNegativesCount() {
    return falseNegativesCount;
  }

  public void setFalseNegativesCount(Integer falseNegativesCount) {
    this.falseNegativesCount = falseNegativesCount;
  }


  public GoogleCloudDocumentaiV1EvaluationMetrics falsePositivesCount(Integer falsePositivesCount) {
    this.falsePositivesCount = falsePositivesCount;
    return this;
  }

  /**
   * The amount of false positives.
   * @return falsePositivesCount
   */
  @javax.annotation.Nullable
  public Integer getFalsePositivesCount() {
    return falsePositivesCount;
  }

  public void setFalsePositivesCount(Integer falsePositivesCount) {
    this.falsePositivesCount = falsePositivesCount;
  }


  public GoogleCloudDocumentaiV1EvaluationMetrics groundTruthDocumentCount(Integer groundTruthDocumentCount) {
    this.groundTruthDocumentCount = groundTruthDocumentCount;
    return this;
  }

  /**
   * The amount of documents with a ground truth occurrence.
   * @return groundTruthDocumentCount
   */
  @javax.annotation.Nullable
  public Integer getGroundTruthDocumentCount() {
    return groundTruthDocumentCount;
  }

  public void setGroundTruthDocumentCount(Integer groundTruthDocumentCount) {
    this.groundTruthDocumentCount = groundTruthDocumentCount;
  }


  public GoogleCloudDocumentaiV1EvaluationMetrics groundTruthOccurrencesCount(Integer groundTruthOccurrencesCount) {
    this.groundTruthOccurrencesCount = groundTruthOccurrencesCount;
    return this;
  }

  /**
   * The amount of occurrences in ground truth documents.
   * @return groundTruthOccurrencesCount
   */
  @javax.annotation.Nullable
  public Integer getGroundTruthOccurrencesCount() {
    return groundTruthOccurrencesCount;
  }

  public void setGroundTruthOccurrencesCount(Integer groundTruthOccurrencesCount) {
    this.groundTruthOccurrencesCount = groundTruthOccurrencesCount;
  }


  public GoogleCloudDocumentaiV1EvaluationMetrics precision(Float precision) {
    this.precision = precision;
    return this;
  }

  /**
   * The calculated precision.
   * @return precision
   */
  @javax.annotation.Nullable
  public Float getPrecision() {
    return precision;
  }

  public void setPrecision(Float precision) {
    this.precision = precision;
  }


  public GoogleCloudDocumentaiV1EvaluationMetrics predictedDocumentCount(Integer predictedDocumentCount) {
    this.predictedDocumentCount = predictedDocumentCount;
    return this;
  }

  /**
   * The amount of documents with a predicted occurrence.
   * @return predictedDocumentCount
   */
  @javax.annotation.Nullable
  public Integer getPredictedDocumentCount() {
    return predictedDocumentCount;
  }

  public void setPredictedDocumentCount(Integer predictedDocumentCount) {
    this.predictedDocumentCount = predictedDocumentCount;
  }


  public GoogleCloudDocumentaiV1EvaluationMetrics predictedOccurrencesCount(Integer predictedOccurrencesCount) {
    this.predictedOccurrencesCount = predictedOccurrencesCount;
    return this;
  }

  /**
   * The amount of occurrences in predicted documents.
   * @return predictedOccurrencesCount
   */
  @javax.annotation.Nullable
  public Integer getPredictedOccurrencesCount() {
    return predictedOccurrencesCount;
  }

  public void setPredictedOccurrencesCount(Integer predictedOccurrencesCount) {
    this.predictedOccurrencesCount = predictedOccurrencesCount;
  }


  public GoogleCloudDocumentaiV1EvaluationMetrics recall(Float recall) {
    this.recall = recall;
    return this;
  }

  /**
   * The calculated recall.
   * @return recall
   */
  @javax.annotation.Nullable
  public Float getRecall() {
    return recall;
  }

  public void setRecall(Float recall) {
    this.recall = recall;
  }


  public GoogleCloudDocumentaiV1EvaluationMetrics totalDocumentsCount(Integer totalDocumentsCount) {
    this.totalDocumentsCount = totalDocumentsCount;
    return this;
  }

  /**
   * The amount of documents that had an occurrence of this label.
   * @return totalDocumentsCount
   */
  @javax.annotation.Nullable
  public Integer getTotalDocumentsCount() {
    return totalDocumentsCount;
  }

  public void setTotalDocumentsCount(Integer totalDocumentsCount) {
    this.totalDocumentsCount = totalDocumentsCount;
  }


  public GoogleCloudDocumentaiV1EvaluationMetrics truePositivesCount(Integer truePositivesCount) {
    this.truePositivesCount = truePositivesCount;
    return this;
  }

  /**
   * The amount of true positives.
   * @return truePositivesCount
   */
  @javax.annotation.Nullable
  public Integer getTruePositivesCount() {
    return truePositivesCount;
  }

  public void setTruePositivesCount(Integer truePositivesCount) {
    this.truePositivesCount = truePositivesCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1EvaluationMetrics googleCloudDocumentaiV1EvaluationMetrics = (GoogleCloudDocumentaiV1EvaluationMetrics) o;
    return Objects.equals(this.f1Score, googleCloudDocumentaiV1EvaluationMetrics.f1Score) &&
        Objects.equals(this.falseNegativesCount, googleCloudDocumentaiV1EvaluationMetrics.falseNegativesCount) &&
        Objects.equals(this.falsePositivesCount, googleCloudDocumentaiV1EvaluationMetrics.falsePositivesCount) &&
        Objects.equals(this.groundTruthDocumentCount, googleCloudDocumentaiV1EvaluationMetrics.groundTruthDocumentCount) &&
        Objects.equals(this.groundTruthOccurrencesCount, googleCloudDocumentaiV1EvaluationMetrics.groundTruthOccurrencesCount) &&
        Objects.equals(this.precision, googleCloudDocumentaiV1EvaluationMetrics.precision) &&
        Objects.equals(this.predictedDocumentCount, googleCloudDocumentaiV1EvaluationMetrics.predictedDocumentCount) &&
        Objects.equals(this.predictedOccurrencesCount, googleCloudDocumentaiV1EvaluationMetrics.predictedOccurrencesCount) &&
        Objects.equals(this.recall, googleCloudDocumentaiV1EvaluationMetrics.recall) &&
        Objects.equals(this.totalDocumentsCount, googleCloudDocumentaiV1EvaluationMetrics.totalDocumentsCount) &&
        Objects.equals(this.truePositivesCount, googleCloudDocumentaiV1EvaluationMetrics.truePositivesCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(f1Score, falseNegativesCount, falsePositivesCount, groundTruthDocumentCount, groundTruthOccurrencesCount, precision, predictedDocumentCount, predictedOccurrencesCount, recall, totalDocumentsCount, truePositivesCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1EvaluationMetrics {\n");
    sb.append("    f1Score: ").append(toIndentedString(f1Score)).append("\n");
    sb.append("    falseNegativesCount: ").append(toIndentedString(falseNegativesCount)).append("\n");
    sb.append("    falsePositivesCount: ").append(toIndentedString(falsePositivesCount)).append("\n");
    sb.append("    groundTruthDocumentCount: ").append(toIndentedString(groundTruthDocumentCount)).append("\n");
    sb.append("    groundTruthOccurrencesCount: ").append(toIndentedString(groundTruthOccurrencesCount)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    predictedDocumentCount: ").append(toIndentedString(predictedDocumentCount)).append("\n");
    sb.append("    predictedOccurrencesCount: ").append(toIndentedString(predictedOccurrencesCount)).append("\n");
    sb.append("    recall: ").append(toIndentedString(recall)).append("\n");
    sb.append("    totalDocumentsCount: ").append(toIndentedString(totalDocumentsCount)).append("\n");
    sb.append("    truePositivesCount: ").append(toIndentedString(truePositivesCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("f1Score");
    openapiFields.add("falseNegativesCount");
    openapiFields.add("falsePositivesCount");
    openapiFields.add("groundTruthDocumentCount");
    openapiFields.add("groundTruthOccurrencesCount");
    openapiFields.add("precision");
    openapiFields.add("predictedDocumentCount");
    openapiFields.add("predictedOccurrencesCount");
    openapiFields.add("recall");
    openapiFields.add("totalDocumentsCount");
    openapiFields.add("truePositivesCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1EvaluationMetrics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1EvaluationMetrics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1EvaluationMetrics is not found in the empty JSON string", GoogleCloudDocumentaiV1EvaluationMetrics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1EvaluationMetrics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1EvaluationMetrics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1EvaluationMetrics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1EvaluationMetrics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1EvaluationMetrics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1EvaluationMetrics.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1EvaluationMetrics>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1EvaluationMetrics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1EvaluationMetrics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1EvaluationMetrics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1EvaluationMetrics
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1EvaluationMetrics
   */
  public static GoogleCloudDocumentaiV1EvaluationMetrics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1EvaluationMetrics.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1EvaluationMetrics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

