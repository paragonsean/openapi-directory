/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudDocumentAiApi);
  }
}(this, function(expect, CloudDocumentAiApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudDocumentaiV1beta3EvaluationMetrics', function() {
    it('should create an instance of GoogleCloudDocumentaiV1beta3EvaluationMetrics', function() {
      // uncomment below and update the code to test GoogleCloudDocumentaiV1beta3EvaluationMetrics
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be.a(CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics);
    });

    it('should have the property f1Score (base name: "f1Score")', function() {
      // uncomment below and update the code to test the property f1Score
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

    it('should have the property falseNegativesCount (base name: "falseNegativesCount")', function() {
      // uncomment below and update the code to test the property falseNegativesCount
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

    it('should have the property falsePositivesCount (base name: "falsePositivesCount")', function() {
      // uncomment below and update the code to test the property falsePositivesCount
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

    it('should have the property groundTruthDocumentCount (base name: "groundTruthDocumentCount")', function() {
      // uncomment below and update the code to test the property groundTruthDocumentCount
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

    it('should have the property groundTruthOccurrencesCount (base name: "groundTruthOccurrencesCount")', function() {
      // uncomment below and update the code to test the property groundTruthOccurrencesCount
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

    it('should have the property precision (base name: "precision")', function() {
      // uncomment below and update the code to test the property precision
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

    it('should have the property predictedDocumentCount (base name: "predictedDocumentCount")', function() {
      // uncomment below and update the code to test the property predictedDocumentCount
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

    it('should have the property predictedOccurrencesCount (base name: "predictedOccurrencesCount")', function() {
      // uncomment below and update the code to test the property predictedOccurrencesCount
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

    it('should have the property recall (base name: "recall")', function() {
      // uncomment below and update the code to test the property recall
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

    it('should have the property totalDocumentsCount (base name: "totalDocumentsCount")', function() {
      // uncomment below and update the code to test the property totalDocumentsCount
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

    it('should have the property truePositivesCount (base name: "truePositivesCount")', function() {
      // uncomment below and update the code to test the property truePositivesCount
      //var instance = new CloudDocumentAiApi.GoogleCloudDocumentaiV1beta3EvaluationMetrics();
      //expect(instance).to.be();
    });

  });

}));
