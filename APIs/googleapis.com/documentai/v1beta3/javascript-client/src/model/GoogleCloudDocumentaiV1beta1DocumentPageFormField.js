/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage from './GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage';
import GoogleCloudDocumentaiV1beta1DocumentPageLayout from './GoogleCloudDocumentaiV1beta1DocumentPageLayout';
import GoogleCloudDocumentaiV1beta1DocumentProvenance from './GoogleCloudDocumentaiV1beta1DocumentProvenance';

/**
 * The GoogleCloudDocumentaiV1beta1DocumentPageFormField model module.
 * @module model/GoogleCloudDocumentaiV1beta1DocumentPageFormField
 * @version v1beta3
 */
class GoogleCloudDocumentaiV1beta1DocumentPageFormField {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1beta1DocumentPageFormField</code>.
     * A form field detected on the page.
     * @alias module:model/GoogleCloudDocumentaiV1beta1DocumentPageFormField
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1beta1DocumentPageFormField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1beta1DocumentPageFormField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1beta1DocumentPageFormField} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1beta1DocumentPageFormField} The populated <code>GoogleCloudDocumentaiV1beta1DocumentPageFormField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1beta1DocumentPageFormField();

            if (data.hasOwnProperty('correctedKeyText')) {
                obj['correctedKeyText'] = ApiClient.convertToType(data['correctedKeyText'], 'String');
            }
            if (data.hasOwnProperty('correctedValueText')) {
                obj['correctedValueText'] = ApiClient.convertToType(data['correctedValueText'], 'String');
            }
            if (data.hasOwnProperty('fieldName')) {
                obj['fieldName'] = GoogleCloudDocumentaiV1beta1DocumentPageLayout.constructFromObject(data['fieldName']);
            }
            if (data.hasOwnProperty('fieldValue')) {
                obj['fieldValue'] = GoogleCloudDocumentaiV1beta1DocumentPageLayout.constructFromObject(data['fieldValue']);
            }
            if (data.hasOwnProperty('nameDetectedLanguages')) {
                obj['nameDetectedLanguages'] = ApiClient.convertToType(data['nameDetectedLanguages'], [GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage]);
            }
            if (data.hasOwnProperty('provenance')) {
                obj['provenance'] = GoogleCloudDocumentaiV1beta1DocumentProvenance.constructFromObject(data['provenance']);
            }
            if (data.hasOwnProperty('valueDetectedLanguages')) {
                obj['valueDetectedLanguages'] = ApiClient.convertToType(data['valueDetectedLanguages'], [GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage]);
            }
            if (data.hasOwnProperty('valueType')) {
                obj['valueType'] = ApiClient.convertToType(data['valueType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1beta1DocumentPageFormField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1beta1DocumentPageFormField</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['correctedKeyText'] && !(typeof data['correctedKeyText'] === 'string' || data['correctedKeyText'] instanceof String)) {
            throw new Error("Expected the field `correctedKeyText` to be a primitive type in the JSON string but got " + data['correctedKeyText']);
        }
        // ensure the json data is a string
        if (data['correctedValueText'] && !(typeof data['correctedValueText'] === 'string' || data['correctedValueText'] instanceof String)) {
            throw new Error("Expected the field `correctedValueText` to be a primitive type in the JSON string but got " + data['correctedValueText']);
        }
        // validate the optional field `fieldName`
        if (data['fieldName']) { // data not null
          GoogleCloudDocumentaiV1beta1DocumentPageLayout.validateJSON(data['fieldName']);
        }
        // validate the optional field `fieldValue`
        if (data['fieldValue']) { // data not null
          GoogleCloudDocumentaiV1beta1DocumentPageLayout.validateJSON(data['fieldValue']);
        }
        if (data['nameDetectedLanguages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nameDetectedLanguages'])) {
                throw new Error("Expected the field `nameDetectedLanguages` to be an array in the JSON data but got " + data['nameDetectedLanguages']);
            }
            // validate the optional field `nameDetectedLanguages` (array)
            for (const item of data['nameDetectedLanguages']) {
                GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage.validateJSON(item);
            };
        }
        // validate the optional field `provenance`
        if (data['provenance']) { // data not null
          GoogleCloudDocumentaiV1beta1DocumentProvenance.validateJSON(data['provenance']);
        }
        if (data['valueDetectedLanguages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['valueDetectedLanguages'])) {
                throw new Error("Expected the field `valueDetectedLanguages` to be an array in the JSON data but got " + data['valueDetectedLanguages']);
            }
            // validate the optional field `valueDetectedLanguages` (array)
            for (const item of data['valueDetectedLanguages']) {
                GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['valueType'] && !(typeof data['valueType'] === 'string' || data['valueType'] instanceof String)) {
            throw new Error("Expected the field `valueType` to be a primitive type in the JSON string but got " + data['valueType']);
        }

        return true;
    }


}



/**
 * Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.
 * @member {String} correctedKeyText
 */
GoogleCloudDocumentaiV1beta1DocumentPageFormField.prototype['correctedKeyText'] = undefined;

/**
 * Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.
 * @member {String} correctedValueText
 */
GoogleCloudDocumentaiV1beta1DocumentPageFormField.prototype['correctedValueText'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta1DocumentPageLayout} fieldName
 */
GoogleCloudDocumentaiV1beta1DocumentPageFormField.prototype['fieldName'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta1DocumentPageLayout} fieldValue
 */
GoogleCloudDocumentaiV1beta1DocumentPageFormField.prototype['fieldValue'] = undefined;

/**
 * A list of detected languages for name together with confidence.
 * @member {Array.<module:model/GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage>} nameDetectedLanguages
 */
GoogleCloudDocumentaiV1beta1DocumentPageFormField.prototype['nameDetectedLanguages'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta1DocumentProvenance} provenance
 */
GoogleCloudDocumentaiV1beta1DocumentPageFormField.prototype['provenance'] = undefined;

/**
 * A list of detected languages for value together with confidence.
 * @member {Array.<module:model/GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage>} valueDetectedLanguages
 */
GoogleCloudDocumentaiV1beta1DocumentPageFormField.prototype['valueDetectedLanguages'] = undefined;

/**
 * If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`
 * @member {String} valueType
 */
GoogleCloudDocumentaiV1beta1DocumentPageFormField.prototype['valueType'] = undefined;






export default GoogleCloudDocumentaiV1beta1DocumentPageFormField;

