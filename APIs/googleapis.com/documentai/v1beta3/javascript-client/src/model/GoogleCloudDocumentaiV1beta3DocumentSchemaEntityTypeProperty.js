/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDocumentaiV1beta3PropertyMetadata from './GoogleCloudDocumentaiV1beta3PropertyMetadata';

/**
 * The GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty model module.
 * @module model/GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty
 * @version v1beta3
 */
class GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty</code>.
     * Defines properties that can be part of the entity type.
     * @alias module:model/GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty} The populated <code>GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('occurrenceType')) {
                obj['occurrenceType'] = ApiClient.convertToType(data['occurrenceType'], 'String');
            }
            if (data.hasOwnProperty('propertyMetadata')) {
                obj['propertyMetadata'] = GoogleCloudDocumentaiV1beta3PropertyMetadata.constructFromObject(data['propertyMetadata']);
            }
            if (data.hasOwnProperty('valueType')) {
                obj['valueType'] = ApiClient.convertToType(data['valueType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['occurrenceType'] && !(typeof data['occurrenceType'] === 'string' || data['occurrenceType'] instanceof String)) {
            throw new Error("Expected the field `occurrenceType` to be a primitive type in the JSON string but got " + data['occurrenceType']);
        }
        // validate the optional field `propertyMetadata`
        if (data['propertyMetadata']) { // data not null
          GoogleCloudDocumentaiV1beta3PropertyMetadata.validateJSON(data['propertyMetadata']);
        }
        // ensure the json data is a string
        if (data['valueType'] && !(typeof data['valueType'] === 'string' || data['valueType'] instanceof String)) {
            throw new Error("Expected the field `valueType` to be a primitive type in the JSON string but got " + data['valueType']);
        }

        return true;
    }


}



/**
 * User defined name for the property.
 * @member {String} displayName
 */
GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty.prototype['displayName'] = undefined;

/**
 * The name of the property. Follows the same guidelines as the EntityType name.
 * @member {String} name
 */
GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty.prototype['name'] = undefined;

/**
 * Occurrence type limits the number of instances an entity type appears in the document.
 * @member {module:model/GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty.OccurrenceTypeEnum} occurrenceType
 */
GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty.prototype['occurrenceType'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta3PropertyMetadata} propertyMetadata
 */
GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty.prototype['propertyMetadata'] = undefined;

/**
 * A reference to the value type of the property. This type is subject to the same conventions as the `Entity.base_types` field.
 * @member {String} valueType
 */
GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty.prototype['valueType'] = undefined;





/**
 * Allowed values for the <code>occurrenceType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty['OccurrenceTypeEnum'] = {

    /**
     * value: "OCCURRENCE_TYPE_UNSPECIFIED"
     * @const
     */
    "OCCURRENCE_TYPE_UNSPECIFIED": "OCCURRENCE_TYPE_UNSPECIFIED",

    /**
     * value: "OPTIONAL_ONCE"
     * @const
     */
    "OPTIONAL_ONCE": "OPTIONAL_ONCE",

    /**
     * value: "OPTIONAL_MULTIPLE"
     * @const
     */
    "OPTIONAL_MULTIPLE": "OPTIONAL_MULTIPLE",

    /**
     * value: "REQUIRED_ONCE"
     * @const
     */
    "REQUIRED_ONCE": "REQUIRED_ONCE",

    /**
     * value: "REQUIRED_MULTIPLE"
     * @const
     */
    "REQUIRED_MULTIPLE": "REQUIRED_MULTIPLE"
};



export default GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty;

