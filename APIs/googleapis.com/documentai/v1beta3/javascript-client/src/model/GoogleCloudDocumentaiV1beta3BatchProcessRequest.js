/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig from './GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig';
import GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig from './GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig';
import GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig from './GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig';
import GoogleCloudDocumentaiV1beta3DocumentOutputConfig from './GoogleCloudDocumentaiV1beta3DocumentOutputConfig';
import GoogleCloudDocumentaiV1beta3ProcessOptions from './GoogleCloudDocumentaiV1beta3ProcessOptions';

/**
 * The GoogleCloudDocumentaiV1beta3BatchProcessRequest model module.
 * @module model/GoogleCloudDocumentaiV1beta3BatchProcessRequest
 * @version v1beta3
 */
class GoogleCloudDocumentaiV1beta3BatchProcessRequest {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1beta3BatchProcessRequest</code>.
     * Request message for BatchProcessDocuments.
     * @alias module:model/GoogleCloudDocumentaiV1beta3BatchProcessRequest
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1beta3BatchProcessRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1beta3BatchProcessRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1beta3BatchProcessRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1beta3BatchProcessRequest} The populated <code>GoogleCloudDocumentaiV1beta3BatchProcessRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1beta3BatchProcessRequest();

            if (data.hasOwnProperty('documentOutputConfig')) {
                obj['documentOutputConfig'] = GoogleCloudDocumentaiV1beta3DocumentOutputConfig.constructFromObject(data['documentOutputConfig']);
            }
            if (data.hasOwnProperty('inputConfigs')) {
                obj['inputConfigs'] = ApiClient.convertToType(data['inputConfigs'], [GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig]);
            }
            if (data.hasOwnProperty('inputDocuments')) {
                obj['inputDocuments'] = GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig.constructFromObject(data['inputDocuments']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('outputConfig')) {
                obj['outputConfig'] = GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig.constructFromObject(data['outputConfig']);
            }
            if (data.hasOwnProperty('processOptions')) {
                obj['processOptions'] = GoogleCloudDocumentaiV1beta3ProcessOptions.constructFromObject(data['processOptions']);
            }
            if (data.hasOwnProperty('skipHumanReview')) {
                obj['skipHumanReview'] = ApiClient.convertToType(data['skipHumanReview'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1beta3BatchProcessRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1beta3BatchProcessRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `documentOutputConfig`
        if (data['documentOutputConfig']) { // data not null
          GoogleCloudDocumentaiV1beta3DocumentOutputConfig.validateJSON(data['documentOutputConfig']);
        }
        if (data['inputConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['inputConfigs'])) {
                throw new Error("Expected the field `inputConfigs` to be an array in the JSON data but got " + data['inputConfigs']);
            }
            // validate the optional field `inputConfigs` (array)
            for (const item of data['inputConfigs']) {
                GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig.validateJSON(item);
            };
        }
        // validate the optional field `inputDocuments`
        if (data['inputDocuments']) { // data not null
          GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig.validateJSON(data['inputDocuments']);
        }
        // validate the optional field `outputConfig`
        if (data['outputConfig']) { // data not null
          GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig.validateJSON(data['outputConfig']);
        }
        // validate the optional field `processOptions`
        if (data['processOptions']) { // data not null
          GoogleCloudDocumentaiV1beta3ProcessOptions.validateJSON(data['processOptions']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDocumentaiV1beta3DocumentOutputConfig} documentOutputConfig
 */
GoogleCloudDocumentaiV1beta3BatchProcessRequest.prototype['documentOutputConfig'] = undefined;

/**
 * The input config for each single document in the batch process.
 * @member {Array.<module:model/GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig>} inputConfigs
 */
GoogleCloudDocumentaiV1beta3BatchProcessRequest.prototype['inputConfigs'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig} inputDocuments
 */
GoogleCloudDocumentaiV1beta3BatchProcessRequest.prototype['inputDocuments'] = undefined;

/**
 * Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.
 * @member {Object.<String, String>} labels
 */
GoogleCloudDocumentaiV1beta3BatchProcessRequest.prototype['labels'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig} outputConfig
 */
GoogleCloudDocumentaiV1beta3BatchProcessRequest.prototype['outputConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudDocumentaiV1beta3ProcessOptions} processOptions
 */
GoogleCloudDocumentaiV1beta3BatchProcessRequest.prototype['processOptions'] = undefined;

/**
 * Whether human review should be skipped for this request. Default to `false`.
 * @member {Boolean} skipHumanReview
 */
GoogleCloudDocumentaiV1beta3BatchProcessRequest.prototype['skipHumanReview'] = undefined;






export default GoogleCloudDocumentaiV1beta3BatchProcessRequest;

