/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDocumentaiV1beta1GcsDestination from './GoogleCloudDocumentaiV1beta1GcsDestination';

/**
 * The GoogleCloudDocumentaiV1beta1OutputConfig model module.
 * @module model/GoogleCloudDocumentaiV1beta1OutputConfig
 * @version v1beta3
 */
class GoogleCloudDocumentaiV1beta1OutputConfig {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1beta1OutputConfig</code>.
     * The desired output location and metadata.
     * @alias module:model/GoogleCloudDocumentaiV1beta1OutputConfig
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1beta1OutputConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1beta1OutputConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1beta1OutputConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1beta1OutputConfig} The populated <code>GoogleCloudDocumentaiV1beta1OutputConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1beta1OutputConfig();

            if (data.hasOwnProperty('gcsDestination')) {
                obj['gcsDestination'] = GoogleCloudDocumentaiV1beta1GcsDestination.constructFromObject(data['gcsDestination']);
            }
            if (data.hasOwnProperty('pagesPerShard')) {
                obj['pagesPerShard'] = ApiClient.convertToType(data['pagesPerShard'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1beta1OutputConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1beta1OutputConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `gcsDestination`
        if (data['gcsDestination']) { // data not null
          GoogleCloudDocumentaiV1beta1GcsDestination.validateJSON(data['gcsDestination']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDocumentaiV1beta1GcsDestination} gcsDestination
 */
GoogleCloudDocumentaiV1beta1OutputConfig.prototype['gcsDestination'] = undefined;

/**
 * The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json
 * @member {Number} pagesPerShard
 */
GoogleCloudDocumentaiV1beta1OutputConfig.prototype['pagesPerShard'] = undefined;






export default GoogleCloudDocumentaiV1beta1OutputConfig;

