/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDocumentaiV1beta3DocumentSchema from './GoogleCloudDocumentaiV1beta3DocumentSchema';

/**
 * The GoogleCloudDocumentaiV1beta3DatasetSchema model module.
 * @module model/GoogleCloudDocumentaiV1beta3DatasetSchema
 * @version v1beta3
 */
class GoogleCloudDocumentaiV1beta3DatasetSchema {
    /**
     * Constructs a new <code>GoogleCloudDocumentaiV1beta3DatasetSchema</code>.
     * Dataset Schema.
     * @alias module:model/GoogleCloudDocumentaiV1beta3DatasetSchema
     */
    constructor() { 
        
        GoogleCloudDocumentaiV1beta3DatasetSchema.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDocumentaiV1beta3DatasetSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDocumentaiV1beta3DatasetSchema} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDocumentaiV1beta3DatasetSchema} The populated <code>GoogleCloudDocumentaiV1beta3DatasetSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDocumentaiV1beta3DatasetSchema();

            if (data.hasOwnProperty('documentSchema')) {
                obj['documentSchema'] = GoogleCloudDocumentaiV1beta3DocumentSchema.constructFromObject(data['documentSchema']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDocumentaiV1beta3DatasetSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDocumentaiV1beta3DatasetSchema</code>.
     */
    static validateJSON(data) {
        // validate the optional field `documentSchema`
        if (data['documentSchema']) { // data not null
          GoogleCloudDocumentaiV1beta3DocumentSchema.validateJSON(data['documentSchema']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDocumentaiV1beta3DocumentSchema} documentSchema
 */
GoogleCloudDocumentaiV1beta3DatasetSchema.prototype['documentSchema'] = undefined;

/**
 * Dataset schema resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset/datasetSchema`
 * @member {String} name
 */
GoogleCloudDocumentaiV1beta3DatasetSchema.prototype['name'] = undefined;






export default GoogleCloudDocumentaiV1beta3DatasetSchema;

