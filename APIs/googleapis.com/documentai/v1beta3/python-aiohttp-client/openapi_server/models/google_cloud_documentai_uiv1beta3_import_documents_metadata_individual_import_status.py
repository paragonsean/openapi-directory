# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_uiv1beta3_document_id import GoogleCloudDocumentaiUiv1beta3DocumentId
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_gcs_source: str=None, output_document_id: GoogleCloudDocumentaiUiv1beta3DocumentId=None, output_gcs_destination: str=None, status: GoogleRpcStatus=None):
        """GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus - a model defined in OpenAPI

        :param input_gcs_source: The input_gcs_source of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :param output_document_id: The output_document_id of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :param output_gcs_destination: The output_gcs_destination of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :param status: The status of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        """
        self.openapi_types = {
            'input_gcs_source': str,
            'output_document_id': GoogleCloudDocumentaiUiv1beta3DocumentId,
            'output_gcs_destination': str,
            'status': GoogleRpcStatus
        }

        self.attribute_map = {
            'input_gcs_source': 'inputGcsSource',
            'output_document_id': 'outputDocumentId',
            'output_gcs_destination': 'outputGcsDestination',
            'status': 'status'
        }

        self._input_gcs_source = input_gcs_source
        self._output_document_id = output_document_id
        self._output_gcs_destination = output_gcs_destination
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_gcs_source(self):
        """Gets the input_gcs_source of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.

        The source Cloud Storage URI of the document.

        :return: The input_gcs_source of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :rtype: str
        """
        return self._input_gcs_source

    @input_gcs_source.setter
    def input_gcs_source(self, input_gcs_source):
        """Sets the input_gcs_source of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.

        The source Cloud Storage URI of the document.

        :param input_gcs_source: The input_gcs_source of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :type input_gcs_source: str
        """

        self._input_gcs_source = input_gcs_source

    @property
    def output_document_id(self):
        """Gets the output_document_id of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.


        :return: The output_document_id of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :rtype: GoogleCloudDocumentaiUiv1beta3DocumentId
        """
        return self._output_document_id

    @output_document_id.setter
    def output_document_id(self, output_document_id):
        """Sets the output_document_id of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.


        :param output_document_id: The output_document_id of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :type output_document_id: GoogleCloudDocumentaiUiv1beta3DocumentId
        """

        self._output_document_id = output_document_id

    @property
    def output_gcs_destination(self):
        """Gets the output_gcs_destination of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.

        The output_gcs_destination of the processed document if it was successful, otherwise empty.

        :return: The output_gcs_destination of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :rtype: str
        """
        return self._output_gcs_destination

    @output_gcs_destination.setter
    def output_gcs_destination(self, output_gcs_destination):
        """Sets the output_gcs_destination of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.

        The output_gcs_destination of the processed document if it was successful, otherwise empty.

        :param output_gcs_destination: The output_gcs_destination of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :type output_gcs_destination: str
        """

        self._output_gcs_destination = output_gcs_destination

    @property
    def status(self):
        """Gets the status of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.


        :return: The status of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :rtype: GoogleRpcStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.


        :param status: The status of this GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus.
        :type status: GoogleRpcStatus
        """

        self._status = status
