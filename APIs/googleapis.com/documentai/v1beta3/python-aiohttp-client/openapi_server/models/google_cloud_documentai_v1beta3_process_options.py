# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1beta3_document_schema import GoogleCloudDocumentaiV1beta3DocumentSchema
from openapi_server.models.google_cloud_documentai_v1beta3_ocr_config import GoogleCloudDocumentaiV1beta3OcrConfig
from openapi_server.models.google_cloud_documentai_v1beta3_process_options_individual_page_selector import GoogleCloudDocumentaiV1beta3ProcessOptionsIndividualPageSelector
from openapi_server import util


class GoogleCloudDocumentaiV1beta3ProcessOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, from_end: int=None, from_start: int=None, individual_page_selector: GoogleCloudDocumentaiV1beta3ProcessOptionsIndividualPageSelector=None, ocr_config: GoogleCloudDocumentaiV1beta3OcrConfig=None, schema_override: GoogleCloudDocumentaiV1beta3DocumentSchema=None):
        """GoogleCloudDocumentaiV1beta3ProcessOptions - a model defined in OpenAPI

        :param from_end: The from_end of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :param from_start: The from_start of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :param individual_page_selector: The individual_page_selector of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :param ocr_config: The ocr_config of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :param schema_override: The schema_override of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        """
        self.openapi_types = {
            'from_end': int,
            'from_start': int,
            'individual_page_selector': GoogleCloudDocumentaiV1beta3ProcessOptionsIndividualPageSelector,
            'ocr_config': GoogleCloudDocumentaiV1beta3OcrConfig,
            'schema_override': GoogleCloudDocumentaiV1beta3DocumentSchema
        }

        self.attribute_map = {
            'from_end': 'fromEnd',
            'from_start': 'fromStart',
            'individual_page_selector': 'individualPageSelector',
            'ocr_config': 'ocrConfig',
            'schema_override': 'schemaOverride'
        }

        self._from_end = from_end
        self._from_start = from_start
        self._individual_page_selector = individual_page_selector
        self._ocr_config = ocr_config
        self._schema_override = schema_override

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3ProcessOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3ProcessOptions of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def from_end(self):
        """Gets the from_end of this GoogleCloudDocumentaiV1beta3ProcessOptions.

        Only process certain pages from the end, same as above.

        :return: The from_end of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :rtype: int
        """
        return self._from_end

    @from_end.setter
    def from_end(self, from_end):
        """Sets the from_end of this GoogleCloudDocumentaiV1beta3ProcessOptions.

        Only process certain pages from the end, same as above.

        :param from_end: The from_end of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :type from_end: int
        """

        self._from_end = from_end

    @property
    def from_start(self):
        """Gets the from_start of this GoogleCloudDocumentaiV1beta3ProcessOptions.

        Only process certain pages from the start. Process all if the document has fewer pages.

        :return: The from_start of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :rtype: int
        """
        return self._from_start

    @from_start.setter
    def from_start(self, from_start):
        """Sets the from_start of this GoogleCloudDocumentaiV1beta3ProcessOptions.

        Only process certain pages from the start. Process all if the document has fewer pages.

        :param from_start: The from_start of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :type from_start: int
        """

        self._from_start = from_start

    @property
    def individual_page_selector(self):
        """Gets the individual_page_selector of this GoogleCloudDocumentaiV1beta3ProcessOptions.


        :return: The individual_page_selector of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :rtype: GoogleCloudDocumentaiV1beta3ProcessOptionsIndividualPageSelector
        """
        return self._individual_page_selector

    @individual_page_selector.setter
    def individual_page_selector(self, individual_page_selector):
        """Sets the individual_page_selector of this GoogleCloudDocumentaiV1beta3ProcessOptions.


        :param individual_page_selector: The individual_page_selector of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :type individual_page_selector: GoogleCloudDocumentaiV1beta3ProcessOptionsIndividualPageSelector
        """

        self._individual_page_selector = individual_page_selector

    @property
    def ocr_config(self):
        """Gets the ocr_config of this GoogleCloudDocumentaiV1beta3ProcessOptions.


        :return: The ocr_config of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :rtype: GoogleCloudDocumentaiV1beta3OcrConfig
        """
        return self._ocr_config

    @ocr_config.setter
    def ocr_config(self, ocr_config):
        """Sets the ocr_config of this GoogleCloudDocumentaiV1beta3ProcessOptions.


        :param ocr_config: The ocr_config of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :type ocr_config: GoogleCloudDocumentaiV1beta3OcrConfig
        """

        self._ocr_config = ocr_config

    @property
    def schema_override(self):
        """Gets the schema_override of this GoogleCloudDocumentaiV1beta3ProcessOptions.


        :return: The schema_override of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :rtype: GoogleCloudDocumentaiV1beta3DocumentSchema
        """
        return self._schema_override

    @schema_override.setter
    def schema_override(self, schema_override):
        """Sets the schema_override of this GoogleCloudDocumentaiV1beta3ProcessOptions.


        :param schema_override: The schema_override of this GoogleCloudDocumentaiV1beta3ProcessOptions.
        :type schema_override: GoogleCloudDocumentaiV1beta3DocumentSchema
        """

        self._schema_override = schema_override
