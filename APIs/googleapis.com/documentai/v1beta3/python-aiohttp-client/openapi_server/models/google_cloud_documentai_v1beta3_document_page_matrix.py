# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDocumentaiV1beta3DocumentPageMatrix(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cols: int=None, data: str=None, rows: int=None, type: int=None):
        """GoogleCloudDocumentaiV1beta3DocumentPageMatrix - a model defined in OpenAPI

        :param cols: The cols of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :param data: The data of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :param rows: The rows of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :param type: The type of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        """
        self.openapi_types = {
            'cols': int,
            'data': str,
            'rows': int,
            'type': int
        }

        self.attribute_map = {
            'cols': 'cols',
            'data': 'data',
            'rows': 'rows',
            'type': 'type'
        }

        self._cols = cols
        self._data = data
        self._rows = rows
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3DocumentPageMatrix':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3DocumentPageMatrix of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cols(self):
        """Gets the cols of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.

        Number of columns in the matrix.

        :return: The cols of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :rtype: int
        """
        return self._cols

    @cols.setter
    def cols(self, cols):
        """Sets the cols of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.

        Number of columns in the matrix.

        :param cols: The cols of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :type cols: int
        """

        self._cols = cols

    @property
    def data(self):
        """Gets the data of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.

        The matrix data.

        :return: The data of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.

        The matrix data.

        :param data: The data of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :type data: str
        """

        self._data = data

    @property
    def rows(self):
        """Gets the rows of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.

        Number of rows in the matrix.

        :return: The rows of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :rtype: int
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.

        Number of rows in the matrix.

        :param rows: The rows of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :type rows: int
        """

        self._rows = rows

    @property
    def type(self):
        """Gets the type of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.

        This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html

        :return: The type of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.

        This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html

        :param type: The type of this GoogleCloudDocumentaiV1beta3DocumentPageMatrix.
        :type type: int
        """

        self._type = type
