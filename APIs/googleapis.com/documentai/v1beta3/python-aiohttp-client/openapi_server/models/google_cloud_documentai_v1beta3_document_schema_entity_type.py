# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1beta3_document_schema_entity_type_enum_values import GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues
from openapi_server.models.google_cloud_documentai_v1beta3_document_schema_entity_type_property import GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty
from openapi_server.models.google_cloud_documentai_v1beta3_entity_type_metadata import GoogleCloudDocumentaiV1beta3EntityTypeMetadata
from openapi_server import util


class GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_types: List[str]=None, display_name: str=None, entity_type_metadata: GoogleCloudDocumentaiV1beta3EntityTypeMetadata=None, enum_values: GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues=None, name: str=None, properties: List[GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty]=None):
        """GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType - a model defined in OpenAPI

        :param base_types: The base_types of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :param display_name: The display_name of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :param entity_type_metadata: The entity_type_metadata of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :param enum_values: The enum_values of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :param name: The name of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :param properties: The properties of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        """
        self.openapi_types = {
            'base_types': List[str],
            'display_name': str,
            'entity_type_metadata': GoogleCloudDocumentaiV1beta3EntityTypeMetadata,
            'enum_values': GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues,
            'name': str,
            'properties': List[GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty]
        }

        self.attribute_map = {
            'base_types': 'baseTypes',
            'display_name': 'displayName',
            'entity_type_metadata': 'entityTypeMetadata',
            'enum_values': 'enumValues',
            'name': 'name',
            'properties': 'properties'
        }

        self._base_types = base_types
        self._display_name = display_name
        self._entity_type_metadata = entity_type_metadata
        self._enum_values = enum_values
        self._name = name
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_types(self):
        """Gets the base_types of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.

        The entity type that this type is derived from. For now, one and only one should be set.

        :return: The base_types of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :rtype: List[str]
        """
        return self._base_types

    @base_types.setter
    def base_types(self, base_types):
        """Sets the base_types of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.

        The entity type that this type is derived from. For now, one and only one should be set.

        :param base_types: The base_types of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :type base_types: List[str]
        """

        self._base_types = base_types

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.

        User defined name for the type.

        :return: The display_name of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.

        User defined name for the type.

        :param display_name: The display_name of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def entity_type_metadata(self):
        """Gets the entity_type_metadata of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.


        :return: The entity_type_metadata of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :rtype: GoogleCloudDocumentaiV1beta3EntityTypeMetadata
        """
        return self._entity_type_metadata

    @entity_type_metadata.setter
    def entity_type_metadata(self, entity_type_metadata):
        """Sets the entity_type_metadata of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.


        :param entity_type_metadata: The entity_type_metadata of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :type entity_type_metadata: GoogleCloudDocumentaiV1beta3EntityTypeMetadata
        """

        self._entity_type_metadata = entity_type_metadata

    @property
    def enum_values(self):
        """Gets the enum_values of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.


        :return: The enum_values of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :rtype: GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues
        """
        return self._enum_values

    @enum_values.setter
    def enum_values(self, enum_values):
        """Sets the enum_values of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.


        :param enum_values: The enum_values of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :type enum_values: GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeEnumValues
        """

        self._enum_values = enum_values

    @property
    def name(self):
        """Gets the name of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.

        Name of the type. It must be unique within the schema file and cannot be a \"Common Type\". The following naming conventions are used: - Use `snake_casing`. - Name matching is case-sensitive. - Maximum 64 characters. - Must start with a letter. - Allowed characters: ASCII letters `[a-z0-9_-]`. (For backward compatibility internal infrastructure and tooling can handle any ascii character.) - The `/` is sometimes used to denote a property of a type. For example `line_item/amount`. This convention is deprecated, but will still be honored for backward compatibility.

        :return: The name of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.

        Name of the type. It must be unique within the schema file and cannot be a \"Common Type\". The following naming conventions are used: - Use `snake_casing`. - Name matching is case-sensitive. - Maximum 64 characters. - Must start with a letter. - Allowed characters: ASCII letters `[a-z0-9_-]`. (For backward compatibility internal infrastructure and tooling can handle any ascii character.) - The `/` is sometimes used to denote a property of a type. For example `line_item/amount`. This convention is deprecated, but will still be honored for backward compatibility.

        :param name: The name of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :type name: str
        """

        self._name = name

    @property
    def properties(self):
        """Gets the properties of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.

        Description the nested structure, or composition of an entity.

        :return: The properties of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :rtype: List[GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.

        Description the nested structure, or composition of an entity.

        :param properties: The properties of this GoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.
        :type properties: List[GoogleCloudDocumentaiV1beta3DocumentSchemaEntityTypeProperty]
        """

        self._properties = properties
