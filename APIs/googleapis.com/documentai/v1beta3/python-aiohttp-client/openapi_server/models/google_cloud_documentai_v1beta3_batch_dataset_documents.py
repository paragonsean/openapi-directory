# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1beta3_batch_dataset_documents_individual_document_ids import GoogleCloudDocumentaiV1beta3BatchDatasetDocumentsIndividualDocumentIds
from openapi_server import util


class GoogleCloudDocumentaiV1beta3BatchDatasetDocuments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: str=None, individual_document_ids: GoogleCloudDocumentaiV1beta3BatchDatasetDocumentsIndividualDocumentIds=None):
        """GoogleCloudDocumentaiV1beta3BatchDatasetDocuments - a model defined in OpenAPI

        :param filter: The filter of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.
        :param individual_document_ids: The individual_document_ids of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.
        """
        self.openapi_types = {
            'filter': str,
            'individual_document_ids': GoogleCloudDocumentaiV1beta3BatchDatasetDocumentsIndividualDocumentIds
        }

        self.attribute_map = {
            'filter': 'filter',
            'individual_document_ids': 'individualDocumentIds'
        }

        self._filter = filter
        self._individual_document_ids = individual_document_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3BatchDatasetDocuments':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3BatchDatasetDocuments of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.

        A filter matching the documents. Follows the same format and restriction as [google.cloud.documentai.master.ListDocumentsRequest.filter].

        :return: The filter of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.

        A filter matching the documents. Follows the same format and restriction as [google.cloud.documentai.master.ListDocumentsRequest.filter].

        :param filter: The filter of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.
        :type filter: str
        """

        self._filter = filter

    @property
    def individual_document_ids(self):
        """Gets the individual_document_ids of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.


        :return: The individual_document_ids of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.
        :rtype: GoogleCloudDocumentaiV1beta3BatchDatasetDocumentsIndividualDocumentIds
        """
        return self._individual_document_ids

    @individual_document_ids.setter
    def individual_document_ids(self, individual_document_ids):
        """Sets the individual_document_ids of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.


        :param individual_document_ids: The individual_document_ids of this GoogleCloudDocumentaiV1beta3BatchDatasetDocuments.
        :type individual_document_ids: GoogleCloudDocumentaiV1beta3BatchDatasetDocumentsIndividualDocumentIds
        """

        self._individual_document_ids = individual_document_ids
