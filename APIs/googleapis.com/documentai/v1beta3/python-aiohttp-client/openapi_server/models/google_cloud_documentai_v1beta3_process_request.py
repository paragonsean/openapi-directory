# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1beta3_document import GoogleCloudDocumentaiV1beta3Document
from openapi_server.models.google_cloud_documentai_v1beta3_gcs_document import GoogleCloudDocumentaiV1beta3GcsDocument
from openapi_server.models.google_cloud_documentai_v1beta3_process_options import GoogleCloudDocumentaiV1beta3ProcessOptions
from openapi_server.models.google_cloud_documentai_v1beta3_raw_document import GoogleCloudDocumentaiV1beta3RawDocument
from openapi_server import util


class GoogleCloudDocumentaiV1beta3ProcessRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document: GoogleCloudDocumentaiV1beta3Document=None, field_mask: str=None, gcs_document: GoogleCloudDocumentaiV1beta3GcsDocument=None, inline_document: GoogleCloudDocumentaiV1beta3Document=None, labels: Dict[str, str]=None, process_options: GoogleCloudDocumentaiV1beta3ProcessOptions=None, raw_document: GoogleCloudDocumentaiV1beta3RawDocument=None, skip_human_review: bool=None):
        """GoogleCloudDocumentaiV1beta3ProcessRequest - a model defined in OpenAPI

        :param document: The document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :param field_mask: The field_mask of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :param gcs_document: The gcs_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :param inline_document: The inline_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :param labels: The labels of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :param process_options: The process_options of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :param raw_document: The raw_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :param skip_human_review: The skip_human_review of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        """
        self.openapi_types = {
            'document': GoogleCloudDocumentaiV1beta3Document,
            'field_mask': str,
            'gcs_document': GoogleCloudDocumentaiV1beta3GcsDocument,
            'inline_document': GoogleCloudDocumentaiV1beta3Document,
            'labels': Dict[str, str],
            'process_options': GoogleCloudDocumentaiV1beta3ProcessOptions,
            'raw_document': GoogleCloudDocumentaiV1beta3RawDocument,
            'skip_human_review': bool
        }

        self.attribute_map = {
            'document': 'document',
            'field_mask': 'fieldMask',
            'gcs_document': 'gcsDocument',
            'inline_document': 'inlineDocument',
            'labels': 'labels',
            'process_options': 'processOptions',
            'raw_document': 'rawDocument',
            'skip_human_review': 'skipHumanReview'
        }

        self._document = document
        self._field_mask = field_mask
        self._gcs_document = gcs_document
        self._inline_document = inline_document
        self._labels = labels
        self._process_options = process_options
        self._raw_document = raw_document
        self._skip_human_review = skip_human_review

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3ProcessRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3ProcessRequest of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document(self):
        """Gets the document of this GoogleCloudDocumentaiV1beta3ProcessRequest.


        :return: The document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :rtype: GoogleCloudDocumentaiV1beta3Document
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this GoogleCloudDocumentaiV1beta3ProcessRequest.


        :param document: The document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :type document: GoogleCloudDocumentaiV1beta3Document
        """

        self._document = document

    @property
    def field_mask(self):
        """Gets the field_mask of this GoogleCloudDocumentaiV1beta3ProcessRequest.

        Specifies which fields to include in the ProcessResponse.document output. Only supports top-level document and pages field, so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`.

        :return: The field_mask of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :rtype: str
        """
        return self._field_mask

    @field_mask.setter
    def field_mask(self, field_mask):
        """Sets the field_mask of this GoogleCloudDocumentaiV1beta3ProcessRequest.

        Specifies which fields to include in the ProcessResponse.document output. Only supports top-level document and pages field, so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`.

        :param field_mask: The field_mask of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :type field_mask: str
        """

        self._field_mask = field_mask

    @property
    def gcs_document(self):
        """Gets the gcs_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.


        :return: The gcs_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :rtype: GoogleCloudDocumentaiV1beta3GcsDocument
        """
        return self._gcs_document

    @gcs_document.setter
    def gcs_document(self, gcs_document):
        """Sets the gcs_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.


        :param gcs_document: The gcs_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :type gcs_document: GoogleCloudDocumentaiV1beta3GcsDocument
        """

        self._gcs_document = gcs_document

    @property
    def inline_document(self):
        """Gets the inline_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.


        :return: The inline_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :rtype: GoogleCloudDocumentaiV1beta3Document
        """
        return self._inline_document

    @inline_document.setter
    def inline_document(self, inline_document):
        """Sets the inline_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.


        :param inline_document: The inline_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :type inline_document: GoogleCloudDocumentaiV1beta3Document
        """

        self._inline_document = inline_document

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudDocumentaiV1beta3ProcessRequest.

        Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.

        :return: The labels of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudDocumentaiV1beta3ProcessRequest.

        Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.

        :param labels: The labels of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def process_options(self):
        """Gets the process_options of this GoogleCloudDocumentaiV1beta3ProcessRequest.


        :return: The process_options of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :rtype: GoogleCloudDocumentaiV1beta3ProcessOptions
        """
        return self._process_options

    @process_options.setter
    def process_options(self, process_options):
        """Sets the process_options of this GoogleCloudDocumentaiV1beta3ProcessRequest.


        :param process_options: The process_options of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :type process_options: GoogleCloudDocumentaiV1beta3ProcessOptions
        """

        self._process_options = process_options

    @property
    def raw_document(self):
        """Gets the raw_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.


        :return: The raw_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :rtype: GoogleCloudDocumentaiV1beta3RawDocument
        """
        return self._raw_document

    @raw_document.setter
    def raw_document(self, raw_document):
        """Sets the raw_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.


        :param raw_document: The raw_document of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :type raw_document: GoogleCloudDocumentaiV1beta3RawDocument
        """

        self._raw_document = raw_document

    @property
    def skip_human_review(self):
        """Gets the skip_human_review of this GoogleCloudDocumentaiV1beta3ProcessRequest.

        Whether human review should be skipped for this request. Default to `false`.

        :return: The skip_human_review of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :rtype: bool
        """
        return self._skip_human_review

    @skip_human_review.setter
    def skip_human_review(self, skip_human_review):
        """Sets the skip_human_review of this GoogleCloudDocumentaiV1beta3ProcessRequest.

        Whether human review should be skipped for this request. Default to `false`.

        :param skip_human_review: The skip_human_review of this GoogleCloudDocumentaiV1beta3ProcessRequest.
        :type skip_human_review: bool
        """

        self._skip_human_review = skip_human_review
