# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDocumentaiV1beta3ListDocumentsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: str=None, page_size: int=None, page_token: str=None, return_total_size: bool=None, skip: int=None):
        """GoogleCloudDocumentaiV1beta3ListDocumentsRequest - a model defined in OpenAPI

        :param filter: The filter of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :param page_size: The page_size of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :param page_token: The page_token of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :param return_total_size: The return_total_size of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :param skip: The skip of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        """
        self.openapi_types = {
            'filter': str,
            'page_size': int,
            'page_token': str,
            'return_total_size': bool,
            'skip': int
        }

        self.attribute_map = {
            'filter': 'filter',
            'page_size': 'pageSize',
            'page_token': 'pageToken',
            'return_total_size': 'returnTotalSize',
            'skip': 'skip'
        }

        self._filter = filter
        self._page_size = page_size
        self._page_token = page_token
        self._return_total_size = return_total_size
        self._skip = skip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3ListDocumentsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3ListDocumentsRequest of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.

        Optional. Query to filter the documents based on https://google.aip.dev/160. ## Currently support query strings are: `SplitType=DATASET_SPLIT_TEST|DATASET_SPLIT_TRAIN|DATASET_SPLIT_UNASSIGNED` - `LabelingState=DOCUMENT_LABELED|DOCUMENT_UNLABELED|DOCUMENT_AUTO_LABELED` - `DisplayName=\\\"file_name.pdf\\\"` - `EntityType=abc/def` - `TagName=\\\"auto-labeling-running\\\"|\\\"sampled\\\"` Note: - Only `AND`, `=` and `!=` are supported. e.g. `DisplayName=file_name AND EntityType!=abc` IS supported. - Wildcard `*` is supported only in `DisplayName` filter - No duplicate filter keys are allowed, e.g. `EntityType=a AND EntityType=b` is NOT supported. - String match is case sensitive (for filter `DisplayName` & `EntityType`).

        :return: The filter of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.

        Optional. Query to filter the documents based on https://google.aip.dev/160. ## Currently support query strings are: `SplitType=DATASET_SPLIT_TEST|DATASET_SPLIT_TRAIN|DATASET_SPLIT_UNASSIGNED` - `LabelingState=DOCUMENT_LABELED|DOCUMENT_UNLABELED|DOCUMENT_AUTO_LABELED` - `DisplayName=\\\"file_name.pdf\\\"` - `EntityType=abc/def` - `TagName=\\\"auto-labeling-running\\\"|\\\"sampled\\\"` Note: - Only `AND`, `=` and `!=` are supported. e.g. `DisplayName=file_name AND EntityType!=abc` IS supported. - Wildcard `*` is supported only in `DisplayName` filter - No duplicate filter keys are allowed, e.g. `EntityType=a AND EntityType=b` is NOT supported. - String match is case sensitive (for filter `DisplayName` & `EntityType`).

        :param filter: The filter of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :type filter: str
        """

        self._filter = filter

    @property
    def page_size(self):
        """Gets the page_size of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.

        The maximum number of documents to return. The service may return fewer than this value. If unspecified, at most 20 documents will be returned. The maximum value is 100; values above 100 will be coerced to 100.

        :return: The page_size of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.

        The maximum number of documents to return. The service may return fewer than this value. If unspecified, at most 20 documents will be returned. The maximum value is 100; values above 100 will be coerced to 100.

        :param page_size: The page_size of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def page_token(self):
        """Gets the page_token of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.

        A page token, received from a previous `ListDocuments` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDocuments` must match the call that provided the page token.

        :return: The page_token of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :rtype: str
        """
        return self._page_token

    @page_token.setter
    def page_token(self, page_token):
        """Sets the page_token of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.

        A page token, received from a previous `ListDocuments` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDocuments` must match the call that provided the page token.

        :param page_token: The page_token of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :type page_token: str
        """

        self._page_token = page_token

    @property
    def return_total_size(self):
        """Gets the return_total_size of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.

        Optional. Controls if the request requires a total size of matched documents. See ListDocumentsResponse.total_size. Enabling this flag may adversely impact performance. Defaults to false.

        :return: The return_total_size of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :rtype: bool
        """
        return self._return_total_size

    @return_total_size.setter
    def return_total_size(self, return_total_size):
        """Sets the return_total_size of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.

        Optional. Controls if the request requires a total size of matched documents. See ListDocumentsResponse.total_size. Enabling this flag may adversely impact performance. Defaults to false.

        :param return_total_size: The return_total_size of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :type return_total_size: bool
        """

        self._return_total_size = return_total_size

    @property
    def skip(self):
        """Gets the skip of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.

        Optional. Number of results to skip beginning from the `page_token` if provided. https://google.aip.dev/158#skipping-results. It must be a non-negative integer. Negative values will be rejected. Note that this is not the number of pages to skip. If this value causes the cursor to move past the end of results, ListDocumentsResponse.document_metadata and ListDocumentsResponse.next_page_token will be empty.

        :return: The skip of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :rtype: int
        """
        return self._skip

    @skip.setter
    def skip(self, skip):
        """Sets the skip of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.

        Optional. Number of results to skip beginning from the `page_token` if provided. https://google.aip.dev/158#skipping-results. It must be a non-negative integer. Negative values will be rejected. Note that this is not the number of pages to skip. If this value causes the cursor to move past the end of results, ListDocumentsResponse.document_metadata and ListDocumentsResponse.next_page_token will be empty.

        :param skip: The skip of this GoogleCloudDocumentaiV1beta3ListDocumentsRequest.
        :type skip: int
        """

        self._skip = skip
