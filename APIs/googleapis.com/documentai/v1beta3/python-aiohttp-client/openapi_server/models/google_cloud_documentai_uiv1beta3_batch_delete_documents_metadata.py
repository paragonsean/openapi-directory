# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_uiv1beta3_batch_delete_documents_metadata_individual_batch_delete_status import GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus
from openapi_server.models.google_cloud_documentai_uiv1beta3_common_operation_metadata import GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata
from openapi_server import util


class GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, common_metadata: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata=None, error_document_count: int=None, individual_batch_delete_statuses: List[GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus]=None, total_document_count: int=None):
        """GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata - a model defined in OpenAPI

        :param common_metadata: The common_metadata of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :param error_document_count: The error_document_count of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :param individual_batch_delete_statuses: The individual_batch_delete_statuses of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :param total_document_count: The total_document_count of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        """
        self.openapi_types = {
            'common_metadata': GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata,
            'error_document_count': int,
            'individual_batch_delete_statuses': List[GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus],
            'total_document_count': int
        }

        self.attribute_map = {
            'common_metadata': 'commonMetadata',
            'error_document_count': 'errorDocumentCount',
            'individual_batch_delete_statuses': 'individualBatchDeleteStatuses',
            'total_document_count': 'totalDocumentCount'
        }

        self._common_metadata = common_metadata
        self._error_document_count = error_document_count
        self._individual_batch_delete_statuses = individual_batch_delete_statuses
        self._total_document_count = total_document_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def common_metadata(self):
        """Gets the common_metadata of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.


        :return: The common_metadata of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :rtype: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata
        """
        return self._common_metadata

    @common_metadata.setter
    def common_metadata(self, common_metadata):
        """Sets the common_metadata of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.


        :param common_metadata: The common_metadata of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :type common_metadata: GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata
        """

        self._common_metadata = common_metadata

    @property
    def error_document_count(self):
        """Gets the error_document_count of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.

        Total number of documents that failed to be deleted in storage.

        :return: The error_document_count of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :rtype: int
        """
        return self._error_document_count

    @error_document_count.setter
    def error_document_count(self, error_document_count):
        """Sets the error_document_count of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.

        Total number of documents that failed to be deleted in storage.

        :param error_document_count: The error_document_count of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :type error_document_count: int
        """

        self._error_document_count = error_document_count

    @property
    def individual_batch_delete_statuses(self):
        """Gets the individual_batch_delete_statuses of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.

        The list of response details of each document.

        :return: The individual_batch_delete_statuses of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :rtype: List[GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus]
        """
        return self._individual_batch_delete_statuses

    @individual_batch_delete_statuses.setter
    def individual_batch_delete_statuses(self, individual_batch_delete_statuses):
        """Sets the individual_batch_delete_statuses of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.

        The list of response details of each document.

        :param individual_batch_delete_statuses: The individual_batch_delete_statuses of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :type individual_batch_delete_statuses: List[GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus]
        """

        self._individual_batch_delete_statuses = individual_batch_delete_statuses

    @property
    def total_document_count(self):
        """Gets the total_document_count of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.

        Total number of documents deleting from dataset.

        :return: The total_document_count of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :rtype: int
        """
        return self._total_document_count

    @total_document_count.setter
    def total_document_count(self, total_document_count):
        """Sets the total_document_count of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.

        Total number of documents deleting from dataset.

        :param total_document_count: The total_document_count of this GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata.
        :type total_document_count: int
        """

        self._total_document_count = total_document_count
