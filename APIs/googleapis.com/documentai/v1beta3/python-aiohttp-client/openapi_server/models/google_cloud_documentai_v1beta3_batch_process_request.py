# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1beta3_batch_documents_input_config import GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig
from openapi_server.models.google_cloud_documentai_v1beta3_batch_process_request_batch_input_config import GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig
from openapi_server.models.google_cloud_documentai_v1beta3_batch_process_request_batch_output_config import GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig
from openapi_server.models.google_cloud_documentai_v1beta3_document_output_config import GoogleCloudDocumentaiV1beta3DocumentOutputConfig
from openapi_server.models.google_cloud_documentai_v1beta3_process_options import GoogleCloudDocumentaiV1beta3ProcessOptions
from openapi_server import util


class GoogleCloudDocumentaiV1beta3BatchProcessRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_output_config: GoogleCloudDocumentaiV1beta3DocumentOutputConfig=None, input_configs: List[GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig]=None, input_documents: GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig=None, labels: Dict[str, str]=None, output_config: GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig=None, process_options: GoogleCloudDocumentaiV1beta3ProcessOptions=None, skip_human_review: bool=None):
        """GoogleCloudDocumentaiV1beta3BatchProcessRequest - a model defined in OpenAPI

        :param document_output_config: The document_output_config of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :param input_configs: The input_configs of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :param input_documents: The input_documents of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :param labels: The labels of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :param output_config: The output_config of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :param process_options: The process_options of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :param skip_human_review: The skip_human_review of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        """
        self.openapi_types = {
            'document_output_config': GoogleCloudDocumentaiV1beta3DocumentOutputConfig,
            'input_configs': List[GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig],
            'input_documents': GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig,
            'labels': Dict[str, str],
            'output_config': GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig,
            'process_options': GoogleCloudDocumentaiV1beta3ProcessOptions,
            'skip_human_review': bool
        }

        self.attribute_map = {
            'document_output_config': 'documentOutputConfig',
            'input_configs': 'inputConfigs',
            'input_documents': 'inputDocuments',
            'labels': 'labels',
            'output_config': 'outputConfig',
            'process_options': 'processOptions',
            'skip_human_review': 'skipHumanReview'
        }

        self._document_output_config = document_output_config
        self._input_configs = input_configs
        self._input_documents = input_documents
        self._labels = labels
        self._output_config = output_config
        self._process_options = process_options
        self._skip_human_review = skip_human_review

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3BatchProcessRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3BatchProcessRequest of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_output_config(self):
        """Gets the document_output_config of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.


        :return: The document_output_config of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :rtype: GoogleCloudDocumentaiV1beta3DocumentOutputConfig
        """
        return self._document_output_config

    @document_output_config.setter
    def document_output_config(self, document_output_config):
        """Sets the document_output_config of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.


        :param document_output_config: The document_output_config of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :type document_output_config: GoogleCloudDocumentaiV1beta3DocumentOutputConfig
        """

        self._document_output_config = document_output_config

    @property
    def input_configs(self):
        """Gets the input_configs of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.

        The input config for each single document in the batch process.

        :return: The input_configs of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :rtype: List[GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig]
        """
        return self._input_configs

    @input_configs.setter
    def input_configs(self, input_configs):
        """Sets the input_configs of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.

        The input config for each single document in the batch process.

        :param input_configs: The input_configs of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :type input_configs: List[GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig]
        """

        self._input_configs = input_configs

    @property
    def input_documents(self):
        """Gets the input_documents of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.


        :return: The input_documents of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :rtype: GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig
        """
        return self._input_documents

    @input_documents.setter
    def input_documents(self, input_documents):
        """Sets the input_documents of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.


        :param input_documents: The input_documents of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :type input_documents: GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig
        """

        self._input_documents = input_documents

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.

        Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.

        :return: The labels of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.

        Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.

        :param labels: The labels of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def output_config(self):
        """Gets the output_config of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.


        :return: The output_config of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :rtype: GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.


        :param output_config: The output_config of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :type output_config: GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig
        """

        self._output_config = output_config

    @property
    def process_options(self):
        """Gets the process_options of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.


        :return: The process_options of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :rtype: GoogleCloudDocumentaiV1beta3ProcessOptions
        """
        return self._process_options

    @process_options.setter
    def process_options(self, process_options):
        """Sets the process_options of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.


        :param process_options: The process_options of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :type process_options: GoogleCloudDocumentaiV1beta3ProcessOptions
        """

        self._process_options = process_options

    @property
    def skip_human_review(self):
        """Gets the skip_human_review of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.

        Whether human review should be skipped for this request. Default to `false`.

        :return: The skip_human_review of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :rtype: bool
        """
        return self._skip_human_review

    @skip_human_review.setter
    def skip_human_review(self, skip_human_review):
        """Sets the skip_human_review of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.

        Whether human review should be skipped for this request. Default to `false`.

        :param skip_human_review: The skip_human_review of this GoogleCloudDocumentaiV1beta3BatchProcessRequest.
        :type skip_human_review: bool
        """

        self._skip_human_review = skip_human_review
