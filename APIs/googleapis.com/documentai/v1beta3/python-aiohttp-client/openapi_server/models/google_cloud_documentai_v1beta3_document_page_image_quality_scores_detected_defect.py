# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence: float=None, type: str=None):
        """GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect - a model defined in OpenAPI

        :param confidence: The confidence of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.
        :param type: The type of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.
        """
        self.openapi_types = {
            'confidence': float,
            'type': str
        }

        self.attribute_map = {
            'confidence': 'confidence',
            'type': 'type'
        }

        self._confidence = confidence
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence(self):
        """Gets the confidence of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.

        Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.

        :return: The confidence of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.

        Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.

        :param confidence: The confidence of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def type(self):
        """Gets the type of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.

        Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`

        :return: The type of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.

        Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`

        :param type: The type of this GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect.
        :type type: str
        """

        self._type = type
