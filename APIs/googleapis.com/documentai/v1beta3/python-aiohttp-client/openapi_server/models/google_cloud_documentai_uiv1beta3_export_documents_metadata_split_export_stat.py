# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, split_type: str=None, total_document_count: int=None):
        """GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat - a model defined in OpenAPI

        :param split_type: The split_type of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.
        :param total_document_count: The total_document_count of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.
        """
        self.openapi_types = {
            'split_type': str,
            'total_document_count': int
        }

        self.attribute_map = {
            'split_type': 'splitType',
            'total_document_count': 'totalDocumentCount'
        }

        self._split_type = split_type
        self._total_document_count = total_document_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def split_type(self):
        """Gets the split_type of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.

        The dataset split type.

        :return: The split_type of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.
        :rtype: str
        """
        return self._split_type

    @split_type.setter
    def split_type(self, split_type):
        """Sets the split_type of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.

        The dataset split type.

        :param split_type: The split_type of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.
        :type split_type: str
        """
        allowed_values = ["DATASET_SPLIT_TYPE_UNSPECIFIED", "DATASET_SPLIT_TRAIN", "DATASET_SPLIT_TEST", "DATASET_SPLIT_UNASSIGNED"]  # noqa: E501
        if split_type not in allowed_values:
            raise ValueError(
                "Invalid value for `split_type` ({0}), must be one of {1}"
                .format(split_type, allowed_values)
            )

        self._split_type = split_type

    @property
    def total_document_count(self):
        """Gets the total_document_count of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.

        Total number of documents with the given dataset split type to be exported.

        :return: The total_document_count of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.
        :rtype: int
        """
        return self._total_document_count

    @total_document_count.setter
    def total_document_count(self, total_document_count):
        """Sets the total_document_count of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.

        Total number of documents with the given dataset split type to be exported.

        :param total_document_count: The total_document_count of this GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.
        :type total_document_count: int
        """

        self._total_document_count = total_document_count
