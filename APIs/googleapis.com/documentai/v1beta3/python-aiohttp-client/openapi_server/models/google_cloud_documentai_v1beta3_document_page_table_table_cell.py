# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1beta3_document_page_detected_language import GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage
from openapi_server.models.google_cloud_documentai_v1beta3_document_page_layout import GoogleCloudDocumentaiV1beta3DocumentPageLayout
from openapi_server import util


class GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, col_span: int=None, detected_languages: List[GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage]=None, layout: GoogleCloudDocumentaiV1beta3DocumentPageLayout=None, row_span: int=None):
        """GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell - a model defined in OpenAPI

        :param col_span: The col_span of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :param detected_languages: The detected_languages of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :param layout: The layout of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :param row_span: The row_span of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        """
        self.openapi_types = {
            'col_span': int,
            'detected_languages': List[GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage],
            'layout': GoogleCloudDocumentaiV1beta3DocumentPageLayout,
            'row_span': int
        }

        self.attribute_map = {
            'col_span': 'colSpan',
            'detected_languages': 'detectedLanguages',
            'layout': 'layout',
            'row_span': 'rowSpan'
        }

        self._col_span = col_span
        self._detected_languages = detected_languages
        self._layout = layout
        self._row_span = row_span

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def col_span(self):
        """Gets the col_span of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.

        How many columns this cell spans.

        :return: The col_span of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :rtype: int
        """
        return self._col_span

    @col_span.setter
    def col_span(self, col_span):
        """Sets the col_span of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.

        How many columns this cell spans.

        :param col_span: The col_span of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :type col_span: int
        """

        self._col_span = col_span

    @property
    def detected_languages(self):
        """Gets the detected_languages of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.

        A list of detected languages together with confidence.

        :return: The detected_languages of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :rtype: List[GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage]
        """
        return self._detected_languages

    @detected_languages.setter
    def detected_languages(self, detected_languages):
        """Sets the detected_languages of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.

        A list of detected languages together with confidence.

        :param detected_languages: The detected_languages of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :type detected_languages: List[GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage]
        """

        self._detected_languages = detected_languages

    @property
    def layout(self):
        """Gets the layout of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.


        :return: The layout of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :rtype: GoogleCloudDocumentaiV1beta3DocumentPageLayout
        """
        return self._layout

    @layout.setter
    def layout(self, layout):
        """Sets the layout of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.


        :param layout: The layout of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :type layout: GoogleCloudDocumentaiV1beta3DocumentPageLayout
        """

        self._layout = layout

    @property
    def row_span(self):
        """Gets the row_span of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.

        How many rows this cell spans.

        :return: The row_span of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :rtype: int
        """
        return self._row_span

    @row_span.setter
    def row_span(self, row_span):
        """Sets the row_span of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.

        How many rows this cell spans.

        :param row_span: The row_span of this GoogleCloudDocumentaiV1beta3DocumentPageTableTableCell.
        :type row_span: int
        """

        self._row_span = row_span
