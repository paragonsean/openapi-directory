# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDocumentaiV1beta3EvaluationMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, f1_score: float=None, false_negatives_count: int=None, false_positives_count: int=None, ground_truth_document_count: int=None, ground_truth_occurrences_count: int=None, precision: float=None, predicted_document_count: int=None, predicted_occurrences_count: int=None, recall: float=None, total_documents_count: int=None, true_positives_count: int=None):
        """GoogleCloudDocumentaiV1beta3EvaluationMetrics - a model defined in OpenAPI

        :param f1_score: The f1_score of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :param false_negatives_count: The false_negatives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :param false_positives_count: The false_positives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :param ground_truth_document_count: The ground_truth_document_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :param ground_truth_occurrences_count: The ground_truth_occurrences_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :param precision: The precision of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :param predicted_document_count: The predicted_document_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :param predicted_occurrences_count: The predicted_occurrences_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :param recall: The recall of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :param total_documents_count: The total_documents_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :param true_positives_count: The true_positives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        """
        self.openapi_types = {
            'f1_score': float,
            'false_negatives_count': int,
            'false_positives_count': int,
            'ground_truth_document_count': int,
            'ground_truth_occurrences_count': int,
            'precision': float,
            'predicted_document_count': int,
            'predicted_occurrences_count': int,
            'recall': float,
            'total_documents_count': int,
            'true_positives_count': int
        }

        self.attribute_map = {
            'f1_score': 'f1Score',
            'false_negatives_count': 'falseNegativesCount',
            'false_positives_count': 'falsePositivesCount',
            'ground_truth_document_count': 'groundTruthDocumentCount',
            'ground_truth_occurrences_count': 'groundTruthOccurrencesCount',
            'precision': 'precision',
            'predicted_document_count': 'predictedDocumentCount',
            'predicted_occurrences_count': 'predictedOccurrencesCount',
            'recall': 'recall',
            'total_documents_count': 'totalDocumentsCount',
            'true_positives_count': 'truePositivesCount'
        }

        self._f1_score = f1_score
        self._false_negatives_count = false_negatives_count
        self._false_positives_count = false_positives_count
        self._ground_truth_document_count = ground_truth_document_count
        self._ground_truth_occurrences_count = ground_truth_occurrences_count
        self._precision = precision
        self._predicted_document_count = predicted_document_count
        self._predicted_occurrences_count = predicted_occurrences_count
        self._recall = recall
        self._total_documents_count = total_documents_count
        self._true_positives_count = true_positives_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3EvaluationMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3EvaluationMetrics of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def f1_score(self):
        """Gets the f1_score of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The calculated f1 score.

        :return: The f1_score of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: float
        """
        return self._f1_score

    @f1_score.setter
    def f1_score(self, f1_score):
        """Sets the f1_score of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The calculated f1 score.

        :param f1_score: The f1_score of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type f1_score: float
        """

        self._f1_score = f1_score

    @property
    def false_negatives_count(self):
        """Gets the false_negatives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of false negatives.

        :return: The false_negatives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: int
        """
        return self._false_negatives_count

    @false_negatives_count.setter
    def false_negatives_count(self, false_negatives_count):
        """Sets the false_negatives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of false negatives.

        :param false_negatives_count: The false_negatives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type false_negatives_count: int
        """

        self._false_negatives_count = false_negatives_count

    @property
    def false_positives_count(self):
        """Gets the false_positives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of false positives.

        :return: The false_positives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: int
        """
        return self._false_positives_count

    @false_positives_count.setter
    def false_positives_count(self, false_positives_count):
        """Sets the false_positives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of false positives.

        :param false_positives_count: The false_positives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type false_positives_count: int
        """

        self._false_positives_count = false_positives_count

    @property
    def ground_truth_document_count(self):
        """Gets the ground_truth_document_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of documents with a ground truth occurrence.

        :return: The ground_truth_document_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: int
        """
        return self._ground_truth_document_count

    @ground_truth_document_count.setter
    def ground_truth_document_count(self, ground_truth_document_count):
        """Sets the ground_truth_document_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of documents with a ground truth occurrence.

        :param ground_truth_document_count: The ground_truth_document_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type ground_truth_document_count: int
        """

        self._ground_truth_document_count = ground_truth_document_count

    @property
    def ground_truth_occurrences_count(self):
        """Gets the ground_truth_occurrences_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of occurrences in ground truth documents.

        :return: The ground_truth_occurrences_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: int
        """
        return self._ground_truth_occurrences_count

    @ground_truth_occurrences_count.setter
    def ground_truth_occurrences_count(self, ground_truth_occurrences_count):
        """Sets the ground_truth_occurrences_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of occurrences in ground truth documents.

        :param ground_truth_occurrences_count: The ground_truth_occurrences_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type ground_truth_occurrences_count: int
        """

        self._ground_truth_occurrences_count = ground_truth_occurrences_count

    @property
    def precision(self):
        """Gets the precision of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The calculated precision.

        :return: The precision of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: float
        """
        return self._precision

    @precision.setter
    def precision(self, precision):
        """Sets the precision of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The calculated precision.

        :param precision: The precision of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type precision: float
        """

        self._precision = precision

    @property
    def predicted_document_count(self):
        """Gets the predicted_document_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of documents with a predicted occurrence.

        :return: The predicted_document_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: int
        """
        return self._predicted_document_count

    @predicted_document_count.setter
    def predicted_document_count(self, predicted_document_count):
        """Sets the predicted_document_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of documents with a predicted occurrence.

        :param predicted_document_count: The predicted_document_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type predicted_document_count: int
        """

        self._predicted_document_count = predicted_document_count

    @property
    def predicted_occurrences_count(self):
        """Gets the predicted_occurrences_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of occurrences in predicted documents.

        :return: The predicted_occurrences_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: int
        """
        return self._predicted_occurrences_count

    @predicted_occurrences_count.setter
    def predicted_occurrences_count(self, predicted_occurrences_count):
        """Sets the predicted_occurrences_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of occurrences in predicted documents.

        :param predicted_occurrences_count: The predicted_occurrences_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type predicted_occurrences_count: int
        """

        self._predicted_occurrences_count = predicted_occurrences_count

    @property
    def recall(self):
        """Gets the recall of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The calculated recall.

        :return: The recall of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: float
        """
        return self._recall

    @recall.setter
    def recall(self, recall):
        """Sets the recall of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The calculated recall.

        :param recall: The recall of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type recall: float
        """

        self._recall = recall

    @property
    def total_documents_count(self):
        """Gets the total_documents_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of documents that had an occurrence of this label.

        :return: The total_documents_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: int
        """
        return self._total_documents_count

    @total_documents_count.setter
    def total_documents_count(self, total_documents_count):
        """Sets the total_documents_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of documents that had an occurrence of this label.

        :param total_documents_count: The total_documents_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type total_documents_count: int
        """

        self._total_documents_count = total_documents_count

    @property
    def true_positives_count(self):
        """Gets the true_positives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of true positives.

        :return: The true_positives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :rtype: int
        """
        return self._true_positives_count

    @true_positives_count.setter
    def true_positives_count(self, true_positives_count):
        """Sets the true_positives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.

        The amount of true positives.

        :param true_positives_count: The true_positives_count of this GoogleCloudDocumentaiV1beta3EvaluationMetrics.
        :type true_positives_count: int
        """

        self._true_positives_count = true_positives_count
