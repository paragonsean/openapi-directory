# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDocumentaiV1beta3EntityTypeMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inactive: bool=None):
        """GoogleCloudDocumentaiV1beta3EntityTypeMetadata - a model defined in OpenAPI

        :param inactive: The inactive of this GoogleCloudDocumentaiV1beta3EntityTypeMetadata.
        """
        self.openapi_types = {
            'inactive': bool
        }

        self.attribute_map = {
            'inactive': 'inactive'
        }

        self._inactive = inactive

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3EntityTypeMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3EntityTypeMetadata of this GoogleCloudDocumentaiV1beta3EntityTypeMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inactive(self):
        """Gets the inactive of this GoogleCloudDocumentaiV1beta3EntityTypeMetadata.

        Whether the entity type should be considered inactive.

        :return: The inactive of this GoogleCloudDocumentaiV1beta3EntityTypeMetadata.
        :rtype: bool
        """
        return self._inactive

    @inactive.setter
    def inactive(self, inactive):
        """Sets the inactive of this GoogleCloudDocumentaiV1beta3EntityTypeMetadata.

        Whether the entity type should be considered inactive.

        :param inactive: The inactive of this GoogleCloudDocumentaiV1beta3EntityTypeMetadata.
        :type inactive: bool
        """

        self._inactive = inactive
