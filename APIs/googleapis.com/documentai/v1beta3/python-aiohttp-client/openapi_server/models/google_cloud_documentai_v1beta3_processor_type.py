# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_documentai_v1beta3_processor_type_location_info import GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo
from openapi_server import util


class GoogleCloudDocumentaiV1beta3ProcessorType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_creation: bool=None, available_locations: List[GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo]=None, category: str=None, launch_stage: str=None, name: str=None, sample_document_uris: List[str]=None, type: str=None):
        """GoogleCloudDocumentaiV1beta3ProcessorType - a model defined in OpenAPI

        :param allow_creation: The allow_creation of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :param available_locations: The available_locations of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :param category: The category of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :param launch_stage: The launch_stage of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :param name: The name of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :param sample_document_uris: The sample_document_uris of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :param type: The type of this GoogleCloudDocumentaiV1beta3ProcessorType.
        """
        self.openapi_types = {
            'allow_creation': bool,
            'available_locations': List[GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo],
            'category': str,
            'launch_stage': str,
            'name': str,
            'sample_document_uris': List[str],
            'type': str
        }

        self.attribute_map = {
            'allow_creation': 'allowCreation',
            'available_locations': 'availableLocations',
            'category': 'category',
            'launch_stage': 'launchStage',
            'name': 'name',
            'sample_document_uris': 'sampleDocumentUris',
            'type': 'type'
        }

        self._allow_creation = allow_creation
        self._available_locations = available_locations
        self._category = category
        self._launch_stage = launch_stage
        self._name = name
        self._sample_document_uris = sample_document_uris
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDocumentaiV1beta3ProcessorType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDocumentaiV1beta3ProcessorType of this GoogleCloudDocumentaiV1beta3ProcessorType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_creation(self):
        """Gets the allow_creation of this GoogleCloudDocumentaiV1beta3ProcessorType.

        Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access.

        :return: The allow_creation of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :rtype: bool
        """
        return self._allow_creation

    @allow_creation.setter
    def allow_creation(self, allow_creation):
        """Sets the allow_creation of this GoogleCloudDocumentaiV1beta3ProcessorType.

        Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access.

        :param allow_creation: The allow_creation of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :type allow_creation: bool
        """

        self._allow_creation = allow_creation

    @property
    def available_locations(self):
        """Gets the available_locations of this GoogleCloudDocumentaiV1beta3ProcessorType.

        The locations in which this processor is available.

        :return: The available_locations of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :rtype: List[GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo]
        """
        return self._available_locations

    @available_locations.setter
    def available_locations(self, available_locations):
        """Sets the available_locations of this GoogleCloudDocumentaiV1beta3ProcessorType.

        The locations in which this processor is available.

        :param available_locations: The available_locations of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :type available_locations: List[GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo]
        """

        self._available_locations = available_locations

    @property
    def category(self):
        """Gets the category of this GoogleCloudDocumentaiV1beta3ProcessorType.

        The processor category, used by UI to group processor types.

        :return: The category of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this GoogleCloudDocumentaiV1beta3ProcessorType.

        The processor category, used by UI to group processor types.

        :param category: The category of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :type category: str
        """

        self._category = category

    @property
    def launch_stage(self):
        """Gets the launch_stage of this GoogleCloudDocumentaiV1beta3ProcessorType.

        Launch stage of the processor type

        :return: The launch_stage of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :rtype: str
        """
        return self._launch_stage

    @launch_stage.setter
    def launch_stage(self, launch_stage):
        """Sets the launch_stage of this GoogleCloudDocumentaiV1beta3ProcessorType.

        Launch stage of the processor type

        :param launch_stage: The launch_stage of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :type launch_stage: str
        """
        allowed_values = ["LAUNCH_STAGE_UNSPECIFIED", "UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]  # noqa: E501
        if launch_stage not in allowed_values:
            raise ValueError(
                "Invalid value for `launch_stage` ({0}), must be one of {1}"
                .format(launch_stage, allowed_values)
            )

        self._launch_stage = launch_stage

    @property
    def name(self):
        """Gets the name of this GoogleCloudDocumentaiV1beta3ProcessorType.

        The resource name of the processor type. Format: `projects/{project}/processorTypes/{processor_type}`

        :return: The name of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDocumentaiV1beta3ProcessorType.

        The resource name of the processor type. Format: `projects/{project}/processorTypes/{processor_type}`

        :param name: The name of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :type name: str
        """

        self._name = name

    @property
    def sample_document_uris(self):
        """Gets the sample_document_uris of this GoogleCloudDocumentaiV1beta3ProcessorType.

        A set of Cloud Storage URIs of sample documents for this processor.

        :return: The sample_document_uris of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :rtype: List[str]
        """
        return self._sample_document_uris

    @sample_document_uris.setter
    def sample_document_uris(self, sample_document_uris):
        """Sets the sample_document_uris of this GoogleCloudDocumentaiV1beta3ProcessorType.

        A set of Cloud Storage URIs of sample documents for this processor.

        :param sample_document_uris: The sample_document_uris of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :type sample_document_uris: List[str]
        """

        self._sample_document_uris = sample_document_uris

    @property
    def type(self):
        """Gets the type of this GoogleCloudDocumentaiV1beta3ProcessorType.

        The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`.

        :return: The type of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDocumentaiV1beta3ProcessorType.

        The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`.

        :param type: The type of this GoogleCloudDocumentaiV1beta3ProcessorType.
        :type type: str
        """

        self._type = type
