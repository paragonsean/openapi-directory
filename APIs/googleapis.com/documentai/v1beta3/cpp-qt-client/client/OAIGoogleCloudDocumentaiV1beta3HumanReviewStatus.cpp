/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus() {
    this->initializeModel();
}

OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::~OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus() {}

void OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::initializeModel() {

    m_human_review_operation_isSet = false;
    m_human_review_operation_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_state_message_isSet = false;
    m_state_message_isValid = false;
}

void OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::fromJsonObject(QJsonObject json) {

    m_human_review_operation_isValid = ::OpenAPI::fromJsonValue(m_human_review_operation, json[QString("humanReviewOperation")]);
    m_human_review_operation_isSet = !json[QString("humanReviewOperation")].isNull() && m_human_review_operation_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_state_message_isValid = ::OpenAPI::fromJsonValue(m_state_message, json[QString("stateMessage")]);
    m_state_message_isSet = !json[QString("stateMessage")].isNull() && m_state_message_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_human_review_operation_isSet) {
        obj.insert(QString("humanReviewOperation"), ::OpenAPI::toJsonValue(m_human_review_operation));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_state_message_isSet) {
        obj.insert(QString("stateMessage"), ::OpenAPI::toJsonValue(m_state_message));
    }
    return obj;
}

QString OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::getHumanReviewOperation() const {
    return m_human_review_operation;
}
void OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::setHumanReviewOperation(const QString &human_review_operation) {
    m_human_review_operation = human_review_operation;
    m_human_review_operation_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::is_human_review_operation_Set() const{
    return m_human_review_operation_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::is_human_review_operation_Valid() const{
    return m_human_review_operation_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::getState() const {
    return m_state;
}
void OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::getStateMessage() const {
    return m_state_message;
}
void OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::setStateMessage(const QString &state_message) {
    m_state_message = state_message;
    m_state_message_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::is_state_message_Set() const{
    return m_state_message_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::is_state_message_Valid() const{
    return m_state_message_isValid;
}

bool OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_human_review_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDocumentaiV1beta3HumanReviewStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
