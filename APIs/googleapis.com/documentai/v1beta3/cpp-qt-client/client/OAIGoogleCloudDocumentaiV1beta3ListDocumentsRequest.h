/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1beta3ListDocumentsRequest.h
 *
 * 
 */

#ifndef OAIGoogleCloudDocumentaiV1beta3ListDocumentsRequest_H
#define OAIGoogleCloudDocumentaiV1beta3ListDocumentsRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDocumentaiV1beta3ListDocumentsRequest : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1beta3ListDocumentsRequest();
    OAIGoogleCloudDocumentaiV1beta3ListDocumentsRequest(QString json);
    ~OAIGoogleCloudDocumentaiV1beta3ListDocumentsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getPageToken() const;
    void setPageToken(const QString &page_token);
    bool is_page_token_Set() const;
    bool is_page_token_Valid() const;

    bool isReturnTotalSize() const;
    void setReturnTotalSize(const bool &return_total_size);
    bool is_return_total_size_Set() const;
    bool is_return_total_size_Valid() const;

    qint32 getSkip() const;
    void setSkip(const qint32 &skip);
    bool is_skip_Set() const;
    bool is_skip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_page_token;
    bool m_page_token_isSet;
    bool m_page_token_isValid;

    bool m_return_total_size;
    bool m_return_total_size_isSet;
    bool m_return_total_size_isValid;

    qint32 m_skip;
    bool m_skip_isSet;
    bool m_skip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1beta3ListDocumentsRequest)

#endif // OAIGoogleCloudDocumentaiV1beta3ListDocumentsRequest_H
