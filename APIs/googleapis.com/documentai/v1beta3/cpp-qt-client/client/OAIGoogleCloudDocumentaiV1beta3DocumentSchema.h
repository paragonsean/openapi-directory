/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1beta3DocumentSchema.h
 *
 * The schema defines the output of the processed document by a processor.
 */

#ifndef OAIGoogleCloudDocumentaiV1beta3DocumentSchema_H
#define OAIGoogleCloudDocumentaiV1beta3DocumentSchema_H

#include <QJsonObject>

#include "OAIGoogleCloudDocumentaiV1beta3DocumentSchemaEntityType.h"
#include "OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDocumentaiV1beta3DocumentSchemaEntityType;
class OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata;

class OAIGoogleCloudDocumentaiV1beta3DocumentSchema : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1beta3DocumentSchema();
    OAIGoogleCloudDocumentaiV1beta3DocumentSchema(QString json);
    ~OAIGoogleCloudDocumentaiV1beta3DocumentSchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<OAIGoogleCloudDocumentaiV1beta3DocumentSchemaEntityType> getEntityTypes() const;
    void setEntityTypes(const QList<OAIGoogleCloudDocumentaiV1beta3DocumentSchemaEntityType> &entity_types);
    bool is_entity_types_Set() const;
    bool is_entity_types_Valid() const;

    OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata getMetadata() const;
    void setMetadata(const OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<OAIGoogleCloudDocumentaiV1beta3DocumentSchemaEntityType> m_entity_types;
    bool m_entity_types_isSet;
    bool m_entity_types_isValid;

    OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1beta3DocumentSchema)

#endif // OAIGoogleCloudDocumentaiV1beta3DocumentSchema_H
