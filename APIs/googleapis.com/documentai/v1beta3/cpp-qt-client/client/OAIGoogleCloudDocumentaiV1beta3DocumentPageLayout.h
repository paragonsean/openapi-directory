/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout.h
 *
 * Visual element describing a layout unit on a page.
 */

#ifndef OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout_H
#define OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout_H

#include <QJsonObject>

#include "OAIGoogleCloudDocumentaiV1beta3BoundingPoly.h"
#include "OAIGoogleCloudDocumentaiV1beta3DocumentTextAnchor.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDocumentaiV1beta3BoundingPoly;
class OAIGoogleCloudDocumentaiV1beta3DocumentTextAnchor;

class OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout();
    OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout(QString json);
    ~OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudDocumentaiV1beta3BoundingPoly getBoundingPoly() const;
    void setBoundingPoly(const OAIGoogleCloudDocumentaiV1beta3BoundingPoly &bounding_poly);
    bool is_bounding_poly_Set() const;
    bool is_bounding_poly_Valid() const;

    float getConfidence() const;
    void setConfidence(const float &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    QString getOrientation() const;
    void setOrientation(const QString &orientation);
    bool is_orientation_Set() const;
    bool is_orientation_Valid() const;

    OAIGoogleCloudDocumentaiV1beta3DocumentTextAnchor getTextAnchor() const;
    void setTextAnchor(const OAIGoogleCloudDocumentaiV1beta3DocumentTextAnchor &text_anchor);
    bool is_text_anchor_Set() const;
    bool is_text_anchor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudDocumentaiV1beta3BoundingPoly m_bounding_poly;
    bool m_bounding_poly_isSet;
    bool m_bounding_poly_isValid;

    float m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    QString m_orientation;
    bool m_orientation_isSet;
    bool m_orientation_isValid;

    OAIGoogleCloudDocumentaiV1beta3DocumentTextAnchor m_text_anchor;
    bool m_text_anchor_isSet;
    bool m_text_anchor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout)

#endif // OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout_H
