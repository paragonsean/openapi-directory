/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata.h
 *
 * Metadata for global schema behavior.
 */

#ifndef OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata_H
#define OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata();
    OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata(QString json);
    ~OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDocumentAllowMultipleLabels() const;
    void setDocumentAllowMultipleLabels(const bool &document_allow_multiple_labels);
    bool is_document_allow_multiple_labels_Set() const;
    bool is_document_allow_multiple_labels_Valid() const;

    bool isDocumentSplitter() const;
    void setDocumentSplitter(const bool &document_splitter);
    bool is_document_splitter_Set() const;
    bool is_document_splitter_Valid() const;

    bool isPrefixedNamingOnProperties() const;
    void setPrefixedNamingOnProperties(const bool &prefixed_naming_on_properties);
    bool is_prefixed_naming_on_properties_Set() const;
    bool is_prefixed_naming_on_properties_Valid() const;

    bool isSkipNamingValidation() const;
    void setSkipNamingValidation(const bool &skip_naming_validation);
    bool is_skip_naming_validation_Set() const;
    bool is_skip_naming_validation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_document_allow_multiple_labels;
    bool m_document_allow_multiple_labels_isSet;
    bool m_document_allow_multiple_labels_isValid;

    bool m_document_splitter;
    bool m_document_splitter_isSet;
    bool m_document_splitter_isValid;

    bool m_prefixed_naming_on_properties;
    bool m_prefixed_naming_on_properties_isSet;
    bool m_prefixed_naming_on_properties_isValid;

    bool m_skip_naming_validation;
    bool m_skip_naming_validation_isSet;
    bool m_skip_naming_validation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata)

#endif // OAIGoogleCloudDocumentaiV1beta3DocumentSchemaMetadata_H
