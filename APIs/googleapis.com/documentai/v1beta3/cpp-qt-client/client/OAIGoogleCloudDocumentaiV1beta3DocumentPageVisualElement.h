/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1beta3DocumentPageVisualElement.h
 *
 * Detected non-text visual elements e.g. checkbox, signature etc. on the page.
 */

#ifndef OAIGoogleCloudDocumentaiV1beta3DocumentPageVisualElement_H
#define OAIGoogleCloudDocumentaiV1beta3DocumentPageVisualElement_H

#include <QJsonObject>

#include "OAIGoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage.h"
#include "OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage;
class OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout;

class OAIGoogleCloudDocumentaiV1beta3DocumentPageVisualElement : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1beta3DocumentPageVisualElement();
    OAIGoogleCloudDocumentaiV1beta3DocumentPageVisualElement(QString json);
    ~OAIGoogleCloudDocumentaiV1beta3DocumentPageVisualElement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage> getDetectedLanguages() const;
    void setDetectedLanguages(const QList<OAIGoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage> &detected_languages);
    bool is_detected_languages_Set() const;
    bool is_detected_languages_Valid() const;

    OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout getLayout() const;
    void setLayout(const OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout &layout);
    bool is_layout_Set() const;
    bool is_layout_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage> m_detected_languages;
    bool m_detected_languages_isSet;
    bool m_detected_languages_isValid;

    OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout m_layout;
    bool m_layout_isSet;
    bool m_layout_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1beta3DocumentPageVisualElement)

#endif // OAIGoogleCloudDocumentaiV1beta3DocumentPageVisualElement_H
