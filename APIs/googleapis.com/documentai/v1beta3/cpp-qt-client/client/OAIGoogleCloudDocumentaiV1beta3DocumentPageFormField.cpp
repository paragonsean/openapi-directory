/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField() {
    this->initializeModel();
}

OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::~OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField() {}

void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::initializeModel() {

    m_corrected_key_text_isSet = false;
    m_corrected_key_text_isValid = false;

    m_corrected_value_text_isSet = false;
    m_corrected_value_text_isValid = false;

    m_field_name_isSet = false;
    m_field_name_isValid = false;

    m_field_value_isSet = false;
    m_field_value_isValid = false;

    m_name_detected_languages_isSet = false;
    m_name_detected_languages_isValid = false;

    m_provenance_isSet = false;
    m_provenance_isValid = false;

    m_value_detected_languages_isSet = false;
    m_value_detected_languages_isValid = false;

    m_value_type_isSet = false;
    m_value_type_isValid = false;
}

void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::fromJsonObject(QJsonObject json) {

    m_corrected_key_text_isValid = ::OpenAPI::fromJsonValue(m_corrected_key_text, json[QString("correctedKeyText")]);
    m_corrected_key_text_isSet = !json[QString("correctedKeyText")].isNull() && m_corrected_key_text_isValid;

    m_corrected_value_text_isValid = ::OpenAPI::fromJsonValue(m_corrected_value_text, json[QString("correctedValueText")]);
    m_corrected_value_text_isSet = !json[QString("correctedValueText")].isNull() && m_corrected_value_text_isValid;

    m_field_name_isValid = ::OpenAPI::fromJsonValue(m_field_name, json[QString("fieldName")]);
    m_field_name_isSet = !json[QString("fieldName")].isNull() && m_field_name_isValid;

    m_field_value_isValid = ::OpenAPI::fromJsonValue(m_field_value, json[QString("fieldValue")]);
    m_field_value_isSet = !json[QString("fieldValue")].isNull() && m_field_value_isValid;

    m_name_detected_languages_isValid = ::OpenAPI::fromJsonValue(m_name_detected_languages, json[QString("nameDetectedLanguages")]);
    m_name_detected_languages_isSet = !json[QString("nameDetectedLanguages")].isNull() && m_name_detected_languages_isValid;

    m_provenance_isValid = ::OpenAPI::fromJsonValue(m_provenance, json[QString("provenance")]);
    m_provenance_isSet = !json[QString("provenance")].isNull() && m_provenance_isValid;

    m_value_detected_languages_isValid = ::OpenAPI::fromJsonValue(m_value_detected_languages, json[QString("valueDetectedLanguages")]);
    m_value_detected_languages_isSet = !json[QString("valueDetectedLanguages")].isNull() && m_value_detected_languages_isValid;

    m_value_type_isValid = ::OpenAPI::fromJsonValue(m_value_type, json[QString("valueType")]);
    m_value_type_isSet = !json[QString("valueType")].isNull() && m_value_type_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::asJsonObject() const {
    QJsonObject obj;
    if (m_corrected_key_text_isSet) {
        obj.insert(QString("correctedKeyText"), ::OpenAPI::toJsonValue(m_corrected_key_text));
    }
    if (m_corrected_value_text_isSet) {
        obj.insert(QString("correctedValueText"), ::OpenAPI::toJsonValue(m_corrected_value_text));
    }
    if (m_field_name.isSet()) {
        obj.insert(QString("fieldName"), ::OpenAPI::toJsonValue(m_field_name));
    }
    if (m_field_value.isSet()) {
        obj.insert(QString("fieldValue"), ::OpenAPI::toJsonValue(m_field_value));
    }
    if (m_name_detected_languages.size() > 0) {
        obj.insert(QString("nameDetectedLanguages"), ::OpenAPI::toJsonValue(m_name_detected_languages));
    }
    if (m_provenance.isSet()) {
        obj.insert(QString("provenance"), ::OpenAPI::toJsonValue(m_provenance));
    }
    if (m_value_detected_languages.size() > 0) {
        obj.insert(QString("valueDetectedLanguages"), ::OpenAPI::toJsonValue(m_value_detected_languages));
    }
    if (m_value_type_isSet) {
        obj.insert(QString("valueType"), ::OpenAPI::toJsonValue(m_value_type));
    }
    return obj;
}

QString OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::getCorrectedKeyText() const {
    return m_corrected_key_text;
}
void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::setCorrectedKeyText(const QString &corrected_key_text) {
    m_corrected_key_text = corrected_key_text;
    m_corrected_key_text_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_corrected_key_text_Set() const{
    return m_corrected_key_text_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_corrected_key_text_Valid() const{
    return m_corrected_key_text_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::getCorrectedValueText() const {
    return m_corrected_value_text;
}
void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::setCorrectedValueText(const QString &corrected_value_text) {
    m_corrected_value_text = corrected_value_text;
    m_corrected_value_text_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_corrected_value_text_Set() const{
    return m_corrected_value_text_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_corrected_value_text_Valid() const{
    return m_corrected_value_text_isValid;
}

OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::getFieldName() const {
    return m_field_name;
}
void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::setFieldName(const OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout &field_name) {
    m_field_name = field_name;
    m_field_name_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_field_name_Set() const{
    return m_field_name_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_field_name_Valid() const{
    return m_field_name_isValid;
}

OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::getFieldValue() const {
    return m_field_value;
}
void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::setFieldValue(const OAIGoogleCloudDocumentaiV1beta3DocumentPageLayout &field_value) {
    m_field_value = field_value;
    m_field_value_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_field_value_Set() const{
    return m_field_value_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_field_value_Valid() const{
    return m_field_value_isValid;
}

QList<OAIGoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage> OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::getNameDetectedLanguages() const {
    return m_name_detected_languages;
}
void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::setNameDetectedLanguages(const QList<OAIGoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage> &name_detected_languages) {
    m_name_detected_languages = name_detected_languages;
    m_name_detected_languages_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_name_detected_languages_Set() const{
    return m_name_detected_languages_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_name_detected_languages_Valid() const{
    return m_name_detected_languages_isValid;
}

OAIGoogleCloudDocumentaiV1beta3DocumentProvenance OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::getProvenance() const {
    return m_provenance;
}
void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::setProvenance(const OAIGoogleCloudDocumentaiV1beta3DocumentProvenance &provenance) {
    m_provenance = provenance;
    m_provenance_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_provenance_Set() const{
    return m_provenance_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_provenance_Valid() const{
    return m_provenance_isValid;
}

QList<OAIGoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage> OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::getValueDetectedLanguages() const {
    return m_value_detected_languages;
}
void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::setValueDetectedLanguages(const QList<OAIGoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage> &value_detected_languages) {
    m_value_detected_languages = value_detected_languages;
    m_value_detected_languages_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_value_detected_languages_Set() const{
    return m_value_detected_languages_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_value_detected_languages_Valid() const{
    return m_value_detected_languages_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::getValueType() const {
    return m_value_type;
}
void OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::setValueType(const QString &value_type) {
    m_value_type = value_type;
    m_value_type_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_value_type_Set() const{
    return m_value_type_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::is_value_type_Valid() const{
    return m_value_type_isValid;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_corrected_key_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_corrected_value_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_detected_languages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_provenance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_detected_languages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDocumentaiV1beta3DocumentPageFormField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
