/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1beta3DocumentMetadata.h
 *
 * Metadata about a document.
 */

#ifndef OAIGoogleCloudDocumentaiV1beta3DocumentMetadata_H
#define OAIGoogleCloudDocumentaiV1beta3DocumentMetadata_H

#include <QJsonObject>

#include "OAIGoogleCloudDocumentaiV1beta3DocumentId.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDocumentaiV1beta3DocumentId;

class OAIGoogleCloudDocumentaiV1beta3DocumentMetadata : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1beta3DocumentMetadata();
    OAIGoogleCloudDocumentaiV1beta3DocumentMetadata(QString json);
    ~OAIGoogleCloudDocumentaiV1beta3DocumentMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatasetType() const;
    void setDatasetType(const QString &dataset_type);
    bool is_dataset_type_Set() const;
    bool is_dataset_type_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIGoogleCloudDocumentaiV1beta3DocumentId getDocumentId() const;
    void setDocumentId(const OAIGoogleCloudDocumentaiV1beta3DocumentId &document_id);
    bool is_document_id_Set() const;
    bool is_document_id_Valid() const;

    QString getLabelingState() const;
    void setLabelingState(const QString &labeling_state);
    bool is_labeling_state_Set() const;
    bool is_labeling_state_Valid() const;

    qint32 getPageCount() const;
    void setPageCount(const qint32 &page_count);
    bool is_page_count_Set() const;
    bool is_page_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dataset_type;
    bool m_dataset_type_isSet;
    bool m_dataset_type_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIGoogleCloudDocumentaiV1beta3DocumentId m_document_id;
    bool m_document_id_isSet;
    bool m_document_id_isValid;

    QString m_labeling_state;
    bool m_labeling_state_isSet;
    bool m_labeling_state_isValid;

    qint32 m_page_count;
    bool m_page_count_isSet;
    bool m_page_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1beta3DocumentMetadata)

#endif // OAIGoogleCloudDocumentaiV1beta3DocumentMetadata_H
