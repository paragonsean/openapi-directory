/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDocumentaiV1beta3EvaluationReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDocumentaiV1beta3EvaluationReference::OAIGoogleCloudDocumentaiV1beta3EvaluationReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDocumentaiV1beta3EvaluationReference::OAIGoogleCloudDocumentaiV1beta3EvaluationReference() {
    this->initializeModel();
}

OAIGoogleCloudDocumentaiV1beta3EvaluationReference::~OAIGoogleCloudDocumentaiV1beta3EvaluationReference() {}

void OAIGoogleCloudDocumentaiV1beta3EvaluationReference::initializeModel() {

    m_aggregate_metrics_isSet = false;
    m_aggregate_metrics_isValid = false;

    m_aggregate_metrics_exact_isSet = false;
    m_aggregate_metrics_exact_isValid = false;

    m_evaluation_isSet = false;
    m_evaluation_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;
}

void OAIGoogleCloudDocumentaiV1beta3EvaluationReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDocumentaiV1beta3EvaluationReference::fromJsonObject(QJsonObject json) {

    m_aggregate_metrics_isValid = ::OpenAPI::fromJsonValue(m_aggregate_metrics, json[QString("aggregateMetrics")]);
    m_aggregate_metrics_isSet = !json[QString("aggregateMetrics")].isNull() && m_aggregate_metrics_isValid;

    m_aggregate_metrics_exact_isValid = ::OpenAPI::fromJsonValue(m_aggregate_metrics_exact, json[QString("aggregateMetricsExact")]);
    m_aggregate_metrics_exact_isSet = !json[QString("aggregateMetricsExact")].isNull() && m_aggregate_metrics_exact_isValid;

    m_evaluation_isValid = ::OpenAPI::fromJsonValue(m_evaluation, json[QString("evaluation")]);
    m_evaluation_isSet = !json[QString("evaluation")].isNull() && m_evaluation_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3EvaluationReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDocumentaiV1beta3EvaluationReference::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregate_metrics.isSet()) {
        obj.insert(QString("aggregateMetrics"), ::OpenAPI::toJsonValue(m_aggregate_metrics));
    }
    if (m_aggregate_metrics_exact.isSet()) {
        obj.insert(QString("aggregateMetricsExact"), ::OpenAPI::toJsonValue(m_aggregate_metrics_exact));
    }
    if (m_evaluation_isSet) {
        obj.insert(QString("evaluation"), ::OpenAPI::toJsonValue(m_evaluation));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    return obj;
}

OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics OAIGoogleCloudDocumentaiV1beta3EvaluationReference::getAggregateMetrics() const {
    return m_aggregate_metrics;
}
void OAIGoogleCloudDocumentaiV1beta3EvaluationReference::setAggregateMetrics(const OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics &aggregate_metrics) {
    m_aggregate_metrics = aggregate_metrics;
    m_aggregate_metrics_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3EvaluationReference::is_aggregate_metrics_Set() const{
    return m_aggregate_metrics_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3EvaluationReference::is_aggregate_metrics_Valid() const{
    return m_aggregate_metrics_isValid;
}

OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics OAIGoogleCloudDocumentaiV1beta3EvaluationReference::getAggregateMetricsExact() const {
    return m_aggregate_metrics_exact;
}
void OAIGoogleCloudDocumentaiV1beta3EvaluationReference::setAggregateMetricsExact(const OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics &aggregate_metrics_exact) {
    m_aggregate_metrics_exact = aggregate_metrics_exact;
    m_aggregate_metrics_exact_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3EvaluationReference::is_aggregate_metrics_exact_Set() const{
    return m_aggregate_metrics_exact_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3EvaluationReference::is_aggregate_metrics_exact_Valid() const{
    return m_aggregate_metrics_exact_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3EvaluationReference::getEvaluation() const {
    return m_evaluation;
}
void OAIGoogleCloudDocumentaiV1beta3EvaluationReference::setEvaluation(const QString &evaluation) {
    m_evaluation = evaluation;
    m_evaluation_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3EvaluationReference::is_evaluation_Set() const{
    return m_evaluation_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3EvaluationReference::is_evaluation_Valid() const{
    return m_evaluation_isValid;
}

QString OAIGoogleCloudDocumentaiV1beta3EvaluationReference::getOperation() const {
    return m_operation;
}
void OAIGoogleCloudDocumentaiV1beta3EvaluationReference::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIGoogleCloudDocumentaiV1beta3EvaluationReference::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIGoogleCloudDocumentaiV1beta3EvaluationReference::is_operation_Valid() const{
    return m_operation_isValid;
}

bool OAIGoogleCloudDocumentaiV1beta3EvaluationReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregate_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_aggregate_metrics_exact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDocumentaiV1beta3EvaluationReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
