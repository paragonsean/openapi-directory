/**
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics.h
 *
 * Evaluation metrics, either in aggregate or about a specific entity.
 */

#ifndef OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics_H
#define OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics : public OAIObject {
public:
    OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics();
    OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics(QString json);
    ~OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getF1Score() const;
    void setF1Score(const float &f1_score);
    bool is_f1_score_Set() const;
    bool is_f1_score_Valid() const;

    qint32 getFalseNegativesCount() const;
    void setFalseNegativesCount(const qint32 &false_negatives_count);
    bool is_false_negatives_count_Set() const;
    bool is_false_negatives_count_Valid() const;

    qint32 getFalsePositivesCount() const;
    void setFalsePositivesCount(const qint32 &false_positives_count);
    bool is_false_positives_count_Set() const;
    bool is_false_positives_count_Valid() const;

    qint32 getGroundTruthDocumentCount() const;
    void setGroundTruthDocumentCount(const qint32 &ground_truth_document_count);
    bool is_ground_truth_document_count_Set() const;
    bool is_ground_truth_document_count_Valid() const;

    qint32 getGroundTruthOccurrencesCount() const;
    void setGroundTruthOccurrencesCount(const qint32 &ground_truth_occurrences_count);
    bool is_ground_truth_occurrences_count_Set() const;
    bool is_ground_truth_occurrences_count_Valid() const;

    float getPrecision() const;
    void setPrecision(const float &precision);
    bool is_precision_Set() const;
    bool is_precision_Valid() const;

    qint32 getPredictedDocumentCount() const;
    void setPredictedDocumentCount(const qint32 &predicted_document_count);
    bool is_predicted_document_count_Set() const;
    bool is_predicted_document_count_Valid() const;

    qint32 getPredictedOccurrencesCount() const;
    void setPredictedOccurrencesCount(const qint32 &predicted_occurrences_count);
    bool is_predicted_occurrences_count_Set() const;
    bool is_predicted_occurrences_count_Valid() const;

    float getRecall() const;
    void setRecall(const float &recall);
    bool is_recall_Set() const;
    bool is_recall_Valid() const;

    qint32 getTotalDocumentsCount() const;
    void setTotalDocumentsCount(const qint32 &total_documents_count);
    bool is_total_documents_count_Set() const;
    bool is_total_documents_count_Valid() const;

    qint32 getTruePositivesCount() const;
    void setTruePositivesCount(const qint32 &true_positives_count);
    bool is_true_positives_count_Set() const;
    bool is_true_positives_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_f1_score;
    bool m_f1_score_isSet;
    bool m_f1_score_isValid;

    qint32 m_false_negatives_count;
    bool m_false_negatives_count_isSet;
    bool m_false_negatives_count_isValid;

    qint32 m_false_positives_count;
    bool m_false_positives_count_isSet;
    bool m_false_positives_count_isValid;

    qint32 m_ground_truth_document_count;
    bool m_ground_truth_document_count_isSet;
    bool m_ground_truth_document_count_isValid;

    qint32 m_ground_truth_occurrences_count;
    bool m_ground_truth_occurrences_count_isSet;
    bool m_ground_truth_occurrences_count_isValid;

    float m_precision;
    bool m_precision_isSet;
    bool m_precision_isValid;

    qint32 m_predicted_document_count;
    bool m_predicted_document_count_isSet;
    bool m_predicted_document_count_isValid;

    qint32 m_predicted_occurrences_count;
    bool m_predicted_occurrences_count_isSet;
    bool m_predicted_occurrences_count_isValid;

    float m_recall;
    bool m_recall_isSet;
    bool m_recall_isValid;

    qint32 m_total_documents_count;
    bool m_total_documents_count_isSet;
    bool m_total_documents_count_isValid;

    qint32 m_true_positives_count;
    bool m_true_positives_count_isSet;
    bool m_true_positives_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics)

#endif // OAIGoogleCloudDocumentaiV1beta3EvaluationMetrics_H
