/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata;
import org.openapitools.client.model.GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus;
import org.openapitools.client.model.GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata of the batch export documents operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:53.606360-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata {
  public static final String SERIALIZED_NAME_COMMON_METADATA = "commonMetadata";
  @SerializedName(SERIALIZED_NAME_COMMON_METADATA)
  private GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata commonMetadata;

  public static final String SERIALIZED_NAME_INDIVIDUAL_EXPORT_STATUSES = "individualExportStatuses";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_EXPORT_STATUSES)
  private List<GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus> individualExportStatuses = new ArrayList<>();

  public static final String SERIALIZED_NAME_SPLIT_EXPORT_STATS = "splitExportStats";
  @SerializedName(SERIALIZED_NAME_SPLIT_EXPORT_STATS)
  private List<GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat> splitExportStats = new ArrayList<>();

  public GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata() {
  }

  public GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata commonMetadata(GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata commonMetadata) {
    this.commonMetadata = commonMetadata;
    return this;
  }

  /**
   * Get commonMetadata
   * @return commonMetadata
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata getCommonMetadata() {
    return commonMetadata;
  }

  public void setCommonMetadata(GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata commonMetadata) {
    this.commonMetadata = commonMetadata;
  }


  public GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata individualExportStatuses(List<GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus> individualExportStatuses) {
    this.individualExportStatuses = individualExportStatuses;
    return this;
  }

  public GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata addIndividualExportStatusesItem(GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus individualExportStatusesItem) {
    if (this.individualExportStatuses == null) {
      this.individualExportStatuses = new ArrayList<>();
    }
    this.individualExportStatuses.add(individualExportStatusesItem);
    return this;
  }

  /**
   * The list of response details of each document.
   * @return individualExportStatuses
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus> getIndividualExportStatuses() {
    return individualExportStatuses;
  }

  public void setIndividualExportStatuses(List<GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus> individualExportStatuses) {
    this.individualExportStatuses = individualExportStatuses;
  }


  public GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata splitExportStats(List<GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat> splitExportStats) {
    this.splitExportStats = splitExportStats;
    return this;
  }

  public GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata addSplitExportStatsItem(GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat splitExportStatsItem) {
    if (this.splitExportStats == null) {
      this.splitExportStats = new ArrayList<>();
    }
    this.splitExportStats.add(splitExportStatsItem);
    return this;
  }

  /**
   * The list of statistics for each dataset split type.
   * @return splitExportStats
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat> getSplitExportStats() {
    return splitExportStats;
  }

  public void setSplitExportStats(List<GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat> splitExportStats) {
    this.splitExportStats = splitExportStats;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata googleCloudDocumentaiUiv1beta3ExportDocumentsMetadata = (GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata) o;
    return Objects.equals(this.commonMetadata, googleCloudDocumentaiUiv1beta3ExportDocumentsMetadata.commonMetadata) &&
        Objects.equals(this.individualExportStatuses, googleCloudDocumentaiUiv1beta3ExportDocumentsMetadata.individualExportStatuses) &&
        Objects.equals(this.splitExportStats, googleCloudDocumentaiUiv1beta3ExportDocumentsMetadata.splitExportStats);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commonMetadata, individualExportStatuses, splitExportStats);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata {\n");
    sb.append("    commonMetadata: ").append(toIndentedString(commonMetadata)).append("\n");
    sb.append("    individualExportStatuses: ").append(toIndentedString(individualExportStatuses)).append("\n");
    sb.append("    splitExportStats: ").append(toIndentedString(splitExportStats)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("commonMetadata");
    openapiFields.add("individualExportStatuses");
    openapiFields.add("splitExportStats");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata is not found in the empty JSON string", GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `commonMetadata`
      if (jsonObj.get("commonMetadata") != null && !jsonObj.get("commonMetadata").isJsonNull()) {
        GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata.validateJsonElement(jsonObj.get("commonMetadata"));
      }
      if (jsonObj.get("individualExportStatuses") != null && !jsonObj.get("individualExportStatuses").isJsonNull()) {
        JsonArray jsonArrayindividualExportStatuses = jsonObj.getAsJsonArray("individualExportStatuses");
        if (jsonArrayindividualExportStatuses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("individualExportStatuses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `individualExportStatuses` to be an array in the JSON string but got `%s`", jsonObj.get("individualExportStatuses").toString()));
          }

          // validate the optional field `individualExportStatuses` (array)
          for (int i = 0; i < jsonArrayindividualExportStatuses.size(); i++) {
            GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus.validateJsonElement(jsonArrayindividualExportStatuses.get(i));
          };
        }
      }
      if (jsonObj.get("splitExportStats") != null && !jsonObj.get("splitExportStats").isJsonNull()) {
        JsonArray jsonArraysplitExportStats = jsonObj.getAsJsonArray("splitExportStats");
        if (jsonArraysplitExportStats != null) {
          // ensure the json data is an array
          if (!jsonObj.get("splitExportStats").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `splitExportStats` to be an array in the JSON string but got `%s`", jsonObj.get("splitExportStats").toString()));
          }

          // validate the optional field `splitExportStats` (array)
          for (int i = 0; i < jsonArraysplitExportStats.size(); i++) {
            GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat.validateJsonElement(jsonArraysplitExportStats.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata
   */
  public static GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

