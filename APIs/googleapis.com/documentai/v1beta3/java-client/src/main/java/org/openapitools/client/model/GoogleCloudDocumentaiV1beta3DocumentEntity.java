/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3DocumentPageAnchor;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3DocumentProvenance;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3DocumentTextAnchor;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:53.606360-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta3DocumentEntity {
  public static final String SERIALIZED_NAME_CONFIDENCE = "confidence";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE)
  private Float confidence;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MENTION_ID = "mentionId";
  @SerializedName(SERIALIZED_NAME_MENTION_ID)
  private String mentionId;

  public static final String SERIALIZED_NAME_MENTION_TEXT = "mentionText";
  @SerializedName(SERIALIZED_NAME_MENTION_TEXT)
  private String mentionText;

  public static final String SERIALIZED_NAME_NORMALIZED_VALUE = "normalizedValue";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_VALUE)
  private GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue normalizedValue;

  public static final String SERIALIZED_NAME_PAGE_ANCHOR = "pageAnchor";
  @SerializedName(SERIALIZED_NAME_PAGE_ANCHOR)
  private GoogleCloudDocumentaiV1beta3DocumentPageAnchor pageAnchor;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private List<GoogleCloudDocumentaiV1beta3DocumentEntity> properties = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROVENANCE = "provenance";
  @SerializedName(SERIALIZED_NAME_PROVENANCE)
  private GoogleCloudDocumentaiV1beta3DocumentProvenance provenance;

  public static final String SERIALIZED_NAME_REDACTED = "redacted";
  @SerializedName(SERIALIZED_NAME_REDACTED)
  private Boolean redacted;

  public static final String SERIALIZED_NAME_TEXT_ANCHOR = "textAnchor";
  @SerializedName(SERIALIZED_NAME_TEXT_ANCHOR)
  private GoogleCloudDocumentaiV1beta3DocumentTextAnchor textAnchor;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public GoogleCloudDocumentaiV1beta3DocumentEntity() {
  }

  public GoogleCloudDocumentaiV1beta3DocumentEntity confidence(Float confidence) {
    this.confidence = confidence;
    return this;
  }

  /**
   * Optional. Confidence of detected Schema entity. Range &#x60;[0, 1]&#x60;.
   * @return confidence
   */
  @javax.annotation.Nullable
  public Float getConfidence() {
    return confidence;
  }

  public void setConfidence(Float confidence) {
    this.confidence = confidence;
  }


  public GoogleCloudDocumentaiV1beta3DocumentEntity id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Optional. Canonical id. This will be a unique value in the entity list for this document.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GoogleCloudDocumentaiV1beta3DocumentEntity mentionId(String mentionId) {
    this.mentionId = mentionId;
    return this;
  }

  /**
   * Optional. Deprecated. Use &#x60;id&#x60; field instead.
   * @return mentionId
   */
  @javax.annotation.Nullable
  public String getMentionId() {
    return mentionId;
  }

  public void setMentionId(String mentionId) {
    this.mentionId = mentionId;
  }


  public GoogleCloudDocumentaiV1beta3DocumentEntity mentionText(String mentionText) {
    this.mentionText = mentionText;
    return this;
  }

  /**
   * Optional. Text value of the entity e.g. &#x60;1600 Amphitheatre Pkwy&#x60;.
   * @return mentionText
   */
  @javax.annotation.Nullable
  public String getMentionText() {
    return mentionText;
  }

  public void setMentionText(String mentionText) {
    this.mentionText = mentionText;
  }


  public GoogleCloudDocumentaiV1beta3DocumentEntity normalizedValue(GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue normalizedValue) {
    this.normalizedValue = normalizedValue;
    return this;
  }

  /**
   * Get normalizedValue
   * @return normalizedValue
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue getNormalizedValue() {
    return normalizedValue;
  }

  public void setNormalizedValue(GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue normalizedValue) {
    this.normalizedValue = normalizedValue;
  }


  public GoogleCloudDocumentaiV1beta3DocumentEntity pageAnchor(GoogleCloudDocumentaiV1beta3DocumentPageAnchor pageAnchor) {
    this.pageAnchor = pageAnchor;
    return this;
  }

  /**
   * Get pageAnchor
   * @return pageAnchor
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta3DocumentPageAnchor getPageAnchor() {
    return pageAnchor;
  }

  public void setPageAnchor(GoogleCloudDocumentaiV1beta3DocumentPageAnchor pageAnchor) {
    this.pageAnchor = pageAnchor;
  }


  public GoogleCloudDocumentaiV1beta3DocumentEntity properties(List<GoogleCloudDocumentaiV1beta3DocumentEntity> properties) {
    this.properties = properties;
    return this;
  }

  public GoogleCloudDocumentaiV1beta3DocumentEntity addPropertiesItem(GoogleCloudDocumentaiV1beta3DocumentEntity propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

  /**
   * Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.
   * @return properties
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiV1beta3DocumentEntity> getProperties() {
    return properties;
  }

  public void setProperties(List<GoogleCloudDocumentaiV1beta3DocumentEntity> properties) {
    this.properties = properties;
  }


  public GoogleCloudDocumentaiV1beta3DocumentEntity provenance(GoogleCloudDocumentaiV1beta3DocumentProvenance provenance) {
    this.provenance = provenance;
    return this;
  }

  /**
   * Get provenance
   * @return provenance
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta3DocumentProvenance getProvenance() {
    return provenance;
  }

  public void setProvenance(GoogleCloudDocumentaiV1beta3DocumentProvenance provenance) {
    this.provenance = provenance;
  }


  public GoogleCloudDocumentaiV1beta3DocumentEntity redacted(Boolean redacted) {
    this.redacted = redacted;
    return this;
  }

  /**
   * Optional. Whether the entity will be redacted for de-identification purposes.
   * @return redacted
   */
  @javax.annotation.Nullable
  public Boolean getRedacted() {
    return redacted;
  }

  public void setRedacted(Boolean redacted) {
    this.redacted = redacted;
  }


  public GoogleCloudDocumentaiV1beta3DocumentEntity textAnchor(GoogleCloudDocumentaiV1beta3DocumentTextAnchor textAnchor) {
    this.textAnchor = textAnchor;
    return this;
  }

  /**
   * Get textAnchor
   * @return textAnchor
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta3DocumentTextAnchor getTextAnchor() {
    return textAnchor;
  }

  public void setTextAnchor(GoogleCloudDocumentaiV1beta3DocumentTextAnchor textAnchor) {
    this.textAnchor = textAnchor;
  }


  public GoogleCloudDocumentaiV1beta3DocumentEntity type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Required. Entity type from a schema e.g. &#x60;Address&#x60;.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta3DocumentEntity googleCloudDocumentaiV1beta3DocumentEntity = (GoogleCloudDocumentaiV1beta3DocumentEntity) o;
    return Objects.equals(this.confidence, googleCloudDocumentaiV1beta3DocumentEntity.confidence) &&
        Objects.equals(this.id, googleCloudDocumentaiV1beta3DocumentEntity.id) &&
        Objects.equals(this.mentionId, googleCloudDocumentaiV1beta3DocumentEntity.mentionId) &&
        Objects.equals(this.mentionText, googleCloudDocumentaiV1beta3DocumentEntity.mentionText) &&
        Objects.equals(this.normalizedValue, googleCloudDocumentaiV1beta3DocumentEntity.normalizedValue) &&
        Objects.equals(this.pageAnchor, googleCloudDocumentaiV1beta3DocumentEntity.pageAnchor) &&
        Objects.equals(this.properties, googleCloudDocumentaiV1beta3DocumentEntity.properties) &&
        Objects.equals(this.provenance, googleCloudDocumentaiV1beta3DocumentEntity.provenance) &&
        Objects.equals(this.redacted, googleCloudDocumentaiV1beta3DocumentEntity.redacted) &&
        Objects.equals(this.textAnchor, googleCloudDocumentaiV1beta3DocumentEntity.textAnchor) &&
        Objects.equals(this.type, googleCloudDocumentaiV1beta3DocumentEntity.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(confidence, id, mentionId, mentionText, normalizedValue, pageAnchor, properties, provenance, redacted, textAnchor, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta3DocumentEntity {\n");
    sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mentionId: ").append(toIndentedString(mentionId)).append("\n");
    sb.append("    mentionText: ").append(toIndentedString(mentionText)).append("\n");
    sb.append("    normalizedValue: ").append(toIndentedString(normalizedValue)).append("\n");
    sb.append("    pageAnchor: ").append(toIndentedString(pageAnchor)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    provenance: ").append(toIndentedString(provenance)).append("\n");
    sb.append("    redacted: ").append(toIndentedString(redacted)).append("\n");
    sb.append("    textAnchor: ").append(toIndentedString(textAnchor)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("confidence");
    openapiFields.add("id");
    openapiFields.add("mentionId");
    openapiFields.add("mentionText");
    openapiFields.add("normalizedValue");
    openapiFields.add("pageAnchor");
    openapiFields.add("properties");
    openapiFields.add("provenance");
    openapiFields.add("redacted");
    openapiFields.add("textAnchor");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta3DocumentEntity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta3DocumentEntity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta3DocumentEntity is not found in the empty JSON string", GoogleCloudDocumentaiV1beta3DocumentEntity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta3DocumentEntity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta3DocumentEntity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("mentionId") != null && !jsonObj.get("mentionId").isJsonNull()) && !jsonObj.get("mentionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mentionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mentionId").toString()));
      }
      if ((jsonObj.get("mentionText") != null && !jsonObj.get("mentionText").isJsonNull()) && !jsonObj.get("mentionText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mentionText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mentionText").toString()));
      }
      // validate the optional field `normalizedValue`
      if (jsonObj.get("normalizedValue") != null && !jsonObj.get("normalizedValue").isJsonNull()) {
        GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue.validateJsonElement(jsonObj.get("normalizedValue"));
      }
      // validate the optional field `pageAnchor`
      if (jsonObj.get("pageAnchor") != null && !jsonObj.get("pageAnchor").isJsonNull()) {
        GoogleCloudDocumentaiV1beta3DocumentPageAnchor.validateJsonElement(jsonObj.get("pageAnchor"));
      }
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        JsonArray jsonArrayproperties = jsonObj.getAsJsonArray("properties");
        if (jsonArrayproperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("properties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `properties` to be an array in the JSON string but got `%s`", jsonObj.get("properties").toString()));
          }

          // validate the optional field `properties` (array)
          for (int i = 0; i < jsonArrayproperties.size(); i++) {
            GoogleCloudDocumentaiV1beta3DocumentEntity.validateJsonElement(jsonArrayproperties.get(i));
          };
        }
      }
      // validate the optional field `provenance`
      if (jsonObj.get("provenance") != null && !jsonObj.get("provenance").isJsonNull()) {
        GoogleCloudDocumentaiV1beta3DocumentProvenance.validateJsonElement(jsonObj.get("provenance"));
      }
      // validate the optional field `textAnchor`
      if (jsonObj.get("textAnchor") != null && !jsonObj.get("textAnchor").isJsonNull()) {
        GoogleCloudDocumentaiV1beta3DocumentTextAnchor.validateJsonElement(jsonObj.get("textAnchor"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta3DocumentEntity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta3DocumentEntity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta3DocumentEntity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta3DocumentEntity.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta3DocumentEntity>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta3DocumentEntity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta3DocumentEntity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta3DocumentEntity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta3DocumentEntity
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta3DocumentEntity
   */
  public static GoogleCloudDocumentaiV1beta3DocumentEntity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta3DocumentEntity.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta3DocumentEntity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

