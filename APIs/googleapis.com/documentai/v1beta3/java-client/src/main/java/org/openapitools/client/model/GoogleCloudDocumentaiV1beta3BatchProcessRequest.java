/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3DocumentOutputConfig;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3ProcessOptions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for BatchProcessDocuments.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:53.606360-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta3BatchProcessRequest {
  public static final String SERIALIZED_NAME_DOCUMENT_OUTPUT_CONFIG = "documentOutputConfig";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_OUTPUT_CONFIG)
  private GoogleCloudDocumentaiV1beta3DocumentOutputConfig documentOutputConfig;

  public static final String SERIALIZED_NAME_INPUT_CONFIGS = "inputConfigs";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIGS)
  private List<GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig> inputConfigs = new ArrayList<>();

  public static final String SERIALIZED_NAME_INPUT_DOCUMENTS = "inputDocuments";
  @SerializedName(SERIALIZED_NAME_INPUT_DOCUMENTS)
  private GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig inputDocuments;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "outputConfig";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig outputConfig;

  public static final String SERIALIZED_NAME_PROCESS_OPTIONS = "processOptions";
  @SerializedName(SERIALIZED_NAME_PROCESS_OPTIONS)
  private GoogleCloudDocumentaiV1beta3ProcessOptions processOptions;

  public static final String SERIALIZED_NAME_SKIP_HUMAN_REVIEW = "skipHumanReview";
  @SerializedName(SERIALIZED_NAME_SKIP_HUMAN_REVIEW)
  private Boolean skipHumanReview;

  public GoogleCloudDocumentaiV1beta3BatchProcessRequest() {
  }

  public GoogleCloudDocumentaiV1beta3BatchProcessRequest documentOutputConfig(GoogleCloudDocumentaiV1beta3DocumentOutputConfig documentOutputConfig) {
    this.documentOutputConfig = documentOutputConfig;
    return this;
  }

  /**
   * Get documentOutputConfig
   * @return documentOutputConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta3DocumentOutputConfig getDocumentOutputConfig() {
    return documentOutputConfig;
  }

  public void setDocumentOutputConfig(GoogleCloudDocumentaiV1beta3DocumentOutputConfig documentOutputConfig) {
    this.documentOutputConfig = documentOutputConfig;
  }


  @Deprecated
  public GoogleCloudDocumentaiV1beta3BatchProcessRequest inputConfigs(List<GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig> inputConfigs) {
    this.inputConfigs = inputConfigs;
    return this;
  }

  public GoogleCloudDocumentaiV1beta3BatchProcessRequest addInputConfigsItem(GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig inputConfigsItem) {
    if (this.inputConfigs == null) {
      this.inputConfigs = new ArrayList<>();
    }
    this.inputConfigs.add(inputConfigsItem);
    return this;
  }

  /**
   * The input config for each single document in the batch process.
   * @return inputConfigs
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig> getInputConfigs() {
    return inputConfigs;
  }

  @Deprecated
  public void setInputConfigs(List<GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig> inputConfigs) {
    this.inputConfigs = inputConfigs;
  }


  public GoogleCloudDocumentaiV1beta3BatchProcessRequest inputDocuments(GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig inputDocuments) {
    this.inputDocuments = inputDocuments;
    return this;
  }

  /**
   * Get inputDocuments
   * @return inputDocuments
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig getInputDocuments() {
    return inputDocuments;
  }

  public void setInputDocuments(GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig inputDocuments) {
    this.inputDocuments = inputDocuments;
  }


  public GoogleCloudDocumentaiV1beta3BatchProcessRequest labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudDocumentaiV1beta3BatchProcessRequest putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  @Deprecated
  public GoogleCloudDocumentaiV1beta3BatchProcessRequest outputConfig(GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig getOutputConfig() {
    return outputConfig;
  }

  @Deprecated
  public void setOutputConfig(GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public GoogleCloudDocumentaiV1beta3BatchProcessRequest processOptions(GoogleCloudDocumentaiV1beta3ProcessOptions processOptions) {
    this.processOptions = processOptions;
    return this;
  }

  /**
   * Get processOptions
   * @return processOptions
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta3ProcessOptions getProcessOptions() {
    return processOptions;
  }

  public void setProcessOptions(GoogleCloudDocumentaiV1beta3ProcessOptions processOptions) {
    this.processOptions = processOptions;
  }


  public GoogleCloudDocumentaiV1beta3BatchProcessRequest skipHumanReview(Boolean skipHumanReview) {
    this.skipHumanReview = skipHumanReview;
    return this;
  }

  /**
   * Whether human review should be skipped for this request. Default to &#x60;false&#x60;.
   * @return skipHumanReview
   */
  @javax.annotation.Nullable
  public Boolean getSkipHumanReview() {
    return skipHumanReview;
  }

  public void setSkipHumanReview(Boolean skipHumanReview) {
    this.skipHumanReview = skipHumanReview;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta3BatchProcessRequest googleCloudDocumentaiV1beta3BatchProcessRequest = (GoogleCloudDocumentaiV1beta3BatchProcessRequest) o;
    return Objects.equals(this.documentOutputConfig, googleCloudDocumentaiV1beta3BatchProcessRequest.documentOutputConfig) &&
        Objects.equals(this.inputConfigs, googleCloudDocumentaiV1beta3BatchProcessRequest.inputConfigs) &&
        Objects.equals(this.inputDocuments, googleCloudDocumentaiV1beta3BatchProcessRequest.inputDocuments) &&
        Objects.equals(this.labels, googleCloudDocumentaiV1beta3BatchProcessRequest.labels) &&
        Objects.equals(this.outputConfig, googleCloudDocumentaiV1beta3BatchProcessRequest.outputConfig) &&
        Objects.equals(this.processOptions, googleCloudDocumentaiV1beta3BatchProcessRequest.processOptions) &&
        Objects.equals(this.skipHumanReview, googleCloudDocumentaiV1beta3BatchProcessRequest.skipHumanReview);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentOutputConfig, inputConfigs, inputDocuments, labels, outputConfig, processOptions, skipHumanReview);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta3BatchProcessRequest {\n");
    sb.append("    documentOutputConfig: ").append(toIndentedString(documentOutputConfig)).append("\n");
    sb.append("    inputConfigs: ").append(toIndentedString(inputConfigs)).append("\n");
    sb.append("    inputDocuments: ").append(toIndentedString(inputDocuments)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    processOptions: ").append(toIndentedString(processOptions)).append("\n");
    sb.append("    skipHumanReview: ").append(toIndentedString(skipHumanReview)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("documentOutputConfig");
    openapiFields.add("inputConfigs");
    openapiFields.add("inputDocuments");
    openapiFields.add("labels");
    openapiFields.add("outputConfig");
    openapiFields.add("processOptions");
    openapiFields.add("skipHumanReview");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta3BatchProcessRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta3BatchProcessRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta3BatchProcessRequest is not found in the empty JSON string", GoogleCloudDocumentaiV1beta3BatchProcessRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta3BatchProcessRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta3BatchProcessRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `documentOutputConfig`
      if (jsonObj.get("documentOutputConfig") != null && !jsonObj.get("documentOutputConfig").isJsonNull()) {
        GoogleCloudDocumentaiV1beta3DocumentOutputConfig.validateJsonElement(jsonObj.get("documentOutputConfig"));
      }
      if (jsonObj.get("inputConfigs") != null && !jsonObj.get("inputConfigs").isJsonNull()) {
        JsonArray jsonArrayinputConfigs = jsonObj.getAsJsonArray("inputConfigs");
        if (jsonArrayinputConfigs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inputConfigs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inputConfigs` to be an array in the JSON string but got `%s`", jsonObj.get("inputConfigs").toString()));
          }

          // validate the optional field `inputConfigs` (array)
          for (int i = 0; i < jsonArrayinputConfigs.size(); i++) {
            GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchInputConfig.validateJsonElement(jsonArrayinputConfigs.get(i));
          };
        }
      }
      // validate the optional field `inputDocuments`
      if (jsonObj.get("inputDocuments") != null && !jsonObj.get("inputDocuments").isJsonNull()) {
        GoogleCloudDocumentaiV1beta3BatchDocumentsInputConfig.validateJsonElement(jsonObj.get("inputDocuments"));
      }
      // validate the optional field `outputConfig`
      if (jsonObj.get("outputConfig") != null && !jsonObj.get("outputConfig").isJsonNull()) {
        GoogleCloudDocumentaiV1beta3BatchProcessRequestBatchOutputConfig.validateJsonElement(jsonObj.get("outputConfig"));
      }
      // validate the optional field `processOptions`
      if (jsonObj.get("processOptions") != null && !jsonObj.get("processOptions").isJsonNull()) {
        GoogleCloudDocumentaiV1beta3ProcessOptions.validateJsonElement(jsonObj.get("processOptions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta3BatchProcessRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta3BatchProcessRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta3BatchProcessRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta3BatchProcessRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta3BatchProcessRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta3BatchProcessRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta3BatchProcessRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta3BatchProcessRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta3BatchProcessRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta3BatchProcessRequest
   */
  public static GoogleCloudDocumentaiV1beta3BatchProcessRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta3BatchProcessRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta3BatchProcessRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

