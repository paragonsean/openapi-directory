/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta1DocumentPageLayout;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta1DocumentProvenance;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A form field detected on the page.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:53.606360-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta1DocumentPageFormField {
  public static final String SERIALIZED_NAME_CORRECTED_KEY_TEXT = "correctedKeyText";
  @SerializedName(SERIALIZED_NAME_CORRECTED_KEY_TEXT)
  private String correctedKeyText;

  public static final String SERIALIZED_NAME_CORRECTED_VALUE_TEXT = "correctedValueText";
  @SerializedName(SERIALIZED_NAME_CORRECTED_VALUE_TEXT)
  private String correctedValueText;

  public static final String SERIALIZED_NAME_FIELD_NAME = "fieldName";
  @SerializedName(SERIALIZED_NAME_FIELD_NAME)
  private GoogleCloudDocumentaiV1beta1DocumentPageLayout fieldName;

  public static final String SERIALIZED_NAME_FIELD_VALUE = "fieldValue";
  @SerializedName(SERIALIZED_NAME_FIELD_VALUE)
  private GoogleCloudDocumentaiV1beta1DocumentPageLayout fieldValue;

  public static final String SERIALIZED_NAME_NAME_DETECTED_LANGUAGES = "nameDetectedLanguages";
  @SerializedName(SERIALIZED_NAME_NAME_DETECTED_LANGUAGES)
  private List<GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage> nameDetectedLanguages = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROVENANCE = "provenance";
  @SerializedName(SERIALIZED_NAME_PROVENANCE)
  private GoogleCloudDocumentaiV1beta1DocumentProvenance provenance;

  public static final String SERIALIZED_NAME_VALUE_DETECTED_LANGUAGES = "valueDetectedLanguages";
  @SerializedName(SERIALIZED_NAME_VALUE_DETECTED_LANGUAGES)
  private List<GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage> valueDetectedLanguages = new ArrayList<>();

  public static final String SERIALIZED_NAME_VALUE_TYPE = "valueType";
  @SerializedName(SERIALIZED_NAME_VALUE_TYPE)
  private String valueType;

  public GoogleCloudDocumentaiV1beta1DocumentPageFormField() {
  }

  public GoogleCloudDocumentaiV1beta1DocumentPageFormField correctedKeyText(String correctedKeyText) {
    this.correctedKeyText = correctedKeyText;
    return this;
  }

  /**
   * Created for Labeling UI to export key text. If corrections were made to the text identified by the &#x60;field_name.text_anchor&#x60;, this field will contain the correction.
   * @return correctedKeyText
   */
  @javax.annotation.Nullable
  public String getCorrectedKeyText() {
    return correctedKeyText;
  }

  public void setCorrectedKeyText(String correctedKeyText) {
    this.correctedKeyText = correctedKeyText;
  }


  public GoogleCloudDocumentaiV1beta1DocumentPageFormField correctedValueText(String correctedValueText) {
    this.correctedValueText = correctedValueText;
    return this;
  }

  /**
   * Created for Labeling UI to export value text. If corrections were made to the text identified by the &#x60;field_value.text_anchor&#x60;, this field will contain the correction.
   * @return correctedValueText
   */
  @javax.annotation.Nullable
  public String getCorrectedValueText() {
    return correctedValueText;
  }

  public void setCorrectedValueText(String correctedValueText) {
    this.correctedValueText = correctedValueText;
  }


  public GoogleCloudDocumentaiV1beta1DocumentPageFormField fieldName(GoogleCloudDocumentaiV1beta1DocumentPageLayout fieldName) {
    this.fieldName = fieldName;
    return this;
  }

  /**
   * Get fieldName
   * @return fieldName
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta1DocumentPageLayout getFieldName() {
    return fieldName;
  }

  public void setFieldName(GoogleCloudDocumentaiV1beta1DocumentPageLayout fieldName) {
    this.fieldName = fieldName;
  }


  public GoogleCloudDocumentaiV1beta1DocumentPageFormField fieldValue(GoogleCloudDocumentaiV1beta1DocumentPageLayout fieldValue) {
    this.fieldValue = fieldValue;
    return this;
  }

  /**
   * Get fieldValue
   * @return fieldValue
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta1DocumentPageLayout getFieldValue() {
    return fieldValue;
  }

  public void setFieldValue(GoogleCloudDocumentaiV1beta1DocumentPageLayout fieldValue) {
    this.fieldValue = fieldValue;
  }


  public GoogleCloudDocumentaiV1beta1DocumentPageFormField nameDetectedLanguages(List<GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage> nameDetectedLanguages) {
    this.nameDetectedLanguages = nameDetectedLanguages;
    return this;
  }

  public GoogleCloudDocumentaiV1beta1DocumentPageFormField addNameDetectedLanguagesItem(GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage nameDetectedLanguagesItem) {
    if (this.nameDetectedLanguages == null) {
      this.nameDetectedLanguages = new ArrayList<>();
    }
    this.nameDetectedLanguages.add(nameDetectedLanguagesItem);
    return this;
  }

  /**
   * A list of detected languages for name together with confidence.
   * @return nameDetectedLanguages
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage> getNameDetectedLanguages() {
    return nameDetectedLanguages;
  }

  public void setNameDetectedLanguages(List<GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage> nameDetectedLanguages) {
    this.nameDetectedLanguages = nameDetectedLanguages;
  }


  public GoogleCloudDocumentaiV1beta1DocumentPageFormField provenance(GoogleCloudDocumentaiV1beta1DocumentProvenance provenance) {
    this.provenance = provenance;
    return this;
  }

  /**
   * Get provenance
   * @return provenance
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta1DocumentProvenance getProvenance() {
    return provenance;
  }

  public void setProvenance(GoogleCloudDocumentaiV1beta1DocumentProvenance provenance) {
    this.provenance = provenance;
  }


  public GoogleCloudDocumentaiV1beta1DocumentPageFormField valueDetectedLanguages(List<GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage> valueDetectedLanguages) {
    this.valueDetectedLanguages = valueDetectedLanguages;
    return this;
  }

  public GoogleCloudDocumentaiV1beta1DocumentPageFormField addValueDetectedLanguagesItem(GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage valueDetectedLanguagesItem) {
    if (this.valueDetectedLanguages == null) {
      this.valueDetectedLanguages = new ArrayList<>();
    }
    this.valueDetectedLanguages.add(valueDetectedLanguagesItem);
    return this;
  }

  /**
   * A list of detected languages for value together with confidence.
   * @return valueDetectedLanguages
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage> getValueDetectedLanguages() {
    return valueDetectedLanguages;
  }

  public void setValueDetectedLanguages(List<GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage> valueDetectedLanguages) {
    this.valueDetectedLanguages = valueDetectedLanguages;
  }


  public GoogleCloudDocumentaiV1beta1DocumentPageFormField valueType(String valueType) {
    this.valueType = valueType;
    return this;
  }

  /**
   * If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the &#x60;field_value&#x60; is normal text) - &#x60;unfilled_checkbox&#x60; - &#x60;filled_checkbox&#x60;
   * @return valueType
   */
  @javax.annotation.Nullable
  public String getValueType() {
    return valueType;
  }

  public void setValueType(String valueType) {
    this.valueType = valueType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta1DocumentPageFormField googleCloudDocumentaiV1beta1DocumentPageFormField = (GoogleCloudDocumentaiV1beta1DocumentPageFormField) o;
    return Objects.equals(this.correctedKeyText, googleCloudDocumentaiV1beta1DocumentPageFormField.correctedKeyText) &&
        Objects.equals(this.correctedValueText, googleCloudDocumentaiV1beta1DocumentPageFormField.correctedValueText) &&
        Objects.equals(this.fieldName, googleCloudDocumentaiV1beta1DocumentPageFormField.fieldName) &&
        Objects.equals(this.fieldValue, googleCloudDocumentaiV1beta1DocumentPageFormField.fieldValue) &&
        Objects.equals(this.nameDetectedLanguages, googleCloudDocumentaiV1beta1DocumentPageFormField.nameDetectedLanguages) &&
        Objects.equals(this.provenance, googleCloudDocumentaiV1beta1DocumentPageFormField.provenance) &&
        Objects.equals(this.valueDetectedLanguages, googleCloudDocumentaiV1beta1DocumentPageFormField.valueDetectedLanguages) &&
        Objects.equals(this.valueType, googleCloudDocumentaiV1beta1DocumentPageFormField.valueType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(correctedKeyText, correctedValueText, fieldName, fieldValue, nameDetectedLanguages, provenance, valueDetectedLanguages, valueType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta1DocumentPageFormField {\n");
    sb.append("    correctedKeyText: ").append(toIndentedString(correctedKeyText)).append("\n");
    sb.append("    correctedValueText: ").append(toIndentedString(correctedValueText)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    fieldValue: ").append(toIndentedString(fieldValue)).append("\n");
    sb.append("    nameDetectedLanguages: ").append(toIndentedString(nameDetectedLanguages)).append("\n");
    sb.append("    provenance: ").append(toIndentedString(provenance)).append("\n");
    sb.append("    valueDetectedLanguages: ").append(toIndentedString(valueDetectedLanguages)).append("\n");
    sb.append("    valueType: ").append(toIndentedString(valueType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("correctedKeyText");
    openapiFields.add("correctedValueText");
    openapiFields.add("fieldName");
    openapiFields.add("fieldValue");
    openapiFields.add("nameDetectedLanguages");
    openapiFields.add("provenance");
    openapiFields.add("valueDetectedLanguages");
    openapiFields.add("valueType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta1DocumentPageFormField
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta1DocumentPageFormField.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta1DocumentPageFormField is not found in the empty JSON string", GoogleCloudDocumentaiV1beta1DocumentPageFormField.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta1DocumentPageFormField.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta1DocumentPageFormField` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("correctedKeyText") != null && !jsonObj.get("correctedKeyText").isJsonNull()) && !jsonObj.get("correctedKeyText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `correctedKeyText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("correctedKeyText").toString()));
      }
      if ((jsonObj.get("correctedValueText") != null && !jsonObj.get("correctedValueText").isJsonNull()) && !jsonObj.get("correctedValueText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `correctedValueText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("correctedValueText").toString()));
      }
      // validate the optional field `fieldName`
      if (jsonObj.get("fieldName") != null && !jsonObj.get("fieldName").isJsonNull()) {
        GoogleCloudDocumentaiV1beta1DocumentPageLayout.validateJsonElement(jsonObj.get("fieldName"));
      }
      // validate the optional field `fieldValue`
      if (jsonObj.get("fieldValue") != null && !jsonObj.get("fieldValue").isJsonNull()) {
        GoogleCloudDocumentaiV1beta1DocumentPageLayout.validateJsonElement(jsonObj.get("fieldValue"));
      }
      if (jsonObj.get("nameDetectedLanguages") != null && !jsonObj.get("nameDetectedLanguages").isJsonNull()) {
        JsonArray jsonArraynameDetectedLanguages = jsonObj.getAsJsonArray("nameDetectedLanguages");
        if (jsonArraynameDetectedLanguages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("nameDetectedLanguages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `nameDetectedLanguages` to be an array in the JSON string but got `%s`", jsonObj.get("nameDetectedLanguages").toString()));
          }

          // validate the optional field `nameDetectedLanguages` (array)
          for (int i = 0; i < jsonArraynameDetectedLanguages.size(); i++) {
            GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage.validateJsonElement(jsonArraynameDetectedLanguages.get(i));
          };
        }
      }
      // validate the optional field `provenance`
      if (jsonObj.get("provenance") != null && !jsonObj.get("provenance").isJsonNull()) {
        GoogleCloudDocumentaiV1beta1DocumentProvenance.validateJsonElement(jsonObj.get("provenance"));
      }
      if (jsonObj.get("valueDetectedLanguages") != null && !jsonObj.get("valueDetectedLanguages").isJsonNull()) {
        JsonArray jsonArrayvalueDetectedLanguages = jsonObj.getAsJsonArray("valueDetectedLanguages");
        if (jsonArrayvalueDetectedLanguages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("valueDetectedLanguages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `valueDetectedLanguages` to be an array in the JSON string but got `%s`", jsonObj.get("valueDetectedLanguages").toString()));
          }

          // validate the optional field `valueDetectedLanguages` (array)
          for (int i = 0; i < jsonArrayvalueDetectedLanguages.size(); i++) {
            GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage.validateJsonElement(jsonArrayvalueDetectedLanguages.get(i));
          };
        }
      }
      if ((jsonObj.get("valueType") != null && !jsonObj.get("valueType").isJsonNull()) && !jsonObj.get("valueType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `valueType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("valueType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta1DocumentPageFormField.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta1DocumentPageFormField' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta1DocumentPageFormField> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta1DocumentPageFormField.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta1DocumentPageFormField>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta1DocumentPageFormField value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta1DocumentPageFormField read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta1DocumentPageFormField given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta1DocumentPageFormField
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta1DocumentPageFormField
   */
  public static GoogleCloudDocumentaiV1beta1DocumentPageFormField fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta1DocumentPageFormField.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta1DocumentPageFormField to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

