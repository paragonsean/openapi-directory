/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2DocumentPageLayout;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta2DocumentProvenance;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A detected token.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:53.606360-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta2DocumentPageToken {
  public static final String SERIALIZED_NAME_DETECTED_BREAK = "detectedBreak";
  @SerializedName(SERIALIZED_NAME_DETECTED_BREAK)
  private GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak detectedBreak;

  public static final String SERIALIZED_NAME_DETECTED_LANGUAGES = "detectedLanguages";
  @SerializedName(SERIALIZED_NAME_DETECTED_LANGUAGES)
  private List<GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage> detectedLanguages = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAYOUT = "layout";
  @SerializedName(SERIALIZED_NAME_LAYOUT)
  private GoogleCloudDocumentaiV1beta2DocumentPageLayout layout;

  public static final String SERIALIZED_NAME_PROVENANCE = "provenance";
  @SerializedName(SERIALIZED_NAME_PROVENANCE)
  private GoogleCloudDocumentaiV1beta2DocumentProvenance provenance;

  public static final String SERIALIZED_NAME_STYLE_INFO = "styleInfo";
  @SerializedName(SERIALIZED_NAME_STYLE_INFO)
  private GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo styleInfo;

  public GoogleCloudDocumentaiV1beta2DocumentPageToken() {
  }

  public GoogleCloudDocumentaiV1beta2DocumentPageToken detectedBreak(GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak detectedBreak) {
    this.detectedBreak = detectedBreak;
    return this;
  }

  /**
   * Get detectedBreak
   * @return detectedBreak
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak getDetectedBreak() {
    return detectedBreak;
  }

  public void setDetectedBreak(GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak detectedBreak) {
    this.detectedBreak = detectedBreak;
  }


  public GoogleCloudDocumentaiV1beta2DocumentPageToken detectedLanguages(List<GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage> detectedLanguages) {
    this.detectedLanguages = detectedLanguages;
    return this;
  }

  public GoogleCloudDocumentaiV1beta2DocumentPageToken addDetectedLanguagesItem(GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage detectedLanguagesItem) {
    if (this.detectedLanguages == null) {
      this.detectedLanguages = new ArrayList<>();
    }
    this.detectedLanguages.add(detectedLanguagesItem);
    return this;
  }

  /**
   * A list of detected languages together with confidence.
   * @return detectedLanguages
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage> getDetectedLanguages() {
    return detectedLanguages;
  }

  public void setDetectedLanguages(List<GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage> detectedLanguages) {
    this.detectedLanguages = detectedLanguages;
  }


  public GoogleCloudDocumentaiV1beta2DocumentPageToken layout(GoogleCloudDocumentaiV1beta2DocumentPageLayout layout) {
    this.layout = layout;
    return this;
  }

  /**
   * Get layout
   * @return layout
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2DocumentPageLayout getLayout() {
    return layout;
  }

  public void setLayout(GoogleCloudDocumentaiV1beta2DocumentPageLayout layout) {
    this.layout = layout;
  }


  public GoogleCloudDocumentaiV1beta2DocumentPageToken provenance(GoogleCloudDocumentaiV1beta2DocumentProvenance provenance) {
    this.provenance = provenance;
    return this;
  }

  /**
   * Get provenance
   * @return provenance
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2DocumentProvenance getProvenance() {
    return provenance;
  }

  public void setProvenance(GoogleCloudDocumentaiV1beta2DocumentProvenance provenance) {
    this.provenance = provenance;
  }


  public GoogleCloudDocumentaiV1beta2DocumentPageToken styleInfo(GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo styleInfo) {
    this.styleInfo = styleInfo;
    return this;
  }

  /**
   * Get styleInfo
   * @return styleInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo getStyleInfo() {
    return styleInfo;
  }

  public void setStyleInfo(GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo styleInfo) {
    this.styleInfo = styleInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta2DocumentPageToken googleCloudDocumentaiV1beta2DocumentPageToken = (GoogleCloudDocumentaiV1beta2DocumentPageToken) o;
    return Objects.equals(this.detectedBreak, googleCloudDocumentaiV1beta2DocumentPageToken.detectedBreak) &&
        Objects.equals(this.detectedLanguages, googleCloudDocumentaiV1beta2DocumentPageToken.detectedLanguages) &&
        Objects.equals(this.layout, googleCloudDocumentaiV1beta2DocumentPageToken.layout) &&
        Objects.equals(this.provenance, googleCloudDocumentaiV1beta2DocumentPageToken.provenance) &&
        Objects.equals(this.styleInfo, googleCloudDocumentaiV1beta2DocumentPageToken.styleInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detectedBreak, detectedLanguages, layout, provenance, styleInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta2DocumentPageToken {\n");
    sb.append("    detectedBreak: ").append(toIndentedString(detectedBreak)).append("\n");
    sb.append("    detectedLanguages: ").append(toIndentedString(detectedLanguages)).append("\n");
    sb.append("    layout: ").append(toIndentedString(layout)).append("\n");
    sb.append("    provenance: ").append(toIndentedString(provenance)).append("\n");
    sb.append("    styleInfo: ").append(toIndentedString(styleInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("detectedBreak");
    openapiFields.add("detectedLanguages");
    openapiFields.add("layout");
    openapiFields.add("provenance");
    openapiFields.add("styleInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta2DocumentPageToken
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta2DocumentPageToken.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta2DocumentPageToken is not found in the empty JSON string", GoogleCloudDocumentaiV1beta2DocumentPageToken.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta2DocumentPageToken.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta2DocumentPageToken` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `detectedBreak`
      if (jsonObj.get("detectedBreak") != null && !jsonObj.get("detectedBreak").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak.validateJsonElement(jsonObj.get("detectedBreak"));
      }
      if (jsonObj.get("detectedLanguages") != null && !jsonObj.get("detectedLanguages").isJsonNull()) {
        JsonArray jsonArraydetectedLanguages = jsonObj.getAsJsonArray("detectedLanguages");
        if (jsonArraydetectedLanguages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("detectedLanguages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `detectedLanguages` to be an array in the JSON string but got `%s`", jsonObj.get("detectedLanguages").toString()));
          }

          // validate the optional field `detectedLanguages` (array)
          for (int i = 0; i < jsonArraydetectedLanguages.size(); i++) {
            GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage.validateJsonElement(jsonArraydetectedLanguages.get(i));
          };
        }
      }
      // validate the optional field `layout`
      if (jsonObj.get("layout") != null && !jsonObj.get("layout").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2DocumentPageLayout.validateJsonElement(jsonObj.get("layout"));
      }
      // validate the optional field `provenance`
      if (jsonObj.get("provenance") != null && !jsonObj.get("provenance").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2DocumentProvenance.validateJsonElement(jsonObj.get("provenance"));
      }
      // validate the optional field `styleInfo`
      if (jsonObj.get("styleInfo") != null && !jsonObj.get("styleInfo").isJsonNull()) {
        GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo.validateJsonElement(jsonObj.get("styleInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta2DocumentPageToken.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta2DocumentPageToken' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta2DocumentPageToken> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta2DocumentPageToken.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta2DocumentPageToken>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta2DocumentPageToken value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta2DocumentPageToken read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta2DocumentPageToken given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta2DocumentPageToken
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta2DocumentPageToken
   */
  public static GoogleCloudDocumentaiV1beta2DocumentPageToken fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta2DocumentPageToken.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta2DocumentPageToken to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

