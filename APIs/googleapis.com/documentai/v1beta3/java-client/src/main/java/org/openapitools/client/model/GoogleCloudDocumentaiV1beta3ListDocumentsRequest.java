/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudDocumentaiV1beta3ListDocumentsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:53.606360-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta3ListDocumentsRequest {
  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  public static final String SERIALIZED_NAME_RETURN_TOTAL_SIZE = "returnTotalSize";
  @SerializedName(SERIALIZED_NAME_RETURN_TOTAL_SIZE)
  private Boolean returnTotalSize;

  public static final String SERIALIZED_NAME_SKIP = "skip";
  @SerializedName(SERIALIZED_NAME_SKIP)
  private Integer skip;

  public GoogleCloudDocumentaiV1beta3ListDocumentsRequest() {
  }

  public GoogleCloudDocumentaiV1beta3ListDocumentsRequest filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Optional. Query to filter the documents based on https://google.aip.dev/160. ## Currently support query strings are: &#x60;SplitType&#x3D;DATASET_SPLIT_TEST|DATASET_SPLIT_TRAIN|DATASET_SPLIT_UNASSIGNED&#x60; - &#x60;LabelingState&#x3D;DOCUMENT_LABELED|DOCUMENT_UNLABELED|DOCUMENT_AUTO_LABELED&#x60; - &#x60;DisplayName&#x3D;\\\&quot;file_name.pdf\\\&quot;&#x60; - &#x60;EntityType&#x3D;abc/def&#x60; - &#x60;TagName&#x3D;\\\&quot;auto-labeling-running\\\&quot;|\\\&quot;sampled\\\&quot;&#x60; Note: - Only &#x60;AND&#x60;, &#x60;&#x3D;&#x60; and &#x60;!&#x3D;&#x60; are supported. e.g. &#x60;DisplayName&#x3D;file_name AND EntityType!&#x3D;abc&#x60; IS supported. - Wildcard &#x60;*&#x60; is supported only in &#x60;DisplayName&#x60; filter - No duplicate filter keys are allowed, e.g. &#x60;EntityType&#x3D;a AND EntityType&#x3D;b&#x60; is NOT supported. - String match is case sensitive (for filter &#x60;DisplayName&#x60; &amp; &#x60;EntityType&#x60;).
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudDocumentaiV1beta3ListDocumentsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * The maximum number of documents to return. The service may return fewer than this value. If unspecified, at most 20 documents will be returned. The maximum value is 100; values above 100 will be coerced to 100.
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public GoogleCloudDocumentaiV1beta3ListDocumentsRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * A page token, received from a previous &#x60;ListDocuments&#x60; call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to &#x60;ListDocuments&#x60; must match the call that provided the page token.
   * @return pageToken
   */
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }


  public GoogleCloudDocumentaiV1beta3ListDocumentsRequest returnTotalSize(Boolean returnTotalSize) {
    this.returnTotalSize = returnTotalSize;
    return this;
  }

  /**
   * Optional. Controls if the request requires a total size of matched documents. See ListDocumentsResponse.total_size. Enabling this flag may adversely impact performance. Defaults to false.
   * @return returnTotalSize
   */
  @javax.annotation.Nullable
  public Boolean getReturnTotalSize() {
    return returnTotalSize;
  }

  public void setReturnTotalSize(Boolean returnTotalSize) {
    this.returnTotalSize = returnTotalSize;
  }


  public GoogleCloudDocumentaiV1beta3ListDocumentsRequest skip(Integer skip) {
    this.skip = skip;
    return this;
  }

  /**
   * Optional. Number of results to skip beginning from the &#x60;page_token&#x60; if provided. https://google.aip.dev/158#skipping-results. It must be a non-negative integer. Negative values will be rejected. Note that this is not the number of pages to skip. If this value causes the cursor to move past the end of results, ListDocumentsResponse.document_metadata and ListDocumentsResponse.next_page_token will be empty.
   * @return skip
   */
  @javax.annotation.Nullable
  public Integer getSkip() {
    return skip;
  }

  public void setSkip(Integer skip) {
    this.skip = skip;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta3ListDocumentsRequest googleCloudDocumentaiV1beta3ListDocumentsRequest = (GoogleCloudDocumentaiV1beta3ListDocumentsRequest) o;
    return Objects.equals(this.filter, googleCloudDocumentaiV1beta3ListDocumentsRequest.filter) &&
        Objects.equals(this.pageSize, googleCloudDocumentaiV1beta3ListDocumentsRequest.pageSize) &&
        Objects.equals(this.pageToken, googleCloudDocumentaiV1beta3ListDocumentsRequest.pageToken) &&
        Objects.equals(this.returnTotalSize, googleCloudDocumentaiV1beta3ListDocumentsRequest.returnTotalSize) &&
        Objects.equals(this.skip, googleCloudDocumentaiV1beta3ListDocumentsRequest.skip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filter, pageSize, pageToken, returnTotalSize, skip);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta3ListDocumentsRequest {\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("    returnTotalSize: ").append(toIndentedString(returnTotalSize)).append("\n");
    sb.append("    skip: ").append(toIndentedString(skip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("filter");
    openapiFields.add("pageSize");
    openapiFields.add("pageToken");
    openapiFields.add("returnTotalSize");
    openapiFields.add("skip");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta3ListDocumentsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta3ListDocumentsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta3ListDocumentsRequest is not found in the empty JSON string", GoogleCloudDocumentaiV1beta3ListDocumentsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta3ListDocumentsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta3ListDocumentsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta3ListDocumentsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta3ListDocumentsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta3ListDocumentsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta3ListDocumentsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta3ListDocumentsRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta3ListDocumentsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta3ListDocumentsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta3ListDocumentsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta3ListDocumentsRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta3ListDocumentsRequest
   */
  public static GoogleCloudDocumentaiV1beta3ListDocumentsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta3ListDocumentsRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta3ListDocumentsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

