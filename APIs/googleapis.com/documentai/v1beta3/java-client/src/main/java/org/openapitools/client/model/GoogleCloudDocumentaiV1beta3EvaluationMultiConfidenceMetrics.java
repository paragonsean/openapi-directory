/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metrics across multiple confidence levels.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:53.606360-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics {
  public static final String SERIALIZED_NAME_AUPRC = "auprc";
  @SerializedName(SERIALIZED_NAME_AUPRC)
  private Float auprc;

  public static final String SERIALIZED_NAME_AUPRC_EXACT = "auprcExact";
  @SerializedName(SERIALIZED_NAME_AUPRC_EXACT)
  private Float auprcExact;

  public static final String SERIALIZED_NAME_CONFIDENCE_LEVEL_METRICS = "confidenceLevelMetrics";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE_LEVEL_METRICS)
  private List<GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics> confidenceLevelMetrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONFIDENCE_LEVEL_METRICS_EXACT = "confidenceLevelMetricsExact";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE_LEVEL_METRICS_EXACT)
  private List<GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics> confidenceLevelMetricsExact = new ArrayList<>();

  public static final String SERIALIZED_NAME_ESTIMATED_CALIBRATION_ERROR = "estimatedCalibrationError";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_CALIBRATION_ERROR)
  private Float estimatedCalibrationError;

  public static final String SERIALIZED_NAME_ESTIMATED_CALIBRATION_ERROR_EXACT = "estimatedCalibrationErrorExact";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_CALIBRATION_ERROR_EXACT)
  private Float estimatedCalibrationErrorExact;

  /**
   * The metrics type for the label.
   */
  @JsonAdapter(MetricsTypeEnum.Adapter.class)
  public enum MetricsTypeEnum {
    METRICS_TYPE_UNSPECIFIED("METRICS_TYPE_UNSPECIFIED"),
    
    AGGREGATE("AGGREGATE");

    private String value;

    MetricsTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MetricsTypeEnum fromValue(String value) {
      for (MetricsTypeEnum b : MetricsTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MetricsTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MetricsTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MetricsTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MetricsTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MetricsTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_METRICS_TYPE = "metricsType";
  @SerializedName(SERIALIZED_NAME_METRICS_TYPE)
  private MetricsTypeEnum metricsType;

  public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics() {
  }

  public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics auprc(Float auprc) {
    this.auprc = auprc;
    return this;
  }

  /**
   * The calculated area under the precision recall curve (AUPRC), computed by integrating over all confidence thresholds.
   * @return auprc
   */
  @javax.annotation.Nullable
  public Float getAuprc() {
    return auprc;
  }

  public void setAuprc(Float auprc) {
    this.auprc = auprc;
  }


  public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics auprcExact(Float auprcExact) {
    this.auprcExact = auprcExact;
    return this;
  }

  /**
   * The AUPRC for metrics with fuzzy matching disabled, i.e., exact matching only.
   * @return auprcExact
   */
  @javax.annotation.Nullable
  public Float getAuprcExact() {
    return auprcExact;
  }

  public void setAuprcExact(Float auprcExact) {
    this.auprcExact = auprcExact;
  }


  public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics confidenceLevelMetrics(List<GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics> confidenceLevelMetrics) {
    this.confidenceLevelMetrics = confidenceLevelMetrics;
    return this;
  }

  public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics addConfidenceLevelMetricsItem(GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics confidenceLevelMetricsItem) {
    if (this.confidenceLevelMetrics == null) {
      this.confidenceLevelMetrics = new ArrayList<>();
    }
    this.confidenceLevelMetrics.add(confidenceLevelMetricsItem);
    return this;
  }

  /**
   * Metrics across confidence levels with fuzzy matching enabled.
   * @return confidenceLevelMetrics
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics> getConfidenceLevelMetrics() {
    return confidenceLevelMetrics;
  }

  public void setConfidenceLevelMetrics(List<GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics> confidenceLevelMetrics) {
    this.confidenceLevelMetrics = confidenceLevelMetrics;
  }


  public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics confidenceLevelMetricsExact(List<GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics> confidenceLevelMetricsExact) {
    this.confidenceLevelMetricsExact = confidenceLevelMetricsExact;
    return this;
  }

  public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics addConfidenceLevelMetricsExactItem(GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics confidenceLevelMetricsExactItem) {
    if (this.confidenceLevelMetricsExact == null) {
      this.confidenceLevelMetricsExact = new ArrayList<>();
    }
    this.confidenceLevelMetricsExact.add(confidenceLevelMetricsExactItem);
    return this;
  }

  /**
   * Metrics across confidence levels with only exact matching.
   * @return confidenceLevelMetricsExact
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics> getConfidenceLevelMetricsExact() {
    return confidenceLevelMetricsExact;
  }

  public void setConfidenceLevelMetricsExact(List<GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics> confidenceLevelMetricsExact) {
    this.confidenceLevelMetricsExact = confidenceLevelMetricsExact;
  }


  public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics estimatedCalibrationError(Float estimatedCalibrationError) {
    this.estimatedCalibrationError = estimatedCalibrationError;
    return this;
  }

  /**
   * The Estimated Calibration Error (ECE) of the confidence of the predicted entities.
   * @return estimatedCalibrationError
   */
  @javax.annotation.Nullable
  public Float getEstimatedCalibrationError() {
    return estimatedCalibrationError;
  }

  public void setEstimatedCalibrationError(Float estimatedCalibrationError) {
    this.estimatedCalibrationError = estimatedCalibrationError;
  }


  public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics estimatedCalibrationErrorExact(Float estimatedCalibrationErrorExact) {
    this.estimatedCalibrationErrorExact = estimatedCalibrationErrorExact;
    return this;
  }

  /**
   * The ECE for the predicted entities with fuzzy matching disabled, i.e., exact matching only.
   * @return estimatedCalibrationErrorExact
   */
  @javax.annotation.Nullable
  public Float getEstimatedCalibrationErrorExact() {
    return estimatedCalibrationErrorExact;
  }

  public void setEstimatedCalibrationErrorExact(Float estimatedCalibrationErrorExact) {
    this.estimatedCalibrationErrorExact = estimatedCalibrationErrorExact;
  }


  public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics metricsType(MetricsTypeEnum metricsType) {
    this.metricsType = metricsType;
    return this;
  }

  /**
   * The metrics type for the label.
   * @return metricsType
   */
  @javax.annotation.Nullable
  public MetricsTypeEnum getMetricsType() {
    return metricsType;
  }

  public void setMetricsType(MetricsTypeEnum metricsType) {
    this.metricsType = metricsType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics googleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics = (GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics) o;
    return Objects.equals(this.auprc, googleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.auprc) &&
        Objects.equals(this.auprcExact, googleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.auprcExact) &&
        Objects.equals(this.confidenceLevelMetrics, googleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.confidenceLevelMetrics) &&
        Objects.equals(this.confidenceLevelMetricsExact, googleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.confidenceLevelMetricsExact) &&
        Objects.equals(this.estimatedCalibrationError, googleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.estimatedCalibrationError) &&
        Objects.equals(this.estimatedCalibrationErrorExact, googleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.estimatedCalibrationErrorExact) &&
        Objects.equals(this.metricsType, googleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.metricsType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auprc, auprcExact, confidenceLevelMetrics, confidenceLevelMetricsExact, estimatedCalibrationError, estimatedCalibrationErrorExact, metricsType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics {\n");
    sb.append("    auprc: ").append(toIndentedString(auprc)).append("\n");
    sb.append("    auprcExact: ").append(toIndentedString(auprcExact)).append("\n");
    sb.append("    confidenceLevelMetrics: ").append(toIndentedString(confidenceLevelMetrics)).append("\n");
    sb.append("    confidenceLevelMetricsExact: ").append(toIndentedString(confidenceLevelMetricsExact)).append("\n");
    sb.append("    estimatedCalibrationError: ").append(toIndentedString(estimatedCalibrationError)).append("\n");
    sb.append("    estimatedCalibrationErrorExact: ").append(toIndentedString(estimatedCalibrationErrorExact)).append("\n");
    sb.append("    metricsType: ").append(toIndentedString(metricsType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("auprc");
    openapiFields.add("auprcExact");
    openapiFields.add("confidenceLevelMetrics");
    openapiFields.add("confidenceLevelMetricsExact");
    openapiFields.add("estimatedCalibrationError");
    openapiFields.add("estimatedCalibrationErrorExact");
    openapiFields.add("metricsType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics is not found in the empty JSON string", GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("confidenceLevelMetrics") != null && !jsonObj.get("confidenceLevelMetrics").isJsonNull()) {
        JsonArray jsonArrayconfidenceLevelMetrics = jsonObj.getAsJsonArray("confidenceLevelMetrics");
        if (jsonArrayconfidenceLevelMetrics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("confidenceLevelMetrics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `confidenceLevelMetrics` to be an array in the JSON string but got `%s`", jsonObj.get("confidenceLevelMetrics").toString()));
          }

          // validate the optional field `confidenceLevelMetrics` (array)
          for (int i = 0; i < jsonArrayconfidenceLevelMetrics.size(); i++) {
            GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics.validateJsonElement(jsonArrayconfidenceLevelMetrics.get(i));
          };
        }
      }
      if (jsonObj.get("confidenceLevelMetricsExact") != null && !jsonObj.get("confidenceLevelMetricsExact").isJsonNull()) {
        JsonArray jsonArrayconfidenceLevelMetricsExact = jsonObj.getAsJsonArray("confidenceLevelMetricsExact");
        if (jsonArrayconfidenceLevelMetricsExact != null) {
          // ensure the json data is an array
          if (!jsonObj.get("confidenceLevelMetricsExact").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `confidenceLevelMetricsExact` to be an array in the JSON string but got `%s`", jsonObj.get("confidenceLevelMetricsExact").toString()));
          }

          // validate the optional field `confidenceLevelMetricsExact` (array)
          for (int i = 0; i < jsonArrayconfidenceLevelMetricsExact.size(); i++) {
            GoogleCloudDocumentaiV1beta3EvaluationConfidenceLevelMetrics.validateJsonElement(jsonArrayconfidenceLevelMetricsExact.get(i));
          };
        }
      }
      if ((jsonObj.get("metricsType") != null && !jsonObj.get("metricsType").isJsonNull()) && !jsonObj.get("metricsType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metricsType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metricsType").toString()));
      }
      // validate the optional field `metricsType`
      if (jsonObj.get("metricsType") != null && !jsonObj.get("metricsType").isJsonNull()) {
        MetricsTypeEnum.validateJsonElement(jsonObj.get("metricsType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics
   */
  public static GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

