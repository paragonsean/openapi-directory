/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3ProcessorVersionAlias;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The first-class citizen for Document AI. Each processor defines how to extract structural information from a document.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:53.606360-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta3Processor {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DEFAULT_PROCESSOR_VERSION = "defaultProcessorVersion";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PROCESSOR_VERSION)
  private String defaultProcessorVersion;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_KMS_KEY_NAME = "kmsKeyName";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_NAME)
  private String kmsKeyName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROCESS_ENDPOINT = "processEndpoint";
  @SerializedName(SERIALIZED_NAME_PROCESS_ENDPOINT)
  private String processEndpoint;

  public static final String SERIALIZED_NAME_PROCESSOR_VERSION_ALIASES = "processorVersionAliases";
  @SerializedName(SERIALIZED_NAME_PROCESSOR_VERSION_ALIASES)
  private List<GoogleCloudDocumentaiV1beta3ProcessorVersionAlias> processorVersionAliases = new ArrayList<>();

  /**
   * Output only. The state of the processor.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    ENABLED("ENABLED"),
    
    DISABLED("DISABLED"),
    
    ENABLING("ENABLING"),
    
    DISABLING("DISABLING"),
    
    CREATING("CREATING"),
    
    FAILED("FAILED"),
    
    DELETING("DELETING");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public GoogleCloudDocumentaiV1beta3Processor() {
  }

  public GoogleCloudDocumentaiV1beta3Processor(
     String name, 
     String processEndpoint, 
     List<GoogleCloudDocumentaiV1beta3ProcessorVersionAlias> processorVersionAliases, 
     StateEnum state
  ) {
    this();
    this.name = name;
    this.processEndpoint = processEndpoint;
    this.processorVersionAliases = processorVersionAliases;
    this.state = state;
  }

  public GoogleCloudDocumentaiV1beta3Processor createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The time the processor was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudDocumentaiV1beta3Processor defaultProcessorVersion(String defaultProcessorVersion) {
    this.defaultProcessorVersion = defaultProcessorVersion;
    return this;
  }

  /**
   * The default processor version.
   * @return defaultProcessorVersion
   */
  @javax.annotation.Nullable
  public String getDefaultProcessorVersion() {
    return defaultProcessorVersion;
  }

  public void setDefaultProcessorVersion(String defaultProcessorVersion) {
    this.defaultProcessorVersion = defaultProcessorVersion;
  }


  public GoogleCloudDocumentaiV1beta3Processor displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of the processor.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDocumentaiV1beta3Processor kmsKeyName(String kmsKeyName) {
    this.kmsKeyName = kmsKeyName;
    return this;
  }

  /**
   * The [KMS key](https://cloud.google.com/security-key-management) used for encryption and decryption in CMEK scenarios.
   * @return kmsKeyName
   */
  @javax.annotation.Nullable
  public String getKmsKeyName() {
    return kmsKeyName;
  }

  public void setKmsKeyName(String kmsKeyName) {
    this.kmsKeyName = kmsKeyName;
  }


  /**
   * Output only. Immutable. The resource name of the processor. Format: &#x60;projects/{project}/locations/{location}/processors/{processor}&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. Immutable. The http endpoint that can be called to invoke processing.
   * @return processEndpoint
   */
  @javax.annotation.Nullable
  public String getProcessEndpoint() {
    return processEndpoint;
  }



  /**
   * Output only. The processor version aliases.
   * @return processorVersionAliases
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiV1beta3ProcessorVersionAlias> getProcessorVersionAliases() {
    return processorVersionAliases;
  }



  /**
   * Output only. The state of the processor.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  public GoogleCloudDocumentaiV1beta3Processor type(String type) {
    this.type = type;
    return this;
  }

  /**
   * The processor type, such as: &#x60;OCR_PROCESSOR&#x60;, &#x60;INVOICE_PROCESSOR&#x60;. To get a list of processor types, see FetchProcessorTypes.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta3Processor googleCloudDocumentaiV1beta3Processor = (GoogleCloudDocumentaiV1beta3Processor) o;
    return Objects.equals(this.createTime, googleCloudDocumentaiV1beta3Processor.createTime) &&
        Objects.equals(this.defaultProcessorVersion, googleCloudDocumentaiV1beta3Processor.defaultProcessorVersion) &&
        Objects.equals(this.displayName, googleCloudDocumentaiV1beta3Processor.displayName) &&
        Objects.equals(this.kmsKeyName, googleCloudDocumentaiV1beta3Processor.kmsKeyName) &&
        Objects.equals(this.name, googleCloudDocumentaiV1beta3Processor.name) &&
        Objects.equals(this.processEndpoint, googleCloudDocumentaiV1beta3Processor.processEndpoint) &&
        Objects.equals(this.processorVersionAliases, googleCloudDocumentaiV1beta3Processor.processorVersionAliases) &&
        Objects.equals(this.state, googleCloudDocumentaiV1beta3Processor.state) &&
        Objects.equals(this.type, googleCloudDocumentaiV1beta3Processor.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, defaultProcessorVersion, displayName, kmsKeyName, name, processEndpoint, processorVersionAliases, state, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta3Processor {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    defaultProcessorVersion: ").append(toIndentedString(defaultProcessorVersion)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    kmsKeyName: ").append(toIndentedString(kmsKeyName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    processEndpoint: ").append(toIndentedString(processEndpoint)).append("\n");
    sb.append("    processorVersionAliases: ").append(toIndentedString(processorVersionAliases)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("defaultProcessorVersion");
    openapiFields.add("displayName");
    openapiFields.add("kmsKeyName");
    openapiFields.add("name");
    openapiFields.add("processEndpoint");
    openapiFields.add("processorVersionAliases");
    openapiFields.add("state");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta3Processor
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta3Processor.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta3Processor is not found in the empty JSON string", GoogleCloudDocumentaiV1beta3Processor.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta3Processor.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta3Processor` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("defaultProcessorVersion") != null && !jsonObj.get("defaultProcessorVersion").isJsonNull()) && !jsonObj.get("defaultProcessorVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultProcessorVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultProcessorVersion").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("kmsKeyName") != null && !jsonObj.get("kmsKeyName").isJsonNull()) && !jsonObj.get("kmsKeyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kmsKeyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kmsKeyName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("processEndpoint") != null && !jsonObj.get("processEndpoint").isJsonNull()) && !jsonObj.get("processEndpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processEndpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processEndpoint").toString()));
      }
      if (jsonObj.get("processorVersionAliases") != null && !jsonObj.get("processorVersionAliases").isJsonNull()) {
        JsonArray jsonArrayprocessorVersionAliases = jsonObj.getAsJsonArray("processorVersionAliases");
        if (jsonArrayprocessorVersionAliases != null) {
          // ensure the json data is an array
          if (!jsonObj.get("processorVersionAliases").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `processorVersionAliases` to be an array in the JSON string but got `%s`", jsonObj.get("processorVersionAliases").toString()));
          }

          // validate the optional field `processorVersionAliases` (array)
          for (int i = 0; i < jsonArrayprocessorVersionAliases.size(); i++) {
            GoogleCloudDocumentaiV1beta3ProcessorVersionAlias.validateJsonElement(jsonArrayprocessorVersionAliases.get(i));
          };
        }
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta3Processor.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta3Processor' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta3Processor> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta3Processor.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta3Processor>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta3Processor value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta3Processor read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta3Processor given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta3Processor
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta3Processor
   */
  public static GoogleCloudDocumentaiV1beta3Processor fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta3Processor.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta3Processor to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

