/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId;
import org.openapitools.client.model.GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId;
import org.openapitools.client.model.GoogleCloudDocumentaiUiv1beta3RevisionRef;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Document Identifier.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:53.606360-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiUiv1beta3DocumentId {
  public static final String SERIALIZED_NAME_GCS_MANAGED_DOC_ID = "gcsManagedDocId";
  @SerializedName(SERIALIZED_NAME_GCS_MANAGED_DOC_ID)
  private GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId gcsManagedDocId;

  public static final String SERIALIZED_NAME_REVISION_REF = "revisionRef";
  @SerializedName(SERIALIZED_NAME_REVISION_REF)
  private GoogleCloudDocumentaiUiv1beta3RevisionRef revisionRef;

  public static final String SERIALIZED_NAME_UNMANAGED_DOC_ID = "unmanagedDocId";
  @SerializedName(SERIALIZED_NAME_UNMANAGED_DOC_ID)
  private GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId unmanagedDocId;

  public GoogleCloudDocumentaiUiv1beta3DocumentId() {
  }

  public GoogleCloudDocumentaiUiv1beta3DocumentId gcsManagedDocId(GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId gcsManagedDocId) {
    this.gcsManagedDocId = gcsManagedDocId;
    return this;
  }

  /**
   * Get gcsManagedDocId
   * @return gcsManagedDocId
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId getGcsManagedDocId() {
    return gcsManagedDocId;
  }

  public void setGcsManagedDocId(GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId gcsManagedDocId) {
    this.gcsManagedDocId = gcsManagedDocId;
  }


  public GoogleCloudDocumentaiUiv1beta3DocumentId revisionRef(GoogleCloudDocumentaiUiv1beta3RevisionRef revisionRef) {
    this.revisionRef = revisionRef;
    return this;
  }

  /**
   * Get revisionRef
   * @return revisionRef
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiUiv1beta3RevisionRef getRevisionRef() {
    return revisionRef;
  }

  public void setRevisionRef(GoogleCloudDocumentaiUiv1beta3RevisionRef revisionRef) {
    this.revisionRef = revisionRef;
  }


  public GoogleCloudDocumentaiUiv1beta3DocumentId unmanagedDocId(GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId unmanagedDocId) {
    this.unmanagedDocId = unmanagedDocId;
    return this;
  }

  /**
   * Get unmanagedDocId
   * @return unmanagedDocId
   */
  @javax.annotation.Nullable
  public GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId getUnmanagedDocId() {
    return unmanagedDocId;
  }

  public void setUnmanagedDocId(GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId unmanagedDocId) {
    this.unmanagedDocId = unmanagedDocId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiUiv1beta3DocumentId googleCloudDocumentaiUiv1beta3DocumentId = (GoogleCloudDocumentaiUiv1beta3DocumentId) o;
    return Objects.equals(this.gcsManagedDocId, googleCloudDocumentaiUiv1beta3DocumentId.gcsManagedDocId) &&
        Objects.equals(this.revisionRef, googleCloudDocumentaiUiv1beta3DocumentId.revisionRef) &&
        Objects.equals(this.unmanagedDocId, googleCloudDocumentaiUiv1beta3DocumentId.unmanagedDocId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gcsManagedDocId, revisionRef, unmanagedDocId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiUiv1beta3DocumentId {\n");
    sb.append("    gcsManagedDocId: ").append(toIndentedString(gcsManagedDocId)).append("\n");
    sb.append("    revisionRef: ").append(toIndentedString(revisionRef)).append("\n");
    sb.append("    unmanagedDocId: ").append(toIndentedString(unmanagedDocId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("gcsManagedDocId");
    openapiFields.add("revisionRef");
    openapiFields.add("unmanagedDocId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiUiv1beta3DocumentId
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiUiv1beta3DocumentId.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiUiv1beta3DocumentId is not found in the empty JSON string", GoogleCloudDocumentaiUiv1beta3DocumentId.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiUiv1beta3DocumentId.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiUiv1beta3DocumentId` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `gcsManagedDocId`
      if (jsonObj.get("gcsManagedDocId") != null && !jsonObj.get("gcsManagedDocId").isJsonNull()) {
        GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId.validateJsonElement(jsonObj.get("gcsManagedDocId"));
      }
      // validate the optional field `revisionRef`
      if (jsonObj.get("revisionRef") != null && !jsonObj.get("revisionRef").isJsonNull()) {
        GoogleCloudDocumentaiUiv1beta3RevisionRef.validateJsonElement(jsonObj.get("revisionRef"));
      }
      // validate the optional field `unmanagedDocId`
      if (jsonObj.get("unmanagedDocId") != null && !jsonObj.get("unmanagedDocId").isJsonNull()) {
        GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId.validateJsonElement(jsonObj.get("unmanagedDocId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiUiv1beta3DocumentId.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiUiv1beta3DocumentId' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiUiv1beta3DocumentId> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiUiv1beta3DocumentId.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiUiv1beta3DocumentId>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiUiv1beta3DocumentId value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiUiv1beta3DocumentId read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiUiv1beta3DocumentId given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiUiv1beta3DocumentId
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiUiv1beta3DocumentId
   */
  public static GoogleCloudDocumentaiUiv1beta3DocumentId fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiUiv1beta3DocumentId.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiUiv1beta3DocumentId to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

