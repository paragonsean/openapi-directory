/*
 * Cloud Document AI API
 * Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A processor type is responsible for performing a certain document understanding task on a certain type of document.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:53.606360-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDocumentaiV1beta3ProcessorType {
  public static final String SERIALIZED_NAME_ALLOW_CREATION = "allowCreation";
  @SerializedName(SERIALIZED_NAME_ALLOW_CREATION)
  private Boolean allowCreation;

  public static final String SERIALIZED_NAME_AVAILABLE_LOCATIONS = "availableLocations";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_LOCATIONS)
  private List<GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo> availableLocations = new ArrayList<>();

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  /**
   * Launch stage of the processor type
   */
  @JsonAdapter(LaunchStageEnum.Adapter.class)
  public enum LaunchStageEnum {
    LAUNCH_STAGE_UNSPECIFIED("LAUNCH_STAGE_UNSPECIFIED"),
    
    UNIMPLEMENTED("UNIMPLEMENTED"),
    
    PRELAUNCH("PRELAUNCH"),
    
    EARLY_ACCESS("EARLY_ACCESS"),
    
    ALPHA("ALPHA"),
    
    BETA("BETA"),
    
    GA("GA"),
    
    DEPRECATED("DEPRECATED");

    private String value;

    LaunchStageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LaunchStageEnum fromValue(String value) {
      for (LaunchStageEnum b : LaunchStageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LaunchStageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LaunchStageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LaunchStageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LaunchStageEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LaunchStageEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LAUNCH_STAGE = "launchStage";
  @SerializedName(SERIALIZED_NAME_LAUNCH_STAGE)
  private LaunchStageEnum launchStage;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SAMPLE_DOCUMENT_URIS = "sampleDocumentUris";
  @SerializedName(SERIALIZED_NAME_SAMPLE_DOCUMENT_URIS)
  private List<String> sampleDocumentUris = new ArrayList<>();

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public GoogleCloudDocumentaiV1beta3ProcessorType() {
  }

  public GoogleCloudDocumentaiV1beta3ProcessorType allowCreation(Boolean allowCreation) {
    this.allowCreation = allowCreation;
    return this;
  }

  /**
   * Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access.
   * @return allowCreation
   */
  @javax.annotation.Nullable
  public Boolean getAllowCreation() {
    return allowCreation;
  }

  public void setAllowCreation(Boolean allowCreation) {
    this.allowCreation = allowCreation;
  }


  public GoogleCloudDocumentaiV1beta3ProcessorType availableLocations(List<GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo> availableLocations) {
    this.availableLocations = availableLocations;
    return this;
  }

  public GoogleCloudDocumentaiV1beta3ProcessorType addAvailableLocationsItem(GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo availableLocationsItem) {
    if (this.availableLocations == null) {
      this.availableLocations = new ArrayList<>();
    }
    this.availableLocations.add(availableLocationsItem);
    return this;
  }

  /**
   * The locations in which this processor is available.
   * @return availableLocations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo> getAvailableLocations() {
    return availableLocations;
  }

  public void setAvailableLocations(List<GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo> availableLocations) {
    this.availableLocations = availableLocations;
  }


  public GoogleCloudDocumentaiV1beta3ProcessorType category(String category) {
    this.category = category;
    return this;
  }

  /**
   * The processor category, used by UI to group processor types.
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public GoogleCloudDocumentaiV1beta3ProcessorType launchStage(LaunchStageEnum launchStage) {
    this.launchStage = launchStage;
    return this;
  }

  /**
   * Launch stage of the processor type
   * @return launchStage
   */
  @javax.annotation.Nullable
  public LaunchStageEnum getLaunchStage() {
    return launchStage;
  }

  public void setLaunchStage(LaunchStageEnum launchStage) {
    this.launchStage = launchStage;
  }


  public GoogleCloudDocumentaiV1beta3ProcessorType name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The resource name of the processor type. Format: &#x60;projects/{project}/processorTypes/{processor_type}&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDocumentaiV1beta3ProcessorType sampleDocumentUris(List<String> sampleDocumentUris) {
    this.sampleDocumentUris = sampleDocumentUris;
    return this;
  }

  public GoogleCloudDocumentaiV1beta3ProcessorType addSampleDocumentUrisItem(String sampleDocumentUrisItem) {
    if (this.sampleDocumentUris == null) {
      this.sampleDocumentUris = new ArrayList<>();
    }
    this.sampleDocumentUris.add(sampleDocumentUrisItem);
    return this;
  }

  /**
   * A set of Cloud Storage URIs of sample documents for this processor.
   * @return sampleDocumentUris
   */
  @javax.annotation.Nullable
  public List<String> getSampleDocumentUris() {
    return sampleDocumentUris;
  }

  public void setSampleDocumentUris(List<String> sampleDocumentUris) {
    this.sampleDocumentUris = sampleDocumentUris;
  }


  public GoogleCloudDocumentaiV1beta3ProcessorType type(String type) {
    this.type = type;
    return this;
  }

  /**
   * The processor type, such as: &#x60;OCR_PROCESSOR&#x60;, &#x60;INVOICE_PROCESSOR&#x60;.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDocumentaiV1beta3ProcessorType googleCloudDocumentaiV1beta3ProcessorType = (GoogleCloudDocumentaiV1beta3ProcessorType) o;
    return Objects.equals(this.allowCreation, googleCloudDocumentaiV1beta3ProcessorType.allowCreation) &&
        Objects.equals(this.availableLocations, googleCloudDocumentaiV1beta3ProcessorType.availableLocations) &&
        Objects.equals(this.category, googleCloudDocumentaiV1beta3ProcessorType.category) &&
        Objects.equals(this.launchStage, googleCloudDocumentaiV1beta3ProcessorType.launchStage) &&
        Objects.equals(this.name, googleCloudDocumentaiV1beta3ProcessorType.name) &&
        Objects.equals(this.sampleDocumentUris, googleCloudDocumentaiV1beta3ProcessorType.sampleDocumentUris) &&
        Objects.equals(this.type, googleCloudDocumentaiV1beta3ProcessorType.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowCreation, availableLocations, category, launchStage, name, sampleDocumentUris, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDocumentaiV1beta3ProcessorType {\n");
    sb.append("    allowCreation: ").append(toIndentedString(allowCreation)).append("\n");
    sb.append("    availableLocations: ").append(toIndentedString(availableLocations)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    launchStage: ").append(toIndentedString(launchStage)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sampleDocumentUris: ").append(toIndentedString(sampleDocumentUris)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowCreation");
    openapiFields.add("availableLocations");
    openapiFields.add("category");
    openapiFields.add("launchStage");
    openapiFields.add("name");
    openapiFields.add("sampleDocumentUris");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDocumentaiV1beta3ProcessorType
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDocumentaiV1beta3ProcessorType.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDocumentaiV1beta3ProcessorType is not found in the empty JSON string", GoogleCloudDocumentaiV1beta3ProcessorType.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDocumentaiV1beta3ProcessorType.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDocumentaiV1beta3ProcessorType` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("availableLocations") != null && !jsonObj.get("availableLocations").isJsonNull()) {
        JsonArray jsonArrayavailableLocations = jsonObj.getAsJsonArray("availableLocations");
        if (jsonArrayavailableLocations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("availableLocations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `availableLocations` to be an array in the JSON string but got `%s`", jsonObj.get("availableLocations").toString()));
          }

          // validate the optional field `availableLocations` (array)
          for (int i = 0; i < jsonArrayavailableLocations.size(); i++) {
            GoogleCloudDocumentaiV1beta3ProcessorTypeLocationInfo.validateJsonElement(jsonArrayavailableLocations.get(i));
          };
        }
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      if ((jsonObj.get("launchStage") != null && !jsonObj.get("launchStage").isJsonNull()) && !jsonObj.get("launchStage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `launchStage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("launchStage").toString()));
      }
      // validate the optional field `launchStage`
      if (jsonObj.get("launchStage") != null && !jsonObj.get("launchStage").isJsonNull()) {
        LaunchStageEnum.validateJsonElement(jsonObj.get("launchStage"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sampleDocumentUris") != null && !jsonObj.get("sampleDocumentUris").isJsonNull() && !jsonObj.get("sampleDocumentUris").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sampleDocumentUris` to be an array in the JSON string but got `%s`", jsonObj.get("sampleDocumentUris").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDocumentaiV1beta3ProcessorType.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDocumentaiV1beta3ProcessorType' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDocumentaiV1beta3ProcessorType> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDocumentaiV1beta3ProcessorType.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDocumentaiV1beta3ProcessorType>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDocumentaiV1beta3ProcessorType value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDocumentaiV1beta3ProcessorType read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDocumentaiV1beta3ProcessorType given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDocumentaiV1beta3ProcessorType
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDocumentaiV1beta3ProcessorType
   */
  public static GoogleCloudDocumentaiV1beta3ProcessorType fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDocumentaiV1beta3ProcessorType.class);
  }

  /**
   * Convert an instance of GoogleCloudDocumentaiV1beta3ProcessorType to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

