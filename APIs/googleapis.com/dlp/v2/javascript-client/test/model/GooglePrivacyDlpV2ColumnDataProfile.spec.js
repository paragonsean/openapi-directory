/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SensitiveDataProtectionDlp);
  }
}(this, function(expect, SensitiveDataProtectionDlp) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GooglePrivacyDlpV2ColumnDataProfile', function() {
    it('should create an instance of GooglePrivacyDlpV2ColumnDataProfile', function() {
      // uncomment below and update the code to test GooglePrivacyDlpV2ColumnDataProfile
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be.a(SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile);
    });

    it('should have the property column (base name: "column")', function() {
      // uncomment below and update the code to test the property column
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property columnInfoType (base name: "columnInfoType")', function() {
      // uncomment below and update the code to test the property columnInfoType
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property columnType (base name: "columnType")', function() {
      // uncomment below and update the code to test the property columnType
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property dataRiskLevel (base name: "dataRiskLevel")', function() {
      // uncomment below and update the code to test the property dataRiskLevel
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property datasetId (base name: "datasetId")', function() {
      // uncomment below and update the code to test the property datasetId
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property datasetLocation (base name: "datasetLocation")', function() {
      // uncomment below and update the code to test the property datasetLocation
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property datasetProjectId (base name: "datasetProjectId")', function() {
      // uncomment below and update the code to test the property datasetProjectId
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property estimatedNullPercentage (base name: "estimatedNullPercentage")', function() {
      // uncomment below and update the code to test the property estimatedNullPercentage
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property estimatedUniquenessScore (base name: "estimatedUniquenessScore")', function() {
      // uncomment below and update the code to test the property estimatedUniquenessScore
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property freeTextScore (base name: "freeTextScore")', function() {
      // uncomment below and update the code to test the property freeTextScore
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property otherMatches (base name: "otherMatches")', function() {
      // uncomment below and update the code to test the property otherMatches
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property policyState (base name: "policyState")', function() {
      // uncomment below and update the code to test the property policyState
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property profileLastGenerated (base name: "profileLastGenerated")', function() {
      // uncomment below and update the code to test the property profileLastGenerated
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property profileStatus (base name: "profileStatus")', function() {
      // uncomment below and update the code to test the property profileStatus
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property sensitivityScore (base name: "sensitivityScore")', function() {
      // uncomment below and update the code to test the property sensitivityScore
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property tableDataProfile (base name: "tableDataProfile")', function() {
      // uncomment below and update the code to test the property tableDataProfile
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property tableFullResource (base name: "tableFullResource")', function() {
      // uncomment below and update the code to test the property tableFullResource
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

    it('should have the property tableId (base name: "tableId")', function() {
      // uncomment below and update the code to test the property tableId
      //var instance = new SensitiveDataProtectionDlp.GooglePrivacyDlpV2ColumnDataProfile();
      //expect(instance).to.be();
    });

  });

}));
