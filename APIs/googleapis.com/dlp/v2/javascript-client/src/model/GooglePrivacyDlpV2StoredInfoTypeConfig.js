/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2Dictionary from './GooglePrivacyDlpV2Dictionary';
import GooglePrivacyDlpV2LargeCustomDictionaryConfig from './GooglePrivacyDlpV2LargeCustomDictionaryConfig';
import GooglePrivacyDlpV2Regex from './GooglePrivacyDlpV2Regex';

/**
 * The GooglePrivacyDlpV2StoredInfoTypeConfig model module.
 * @module model/GooglePrivacyDlpV2StoredInfoTypeConfig
 * @version v2
 */
class GooglePrivacyDlpV2StoredInfoTypeConfig {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2StoredInfoTypeConfig</code>.
     * Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/sensitive-data-protection/docs/creating-custom-infotypes.
     * @alias module:model/GooglePrivacyDlpV2StoredInfoTypeConfig
     */
    constructor() { 
        
        GooglePrivacyDlpV2StoredInfoTypeConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2StoredInfoTypeConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2StoredInfoTypeConfig} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2StoredInfoTypeConfig} The populated <code>GooglePrivacyDlpV2StoredInfoTypeConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2StoredInfoTypeConfig();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('dictionary')) {
                obj['dictionary'] = GooglePrivacyDlpV2Dictionary.constructFromObject(data['dictionary']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('largeCustomDictionary')) {
                obj['largeCustomDictionary'] = GooglePrivacyDlpV2LargeCustomDictionaryConfig.constructFromObject(data['largeCustomDictionary']);
            }
            if (data.hasOwnProperty('regex')) {
                obj['regex'] = GooglePrivacyDlpV2Regex.constructFromObject(data['regex']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2StoredInfoTypeConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2StoredInfoTypeConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `dictionary`
        if (data['dictionary']) { // data not null
          GooglePrivacyDlpV2Dictionary.validateJSON(data['dictionary']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `largeCustomDictionary`
        if (data['largeCustomDictionary']) { // data not null
          GooglePrivacyDlpV2LargeCustomDictionaryConfig.validateJSON(data['largeCustomDictionary']);
        }
        // validate the optional field `regex`
        if (data['regex']) { // data not null
          GooglePrivacyDlpV2Regex.validateJSON(data['regex']);
        }

        return true;
    }


}



/**
 * Description of the StoredInfoType (max 256 characters).
 * @member {String} description
 */
GooglePrivacyDlpV2StoredInfoTypeConfig.prototype['description'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2Dictionary} dictionary
 */
GooglePrivacyDlpV2StoredInfoTypeConfig.prototype['dictionary'] = undefined;

/**
 * Display name of the StoredInfoType (max 256 characters).
 * @member {String} displayName
 */
GooglePrivacyDlpV2StoredInfoTypeConfig.prototype['displayName'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2LargeCustomDictionaryConfig} largeCustomDictionary
 */
GooglePrivacyDlpV2StoredInfoTypeConfig.prototype['largeCustomDictionary'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2Regex} regex
 */
GooglePrivacyDlpV2StoredInfoTypeConfig.prototype['regex'] = undefined;






export default GooglePrivacyDlpV2StoredInfoTypeConfig;

