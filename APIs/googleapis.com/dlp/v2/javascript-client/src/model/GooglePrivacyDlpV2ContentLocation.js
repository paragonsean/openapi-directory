/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2DocumentLocation from './GooglePrivacyDlpV2DocumentLocation';
import GooglePrivacyDlpV2ImageLocation from './GooglePrivacyDlpV2ImageLocation';
import GooglePrivacyDlpV2MetadataLocation from './GooglePrivacyDlpV2MetadataLocation';
import GooglePrivacyDlpV2RecordLocation from './GooglePrivacyDlpV2RecordLocation';

/**
 * The GooglePrivacyDlpV2ContentLocation model module.
 * @module model/GooglePrivacyDlpV2ContentLocation
 * @version v2
 */
class GooglePrivacyDlpV2ContentLocation {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2ContentLocation</code>.
     * Precise location of the finding within a document, record, image, or metadata container.
     * @alias module:model/GooglePrivacyDlpV2ContentLocation
     */
    constructor() { 
        
        GooglePrivacyDlpV2ContentLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2ContentLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2ContentLocation} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2ContentLocation} The populated <code>GooglePrivacyDlpV2ContentLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2ContentLocation();

            if (data.hasOwnProperty('containerName')) {
                obj['containerName'] = ApiClient.convertToType(data['containerName'], 'String');
            }
            if (data.hasOwnProperty('containerTimestamp')) {
                obj['containerTimestamp'] = ApiClient.convertToType(data['containerTimestamp'], 'String');
            }
            if (data.hasOwnProperty('containerVersion')) {
                obj['containerVersion'] = ApiClient.convertToType(data['containerVersion'], 'String');
            }
            if (data.hasOwnProperty('documentLocation')) {
                obj['documentLocation'] = GooglePrivacyDlpV2DocumentLocation.constructFromObject(data['documentLocation']);
            }
            if (data.hasOwnProperty('imageLocation')) {
                obj['imageLocation'] = GooglePrivacyDlpV2ImageLocation.constructFromObject(data['imageLocation']);
            }
            if (data.hasOwnProperty('metadataLocation')) {
                obj['metadataLocation'] = GooglePrivacyDlpV2MetadataLocation.constructFromObject(data['metadataLocation']);
            }
            if (data.hasOwnProperty('recordLocation')) {
                obj['recordLocation'] = GooglePrivacyDlpV2RecordLocation.constructFromObject(data['recordLocation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2ContentLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2ContentLocation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['containerName'] && !(typeof data['containerName'] === 'string' || data['containerName'] instanceof String)) {
            throw new Error("Expected the field `containerName` to be a primitive type in the JSON string but got " + data['containerName']);
        }
        // ensure the json data is a string
        if (data['containerTimestamp'] && !(typeof data['containerTimestamp'] === 'string' || data['containerTimestamp'] instanceof String)) {
            throw new Error("Expected the field `containerTimestamp` to be a primitive type in the JSON string but got " + data['containerTimestamp']);
        }
        // ensure the json data is a string
        if (data['containerVersion'] && !(typeof data['containerVersion'] === 'string' || data['containerVersion'] instanceof String)) {
            throw new Error("Expected the field `containerVersion` to be a primitive type in the JSON string but got " + data['containerVersion']);
        }
        // validate the optional field `documentLocation`
        if (data['documentLocation']) { // data not null
          GooglePrivacyDlpV2DocumentLocation.validateJSON(data['documentLocation']);
        }
        // validate the optional field `imageLocation`
        if (data['imageLocation']) { // data not null
          GooglePrivacyDlpV2ImageLocation.validateJSON(data['imageLocation']);
        }
        // validate the optional field `metadataLocation`
        if (data['metadataLocation']) { // data not null
          GooglePrivacyDlpV2MetadataLocation.validateJSON(data['metadataLocation']);
        }
        // validate the optional field `recordLocation`
        if (data['recordLocation']) { // data not null
          GooglePrivacyDlpV2RecordLocation.validateJSON(data['recordLocation']);
        }

        return true;
    }


}



/**
 * Name of the container where the finding is located. The top level name is the source file name or table name. Names of some common storage containers are formatted as follows: * BigQuery tables: `{project_id}:{dataset_id}.{table_id}` * Cloud Storage files: `gs://{bucket}/{path}` * Datastore namespace: {namespace} Nested names could be absent if the embedded object has no string identifier (for example, an image contained within a document).
 * @member {String} containerName
 */
GooglePrivacyDlpV2ContentLocation.prototype['containerName'] = undefined;

/**
 * Finding container modification timestamp, if applicable. For Cloud Storage, this field contains the last file modification timestamp. For a BigQuery table, this field contains the last_modified_time property. For Datastore, this field isn't populated.
 * @member {String} containerTimestamp
 */
GooglePrivacyDlpV2ContentLocation.prototype['containerTimestamp'] = undefined;

/**
 * Finding container version, if available (\"generation\" for Cloud Storage).
 * @member {String} containerVersion
 */
GooglePrivacyDlpV2ContentLocation.prototype['containerVersion'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2DocumentLocation} documentLocation
 */
GooglePrivacyDlpV2ContentLocation.prototype['documentLocation'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2ImageLocation} imageLocation
 */
GooglePrivacyDlpV2ContentLocation.prototype['imageLocation'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2MetadataLocation} metadataLocation
 */
GooglePrivacyDlpV2ContentLocation.prototype['metadataLocation'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2RecordLocation} recordLocation
 */
GooglePrivacyDlpV2ContentLocation.prototype['recordLocation'] = undefined;






export default GooglePrivacyDlpV2ContentLocation;

