/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2InfoType from './GooglePrivacyDlpV2InfoType';

/**
 * The GooglePrivacyDlpV2ExcludeInfoTypes model module.
 * @module model/GooglePrivacyDlpV2ExcludeInfoTypes
 * @version v2
 */
class GooglePrivacyDlpV2ExcludeInfoTypes {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2ExcludeInfoTypes</code>.
     * List of excluded infoTypes.
     * @alias module:model/GooglePrivacyDlpV2ExcludeInfoTypes
     */
    constructor() { 
        
        GooglePrivacyDlpV2ExcludeInfoTypes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2ExcludeInfoTypes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2ExcludeInfoTypes} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2ExcludeInfoTypes} The populated <code>GooglePrivacyDlpV2ExcludeInfoTypes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2ExcludeInfoTypes();

            if (data.hasOwnProperty('infoTypes')) {
                obj['infoTypes'] = ApiClient.convertToType(data['infoTypes'], [GooglePrivacyDlpV2InfoType]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2ExcludeInfoTypes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2ExcludeInfoTypes</code>.
     */
    static validateJSON(data) {
        if (data['infoTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['infoTypes'])) {
                throw new Error("Expected the field `infoTypes` to be an array in the JSON data but got " + data['infoTypes']);
            }
            // validate the optional field `infoTypes` (array)
            for (const item of data['infoTypes']) {
                GooglePrivacyDlpV2InfoType.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address.
 * @member {Array.<module:model/GooglePrivacyDlpV2InfoType>} infoTypes
 */
GooglePrivacyDlpV2ExcludeInfoTypes.prototype['infoTypes'] = undefined;






export default GooglePrivacyDlpV2ExcludeInfoTypes;

