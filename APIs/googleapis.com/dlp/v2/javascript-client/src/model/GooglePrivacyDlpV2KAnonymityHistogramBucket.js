/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2KAnonymityEquivalenceClass from './GooglePrivacyDlpV2KAnonymityEquivalenceClass';

/**
 * The GooglePrivacyDlpV2KAnonymityHistogramBucket model module.
 * @module model/GooglePrivacyDlpV2KAnonymityHistogramBucket
 * @version v2
 */
class GooglePrivacyDlpV2KAnonymityHistogramBucket {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2KAnonymityHistogramBucket</code>.
     * Histogram of k-anonymity equivalence classes.
     * @alias module:model/GooglePrivacyDlpV2KAnonymityHistogramBucket
     */
    constructor() { 
        
        GooglePrivacyDlpV2KAnonymityHistogramBucket.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2KAnonymityHistogramBucket</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2KAnonymityHistogramBucket} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2KAnonymityHistogramBucket} The populated <code>GooglePrivacyDlpV2KAnonymityHistogramBucket</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2KAnonymityHistogramBucket();

            if (data.hasOwnProperty('bucketSize')) {
                obj['bucketSize'] = ApiClient.convertToType(data['bucketSize'], 'String');
            }
            if (data.hasOwnProperty('bucketValueCount')) {
                obj['bucketValueCount'] = ApiClient.convertToType(data['bucketValueCount'], 'String');
            }
            if (data.hasOwnProperty('bucketValues')) {
                obj['bucketValues'] = ApiClient.convertToType(data['bucketValues'], [GooglePrivacyDlpV2KAnonymityEquivalenceClass]);
            }
            if (data.hasOwnProperty('equivalenceClassSizeLowerBound')) {
                obj['equivalenceClassSizeLowerBound'] = ApiClient.convertToType(data['equivalenceClassSizeLowerBound'], 'String');
            }
            if (data.hasOwnProperty('equivalenceClassSizeUpperBound')) {
                obj['equivalenceClassSizeUpperBound'] = ApiClient.convertToType(data['equivalenceClassSizeUpperBound'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2KAnonymityHistogramBucket</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2KAnonymityHistogramBucket</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bucketSize'] && !(typeof data['bucketSize'] === 'string' || data['bucketSize'] instanceof String)) {
            throw new Error("Expected the field `bucketSize` to be a primitive type in the JSON string but got " + data['bucketSize']);
        }
        // ensure the json data is a string
        if (data['bucketValueCount'] && !(typeof data['bucketValueCount'] === 'string' || data['bucketValueCount'] instanceof String)) {
            throw new Error("Expected the field `bucketValueCount` to be a primitive type in the JSON string but got " + data['bucketValueCount']);
        }
        if (data['bucketValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bucketValues'])) {
                throw new Error("Expected the field `bucketValues` to be an array in the JSON data but got " + data['bucketValues']);
            }
            // validate the optional field `bucketValues` (array)
            for (const item of data['bucketValues']) {
                GooglePrivacyDlpV2KAnonymityEquivalenceClass.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['equivalenceClassSizeLowerBound'] && !(typeof data['equivalenceClassSizeLowerBound'] === 'string' || data['equivalenceClassSizeLowerBound'] instanceof String)) {
            throw new Error("Expected the field `equivalenceClassSizeLowerBound` to be a primitive type in the JSON string but got " + data['equivalenceClassSizeLowerBound']);
        }
        // ensure the json data is a string
        if (data['equivalenceClassSizeUpperBound'] && !(typeof data['equivalenceClassSizeUpperBound'] === 'string' || data['equivalenceClassSizeUpperBound'] instanceof String)) {
            throw new Error("Expected the field `equivalenceClassSizeUpperBound` to be a primitive type in the JSON string but got " + data['equivalenceClassSizeUpperBound']);
        }

        return true;
    }


}



/**
 * Total number of equivalence classes in this bucket.
 * @member {String} bucketSize
 */
GooglePrivacyDlpV2KAnonymityHistogramBucket.prototype['bucketSize'] = undefined;

/**
 * Total number of distinct equivalence classes in this bucket.
 * @member {String} bucketValueCount
 */
GooglePrivacyDlpV2KAnonymityHistogramBucket.prototype['bucketValueCount'] = undefined;

/**
 * Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
 * @member {Array.<module:model/GooglePrivacyDlpV2KAnonymityEquivalenceClass>} bucketValues
 */
GooglePrivacyDlpV2KAnonymityHistogramBucket.prototype['bucketValues'] = undefined;

/**
 * Lower bound on the size of the equivalence classes in this bucket.
 * @member {String} equivalenceClassSizeLowerBound
 */
GooglePrivacyDlpV2KAnonymityHistogramBucket.prototype['equivalenceClassSizeLowerBound'] = undefined;

/**
 * Upper bound on the size of the equivalence classes in this bucket.
 * @member {String} equivalenceClassSizeUpperBound
 */
GooglePrivacyDlpV2KAnonymityHistogramBucket.prototype['equivalenceClassSizeUpperBound'] = undefined;






export default GooglePrivacyDlpV2KAnonymityHistogramBucket;

