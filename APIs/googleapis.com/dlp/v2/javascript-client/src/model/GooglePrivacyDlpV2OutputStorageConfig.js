/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2BigQueryTable from './GooglePrivacyDlpV2BigQueryTable';

/**
 * The GooglePrivacyDlpV2OutputStorageConfig model module.
 * @module model/GooglePrivacyDlpV2OutputStorageConfig
 * @version v2
 */
class GooglePrivacyDlpV2OutputStorageConfig {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2OutputStorageConfig</code>.
     * Cloud repository for storing output.
     * @alias module:model/GooglePrivacyDlpV2OutputStorageConfig
     */
    constructor() { 
        
        GooglePrivacyDlpV2OutputStorageConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2OutputStorageConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2OutputStorageConfig} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2OutputStorageConfig} The populated <code>GooglePrivacyDlpV2OutputStorageConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2OutputStorageConfig();

            if (data.hasOwnProperty('outputSchema')) {
                obj['outputSchema'] = ApiClient.convertToType(data['outputSchema'], 'String');
            }
            if (data.hasOwnProperty('table')) {
                obj['table'] = GooglePrivacyDlpV2BigQueryTable.constructFromObject(data['table']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2OutputStorageConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2OutputStorageConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['outputSchema'] && !(typeof data['outputSchema'] === 'string' || data['outputSchema'] instanceof String)) {
            throw new Error("Expected the field `outputSchema` to be a primitive type in the JSON string but got " + data['outputSchema']);
        }
        // validate the optional field `table`
        if (data['table']) { // data not null
          GooglePrivacyDlpV2BigQueryTable.validateJSON(data['table']);
        }

        return true;
    }


}



/**
 * Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
 * @member {module:model/GooglePrivacyDlpV2OutputStorageConfig.OutputSchemaEnum} outputSchema
 */
GooglePrivacyDlpV2OutputStorageConfig.prototype['outputSchema'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2BigQueryTable} table
 */
GooglePrivacyDlpV2OutputStorageConfig.prototype['table'] = undefined;





/**
 * Allowed values for the <code>outputSchema</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2OutputStorageConfig['OutputSchemaEnum'] = {

    /**
     * value: "OUTPUT_SCHEMA_UNSPECIFIED"
     * @const
     */
    "OUTPUT_SCHEMA_UNSPECIFIED": "OUTPUT_SCHEMA_UNSPECIFIED",

    /**
     * value: "BASIC_COLUMNS"
     * @const
     */
    "BASIC_COLUMNS": "BASIC_COLUMNS",

    /**
     * value: "GCS_COLUMNS"
     * @const
     */
    "GCS_COLUMNS": "GCS_COLUMNS",

    /**
     * value: "DATASTORE_COLUMNS"
     * @const
     */
    "DATASTORE_COLUMNS": "DATASTORE_COLUMNS",

    /**
     * value: "BIG_QUERY_COLUMNS"
     * @const
     */
    "BIG_QUERY_COLUMNS": "BIG_QUERY_COLUMNS",

    /**
     * value: "ALL_COLUMNS"
     * @const
     */
    "ALL_COLUMNS": "ALL_COLUMNS"
};



export default GooglePrivacyDlpV2OutputStorageConfig;

