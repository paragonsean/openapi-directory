/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2BigQueryTable from './GooglePrivacyDlpV2BigQueryTable';
import GooglePrivacyDlpV2FieldId from './GooglePrivacyDlpV2FieldId';
import GooglePrivacyDlpV2QuasiIdentifierField from './GooglePrivacyDlpV2QuasiIdentifierField';

/**
 * The GooglePrivacyDlpV2StatisticalTable model module.
 * @module model/GooglePrivacyDlpV2StatisticalTable
 * @version v2
 */
class GooglePrivacyDlpV2StatisticalTable {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2StatisticalTable</code>.
     * An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
     * @alias module:model/GooglePrivacyDlpV2StatisticalTable
     */
    constructor() { 
        
        GooglePrivacyDlpV2StatisticalTable.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2StatisticalTable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2StatisticalTable} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2StatisticalTable} The populated <code>GooglePrivacyDlpV2StatisticalTable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2StatisticalTable();

            if (data.hasOwnProperty('quasiIds')) {
                obj['quasiIds'] = ApiClient.convertToType(data['quasiIds'], [GooglePrivacyDlpV2QuasiIdentifierField]);
            }
            if (data.hasOwnProperty('relativeFrequency')) {
                obj['relativeFrequency'] = GooglePrivacyDlpV2FieldId.constructFromObject(data['relativeFrequency']);
            }
            if (data.hasOwnProperty('table')) {
                obj['table'] = GooglePrivacyDlpV2BigQueryTable.constructFromObject(data['table']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2StatisticalTable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2StatisticalTable</code>.
     */
    static validateJSON(data) {
        if (data['quasiIds']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['quasiIds'])) {
                throw new Error("Expected the field `quasiIds` to be an array in the JSON data but got " + data['quasiIds']);
            }
            // validate the optional field `quasiIds` (array)
            for (const item of data['quasiIds']) {
                GooglePrivacyDlpV2QuasiIdentifierField.validateJSON(item);
            };
        }
        // validate the optional field `relativeFrequency`
        if (data['relativeFrequency']) { // data not null
          GooglePrivacyDlpV2FieldId.validateJSON(data['relativeFrequency']);
        }
        // validate the optional field `table`
        if (data['table']) { // data not null
          GooglePrivacyDlpV2BigQueryTable.validateJSON(data['table']);
        }

        return true;
    }


}



/**
 * Required. Quasi-identifier columns.
 * @member {Array.<module:model/GooglePrivacyDlpV2QuasiIdentifierField>} quasiIds
 */
GooglePrivacyDlpV2StatisticalTable.prototype['quasiIds'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2FieldId} relativeFrequency
 */
GooglePrivacyDlpV2StatisticalTable.prototype['relativeFrequency'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2BigQueryTable} table
 */
GooglePrivacyDlpV2StatisticalTable.prototype['table'] = undefined;






export default GooglePrivacyDlpV2StatisticalTable;

