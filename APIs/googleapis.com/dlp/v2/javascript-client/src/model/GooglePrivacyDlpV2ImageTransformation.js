/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2Color from './GooglePrivacyDlpV2Color';
import GooglePrivacyDlpV2SelectedInfoTypes from './GooglePrivacyDlpV2SelectedInfoTypes';

/**
 * The GooglePrivacyDlpV2ImageTransformation model module.
 * @module model/GooglePrivacyDlpV2ImageTransformation
 * @version v2
 */
class GooglePrivacyDlpV2ImageTransformation {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2ImageTransformation</code>.
     * Configuration for determining how redaction of images should occur.
     * @alias module:model/GooglePrivacyDlpV2ImageTransformation
     */
    constructor() { 
        
        GooglePrivacyDlpV2ImageTransformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2ImageTransformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2ImageTransformation} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2ImageTransformation} The populated <code>GooglePrivacyDlpV2ImageTransformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2ImageTransformation();

            if (data.hasOwnProperty('allInfoTypes')) {
                obj['allInfoTypes'] = ApiClient.convertToType(data['allInfoTypes'], Object);
            }
            if (data.hasOwnProperty('allText')) {
                obj['allText'] = ApiClient.convertToType(data['allText'], Object);
            }
            if (data.hasOwnProperty('redactionColor')) {
                obj['redactionColor'] = GooglePrivacyDlpV2Color.constructFromObject(data['redactionColor']);
            }
            if (data.hasOwnProperty('selectedInfoTypes')) {
                obj['selectedInfoTypes'] = GooglePrivacyDlpV2SelectedInfoTypes.constructFromObject(data['selectedInfoTypes']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2ImageTransformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2ImageTransformation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `redactionColor`
        if (data['redactionColor']) { // data not null
          GooglePrivacyDlpV2Color.validateJSON(data['redactionColor']);
        }
        // validate the optional field `selectedInfoTypes`
        if (data['selectedInfoTypes']) { // data not null
          GooglePrivacyDlpV2SelectedInfoTypes.validateJSON(data['selectedInfoTypes']);
        }

        return true;
    }


}



/**
 * Apply transformation to all findings.
 * @member {Object} allInfoTypes
 */
GooglePrivacyDlpV2ImageTransformation.prototype['allInfoTypes'] = undefined;

/**
 * Apply to all text.
 * @member {Object} allText
 */
GooglePrivacyDlpV2ImageTransformation.prototype['allText'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2Color} redactionColor
 */
GooglePrivacyDlpV2ImageTransformation.prototype['redactionColor'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2SelectedInfoTypes} selectedInfoTypes
 */
GooglePrivacyDlpV2ImageTransformation.prototype['selectedInfoTypes'] = undefined;






export default GooglePrivacyDlpV2ImageTransformation;

