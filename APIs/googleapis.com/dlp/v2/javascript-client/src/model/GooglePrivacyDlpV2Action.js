/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2Deidentify from './GooglePrivacyDlpV2Deidentify';
import GooglePrivacyDlpV2PublishToPubSub from './GooglePrivacyDlpV2PublishToPubSub';
import GooglePrivacyDlpV2SaveFindings from './GooglePrivacyDlpV2SaveFindings';

/**
 * The GooglePrivacyDlpV2Action model module.
 * @module model/GooglePrivacyDlpV2Action
 * @version v2
 */
class GooglePrivacyDlpV2Action {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2Action</code>.
     * A task to execute on the completion of a job. See https://cloud.google.com/sensitive-data-protection/docs/concepts-actions to learn more.
     * @alias module:model/GooglePrivacyDlpV2Action
     */
    constructor() { 
        
        GooglePrivacyDlpV2Action.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2Action</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2Action} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2Action} The populated <code>GooglePrivacyDlpV2Action</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2Action();

            if (data.hasOwnProperty('deidentify')) {
                obj['deidentify'] = GooglePrivacyDlpV2Deidentify.constructFromObject(data['deidentify']);
            }
            if (data.hasOwnProperty('jobNotificationEmails')) {
                obj['jobNotificationEmails'] = ApiClient.convertToType(data['jobNotificationEmails'], Object);
            }
            if (data.hasOwnProperty('pubSub')) {
                obj['pubSub'] = GooglePrivacyDlpV2PublishToPubSub.constructFromObject(data['pubSub']);
            }
            if (data.hasOwnProperty('publishFindingsToCloudDataCatalog')) {
                obj['publishFindingsToCloudDataCatalog'] = ApiClient.convertToType(data['publishFindingsToCloudDataCatalog'], Object);
            }
            if (data.hasOwnProperty('publishSummaryToCscc')) {
                obj['publishSummaryToCscc'] = ApiClient.convertToType(data['publishSummaryToCscc'], Object);
            }
            if (data.hasOwnProperty('publishToStackdriver')) {
                obj['publishToStackdriver'] = ApiClient.convertToType(data['publishToStackdriver'], Object);
            }
            if (data.hasOwnProperty('saveFindings')) {
                obj['saveFindings'] = GooglePrivacyDlpV2SaveFindings.constructFromObject(data['saveFindings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2Action</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2Action</code>.
     */
    static validateJSON(data) {
        // validate the optional field `deidentify`
        if (data['deidentify']) { // data not null
          GooglePrivacyDlpV2Deidentify.validateJSON(data['deidentify']);
        }
        // validate the optional field `pubSub`
        if (data['pubSub']) { // data not null
          GooglePrivacyDlpV2PublishToPubSub.validateJSON(data['pubSub']);
        }
        // validate the optional field `saveFindings`
        if (data['saveFindings']) { // data not null
          GooglePrivacyDlpV2SaveFindings.validateJSON(data['saveFindings']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2Deidentify} deidentify
 */
GooglePrivacyDlpV2Action.prototype['deidentify'] = undefined;

/**
 * Sends an email when the job completes. The email goes to IAM project owners and technical [Essential Contacts](https://cloud.google.com/resource-manager/docs/managing-notification-contacts).
 * @member {Object} jobNotificationEmails
 */
GooglePrivacyDlpV2Action.prototype['jobNotificationEmails'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2PublishToPubSub} pubSub
 */
GooglePrivacyDlpV2Action.prototype['pubSub'] = undefined;

/**
 * Publish findings of a DlpJob to Data Catalog. In Data Catalog, tag templates are applied to the resource that Cloud DLP scanned. Data Catalog tag templates are stored in the same project and region where the BigQuery table exists. For Cloud DLP to create and apply the tag template, the Cloud DLP service agent must have the `roles/datacatalog.tagTemplateOwner` permission on the project. The tag template contains fields summarizing the results of the DlpJob. Any field values previously written by another DlpJob are deleted. InfoType naming patterns are strictly enforced when using this feature. Findings are persisted in Data Catalog storage and are governed by service-specific policies for Data Catalog. For more information, see [Service Specific Terms](https://cloud.google.com/terms/service-terms). Only a single instance of this action can be specified. This action is allowed only if all resources being scanned are BigQuery tables. Compatible with: Inspect
 * @member {Object} publishFindingsToCloudDataCatalog
 */
GooglePrivacyDlpV2Action.prototype['publishFindingsToCloudDataCatalog'] = undefined;

/**
 * Publish the result summary of a DlpJob to [Security Command Center](https://cloud.google.com/security-command-center). This action is available for only projects that belong to an organization. This action publishes the count of finding instances and their infoTypes. The summary of findings are persisted in Security Command Center and are governed by [service-specific policies for Security Command Center](https://cloud.google.com/terms/service-terms). Only a single instance of this action can be specified. Compatible with: Inspect
 * @member {Object} publishSummaryToCscc
 */
GooglePrivacyDlpV2Action.prototype['publishSummaryToCscc'] = undefined;

/**
 * Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.
 * @member {Object} publishToStackdriver
 */
GooglePrivacyDlpV2Action.prototype['publishToStackdriver'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2SaveFindings} saveFindings
 */
GooglePrivacyDlpV2Action.prototype['saveFindings'] = undefined;






export default GooglePrivacyDlpV2Action;

