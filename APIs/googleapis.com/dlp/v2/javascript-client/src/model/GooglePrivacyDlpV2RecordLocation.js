/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2FieldId from './GooglePrivacyDlpV2FieldId';
import GooglePrivacyDlpV2RecordKey from './GooglePrivacyDlpV2RecordKey';
import GooglePrivacyDlpV2TableLocation from './GooglePrivacyDlpV2TableLocation';

/**
 * The GooglePrivacyDlpV2RecordLocation model module.
 * @module model/GooglePrivacyDlpV2RecordLocation
 * @version v2
 */
class GooglePrivacyDlpV2RecordLocation {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2RecordLocation</code>.
     * Location of a finding within a row or record.
     * @alias module:model/GooglePrivacyDlpV2RecordLocation
     */
    constructor() { 
        
        GooglePrivacyDlpV2RecordLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2RecordLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2RecordLocation} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2RecordLocation} The populated <code>GooglePrivacyDlpV2RecordLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2RecordLocation();

            if (data.hasOwnProperty('fieldId')) {
                obj['fieldId'] = GooglePrivacyDlpV2FieldId.constructFromObject(data['fieldId']);
            }
            if (data.hasOwnProperty('recordKey')) {
                obj['recordKey'] = GooglePrivacyDlpV2RecordKey.constructFromObject(data['recordKey']);
            }
            if (data.hasOwnProperty('tableLocation')) {
                obj['tableLocation'] = GooglePrivacyDlpV2TableLocation.constructFromObject(data['tableLocation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2RecordLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2RecordLocation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `fieldId`
        if (data['fieldId']) { // data not null
          GooglePrivacyDlpV2FieldId.validateJSON(data['fieldId']);
        }
        // validate the optional field `recordKey`
        if (data['recordKey']) { // data not null
          GooglePrivacyDlpV2RecordKey.validateJSON(data['recordKey']);
        }
        // validate the optional field `tableLocation`
        if (data['tableLocation']) { // data not null
          GooglePrivacyDlpV2TableLocation.validateJSON(data['tableLocation']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2FieldId} fieldId
 */
GooglePrivacyDlpV2RecordLocation.prototype['fieldId'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2RecordKey} recordKey
 */
GooglePrivacyDlpV2RecordLocation.prototype['recordKey'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2TableLocation} tableLocation
 */
GooglePrivacyDlpV2RecordLocation.prototype['tableLocation'] = undefined;






export default GooglePrivacyDlpV2RecordLocation;

