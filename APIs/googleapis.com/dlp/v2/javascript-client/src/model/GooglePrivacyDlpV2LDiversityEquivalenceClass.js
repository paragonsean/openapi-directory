/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2Value from './GooglePrivacyDlpV2Value';
import GooglePrivacyDlpV2ValueFrequency from './GooglePrivacyDlpV2ValueFrequency';

/**
 * The GooglePrivacyDlpV2LDiversityEquivalenceClass model module.
 * @module model/GooglePrivacyDlpV2LDiversityEquivalenceClass
 * @version v2
 */
class GooglePrivacyDlpV2LDiversityEquivalenceClass {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2LDiversityEquivalenceClass</code>.
     * The set of columns&#39; values that share the same ldiversity value.
     * @alias module:model/GooglePrivacyDlpV2LDiversityEquivalenceClass
     */
    constructor() { 
        
        GooglePrivacyDlpV2LDiversityEquivalenceClass.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2LDiversityEquivalenceClass</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2LDiversityEquivalenceClass} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2LDiversityEquivalenceClass} The populated <code>GooglePrivacyDlpV2LDiversityEquivalenceClass</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2LDiversityEquivalenceClass();

            if (data.hasOwnProperty('equivalenceClassSize')) {
                obj['equivalenceClassSize'] = ApiClient.convertToType(data['equivalenceClassSize'], 'String');
            }
            if (data.hasOwnProperty('numDistinctSensitiveValues')) {
                obj['numDistinctSensitiveValues'] = ApiClient.convertToType(data['numDistinctSensitiveValues'], 'String');
            }
            if (data.hasOwnProperty('quasiIdsValues')) {
                obj['quasiIdsValues'] = ApiClient.convertToType(data['quasiIdsValues'], [GooglePrivacyDlpV2Value]);
            }
            if (data.hasOwnProperty('topSensitiveValues')) {
                obj['topSensitiveValues'] = ApiClient.convertToType(data['topSensitiveValues'], [GooglePrivacyDlpV2ValueFrequency]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2LDiversityEquivalenceClass</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2LDiversityEquivalenceClass</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['equivalenceClassSize'] && !(typeof data['equivalenceClassSize'] === 'string' || data['equivalenceClassSize'] instanceof String)) {
            throw new Error("Expected the field `equivalenceClassSize` to be a primitive type in the JSON string but got " + data['equivalenceClassSize']);
        }
        // ensure the json data is a string
        if (data['numDistinctSensitiveValues'] && !(typeof data['numDistinctSensitiveValues'] === 'string' || data['numDistinctSensitiveValues'] instanceof String)) {
            throw new Error("Expected the field `numDistinctSensitiveValues` to be a primitive type in the JSON string but got " + data['numDistinctSensitiveValues']);
        }
        if (data['quasiIdsValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['quasiIdsValues'])) {
                throw new Error("Expected the field `quasiIdsValues` to be an array in the JSON data but got " + data['quasiIdsValues']);
            }
            // validate the optional field `quasiIdsValues` (array)
            for (const item of data['quasiIdsValues']) {
                GooglePrivacyDlpV2Value.validateJSON(item);
            };
        }
        if (data['topSensitiveValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['topSensitiveValues'])) {
                throw new Error("Expected the field `topSensitiveValues` to be an array in the JSON data but got " + data['topSensitiveValues']);
            }
            // validate the optional field `topSensitiveValues` (array)
            for (const item of data['topSensitiveValues']) {
                GooglePrivacyDlpV2ValueFrequency.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Size of the k-anonymity equivalence class.
 * @member {String} equivalenceClassSize
 */
GooglePrivacyDlpV2LDiversityEquivalenceClass.prototype['equivalenceClassSize'] = undefined;

/**
 * Number of distinct sensitive values in this equivalence class.
 * @member {String} numDistinctSensitiveValues
 */
GooglePrivacyDlpV2LDiversityEquivalenceClass.prototype['numDistinctSensitiveValues'] = undefined;

/**
 * Quasi-identifier values defining the k-anonymity equivalence class. The order is always the same as the original request.
 * @member {Array.<module:model/GooglePrivacyDlpV2Value>} quasiIdsValues
 */
GooglePrivacyDlpV2LDiversityEquivalenceClass.prototype['quasiIdsValues'] = undefined;

/**
 * Estimated frequencies of top sensitive values.
 * @member {Array.<module:model/GooglePrivacyDlpV2ValueFrequency>} topSensitiveValues
 */
GooglePrivacyDlpV2LDiversityEquivalenceClass.prototype['topSensitiveValues'] = undefined;






export default GooglePrivacyDlpV2LDiversityEquivalenceClass;

