/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GooglePrivacyDlpV2InfoTypeCategory model module.
 * @module model/GooglePrivacyDlpV2InfoTypeCategory
 * @version v2
 */
class GooglePrivacyDlpV2InfoTypeCategory {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2InfoTypeCategory</code>.
     * Classification of infoTypes to organize them according to geographic location, industry, and data type.
     * @alias module:model/GooglePrivacyDlpV2InfoTypeCategory
     */
    constructor() { 
        
        GooglePrivacyDlpV2InfoTypeCategory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2InfoTypeCategory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2InfoTypeCategory} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2InfoTypeCategory} The populated <code>GooglePrivacyDlpV2InfoTypeCategory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2InfoTypeCategory();

            if (data.hasOwnProperty('industryCategory')) {
                obj['industryCategory'] = ApiClient.convertToType(data['industryCategory'], 'String');
            }
            if (data.hasOwnProperty('locationCategory')) {
                obj['locationCategory'] = ApiClient.convertToType(data['locationCategory'], 'String');
            }
            if (data.hasOwnProperty('typeCategory')) {
                obj['typeCategory'] = ApiClient.convertToType(data['typeCategory'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2InfoTypeCategory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2InfoTypeCategory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['industryCategory'] && !(typeof data['industryCategory'] === 'string' || data['industryCategory'] instanceof String)) {
            throw new Error("Expected the field `industryCategory` to be a primitive type in the JSON string but got " + data['industryCategory']);
        }
        // ensure the json data is a string
        if (data['locationCategory'] && !(typeof data['locationCategory'] === 'string' || data['locationCategory'] instanceof String)) {
            throw new Error("Expected the field `locationCategory` to be a primitive type in the JSON string but got " + data['locationCategory']);
        }
        // ensure the json data is a string
        if (data['typeCategory'] && !(typeof data['typeCategory'] === 'string' || data['typeCategory'] instanceof String)) {
            throw new Error("Expected the field `typeCategory` to be a primitive type in the JSON string but got " + data['typeCategory']);
        }

        return true;
    }


}



/**
 * The group of relevant businesses where this infoType is commonly used
 * @member {module:model/GooglePrivacyDlpV2InfoTypeCategory.IndustryCategoryEnum} industryCategory
 */
GooglePrivacyDlpV2InfoTypeCategory.prototype['industryCategory'] = undefined;

/**
 * The region or country that issued the ID or document represented by the infoType.
 * @member {module:model/GooglePrivacyDlpV2InfoTypeCategory.LocationCategoryEnum} locationCategory
 */
GooglePrivacyDlpV2InfoTypeCategory.prototype['locationCategory'] = undefined;

/**
 * The class of identifiers where this infoType belongs
 * @member {module:model/GooglePrivacyDlpV2InfoTypeCategory.TypeCategoryEnum} typeCategory
 */
GooglePrivacyDlpV2InfoTypeCategory.prototype['typeCategory'] = undefined;





/**
 * Allowed values for the <code>industryCategory</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2InfoTypeCategory['IndustryCategoryEnum'] = {

    /**
     * value: "INDUSTRY_UNSPECIFIED"
     * @const
     */
    "INDUSTRY_UNSPECIFIED": "INDUSTRY_UNSPECIFIED",

    /**
     * value: "FINANCE"
     * @const
     */
    "FINANCE": "FINANCE",

    /**
     * value: "HEALTH"
     * @const
     */
    "HEALTH": "HEALTH",

    /**
     * value: "TELECOMMUNICATIONS"
     * @const
     */
    "TELECOMMUNICATIONS": "TELECOMMUNICATIONS"
};


/**
 * Allowed values for the <code>locationCategory</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2InfoTypeCategory['LocationCategoryEnum'] = {

    /**
     * value: "LOCATION_UNSPECIFIED"
     * @const
     */
    "LOCATION_UNSPECIFIED": "LOCATION_UNSPECIFIED",

    /**
     * value: "GLOBAL"
     * @const
     */
    "GLOBAL": "GLOBAL",

    /**
     * value: "ARGENTINA"
     * @const
     */
    "ARGENTINA": "ARGENTINA",

    /**
     * value: "AUSTRALIA"
     * @const
     */
    "AUSTRALIA": "AUSTRALIA",

    /**
     * value: "BELGIUM"
     * @const
     */
    "BELGIUM": "BELGIUM",

    /**
     * value: "BRAZIL"
     * @const
     */
    "BRAZIL": "BRAZIL",

    /**
     * value: "CANADA"
     * @const
     */
    "CANADA": "CANADA",

    /**
     * value: "CHILE"
     * @const
     */
    "CHILE": "CHILE",

    /**
     * value: "CHINA"
     * @const
     */
    "CHINA": "CHINA",

    /**
     * value: "COLOMBIA"
     * @const
     */
    "COLOMBIA": "COLOMBIA",

    /**
     * value: "CROATIA"
     * @const
     */
    "CROATIA": "CROATIA",

    /**
     * value: "DENMARK"
     * @const
     */
    "DENMARK": "DENMARK",

    /**
     * value: "FRANCE"
     * @const
     */
    "FRANCE": "FRANCE",

    /**
     * value: "FINLAND"
     * @const
     */
    "FINLAND": "FINLAND",

    /**
     * value: "GERMANY"
     * @const
     */
    "GERMANY": "GERMANY",

    /**
     * value: "HONG_KONG"
     * @const
     */
    "HONG_KONG": "HONG_KONG",

    /**
     * value: "INDIA"
     * @const
     */
    "INDIA": "INDIA",

    /**
     * value: "INDONESIA"
     * @const
     */
    "INDONESIA": "INDONESIA",

    /**
     * value: "IRELAND"
     * @const
     */
    "IRELAND": "IRELAND",

    /**
     * value: "ISRAEL"
     * @const
     */
    "ISRAEL": "ISRAEL",

    /**
     * value: "ITALY"
     * @const
     */
    "ITALY": "ITALY",

    /**
     * value: "JAPAN"
     * @const
     */
    "JAPAN": "JAPAN",

    /**
     * value: "KOREA"
     * @const
     */
    "KOREA": "KOREA",

    /**
     * value: "MEXICO"
     * @const
     */
    "MEXICO": "MEXICO",

    /**
     * value: "THE_NETHERLANDS"
     * @const
     */
    "THE_NETHERLANDS": "THE_NETHERLANDS",

    /**
     * value: "NEW_ZEALAND"
     * @const
     */
    "NEW_ZEALAND": "NEW_ZEALAND",

    /**
     * value: "NORWAY"
     * @const
     */
    "NORWAY": "NORWAY",

    /**
     * value: "PARAGUAY"
     * @const
     */
    "PARAGUAY": "PARAGUAY",

    /**
     * value: "PERU"
     * @const
     */
    "PERU": "PERU",

    /**
     * value: "POLAND"
     * @const
     */
    "POLAND": "POLAND",

    /**
     * value: "PORTUGAL"
     * @const
     */
    "PORTUGAL": "PORTUGAL",

    /**
     * value: "SINGAPORE"
     * @const
     */
    "SINGAPORE": "SINGAPORE",

    /**
     * value: "SOUTH_AFRICA"
     * @const
     */
    "SOUTH_AFRICA": "SOUTH_AFRICA",

    /**
     * value: "SPAIN"
     * @const
     */
    "SPAIN": "SPAIN",

    /**
     * value: "SWEDEN"
     * @const
     */
    "SWEDEN": "SWEDEN",

    /**
     * value: "SWITZERLAND"
     * @const
     */
    "SWITZERLAND": "SWITZERLAND",

    /**
     * value: "TAIWAN"
     * @const
     */
    "TAIWAN": "TAIWAN",

    /**
     * value: "THAILAND"
     * @const
     */
    "THAILAND": "THAILAND",

    /**
     * value: "TURKEY"
     * @const
     */
    "TURKEY": "TURKEY",

    /**
     * value: "UNITED_KINGDOM"
     * @const
     */
    "UNITED_KINGDOM": "UNITED_KINGDOM",

    /**
     * value: "UNITED_STATES"
     * @const
     */
    "UNITED_STATES": "UNITED_STATES",

    /**
     * value: "URUGUAY"
     * @const
     */
    "URUGUAY": "URUGUAY",

    /**
     * value: "VENEZUELA"
     * @const
     */
    "VENEZUELA": "VENEZUELA",

    /**
     * value: "INTERNAL"
     * @const
     */
    "INTERNAL": "INTERNAL"
};


/**
 * Allowed values for the <code>typeCategory</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2InfoTypeCategory['TypeCategoryEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "PII"
     * @const
     */
    "PII": "PII",

    /**
     * value: "SPII"
     * @const
     */
    "SPII": "SPII",

    /**
     * value: "DEMOGRAPHIC"
     * @const
     */
    "DEMOGRAPHIC": "DEMOGRAPHIC",

    /**
     * value: "CREDENTIAL"
     * @const
     */
    "CREDENTIAL": "CREDENTIAL",

    /**
     * value: "GOVERNMENT_ID"
     * @const
     */
    "GOVERNMENT_ID": "GOVERNMENT_ID",

    /**
     * value: "DOCUMENT"
     * @const
     */
    "DOCUMENT": "DOCUMENT",

    /**
     * value: "CONTEXTUAL_INFORMATION"
     * @const
     */
    "CONTEXTUAL_INFORMATION": "CONTEXTUAL_INFORMATION"
};



export default GooglePrivacyDlpV2InfoTypeCategory;

