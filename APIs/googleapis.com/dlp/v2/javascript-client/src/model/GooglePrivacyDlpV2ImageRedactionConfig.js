/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2Color from './GooglePrivacyDlpV2Color';
import GooglePrivacyDlpV2InfoType from './GooglePrivacyDlpV2InfoType';

/**
 * The GooglePrivacyDlpV2ImageRedactionConfig model module.
 * @module model/GooglePrivacyDlpV2ImageRedactionConfig
 * @version v2
 */
class GooglePrivacyDlpV2ImageRedactionConfig {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2ImageRedactionConfig</code>.
     * Configuration for determining how redaction of images should occur.
     * @alias module:model/GooglePrivacyDlpV2ImageRedactionConfig
     */
    constructor() { 
        
        GooglePrivacyDlpV2ImageRedactionConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2ImageRedactionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2ImageRedactionConfig} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2ImageRedactionConfig} The populated <code>GooglePrivacyDlpV2ImageRedactionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2ImageRedactionConfig();

            if (data.hasOwnProperty('infoType')) {
                obj['infoType'] = GooglePrivacyDlpV2InfoType.constructFromObject(data['infoType']);
            }
            if (data.hasOwnProperty('redactAllText')) {
                obj['redactAllText'] = ApiClient.convertToType(data['redactAllText'], 'Boolean');
            }
            if (data.hasOwnProperty('redactionColor')) {
                obj['redactionColor'] = GooglePrivacyDlpV2Color.constructFromObject(data['redactionColor']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2ImageRedactionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2ImageRedactionConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `infoType`
        if (data['infoType']) { // data not null
          GooglePrivacyDlpV2InfoType.validateJSON(data['infoType']);
        }
        // validate the optional field `redactionColor`
        if (data['redactionColor']) { // data not null
          GooglePrivacyDlpV2Color.validateJSON(data['redactionColor']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2InfoType} infoType
 */
GooglePrivacyDlpV2ImageRedactionConfig.prototype['infoType'] = undefined;

/**
 * If true, all text found in the image, regardless whether it matches an info_type, is redacted. Only one should be provided.
 * @member {Boolean} redactAllText
 */
GooglePrivacyDlpV2ImageRedactionConfig.prototype['redactAllText'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2Color} redactionColor
 */
GooglePrivacyDlpV2ImageRedactionConfig.prototype['redactionColor'] = undefined;






export default GooglePrivacyDlpV2ImageRedactionConfig;

