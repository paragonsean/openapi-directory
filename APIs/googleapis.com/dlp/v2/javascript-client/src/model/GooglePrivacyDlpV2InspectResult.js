/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2Finding from './GooglePrivacyDlpV2Finding';

/**
 * The GooglePrivacyDlpV2InspectResult model module.
 * @module model/GooglePrivacyDlpV2InspectResult
 * @version v2
 */
class GooglePrivacyDlpV2InspectResult {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2InspectResult</code>.
     * All the findings for a single scanned item.
     * @alias module:model/GooglePrivacyDlpV2InspectResult
     */
    constructor() { 
        
        GooglePrivacyDlpV2InspectResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2InspectResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2InspectResult} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2InspectResult} The populated <code>GooglePrivacyDlpV2InspectResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2InspectResult();

            if (data.hasOwnProperty('findings')) {
                obj['findings'] = ApiClient.convertToType(data['findings'], [GooglePrivacyDlpV2Finding]);
            }
            if (data.hasOwnProperty('findingsTruncated')) {
                obj['findingsTruncated'] = ApiClient.convertToType(data['findingsTruncated'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2InspectResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2InspectResult</code>.
     */
    static validateJSON(data) {
        if (data['findings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['findings'])) {
                throw new Error("Expected the field `findings` to be an array in the JSON data but got " + data['findings']);
            }
            // validate the optional field `findings` (array)
            for (const item of data['findings']) {
                GooglePrivacyDlpV2Finding.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of findings for an item.
 * @member {Array.<module:model/GooglePrivacyDlpV2Finding>} findings
 */
GooglePrivacyDlpV2InspectResult.prototype['findings'] = undefined;

/**
 * If true, then this item might have more findings than were returned, and the findings returned are an arbitrary subset of all findings. The findings list might be truncated because the input items were too large, or because the server reached the maximum amount of resources allowed for a single API call. For best results, divide the input into smaller batches.
 * @member {Boolean} findingsTruncated
 */
GooglePrivacyDlpV2InspectResult.prototype['findingsTruncated'] = undefined;






export default GooglePrivacyDlpV2InspectResult;

