/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2TransformationDescription from './GooglePrivacyDlpV2TransformationDescription';
import GooglePrivacyDlpV2TransformationLocation from './GooglePrivacyDlpV2TransformationLocation';
import GooglePrivacyDlpV2TransformationResultStatus from './GooglePrivacyDlpV2TransformationResultStatus';

/**
 * The GooglePrivacyDlpV2TransformationDetails model module.
 * @module model/GooglePrivacyDlpV2TransformationDetails
 * @version v2
 */
class GooglePrivacyDlpV2TransformationDetails {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2TransformationDetails</code>.
     * Details about a single transformation. This object contains a description of the transformation, information about whether the transformation was successfully applied, and the precise location where the transformation occurred. These details are stored in a user-specified BigQuery table.
     * @alias module:model/GooglePrivacyDlpV2TransformationDetails
     */
    constructor() { 
        
        GooglePrivacyDlpV2TransformationDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2TransformationDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2TransformationDetails} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2TransformationDetails} The populated <code>GooglePrivacyDlpV2TransformationDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2TransformationDetails();

            if (data.hasOwnProperty('containerName')) {
                obj['containerName'] = ApiClient.convertToType(data['containerName'], 'String');
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('statusDetails')) {
                obj['statusDetails'] = GooglePrivacyDlpV2TransformationResultStatus.constructFromObject(data['statusDetails']);
            }
            if (data.hasOwnProperty('transformation')) {
                obj['transformation'] = ApiClient.convertToType(data['transformation'], [GooglePrivacyDlpV2TransformationDescription]);
            }
            if (data.hasOwnProperty('transformationLocation')) {
                obj['transformationLocation'] = GooglePrivacyDlpV2TransformationLocation.constructFromObject(data['transformationLocation']);
            }
            if (data.hasOwnProperty('transformedBytes')) {
                obj['transformedBytes'] = ApiClient.convertToType(data['transformedBytes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2TransformationDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2TransformationDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['containerName'] && !(typeof data['containerName'] === 'string' || data['containerName'] instanceof String)) {
            throw new Error("Expected the field `containerName` to be a primitive type in the JSON string but got " + data['containerName']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }
        // validate the optional field `statusDetails`
        if (data['statusDetails']) { // data not null
          GooglePrivacyDlpV2TransformationResultStatus.validateJSON(data['statusDetails']);
        }
        if (data['transformation']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transformation'])) {
                throw new Error("Expected the field `transformation` to be an array in the JSON data but got " + data['transformation']);
            }
            // validate the optional field `transformation` (array)
            for (const item of data['transformation']) {
                GooglePrivacyDlpV2TransformationDescription.validateJSON(item);
            };
        }
        // validate the optional field `transformationLocation`
        if (data['transformationLocation']) { // data not null
          GooglePrivacyDlpV2TransformationLocation.validateJSON(data['transformationLocation']);
        }
        // ensure the json data is a string
        if (data['transformedBytes'] && !(typeof data['transformedBytes'] === 'string' || data['transformedBytes'] instanceof String)) {
            throw new Error("Expected the field `transformedBytes` to be a primitive type in the JSON string but got " + data['transformedBytes']);
        }

        return true;
    }


}



/**
 * The top level name of the container where the transformation is located (this will be the source file name or table name).
 * @member {String} containerName
 */
GooglePrivacyDlpV2TransformationDetails.prototype['containerName'] = undefined;

/**
 * The name of the job that completed the transformation.
 * @member {String} resourceName
 */
GooglePrivacyDlpV2TransformationDetails.prototype['resourceName'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2TransformationResultStatus} statusDetails
 */
GooglePrivacyDlpV2TransformationDetails.prototype['statusDetails'] = undefined;

/**
 * Description of transformation. This would only contain more than one element if there were multiple matching transformations and which one to apply was ambiguous. Not set for states that contain no transformation, currently only state that contains no transformation is TransformationResultStateType.METADATA_UNRETRIEVABLE.
 * @member {Array.<module:model/GooglePrivacyDlpV2TransformationDescription>} transformation
 */
GooglePrivacyDlpV2TransformationDetails.prototype['transformation'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2TransformationLocation} transformationLocation
 */
GooglePrivacyDlpV2TransformationDetails.prototype['transformationLocation'] = undefined;

/**
 * The number of bytes that were transformed. If transformation was unsuccessful or did not take place because there was no content to transform, this will be zero.
 * @member {String} transformedBytes
 */
GooglePrivacyDlpV2TransformationDetails.prototype['transformedBytes'] = undefined;






export default GooglePrivacyDlpV2TransformationDetails;

