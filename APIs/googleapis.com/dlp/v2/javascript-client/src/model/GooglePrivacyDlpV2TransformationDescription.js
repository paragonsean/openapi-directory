/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2InfoType from './GooglePrivacyDlpV2InfoType';

/**
 * The GooglePrivacyDlpV2TransformationDescription model module.
 * @module model/GooglePrivacyDlpV2TransformationDescription
 * @version v2
 */
class GooglePrivacyDlpV2TransformationDescription {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2TransformationDescription</code>.
     * A flattened description of a &#x60;PrimitiveTransformation&#x60; or &#x60;RecordSuppression&#x60;.
     * @alias module:model/GooglePrivacyDlpV2TransformationDescription
     */
    constructor() { 
        
        GooglePrivacyDlpV2TransformationDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2TransformationDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2TransformationDescription} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2TransformationDescription} The populated <code>GooglePrivacyDlpV2TransformationDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2TransformationDescription();

            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('infoType')) {
                obj['infoType'] = GooglePrivacyDlpV2InfoType.constructFromObject(data['infoType']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2TransformationDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2TransformationDescription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['condition'] && !(typeof data['condition'] === 'string' || data['condition'] instanceof String)) {
            throw new Error("Expected the field `condition` to be a primitive type in the JSON string but got " + data['condition']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `infoType`
        if (data['infoType']) { // data not null
          GooglePrivacyDlpV2InfoType.validateJSON(data['infoType']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * A human-readable string representation of the `RecordCondition` corresponding to this transformation. Set if a `RecordCondition` was used to determine whether or not to apply this transformation. Examples: * (age_field > 85) * (age_field <= 18) * (zip_field exists) * (zip_field == 01234) && (city_field != \"Springville\") * (zip_field == 01234) && (age_field <= 18) && (city_field exists)
 * @member {String} condition
 */
GooglePrivacyDlpV2TransformationDescription.prototype['condition'] = undefined;

/**
 * A description of the transformation. This is empty for a RECORD_SUPPRESSION, or is the output of calling toString() on the `PrimitiveTransformation` protocol buffer message for any other type of transformation.
 * @member {String} description
 */
GooglePrivacyDlpV2TransformationDescription.prototype['description'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2InfoType} infoType
 */
GooglePrivacyDlpV2TransformationDescription.prototype['infoType'] = undefined;

/**
 * The transformation type.
 * @member {module:model/GooglePrivacyDlpV2TransformationDescription.TypeEnum} type
 */
GooglePrivacyDlpV2TransformationDescription.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2TransformationDescription['TypeEnum'] = {

    /**
     * value: "TRANSFORMATION_TYPE_UNSPECIFIED"
     * @const
     */
    "TRANSFORMATION_TYPE_UNSPECIFIED": "TRANSFORMATION_TYPE_UNSPECIFIED",

    /**
     * value: "RECORD_SUPPRESSION"
     * @const
     */
    "RECORD_SUPPRESSION": "RECORD_SUPPRESSION",

    /**
     * value: "REPLACE_VALUE"
     * @const
     */
    "REPLACE_VALUE": "REPLACE_VALUE",

    /**
     * value: "REPLACE_DICTIONARY"
     * @const
     */
    "REPLACE_DICTIONARY": "REPLACE_DICTIONARY",

    /**
     * value: "REDACT"
     * @const
     */
    "REDACT": "REDACT",

    /**
     * value: "CHARACTER_MASK"
     * @const
     */
    "CHARACTER_MASK": "CHARACTER_MASK",

    /**
     * value: "CRYPTO_REPLACE_FFX_FPE"
     * @const
     */
    "CRYPTO_REPLACE_FFX_FPE": "CRYPTO_REPLACE_FFX_FPE",

    /**
     * value: "FIXED_SIZE_BUCKETING"
     * @const
     */
    "FIXED_SIZE_BUCKETING": "FIXED_SIZE_BUCKETING",

    /**
     * value: "BUCKETING"
     * @const
     */
    "BUCKETING": "BUCKETING",

    /**
     * value: "REPLACE_WITH_INFO_TYPE"
     * @const
     */
    "REPLACE_WITH_INFO_TYPE": "REPLACE_WITH_INFO_TYPE",

    /**
     * value: "TIME_PART"
     * @const
     */
    "TIME_PART": "TIME_PART",

    /**
     * value: "CRYPTO_HASH"
     * @const
     */
    "CRYPTO_HASH": "CRYPTO_HASH",

    /**
     * value: "DATE_SHIFT"
     * @const
     */
    "DATE_SHIFT": "DATE_SHIFT",

    /**
     * value: "CRYPTO_DETERMINISTIC_CONFIG"
     * @const
     */
    "CRYPTO_DETERMINISTIC_CONFIG": "CRYPTO_DETERMINISTIC_CONFIG",

    /**
     * value: "REDACT_IMAGE"
     * @const
     */
    "REDACT_IMAGE": "REDACT_IMAGE"
};



export default GooglePrivacyDlpV2TransformationDescription;

