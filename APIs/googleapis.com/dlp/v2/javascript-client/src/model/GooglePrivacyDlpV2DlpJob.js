/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2ActionDetails from './GooglePrivacyDlpV2ActionDetails';
import GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails from './GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails';
import GooglePrivacyDlpV2Error from './GooglePrivacyDlpV2Error';
import GooglePrivacyDlpV2InspectDataSourceDetails from './GooglePrivacyDlpV2InspectDataSourceDetails';

/**
 * The GooglePrivacyDlpV2DlpJob model module.
 * @module model/GooglePrivacyDlpV2DlpJob
 * @version v2
 */
class GooglePrivacyDlpV2DlpJob {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2DlpJob</code>.
     * Combines all of the information about a DLP job.
     * @alias module:model/GooglePrivacyDlpV2DlpJob
     */
    constructor() { 
        
        GooglePrivacyDlpV2DlpJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2DlpJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2DlpJob} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2DlpJob} The populated <code>GooglePrivacyDlpV2DlpJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2DlpJob();

            if (data.hasOwnProperty('actionDetails')) {
                obj['actionDetails'] = ApiClient.convertToType(data['actionDetails'], [GooglePrivacyDlpV2ActionDetails]);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [GooglePrivacyDlpV2Error]);
            }
            if (data.hasOwnProperty('inspectDetails')) {
                obj['inspectDetails'] = GooglePrivacyDlpV2InspectDataSourceDetails.constructFromObject(data['inspectDetails']);
            }
            if (data.hasOwnProperty('jobTriggerName')) {
                obj['jobTriggerName'] = ApiClient.convertToType(data['jobTriggerName'], 'String');
            }
            if (data.hasOwnProperty('lastModified')) {
                obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('riskDetails')) {
                obj['riskDetails'] = GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails.constructFromObject(data['riskDetails']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2DlpJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2DlpJob</code>.
     */
    static validateJSON(data) {
        if (data['actionDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['actionDetails'])) {
                throw new Error("Expected the field `actionDetails` to be an array in the JSON data but got " + data['actionDetails']);
            }
            // validate the optional field `actionDetails` (array)
            for (const item of data['actionDetails']) {
                GooglePrivacyDlpV2ActionDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                GooglePrivacyDlpV2Error.validateJSON(item);
            };
        }
        // validate the optional field `inspectDetails`
        if (data['inspectDetails']) { // data not null
          GooglePrivacyDlpV2InspectDataSourceDetails.validateJSON(data['inspectDetails']);
        }
        // ensure the json data is a string
        if (data['jobTriggerName'] && !(typeof data['jobTriggerName'] === 'string' || data['jobTriggerName'] instanceof String)) {
            throw new Error("Expected the field `jobTriggerName` to be a primitive type in the JSON string but got " + data['jobTriggerName']);
        }
        // ensure the json data is a string
        if (data['lastModified'] && !(typeof data['lastModified'] === 'string' || data['lastModified'] instanceof String)) {
            throw new Error("Expected the field `lastModified` to be a primitive type in the JSON string but got " + data['lastModified']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `riskDetails`
        if (data['riskDetails']) { // data not null
          GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails.validateJSON(data['riskDetails']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Events that should occur after the job has completed.
 * @member {Array.<module:model/GooglePrivacyDlpV2ActionDetails>} actionDetails
 */
GooglePrivacyDlpV2DlpJob.prototype['actionDetails'] = undefined;

/**
 * Time when the job was created.
 * @member {String} createTime
 */
GooglePrivacyDlpV2DlpJob.prototype['createTime'] = undefined;

/**
 * Time when the job finished.
 * @member {String} endTime
 */
GooglePrivacyDlpV2DlpJob.prototype['endTime'] = undefined;

/**
 * A stream of errors encountered running the job.
 * @member {Array.<module:model/GooglePrivacyDlpV2Error>} errors
 */
GooglePrivacyDlpV2DlpJob.prototype['errors'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2InspectDataSourceDetails} inspectDetails
 */
GooglePrivacyDlpV2DlpJob.prototype['inspectDetails'] = undefined;

/**
 * If created by a job trigger, the resource name of the trigger that instantiated the job.
 * @member {String} jobTriggerName
 */
GooglePrivacyDlpV2DlpJob.prototype['jobTriggerName'] = undefined;

/**
 * Time when the job was last modified by the system.
 * @member {String} lastModified
 */
GooglePrivacyDlpV2DlpJob.prototype['lastModified'] = undefined;

/**
 * The server-assigned name.
 * @member {String} name
 */
GooglePrivacyDlpV2DlpJob.prototype['name'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails} riskDetails
 */
GooglePrivacyDlpV2DlpJob.prototype['riskDetails'] = undefined;

/**
 * Time when the job started.
 * @member {String} startTime
 */
GooglePrivacyDlpV2DlpJob.prototype['startTime'] = undefined;

/**
 * State of a job.
 * @member {module:model/GooglePrivacyDlpV2DlpJob.StateEnum} state
 */
GooglePrivacyDlpV2DlpJob.prototype['state'] = undefined;

/**
 * The type of job.
 * @member {module:model/GooglePrivacyDlpV2DlpJob.TypeEnum} type
 */
GooglePrivacyDlpV2DlpJob.prototype['type'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2DlpJob['StateEnum'] = {

    /**
     * value: "JOB_STATE_UNSPECIFIED"
     * @const
     */
    "JOB_STATE_UNSPECIFIED": "JOB_STATE_UNSPECIFIED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "DONE"
     * @const
     */
    "DONE": "DONE",

    /**
     * value: "CANCELED"
     * @const
     */
    "CANCELED": "CANCELED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2DlpJob['TypeEnum'] = {

    /**
     * value: "DLP_JOB_TYPE_UNSPECIFIED"
     * @const
     */
    "DLP_JOB_TYPE_UNSPECIFIED": "DLP_JOB_TYPE_UNSPECIFIED",

    /**
     * value: "INSPECT_JOB"
     * @const
     */
    "INSPECT_JOB": "INSPECT_JOB",

    /**
     * value: "RISK_ANALYSIS_JOB"
     * @const
     */
    "RISK_ANALYSIS_JOB": "RISK_ANALYSIS_JOB"
};



export default GooglePrivacyDlpV2DlpJob;

