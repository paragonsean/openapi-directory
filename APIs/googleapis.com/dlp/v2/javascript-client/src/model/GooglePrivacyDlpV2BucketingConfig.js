/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2Bucket from './GooglePrivacyDlpV2Bucket';

/**
 * The GooglePrivacyDlpV2BucketingConfig model module.
 * @module model/GooglePrivacyDlpV2BucketingConfig
 * @version v2
 */
class GooglePrivacyDlpV2BucketingConfig {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2BucketingConfig</code>.
     * Generalization function that buckets values based on ranges. The ranges and replacement values are dynamically provided by the user for custom behavior, such as 1-30 -&gt; LOW 31-65 -&gt; MEDIUM 66-100 -&gt; HIGH This can be used on data of type: number, long, string, timestamp. If the bound &#x60;Value&#x60; type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/sensitive-data-protection/docs/concepts-bucketing to learn more.
     * @alias module:model/GooglePrivacyDlpV2BucketingConfig
     */
    constructor() { 
        
        GooglePrivacyDlpV2BucketingConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2BucketingConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2BucketingConfig} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2BucketingConfig} The populated <code>GooglePrivacyDlpV2BucketingConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2BucketingConfig();

            if (data.hasOwnProperty('buckets')) {
                obj['buckets'] = ApiClient.convertToType(data['buckets'], [GooglePrivacyDlpV2Bucket]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2BucketingConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2BucketingConfig</code>.
     */
    static validateJSON(data) {
        if (data['buckets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['buckets'])) {
                throw new Error("Expected the field `buckets` to be an array in the JSON data but got " + data['buckets']);
            }
            // validate the optional field `buckets` (array)
            for (const item of data['buckets']) {
                GooglePrivacyDlpV2Bucket.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Set of buckets. Ranges must be non-overlapping.
 * @member {Array.<module:model/GooglePrivacyDlpV2Bucket>} buckets
 */
GooglePrivacyDlpV2BucketingConfig.prototype['buckets'] = undefined;






export default GooglePrivacyDlpV2BucketingConfig;

