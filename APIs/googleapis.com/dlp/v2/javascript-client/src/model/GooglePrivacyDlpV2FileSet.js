/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2CloudStorageRegexFileSet from './GooglePrivacyDlpV2CloudStorageRegexFileSet';

/**
 * The GooglePrivacyDlpV2FileSet model module.
 * @module model/GooglePrivacyDlpV2FileSet
 * @version v2
 */
class GooglePrivacyDlpV2FileSet {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2FileSet</code>.
     * Set of files to scan.
     * @alias module:model/GooglePrivacyDlpV2FileSet
     */
    constructor() { 
        
        GooglePrivacyDlpV2FileSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2FileSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2FileSet} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2FileSet} The populated <code>GooglePrivacyDlpV2FileSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2FileSet();

            if (data.hasOwnProperty('regexFileSet')) {
                obj['regexFileSet'] = GooglePrivacyDlpV2CloudStorageRegexFileSet.constructFromObject(data['regexFileSet']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2FileSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2FileSet</code>.
     */
    static validateJSON(data) {
        // validate the optional field `regexFileSet`
        if (data['regexFileSet']) { // data not null
          GooglePrivacyDlpV2CloudStorageRegexFileSet.validateJSON(data['regexFileSet']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2CloudStorageRegexFileSet} regexFileSet
 */
GooglePrivacyDlpV2FileSet.prototype['regexFileSet'] = undefined;

/**
 * The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/_*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/_*`. Exactly one of `url` or `regex_file_set` must be set.
 * @member {String} url
 */
GooglePrivacyDlpV2FileSet.prototype['url'] = undefined;






export default GooglePrivacyDlpV2FileSet;

