/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2Dictionary from './GooglePrivacyDlpV2Dictionary';
import GooglePrivacyDlpV2ExcludeByHotword from './GooglePrivacyDlpV2ExcludeByHotword';
import GooglePrivacyDlpV2ExcludeInfoTypes from './GooglePrivacyDlpV2ExcludeInfoTypes';
import GooglePrivacyDlpV2Regex from './GooglePrivacyDlpV2Regex';

/**
 * The GooglePrivacyDlpV2ExclusionRule model module.
 * @module model/GooglePrivacyDlpV2ExclusionRule
 * @version v2
 */
class GooglePrivacyDlpV2ExclusionRule {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2ExclusionRule</code>.
     * The rule that specifies conditions when findings of infoTypes specified in &#x60;InspectionRuleSet&#x60; are removed from results.
     * @alias module:model/GooglePrivacyDlpV2ExclusionRule
     */
    constructor() { 
        
        GooglePrivacyDlpV2ExclusionRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2ExclusionRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2ExclusionRule} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2ExclusionRule} The populated <code>GooglePrivacyDlpV2ExclusionRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2ExclusionRule();

            if (data.hasOwnProperty('dictionary')) {
                obj['dictionary'] = GooglePrivacyDlpV2Dictionary.constructFromObject(data['dictionary']);
            }
            if (data.hasOwnProperty('excludeByHotword')) {
                obj['excludeByHotword'] = GooglePrivacyDlpV2ExcludeByHotword.constructFromObject(data['excludeByHotword']);
            }
            if (data.hasOwnProperty('excludeInfoTypes')) {
                obj['excludeInfoTypes'] = GooglePrivacyDlpV2ExcludeInfoTypes.constructFromObject(data['excludeInfoTypes']);
            }
            if (data.hasOwnProperty('matchingType')) {
                obj['matchingType'] = ApiClient.convertToType(data['matchingType'], 'String');
            }
            if (data.hasOwnProperty('regex')) {
                obj['regex'] = GooglePrivacyDlpV2Regex.constructFromObject(data['regex']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2ExclusionRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2ExclusionRule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dictionary`
        if (data['dictionary']) { // data not null
          GooglePrivacyDlpV2Dictionary.validateJSON(data['dictionary']);
        }
        // validate the optional field `excludeByHotword`
        if (data['excludeByHotword']) { // data not null
          GooglePrivacyDlpV2ExcludeByHotword.validateJSON(data['excludeByHotword']);
        }
        // validate the optional field `excludeInfoTypes`
        if (data['excludeInfoTypes']) { // data not null
          GooglePrivacyDlpV2ExcludeInfoTypes.validateJSON(data['excludeInfoTypes']);
        }
        // ensure the json data is a string
        if (data['matchingType'] && !(typeof data['matchingType'] === 'string' || data['matchingType'] instanceof String)) {
            throw new Error("Expected the field `matchingType` to be a primitive type in the JSON string but got " + data['matchingType']);
        }
        // validate the optional field `regex`
        if (data['regex']) { // data not null
          GooglePrivacyDlpV2Regex.validateJSON(data['regex']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2Dictionary} dictionary
 */
GooglePrivacyDlpV2ExclusionRule.prototype['dictionary'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2ExcludeByHotword} excludeByHotword
 */
GooglePrivacyDlpV2ExclusionRule.prototype['excludeByHotword'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2ExcludeInfoTypes} excludeInfoTypes
 */
GooglePrivacyDlpV2ExclusionRule.prototype['excludeInfoTypes'] = undefined;

/**
 * How the rule is applied, see MatchingType documentation for details.
 * @member {module:model/GooglePrivacyDlpV2ExclusionRule.MatchingTypeEnum} matchingType
 */
GooglePrivacyDlpV2ExclusionRule.prototype['matchingType'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2Regex} regex
 */
GooglePrivacyDlpV2ExclusionRule.prototype['regex'] = undefined;





/**
 * Allowed values for the <code>matchingType</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2ExclusionRule['MatchingTypeEnum'] = {

    /**
     * value: "MATCHING_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "MATCHING_TYPE_UNSPECIFIED",

    /**
     * value: "MATCHING_TYPE_FULL_MATCH"
     * @const
     */
    "FULL_MATCH": "MATCHING_TYPE_FULL_MATCH",

    /**
     * value: "MATCHING_TYPE_PARTIAL_MATCH"
     * @const
     */
    "PARTIAL_MATCH": "MATCHING_TYPE_PARTIAL_MATCH",

    /**
     * value: "MATCHING_TYPE_INVERSE_MATCH"
     * @const
     */
    "INVERSE_MATCH": "MATCHING_TYPE_INVERSE_MATCH"
};



export default GooglePrivacyDlpV2ExclusionRule;

