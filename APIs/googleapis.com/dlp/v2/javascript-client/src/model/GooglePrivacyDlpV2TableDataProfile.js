/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2DataProfileConfigSnapshot from './GooglePrivacyDlpV2DataProfileConfigSnapshot';
import GooglePrivacyDlpV2DataRiskLevel from './GooglePrivacyDlpV2DataRiskLevel';
import GooglePrivacyDlpV2DataSourceType from './GooglePrivacyDlpV2DataSourceType';
import GooglePrivacyDlpV2InfoTypeSummary from './GooglePrivacyDlpV2InfoTypeSummary';
import GooglePrivacyDlpV2OtherInfoTypeSummary from './GooglePrivacyDlpV2OtherInfoTypeSummary';
import GooglePrivacyDlpV2ProfileStatus from './GooglePrivacyDlpV2ProfileStatus';
import GooglePrivacyDlpV2SensitivityScore from './GooglePrivacyDlpV2SensitivityScore';

/**
 * The GooglePrivacyDlpV2TableDataProfile model module.
 * @module model/GooglePrivacyDlpV2TableDataProfile
 * @version v2
 */
class GooglePrivacyDlpV2TableDataProfile {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2TableDataProfile</code>.
     * The profile for a scanned table.
     * @alias module:model/GooglePrivacyDlpV2TableDataProfile
     */
    constructor() { 
        
        GooglePrivacyDlpV2TableDataProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2TableDataProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2TableDataProfile} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2TableDataProfile} The populated <code>GooglePrivacyDlpV2TableDataProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2TableDataProfile();

            if (data.hasOwnProperty('configSnapshot')) {
                obj['configSnapshot'] = GooglePrivacyDlpV2DataProfileConfigSnapshot.constructFromObject(data['configSnapshot']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('dataRiskLevel')) {
                obj['dataRiskLevel'] = GooglePrivacyDlpV2DataRiskLevel.constructFromObject(data['dataRiskLevel']);
            }
            if (data.hasOwnProperty('dataSourceType')) {
                obj['dataSourceType'] = GooglePrivacyDlpV2DataSourceType.constructFromObject(data['dataSourceType']);
            }
            if (data.hasOwnProperty('datasetId')) {
                obj['datasetId'] = ApiClient.convertToType(data['datasetId'], 'String');
            }
            if (data.hasOwnProperty('datasetLocation')) {
                obj['datasetLocation'] = ApiClient.convertToType(data['datasetLocation'], 'String');
            }
            if (data.hasOwnProperty('datasetProjectId')) {
                obj['datasetProjectId'] = ApiClient.convertToType(data['datasetProjectId'], 'String');
            }
            if (data.hasOwnProperty('encryptionStatus')) {
                obj['encryptionStatus'] = ApiClient.convertToType(data['encryptionStatus'], 'String');
            }
            if (data.hasOwnProperty('expirationTime')) {
                obj['expirationTime'] = ApiClient.convertToType(data['expirationTime'], 'String');
            }
            if (data.hasOwnProperty('failedColumnCount')) {
                obj['failedColumnCount'] = ApiClient.convertToType(data['failedColumnCount'], 'String');
            }
            if (data.hasOwnProperty('fullResource')) {
                obj['fullResource'] = ApiClient.convertToType(data['fullResource'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('otherInfoTypes')) {
                obj['otherInfoTypes'] = ApiClient.convertToType(data['otherInfoTypes'], [GooglePrivacyDlpV2OtherInfoTypeSummary]);
            }
            if (data.hasOwnProperty('predictedInfoTypes')) {
                obj['predictedInfoTypes'] = ApiClient.convertToType(data['predictedInfoTypes'], [GooglePrivacyDlpV2InfoTypeSummary]);
            }
            if (data.hasOwnProperty('profileLastGenerated')) {
                obj['profileLastGenerated'] = ApiClient.convertToType(data['profileLastGenerated'], 'String');
            }
            if (data.hasOwnProperty('profileStatus')) {
                obj['profileStatus'] = GooglePrivacyDlpV2ProfileStatus.constructFromObject(data['profileStatus']);
            }
            if (data.hasOwnProperty('projectDataProfile')) {
                obj['projectDataProfile'] = ApiClient.convertToType(data['projectDataProfile'], 'String');
            }
            if (data.hasOwnProperty('resourceLabels')) {
                obj['resourceLabels'] = ApiClient.convertToType(data['resourceLabels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('resourceVisibility')) {
                obj['resourceVisibility'] = ApiClient.convertToType(data['resourceVisibility'], 'String');
            }
            if (data.hasOwnProperty('rowCount')) {
                obj['rowCount'] = ApiClient.convertToType(data['rowCount'], 'String');
            }
            if (data.hasOwnProperty('scannedColumnCount')) {
                obj['scannedColumnCount'] = ApiClient.convertToType(data['scannedColumnCount'], 'String');
            }
            if (data.hasOwnProperty('sensitivityScore')) {
                obj['sensitivityScore'] = GooglePrivacyDlpV2SensitivityScore.constructFromObject(data['sensitivityScore']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('tableId')) {
                obj['tableId'] = ApiClient.convertToType(data['tableId'], 'String');
            }
            if (data.hasOwnProperty('tableSizeBytes')) {
                obj['tableSizeBytes'] = ApiClient.convertToType(data['tableSizeBytes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2TableDataProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2TableDataProfile</code>.
     */
    static validateJSON(data) {
        // validate the optional field `configSnapshot`
        if (data['configSnapshot']) { // data not null
          GooglePrivacyDlpV2DataProfileConfigSnapshot.validateJSON(data['configSnapshot']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `dataRiskLevel`
        if (data['dataRiskLevel']) { // data not null
          GooglePrivacyDlpV2DataRiskLevel.validateJSON(data['dataRiskLevel']);
        }
        // validate the optional field `dataSourceType`
        if (data['dataSourceType']) { // data not null
          GooglePrivacyDlpV2DataSourceType.validateJSON(data['dataSourceType']);
        }
        // ensure the json data is a string
        if (data['datasetId'] && !(typeof data['datasetId'] === 'string' || data['datasetId'] instanceof String)) {
            throw new Error("Expected the field `datasetId` to be a primitive type in the JSON string but got " + data['datasetId']);
        }
        // ensure the json data is a string
        if (data['datasetLocation'] && !(typeof data['datasetLocation'] === 'string' || data['datasetLocation'] instanceof String)) {
            throw new Error("Expected the field `datasetLocation` to be a primitive type in the JSON string but got " + data['datasetLocation']);
        }
        // ensure the json data is a string
        if (data['datasetProjectId'] && !(typeof data['datasetProjectId'] === 'string' || data['datasetProjectId'] instanceof String)) {
            throw new Error("Expected the field `datasetProjectId` to be a primitive type in the JSON string but got " + data['datasetProjectId']);
        }
        // ensure the json data is a string
        if (data['encryptionStatus'] && !(typeof data['encryptionStatus'] === 'string' || data['encryptionStatus'] instanceof String)) {
            throw new Error("Expected the field `encryptionStatus` to be a primitive type in the JSON string but got " + data['encryptionStatus']);
        }
        // ensure the json data is a string
        if (data['expirationTime'] && !(typeof data['expirationTime'] === 'string' || data['expirationTime'] instanceof String)) {
            throw new Error("Expected the field `expirationTime` to be a primitive type in the JSON string but got " + data['expirationTime']);
        }
        // ensure the json data is a string
        if (data['failedColumnCount'] && !(typeof data['failedColumnCount'] === 'string' || data['failedColumnCount'] instanceof String)) {
            throw new Error("Expected the field `failedColumnCount` to be a primitive type in the JSON string but got " + data['failedColumnCount']);
        }
        // ensure the json data is a string
        if (data['fullResource'] && !(typeof data['fullResource'] === 'string' || data['fullResource'] instanceof String)) {
            throw new Error("Expected the field `fullResource` to be a primitive type in the JSON string but got " + data['fullResource']);
        }
        // ensure the json data is a string
        if (data['lastModifiedTime'] && !(typeof data['lastModifiedTime'] === 'string' || data['lastModifiedTime'] instanceof String)) {
            throw new Error("Expected the field `lastModifiedTime` to be a primitive type in the JSON string but got " + data['lastModifiedTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['otherInfoTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['otherInfoTypes'])) {
                throw new Error("Expected the field `otherInfoTypes` to be an array in the JSON data but got " + data['otherInfoTypes']);
            }
            // validate the optional field `otherInfoTypes` (array)
            for (const item of data['otherInfoTypes']) {
                GooglePrivacyDlpV2OtherInfoTypeSummary.validateJSON(item);
            };
        }
        if (data['predictedInfoTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['predictedInfoTypes'])) {
                throw new Error("Expected the field `predictedInfoTypes` to be an array in the JSON data but got " + data['predictedInfoTypes']);
            }
            // validate the optional field `predictedInfoTypes` (array)
            for (const item of data['predictedInfoTypes']) {
                GooglePrivacyDlpV2InfoTypeSummary.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['profileLastGenerated'] && !(typeof data['profileLastGenerated'] === 'string' || data['profileLastGenerated'] instanceof String)) {
            throw new Error("Expected the field `profileLastGenerated` to be a primitive type in the JSON string but got " + data['profileLastGenerated']);
        }
        // validate the optional field `profileStatus`
        if (data['profileStatus']) { // data not null
          GooglePrivacyDlpV2ProfileStatus.validateJSON(data['profileStatus']);
        }
        // ensure the json data is a string
        if (data['projectDataProfile'] && !(typeof data['projectDataProfile'] === 'string' || data['projectDataProfile'] instanceof String)) {
            throw new Error("Expected the field `projectDataProfile` to be a primitive type in the JSON string but got " + data['projectDataProfile']);
        }
        // ensure the json data is a string
        if (data['resourceVisibility'] && !(typeof data['resourceVisibility'] === 'string' || data['resourceVisibility'] instanceof String)) {
            throw new Error("Expected the field `resourceVisibility` to be a primitive type in the JSON string but got " + data['resourceVisibility']);
        }
        // ensure the json data is a string
        if (data['rowCount'] && !(typeof data['rowCount'] === 'string' || data['rowCount'] instanceof String)) {
            throw new Error("Expected the field `rowCount` to be a primitive type in the JSON string but got " + data['rowCount']);
        }
        // ensure the json data is a string
        if (data['scannedColumnCount'] && !(typeof data['scannedColumnCount'] === 'string' || data['scannedColumnCount'] instanceof String)) {
            throw new Error("Expected the field `scannedColumnCount` to be a primitive type in the JSON string but got " + data['scannedColumnCount']);
        }
        // validate the optional field `sensitivityScore`
        if (data['sensitivityScore']) { // data not null
          GooglePrivacyDlpV2SensitivityScore.validateJSON(data['sensitivityScore']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['tableId'] && !(typeof data['tableId'] === 'string' || data['tableId'] instanceof String)) {
            throw new Error("Expected the field `tableId` to be a primitive type in the JSON string but got " + data['tableId']);
        }
        // ensure the json data is a string
        if (data['tableSizeBytes'] && !(typeof data['tableSizeBytes'] === 'string' || data['tableSizeBytes'] instanceof String)) {
            throw new Error("Expected the field `tableSizeBytes` to be a primitive type in the JSON string but got " + data['tableSizeBytes']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2DataProfileConfigSnapshot} configSnapshot
 */
GooglePrivacyDlpV2TableDataProfile.prototype['configSnapshot'] = undefined;

/**
 * The time at which the table was created.
 * @member {String} createTime
 */
GooglePrivacyDlpV2TableDataProfile.prototype['createTime'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2DataRiskLevel} dataRiskLevel
 */
GooglePrivacyDlpV2TableDataProfile.prototype['dataRiskLevel'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2DataSourceType} dataSourceType
 */
GooglePrivacyDlpV2TableDataProfile.prototype['dataSourceType'] = undefined;

/**
 * If the resource is BigQuery, the dataset ID.
 * @member {String} datasetId
 */
GooglePrivacyDlpV2TableDataProfile.prototype['datasetId'] = undefined;

/**
 * If supported, the location where the dataset's data is stored. See https://cloud.google.com/bigquery/docs/locations for supported locations.
 * @member {String} datasetLocation
 */
GooglePrivacyDlpV2TableDataProfile.prototype['datasetLocation'] = undefined;

/**
 * The Google Cloud project ID that owns the resource.
 * @member {String} datasetProjectId
 */
GooglePrivacyDlpV2TableDataProfile.prototype['datasetProjectId'] = undefined;

/**
 * How the table is encrypted.
 * @member {module:model/GooglePrivacyDlpV2TableDataProfile.EncryptionStatusEnum} encryptionStatus
 */
GooglePrivacyDlpV2TableDataProfile.prototype['encryptionStatus'] = undefined;

/**
 * Optional. The time when this table expires.
 * @member {String} expirationTime
 */
GooglePrivacyDlpV2TableDataProfile.prototype['expirationTime'] = undefined;

/**
 * The number of columns skipped in the table because of an error.
 * @member {String} failedColumnCount
 */
GooglePrivacyDlpV2TableDataProfile.prototype['failedColumnCount'] = undefined;

/**
 * The resource name of the resource profiled. https://cloud.google.com/apis/design/resource_names#full_resource_name
 * @member {String} fullResource
 */
GooglePrivacyDlpV2TableDataProfile.prototype['fullResource'] = undefined;

/**
 * The time when this table was last modified
 * @member {String} lastModifiedTime
 */
GooglePrivacyDlpV2TableDataProfile.prototype['lastModifiedTime'] = undefined;

/**
 * The name of the profile.
 * @member {String} name
 */
GooglePrivacyDlpV2TableDataProfile.prototype['name'] = undefined;

/**
 * Other infoTypes found in this table's data.
 * @member {Array.<module:model/GooglePrivacyDlpV2OtherInfoTypeSummary>} otherInfoTypes
 */
GooglePrivacyDlpV2TableDataProfile.prototype['otherInfoTypes'] = undefined;

/**
 * The infoTypes predicted from this table's data.
 * @member {Array.<module:model/GooglePrivacyDlpV2InfoTypeSummary>} predictedInfoTypes
 */
GooglePrivacyDlpV2TableDataProfile.prototype['predictedInfoTypes'] = undefined;

/**
 * The last time the profile was generated.
 * @member {String} profileLastGenerated
 */
GooglePrivacyDlpV2TableDataProfile.prototype['profileLastGenerated'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2ProfileStatus} profileStatus
 */
GooglePrivacyDlpV2TableDataProfile.prototype['profileStatus'] = undefined;

/**
 * The resource name to the project data profile for this table.
 * @member {String} projectDataProfile
 */
GooglePrivacyDlpV2TableDataProfile.prototype['projectDataProfile'] = undefined;

/**
 * The labels applied to the resource at the time the profile was generated.
 * @member {Object.<String, String>} resourceLabels
 */
GooglePrivacyDlpV2TableDataProfile.prototype['resourceLabels'] = undefined;

/**
 * How broadly a resource has been shared.
 * @member {module:model/GooglePrivacyDlpV2TableDataProfile.ResourceVisibilityEnum} resourceVisibility
 */
GooglePrivacyDlpV2TableDataProfile.prototype['resourceVisibility'] = undefined;

/**
 * Number of rows in the table when the profile was generated. This will not be populated for BigLake tables.
 * @member {String} rowCount
 */
GooglePrivacyDlpV2TableDataProfile.prototype['rowCount'] = undefined;

/**
 * The number of columns profiled in the table.
 * @member {String} scannedColumnCount
 */
GooglePrivacyDlpV2TableDataProfile.prototype['scannedColumnCount'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2SensitivityScore} sensitivityScore
 */
GooglePrivacyDlpV2TableDataProfile.prototype['sensitivityScore'] = undefined;

/**
 * State of a profile.
 * @member {module:model/GooglePrivacyDlpV2TableDataProfile.StateEnum} state
 */
GooglePrivacyDlpV2TableDataProfile.prototype['state'] = undefined;

/**
 * If the resource is BigQuery, the BigQuery table ID.
 * @member {String} tableId
 */
GooglePrivacyDlpV2TableDataProfile.prototype['tableId'] = undefined;

/**
 * The size of the table when the profile was generated.
 * @member {String} tableSizeBytes
 */
GooglePrivacyDlpV2TableDataProfile.prototype['tableSizeBytes'] = undefined;





/**
 * Allowed values for the <code>encryptionStatus</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2TableDataProfile['EncryptionStatusEnum'] = {

    /**
     * value: "ENCRYPTION_STATUS_UNSPECIFIED"
     * @const
     */
    "STATUS_UNSPECIFIED": "ENCRYPTION_STATUS_UNSPECIFIED",

    /**
     * value: "ENCRYPTION_GOOGLE_MANAGED"
     * @const
     */
    "GOOGLE_MANAGED": "ENCRYPTION_GOOGLE_MANAGED",

    /**
     * value: "ENCRYPTION_CUSTOMER_MANAGED"
     * @const
     */
    "CUSTOMER_MANAGED": "ENCRYPTION_CUSTOMER_MANAGED"
};


/**
 * Allowed values for the <code>resourceVisibility</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2TableDataProfile['ResourceVisibilityEnum'] = {

    /**
     * value: "RESOURCE_VISIBILITY_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "RESOURCE_VISIBILITY_UNSPECIFIED",

    /**
     * value: "RESOURCE_VISIBILITY_PUBLIC"
     * @const
     */
    "PUBLIC": "RESOURCE_VISIBILITY_PUBLIC",

    /**
     * value: "RESOURCE_VISIBILITY_RESTRICTED"
     * @const
     */
    "RESTRICTED": "RESOURCE_VISIBILITY_RESTRICTED"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2TableDataProfile['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "DONE"
     * @const
     */
    "DONE": "DONE"
};



export default GooglePrivacyDlpV2TableDataProfile;

