/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GooglePrivacyDlpV2TransientCryptoKey model module.
 * @module model/GooglePrivacyDlpV2TransientCryptoKey
 * @version v2
 */
class GooglePrivacyDlpV2TransientCryptoKey {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2TransientCryptoKey</code>.
     * Use this to have a random data crypto key generated. It will be discarded after the request finishes.
     * @alias module:model/GooglePrivacyDlpV2TransientCryptoKey
     */
    constructor() { 
        
        GooglePrivacyDlpV2TransientCryptoKey.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2TransientCryptoKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2TransientCryptoKey} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2TransientCryptoKey} The populated <code>GooglePrivacyDlpV2TransientCryptoKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2TransientCryptoKey();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2TransientCryptoKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2TransientCryptoKey</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Required. Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being generated).
 * @member {String} name
 */
GooglePrivacyDlpV2TransientCryptoKey.prototype['name'] = undefined;






export default GooglePrivacyDlpV2TransientCryptoKey;

