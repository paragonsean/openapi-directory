/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2InfoType from './GooglePrivacyDlpV2InfoType';
import GooglePrivacyDlpV2Location from './GooglePrivacyDlpV2Location';
import GooglePrivacyDlpV2QuoteInfo from './GooglePrivacyDlpV2QuoteInfo';

/**
 * The GooglePrivacyDlpV2Finding model module.
 * @module model/GooglePrivacyDlpV2Finding
 * @version v2
 */
class GooglePrivacyDlpV2Finding {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2Finding</code>.
     * Represents a piece of potentially sensitive content.
     * @alias module:model/GooglePrivacyDlpV2Finding
     */
    constructor() { 
        
        GooglePrivacyDlpV2Finding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2Finding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2Finding} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2Finding} The populated <code>GooglePrivacyDlpV2Finding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2Finding();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('findingId')) {
                obj['findingId'] = ApiClient.convertToType(data['findingId'], 'String');
            }
            if (data.hasOwnProperty('infoType')) {
                obj['infoType'] = GooglePrivacyDlpV2InfoType.constructFromObject(data['infoType']);
            }
            if (data.hasOwnProperty('jobCreateTime')) {
                obj['jobCreateTime'] = ApiClient.convertToType(data['jobCreateTime'], 'String');
            }
            if (data.hasOwnProperty('jobName')) {
                obj['jobName'] = ApiClient.convertToType(data['jobName'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('likelihood')) {
                obj['likelihood'] = ApiClient.convertToType(data['likelihood'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = GooglePrivacyDlpV2Location.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('quote')) {
                obj['quote'] = ApiClient.convertToType(data['quote'], 'String');
            }
            if (data.hasOwnProperty('quoteInfo')) {
                obj['quoteInfo'] = GooglePrivacyDlpV2QuoteInfo.constructFromObject(data['quoteInfo']);
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('triggerName')) {
                obj['triggerName'] = ApiClient.convertToType(data['triggerName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2Finding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2Finding</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['findingId'] && !(typeof data['findingId'] === 'string' || data['findingId'] instanceof String)) {
            throw new Error("Expected the field `findingId` to be a primitive type in the JSON string but got " + data['findingId']);
        }
        // validate the optional field `infoType`
        if (data['infoType']) { // data not null
          GooglePrivacyDlpV2InfoType.validateJSON(data['infoType']);
        }
        // ensure the json data is a string
        if (data['jobCreateTime'] && !(typeof data['jobCreateTime'] === 'string' || data['jobCreateTime'] instanceof String)) {
            throw new Error("Expected the field `jobCreateTime` to be a primitive type in the JSON string but got " + data['jobCreateTime']);
        }
        // ensure the json data is a string
        if (data['jobName'] && !(typeof data['jobName'] === 'string' || data['jobName'] instanceof String)) {
            throw new Error("Expected the field `jobName` to be a primitive type in the JSON string but got " + data['jobName']);
        }
        // ensure the json data is a string
        if (data['likelihood'] && !(typeof data['likelihood'] === 'string' || data['likelihood'] instanceof String)) {
            throw new Error("Expected the field `likelihood` to be a primitive type in the JSON string but got " + data['likelihood']);
        }
        // validate the optional field `location`
        if (data['location']) { // data not null
          GooglePrivacyDlpV2Location.validateJSON(data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['quote'] && !(typeof data['quote'] === 'string' || data['quote'] instanceof String)) {
            throw new Error("Expected the field `quote` to be a primitive type in the JSON string but got " + data['quote']);
        }
        // validate the optional field `quoteInfo`
        if (data['quoteInfo']) { // data not null
          GooglePrivacyDlpV2QuoteInfo.validateJSON(data['quoteInfo']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }
        // ensure the json data is a string
        if (data['triggerName'] && !(typeof data['triggerName'] === 'string' || data['triggerName'] instanceof String)) {
            throw new Error("Expected the field `triggerName` to be a primitive type in the JSON string but got " + data['triggerName']);
        }

        return true;
    }


}



/**
 * Timestamp when finding was detected.
 * @member {String} createTime
 */
GooglePrivacyDlpV2Finding.prototype['createTime'] = undefined;

/**
 * The unique finding id.
 * @member {String} findingId
 */
GooglePrivacyDlpV2Finding.prototype['findingId'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2InfoType} infoType
 */
GooglePrivacyDlpV2Finding.prototype['infoType'] = undefined;

/**
 * Time the job started that produced this finding.
 * @member {String} jobCreateTime
 */
GooglePrivacyDlpV2Finding.prototype['jobCreateTime'] = undefined;

/**
 * The job that stored the finding.
 * @member {String} jobName
 */
GooglePrivacyDlpV2Finding.prototype['jobName'] = undefined;

/**
 * The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`
 * @member {Object.<String, String>} labels
 */
GooglePrivacyDlpV2Finding.prototype['labels'] = undefined;

/**
 * Confidence of how likely it is that the `info_type` is correct.
 * @member {module:model/GooglePrivacyDlpV2Finding.LikelihoodEnum} likelihood
 */
GooglePrivacyDlpV2Finding.prototype['likelihood'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2Location} location
 */
GooglePrivacyDlpV2Finding.prototype['location'] = undefined;

/**
 * Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings.
 * @member {String} name
 */
GooglePrivacyDlpV2Finding.prototype['name'] = undefined;

/**
 * The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted.
 * @member {String} quote
 */
GooglePrivacyDlpV2Finding.prototype['quote'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2QuoteInfo} quoteInfo
 */
GooglePrivacyDlpV2Finding.prototype['quoteInfo'] = undefined;

/**
 * The job that stored the finding.
 * @member {String} resourceName
 */
GooglePrivacyDlpV2Finding.prototype['resourceName'] = undefined;

/**
 * Job trigger name, if applicable, for this finding.
 * @member {String} triggerName
 */
GooglePrivacyDlpV2Finding.prototype['triggerName'] = undefined;





/**
 * Allowed values for the <code>likelihood</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2Finding['LikelihoodEnum'] = {

    /**
     * value: "LIKELIHOOD_UNSPECIFIED"
     * @const
     */
    "LIKELIHOOD_UNSPECIFIED": "LIKELIHOOD_UNSPECIFIED",

    /**
     * value: "VERY_UNLIKELY"
     * @const
     */
    "VERY_UNLIKELY": "VERY_UNLIKELY",

    /**
     * value: "UNLIKELY"
     * @const
     */
    "UNLIKELY": "UNLIKELY",

    /**
     * value: "POSSIBLE"
     * @const
     */
    "POSSIBLE": "POSSIBLE",

    /**
     * value: "LIKELY"
     * @const
     */
    "LIKELY": "LIKELY",

    /**
     * value: "VERY_LIKELY"
     * @const
     */
    "VERY_LIKELY": "VERY_LIKELY"
};



export default GooglePrivacyDlpV2Finding;

