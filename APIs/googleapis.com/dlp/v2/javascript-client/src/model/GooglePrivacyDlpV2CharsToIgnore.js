/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GooglePrivacyDlpV2CharsToIgnore model module.
 * @module model/GooglePrivacyDlpV2CharsToIgnore
 * @version v2
 */
class GooglePrivacyDlpV2CharsToIgnore {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2CharsToIgnore</code>.
     * Characters to skip when doing deidentification of a value. These will be left alone and skipped.
     * @alias module:model/GooglePrivacyDlpV2CharsToIgnore
     */
    constructor() { 
        
        GooglePrivacyDlpV2CharsToIgnore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2CharsToIgnore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2CharsToIgnore} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2CharsToIgnore} The populated <code>GooglePrivacyDlpV2CharsToIgnore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2CharsToIgnore();

            if (data.hasOwnProperty('charactersToSkip')) {
                obj['charactersToSkip'] = ApiClient.convertToType(data['charactersToSkip'], 'String');
            }
            if (data.hasOwnProperty('commonCharactersToIgnore')) {
                obj['commonCharactersToIgnore'] = ApiClient.convertToType(data['commonCharactersToIgnore'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2CharsToIgnore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2CharsToIgnore</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['charactersToSkip'] && !(typeof data['charactersToSkip'] === 'string' || data['charactersToSkip'] instanceof String)) {
            throw new Error("Expected the field `charactersToSkip` to be a primitive type in the JSON string but got " + data['charactersToSkip']);
        }
        // ensure the json data is a string
        if (data['commonCharactersToIgnore'] && !(typeof data['commonCharactersToIgnore'] === 'string' || data['commonCharactersToIgnore'] instanceof String)) {
            throw new Error("Expected the field `commonCharactersToIgnore` to be a primitive type in the JSON string but got " + data['commonCharactersToIgnore']);
        }

        return true;
    }


}



/**
 * Characters to not transform when masking.
 * @member {String} charactersToSkip
 */
GooglePrivacyDlpV2CharsToIgnore.prototype['charactersToSkip'] = undefined;

/**
 * Common characters to not transform when masking. Useful to avoid removing punctuation.
 * @member {module:model/GooglePrivacyDlpV2CharsToIgnore.CommonCharactersToIgnoreEnum} commonCharactersToIgnore
 */
GooglePrivacyDlpV2CharsToIgnore.prototype['commonCharactersToIgnore'] = undefined;





/**
 * Allowed values for the <code>commonCharactersToIgnore</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2CharsToIgnore['CommonCharactersToIgnoreEnum'] = {

    /**
     * value: "COMMON_CHARS_TO_IGNORE_UNSPECIFIED"
     * @const
     */
    "COMMON_CHARS_TO_IGNORE_UNSPECIFIED": "COMMON_CHARS_TO_IGNORE_UNSPECIFIED",

    /**
     * value: "NUMERIC"
     * @const
     */
    "NUMERIC": "NUMERIC",

    /**
     * value: "ALPHA_UPPER_CASE"
     * @const
     */
    "ALPHA_UPPER_CASE": "ALPHA_UPPER_CASE",

    /**
     * value: "ALPHA_LOWER_CASE"
     * @const
     */
    "ALPHA_LOWER_CASE": "ALPHA_LOWER_CASE",

    /**
     * value: "PUNCTUATION"
     * @const
     */
    "PUNCTUATION": "PUNCTUATION",

    /**
     * value: "WHITESPACE"
     * @const
     */
    "WHITESPACE": "WHITESPACE"
};



export default GooglePrivacyDlpV2CharsToIgnore;

