/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2FieldId from './GooglePrivacyDlpV2FieldId';
import GooglePrivacyDlpV2InfoType from './GooglePrivacyDlpV2InfoType';

/**
 * The GooglePrivacyDlpV2QuasiId model module.
 * @module model/GooglePrivacyDlpV2QuasiId
 * @version v2
 */
class GooglePrivacyDlpV2QuasiId {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2QuasiId</code>.
     * A column with a semantic tag attached.
     * @alias module:model/GooglePrivacyDlpV2QuasiId
     */
    constructor() { 
        
        GooglePrivacyDlpV2QuasiId.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2QuasiId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2QuasiId} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2QuasiId} The populated <code>GooglePrivacyDlpV2QuasiId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2QuasiId();

            if (data.hasOwnProperty('customTag')) {
                obj['customTag'] = ApiClient.convertToType(data['customTag'], 'String');
            }
            if (data.hasOwnProperty('field')) {
                obj['field'] = GooglePrivacyDlpV2FieldId.constructFromObject(data['field']);
            }
            if (data.hasOwnProperty('inferred')) {
                obj['inferred'] = ApiClient.convertToType(data['inferred'], Object);
            }
            if (data.hasOwnProperty('infoType')) {
                obj['infoType'] = GooglePrivacyDlpV2InfoType.constructFromObject(data['infoType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2QuasiId</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2QuasiId</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customTag'] && !(typeof data['customTag'] === 'string' || data['customTag'] instanceof String)) {
            throw new Error("Expected the field `customTag` to be a primitive type in the JSON string but got " + data['customTag']);
        }
        // validate the optional field `field`
        if (data['field']) { // data not null
          GooglePrivacyDlpV2FieldId.validateJSON(data['field']);
        }
        // validate the optional field `infoType`
        if (data['infoType']) { // data not null
          GooglePrivacyDlpV2InfoType.validateJSON(data['infoType']);
        }

        return true;
    }


}



/**
 * A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
 * @member {String} customTag
 */
GooglePrivacyDlpV2QuasiId.prototype['customTag'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2FieldId} field
 */
GooglePrivacyDlpV2QuasiId.prototype['field'] = undefined;

/**
 * A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 * @member {Object} inferred
 */
GooglePrivacyDlpV2QuasiId.prototype['inferred'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2InfoType} infoType
 */
GooglePrivacyDlpV2QuasiId.prototype['infoType'] = undefined;






export default GooglePrivacyDlpV2QuasiId;

