/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2Error from './GooglePrivacyDlpV2Error';
import GooglePrivacyDlpV2InspectJobConfig from './GooglePrivacyDlpV2InspectJobConfig';
import GooglePrivacyDlpV2Trigger from './GooglePrivacyDlpV2Trigger';

/**
 * The GooglePrivacyDlpV2JobTrigger model module.
 * @module model/GooglePrivacyDlpV2JobTrigger
 * @version v2
 */
class GooglePrivacyDlpV2JobTrigger {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2JobTrigger</code>.
     * Contains a configuration to make dlp api calls on a repeating basis. See https://cloud.google.com/sensitive-data-protection/docs/concepts-job-triggers to learn more.
     * @alias module:model/GooglePrivacyDlpV2JobTrigger
     */
    constructor() { 
        
        GooglePrivacyDlpV2JobTrigger.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2JobTrigger</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2JobTrigger} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2JobTrigger} The populated <code>GooglePrivacyDlpV2JobTrigger</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2JobTrigger();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [GooglePrivacyDlpV2Error]);
            }
            if (data.hasOwnProperty('inspectJob')) {
                obj['inspectJob'] = GooglePrivacyDlpV2InspectJobConfig.constructFromObject(data['inspectJob']);
            }
            if (data.hasOwnProperty('lastRunTime')) {
                obj['lastRunTime'] = ApiClient.convertToType(data['lastRunTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('triggers')) {
                obj['triggers'] = ApiClient.convertToType(data['triggers'], [GooglePrivacyDlpV2Trigger]);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2JobTrigger</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2JobTrigger</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                GooglePrivacyDlpV2Error.validateJSON(item);
            };
        }
        // validate the optional field `inspectJob`
        if (data['inspectJob']) { // data not null
          GooglePrivacyDlpV2InspectJobConfig.validateJSON(data['inspectJob']);
        }
        // ensure the json data is a string
        if (data['lastRunTime'] && !(typeof data['lastRunTime'] === 'string' || data['lastRunTime'] instanceof String)) {
            throw new Error("Expected the field `lastRunTime` to be a primitive type in the JSON string but got " + data['lastRunTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        if (data['triggers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['triggers'])) {
                throw new Error("Expected the field `triggers` to be an array in the JSON data but got " + data['triggers']);
            }
            // validate the optional field `triggers` (array)
            for (const item of data['triggers']) {
                GooglePrivacyDlpV2Trigger.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The creation timestamp of a triggeredJob.
 * @member {String} createTime
 */
GooglePrivacyDlpV2JobTrigger.prototype['createTime'] = undefined;

/**
 * User provided description (max 256 chars)
 * @member {String} description
 */
GooglePrivacyDlpV2JobTrigger.prototype['description'] = undefined;

/**
 * Display name (max 100 chars)
 * @member {String} displayName
 */
GooglePrivacyDlpV2JobTrigger.prototype['displayName'] = undefined;

/**
 * Output only. A stream of errors encountered when the trigger was activated. Repeated errors may result in the JobTrigger automatically being paused. Will return the last 100 errors. Whenever the JobTrigger is modified this list will be cleared.
 * @member {Array.<module:model/GooglePrivacyDlpV2Error>} errors
 */
GooglePrivacyDlpV2JobTrigger.prototype['errors'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2InspectJobConfig} inspectJob
 */
GooglePrivacyDlpV2JobTrigger.prototype['inspectJob'] = undefined;

/**
 * Output only. The timestamp of the last time this trigger executed.
 * @member {String} lastRunTime
 */
GooglePrivacyDlpV2JobTrigger.prototype['lastRunTime'] = undefined;

/**
 * Unique resource name for the triggeredJob, assigned by the service when the triggeredJob is created, for example `projects/dlp-test-project/jobTriggers/53234423`.
 * @member {String} name
 */
GooglePrivacyDlpV2JobTrigger.prototype['name'] = undefined;

/**
 * Required. A status for this trigger.
 * @member {module:model/GooglePrivacyDlpV2JobTrigger.StatusEnum} status
 */
GooglePrivacyDlpV2JobTrigger.prototype['status'] = undefined;

/**
 * A list of triggers which will be OR'ed together. Only one in the list needs to trigger for a job to be started. The list may contain only a single Schedule trigger and must have at least one object.
 * @member {Array.<module:model/GooglePrivacyDlpV2Trigger>} triggers
 */
GooglePrivacyDlpV2JobTrigger.prototype['triggers'] = undefined;

/**
 * Output only. The last update timestamp of a triggeredJob.
 * @member {String} updateTime
 */
GooglePrivacyDlpV2JobTrigger.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2JobTrigger['StatusEnum'] = {

    /**
     * value: "STATUS_UNSPECIFIED"
     * @const
     */
    "STATUS_UNSPECIFIED": "STATUS_UNSPECIFIED",

    /**
     * value: "HEALTHY"
     * @const
     */
    "HEALTHY": "HEALTHY",

    /**
     * value: "PAUSED"
     * @const
     */
    "PAUSED": "PAUSED",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED"
};



export default GooglePrivacyDlpV2JobTrigger;

