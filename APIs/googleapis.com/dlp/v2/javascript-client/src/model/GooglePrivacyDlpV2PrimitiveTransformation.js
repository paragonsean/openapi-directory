/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2BucketingConfig from './GooglePrivacyDlpV2BucketingConfig';
import GooglePrivacyDlpV2CharacterMaskConfig from './GooglePrivacyDlpV2CharacterMaskConfig';
import GooglePrivacyDlpV2CryptoDeterministicConfig from './GooglePrivacyDlpV2CryptoDeterministicConfig';
import GooglePrivacyDlpV2CryptoHashConfig from './GooglePrivacyDlpV2CryptoHashConfig';
import GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig from './GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig';
import GooglePrivacyDlpV2DateShiftConfig from './GooglePrivacyDlpV2DateShiftConfig';
import GooglePrivacyDlpV2FixedSizeBucketingConfig from './GooglePrivacyDlpV2FixedSizeBucketingConfig';
import GooglePrivacyDlpV2ReplaceDictionaryConfig from './GooglePrivacyDlpV2ReplaceDictionaryConfig';
import GooglePrivacyDlpV2ReplaceValueConfig from './GooglePrivacyDlpV2ReplaceValueConfig';
import GooglePrivacyDlpV2TimePartConfig from './GooglePrivacyDlpV2TimePartConfig';

/**
 * The GooglePrivacyDlpV2PrimitiveTransformation model module.
 * @module model/GooglePrivacyDlpV2PrimitiveTransformation
 * @version v2
 */
class GooglePrivacyDlpV2PrimitiveTransformation {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2PrimitiveTransformation</code>.
     * A rule for transforming a value.
     * @alias module:model/GooglePrivacyDlpV2PrimitiveTransformation
     */
    constructor() { 
        
        GooglePrivacyDlpV2PrimitiveTransformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2PrimitiveTransformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2PrimitiveTransformation} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2PrimitiveTransformation} The populated <code>GooglePrivacyDlpV2PrimitiveTransformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2PrimitiveTransformation();

            if (data.hasOwnProperty('bucketingConfig')) {
                obj['bucketingConfig'] = GooglePrivacyDlpV2BucketingConfig.constructFromObject(data['bucketingConfig']);
            }
            if (data.hasOwnProperty('characterMaskConfig')) {
                obj['characterMaskConfig'] = GooglePrivacyDlpV2CharacterMaskConfig.constructFromObject(data['characterMaskConfig']);
            }
            if (data.hasOwnProperty('cryptoDeterministicConfig')) {
                obj['cryptoDeterministicConfig'] = GooglePrivacyDlpV2CryptoDeterministicConfig.constructFromObject(data['cryptoDeterministicConfig']);
            }
            if (data.hasOwnProperty('cryptoHashConfig')) {
                obj['cryptoHashConfig'] = GooglePrivacyDlpV2CryptoHashConfig.constructFromObject(data['cryptoHashConfig']);
            }
            if (data.hasOwnProperty('cryptoReplaceFfxFpeConfig')) {
                obj['cryptoReplaceFfxFpeConfig'] = GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig.constructFromObject(data['cryptoReplaceFfxFpeConfig']);
            }
            if (data.hasOwnProperty('dateShiftConfig')) {
                obj['dateShiftConfig'] = GooglePrivacyDlpV2DateShiftConfig.constructFromObject(data['dateShiftConfig']);
            }
            if (data.hasOwnProperty('fixedSizeBucketingConfig')) {
                obj['fixedSizeBucketingConfig'] = GooglePrivacyDlpV2FixedSizeBucketingConfig.constructFromObject(data['fixedSizeBucketingConfig']);
            }
            if (data.hasOwnProperty('redactConfig')) {
                obj['redactConfig'] = ApiClient.convertToType(data['redactConfig'], Object);
            }
            if (data.hasOwnProperty('replaceConfig')) {
                obj['replaceConfig'] = GooglePrivacyDlpV2ReplaceValueConfig.constructFromObject(data['replaceConfig']);
            }
            if (data.hasOwnProperty('replaceDictionaryConfig')) {
                obj['replaceDictionaryConfig'] = GooglePrivacyDlpV2ReplaceDictionaryConfig.constructFromObject(data['replaceDictionaryConfig']);
            }
            if (data.hasOwnProperty('replaceWithInfoTypeConfig')) {
                obj['replaceWithInfoTypeConfig'] = ApiClient.convertToType(data['replaceWithInfoTypeConfig'], Object);
            }
            if (data.hasOwnProperty('timePartConfig')) {
                obj['timePartConfig'] = GooglePrivacyDlpV2TimePartConfig.constructFromObject(data['timePartConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2PrimitiveTransformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2PrimitiveTransformation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bucketingConfig`
        if (data['bucketingConfig']) { // data not null
          GooglePrivacyDlpV2BucketingConfig.validateJSON(data['bucketingConfig']);
        }
        // validate the optional field `characterMaskConfig`
        if (data['characterMaskConfig']) { // data not null
          GooglePrivacyDlpV2CharacterMaskConfig.validateJSON(data['characterMaskConfig']);
        }
        // validate the optional field `cryptoDeterministicConfig`
        if (data['cryptoDeterministicConfig']) { // data not null
          GooglePrivacyDlpV2CryptoDeterministicConfig.validateJSON(data['cryptoDeterministicConfig']);
        }
        // validate the optional field `cryptoHashConfig`
        if (data['cryptoHashConfig']) { // data not null
          GooglePrivacyDlpV2CryptoHashConfig.validateJSON(data['cryptoHashConfig']);
        }
        // validate the optional field `cryptoReplaceFfxFpeConfig`
        if (data['cryptoReplaceFfxFpeConfig']) { // data not null
          GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig.validateJSON(data['cryptoReplaceFfxFpeConfig']);
        }
        // validate the optional field `dateShiftConfig`
        if (data['dateShiftConfig']) { // data not null
          GooglePrivacyDlpV2DateShiftConfig.validateJSON(data['dateShiftConfig']);
        }
        // validate the optional field `fixedSizeBucketingConfig`
        if (data['fixedSizeBucketingConfig']) { // data not null
          GooglePrivacyDlpV2FixedSizeBucketingConfig.validateJSON(data['fixedSizeBucketingConfig']);
        }
        // validate the optional field `replaceConfig`
        if (data['replaceConfig']) { // data not null
          GooglePrivacyDlpV2ReplaceValueConfig.validateJSON(data['replaceConfig']);
        }
        // validate the optional field `replaceDictionaryConfig`
        if (data['replaceDictionaryConfig']) { // data not null
          GooglePrivacyDlpV2ReplaceDictionaryConfig.validateJSON(data['replaceDictionaryConfig']);
        }
        // validate the optional field `timePartConfig`
        if (data['timePartConfig']) { // data not null
          GooglePrivacyDlpV2TimePartConfig.validateJSON(data['timePartConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2BucketingConfig} bucketingConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['bucketingConfig'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2CharacterMaskConfig} characterMaskConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['characterMaskConfig'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2CryptoDeterministicConfig} cryptoDeterministicConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['cryptoDeterministicConfig'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2CryptoHashConfig} cryptoHashConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['cryptoHashConfig'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig} cryptoReplaceFfxFpeConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['cryptoReplaceFfxFpeConfig'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2DateShiftConfig} dateShiftConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['dateShiftConfig'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2FixedSizeBucketingConfig} fixedSizeBucketingConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['fixedSizeBucketingConfig'] = undefined;

/**
 * Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.
 * @member {Object} redactConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['redactConfig'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2ReplaceValueConfig} replaceConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['replaceConfig'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2ReplaceDictionaryConfig} replaceDictionaryConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['replaceDictionaryConfig'] = undefined;

/**
 * Replace each matching finding with the name of the info_type.
 * @member {Object} replaceWithInfoTypeConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['replaceWithInfoTypeConfig'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2TimePartConfig} timePartConfig
 */
GooglePrivacyDlpV2PrimitiveTransformation.prototype['timePartConfig'] = undefined;






export default GooglePrivacyDlpV2PrimitiveTransformation;

