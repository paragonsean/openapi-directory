/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2FieldTransformation from './GooglePrivacyDlpV2FieldTransformation';
import GooglePrivacyDlpV2RecordSuppression from './GooglePrivacyDlpV2RecordSuppression';

/**
 * The GooglePrivacyDlpV2RecordTransformations model module.
 * @module model/GooglePrivacyDlpV2RecordTransformations
 * @version v2
 */
class GooglePrivacyDlpV2RecordTransformations {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2RecordTransformations</code>.
     * A type of transformation that is applied over structured data such as a table.
     * @alias module:model/GooglePrivacyDlpV2RecordTransformations
     */
    constructor() { 
        
        GooglePrivacyDlpV2RecordTransformations.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2RecordTransformations</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2RecordTransformations} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2RecordTransformations} The populated <code>GooglePrivacyDlpV2RecordTransformations</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2RecordTransformations();

            if (data.hasOwnProperty('fieldTransformations')) {
                obj['fieldTransformations'] = ApiClient.convertToType(data['fieldTransformations'], [GooglePrivacyDlpV2FieldTransformation]);
            }
            if (data.hasOwnProperty('recordSuppressions')) {
                obj['recordSuppressions'] = ApiClient.convertToType(data['recordSuppressions'], [GooglePrivacyDlpV2RecordSuppression]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2RecordTransformations</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2RecordTransformations</code>.
     */
    static validateJSON(data) {
        if (data['fieldTransformations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fieldTransformations'])) {
                throw new Error("Expected the field `fieldTransformations` to be an array in the JSON data but got " + data['fieldTransformations']);
            }
            // validate the optional field `fieldTransformations` (array)
            for (const item of data['fieldTransformations']) {
                GooglePrivacyDlpV2FieldTransformation.validateJSON(item);
            };
        }
        if (data['recordSuppressions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recordSuppressions'])) {
                throw new Error("Expected the field `recordSuppressions` to be an array in the JSON data but got " + data['recordSuppressions']);
            }
            // validate the optional field `recordSuppressions` (array)
            for (const item of data['recordSuppressions']) {
                GooglePrivacyDlpV2RecordSuppression.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Transform the record by applying various field transformations.
 * @member {Array.<module:model/GooglePrivacyDlpV2FieldTransformation>} fieldTransformations
 */
GooglePrivacyDlpV2RecordTransformations.prototype['fieldTransformations'] = undefined;

/**
 * Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
 * @member {Array.<module:model/GooglePrivacyDlpV2RecordSuppression>} recordSuppressions
 */
GooglePrivacyDlpV2RecordTransformations.prototype['recordSuppressions'] = undefined;






export default GooglePrivacyDlpV2RecordTransformations;

