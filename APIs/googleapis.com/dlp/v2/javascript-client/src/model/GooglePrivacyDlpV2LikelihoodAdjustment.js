/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GooglePrivacyDlpV2LikelihoodAdjustment model module.
 * @module model/GooglePrivacyDlpV2LikelihoodAdjustment
 * @version v2
 */
class GooglePrivacyDlpV2LikelihoodAdjustment {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2LikelihoodAdjustment</code>.
     * Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
     * @alias module:model/GooglePrivacyDlpV2LikelihoodAdjustment
     */
    constructor() { 
        
        GooglePrivacyDlpV2LikelihoodAdjustment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2LikelihoodAdjustment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2LikelihoodAdjustment} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2LikelihoodAdjustment} The populated <code>GooglePrivacyDlpV2LikelihoodAdjustment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2LikelihoodAdjustment();

            if (data.hasOwnProperty('fixedLikelihood')) {
                obj['fixedLikelihood'] = ApiClient.convertToType(data['fixedLikelihood'], 'String');
            }
            if (data.hasOwnProperty('relativeLikelihood')) {
                obj['relativeLikelihood'] = ApiClient.convertToType(data['relativeLikelihood'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2LikelihoodAdjustment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2LikelihoodAdjustment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fixedLikelihood'] && !(typeof data['fixedLikelihood'] === 'string' || data['fixedLikelihood'] instanceof String)) {
            throw new Error("Expected the field `fixedLikelihood` to be a primitive type in the JSON string but got " + data['fixedLikelihood']);
        }

        return true;
    }


}



/**
 * Set the likelihood of a finding to a fixed value.
 * @member {module:model/GooglePrivacyDlpV2LikelihoodAdjustment.FixedLikelihoodEnum} fixedLikelihood
 */
GooglePrivacyDlpV2LikelihoodAdjustment.prototype['fixedLikelihood'] = undefined;

/**
 * Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
 * @member {Number} relativeLikelihood
 */
GooglePrivacyDlpV2LikelihoodAdjustment.prototype['relativeLikelihood'] = undefined;





/**
 * Allowed values for the <code>fixedLikelihood</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2LikelihoodAdjustment['FixedLikelihoodEnum'] = {

    /**
     * value: "LIKELIHOOD_UNSPECIFIED"
     * @const
     */
    "LIKELIHOOD_UNSPECIFIED": "LIKELIHOOD_UNSPECIFIED",

    /**
     * value: "VERY_UNLIKELY"
     * @const
     */
    "VERY_UNLIKELY": "VERY_UNLIKELY",

    /**
     * value: "UNLIKELY"
     * @const
     */
    "UNLIKELY": "UNLIKELY",

    /**
     * value: "POSSIBLE"
     * @const
     */
    "POSSIBLE": "POSSIBLE",

    /**
     * value: "LIKELY"
     * @const
     */
    "LIKELY": "LIKELY",

    /**
     * value: "VERY_LIKELY"
     * @const
     */
    "VERY_LIKELY": "VERY_LIKELY"
};



export default GooglePrivacyDlpV2LikelihoodAdjustment;

