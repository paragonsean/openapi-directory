/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2ByteContentItem from './GooglePrivacyDlpV2ByteContentItem';
import GooglePrivacyDlpV2ImageRedactionConfig from './GooglePrivacyDlpV2ImageRedactionConfig';
import GooglePrivacyDlpV2InspectConfig from './GooglePrivacyDlpV2InspectConfig';

/**
 * The GooglePrivacyDlpV2RedactImageRequest model module.
 * @module model/GooglePrivacyDlpV2RedactImageRequest
 * @version v2
 */
class GooglePrivacyDlpV2RedactImageRequest {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2RedactImageRequest</code>.
     * Request to search for potentially sensitive info in an image and redact it by covering it with a colored rectangle.
     * @alias module:model/GooglePrivacyDlpV2RedactImageRequest
     */
    constructor() { 
        
        GooglePrivacyDlpV2RedactImageRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2RedactImageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2RedactImageRequest} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2RedactImageRequest} The populated <code>GooglePrivacyDlpV2RedactImageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2RedactImageRequest();

            if (data.hasOwnProperty('byteItem')) {
                obj['byteItem'] = GooglePrivacyDlpV2ByteContentItem.constructFromObject(data['byteItem']);
            }
            if (data.hasOwnProperty('imageRedactionConfigs')) {
                obj['imageRedactionConfigs'] = ApiClient.convertToType(data['imageRedactionConfigs'], [GooglePrivacyDlpV2ImageRedactionConfig]);
            }
            if (data.hasOwnProperty('includeFindings')) {
                obj['includeFindings'] = ApiClient.convertToType(data['includeFindings'], 'Boolean');
            }
            if (data.hasOwnProperty('inspectConfig')) {
                obj['inspectConfig'] = GooglePrivacyDlpV2InspectConfig.constructFromObject(data['inspectConfig']);
            }
            if (data.hasOwnProperty('locationId')) {
                obj['locationId'] = ApiClient.convertToType(data['locationId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2RedactImageRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2RedactImageRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `byteItem`
        if (data['byteItem']) { // data not null
          GooglePrivacyDlpV2ByteContentItem.validateJSON(data['byteItem']);
        }
        if (data['imageRedactionConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['imageRedactionConfigs'])) {
                throw new Error("Expected the field `imageRedactionConfigs` to be an array in the JSON data but got " + data['imageRedactionConfigs']);
            }
            // validate the optional field `imageRedactionConfigs` (array)
            for (const item of data['imageRedactionConfigs']) {
                GooglePrivacyDlpV2ImageRedactionConfig.validateJSON(item);
            };
        }
        // validate the optional field `inspectConfig`
        if (data['inspectConfig']) { // data not null
          GooglePrivacyDlpV2InspectConfig.validateJSON(data['inspectConfig']);
        }
        // ensure the json data is a string
        if (data['locationId'] && !(typeof data['locationId'] === 'string' || data['locationId'] instanceof String)) {
            throw new Error("Expected the field `locationId` to be a primitive type in the JSON string but got " + data['locationId']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2ByteContentItem} byteItem
 */
GooglePrivacyDlpV2RedactImageRequest.prototype['byteItem'] = undefined;

/**
 * The configuration for specifying what content to redact from images.
 * @member {Array.<module:model/GooglePrivacyDlpV2ImageRedactionConfig>} imageRedactionConfigs
 */
GooglePrivacyDlpV2RedactImageRequest.prototype['imageRedactionConfigs'] = undefined;

/**
 * Whether the response should include findings along with the redacted image.
 * @member {Boolean} includeFindings
 */
GooglePrivacyDlpV2RedactImageRequest.prototype['includeFindings'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2InspectConfig} inspectConfig
 */
GooglePrivacyDlpV2RedactImageRequest.prototype['inspectConfig'] = undefined;

/**
 * Deprecated. This field has no effect.
 * @member {String} locationId
 */
GooglePrivacyDlpV2RedactImageRequest.prototype['locationId'] = undefined;






export default GooglePrivacyDlpV2RedactImageRequest;

