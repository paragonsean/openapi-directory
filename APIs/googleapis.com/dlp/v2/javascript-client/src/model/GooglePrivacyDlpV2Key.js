/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2PartitionId from './GooglePrivacyDlpV2PartitionId';
import GooglePrivacyDlpV2PathElement from './GooglePrivacyDlpV2PathElement';

/**
 * The GooglePrivacyDlpV2Key model module.
 * @module model/GooglePrivacyDlpV2Key
 * @version v2
 */
class GooglePrivacyDlpV2Key {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2Key</code>.
     * A unique identifier for a Datastore entity. If a key&#39;s partition ID or any of its path kinds or names are reserved/read-only, the key is reserved/read-only. A reserved/read-only key is forbidden in certain documented contexts.
     * @alias module:model/GooglePrivacyDlpV2Key
     */
    constructor() { 
        
        GooglePrivacyDlpV2Key.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2Key</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2Key} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2Key} The populated <code>GooglePrivacyDlpV2Key</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2Key();

            if (data.hasOwnProperty('partitionId')) {
                obj['partitionId'] = GooglePrivacyDlpV2PartitionId.constructFromObject(data['partitionId']);
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], [GooglePrivacyDlpV2PathElement]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2Key</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2Key</code>.
     */
    static validateJSON(data) {
        // validate the optional field `partitionId`
        if (data['partitionId']) { // data not null
          GooglePrivacyDlpV2PartitionId.validateJSON(data['partitionId']);
        }
        if (data['path']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['path'])) {
                throw new Error("Expected the field `path` to be an array in the JSON data but got " + data['path']);
            }
            // validate the optional field `path` (array)
            for (const item of data['path']) {
                GooglePrivacyDlpV2PathElement.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2PartitionId} partitionId
 */
GooglePrivacyDlpV2Key.prototype['partitionId'] = undefined;

/**
 * The entity path. An entity path consists of one or more elements composed of a kind and a string or numerical identifier, which identify entities. The first element identifies a _root entity_, the second element identifies a _child_ of the root entity, the third element identifies a child of the second entity, and so forth. The entities identified by all prefixes of the path are called the element's _ancestors_. A path can never be empty, and a path can have at most 100 elements.
 * @member {Array.<module:model/GooglePrivacyDlpV2PathElement>} path
 */
GooglePrivacyDlpV2Key.prototype['path'] = undefined;






export default GooglePrivacyDlpV2Key;

