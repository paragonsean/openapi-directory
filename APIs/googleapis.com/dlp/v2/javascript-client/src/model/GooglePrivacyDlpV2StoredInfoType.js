/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2StoredInfoTypeVersion from './GooglePrivacyDlpV2StoredInfoTypeVersion';

/**
 * The GooglePrivacyDlpV2StoredInfoType model module.
 * @module model/GooglePrivacyDlpV2StoredInfoType
 * @version v2
 */
class GooglePrivacyDlpV2StoredInfoType {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2StoredInfoType</code>.
     * StoredInfoType resource message that contains information about the current version and any pending updates.
     * @alias module:model/GooglePrivacyDlpV2StoredInfoType
     */
    constructor() { 
        
        GooglePrivacyDlpV2StoredInfoType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2StoredInfoType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2StoredInfoType} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2StoredInfoType} The populated <code>GooglePrivacyDlpV2StoredInfoType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2StoredInfoType();

            if (data.hasOwnProperty('currentVersion')) {
                obj['currentVersion'] = GooglePrivacyDlpV2StoredInfoTypeVersion.constructFromObject(data['currentVersion']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pendingVersions')) {
                obj['pendingVersions'] = ApiClient.convertToType(data['pendingVersions'], [GooglePrivacyDlpV2StoredInfoTypeVersion]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2StoredInfoType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2StoredInfoType</code>.
     */
    static validateJSON(data) {
        // validate the optional field `currentVersion`
        if (data['currentVersion']) { // data not null
          GooglePrivacyDlpV2StoredInfoTypeVersion.validateJSON(data['currentVersion']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['pendingVersions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['pendingVersions'])) {
                throw new Error("Expected the field `pendingVersions` to be an array in the JSON data but got " + data['pendingVersions']);
            }
            // validate the optional field `pendingVersions` (array)
            for (const item of data['pendingVersions']) {
                GooglePrivacyDlpV2StoredInfoTypeVersion.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2StoredInfoTypeVersion} currentVersion
 */
GooglePrivacyDlpV2StoredInfoType.prototype['currentVersion'] = undefined;

/**
 * Resource name.
 * @member {String} name
 */
GooglePrivacyDlpV2StoredInfoType.prototype['name'] = undefined;

/**
 * Pending versions of the stored info type. Empty if no versions are pending.
 * @member {Array.<module:model/GooglePrivacyDlpV2StoredInfoTypeVersion>} pendingVersions
 */
GooglePrivacyDlpV2StoredInfoType.prototype['pendingVersions'] = undefined;






export default GooglePrivacyDlpV2StoredInfoType;

