/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2Container from './GooglePrivacyDlpV2Container';
import GooglePrivacyDlpV2TableOptions from './GooglePrivacyDlpV2TableOptions';

/**
 * The GooglePrivacyDlpV2HybridFindingDetails model module.
 * @module model/GooglePrivacyDlpV2HybridFindingDetails
 * @version v2
 */
class GooglePrivacyDlpV2HybridFindingDetails {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2HybridFindingDetails</code>.
     * Populate to associate additional data with each finding.
     * @alias module:model/GooglePrivacyDlpV2HybridFindingDetails
     */
    constructor() { 
        
        GooglePrivacyDlpV2HybridFindingDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2HybridFindingDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2HybridFindingDetails} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2HybridFindingDetails} The populated <code>GooglePrivacyDlpV2HybridFindingDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2HybridFindingDetails();

            if (data.hasOwnProperty('containerDetails')) {
                obj['containerDetails'] = GooglePrivacyDlpV2Container.constructFromObject(data['containerDetails']);
            }
            if (data.hasOwnProperty('fileOffset')) {
                obj['fileOffset'] = ApiClient.convertToType(data['fileOffset'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('rowOffset')) {
                obj['rowOffset'] = ApiClient.convertToType(data['rowOffset'], 'String');
            }
            if (data.hasOwnProperty('tableOptions')) {
                obj['tableOptions'] = GooglePrivacyDlpV2TableOptions.constructFromObject(data['tableOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2HybridFindingDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2HybridFindingDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `containerDetails`
        if (data['containerDetails']) { // data not null
          GooglePrivacyDlpV2Container.validateJSON(data['containerDetails']);
        }
        // ensure the json data is a string
        if (data['fileOffset'] && !(typeof data['fileOffset'] === 'string' || data['fileOffset'] instanceof String)) {
            throw new Error("Expected the field `fileOffset` to be a primitive type in the JSON string but got " + data['fileOffset']);
        }
        // ensure the json data is a string
        if (data['rowOffset'] && !(typeof data['rowOffset'] === 'string' || data['rowOffset'] instanceof String)) {
            throw new Error("Expected the field `rowOffset` to be a primitive type in the JSON string but got " + data['rowOffset']);
        }
        // validate the optional field `tableOptions`
        if (data['tableOptions']) { // data not null
          GooglePrivacyDlpV2TableOptions.validateJSON(data['tableOptions']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2Container} containerDetails
 */
GooglePrivacyDlpV2HybridFindingDetails.prototype['containerDetails'] = undefined;

/**
 * Offset in bytes of the line, from the beginning of the file, where the finding is located. Populate if the item being scanned is only part of a bigger item, such as a shard of a file and you want to track the absolute position of the finding.
 * @member {String} fileOffset
 */
GooglePrivacyDlpV2HybridFindingDetails.prototype['fileOffset'] = undefined;

/**
 * Labels to represent user provided metadata about the data being inspected. If configured by the job, some key values may be required. The labels associated with `Finding`'s produced by hybrid inspection. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`
 * @member {Object.<String, String>} labels
 */
GooglePrivacyDlpV2HybridFindingDetails.prototype['labels'] = undefined;

/**
 * Offset of the row for tables. Populate if the row(s) being scanned are part of a bigger dataset and you want to keep track of their absolute position.
 * @member {String} rowOffset
 */
GooglePrivacyDlpV2HybridFindingDetails.prototype['rowOffset'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2TableOptions} tableOptions
 */
GooglePrivacyDlpV2HybridFindingDetails.prototype['tableOptions'] = undefined;






export default GooglePrivacyDlpV2HybridFindingDetails;

