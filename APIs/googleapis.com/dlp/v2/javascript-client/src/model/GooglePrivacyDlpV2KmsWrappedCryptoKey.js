/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GooglePrivacyDlpV2KmsWrappedCryptoKey model module.
 * @module model/GooglePrivacyDlpV2KmsWrappedCryptoKey
 * @version v2
 */
class GooglePrivacyDlpV2KmsWrappedCryptoKey {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2KmsWrappedCryptoKey</code>.
     * Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/sensitive-data-protection/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
     * @alias module:model/GooglePrivacyDlpV2KmsWrappedCryptoKey
     */
    constructor() { 
        
        GooglePrivacyDlpV2KmsWrappedCryptoKey.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2KmsWrappedCryptoKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2KmsWrappedCryptoKey} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2KmsWrappedCryptoKey} The populated <code>GooglePrivacyDlpV2KmsWrappedCryptoKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2KmsWrappedCryptoKey();

            if (data.hasOwnProperty('cryptoKeyName')) {
                obj['cryptoKeyName'] = ApiClient.convertToType(data['cryptoKeyName'], 'String');
            }
            if (data.hasOwnProperty('wrappedKey')) {
                obj['wrappedKey'] = ApiClient.convertToType(data['wrappedKey'], 'Blob');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2KmsWrappedCryptoKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2KmsWrappedCryptoKey</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cryptoKeyName'] && !(typeof data['cryptoKeyName'] === 'string' || data['cryptoKeyName'] instanceof String)) {
            throw new Error("Expected the field `cryptoKeyName` to be a primitive type in the JSON string but got " + data['cryptoKeyName']);
        }

        return true;
    }


}



/**
 * Required. The resource name of the KMS CryptoKey to use for unwrapping.
 * @member {String} cryptoKeyName
 */
GooglePrivacyDlpV2KmsWrappedCryptoKey.prototype['cryptoKeyName'] = undefined;

/**
 * Required. The wrapped data crypto key.
 * @member {Blob} wrappedKey
 */
GooglePrivacyDlpV2KmsWrappedCryptoKey.prototype['wrappedKey'] = undefined;






export default GooglePrivacyDlpV2KmsWrappedCryptoKey;

