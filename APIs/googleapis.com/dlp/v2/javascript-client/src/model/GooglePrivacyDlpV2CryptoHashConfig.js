/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2CryptoKey from './GooglePrivacyDlpV2CryptoKey';

/**
 * The GooglePrivacyDlpV2CryptoHashConfig model module.
 * @module model/GooglePrivacyDlpV2CryptoHashConfig
 * @version v2
 */
class GooglePrivacyDlpV2CryptoHashConfig {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2CryptoHashConfig</code>.
     * Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM&#x3D;). Currently, only string and integer values can be hashed. See https://cloud.google.com/sensitive-data-protection/docs/pseudonymization to learn more.
     * @alias module:model/GooglePrivacyDlpV2CryptoHashConfig
     */
    constructor() { 
        
        GooglePrivacyDlpV2CryptoHashConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2CryptoHashConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2CryptoHashConfig} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2CryptoHashConfig} The populated <code>GooglePrivacyDlpV2CryptoHashConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2CryptoHashConfig();

            if (data.hasOwnProperty('cryptoKey')) {
                obj['cryptoKey'] = GooglePrivacyDlpV2CryptoKey.constructFromObject(data['cryptoKey']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2CryptoHashConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2CryptoHashConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cryptoKey`
        if (data['cryptoKey']) { // data not null
          GooglePrivacyDlpV2CryptoKey.validateJSON(data['cryptoKey']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2CryptoKey} cryptoKey
 */
GooglePrivacyDlpV2CryptoHashConfig.prototype['cryptoKey'] = undefined;






export default GooglePrivacyDlpV2CryptoHashConfig;

