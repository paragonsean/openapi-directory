/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2QuasiId from './GooglePrivacyDlpV2QuasiId';
import GooglePrivacyDlpV2StatisticalTable from './GooglePrivacyDlpV2StatisticalTable';

/**
 * The GooglePrivacyDlpV2DeltaPresenceEstimationConfig model module.
 * @module model/GooglePrivacyDlpV2DeltaPresenceEstimationConfig
 * @version v2
 */
class GooglePrivacyDlpV2DeltaPresenceEstimationConfig {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2DeltaPresenceEstimationConfig</code>.
     * δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.
     * @alias module:model/GooglePrivacyDlpV2DeltaPresenceEstimationConfig
     */
    constructor() { 
        
        GooglePrivacyDlpV2DeltaPresenceEstimationConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2DeltaPresenceEstimationConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2DeltaPresenceEstimationConfig} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2DeltaPresenceEstimationConfig} The populated <code>GooglePrivacyDlpV2DeltaPresenceEstimationConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2DeltaPresenceEstimationConfig();

            if (data.hasOwnProperty('auxiliaryTables')) {
                obj['auxiliaryTables'] = ApiClient.convertToType(data['auxiliaryTables'], [GooglePrivacyDlpV2StatisticalTable]);
            }
            if (data.hasOwnProperty('quasiIds')) {
                obj['quasiIds'] = ApiClient.convertToType(data['quasiIds'], [GooglePrivacyDlpV2QuasiId]);
            }
            if (data.hasOwnProperty('regionCode')) {
                obj['regionCode'] = ApiClient.convertToType(data['regionCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2DeltaPresenceEstimationConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2DeltaPresenceEstimationConfig</code>.
     */
    static validateJSON(data) {
        if (data['auxiliaryTables']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['auxiliaryTables'])) {
                throw new Error("Expected the field `auxiliaryTables` to be an array in the JSON data but got " + data['auxiliaryTables']);
            }
            // validate the optional field `auxiliaryTables` (array)
            for (const item of data['auxiliaryTables']) {
                GooglePrivacyDlpV2StatisticalTable.validateJSON(item);
            };
        }
        if (data['quasiIds']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['quasiIds'])) {
                throw new Error("Expected the field `quasiIds` to be an array in the JSON data but got " + data['quasiIds']);
            }
            // validate the optional field `quasiIds` (array)
            for (const item of data['quasiIds']) {
                GooglePrivacyDlpV2QuasiId.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['regionCode'] && !(typeof data['regionCode'] === 'string' || data['regionCode'] instanceof String)) {
            throw new Error("Expected the field `regionCode` to be a primitive type in the JSON string but got " + data['regionCode']);
        }

        return true;
    }


}



/**
 * Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
 * @member {Array.<module:model/GooglePrivacyDlpV2StatisticalTable>} auxiliaryTables
 */
GooglePrivacyDlpV2DeltaPresenceEstimationConfig.prototype['auxiliaryTables'] = undefined;

/**
 * Required. Fields considered to be quasi-identifiers. No two fields can have the same tag.
 * @member {Array.<module:model/GooglePrivacyDlpV2QuasiId>} quasiIds
 */
GooglePrivacyDlpV2DeltaPresenceEstimationConfig.prototype['quasiIds'] = undefined;

/**
 * ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
 * @member {String} regionCode
 */
GooglePrivacyDlpV2DeltaPresenceEstimationConfig.prototype['regionCode'] = undefined;






export default GooglePrivacyDlpV2DeltaPresenceEstimationConfig;

