/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2FieldId from './GooglePrivacyDlpV2FieldId';

/**
 * The GooglePrivacyDlpV2LDiversityConfig model module.
 * @module model/GooglePrivacyDlpV2LDiversityConfig
 * @version v2
 */
class GooglePrivacyDlpV2LDiversityConfig {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2LDiversityConfig</code>.
     * l-diversity metric, used for analysis of reidentification risk.
     * @alias module:model/GooglePrivacyDlpV2LDiversityConfig
     */
    constructor() { 
        
        GooglePrivacyDlpV2LDiversityConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2LDiversityConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2LDiversityConfig} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2LDiversityConfig} The populated <code>GooglePrivacyDlpV2LDiversityConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2LDiversityConfig();

            if (data.hasOwnProperty('quasiIds')) {
                obj['quasiIds'] = ApiClient.convertToType(data['quasiIds'], [GooglePrivacyDlpV2FieldId]);
            }
            if (data.hasOwnProperty('sensitiveAttribute')) {
                obj['sensitiveAttribute'] = GooglePrivacyDlpV2FieldId.constructFromObject(data['sensitiveAttribute']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2LDiversityConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2LDiversityConfig</code>.
     */
    static validateJSON(data) {
        if (data['quasiIds']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['quasiIds'])) {
                throw new Error("Expected the field `quasiIds` to be an array in the JSON data but got " + data['quasiIds']);
            }
            // validate the optional field `quasiIds` (array)
            for (const item of data['quasiIds']) {
                GooglePrivacyDlpV2FieldId.validateJSON(item);
            };
        }
        // validate the optional field `sensitiveAttribute`
        if (data['sensitiveAttribute']) { // data not null
          GooglePrivacyDlpV2FieldId.validateJSON(data['sensitiveAttribute']);
        }

        return true;
    }


}



/**
 * Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
 * @member {Array.<module:model/GooglePrivacyDlpV2FieldId>} quasiIds
 */
GooglePrivacyDlpV2LDiversityConfig.prototype['quasiIds'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2FieldId} sensitiveAttribute
 */
GooglePrivacyDlpV2LDiversityConfig.prototype['sensitiveAttribute'] = undefined;






export default GooglePrivacyDlpV2LDiversityConfig;

