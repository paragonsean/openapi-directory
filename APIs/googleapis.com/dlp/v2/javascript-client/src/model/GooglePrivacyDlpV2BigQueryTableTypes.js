/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GooglePrivacyDlpV2BigQueryTableTypes model module.
 * @module model/GooglePrivacyDlpV2BigQueryTableTypes
 * @version v2
 */
class GooglePrivacyDlpV2BigQueryTableTypes {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2BigQueryTableTypes</code>.
     * The types of BigQuery tables supported by Cloud DLP.
     * @alias module:model/GooglePrivacyDlpV2BigQueryTableTypes
     */
    constructor() { 
        
        GooglePrivacyDlpV2BigQueryTableTypes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2BigQueryTableTypes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2BigQueryTableTypes} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2BigQueryTableTypes} The populated <code>GooglePrivacyDlpV2BigQueryTableTypes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2BigQueryTableTypes();

            if (data.hasOwnProperty('types')) {
                obj['types'] = ApiClient.convertToType(data['types'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2BigQueryTableTypes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2BigQueryTableTypes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['types'])) {
            throw new Error("Expected the field `types` to be an array in the JSON data but got " + data['types']);
        }

        return true;
    }


}



/**
 * A set of BigQuery table types.
 * @member {Array.<module:model/GooglePrivacyDlpV2BigQueryTableTypes.TypesEnum>} types
 */
GooglePrivacyDlpV2BigQueryTableTypes.prototype['types'] = undefined;





/**
 * Allowed values for the <code>types</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2BigQueryTableTypes['TypesEnum'] = {

    /**
     * value: "BIG_QUERY_TABLE_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "BIG_QUERY_TABLE_TYPE_UNSPECIFIED",

    /**
     * value: "BIG_QUERY_TABLE_TYPE_TABLE"
     * @const
     */
    "TABLE": "BIG_QUERY_TABLE_TYPE_TABLE",

    /**
     * value: "BIG_QUERY_TABLE_TYPE_EXTERNAL_BIG_LAKE"
     * @const
     */
    "EXTERNAL_BIG_LAKE": "BIG_QUERY_TABLE_TYPE_EXTERNAL_BIG_LAKE"
};



export default GooglePrivacyDlpV2BigQueryTableTypes;

