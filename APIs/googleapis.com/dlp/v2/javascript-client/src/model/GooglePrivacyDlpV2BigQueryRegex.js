/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GooglePrivacyDlpV2BigQueryRegex model module.
 * @module model/GooglePrivacyDlpV2BigQueryRegex
 * @version v2
 */
class GooglePrivacyDlpV2BigQueryRegex {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2BigQueryRegex</code>.
     * A pattern to match against one or more tables, datasets, or projects that contain BigQuery tables. At least one pattern must be specified. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
     * @alias module:model/GooglePrivacyDlpV2BigQueryRegex
     */
    constructor() { 
        
        GooglePrivacyDlpV2BigQueryRegex.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2BigQueryRegex</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2BigQueryRegex} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2BigQueryRegex} The populated <code>GooglePrivacyDlpV2BigQueryRegex</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2BigQueryRegex();

            if (data.hasOwnProperty('datasetIdRegex')) {
                obj['datasetIdRegex'] = ApiClient.convertToType(data['datasetIdRegex'], 'String');
            }
            if (data.hasOwnProperty('projectIdRegex')) {
                obj['projectIdRegex'] = ApiClient.convertToType(data['projectIdRegex'], 'String');
            }
            if (data.hasOwnProperty('tableIdRegex')) {
                obj['tableIdRegex'] = ApiClient.convertToType(data['tableIdRegex'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2BigQueryRegex</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2BigQueryRegex</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['datasetIdRegex'] && !(typeof data['datasetIdRegex'] === 'string' || data['datasetIdRegex'] instanceof String)) {
            throw new Error("Expected the field `datasetIdRegex` to be a primitive type in the JSON string but got " + data['datasetIdRegex']);
        }
        // ensure the json data is a string
        if (data['projectIdRegex'] && !(typeof data['projectIdRegex'] === 'string' || data['projectIdRegex'] instanceof String)) {
            throw new Error("Expected the field `projectIdRegex` to be a primitive type in the JSON string but got " + data['projectIdRegex']);
        }
        // ensure the json data is a string
        if (data['tableIdRegex'] && !(typeof data['tableIdRegex'] === 'string' || data['tableIdRegex'] instanceof String)) {
            throw new Error("Expected the field `tableIdRegex` to be a primitive type in the JSON string but got " + data['tableIdRegex']);
        }

        return true;
    }


}



/**
 * If unset, this property matches all datasets.
 * @member {String} datasetIdRegex
 */
GooglePrivacyDlpV2BigQueryRegex.prototype['datasetIdRegex'] = undefined;

/**
 * For organizations, if unset, will match all projects. Has no effect for data profile configurations created within a project.
 * @member {String} projectIdRegex
 */
GooglePrivacyDlpV2BigQueryRegex.prototype['projectIdRegex'] = undefined;

/**
 * If unset, this property matches all tables.
 * @member {String} tableIdRegex
 */
GooglePrivacyDlpV2BigQueryRegex.prototype['tableIdRegex'] = undefined;






export default GooglePrivacyDlpV2BigQueryRegex;

