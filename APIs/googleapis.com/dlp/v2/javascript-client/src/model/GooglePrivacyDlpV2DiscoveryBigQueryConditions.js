/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2BigQueryTableTypes from './GooglePrivacyDlpV2BigQueryTableTypes';
import GooglePrivacyDlpV2OrConditions from './GooglePrivacyDlpV2OrConditions';

/**
 * The GooglePrivacyDlpV2DiscoveryBigQueryConditions model module.
 * @module model/GooglePrivacyDlpV2DiscoveryBigQueryConditions
 * @version v2
 */
class GooglePrivacyDlpV2DiscoveryBigQueryConditions {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2DiscoveryBigQueryConditions</code>.
     * Requirements that must be true before a table is scanned in discovery for the first time. There is an AND relationship between the top-level attributes. Additionally, minimum conditions with an OR relationship that must be met before Cloud DLP scans a table can be set (like a minimum row count or a minimum table age).
     * @alias module:model/GooglePrivacyDlpV2DiscoveryBigQueryConditions
     */
    constructor() { 
        
        GooglePrivacyDlpV2DiscoveryBigQueryConditions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2DiscoveryBigQueryConditions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2DiscoveryBigQueryConditions} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2DiscoveryBigQueryConditions} The populated <code>GooglePrivacyDlpV2DiscoveryBigQueryConditions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2DiscoveryBigQueryConditions();

            if (data.hasOwnProperty('createdAfter')) {
                obj['createdAfter'] = ApiClient.convertToType(data['createdAfter'], 'String');
            }
            if (data.hasOwnProperty('orConditions')) {
                obj['orConditions'] = GooglePrivacyDlpV2OrConditions.constructFromObject(data['orConditions']);
            }
            if (data.hasOwnProperty('typeCollection')) {
                obj['typeCollection'] = ApiClient.convertToType(data['typeCollection'], 'String');
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = GooglePrivacyDlpV2BigQueryTableTypes.constructFromObject(data['types']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2DiscoveryBigQueryConditions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2DiscoveryBigQueryConditions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createdAfter'] && !(typeof data['createdAfter'] === 'string' || data['createdAfter'] instanceof String)) {
            throw new Error("Expected the field `createdAfter` to be a primitive type in the JSON string but got " + data['createdAfter']);
        }
        // validate the optional field `orConditions`
        if (data['orConditions']) { // data not null
          GooglePrivacyDlpV2OrConditions.validateJSON(data['orConditions']);
        }
        // ensure the json data is a string
        if (data['typeCollection'] && !(typeof data['typeCollection'] === 'string' || data['typeCollection'] instanceof String)) {
            throw new Error("Expected the field `typeCollection` to be a primitive type in the JSON string but got " + data['typeCollection']);
        }
        // validate the optional field `types`
        if (data['types']) { // data not null
          GooglePrivacyDlpV2BigQueryTableTypes.validateJSON(data['types']);
        }

        return true;
    }


}



/**
 * BigQuery table must have been created after this date. Used to avoid backfilling.
 * @member {String} createdAfter
 */
GooglePrivacyDlpV2DiscoveryBigQueryConditions.prototype['createdAfter'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2OrConditions} orConditions
 */
GooglePrivacyDlpV2DiscoveryBigQueryConditions.prototype['orConditions'] = undefined;

/**
 * Restrict discovery to categories of table types.
 * @member {module:model/GooglePrivacyDlpV2DiscoveryBigQueryConditions.TypeCollectionEnum} typeCollection
 */
GooglePrivacyDlpV2DiscoveryBigQueryConditions.prototype['typeCollection'] = undefined;

/**
 * @member {module:model/GooglePrivacyDlpV2BigQueryTableTypes} types
 */
GooglePrivacyDlpV2DiscoveryBigQueryConditions.prototype['types'] = undefined;





/**
 * Allowed values for the <code>typeCollection</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2DiscoveryBigQueryConditions['TypeCollectionEnum'] = {

    /**
     * value: "BIG_QUERY_COLLECTION_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "BIG_QUERY_COLLECTION_UNSPECIFIED",

    /**
     * value: "BIG_QUERY_COLLECTION_ALL_TYPES"
     * @const
     */
    "ALL_TYPES": "BIG_QUERY_COLLECTION_ALL_TYPES",

    /**
     * value: "BIG_QUERY_COLLECTION_ONLY_SUPPORTED_TYPES"
     * @const
     */
    "ONLY_SUPPORTED_TYPES": "BIG_QUERY_COLLECTION_ONLY_SUPPORTED_TYPES"
};



export default GooglePrivacyDlpV2DiscoveryBigQueryConditions;

