/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePrivacyDlpV2StorageMetadataLabel from './GooglePrivacyDlpV2StorageMetadataLabel';

/**
 * The GooglePrivacyDlpV2MetadataLocation model module.
 * @module model/GooglePrivacyDlpV2MetadataLocation
 * @version v2
 */
class GooglePrivacyDlpV2MetadataLocation {
    /**
     * Constructs a new <code>GooglePrivacyDlpV2MetadataLocation</code>.
     * Metadata Location
     * @alias module:model/GooglePrivacyDlpV2MetadataLocation
     */
    constructor() { 
        
        GooglePrivacyDlpV2MetadataLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePrivacyDlpV2MetadataLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePrivacyDlpV2MetadataLocation} obj Optional instance to populate.
     * @return {module:model/GooglePrivacyDlpV2MetadataLocation} The populated <code>GooglePrivacyDlpV2MetadataLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePrivacyDlpV2MetadataLocation();

            if (data.hasOwnProperty('storageLabel')) {
                obj['storageLabel'] = GooglePrivacyDlpV2StorageMetadataLabel.constructFromObject(data['storageLabel']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePrivacyDlpV2MetadataLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePrivacyDlpV2MetadataLocation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `storageLabel`
        if (data['storageLabel']) { // data not null
          GooglePrivacyDlpV2StorageMetadataLabel.validateJSON(data['storageLabel']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePrivacyDlpV2StorageMetadataLabel} storageLabel
 */
GooglePrivacyDlpV2MetadataLocation.prototype['storageLabel'] = undefined;

/**
 * Type of metadata containing the finding.
 * @member {module:model/GooglePrivacyDlpV2MetadataLocation.TypeEnum} type
 */
GooglePrivacyDlpV2MetadataLocation.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GooglePrivacyDlpV2MetadataLocation['TypeEnum'] = {

    /**
     * value: "METADATATYPE_UNSPECIFIED"
     * @const
     */
    "METADATATYPE_UNSPECIFIED": "METADATATYPE_UNSPECIFIED",

    /**
     * value: "STORAGE_METADATA"
     * @const
     */
    "STORAGE_METADATA": "STORAGE_METADATA"
};



export default GooglePrivacyDlpV2MetadataLocation;

