/*
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleTypeDate;
import org.openapitools.client.model.GoogleTypeTimeOfDay;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a &#39;Value&#39; is based on its representation as a UTF-8 encoded string. For example, if &#39;integer_value&#39; is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:39.298775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePrivacyDlpV2Value {
  public static final String SERIALIZED_NAME_BOOLEAN_VALUE = "booleanValue";
  @SerializedName(SERIALIZED_NAME_BOOLEAN_VALUE)
  private Boolean booleanValue;

  public static final String SERIALIZED_NAME_DATE_VALUE = "dateValue";
  @SerializedName(SERIALIZED_NAME_DATE_VALUE)
  private GoogleTypeDate dateValue;

  /**
   * day of week
   */
  @JsonAdapter(DayOfWeekValueEnum.Adapter.class)
  public enum DayOfWeekValueEnum {
    DAY_OF_WEEK_UNSPECIFIED("DAY_OF_WEEK_UNSPECIFIED"),
    
    MONDAY("MONDAY"),
    
    TUESDAY("TUESDAY"),
    
    WEDNESDAY("WEDNESDAY"),
    
    THURSDAY("THURSDAY"),
    
    FRIDAY("FRIDAY"),
    
    SATURDAY("SATURDAY"),
    
    SUNDAY("SUNDAY");

    private String value;

    DayOfWeekValueEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DayOfWeekValueEnum fromValue(String value) {
      for (DayOfWeekValueEnum b : DayOfWeekValueEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DayOfWeekValueEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DayOfWeekValueEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DayOfWeekValueEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DayOfWeekValueEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DayOfWeekValueEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DAY_OF_WEEK_VALUE = "dayOfWeekValue";
  @SerializedName(SERIALIZED_NAME_DAY_OF_WEEK_VALUE)
  private DayOfWeekValueEnum dayOfWeekValue;

  public static final String SERIALIZED_NAME_FLOAT_VALUE = "floatValue";
  @SerializedName(SERIALIZED_NAME_FLOAT_VALUE)
  private Double floatValue;

  public static final String SERIALIZED_NAME_INTEGER_VALUE = "integerValue";
  @SerializedName(SERIALIZED_NAME_INTEGER_VALUE)
  private String integerValue;

  public static final String SERIALIZED_NAME_STRING_VALUE = "stringValue";
  @SerializedName(SERIALIZED_NAME_STRING_VALUE)
  private String stringValue;

  public static final String SERIALIZED_NAME_TIME_VALUE = "timeValue";
  @SerializedName(SERIALIZED_NAME_TIME_VALUE)
  private GoogleTypeTimeOfDay timeValue;

  public static final String SERIALIZED_NAME_TIMESTAMP_VALUE = "timestampValue";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP_VALUE)
  private String timestampValue;

  public GooglePrivacyDlpV2Value() {
  }

  public GooglePrivacyDlpV2Value booleanValue(Boolean booleanValue) {
    this.booleanValue = booleanValue;
    return this;
  }

  /**
   * boolean
   * @return booleanValue
   */
  @javax.annotation.Nullable
  public Boolean getBooleanValue() {
    return booleanValue;
  }

  public void setBooleanValue(Boolean booleanValue) {
    this.booleanValue = booleanValue;
  }


  public GooglePrivacyDlpV2Value dateValue(GoogleTypeDate dateValue) {
    this.dateValue = dateValue;
    return this;
  }

  /**
   * Get dateValue
   * @return dateValue
   */
  @javax.annotation.Nullable
  public GoogleTypeDate getDateValue() {
    return dateValue;
  }

  public void setDateValue(GoogleTypeDate dateValue) {
    this.dateValue = dateValue;
  }


  public GooglePrivacyDlpV2Value dayOfWeekValue(DayOfWeekValueEnum dayOfWeekValue) {
    this.dayOfWeekValue = dayOfWeekValue;
    return this;
  }

  /**
   * day of week
   * @return dayOfWeekValue
   */
  @javax.annotation.Nullable
  public DayOfWeekValueEnum getDayOfWeekValue() {
    return dayOfWeekValue;
  }

  public void setDayOfWeekValue(DayOfWeekValueEnum dayOfWeekValue) {
    this.dayOfWeekValue = dayOfWeekValue;
  }


  public GooglePrivacyDlpV2Value floatValue(Double floatValue) {
    this.floatValue = floatValue;
    return this;
  }

  /**
   * float
   * @return floatValue
   */
  @javax.annotation.Nullable
  public Double getFloatValue() {
    return floatValue;
  }

  public void setFloatValue(Double floatValue) {
    this.floatValue = floatValue;
  }


  public GooglePrivacyDlpV2Value integerValue(String integerValue) {
    this.integerValue = integerValue;
    return this;
  }

  /**
   * integer
   * @return integerValue
   */
  @javax.annotation.Nullable
  public String getIntegerValue() {
    return integerValue;
  }

  public void setIntegerValue(String integerValue) {
    this.integerValue = integerValue;
  }


  public GooglePrivacyDlpV2Value stringValue(String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * string
   * @return stringValue
   */
  @javax.annotation.Nullable
  public String getStringValue() {
    return stringValue;
  }

  public void setStringValue(String stringValue) {
    this.stringValue = stringValue;
  }


  public GooglePrivacyDlpV2Value timeValue(GoogleTypeTimeOfDay timeValue) {
    this.timeValue = timeValue;
    return this;
  }

  /**
   * Get timeValue
   * @return timeValue
   */
  @javax.annotation.Nullable
  public GoogleTypeTimeOfDay getTimeValue() {
    return timeValue;
  }

  public void setTimeValue(GoogleTypeTimeOfDay timeValue) {
    this.timeValue = timeValue;
  }


  public GooglePrivacyDlpV2Value timestampValue(String timestampValue) {
    this.timestampValue = timestampValue;
    return this;
  }

  /**
   * timestamp
   * @return timestampValue
   */
  @javax.annotation.Nullable
  public String getTimestampValue() {
    return timestampValue;
  }

  public void setTimestampValue(String timestampValue) {
    this.timestampValue = timestampValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePrivacyDlpV2Value googlePrivacyDlpV2Value = (GooglePrivacyDlpV2Value) o;
    return Objects.equals(this.booleanValue, googlePrivacyDlpV2Value.booleanValue) &&
        Objects.equals(this.dateValue, googlePrivacyDlpV2Value.dateValue) &&
        Objects.equals(this.dayOfWeekValue, googlePrivacyDlpV2Value.dayOfWeekValue) &&
        Objects.equals(this.floatValue, googlePrivacyDlpV2Value.floatValue) &&
        Objects.equals(this.integerValue, googlePrivacyDlpV2Value.integerValue) &&
        Objects.equals(this.stringValue, googlePrivacyDlpV2Value.stringValue) &&
        Objects.equals(this.timeValue, googlePrivacyDlpV2Value.timeValue) &&
        Objects.equals(this.timestampValue, googlePrivacyDlpV2Value.timestampValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(booleanValue, dateValue, dayOfWeekValue, floatValue, integerValue, stringValue, timeValue, timestampValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePrivacyDlpV2Value {\n");
    sb.append("    booleanValue: ").append(toIndentedString(booleanValue)).append("\n");
    sb.append("    dateValue: ").append(toIndentedString(dateValue)).append("\n");
    sb.append("    dayOfWeekValue: ").append(toIndentedString(dayOfWeekValue)).append("\n");
    sb.append("    floatValue: ").append(toIndentedString(floatValue)).append("\n");
    sb.append("    integerValue: ").append(toIndentedString(integerValue)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("    timeValue: ").append(toIndentedString(timeValue)).append("\n");
    sb.append("    timestampValue: ").append(toIndentedString(timestampValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("booleanValue");
    openapiFields.add("dateValue");
    openapiFields.add("dayOfWeekValue");
    openapiFields.add("floatValue");
    openapiFields.add("integerValue");
    openapiFields.add("stringValue");
    openapiFields.add("timeValue");
    openapiFields.add("timestampValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePrivacyDlpV2Value
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePrivacyDlpV2Value.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePrivacyDlpV2Value is not found in the empty JSON string", GooglePrivacyDlpV2Value.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePrivacyDlpV2Value.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePrivacyDlpV2Value` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dateValue`
      if (jsonObj.get("dateValue") != null && !jsonObj.get("dateValue").isJsonNull()) {
        GoogleTypeDate.validateJsonElement(jsonObj.get("dateValue"));
      }
      if ((jsonObj.get("dayOfWeekValue") != null && !jsonObj.get("dayOfWeekValue").isJsonNull()) && !jsonObj.get("dayOfWeekValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dayOfWeekValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dayOfWeekValue").toString()));
      }
      // validate the optional field `dayOfWeekValue`
      if (jsonObj.get("dayOfWeekValue") != null && !jsonObj.get("dayOfWeekValue").isJsonNull()) {
        DayOfWeekValueEnum.validateJsonElement(jsonObj.get("dayOfWeekValue"));
      }
      if ((jsonObj.get("integerValue") != null && !jsonObj.get("integerValue").isJsonNull()) && !jsonObj.get("integerValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integerValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integerValue").toString()));
      }
      if ((jsonObj.get("stringValue") != null && !jsonObj.get("stringValue").isJsonNull()) && !jsonObj.get("stringValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stringValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stringValue").toString()));
      }
      // validate the optional field `timeValue`
      if (jsonObj.get("timeValue") != null && !jsonObj.get("timeValue").isJsonNull()) {
        GoogleTypeTimeOfDay.validateJsonElement(jsonObj.get("timeValue"));
      }
      if ((jsonObj.get("timestampValue") != null && !jsonObj.get("timestampValue").isJsonNull()) && !jsonObj.get("timestampValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timestampValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timestampValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePrivacyDlpV2Value.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePrivacyDlpV2Value' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePrivacyDlpV2Value> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePrivacyDlpV2Value.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePrivacyDlpV2Value>() {
           @Override
           public void write(JsonWriter out, GooglePrivacyDlpV2Value value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePrivacyDlpV2Value read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePrivacyDlpV2Value given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePrivacyDlpV2Value
   * @throws IOException if the JSON string is invalid with respect to GooglePrivacyDlpV2Value
   */
  public static GooglePrivacyDlpV2Value fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePrivacyDlpV2Value.class);
  }

  /**
   * Convert an instance of GooglePrivacyDlpV2Value to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

