/*
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GooglePrivacyDlpV2FieldId;
import org.openapitools.client.model.GooglePrivacyDlpV2FieldTransformation;
import org.openapitools.client.model.GooglePrivacyDlpV2InfoType;
import org.openapitools.client.model.GooglePrivacyDlpV2PrimitiveTransformation;
import org.openapitools.client.model.GooglePrivacyDlpV2RecordSuppression;
import org.openapitools.client.model.GooglePrivacyDlpV2SummaryResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Summary of a single transformation. Only one of &#39;transformation&#39;, &#39;field_transformation&#39;, or &#39;record_suppress&#39; will be set.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:39.298775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePrivacyDlpV2TransformationSummary {
  public static final String SERIALIZED_NAME_FIELD = "field";
  @SerializedName(SERIALIZED_NAME_FIELD)
  private GooglePrivacyDlpV2FieldId field;

  public static final String SERIALIZED_NAME_FIELD_TRANSFORMATIONS = "fieldTransformations";
  @SerializedName(SERIALIZED_NAME_FIELD_TRANSFORMATIONS)
  private List<GooglePrivacyDlpV2FieldTransformation> fieldTransformations = new ArrayList<>();

  public static final String SERIALIZED_NAME_INFO_TYPE = "infoType";
  @SerializedName(SERIALIZED_NAME_INFO_TYPE)
  private GooglePrivacyDlpV2InfoType infoType;

  public static final String SERIALIZED_NAME_RECORD_SUPPRESS = "recordSuppress";
  @SerializedName(SERIALIZED_NAME_RECORD_SUPPRESS)
  private GooglePrivacyDlpV2RecordSuppression recordSuppress;

  public static final String SERIALIZED_NAME_RESULTS = "results";
  @SerializedName(SERIALIZED_NAME_RESULTS)
  private List<GooglePrivacyDlpV2SummaryResult> results = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRANSFORMATION = "transformation";
  @SerializedName(SERIALIZED_NAME_TRANSFORMATION)
  private GooglePrivacyDlpV2PrimitiveTransformation transformation;

  public static final String SERIALIZED_NAME_TRANSFORMED_BYTES = "transformedBytes";
  @SerializedName(SERIALIZED_NAME_TRANSFORMED_BYTES)
  private String transformedBytes;

  public GooglePrivacyDlpV2TransformationSummary() {
  }

  public GooglePrivacyDlpV2TransformationSummary field(GooglePrivacyDlpV2FieldId field) {
    this.field = field;
    return this;
  }

  /**
   * Get field
   * @return field
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2FieldId getField() {
    return field;
  }

  public void setField(GooglePrivacyDlpV2FieldId field) {
    this.field = field;
  }


  public GooglePrivacyDlpV2TransformationSummary fieldTransformations(List<GooglePrivacyDlpV2FieldTransformation> fieldTransformations) {
    this.fieldTransformations = fieldTransformations;
    return this;
  }

  public GooglePrivacyDlpV2TransformationSummary addFieldTransformationsItem(GooglePrivacyDlpV2FieldTransformation fieldTransformationsItem) {
    if (this.fieldTransformations == null) {
      this.fieldTransformations = new ArrayList<>();
    }
    this.fieldTransformations.add(fieldTransformationsItem);
    return this;
  }

  /**
   * The field transformation that was applied. If multiple field transformations are requested for a single field, this list will contain all of them; otherwise, only one is supplied.
   * @return fieldTransformations
   */
  @javax.annotation.Nullable
  public List<GooglePrivacyDlpV2FieldTransformation> getFieldTransformations() {
    return fieldTransformations;
  }

  public void setFieldTransformations(List<GooglePrivacyDlpV2FieldTransformation> fieldTransformations) {
    this.fieldTransformations = fieldTransformations;
  }


  public GooglePrivacyDlpV2TransformationSummary infoType(GooglePrivacyDlpV2InfoType infoType) {
    this.infoType = infoType;
    return this;
  }

  /**
   * Get infoType
   * @return infoType
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2InfoType getInfoType() {
    return infoType;
  }

  public void setInfoType(GooglePrivacyDlpV2InfoType infoType) {
    this.infoType = infoType;
  }


  public GooglePrivacyDlpV2TransformationSummary recordSuppress(GooglePrivacyDlpV2RecordSuppression recordSuppress) {
    this.recordSuppress = recordSuppress;
    return this;
  }

  /**
   * Get recordSuppress
   * @return recordSuppress
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2RecordSuppression getRecordSuppress() {
    return recordSuppress;
  }

  public void setRecordSuppress(GooglePrivacyDlpV2RecordSuppression recordSuppress) {
    this.recordSuppress = recordSuppress;
  }


  public GooglePrivacyDlpV2TransformationSummary results(List<GooglePrivacyDlpV2SummaryResult> results) {
    this.results = results;
    return this;
  }

  public GooglePrivacyDlpV2TransformationSummary addResultsItem(GooglePrivacyDlpV2SummaryResult resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

  /**
   * Collection of all transformations that took place or had an error.
   * @return results
   */
  @javax.annotation.Nullable
  public List<GooglePrivacyDlpV2SummaryResult> getResults() {
    return results;
  }

  public void setResults(List<GooglePrivacyDlpV2SummaryResult> results) {
    this.results = results;
  }


  public GooglePrivacyDlpV2TransformationSummary transformation(GooglePrivacyDlpV2PrimitiveTransformation transformation) {
    this.transformation = transformation;
    return this;
  }

  /**
   * Get transformation
   * @return transformation
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2PrimitiveTransformation getTransformation() {
    return transformation;
  }

  public void setTransformation(GooglePrivacyDlpV2PrimitiveTransformation transformation) {
    this.transformation = transformation;
  }


  public GooglePrivacyDlpV2TransformationSummary transformedBytes(String transformedBytes) {
    this.transformedBytes = transformedBytes;
    return this;
  }

  /**
   * Total size in bytes that were transformed in some way.
   * @return transformedBytes
   */
  @javax.annotation.Nullable
  public String getTransformedBytes() {
    return transformedBytes;
  }

  public void setTransformedBytes(String transformedBytes) {
    this.transformedBytes = transformedBytes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePrivacyDlpV2TransformationSummary googlePrivacyDlpV2TransformationSummary = (GooglePrivacyDlpV2TransformationSummary) o;
    return Objects.equals(this.field, googlePrivacyDlpV2TransformationSummary.field) &&
        Objects.equals(this.fieldTransformations, googlePrivacyDlpV2TransformationSummary.fieldTransformations) &&
        Objects.equals(this.infoType, googlePrivacyDlpV2TransformationSummary.infoType) &&
        Objects.equals(this.recordSuppress, googlePrivacyDlpV2TransformationSummary.recordSuppress) &&
        Objects.equals(this.results, googlePrivacyDlpV2TransformationSummary.results) &&
        Objects.equals(this.transformation, googlePrivacyDlpV2TransformationSummary.transformation) &&
        Objects.equals(this.transformedBytes, googlePrivacyDlpV2TransformationSummary.transformedBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, fieldTransformations, infoType, recordSuppress, results, transformation, transformedBytes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePrivacyDlpV2TransformationSummary {\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    fieldTransformations: ").append(toIndentedString(fieldTransformations)).append("\n");
    sb.append("    infoType: ").append(toIndentedString(infoType)).append("\n");
    sb.append("    recordSuppress: ").append(toIndentedString(recordSuppress)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    transformation: ").append(toIndentedString(transformation)).append("\n");
    sb.append("    transformedBytes: ").append(toIndentedString(transformedBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("field");
    openapiFields.add("fieldTransformations");
    openapiFields.add("infoType");
    openapiFields.add("recordSuppress");
    openapiFields.add("results");
    openapiFields.add("transformation");
    openapiFields.add("transformedBytes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePrivacyDlpV2TransformationSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePrivacyDlpV2TransformationSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePrivacyDlpV2TransformationSummary is not found in the empty JSON string", GooglePrivacyDlpV2TransformationSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePrivacyDlpV2TransformationSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePrivacyDlpV2TransformationSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `field`
      if (jsonObj.get("field") != null && !jsonObj.get("field").isJsonNull()) {
        GooglePrivacyDlpV2FieldId.validateJsonElement(jsonObj.get("field"));
      }
      if (jsonObj.get("fieldTransformations") != null && !jsonObj.get("fieldTransformations").isJsonNull()) {
        JsonArray jsonArrayfieldTransformations = jsonObj.getAsJsonArray("fieldTransformations");
        if (jsonArrayfieldTransformations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fieldTransformations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fieldTransformations` to be an array in the JSON string but got `%s`", jsonObj.get("fieldTransformations").toString()));
          }

          // validate the optional field `fieldTransformations` (array)
          for (int i = 0; i < jsonArrayfieldTransformations.size(); i++) {
            GooglePrivacyDlpV2FieldTransformation.validateJsonElement(jsonArrayfieldTransformations.get(i));
          };
        }
      }
      // validate the optional field `infoType`
      if (jsonObj.get("infoType") != null && !jsonObj.get("infoType").isJsonNull()) {
        GooglePrivacyDlpV2InfoType.validateJsonElement(jsonObj.get("infoType"));
      }
      // validate the optional field `recordSuppress`
      if (jsonObj.get("recordSuppress") != null && !jsonObj.get("recordSuppress").isJsonNull()) {
        GooglePrivacyDlpV2RecordSuppression.validateJsonElement(jsonObj.get("recordSuppress"));
      }
      if (jsonObj.get("results") != null && !jsonObj.get("results").isJsonNull()) {
        JsonArray jsonArrayresults = jsonObj.getAsJsonArray("results");
        if (jsonArrayresults != null) {
          // ensure the json data is an array
          if (!jsonObj.get("results").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `results` to be an array in the JSON string but got `%s`", jsonObj.get("results").toString()));
          }

          // validate the optional field `results` (array)
          for (int i = 0; i < jsonArrayresults.size(); i++) {
            GooglePrivacyDlpV2SummaryResult.validateJsonElement(jsonArrayresults.get(i));
          };
        }
      }
      // validate the optional field `transformation`
      if (jsonObj.get("transformation") != null && !jsonObj.get("transformation").isJsonNull()) {
        GooglePrivacyDlpV2PrimitiveTransformation.validateJsonElement(jsonObj.get("transformation"));
      }
      if ((jsonObj.get("transformedBytes") != null && !jsonObj.get("transformedBytes").isJsonNull()) && !jsonObj.get("transformedBytes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transformedBytes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transformedBytes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePrivacyDlpV2TransformationSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePrivacyDlpV2TransformationSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePrivacyDlpV2TransformationSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePrivacyDlpV2TransformationSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePrivacyDlpV2TransformationSummary>() {
           @Override
           public void write(JsonWriter out, GooglePrivacyDlpV2TransformationSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePrivacyDlpV2TransformationSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePrivacyDlpV2TransformationSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePrivacyDlpV2TransformationSummary
   * @throws IOException if the JSON string is invalid with respect to GooglePrivacyDlpV2TransformationSummary
   */
  public static GooglePrivacyDlpV2TransformationSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePrivacyDlpV2TransformationSummary.class);
  }

  /**
   * Convert an instance of GooglePrivacyDlpV2TransformationSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

