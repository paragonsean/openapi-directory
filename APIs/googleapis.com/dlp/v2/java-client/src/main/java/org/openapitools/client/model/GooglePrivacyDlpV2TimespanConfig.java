/*
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GooglePrivacyDlpV2FieldId;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Cloud Storage and BigQuery.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:39.298775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePrivacyDlpV2TimespanConfig {
  public static final String SERIALIZED_NAME_ENABLE_AUTO_POPULATION_OF_TIMESPAN_CONFIG = "enableAutoPopulationOfTimespanConfig";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTO_POPULATION_OF_TIMESPAN_CONFIG)
  private Boolean enableAutoPopulationOfTimespanConfig;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_TIMESTAMP_FIELD = "timestampField";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP_FIELD)
  private GooglePrivacyDlpV2FieldId timestampField;

  public GooglePrivacyDlpV2TimespanConfig() {
  }

  public GooglePrivacyDlpV2TimespanConfig enableAutoPopulationOfTimespanConfig(Boolean enableAutoPopulationOfTimespanConfig) {
    this.enableAutoPopulationOfTimespanConfig = enableAutoPopulationOfTimespanConfig;
    return this;
  }

  /**
   * When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger or the timespan end_time used in the last run of the JobTrigger.
   * @return enableAutoPopulationOfTimespanConfig
   */
  @javax.annotation.Nullable
  public Boolean getEnableAutoPopulationOfTimespanConfig() {
    return enableAutoPopulationOfTimespanConfig;
  }

  public void setEnableAutoPopulationOfTimespanConfig(Boolean enableAutoPopulationOfTimespanConfig) {
    this.enableAutoPopulationOfTimespanConfig = enableAutoPopulationOfTimespanConfig;
  }


  public GooglePrivacyDlpV2TimespanConfig endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public GooglePrivacyDlpV2TimespanConfig startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public GooglePrivacyDlpV2TimespanConfig timestampField(GooglePrivacyDlpV2FieldId timestampField) {
    this.timestampField = timestampField;
    return this;
  }

  /**
   * Get timestampField
   * @return timestampField
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2FieldId getTimestampField() {
    return timestampField;
  }

  public void setTimestampField(GooglePrivacyDlpV2FieldId timestampField) {
    this.timestampField = timestampField;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePrivacyDlpV2TimespanConfig googlePrivacyDlpV2TimespanConfig = (GooglePrivacyDlpV2TimespanConfig) o;
    return Objects.equals(this.enableAutoPopulationOfTimespanConfig, googlePrivacyDlpV2TimespanConfig.enableAutoPopulationOfTimespanConfig) &&
        Objects.equals(this.endTime, googlePrivacyDlpV2TimespanConfig.endTime) &&
        Objects.equals(this.startTime, googlePrivacyDlpV2TimespanConfig.startTime) &&
        Objects.equals(this.timestampField, googlePrivacyDlpV2TimespanConfig.timestampField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableAutoPopulationOfTimespanConfig, endTime, startTime, timestampField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePrivacyDlpV2TimespanConfig {\n");
    sb.append("    enableAutoPopulationOfTimespanConfig: ").append(toIndentedString(enableAutoPopulationOfTimespanConfig)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    timestampField: ").append(toIndentedString(timestampField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enableAutoPopulationOfTimespanConfig");
    openapiFields.add("endTime");
    openapiFields.add("startTime");
    openapiFields.add("timestampField");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePrivacyDlpV2TimespanConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePrivacyDlpV2TimespanConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePrivacyDlpV2TimespanConfig is not found in the empty JSON string", GooglePrivacyDlpV2TimespanConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePrivacyDlpV2TimespanConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePrivacyDlpV2TimespanConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      // validate the optional field `timestampField`
      if (jsonObj.get("timestampField") != null && !jsonObj.get("timestampField").isJsonNull()) {
        GooglePrivacyDlpV2FieldId.validateJsonElement(jsonObj.get("timestampField"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePrivacyDlpV2TimespanConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePrivacyDlpV2TimespanConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePrivacyDlpV2TimespanConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePrivacyDlpV2TimespanConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePrivacyDlpV2TimespanConfig>() {
           @Override
           public void write(JsonWriter out, GooglePrivacyDlpV2TimespanConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePrivacyDlpV2TimespanConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePrivacyDlpV2TimespanConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePrivacyDlpV2TimespanConfig
   * @throws IOException if the JSON string is invalid with respect to GooglePrivacyDlpV2TimespanConfig
   */
  public static GooglePrivacyDlpV2TimespanConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePrivacyDlpV2TimespanConfig.class);
  }

  /**
   * Convert an instance of GooglePrivacyDlpV2TimespanConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

