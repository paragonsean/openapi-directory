/*
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GooglePrivacyDlpV2InfoType;
import org.openapitools.client.model.GooglePrivacyDlpV2Location;
import org.openapitools.client.model.GooglePrivacyDlpV2QuoteInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a piece of potentially sensitive content.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:39.298775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePrivacyDlpV2Finding {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_FINDING_ID = "findingId";
  @SerializedName(SERIALIZED_NAME_FINDING_ID)
  private String findingId;

  public static final String SERIALIZED_NAME_INFO_TYPE = "infoType";
  @SerializedName(SERIALIZED_NAME_INFO_TYPE)
  private GooglePrivacyDlpV2InfoType infoType;

  public static final String SERIALIZED_NAME_JOB_CREATE_TIME = "jobCreateTime";
  @SerializedName(SERIALIZED_NAME_JOB_CREATE_TIME)
  private String jobCreateTime;

  public static final String SERIALIZED_NAME_JOB_NAME = "jobName";
  @SerializedName(SERIALIZED_NAME_JOB_NAME)
  private String jobName;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  /**
   * Confidence of how likely it is that the &#x60;info_type&#x60; is correct.
   */
  @JsonAdapter(LikelihoodEnum.Adapter.class)
  public enum LikelihoodEnum {
    LIKELIHOOD_UNSPECIFIED("LIKELIHOOD_UNSPECIFIED"),
    
    VERY_UNLIKELY("VERY_UNLIKELY"),
    
    UNLIKELY("UNLIKELY"),
    
    POSSIBLE("POSSIBLE"),
    
    LIKELY("LIKELY"),
    
    VERY_LIKELY("VERY_LIKELY");

    private String value;

    LikelihoodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LikelihoodEnum fromValue(String value) {
      for (LikelihoodEnum b : LikelihoodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LikelihoodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LikelihoodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LikelihoodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LikelihoodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LikelihoodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LIKELIHOOD = "likelihood";
  @SerializedName(SERIALIZED_NAME_LIKELIHOOD)
  private LikelihoodEnum likelihood;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private GooglePrivacyDlpV2Location location;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_QUOTE = "quote";
  @SerializedName(SERIALIZED_NAME_QUOTE)
  private String quote;

  public static final String SERIALIZED_NAME_QUOTE_INFO = "quoteInfo";
  @SerializedName(SERIALIZED_NAME_QUOTE_INFO)
  private GooglePrivacyDlpV2QuoteInfo quoteInfo;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public static final String SERIALIZED_NAME_TRIGGER_NAME = "triggerName";
  @SerializedName(SERIALIZED_NAME_TRIGGER_NAME)
  private String triggerName;

  public GooglePrivacyDlpV2Finding() {
  }

  public GooglePrivacyDlpV2Finding createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Timestamp when finding was detected.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GooglePrivacyDlpV2Finding findingId(String findingId) {
    this.findingId = findingId;
    return this;
  }

  /**
   * The unique finding id.
   * @return findingId
   */
  @javax.annotation.Nullable
  public String getFindingId() {
    return findingId;
  }

  public void setFindingId(String findingId) {
    this.findingId = findingId;
  }


  public GooglePrivacyDlpV2Finding infoType(GooglePrivacyDlpV2InfoType infoType) {
    this.infoType = infoType;
    return this;
  }

  /**
   * Get infoType
   * @return infoType
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2InfoType getInfoType() {
    return infoType;
  }

  public void setInfoType(GooglePrivacyDlpV2InfoType infoType) {
    this.infoType = infoType;
  }


  public GooglePrivacyDlpV2Finding jobCreateTime(String jobCreateTime) {
    this.jobCreateTime = jobCreateTime;
    return this;
  }

  /**
   * Time the job started that produced this finding.
   * @return jobCreateTime
   */
  @javax.annotation.Nullable
  public String getJobCreateTime() {
    return jobCreateTime;
  }

  public void setJobCreateTime(String jobCreateTime) {
    this.jobCreateTime = jobCreateTime;
  }


  public GooglePrivacyDlpV2Finding jobName(String jobName) {
    this.jobName = jobName;
    return this;
  }

  /**
   * The job that stored the finding.
   * @return jobName
   */
  @javax.annotation.Nullable
  public String getJobName() {
    return jobName;
  }

  public void setJobName(String jobName) {
    this.jobName = jobName;
  }


  public GooglePrivacyDlpV2Finding labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GooglePrivacyDlpV2Finding putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * The labels associated with this &#x60;Finding&#x60;. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: &#x60;[a-z]([-a-z0-9]*[a-z0-9])?&#x60;. Label values must be between 0 and 63 characters long and must conform to the regular expression &#x60;([a-z]([-a-z0-9]*[a-z0-9])?)?&#x60;. No more than 10 labels can be associated with a given finding. Examples: * &#x60;\&quot;environment\&quot; : \&quot;production\&quot;&#x60; * &#x60;\&quot;pipeline\&quot; : \&quot;etl\&quot;&#x60;
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GooglePrivacyDlpV2Finding likelihood(LikelihoodEnum likelihood) {
    this.likelihood = likelihood;
    return this;
  }

  /**
   * Confidence of how likely it is that the &#x60;info_type&#x60; is correct.
   * @return likelihood
   */
  @javax.annotation.Nullable
  public LikelihoodEnum getLikelihood() {
    return likelihood;
  }

  public void setLikelihood(LikelihoodEnum likelihood) {
    this.likelihood = likelihood;
  }


  public GooglePrivacyDlpV2Finding location(GooglePrivacyDlpV2Location location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2Location getLocation() {
    return location;
  }

  public void setLocation(GooglePrivacyDlpV2Location location) {
    this.location = location;
  }


  public GooglePrivacyDlpV2Finding name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GooglePrivacyDlpV2Finding quote(String quote) {
    this.quote = quote;
    return this;
  }

  /**
   * The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if &#x60;include_quote&#x60; is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted.
   * @return quote
   */
  @javax.annotation.Nullable
  public String getQuote() {
    return quote;
  }

  public void setQuote(String quote) {
    this.quote = quote;
  }


  public GooglePrivacyDlpV2Finding quoteInfo(GooglePrivacyDlpV2QuoteInfo quoteInfo) {
    this.quoteInfo = quoteInfo;
    return this;
  }

  /**
   * Get quoteInfo
   * @return quoteInfo
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2QuoteInfo getQuoteInfo() {
    return quoteInfo;
  }

  public void setQuoteInfo(GooglePrivacyDlpV2QuoteInfo quoteInfo) {
    this.quoteInfo = quoteInfo;
  }


  public GooglePrivacyDlpV2Finding resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * The job that stored the finding.
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  public GooglePrivacyDlpV2Finding triggerName(String triggerName) {
    this.triggerName = triggerName;
    return this;
  }

  /**
   * Job trigger name, if applicable, for this finding.
   * @return triggerName
   */
  @javax.annotation.Nullable
  public String getTriggerName() {
    return triggerName;
  }

  public void setTriggerName(String triggerName) {
    this.triggerName = triggerName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePrivacyDlpV2Finding googlePrivacyDlpV2Finding = (GooglePrivacyDlpV2Finding) o;
    return Objects.equals(this.createTime, googlePrivacyDlpV2Finding.createTime) &&
        Objects.equals(this.findingId, googlePrivacyDlpV2Finding.findingId) &&
        Objects.equals(this.infoType, googlePrivacyDlpV2Finding.infoType) &&
        Objects.equals(this.jobCreateTime, googlePrivacyDlpV2Finding.jobCreateTime) &&
        Objects.equals(this.jobName, googlePrivacyDlpV2Finding.jobName) &&
        Objects.equals(this.labels, googlePrivacyDlpV2Finding.labels) &&
        Objects.equals(this.likelihood, googlePrivacyDlpV2Finding.likelihood) &&
        Objects.equals(this.location, googlePrivacyDlpV2Finding.location) &&
        Objects.equals(this.name, googlePrivacyDlpV2Finding.name) &&
        Objects.equals(this.quote, googlePrivacyDlpV2Finding.quote) &&
        Objects.equals(this.quoteInfo, googlePrivacyDlpV2Finding.quoteInfo) &&
        Objects.equals(this.resourceName, googlePrivacyDlpV2Finding.resourceName) &&
        Objects.equals(this.triggerName, googlePrivacyDlpV2Finding.triggerName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, findingId, infoType, jobCreateTime, jobName, labels, likelihood, location, name, quote, quoteInfo, resourceName, triggerName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePrivacyDlpV2Finding {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    findingId: ").append(toIndentedString(findingId)).append("\n");
    sb.append("    infoType: ").append(toIndentedString(infoType)).append("\n");
    sb.append("    jobCreateTime: ").append(toIndentedString(jobCreateTime)).append("\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    likelihood: ").append(toIndentedString(likelihood)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    quote: ").append(toIndentedString(quote)).append("\n");
    sb.append("    quoteInfo: ").append(toIndentedString(quoteInfo)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    triggerName: ").append(toIndentedString(triggerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("findingId");
    openapiFields.add("infoType");
    openapiFields.add("jobCreateTime");
    openapiFields.add("jobName");
    openapiFields.add("labels");
    openapiFields.add("likelihood");
    openapiFields.add("location");
    openapiFields.add("name");
    openapiFields.add("quote");
    openapiFields.add("quoteInfo");
    openapiFields.add("resourceName");
    openapiFields.add("triggerName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePrivacyDlpV2Finding
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePrivacyDlpV2Finding.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePrivacyDlpV2Finding is not found in the empty JSON string", GooglePrivacyDlpV2Finding.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePrivacyDlpV2Finding.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePrivacyDlpV2Finding` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("findingId") != null && !jsonObj.get("findingId").isJsonNull()) && !jsonObj.get("findingId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `findingId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("findingId").toString()));
      }
      // validate the optional field `infoType`
      if (jsonObj.get("infoType") != null && !jsonObj.get("infoType").isJsonNull()) {
        GooglePrivacyDlpV2InfoType.validateJsonElement(jsonObj.get("infoType"));
      }
      if ((jsonObj.get("jobCreateTime") != null && !jsonObj.get("jobCreateTime").isJsonNull()) && !jsonObj.get("jobCreateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobCreateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobCreateTime").toString()));
      }
      if ((jsonObj.get("jobName") != null && !jsonObj.get("jobName").isJsonNull()) && !jsonObj.get("jobName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobName").toString()));
      }
      if ((jsonObj.get("likelihood") != null && !jsonObj.get("likelihood").isJsonNull()) && !jsonObj.get("likelihood").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `likelihood` to be a primitive type in the JSON string but got `%s`", jsonObj.get("likelihood").toString()));
      }
      // validate the optional field `likelihood`
      if (jsonObj.get("likelihood") != null && !jsonObj.get("likelihood").isJsonNull()) {
        LikelihoodEnum.validateJsonElement(jsonObj.get("likelihood"));
      }
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        GooglePrivacyDlpV2Location.validateJsonElement(jsonObj.get("location"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("quote") != null && !jsonObj.get("quote").isJsonNull()) && !jsonObj.get("quote").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quote` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quote").toString()));
      }
      // validate the optional field `quoteInfo`
      if (jsonObj.get("quoteInfo") != null && !jsonObj.get("quoteInfo").isJsonNull()) {
        GooglePrivacyDlpV2QuoteInfo.validateJsonElement(jsonObj.get("quoteInfo"));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("triggerName") != null && !jsonObj.get("triggerName").isJsonNull()) && !jsonObj.get("triggerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `triggerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("triggerName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePrivacyDlpV2Finding.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePrivacyDlpV2Finding' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePrivacyDlpV2Finding> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePrivacyDlpV2Finding.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePrivacyDlpV2Finding>() {
           @Override
           public void write(JsonWriter out, GooglePrivacyDlpV2Finding value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePrivacyDlpV2Finding read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePrivacyDlpV2Finding given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePrivacyDlpV2Finding
   * @throws IOException if the JSON string is invalid with respect to GooglePrivacyDlpV2Finding
   */
  public static GooglePrivacyDlpV2Finding fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePrivacyDlpV2Finding.class);
  }

  /**
   * Convert an instance of GooglePrivacyDlpV2Finding to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

