/*
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GooglePrivacyDlpV2DataRiskLevel;
import org.openapitools.client.model.GooglePrivacyDlpV2InfoTypeSummary;
import org.openapitools.client.model.GooglePrivacyDlpV2OtherInfoTypeSummary;
import org.openapitools.client.model.GooglePrivacyDlpV2ProfileStatus;
import org.openapitools.client.model.GooglePrivacyDlpV2SensitivityScore;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The profile for a scanned column within a table.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:39.298775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePrivacyDlpV2ColumnDataProfile {
  public static final String SERIALIZED_NAME_COLUMN = "column";
  @SerializedName(SERIALIZED_NAME_COLUMN)
  private String column;

  public static final String SERIALIZED_NAME_COLUMN_INFO_TYPE = "columnInfoType";
  @SerializedName(SERIALIZED_NAME_COLUMN_INFO_TYPE)
  private GooglePrivacyDlpV2InfoTypeSummary columnInfoType;

  /**
   * The data type of a given column.
   */
  @JsonAdapter(ColumnTypeEnum.Adapter.class)
  public enum ColumnTypeEnum {
    COLUMN_DATA_TYPE_UNSPECIFIED("COLUMN_DATA_TYPE_UNSPECIFIED"),
    
    TYPE_INT64("TYPE_INT64"),
    
    TYPE_BOOL("TYPE_BOOL"),
    
    TYPE_FLOAT64("TYPE_FLOAT64"),
    
    TYPE_STRING("TYPE_STRING"),
    
    TYPE_BYTES("TYPE_BYTES"),
    
    TYPE_TIMESTAMP("TYPE_TIMESTAMP"),
    
    TYPE_DATE("TYPE_DATE"),
    
    TYPE_TIME("TYPE_TIME"),
    
    TYPE_DATETIME("TYPE_DATETIME"),
    
    TYPE_GEOGRAPHY("TYPE_GEOGRAPHY"),
    
    TYPE_NUMERIC("TYPE_NUMERIC"),
    
    TYPE_RECORD("TYPE_RECORD"),
    
    TYPE_BIGNUMERIC("TYPE_BIGNUMERIC"),
    
    TYPE_JSON("TYPE_JSON");

    private String value;

    ColumnTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ColumnTypeEnum fromValue(String value) {
      for (ColumnTypeEnum b : ColumnTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ColumnTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ColumnTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ColumnTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ColumnTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ColumnTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_COLUMN_TYPE = "columnType";
  @SerializedName(SERIALIZED_NAME_COLUMN_TYPE)
  private ColumnTypeEnum columnType;

  public static final String SERIALIZED_NAME_DATA_RISK_LEVEL = "dataRiskLevel";
  @SerializedName(SERIALIZED_NAME_DATA_RISK_LEVEL)
  private GooglePrivacyDlpV2DataRiskLevel dataRiskLevel;

  public static final String SERIALIZED_NAME_DATASET_ID = "datasetId";
  @SerializedName(SERIALIZED_NAME_DATASET_ID)
  private String datasetId;

  public static final String SERIALIZED_NAME_DATASET_LOCATION = "datasetLocation";
  @SerializedName(SERIALIZED_NAME_DATASET_LOCATION)
  private String datasetLocation;

  public static final String SERIALIZED_NAME_DATASET_PROJECT_ID = "datasetProjectId";
  @SerializedName(SERIALIZED_NAME_DATASET_PROJECT_ID)
  private String datasetProjectId;

  /**
   * Approximate percentage of entries being null in the column.
   */
  @JsonAdapter(EstimatedNullPercentageEnum.Adapter.class)
  public enum EstimatedNullPercentageEnum {
    LEVEL_UNSPECIFIED("NULL_PERCENTAGE_LEVEL_UNSPECIFIED"),
    
    VERY_LOW("NULL_PERCENTAGE_VERY_LOW"),
    
    LOW("NULL_PERCENTAGE_LOW"),
    
    MEDIUM("NULL_PERCENTAGE_MEDIUM"),
    
    HIGH("NULL_PERCENTAGE_HIGH");

    private String value;

    EstimatedNullPercentageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EstimatedNullPercentageEnum fromValue(String value) {
      for (EstimatedNullPercentageEnum b : EstimatedNullPercentageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EstimatedNullPercentageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EstimatedNullPercentageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EstimatedNullPercentageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EstimatedNullPercentageEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EstimatedNullPercentageEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ESTIMATED_NULL_PERCENTAGE = "estimatedNullPercentage";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_NULL_PERCENTAGE)
  private EstimatedNullPercentageEnum estimatedNullPercentage;

  /**
   * Approximate uniqueness of the column.
   */
  @JsonAdapter(EstimatedUniquenessScoreEnum.Adapter.class)
  public enum EstimatedUniquenessScoreEnum {
    LEVEL_UNSPECIFIED("UNIQUENESS_SCORE_LEVEL_UNSPECIFIED"),
    
    LOW("UNIQUENESS_SCORE_LOW"),
    
    MEDIUM("UNIQUENESS_SCORE_MEDIUM"),
    
    HIGH("UNIQUENESS_SCORE_HIGH");

    private String value;

    EstimatedUniquenessScoreEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EstimatedUniquenessScoreEnum fromValue(String value) {
      for (EstimatedUniquenessScoreEnum b : EstimatedUniquenessScoreEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EstimatedUniquenessScoreEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EstimatedUniquenessScoreEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EstimatedUniquenessScoreEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EstimatedUniquenessScoreEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EstimatedUniquenessScoreEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ESTIMATED_UNIQUENESS_SCORE = "estimatedUniquenessScore";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_UNIQUENESS_SCORE)
  private EstimatedUniquenessScoreEnum estimatedUniquenessScore;

  public static final String SERIALIZED_NAME_FREE_TEXT_SCORE = "freeTextScore";
  @SerializedName(SERIALIZED_NAME_FREE_TEXT_SCORE)
  private Double freeTextScore;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OTHER_MATCHES = "otherMatches";
  @SerializedName(SERIALIZED_NAME_OTHER_MATCHES)
  private List<GooglePrivacyDlpV2OtherInfoTypeSummary> otherMatches = new ArrayList<>();

  /**
   * Indicates if a policy tag has been applied to the column.
   */
  @JsonAdapter(PolicyStateEnum.Adapter.class)
  public enum PolicyStateEnum {
    STATE_UNSPECIFIED("COLUMN_POLICY_STATE_UNSPECIFIED"),
    
    TAGGED("COLUMN_POLICY_TAGGED");

    private String value;

    PolicyStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PolicyStateEnum fromValue(String value) {
      for (PolicyStateEnum b : PolicyStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PolicyStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PolicyStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PolicyStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PolicyStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PolicyStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_POLICY_STATE = "policyState";
  @SerializedName(SERIALIZED_NAME_POLICY_STATE)
  private PolicyStateEnum policyState;

  public static final String SERIALIZED_NAME_PROFILE_LAST_GENERATED = "profileLastGenerated";
  @SerializedName(SERIALIZED_NAME_PROFILE_LAST_GENERATED)
  private String profileLastGenerated;

  public static final String SERIALIZED_NAME_PROFILE_STATUS = "profileStatus";
  @SerializedName(SERIALIZED_NAME_PROFILE_STATUS)
  private GooglePrivacyDlpV2ProfileStatus profileStatus;

  public static final String SERIALIZED_NAME_SENSITIVITY_SCORE = "sensitivityScore";
  @SerializedName(SERIALIZED_NAME_SENSITIVITY_SCORE)
  private GooglePrivacyDlpV2SensitivityScore sensitivityScore;

  /**
   * State of a profile.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    RUNNING("RUNNING"),
    
    DONE("DONE");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TABLE_DATA_PROFILE = "tableDataProfile";
  @SerializedName(SERIALIZED_NAME_TABLE_DATA_PROFILE)
  private String tableDataProfile;

  public static final String SERIALIZED_NAME_TABLE_FULL_RESOURCE = "tableFullResource";
  @SerializedName(SERIALIZED_NAME_TABLE_FULL_RESOURCE)
  private String tableFullResource;

  public static final String SERIALIZED_NAME_TABLE_ID = "tableId";
  @SerializedName(SERIALIZED_NAME_TABLE_ID)
  private String tableId;

  public GooglePrivacyDlpV2ColumnDataProfile() {
  }

  public GooglePrivacyDlpV2ColumnDataProfile column(String column) {
    this.column = column;
    return this;
  }

  /**
   * The name of the column.
   * @return column
   */
  @javax.annotation.Nullable
  public String getColumn() {
    return column;
  }

  public void setColumn(String column) {
    this.column = column;
  }


  public GooglePrivacyDlpV2ColumnDataProfile columnInfoType(GooglePrivacyDlpV2InfoTypeSummary columnInfoType) {
    this.columnInfoType = columnInfoType;
    return this;
  }

  /**
   * Get columnInfoType
   * @return columnInfoType
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2InfoTypeSummary getColumnInfoType() {
    return columnInfoType;
  }

  public void setColumnInfoType(GooglePrivacyDlpV2InfoTypeSummary columnInfoType) {
    this.columnInfoType = columnInfoType;
  }


  public GooglePrivacyDlpV2ColumnDataProfile columnType(ColumnTypeEnum columnType) {
    this.columnType = columnType;
    return this;
  }

  /**
   * The data type of a given column.
   * @return columnType
   */
  @javax.annotation.Nullable
  public ColumnTypeEnum getColumnType() {
    return columnType;
  }

  public void setColumnType(ColumnTypeEnum columnType) {
    this.columnType = columnType;
  }


  public GooglePrivacyDlpV2ColumnDataProfile dataRiskLevel(GooglePrivacyDlpV2DataRiskLevel dataRiskLevel) {
    this.dataRiskLevel = dataRiskLevel;
    return this;
  }

  /**
   * Get dataRiskLevel
   * @return dataRiskLevel
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2DataRiskLevel getDataRiskLevel() {
    return dataRiskLevel;
  }

  public void setDataRiskLevel(GooglePrivacyDlpV2DataRiskLevel dataRiskLevel) {
    this.dataRiskLevel = dataRiskLevel;
  }


  public GooglePrivacyDlpV2ColumnDataProfile datasetId(String datasetId) {
    this.datasetId = datasetId;
    return this;
  }

  /**
   * The BigQuery dataset ID.
   * @return datasetId
   */
  @javax.annotation.Nullable
  public String getDatasetId() {
    return datasetId;
  }

  public void setDatasetId(String datasetId) {
    this.datasetId = datasetId;
  }


  public GooglePrivacyDlpV2ColumnDataProfile datasetLocation(String datasetLocation) {
    this.datasetLocation = datasetLocation;
    return this;
  }

  /**
   * The BigQuery location where the dataset&#39;s data is stored. See https://cloud.google.com/bigquery/docs/locations for supported locations.
   * @return datasetLocation
   */
  @javax.annotation.Nullable
  public String getDatasetLocation() {
    return datasetLocation;
  }

  public void setDatasetLocation(String datasetLocation) {
    this.datasetLocation = datasetLocation;
  }


  public GooglePrivacyDlpV2ColumnDataProfile datasetProjectId(String datasetProjectId) {
    this.datasetProjectId = datasetProjectId;
    return this;
  }

  /**
   * The Google Cloud project ID that owns the profiled resource.
   * @return datasetProjectId
   */
  @javax.annotation.Nullable
  public String getDatasetProjectId() {
    return datasetProjectId;
  }

  public void setDatasetProjectId(String datasetProjectId) {
    this.datasetProjectId = datasetProjectId;
  }


  public GooglePrivacyDlpV2ColumnDataProfile estimatedNullPercentage(EstimatedNullPercentageEnum estimatedNullPercentage) {
    this.estimatedNullPercentage = estimatedNullPercentage;
    return this;
  }

  /**
   * Approximate percentage of entries being null in the column.
   * @return estimatedNullPercentage
   */
  @javax.annotation.Nullable
  public EstimatedNullPercentageEnum getEstimatedNullPercentage() {
    return estimatedNullPercentage;
  }

  public void setEstimatedNullPercentage(EstimatedNullPercentageEnum estimatedNullPercentage) {
    this.estimatedNullPercentage = estimatedNullPercentage;
  }


  public GooglePrivacyDlpV2ColumnDataProfile estimatedUniquenessScore(EstimatedUniquenessScoreEnum estimatedUniquenessScore) {
    this.estimatedUniquenessScore = estimatedUniquenessScore;
    return this;
  }

  /**
   * Approximate uniqueness of the column.
   * @return estimatedUniquenessScore
   */
  @javax.annotation.Nullable
  public EstimatedUniquenessScoreEnum getEstimatedUniquenessScore() {
    return estimatedUniquenessScore;
  }

  public void setEstimatedUniquenessScore(EstimatedUniquenessScoreEnum estimatedUniquenessScore) {
    this.estimatedUniquenessScore = estimatedUniquenessScore;
  }


  public GooglePrivacyDlpV2ColumnDataProfile freeTextScore(Double freeTextScore) {
    this.freeTextScore = freeTextScore;
    return this;
  }

  /**
   * The likelihood that this column contains free-form text. A value close to 1 may indicate the column is likely to contain free-form or natural language text. Range in 0-1.
   * @return freeTextScore
   */
  @javax.annotation.Nullable
  public Double getFreeTextScore() {
    return freeTextScore;
  }

  public void setFreeTextScore(Double freeTextScore) {
    this.freeTextScore = freeTextScore;
  }


  public GooglePrivacyDlpV2ColumnDataProfile name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the profile.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GooglePrivacyDlpV2ColumnDataProfile otherMatches(List<GooglePrivacyDlpV2OtherInfoTypeSummary> otherMatches) {
    this.otherMatches = otherMatches;
    return this;
  }

  public GooglePrivacyDlpV2ColumnDataProfile addOtherMatchesItem(GooglePrivacyDlpV2OtherInfoTypeSummary otherMatchesItem) {
    if (this.otherMatches == null) {
      this.otherMatches = new ArrayList<>();
    }
    this.otherMatches.add(otherMatchesItem);
    return this;
  }

  /**
   * Other types found within this column. List will be unordered.
   * @return otherMatches
   */
  @javax.annotation.Nullable
  public List<GooglePrivacyDlpV2OtherInfoTypeSummary> getOtherMatches() {
    return otherMatches;
  }

  public void setOtherMatches(List<GooglePrivacyDlpV2OtherInfoTypeSummary> otherMatches) {
    this.otherMatches = otherMatches;
  }


  public GooglePrivacyDlpV2ColumnDataProfile policyState(PolicyStateEnum policyState) {
    this.policyState = policyState;
    return this;
  }

  /**
   * Indicates if a policy tag has been applied to the column.
   * @return policyState
   */
  @javax.annotation.Nullable
  public PolicyStateEnum getPolicyState() {
    return policyState;
  }

  public void setPolicyState(PolicyStateEnum policyState) {
    this.policyState = policyState;
  }


  public GooglePrivacyDlpV2ColumnDataProfile profileLastGenerated(String profileLastGenerated) {
    this.profileLastGenerated = profileLastGenerated;
    return this;
  }

  /**
   * The last time the profile was generated.
   * @return profileLastGenerated
   */
  @javax.annotation.Nullable
  public String getProfileLastGenerated() {
    return profileLastGenerated;
  }

  public void setProfileLastGenerated(String profileLastGenerated) {
    this.profileLastGenerated = profileLastGenerated;
  }


  public GooglePrivacyDlpV2ColumnDataProfile profileStatus(GooglePrivacyDlpV2ProfileStatus profileStatus) {
    this.profileStatus = profileStatus;
    return this;
  }

  /**
   * Get profileStatus
   * @return profileStatus
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2ProfileStatus getProfileStatus() {
    return profileStatus;
  }

  public void setProfileStatus(GooglePrivacyDlpV2ProfileStatus profileStatus) {
    this.profileStatus = profileStatus;
  }


  public GooglePrivacyDlpV2ColumnDataProfile sensitivityScore(GooglePrivacyDlpV2SensitivityScore sensitivityScore) {
    this.sensitivityScore = sensitivityScore;
    return this;
  }

  /**
   * Get sensitivityScore
   * @return sensitivityScore
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2SensitivityScore getSensitivityScore() {
    return sensitivityScore;
  }

  public void setSensitivityScore(GooglePrivacyDlpV2SensitivityScore sensitivityScore) {
    this.sensitivityScore = sensitivityScore;
  }


  public GooglePrivacyDlpV2ColumnDataProfile state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * State of a profile.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  public GooglePrivacyDlpV2ColumnDataProfile tableDataProfile(String tableDataProfile) {
    this.tableDataProfile = tableDataProfile;
    return this;
  }

  /**
   * The resource name of the table data profile.
   * @return tableDataProfile
   */
  @javax.annotation.Nullable
  public String getTableDataProfile() {
    return tableDataProfile;
  }

  public void setTableDataProfile(String tableDataProfile) {
    this.tableDataProfile = tableDataProfile;
  }


  public GooglePrivacyDlpV2ColumnDataProfile tableFullResource(String tableFullResource) {
    this.tableFullResource = tableFullResource;
    return this;
  }

  /**
   * The resource name of the resource this column is within.
   * @return tableFullResource
   */
  @javax.annotation.Nullable
  public String getTableFullResource() {
    return tableFullResource;
  }

  public void setTableFullResource(String tableFullResource) {
    this.tableFullResource = tableFullResource;
  }


  public GooglePrivacyDlpV2ColumnDataProfile tableId(String tableId) {
    this.tableId = tableId;
    return this;
  }

  /**
   * The BigQuery table ID.
   * @return tableId
   */
  @javax.annotation.Nullable
  public String getTableId() {
    return tableId;
  }

  public void setTableId(String tableId) {
    this.tableId = tableId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePrivacyDlpV2ColumnDataProfile googlePrivacyDlpV2ColumnDataProfile = (GooglePrivacyDlpV2ColumnDataProfile) o;
    return Objects.equals(this.column, googlePrivacyDlpV2ColumnDataProfile.column) &&
        Objects.equals(this.columnInfoType, googlePrivacyDlpV2ColumnDataProfile.columnInfoType) &&
        Objects.equals(this.columnType, googlePrivacyDlpV2ColumnDataProfile.columnType) &&
        Objects.equals(this.dataRiskLevel, googlePrivacyDlpV2ColumnDataProfile.dataRiskLevel) &&
        Objects.equals(this.datasetId, googlePrivacyDlpV2ColumnDataProfile.datasetId) &&
        Objects.equals(this.datasetLocation, googlePrivacyDlpV2ColumnDataProfile.datasetLocation) &&
        Objects.equals(this.datasetProjectId, googlePrivacyDlpV2ColumnDataProfile.datasetProjectId) &&
        Objects.equals(this.estimatedNullPercentage, googlePrivacyDlpV2ColumnDataProfile.estimatedNullPercentage) &&
        Objects.equals(this.estimatedUniquenessScore, googlePrivacyDlpV2ColumnDataProfile.estimatedUniquenessScore) &&
        Objects.equals(this.freeTextScore, googlePrivacyDlpV2ColumnDataProfile.freeTextScore) &&
        Objects.equals(this.name, googlePrivacyDlpV2ColumnDataProfile.name) &&
        Objects.equals(this.otherMatches, googlePrivacyDlpV2ColumnDataProfile.otherMatches) &&
        Objects.equals(this.policyState, googlePrivacyDlpV2ColumnDataProfile.policyState) &&
        Objects.equals(this.profileLastGenerated, googlePrivacyDlpV2ColumnDataProfile.profileLastGenerated) &&
        Objects.equals(this.profileStatus, googlePrivacyDlpV2ColumnDataProfile.profileStatus) &&
        Objects.equals(this.sensitivityScore, googlePrivacyDlpV2ColumnDataProfile.sensitivityScore) &&
        Objects.equals(this.state, googlePrivacyDlpV2ColumnDataProfile.state) &&
        Objects.equals(this.tableDataProfile, googlePrivacyDlpV2ColumnDataProfile.tableDataProfile) &&
        Objects.equals(this.tableFullResource, googlePrivacyDlpV2ColumnDataProfile.tableFullResource) &&
        Objects.equals(this.tableId, googlePrivacyDlpV2ColumnDataProfile.tableId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(column, columnInfoType, columnType, dataRiskLevel, datasetId, datasetLocation, datasetProjectId, estimatedNullPercentage, estimatedUniquenessScore, freeTextScore, name, otherMatches, policyState, profileLastGenerated, profileStatus, sensitivityScore, state, tableDataProfile, tableFullResource, tableId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePrivacyDlpV2ColumnDataProfile {\n");
    sb.append("    column: ").append(toIndentedString(column)).append("\n");
    sb.append("    columnInfoType: ").append(toIndentedString(columnInfoType)).append("\n");
    sb.append("    columnType: ").append(toIndentedString(columnType)).append("\n");
    sb.append("    dataRiskLevel: ").append(toIndentedString(dataRiskLevel)).append("\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    datasetLocation: ").append(toIndentedString(datasetLocation)).append("\n");
    sb.append("    datasetProjectId: ").append(toIndentedString(datasetProjectId)).append("\n");
    sb.append("    estimatedNullPercentage: ").append(toIndentedString(estimatedNullPercentage)).append("\n");
    sb.append("    estimatedUniquenessScore: ").append(toIndentedString(estimatedUniquenessScore)).append("\n");
    sb.append("    freeTextScore: ").append(toIndentedString(freeTextScore)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    otherMatches: ").append(toIndentedString(otherMatches)).append("\n");
    sb.append("    policyState: ").append(toIndentedString(policyState)).append("\n");
    sb.append("    profileLastGenerated: ").append(toIndentedString(profileLastGenerated)).append("\n");
    sb.append("    profileStatus: ").append(toIndentedString(profileStatus)).append("\n");
    sb.append("    sensitivityScore: ").append(toIndentedString(sensitivityScore)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    tableDataProfile: ").append(toIndentedString(tableDataProfile)).append("\n");
    sb.append("    tableFullResource: ").append(toIndentedString(tableFullResource)).append("\n");
    sb.append("    tableId: ").append(toIndentedString(tableId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("column");
    openapiFields.add("columnInfoType");
    openapiFields.add("columnType");
    openapiFields.add("dataRiskLevel");
    openapiFields.add("datasetId");
    openapiFields.add("datasetLocation");
    openapiFields.add("datasetProjectId");
    openapiFields.add("estimatedNullPercentage");
    openapiFields.add("estimatedUniquenessScore");
    openapiFields.add("freeTextScore");
    openapiFields.add("name");
    openapiFields.add("otherMatches");
    openapiFields.add("policyState");
    openapiFields.add("profileLastGenerated");
    openapiFields.add("profileStatus");
    openapiFields.add("sensitivityScore");
    openapiFields.add("state");
    openapiFields.add("tableDataProfile");
    openapiFields.add("tableFullResource");
    openapiFields.add("tableId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePrivacyDlpV2ColumnDataProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePrivacyDlpV2ColumnDataProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePrivacyDlpV2ColumnDataProfile is not found in the empty JSON string", GooglePrivacyDlpV2ColumnDataProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePrivacyDlpV2ColumnDataProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePrivacyDlpV2ColumnDataProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("column") != null && !jsonObj.get("column").isJsonNull()) && !jsonObj.get("column").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `column` to be a primitive type in the JSON string but got `%s`", jsonObj.get("column").toString()));
      }
      // validate the optional field `columnInfoType`
      if (jsonObj.get("columnInfoType") != null && !jsonObj.get("columnInfoType").isJsonNull()) {
        GooglePrivacyDlpV2InfoTypeSummary.validateJsonElement(jsonObj.get("columnInfoType"));
      }
      if ((jsonObj.get("columnType") != null && !jsonObj.get("columnType").isJsonNull()) && !jsonObj.get("columnType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `columnType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("columnType").toString()));
      }
      // validate the optional field `columnType`
      if (jsonObj.get("columnType") != null && !jsonObj.get("columnType").isJsonNull()) {
        ColumnTypeEnum.validateJsonElement(jsonObj.get("columnType"));
      }
      // validate the optional field `dataRiskLevel`
      if (jsonObj.get("dataRiskLevel") != null && !jsonObj.get("dataRiskLevel").isJsonNull()) {
        GooglePrivacyDlpV2DataRiskLevel.validateJsonElement(jsonObj.get("dataRiskLevel"));
      }
      if ((jsonObj.get("datasetId") != null && !jsonObj.get("datasetId").isJsonNull()) && !jsonObj.get("datasetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datasetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datasetId").toString()));
      }
      if ((jsonObj.get("datasetLocation") != null && !jsonObj.get("datasetLocation").isJsonNull()) && !jsonObj.get("datasetLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datasetLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datasetLocation").toString()));
      }
      if ((jsonObj.get("datasetProjectId") != null && !jsonObj.get("datasetProjectId").isJsonNull()) && !jsonObj.get("datasetProjectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datasetProjectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datasetProjectId").toString()));
      }
      if ((jsonObj.get("estimatedNullPercentage") != null && !jsonObj.get("estimatedNullPercentage").isJsonNull()) && !jsonObj.get("estimatedNullPercentage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `estimatedNullPercentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("estimatedNullPercentage").toString()));
      }
      // validate the optional field `estimatedNullPercentage`
      if (jsonObj.get("estimatedNullPercentage") != null && !jsonObj.get("estimatedNullPercentage").isJsonNull()) {
        EstimatedNullPercentageEnum.validateJsonElement(jsonObj.get("estimatedNullPercentage"));
      }
      if ((jsonObj.get("estimatedUniquenessScore") != null && !jsonObj.get("estimatedUniquenessScore").isJsonNull()) && !jsonObj.get("estimatedUniquenessScore").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `estimatedUniquenessScore` to be a primitive type in the JSON string but got `%s`", jsonObj.get("estimatedUniquenessScore").toString()));
      }
      // validate the optional field `estimatedUniquenessScore`
      if (jsonObj.get("estimatedUniquenessScore") != null && !jsonObj.get("estimatedUniquenessScore").isJsonNull()) {
        EstimatedUniquenessScoreEnum.validateJsonElement(jsonObj.get("estimatedUniquenessScore"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("otherMatches") != null && !jsonObj.get("otherMatches").isJsonNull()) {
        JsonArray jsonArrayotherMatches = jsonObj.getAsJsonArray("otherMatches");
        if (jsonArrayotherMatches != null) {
          // ensure the json data is an array
          if (!jsonObj.get("otherMatches").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `otherMatches` to be an array in the JSON string but got `%s`", jsonObj.get("otherMatches").toString()));
          }

          // validate the optional field `otherMatches` (array)
          for (int i = 0; i < jsonArrayotherMatches.size(); i++) {
            GooglePrivacyDlpV2OtherInfoTypeSummary.validateJsonElement(jsonArrayotherMatches.get(i));
          };
        }
      }
      if ((jsonObj.get("policyState") != null && !jsonObj.get("policyState").isJsonNull()) && !jsonObj.get("policyState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policyState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policyState").toString()));
      }
      // validate the optional field `policyState`
      if (jsonObj.get("policyState") != null && !jsonObj.get("policyState").isJsonNull()) {
        PolicyStateEnum.validateJsonElement(jsonObj.get("policyState"));
      }
      if ((jsonObj.get("profileLastGenerated") != null && !jsonObj.get("profileLastGenerated").isJsonNull()) && !jsonObj.get("profileLastGenerated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileLastGenerated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profileLastGenerated").toString()));
      }
      // validate the optional field `profileStatus`
      if (jsonObj.get("profileStatus") != null && !jsonObj.get("profileStatus").isJsonNull()) {
        GooglePrivacyDlpV2ProfileStatus.validateJsonElement(jsonObj.get("profileStatus"));
      }
      // validate the optional field `sensitivityScore`
      if (jsonObj.get("sensitivityScore") != null && !jsonObj.get("sensitivityScore").isJsonNull()) {
        GooglePrivacyDlpV2SensitivityScore.validateJsonElement(jsonObj.get("sensitivityScore"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("tableDataProfile") != null && !jsonObj.get("tableDataProfile").isJsonNull()) && !jsonObj.get("tableDataProfile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tableDataProfile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tableDataProfile").toString()));
      }
      if ((jsonObj.get("tableFullResource") != null && !jsonObj.get("tableFullResource").isJsonNull()) && !jsonObj.get("tableFullResource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tableFullResource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tableFullResource").toString()));
      }
      if ((jsonObj.get("tableId") != null && !jsonObj.get("tableId").isJsonNull()) && !jsonObj.get("tableId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tableId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tableId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePrivacyDlpV2ColumnDataProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePrivacyDlpV2ColumnDataProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePrivacyDlpV2ColumnDataProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePrivacyDlpV2ColumnDataProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePrivacyDlpV2ColumnDataProfile>() {
           @Override
           public void write(JsonWriter out, GooglePrivacyDlpV2ColumnDataProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePrivacyDlpV2ColumnDataProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePrivacyDlpV2ColumnDataProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePrivacyDlpV2ColumnDataProfile
   * @throws IOException if the JSON string is invalid with respect to GooglePrivacyDlpV2ColumnDataProfile
   */
  public static GooglePrivacyDlpV2ColumnDataProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePrivacyDlpV2ColumnDataProfile.class);
  }

  /**
   * Convert an instance of GooglePrivacyDlpV2ColumnDataProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

