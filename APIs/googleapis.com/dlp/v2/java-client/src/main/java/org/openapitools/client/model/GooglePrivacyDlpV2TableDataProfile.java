/*
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GooglePrivacyDlpV2DataProfileConfigSnapshot;
import org.openapitools.client.model.GooglePrivacyDlpV2DataRiskLevel;
import org.openapitools.client.model.GooglePrivacyDlpV2DataSourceType;
import org.openapitools.client.model.GooglePrivacyDlpV2InfoTypeSummary;
import org.openapitools.client.model.GooglePrivacyDlpV2OtherInfoTypeSummary;
import org.openapitools.client.model.GooglePrivacyDlpV2ProfileStatus;
import org.openapitools.client.model.GooglePrivacyDlpV2SensitivityScore;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The profile for a scanned table.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:39.298775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePrivacyDlpV2TableDataProfile {
  public static final String SERIALIZED_NAME_CONFIG_SNAPSHOT = "configSnapshot";
  @SerializedName(SERIALIZED_NAME_CONFIG_SNAPSHOT)
  private GooglePrivacyDlpV2DataProfileConfigSnapshot configSnapshot;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DATA_RISK_LEVEL = "dataRiskLevel";
  @SerializedName(SERIALIZED_NAME_DATA_RISK_LEVEL)
  private GooglePrivacyDlpV2DataRiskLevel dataRiskLevel;

  public static final String SERIALIZED_NAME_DATA_SOURCE_TYPE = "dataSourceType";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCE_TYPE)
  private GooglePrivacyDlpV2DataSourceType dataSourceType;

  public static final String SERIALIZED_NAME_DATASET_ID = "datasetId";
  @SerializedName(SERIALIZED_NAME_DATASET_ID)
  private String datasetId;

  public static final String SERIALIZED_NAME_DATASET_LOCATION = "datasetLocation";
  @SerializedName(SERIALIZED_NAME_DATASET_LOCATION)
  private String datasetLocation;

  public static final String SERIALIZED_NAME_DATASET_PROJECT_ID = "datasetProjectId";
  @SerializedName(SERIALIZED_NAME_DATASET_PROJECT_ID)
  private String datasetProjectId;

  /**
   * How the table is encrypted.
   */
  @JsonAdapter(EncryptionStatusEnum.Adapter.class)
  public enum EncryptionStatusEnum {
    STATUS_UNSPECIFIED("ENCRYPTION_STATUS_UNSPECIFIED"),
    
    GOOGLE_MANAGED("ENCRYPTION_GOOGLE_MANAGED"),
    
    CUSTOMER_MANAGED("ENCRYPTION_CUSTOMER_MANAGED");

    private String value;

    EncryptionStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EncryptionStatusEnum fromValue(String value) {
      for (EncryptionStatusEnum b : EncryptionStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EncryptionStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EncryptionStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EncryptionStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EncryptionStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EncryptionStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENCRYPTION_STATUS = "encryptionStatus";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_STATUS)
  private EncryptionStatusEnum encryptionStatus;

  public static final String SERIALIZED_NAME_EXPIRATION_TIME = "expirationTime";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_TIME)
  private String expirationTime;

  public static final String SERIALIZED_NAME_FAILED_COLUMN_COUNT = "failedColumnCount";
  @SerializedName(SERIALIZED_NAME_FAILED_COLUMN_COUNT)
  private String failedColumnCount;

  public static final String SERIALIZED_NAME_FULL_RESOURCE = "fullResource";
  @SerializedName(SERIALIZED_NAME_FULL_RESOURCE)
  private String fullResource;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "lastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private String lastModifiedTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OTHER_INFO_TYPES = "otherInfoTypes";
  @SerializedName(SERIALIZED_NAME_OTHER_INFO_TYPES)
  private List<GooglePrivacyDlpV2OtherInfoTypeSummary> otherInfoTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_PREDICTED_INFO_TYPES = "predictedInfoTypes";
  @SerializedName(SERIALIZED_NAME_PREDICTED_INFO_TYPES)
  private List<GooglePrivacyDlpV2InfoTypeSummary> predictedInfoTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROFILE_LAST_GENERATED = "profileLastGenerated";
  @SerializedName(SERIALIZED_NAME_PROFILE_LAST_GENERATED)
  private String profileLastGenerated;

  public static final String SERIALIZED_NAME_PROFILE_STATUS = "profileStatus";
  @SerializedName(SERIALIZED_NAME_PROFILE_STATUS)
  private GooglePrivacyDlpV2ProfileStatus profileStatus;

  public static final String SERIALIZED_NAME_PROJECT_DATA_PROFILE = "projectDataProfile";
  @SerializedName(SERIALIZED_NAME_PROJECT_DATA_PROFILE)
  private String projectDataProfile;

  public static final String SERIALIZED_NAME_RESOURCE_LABELS = "resourceLabels";
  @SerializedName(SERIALIZED_NAME_RESOURCE_LABELS)
  private Map<String, String> resourceLabels = new HashMap<>();

  /**
   * How broadly a resource has been shared.
   */
  @JsonAdapter(ResourceVisibilityEnum.Adapter.class)
  public enum ResourceVisibilityEnum {
    UNSPECIFIED("RESOURCE_VISIBILITY_UNSPECIFIED"),
    
    PUBLIC("RESOURCE_VISIBILITY_PUBLIC"),
    
    RESTRICTED("RESOURCE_VISIBILITY_RESTRICTED");

    private String value;

    ResourceVisibilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResourceVisibilityEnum fromValue(String value) {
      for (ResourceVisibilityEnum b : ResourceVisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResourceVisibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResourceVisibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResourceVisibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResourceVisibilityEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ResourceVisibilityEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RESOURCE_VISIBILITY = "resourceVisibility";
  @SerializedName(SERIALIZED_NAME_RESOURCE_VISIBILITY)
  private ResourceVisibilityEnum resourceVisibility;

  public static final String SERIALIZED_NAME_ROW_COUNT = "rowCount";
  @SerializedName(SERIALIZED_NAME_ROW_COUNT)
  private String rowCount;

  public static final String SERIALIZED_NAME_SCANNED_COLUMN_COUNT = "scannedColumnCount";
  @SerializedName(SERIALIZED_NAME_SCANNED_COLUMN_COUNT)
  private String scannedColumnCount;

  public static final String SERIALIZED_NAME_SENSITIVITY_SCORE = "sensitivityScore";
  @SerializedName(SERIALIZED_NAME_SENSITIVITY_SCORE)
  private GooglePrivacyDlpV2SensitivityScore sensitivityScore;

  /**
   * State of a profile.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    RUNNING("RUNNING"),
    
    DONE("DONE");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TABLE_ID = "tableId";
  @SerializedName(SERIALIZED_NAME_TABLE_ID)
  private String tableId;

  public static final String SERIALIZED_NAME_TABLE_SIZE_BYTES = "tableSizeBytes";
  @SerializedName(SERIALIZED_NAME_TABLE_SIZE_BYTES)
  private String tableSizeBytes;

  public GooglePrivacyDlpV2TableDataProfile() {
  }

  public GooglePrivacyDlpV2TableDataProfile configSnapshot(GooglePrivacyDlpV2DataProfileConfigSnapshot configSnapshot) {
    this.configSnapshot = configSnapshot;
    return this;
  }

  /**
   * Get configSnapshot
   * @return configSnapshot
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2DataProfileConfigSnapshot getConfigSnapshot() {
    return configSnapshot;
  }

  public void setConfigSnapshot(GooglePrivacyDlpV2DataProfileConfigSnapshot configSnapshot) {
    this.configSnapshot = configSnapshot;
  }


  public GooglePrivacyDlpV2TableDataProfile createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * The time at which the table was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GooglePrivacyDlpV2TableDataProfile dataRiskLevel(GooglePrivacyDlpV2DataRiskLevel dataRiskLevel) {
    this.dataRiskLevel = dataRiskLevel;
    return this;
  }

  /**
   * Get dataRiskLevel
   * @return dataRiskLevel
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2DataRiskLevel getDataRiskLevel() {
    return dataRiskLevel;
  }

  public void setDataRiskLevel(GooglePrivacyDlpV2DataRiskLevel dataRiskLevel) {
    this.dataRiskLevel = dataRiskLevel;
  }


  public GooglePrivacyDlpV2TableDataProfile dataSourceType(GooglePrivacyDlpV2DataSourceType dataSourceType) {
    this.dataSourceType = dataSourceType;
    return this;
  }

  /**
   * Get dataSourceType
   * @return dataSourceType
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2DataSourceType getDataSourceType() {
    return dataSourceType;
  }

  public void setDataSourceType(GooglePrivacyDlpV2DataSourceType dataSourceType) {
    this.dataSourceType = dataSourceType;
  }


  public GooglePrivacyDlpV2TableDataProfile datasetId(String datasetId) {
    this.datasetId = datasetId;
    return this;
  }

  /**
   * If the resource is BigQuery, the dataset ID.
   * @return datasetId
   */
  @javax.annotation.Nullable
  public String getDatasetId() {
    return datasetId;
  }

  public void setDatasetId(String datasetId) {
    this.datasetId = datasetId;
  }


  public GooglePrivacyDlpV2TableDataProfile datasetLocation(String datasetLocation) {
    this.datasetLocation = datasetLocation;
    return this;
  }

  /**
   * If supported, the location where the dataset&#39;s data is stored. See https://cloud.google.com/bigquery/docs/locations for supported locations.
   * @return datasetLocation
   */
  @javax.annotation.Nullable
  public String getDatasetLocation() {
    return datasetLocation;
  }

  public void setDatasetLocation(String datasetLocation) {
    this.datasetLocation = datasetLocation;
  }


  public GooglePrivacyDlpV2TableDataProfile datasetProjectId(String datasetProjectId) {
    this.datasetProjectId = datasetProjectId;
    return this;
  }

  /**
   * The Google Cloud project ID that owns the resource.
   * @return datasetProjectId
   */
  @javax.annotation.Nullable
  public String getDatasetProjectId() {
    return datasetProjectId;
  }

  public void setDatasetProjectId(String datasetProjectId) {
    this.datasetProjectId = datasetProjectId;
  }


  public GooglePrivacyDlpV2TableDataProfile encryptionStatus(EncryptionStatusEnum encryptionStatus) {
    this.encryptionStatus = encryptionStatus;
    return this;
  }

  /**
   * How the table is encrypted.
   * @return encryptionStatus
   */
  @javax.annotation.Nullable
  public EncryptionStatusEnum getEncryptionStatus() {
    return encryptionStatus;
  }

  public void setEncryptionStatus(EncryptionStatusEnum encryptionStatus) {
    this.encryptionStatus = encryptionStatus;
  }


  public GooglePrivacyDlpV2TableDataProfile expirationTime(String expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

  /**
   * Optional. The time when this table expires.
   * @return expirationTime
   */
  @javax.annotation.Nullable
  public String getExpirationTime() {
    return expirationTime;
  }

  public void setExpirationTime(String expirationTime) {
    this.expirationTime = expirationTime;
  }


  public GooglePrivacyDlpV2TableDataProfile failedColumnCount(String failedColumnCount) {
    this.failedColumnCount = failedColumnCount;
    return this;
  }

  /**
   * The number of columns skipped in the table because of an error.
   * @return failedColumnCount
   */
  @javax.annotation.Nullable
  public String getFailedColumnCount() {
    return failedColumnCount;
  }

  public void setFailedColumnCount(String failedColumnCount) {
    this.failedColumnCount = failedColumnCount;
  }


  public GooglePrivacyDlpV2TableDataProfile fullResource(String fullResource) {
    this.fullResource = fullResource;
    return this;
  }

  /**
   * The resource name of the resource profiled. https://cloud.google.com/apis/design/resource_names#full_resource_name
   * @return fullResource
   */
  @javax.annotation.Nullable
  public String getFullResource() {
    return fullResource;
  }

  public void setFullResource(String fullResource) {
    this.fullResource = fullResource;
  }


  public GooglePrivacyDlpV2TableDataProfile lastModifiedTime(String lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * The time when this table was last modified
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public String getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(String lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public GooglePrivacyDlpV2TableDataProfile name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the profile.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GooglePrivacyDlpV2TableDataProfile otherInfoTypes(List<GooglePrivacyDlpV2OtherInfoTypeSummary> otherInfoTypes) {
    this.otherInfoTypes = otherInfoTypes;
    return this;
  }

  public GooglePrivacyDlpV2TableDataProfile addOtherInfoTypesItem(GooglePrivacyDlpV2OtherInfoTypeSummary otherInfoTypesItem) {
    if (this.otherInfoTypes == null) {
      this.otherInfoTypes = new ArrayList<>();
    }
    this.otherInfoTypes.add(otherInfoTypesItem);
    return this;
  }

  /**
   * Other infoTypes found in this table&#39;s data.
   * @return otherInfoTypes
   */
  @javax.annotation.Nullable
  public List<GooglePrivacyDlpV2OtherInfoTypeSummary> getOtherInfoTypes() {
    return otherInfoTypes;
  }

  public void setOtherInfoTypes(List<GooglePrivacyDlpV2OtherInfoTypeSummary> otherInfoTypes) {
    this.otherInfoTypes = otherInfoTypes;
  }


  public GooglePrivacyDlpV2TableDataProfile predictedInfoTypes(List<GooglePrivacyDlpV2InfoTypeSummary> predictedInfoTypes) {
    this.predictedInfoTypes = predictedInfoTypes;
    return this;
  }

  public GooglePrivacyDlpV2TableDataProfile addPredictedInfoTypesItem(GooglePrivacyDlpV2InfoTypeSummary predictedInfoTypesItem) {
    if (this.predictedInfoTypes == null) {
      this.predictedInfoTypes = new ArrayList<>();
    }
    this.predictedInfoTypes.add(predictedInfoTypesItem);
    return this;
  }

  /**
   * The infoTypes predicted from this table&#39;s data.
   * @return predictedInfoTypes
   */
  @javax.annotation.Nullable
  public List<GooglePrivacyDlpV2InfoTypeSummary> getPredictedInfoTypes() {
    return predictedInfoTypes;
  }

  public void setPredictedInfoTypes(List<GooglePrivacyDlpV2InfoTypeSummary> predictedInfoTypes) {
    this.predictedInfoTypes = predictedInfoTypes;
  }


  public GooglePrivacyDlpV2TableDataProfile profileLastGenerated(String profileLastGenerated) {
    this.profileLastGenerated = profileLastGenerated;
    return this;
  }

  /**
   * The last time the profile was generated.
   * @return profileLastGenerated
   */
  @javax.annotation.Nullable
  public String getProfileLastGenerated() {
    return profileLastGenerated;
  }

  public void setProfileLastGenerated(String profileLastGenerated) {
    this.profileLastGenerated = profileLastGenerated;
  }


  public GooglePrivacyDlpV2TableDataProfile profileStatus(GooglePrivacyDlpV2ProfileStatus profileStatus) {
    this.profileStatus = profileStatus;
    return this;
  }

  /**
   * Get profileStatus
   * @return profileStatus
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2ProfileStatus getProfileStatus() {
    return profileStatus;
  }

  public void setProfileStatus(GooglePrivacyDlpV2ProfileStatus profileStatus) {
    this.profileStatus = profileStatus;
  }


  public GooglePrivacyDlpV2TableDataProfile projectDataProfile(String projectDataProfile) {
    this.projectDataProfile = projectDataProfile;
    return this;
  }

  /**
   * The resource name to the project data profile for this table.
   * @return projectDataProfile
   */
  @javax.annotation.Nullable
  public String getProjectDataProfile() {
    return projectDataProfile;
  }

  public void setProjectDataProfile(String projectDataProfile) {
    this.projectDataProfile = projectDataProfile;
  }


  public GooglePrivacyDlpV2TableDataProfile resourceLabels(Map<String, String> resourceLabels) {
    this.resourceLabels = resourceLabels;
    return this;
  }

  public GooglePrivacyDlpV2TableDataProfile putResourceLabelsItem(String key, String resourceLabelsItem) {
    if (this.resourceLabels == null) {
      this.resourceLabels = new HashMap<>();
    }
    this.resourceLabels.put(key, resourceLabelsItem);
    return this;
  }

  /**
   * The labels applied to the resource at the time the profile was generated.
   * @return resourceLabels
   */
  @javax.annotation.Nullable
  public Map<String, String> getResourceLabels() {
    return resourceLabels;
  }

  public void setResourceLabels(Map<String, String> resourceLabels) {
    this.resourceLabels = resourceLabels;
  }


  public GooglePrivacyDlpV2TableDataProfile resourceVisibility(ResourceVisibilityEnum resourceVisibility) {
    this.resourceVisibility = resourceVisibility;
    return this;
  }

  /**
   * How broadly a resource has been shared.
   * @return resourceVisibility
   */
  @javax.annotation.Nullable
  public ResourceVisibilityEnum getResourceVisibility() {
    return resourceVisibility;
  }

  public void setResourceVisibility(ResourceVisibilityEnum resourceVisibility) {
    this.resourceVisibility = resourceVisibility;
  }


  public GooglePrivacyDlpV2TableDataProfile rowCount(String rowCount) {
    this.rowCount = rowCount;
    return this;
  }

  /**
   * Number of rows in the table when the profile was generated. This will not be populated for BigLake tables.
   * @return rowCount
   */
  @javax.annotation.Nullable
  public String getRowCount() {
    return rowCount;
  }

  public void setRowCount(String rowCount) {
    this.rowCount = rowCount;
  }


  public GooglePrivacyDlpV2TableDataProfile scannedColumnCount(String scannedColumnCount) {
    this.scannedColumnCount = scannedColumnCount;
    return this;
  }

  /**
   * The number of columns profiled in the table.
   * @return scannedColumnCount
   */
  @javax.annotation.Nullable
  public String getScannedColumnCount() {
    return scannedColumnCount;
  }

  public void setScannedColumnCount(String scannedColumnCount) {
    this.scannedColumnCount = scannedColumnCount;
  }


  public GooglePrivacyDlpV2TableDataProfile sensitivityScore(GooglePrivacyDlpV2SensitivityScore sensitivityScore) {
    this.sensitivityScore = sensitivityScore;
    return this;
  }

  /**
   * Get sensitivityScore
   * @return sensitivityScore
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2SensitivityScore getSensitivityScore() {
    return sensitivityScore;
  }

  public void setSensitivityScore(GooglePrivacyDlpV2SensitivityScore sensitivityScore) {
    this.sensitivityScore = sensitivityScore;
  }


  public GooglePrivacyDlpV2TableDataProfile state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * State of a profile.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  public GooglePrivacyDlpV2TableDataProfile tableId(String tableId) {
    this.tableId = tableId;
    return this;
  }

  /**
   * If the resource is BigQuery, the BigQuery table ID.
   * @return tableId
   */
  @javax.annotation.Nullable
  public String getTableId() {
    return tableId;
  }

  public void setTableId(String tableId) {
    this.tableId = tableId;
  }


  public GooglePrivacyDlpV2TableDataProfile tableSizeBytes(String tableSizeBytes) {
    this.tableSizeBytes = tableSizeBytes;
    return this;
  }

  /**
   * The size of the table when the profile was generated.
   * @return tableSizeBytes
   */
  @javax.annotation.Nullable
  public String getTableSizeBytes() {
    return tableSizeBytes;
  }

  public void setTableSizeBytes(String tableSizeBytes) {
    this.tableSizeBytes = tableSizeBytes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePrivacyDlpV2TableDataProfile googlePrivacyDlpV2TableDataProfile = (GooglePrivacyDlpV2TableDataProfile) o;
    return Objects.equals(this.configSnapshot, googlePrivacyDlpV2TableDataProfile.configSnapshot) &&
        Objects.equals(this.createTime, googlePrivacyDlpV2TableDataProfile.createTime) &&
        Objects.equals(this.dataRiskLevel, googlePrivacyDlpV2TableDataProfile.dataRiskLevel) &&
        Objects.equals(this.dataSourceType, googlePrivacyDlpV2TableDataProfile.dataSourceType) &&
        Objects.equals(this.datasetId, googlePrivacyDlpV2TableDataProfile.datasetId) &&
        Objects.equals(this.datasetLocation, googlePrivacyDlpV2TableDataProfile.datasetLocation) &&
        Objects.equals(this.datasetProjectId, googlePrivacyDlpV2TableDataProfile.datasetProjectId) &&
        Objects.equals(this.encryptionStatus, googlePrivacyDlpV2TableDataProfile.encryptionStatus) &&
        Objects.equals(this.expirationTime, googlePrivacyDlpV2TableDataProfile.expirationTime) &&
        Objects.equals(this.failedColumnCount, googlePrivacyDlpV2TableDataProfile.failedColumnCount) &&
        Objects.equals(this.fullResource, googlePrivacyDlpV2TableDataProfile.fullResource) &&
        Objects.equals(this.lastModifiedTime, googlePrivacyDlpV2TableDataProfile.lastModifiedTime) &&
        Objects.equals(this.name, googlePrivacyDlpV2TableDataProfile.name) &&
        Objects.equals(this.otherInfoTypes, googlePrivacyDlpV2TableDataProfile.otherInfoTypes) &&
        Objects.equals(this.predictedInfoTypes, googlePrivacyDlpV2TableDataProfile.predictedInfoTypes) &&
        Objects.equals(this.profileLastGenerated, googlePrivacyDlpV2TableDataProfile.profileLastGenerated) &&
        Objects.equals(this.profileStatus, googlePrivacyDlpV2TableDataProfile.profileStatus) &&
        Objects.equals(this.projectDataProfile, googlePrivacyDlpV2TableDataProfile.projectDataProfile) &&
        Objects.equals(this.resourceLabels, googlePrivacyDlpV2TableDataProfile.resourceLabels) &&
        Objects.equals(this.resourceVisibility, googlePrivacyDlpV2TableDataProfile.resourceVisibility) &&
        Objects.equals(this.rowCount, googlePrivacyDlpV2TableDataProfile.rowCount) &&
        Objects.equals(this.scannedColumnCount, googlePrivacyDlpV2TableDataProfile.scannedColumnCount) &&
        Objects.equals(this.sensitivityScore, googlePrivacyDlpV2TableDataProfile.sensitivityScore) &&
        Objects.equals(this.state, googlePrivacyDlpV2TableDataProfile.state) &&
        Objects.equals(this.tableId, googlePrivacyDlpV2TableDataProfile.tableId) &&
        Objects.equals(this.tableSizeBytes, googlePrivacyDlpV2TableDataProfile.tableSizeBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configSnapshot, createTime, dataRiskLevel, dataSourceType, datasetId, datasetLocation, datasetProjectId, encryptionStatus, expirationTime, failedColumnCount, fullResource, lastModifiedTime, name, otherInfoTypes, predictedInfoTypes, profileLastGenerated, profileStatus, projectDataProfile, resourceLabels, resourceVisibility, rowCount, scannedColumnCount, sensitivityScore, state, tableId, tableSizeBytes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePrivacyDlpV2TableDataProfile {\n");
    sb.append("    configSnapshot: ").append(toIndentedString(configSnapshot)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dataRiskLevel: ").append(toIndentedString(dataRiskLevel)).append("\n");
    sb.append("    dataSourceType: ").append(toIndentedString(dataSourceType)).append("\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    datasetLocation: ").append(toIndentedString(datasetLocation)).append("\n");
    sb.append("    datasetProjectId: ").append(toIndentedString(datasetProjectId)).append("\n");
    sb.append("    encryptionStatus: ").append(toIndentedString(encryptionStatus)).append("\n");
    sb.append("    expirationTime: ").append(toIndentedString(expirationTime)).append("\n");
    sb.append("    failedColumnCount: ").append(toIndentedString(failedColumnCount)).append("\n");
    sb.append("    fullResource: ").append(toIndentedString(fullResource)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    otherInfoTypes: ").append(toIndentedString(otherInfoTypes)).append("\n");
    sb.append("    predictedInfoTypes: ").append(toIndentedString(predictedInfoTypes)).append("\n");
    sb.append("    profileLastGenerated: ").append(toIndentedString(profileLastGenerated)).append("\n");
    sb.append("    profileStatus: ").append(toIndentedString(profileStatus)).append("\n");
    sb.append("    projectDataProfile: ").append(toIndentedString(projectDataProfile)).append("\n");
    sb.append("    resourceLabels: ").append(toIndentedString(resourceLabels)).append("\n");
    sb.append("    resourceVisibility: ").append(toIndentedString(resourceVisibility)).append("\n");
    sb.append("    rowCount: ").append(toIndentedString(rowCount)).append("\n");
    sb.append("    scannedColumnCount: ").append(toIndentedString(scannedColumnCount)).append("\n");
    sb.append("    sensitivityScore: ").append(toIndentedString(sensitivityScore)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    tableId: ").append(toIndentedString(tableId)).append("\n");
    sb.append("    tableSizeBytes: ").append(toIndentedString(tableSizeBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("configSnapshot");
    openapiFields.add("createTime");
    openapiFields.add("dataRiskLevel");
    openapiFields.add("dataSourceType");
    openapiFields.add("datasetId");
    openapiFields.add("datasetLocation");
    openapiFields.add("datasetProjectId");
    openapiFields.add("encryptionStatus");
    openapiFields.add("expirationTime");
    openapiFields.add("failedColumnCount");
    openapiFields.add("fullResource");
    openapiFields.add("lastModifiedTime");
    openapiFields.add("name");
    openapiFields.add("otherInfoTypes");
    openapiFields.add("predictedInfoTypes");
    openapiFields.add("profileLastGenerated");
    openapiFields.add("profileStatus");
    openapiFields.add("projectDataProfile");
    openapiFields.add("resourceLabels");
    openapiFields.add("resourceVisibility");
    openapiFields.add("rowCount");
    openapiFields.add("scannedColumnCount");
    openapiFields.add("sensitivityScore");
    openapiFields.add("state");
    openapiFields.add("tableId");
    openapiFields.add("tableSizeBytes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePrivacyDlpV2TableDataProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePrivacyDlpV2TableDataProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePrivacyDlpV2TableDataProfile is not found in the empty JSON string", GooglePrivacyDlpV2TableDataProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePrivacyDlpV2TableDataProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePrivacyDlpV2TableDataProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `configSnapshot`
      if (jsonObj.get("configSnapshot") != null && !jsonObj.get("configSnapshot").isJsonNull()) {
        GooglePrivacyDlpV2DataProfileConfigSnapshot.validateJsonElement(jsonObj.get("configSnapshot"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `dataRiskLevel`
      if (jsonObj.get("dataRiskLevel") != null && !jsonObj.get("dataRiskLevel").isJsonNull()) {
        GooglePrivacyDlpV2DataRiskLevel.validateJsonElement(jsonObj.get("dataRiskLevel"));
      }
      // validate the optional field `dataSourceType`
      if (jsonObj.get("dataSourceType") != null && !jsonObj.get("dataSourceType").isJsonNull()) {
        GooglePrivacyDlpV2DataSourceType.validateJsonElement(jsonObj.get("dataSourceType"));
      }
      if ((jsonObj.get("datasetId") != null && !jsonObj.get("datasetId").isJsonNull()) && !jsonObj.get("datasetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datasetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datasetId").toString()));
      }
      if ((jsonObj.get("datasetLocation") != null && !jsonObj.get("datasetLocation").isJsonNull()) && !jsonObj.get("datasetLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datasetLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datasetLocation").toString()));
      }
      if ((jsonObj.get("datasetProjectId") != null && !jsonObj.get("datasetProjectId").isJsonNull()) && !jsonObj.get("datasetProjectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datasetProjectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datasetProjectId").toString()));
      }
      if ((jsonObj.get("encryptionStatus") != null && !jsonObj.get("encryptionStatus").isJsonNull()) && !jsonObj.get("encryptionStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `encryptionStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("encryptionStatus").toString()));
      }
      // validate the optional field `encryptionStatus`
      if (jsonObj.get("encryptionStatus") != null && !jsonObj.get("encryptionStatus").isJsonNull()) {
        EncryptionStatusEnum.validateJsonElement(jsonObj.get("encryptionStatus"));
      }
      if ((jsonObj.get("expirationTime") != null && !jsonObj.get("expirationTime").isJsonNull()) && !jsonObj.get("expirationTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expirationTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expirationTime").toString()));
      }
      if ((jsonObj.get("failedColumnCount") != null && !jsonObj.get("failedColumnCount").isJsonNull()) && !jsonObj.get("failedColumnCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failedColumnCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failedColumnCount").toString()));
      }
      if ((jsonObj.get("fullResource") != null && !jsonObj.get("fullResource").isJsonNull()) && !jsonObj.get("fullResource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullResource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullResource").toString()));
      }
      if ((jsonObj.get("lastModifiedTime") != null && !jsonObj.get("lastModifiedTime").isJsonNull()) && !jsonObj.get("lastModifiedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedTime").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("otherInfoTypes") != null && !jsonObj.get("otherInfoTypes").isJsonNull()) {
        JsonArray jsonArrayotherInfoTypes = jsonObj.getAsJsonArray("otherInfoTypes");
        if (jsonArrayotherInfoTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("otherInfoTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `otherInfoTypes` to be an array in the JSON string but got `%s`", jsonObj.get("otherInfoTypes").toString()));
          }

          // validate the optional field `otherInfoTypes` (array)
          for (int i = 0; i < jsonArrayotherInfoTypes.size(); i++) {
            GooglePrivacyDlpV2OtherInfoTypeSummary.validateJsonElement(jsonArrayotherInfoTypes.get(i));
          };
        }
      }
      if (jsonObj.get("predictedInfoTypes") != null && !jsonObj.get("predictedInfoTypes").isJsonNull()) {
        JsonArray jsonArraypredictedInfoTypes = jsonObj.getAsJsonArray("predictedInfoTypes");
        if (jsonArraypredictedInfoTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("predictedInfoTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `predictedInfoTypes` to be an array in the JSON string but got `%s`", jsonObj.get("predictedInfoTypes").toString()));
          }

          // validate the optional field `predictedInfoTypes` (array)
          for (int i = 0; i < jsonArraypredictedInfoTypes.size(); i++) {
            GooglePrivacyDlpV2InfoTypeSummary.validateJsonElement(jsonArraypredictedInfoTypes.get(i));
          };
        }
      }
      if ((jsonObj.get("profileLastGenerated") != null && !jsonObj.get("profileLastGenerated").isJsonNull()) && !jsonObj.get("profileLastGenerated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileLastGenerated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profileLastGenerated").toString()));
      }
      // validate the optional field `profileStatus`
      if (jsonObj.get("profileStatus") != null && !jsonObj.get("profileStatus").isJsonNull()) {
        GooglePrivacyDlpV2ProfileStatus.validateJsonElement(jsonObj.get("profileStatus"));
      }
      if ((jsonObj.get("projectDataProfile") != null && !jsonObj.get("projectDataProfile").isJsonNull()) && !jsonObj.get("projectDataProfile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectDataProfile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectDataProfile").toString()));
      }
      if ((jsonObj.get("resourceVisibility") != null && !jsonObj.get("resourceVisibility").isJsonNull()) && !jsonObj.get("resourceVisibility").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceVisibility` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceVisibility").toString()));
      }
      // validate the optional field `resourceVisibility`
      if (jsonObj.get("resourceVisibility") != null && !jsonObj.get("resourceVisibility").isJsonNull()) {
        ResourceVisibilityEnum.validateJsonElement(jsonObj.get("resourceVisibility"));
      }
      if ((jsonObj.get("rowCount") != null && !jsonObj.get("rowCount").isJsonNull()) && !jsonObj.get("rowCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rowCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rowCount").toString()));
      }
      if ((jsonObj.get("scannedColumnCount") != null && !jsonObj.get("scannedColumnCount").isJsonNull()) && !jsonObj.get("scannedColumnCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scannedColumnCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scannedColumnCount").toString()));
      }
      // validate the optional field `sensitivityScore`
      if (jsonObj.get("sensitivityScore") != null && !jsonObj.get("sensitivityScore").isJsonNull()) {
        GooglePrivacyDlpV2SensitivityScore.validateJsonElement(jsonObj.get("sensitivityScore"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("tableId") != null && !jsonObj.get("tableId").isJsonNull()) && !jsonObj.get("tableId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tableId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tableId").toString()));
      }
      if ((jsonObj.get("tableSizeBytes") != null && !jsonObj.get("tableSizeBytes").isJsonNull()) && !jsonObj.get("tableSizeBytes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tableSizeBytes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tableSizeBytes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePrivacyDlpV2TableDataProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePrivacyDlpV2TableDataProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePrivacyDlpV2TableDataProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePrivacyDlpV2TableDataProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePrivacyDlpV2TableDataProfile>() {
           @Override
           public void write(JsonWriter out, GooglePrivacyDlpV2TableDataProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePrivacyDlpV2TableDataProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePrivacyDlpV2TableDataProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePrivacyDlpV2TableDataProfile
   * @throws IOException if the JSON string is invalid with respect to GooglePrivacyDlpV2TableDataProfile
   */
  public static GooglePrivacyDlpV2TableDataProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePrivacyDlpV2TableDataProfile.class);
  }

  /**
   * Convert an instance of GooglePrivacyDlpV2TableDataProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

