/*
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GooglePrivacyDlpV2DataProfileJobConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2DiscoveryConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2InspectConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Snapshot of the configurations used to generate the profile.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:39.298775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePrivacyDlpV2DataProfileConfigSnapshot {
  public static final String SERIALIZED_NAME_DATA_PROFILE_JOB = "dataProfileJob";
  @SerializedName(SERIALIZED_NAME_DATA_PROFILE_JOB)
  private GooglePrivacyDlpV2DataProfileJobConfig dataProfileJob;

  public static final String SERIALIZED_NAME_DISCOVERY_CONFIG = "discoveryConfig";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_CONFIG)
  private GooglePrivacyDlpV2DiscoveryConfig discoveryConfig;

  public static final String SERIALIZED_NAME_INSPECT_CONFIG = "inspectConfig";
  @SerializedName(SERIALIZED_NAME_INSPECT_CONFIG)
  private GooglePrivacyDlpV2InspectConfig inspectConfig;

  public static final String SERIALIZED_NAME_INSPECT_TEMPLATE_MODIFIED_TIME = "inspectTemplateModifiedTime";
  @SerializedName(SERIALIZED_NAME_INSPECT_TEMPLATE_MODIFIED_TIME)
  private String inspectTemplateModifiedTime;

  public static final String SERIALIZED_NAME_INSPECT_TEMPLATE_NAME = "inspectTemplateName";
  @SerializedName(SERIALIZED_NAME_INSPECT_TEMPLATE_NAME)
  private String inspectTemplateName;

  public GooglePrivacyDlpV2DataProfileConfigSnapshot() {
  }

  public GooglePrivacyDlpV2DataProfileConfigSnapshot dataProfileJob(GooglePrivacyDlpV2DataProfileJobConfig dataProfileJob) {
    this.dataProfileJob = dataProfileJob;
    return this;
  }

  /**
   * Get dataProfileJob
   * @return dataProfileJob
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2DataProfileJobConfig getDataProfileJob() {
    return dataProfileJob;
  }

  public void setDataProfileJob(GooglePrivacyDlpV2DataProfileJobConfig dataProfileJob) {
    this.dataProfileJob = dataProfileJob;
  }


  public GooglePrivacyDlpV2DataProfileConfigSnapshot discoveryConfig(GooglePrivacyDlpV2DiscoveryConfig discoveryConfig) {
    this.discoveryConfig = discoveryConfig;
    return this;
  }

  /**
   * Get discoveryConfig
   * @return discoveryConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2DiscoveryConfig getDiscoveryConfig() {
    return discoveryConfig;
  }

  public void setDiscoveryConfig(GooglePrivacyDlpV2DiscoveryConfig discoveryConfig) {
    this.discoveryConfig = discoveryConfig;
  }


  public GooglePrivacyDlpV2DataProfileConfigSnapshot inspectConfig(GooglePrivacyDlpV2InspectConfig inspectConfig) {
    this.inspectConfig = inspectConfig;
    return this;
  }

  /**
   * Get inspectConfig
   * @return inspectConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2InspectConfig getInspectConfig() {
    return inspectConfig;
  }

  public void setInspectConfig(GooglePrivacyDlpV2InspectConfig inspectConfig) {
    this.inspectConfig = inspectConfig;
  }


  public GooglePrivacyDlpV2DataProfileConfigSnapshot inspectTemplateModifiedTime(String inspectTemplateModifiedTime) {
    this.inspectTemplateModifiedTime = inspectTemplateModifiedTime;
    return this;
  }

  /**
   * Timestamp when the template was modified
   * @return inspectTemplateModifiedTime
   */
  @javax.annotation.Nullable
  public String getInspectTemplateModifiedTime() {
    return inspectTemplateModifiedTime;
  }

  public void setInspectTemplateModifiedTime(String inspectTemplateModifiedTime) {
    this.inspectTemplateModifiedTime = inspectTemplateModifiedTime;
  }


  public GooglePrivacyDlpV2DataProfileConfigSnapshot inspectTemplateName(String inspectTemplateName) {
    this.inspectTemplateName = inspectTemplateName;
    return this;
  }

  /**
   * Name of the inspection template used to generate this profile
   * @return inspectTemplateName
   */
  @javax.annotation.Nullable
  public String getInspectTemplateName() {
    return inspectTemplateName;
  }

  public void setInspectTemplateName(String inspectTemplateName) {
    this.inspectTemplateName = inspectTemplateName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePrivacyDlpV2DataProfileConfigSnapshot googlePrivacyDlpV2DataProfileConfigSnapshot = (GooglePrivacyDlpV2DataProfileConfigSnapshot) o;
    return Objects.equals(this.dataProfileJob, googlePrivacyDlpV2DataProfileConfigSnapshot.dataProfileJob) &&
        Objects.equals(this.discoveryConfig, googlePrivacyDlpV2DataProfileConfigSnapshot.discoveryConfig) &&
        Objects.equals(this.inspectConfig, googlePrivacyDlpV2DataProfileConfigSnapshot.inspectConfig) &&
        Objects.equals(this.inspectTemplateModifiedTime, googlePrivacyDlpV2DataProfileConfigSnapshot.inspectTemplateModifiedTime) &&
        Objects.equals(this.inspectTemplateName, googlePrivacyDlpV2DataProfileConfigSnapshot.inspectTemplateName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataProfileJob, discoveryConfig, inspectConfig, inspectTemplateModifiedTime, inspectTemplateName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePrivacyDlpV2DataProfileConfigSnapshot {\n");
    sb.append("    dataProfileJob: ").append(toIndentedString(dataProfileJob)).append("\n");
    sb.append("    discoveryConfig: ").append(toIndentedString(discoveryConfig)).append("\n");
    sb.append("    inspectConfig: ").append(toIndentedString(inspectConfig)).append("\n");
    sb.append("    inspectTemplateModifiedTime: ").append(toIndentedString(inspectTemplateModifiedTime)).append("\n");
    sb.append("    inspectTemplateName: ").append(toIndentedString(inspectTemplateName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataProfileJob");
    openapiFields.add("discoveryConfig");
    openapiFields.add("inspectConfig");
    openapiFields.add("inspectTemplateModifiedTime");
    openapiFields.add("inspectTemplateName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePrivacyDlpV2DataProfileConfigSnapshot
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePrivacyDlpV2DataProfileConfigSnapshot.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePrivacyDlpV2DataProfileConfigSnapshot is not found in the empty JSON string", GooglePrivacyDlpV2DataProfileConfigSnapshot.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePrivacyDlpV2DataProfileConfigSnapshot.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePrivacyDlpV2DataProfileConfigSnapshot` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dataProfileJob`
      if (jsonObj.get("dataProfileJob") != null && !jsonObj.get("dataProfileJob").isJsonNull()) {
        GooglePrivacyDlpV2DataProfileJobConfig.validateJsonElement(jsonObj.get("dataProfileJob"));
      }
      // validate the optional field `discoveryConfig`
      if (jsonObj.get("discoveryConfig") != null && !jsonObj.get("discoveryConfig").isJsonNull()) {
        GooglePrivacyDlpV2DiscoveryConfig.validateJsonElement(jsonObj.get("discoveryConfig"));
      }
      // validate the optional field `inspectConfig`
      if (jsonObj.get("inspectConfig") != null && !jsonObj.get("inspectConfig").isJsonNull()) {
        GooglePrivacyDlpV2InspectConfig.validateJsonElement(jsonObj.get("inspectConfig"));
      }
      if ((jsonObj.get("inspectTemplateModifiedTime") != null && !jsonObj.get("inspectTemplateModifiedTime").isJsonNull()) && !jsonObj.get("inspectTemplateModifiedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inspectTemplateModifiedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inspectTemplateModifiedTime").toString()));
      }
      if ((jsonObj.get("inspectTemplateName") != null && !jsonObj.get("inspectTemplateName").isJsonNull()) && !jsonObj.get("inspectTemplateName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inspectTemplateName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inspectTemplateName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePrivacyDlpV2DataProfileConfigSnapshot.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePrivacyDlpV2DataProfileConfigSnapshot' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePrivacyDlpV2DataProfileConfigSnapshot> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePrivacyDlpV2DataProfileConfigSnapshot.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePrivacyDlpV2DataProfileConfigSnapshot>() {
           @Override
           public void write(JsonWriter out, GooglePrivacyDlpV2DataProfileConfigSnapshot value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePrivacyDlpV2DataProfileConfigSnapshot read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePrivacyDlpV2DataProfileConfigSnapshot given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePrivacyDlpV2DataProfileConfigSnapshot
   * @throws IOException if the JSON string is invalid with respect to GooglePrivacyDlpV2DataProfileConfigSnapshot
   */
  public static GooglePrivacyDlpV2DataProfileConfigSnapshot fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePrivacyDlpV2DataProfileConfigSnapshot.class);
  }

  /**
   * Convert an instance of GooglePrivacyDlpV2DataProfileConfigSnapshot to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

