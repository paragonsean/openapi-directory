/*
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GooglePrivacyDlpV2BucketingConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2CharacterMaskConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2CryptoDeterministicConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2CryptoHashConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2DateShiftConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2FixedSizeBucketingConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2ReplaceDictionaryConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2ReplaceValueConfig;
import org.openapitools.client.model.GooglePrivacyDlpV2TimePartConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A rule for transforming a value.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:39.298775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePrivacyDlpV2PrimitiveTransformation {
  public static final String SERIALIZED_NAME_BUCKETING_CONFIG = "bucketingConfig";
  @SerializedName(SERIALIZED_NAME_BUCKETING_CONFIG)
  private GooglePrivacyDlpV2BucketingConfig bucketingConfig;

  public static final String SERIALIZED_NAME_CHARACTER_MASK_CONFIG = "characterMaskConfig";
  @SerializedName(SERIALIZED_NAME_CHARACTER_MASK_CONFIG)
  private GooglePrivacyDlpV2CharacterMaskConfig characterMaskConfig;

  public static final String SERIALIZED_NAME_CRYPTO_DETERMINISTIC_CONFIG = "cryptoDeterministicConfig";
  @SerializedName(SERIALIZED_NAME_CRYPTO_DETERMINISTIC_CONFIG)
  private GooglePrivacyDlpV2CryptoDeterministicConfig cryptoDeterministicConfig;

  public static final String SERIALIZED_NAME_CRYPTO_HASH_CONFIG = "cryptoHashConfig";
  @SerializedName(SERIALIZED_NAME_CRYPTO_HASH_CONFIG)
  private GooglePrivacyDlpV2CryptoHashConfig cryptoHashConfig;

  public static final String SERIALIZED_NAME_CRYPTO_REPLACE_FFX_FPE_CONFIG = "cryptoReplaceFfxFpeConfig";
  @SerializedName(SERIALIZED_NAME_CRYPTO_REPLACE_FFX_FPE_CONFIG)
  private GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig cryptoReplaceFfxFpeConfig;

  public static final String SERIALIZED_NAME_DATE_SHIFT_CONFIG = "dateShiftConfig";
  @SerializedName(SERIALIZED_NAME_DATE_SHIFT_CONFIG)
  private GooglePrivacyDlpV2DateShiftConfig dateShiftConfig;

  public static final String SERIALIZED_NAME_FIXED_SIZE_BUCKETING_CONFIG = "fixedSizeBucketingConfig";
  @SerializedName(SERIALIZED_NAME_FIXED_SIZE_BUCKETING_CONFIG)
  private GooglePrivacyDlpV2FixedSizeBucketingConfig fixedSizeBucketingConfig;

  public static final String SERIALIZED_NAME_REDACT_CONFIG = "redactConfig";
  @SerializedName(SERIALIZED_NAME_REDACT_CONFIG)
  private Object redactConfig;

  public static final String SERIALIZED_NAME_REPLACE_CONFIG = "replaceConfig";
  @SerializedName(SERIALIZED_NAME_REPLACE_CONFIG)
  private GooglePrivacyDlpV2ReplaceValueConfig replaceConfig;

  public static final String SERIALIZED_NAME_REPLACE_DICTIONARY_CONFIG = "replaceDictionaryConfig";
  @SerializedName(SERIALIZED_NAME_REPLACE_DICTIONARY_CONFIG)
  private GooglePrivacyDlpV2ReplaceDictionaryConfig replaceDictionaryConfig;

  public static final String SERIALIZED_NAME_REPLACE_WITH_INFO_TYPE_CONFIG = "replaceWithInfoTypeConfig";
  @SerializedName(SERIALIZED_NAME_REPLACE_WITH_INFO_TYPE_CONFIG)
  private Object replaceWithInfoTypeConfig;

  public static final String SERIALIZED_NAME_TIME_PART_CONFIG = "timePartConfig";
  @SerializedName(SERIALIZED_NAME_TIME_PART_CONFIG)
  private GooglePrivacyDlpV2TimePartConfig timePartConfig;

  public GooglePrivacyDlpV2PrimitiveTransformation() {
  }

  public GooglePrivacyDlpV2PrimitiveTransformation bucketingConfig(GooglePrivacyDlpV2BucketingConfig bucketingConfig) {
    this.bucketingConfig = bucketingConfig;
    return this;
  }

  /**
   * Get bucketingConfig
   * @return bucketingConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2BucketingConfig getBucketingConfig() {
    return bucketingConfig;
  }

  public void setBucketingConfig(GooglePrivacyDlpV2BucketingConfig bucketingConfig) {
    this.bucketingConfig = bucketingConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation characterMaskConfig(GooglePrivacyDlpV2CharacterMaskConfig characterMaskConfig) {
    this.characterMaskConfig = characterMaskConfig;
    return this;
  }

  /**
   * Get characterMaskConfig
   * @return characterMaskConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2CharacterMaskConfig getCharacterMaskConfig() {
    return characterMaskConfig;
  }

  public void setCharacterMaskConfig(GooglePrivacyDlpV2CharacterMaskConfig characterMaskConfig) {
    this.characterMaskConfig = characterMaskConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation cryptoDeterministicConfig(GooglePrivacyDlpV2CryptoDeterministicConfig cryptoDeterministicConfig) {
    this.cryptoDeterministicConfig = cryptoDeterministicConfig;
    return this;
  }

  /**
   * Get cryptoDeterministicConfig
   * @return cryptoDeterministicConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2CryptoDeterministicConfig getCryptoDeterministicConfig() {
    return cryptoDeterministicConfig;
  }

  public void setCryptoDeterministicConfig(GooglePrivacyDlpV2CryptoDeterministicConfig cryptoDeterministicConfig) {
    this.cryptoDeterministicConfig = cryptoDeterministicConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation cryptoHashConfig(GooglePrivacyDlpV2CryptoHashConfig cryptoHashConfig) {
    this.cryptoHashConfig = cryptoHashConfig;
    return this;
  }

  /**
   * Get cryptoHashConfig
   * @return cryptoHashConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2CryptoHashConfig getCryptoHashConfig() {
    return cryptoHashConfig;
  }

  public void setCryptoHashConfig(GooglePrivacyDlpV2CryptoHashConfig cryptoHashConfig) {
    this.cryptoHashConfig = cryptoHashConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation cryptoReplaceFfxFpeConfig(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig cryptoReplaceFfxFpeConfig) {
    this.cryptoReplaceFfxFpeConfig = cryptoReplaceFfxFpeConfig;
    return this;
  }

  /**
   * Get cryptoReplaceFfxFpeConfig
   * @return cryptoReplaceFfxFpeConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig getCryptoReplaceFfxFpeConfig() {
    return cryptoReplaceFfxFpeConfig;
  }

  public void setCryptoReplaceFfxFpeConfig(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig cryptoReplaceFfxFpeConfig) {
    this.cryptoReplaceFfxFpeConfig = cryptoReplaceFfxFpeConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation dateShiftConfig(GooglePrivacyDlpV2DateShiftConfig dateShiftConfig) {
    this.dateShiftConfig = dateShiftConfig;
    return this;
  }

  /**
   * Get dateShiftConfig
   * @return dateShiftConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2DateShiftConfig getDateShiftConfig() {
    return dateShiftConfig;
  }

  public void setDateShiftConfig(GooglePrivacyDlpV2DateShiftConfig dateShiftConfig) {
    this.dateShiftConfig = dateShiftConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation fixedSizeBucketingConfig(GooglePrivacyDlpV2FixedSizeBucketingConfig fixedSizeBucketingConfig) {
    this.fixedSizeBucketingConfig = fixedSizeBucketingConfig;
    return this;
  }

  /**
   * Get fixedSizeBucketingConfig
   * @return fixedSizeBucketingConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2FixedSizeBucketingConfig getFixedSizeBucketingConfig() {
    return fixedSizeBucketingConfig;
  }

  public void setFixedSizeBucketingConfig(GooglePrivacyDlpV2FixedSizeBucketingConfig fixedSizeBucketingConfig) {
    this.fixedSizeBucketingConfig = fixedSizeBucketingConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation redactConfig(Object redactConfig) {
    this.redactConfig = redactConfig;
    return this;
  }

  /**
   * Redact a given value. For example, if used with an &#x60;InfoTypeTransformation&#x60; transforming PHONE_NUMBER, and input &#39;My phone number is 206-555-0123&#39;, the output would be &#39;My phone number is &#39;.
   * @return redactConfig
   */
  @javax.annotation.Nullable
  public Object getRedactConfig() {
    return redactConfig;
  }

  public void setRedactConfig(Object redactConfig) {
    this.redactConfig = redactConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation replaceConfig(GooglePrivacyDlpV2ReplaceValueConfig replaceConfig) {
    this.replaceConfig = replaceConfig;
    return this;
  }

  /**
   * Get replaceConfig
   * @return replaceConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2ReplaceValueConfig getReplaceConfig() {
    return replaceConfig;
  }

  public void setReplaceConfig(GooglePrivacyDlpV2ReplaceValueConfig replaceConfig) {
    this.replaceConfig = replaceConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation replaceDictionaryConfig(GooglePrivacyDlpV2ReplaceDictionaryConfig replaceDictionaryConfig) {
    this.replaceDictionaryConfig = replaceDictionaryConfig;
    return this;
  }

  /**
   * Get replaceDictionaryConfig
   * @return replaceDictionaryConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2ReplaceDictionaryConfig getReplaceDictionaryConfig() {
    return replaceDictionaryConfig;
  }

  public void setReplaceDictionaryConfig(GooglePrivacyDlpV2ReplaceDictionaryConfig replaceDictionaryConfig) {
    this.replaceDictionaryConfig = replaceDictionaryConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation replaceWithInfoTypeConfig(Object replaceWithInfoTypeConfig) {
    this.replaceWithInfoTypeConfig = replaceWithInfoTypeConfig;
    return this;
  }

  /**
   * Replace each matching finding with the name of the info_type.
   * @return replaceWithInfoTypeConfig
   */
  @javax.annotation.Nullable
  public Object getReplaceWithInfoTypeConfig() {
    return replaceWithInfoTypeConfig;
  }

  public void setReplaceWithInfoTypeConfig(Object replaceWithInfoTypeConfig) {
    this.replaceWithInfoTypeConfig = replaceWithInfoTypeConfig;
  }


  public GooglePrivacyDlpV2PrimitiveTransformation timePartConfig(GooglePrivacyDlpV2TimePartConfig timePartConfig) {
    this.timePartConfig = timePartConfig;
    return this;
  }

  /**
   * Get timePartConfig
   * @return timePartConfig
   */
  @javax.annotation.Nullable
  public GooglePrivacyDlpV2TimePartConfig getTimePartConfig() {
    return timePartConfig;
  }

  public void setTimePartConfig(GooglePrivacyDlpV2TimePartConfig timePartConfig) {
    this.timePartConfig = timePartConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePrivacyDlpV2PrimitiveTransformation googlePrivacyDlpV2PrimitiveTransformation = (GooglePrivacyDlpV2PrimitiveTransformation) o;
    return Objects.equals(this.bucketingConfig, googlePrivacyDlpV2PrimitiveTransformation.bucketingConfig) &&
        Objects.equals(this.characterMaskConfig, googlePrivacyDlpV2PrimitiveTransformation.characterMaskConfig) &&
        Objects.equals(this.cryptoDeterministicConfig, googlePrivacyDlpV2PrimitiveTransformation.cryptoDeterministicConfig) &&
        Objects.equals(this.cryptoHashConfig, googlePrivacyDlpV2PrimitiveTransformation.cryptoHashConfig) &&
        Objects.equals(this.cryptoReplaceFfxFpeConfig, googlePrivacyDlpV2PrimitiveTransformation.cryptoReplaceFfxFpeConfig) &&
        Objects.equals(this.dateShiftConfig, googlePrivacyDlpV2PrimitiveTransformation.dateShiftConfig) &&
        Objects.equals(this.fixedSizeBucketingConfig, googlePrivacyDlpV2PrimitiveTransformation.fixedSizeBucketingConfig) &&
        Objects.equals(this.redactConfig, googlePrivacyDlpV2PrimitiveTransformation.redactConfig) &&
        Objects.equals(this.replaceConfig, googlePrivacyDlpV2PrimitiveTransformation.replaceConfig) &&
        Objects.equals(this.replaceDictionaryConfig, googlePrivacyDlpV2PrimitiveTransformation.replaceDictionaryConfig) &&
        Objects.equals(this.replaceWithInfoTypeConfig, googlePrivacyDlpV2PrimitiveTransformation.replaceWithInfoTypeConfig) &&
        Objects.equals(this.timePartConfig, googlePrivacyDlpV2PrimitiveTransformation.timePartConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucketingConfig, characterMaskConfig, cryptoDeterministicConfig, cryptoHashConfig, cryptoReplaceFfxFpeConfig, dateShiftConfig, fixedSizeBucketingConfig, redactConfig, replaceConfig, replaceDictionaryConfig, replaceWithInfoTypeConfig, timePartConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePrivacyDlpV2PrimitiveTransformation {\n");
    sb.append("    bucketingConfig: ").append(toIndentedString(bucketingConfig)).append("\n");
    sb.append("    characterMaskConfig: ").append(toIndentedString(characterMaskConfig)).append("\n");
    sb.append("    cryptoDeterministicConfig: ").append(toIndentedString(cryptoDeterministicConfig)).append("\n");
    sb.append("    cryptoHashConfig: ").append(toIndentedString(cryptoHashConfig)).append("\n");
    sb.append("    cryptoReplaceFfxFpeConfig: ").append(toIndentedString(cryptoReplaceFfxFpeConfig)).append("\n");
    sb.append("    dateShiftConfig: ").append(toIndentedString(dateShiftConfig)).append("\n");
    sb.append("    fixedSizeBucketingConfig: ").append(toIndentedString(fixedSizeBucketingConfig)).append("\n");
    sb.append("    redactConfig: ").append(toIndentedString(redactConfig)).append("\n");
    sb.append("    replaceConfig: ").append(toIndentedString(replaceConfig)).append("\n");
    sb.append("    replaceDictionaryConfig: ").append(toIndentedString(replaceDictionaryConfig)).append("\n");
    sb.append("    replaceWithInfoTypeConfig: ").append(toIndentedString(replaceWithInfoTypeConfig)).append("\n");
    sb.append("    timePartConfig: ").append(toIndentedString(timePartConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bucketingConfig");
    openapiFields.add("characterMaskConfig");
    openapiFields.add("cryptoDeterministicConfig");
    openapiFields.add("cryptoHashConfig");
    openapiFields.add("cryptoReplaceFfxFpeConfig");
    openapiFields.add("dateShiftConfig");
    openapiFields.add("fixedSizeBucketingConfig");
    openapiFields.add("redactConfig");
    openapiFields.add("replaceConfig");
    openapiFields.add("replaceDictionaryConfig");
    openapiFields.add("replaceWithInfoTypeConfig");
    openapiFields.add("timePartConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePrivacyDlpV2PrimitiveTransformation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePrivacyDlpV2PrimitiveTransformation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePrivacyDlpV2PrimitiveTransformation is not found in the empty JSON string", GooglePrivacyDlpV2PrimitiveTransformation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePrivacyDlpV2PrimitiveTransformation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePrivacyDlpV2PrimitiveTransformation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bucketingConfig`
      if (jsonObj.get("bucketingConfig") != null && !jsonObj.get("bucketingConfig").isJsonNull()) {
        GooglePrivacyDlpV2BucketingConfig.validateJsonElement(jsonObj.get("bucketingConfig"));
      }
      // validate the optional field `characterMaskConfig`
      if (jsonObj.get("characterMaskConfig") != null && !jsonObj.get("characterMaskConfig").isJsonNull()) {
        GooglePrivacyDlpV2CharacterMaskConfig.validateJsonElement(jsonObj.get("characterMaskConfig"));
      }
      // validate the optional field `cryptoDeterministicConfig`
      if (jsonObj.get("cryptoDeterministicConfig") != null && !jsonObj.get("cryptoDeterministicConfig").isJsonNull()) {
        GooglePrivacyDlpV2CryptoDeterministicConfig.validateJsonElement(jsonObj.get("cryptoDeterministicConfig"));
      }
      // validate the optional field `cryptoHashConfig`
      if (jsonObj.get("cryptoHashConfig") != null && !jsonObj.get("cryptoHashConfig").isJsonNull()) {
        GooglePrivacyDlpV2CryptoHashConfig.validateJsonElement(jsonObj.get("cryptoHashConfig"));
      }
      // validate the optional field `cryptoReplaceFfxFpeConfig`
      if (jsonObj.get("cryptoReplaceFfxFpeConfig") != null && !jsonObj.get("cryptoReplaceFfxFpeConfig").isJsonNull()) {
        GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig.validateJsonElement(jsonObj.get("cryptoReplaceFfxFpeConfig"));
      }
      // validate the optional field `dateShiftConfig`
      if (jsonObj.get("dateShiftConfig") != null && !jsonObj.get("dateShiftConfig").isJsonNull()) {
        GooglePrivacyDlpV2DateShiftConfig.validateJsonElement(jsonObj.get("dateShiftConfig"));
      }
      // validate the optional field `fixedSizeBucketingConfig`
      if (jsonObj.get("fixedSizeBucketingConfig") != null && !jsonObj.get("fixedSizeBucketingConfig").isJsonNull()) {
        GooglePrivacyDlpV2FixedSizeBucketingConfig.validateJsonElement(jsonObj.get("fixedSizeBucketingConfig"));
      }
      // validate the optional field `replaceConfig`
      if (jsonObj.get("replaceConfig") != null && !jsonObj.get("replaceConfig").isJsonNull()) {
        GooglePrivacyDlpV2ReplaceValueConfig.validateJsonElement(jsonObj.get("replaceConfig"));
      }
      // validate the optional field `replaceDictionaryConfig`
      if (jsonObj.get("replaceDictionaryConfig") != null && !jsonObj.get("replaceDictionaryConfig").isJsonNull()) {
        GooglePrivacyDlpV2ReplaceDictionaryConfig.validateJsonElement(jsonObj.get("replaceDictionaryConfig"));
      }
      // validate the optional field `timePartConfig`
      if (jsonObj.get("timePartConfig") != null && !jsonObj.get("timePartConfig").isJsonNull()) {
        GooglePrivacyDlpV2TimePartConfig.validateJsonElement(jsonObj.get("timePartConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePrivacyDlpV2PrimitiveTransformation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePrivacyDlpV2PrimitiveTransformation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePrivacyDlpV2PrimitiveTransformation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePrivacyDlpV2PrimitiveTransformation.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePrivacyDlpV2PrimitiveTransformation>() {
           @Override
           public void write(JsonWriter out, GooglePrivacyDlpV2PrimitiveTransformation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePrivacyDlpV2PrimitiveTransformation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePrivacyDlpV2PrimitiveTransformation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePrivacyDlpV2PrimitiveTransformation
   * @throws IOException if the JSON string is invalid with respect to GooglePrivacyDlpV2PrimitiveTransformation
   */
  public static GooglePrivacyDlpV2PrimitiveTransformation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePrivacyDlpV2PrimitiveTransformation.class);
  }

  /**
   * Convert an instance of GooglePrivacyDlpV2PrimitiveTransformation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

