/*
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GooglePrivacyDlpV2KMapEstimationQuasiIdValues;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A KMapEstimationHistogramBucket message with the following values: min_anonymity: 3 max_anonymity: 5 frequency: 42 means that there are 42 records whose quasi-identifier values correspond to 3, 4 or 5 people in the overlying population. An important particular case is when min_anonymity &#x3D; max_anonymity &#x3D; 1: the frequency field then corresponds to the number of uniquely identifiable records.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:39.298775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePrivacyDlpV2KMapEstimationHistogramBucket {
  public static final String SERIALIZED_NAME_BUCKET_SIZE = "bucketSize";
  @SerializedName(SERIALIZED_NAME_BUCKET_SIZE)
  private String bucketSize;

  public static final String SERIALIZED_NAME_BUCKET_VALUE_COUNT = "bucketValueCount";
  @SerializedName(SERIALIZED_NAME_BUCKET_VALUE_COUNT)
  private String bucketValueCount;

  public static final String SERIALIZED_NAME_BUCKET_VALUES = "bucketValues";
  @SerializedName(SERIALIZED_NAME_BUCKET_VALUES)
  private List<GooglePrivacyDlpV2KMapEstimationQuasiIdValues> bucketValues = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAX_ANONYMITY = "maxAnonymity";
  @SerializedName(SERIALIZED_NAME_MAX_ANONYMITY)
  private String maxAnonymity;

  public static final String SERIALIZED_NAME_MIN_ANONYMITY = "minAnonymity";
  @SerializedName(SERIALIZED_NAME_MIN_ANONYMITY)
  private String minAnonymity;

  public GooglePrivacyDlpV2KMapEstimationHistogramBucket() {
  }

  public GooglePrivacyDlpV2KMapEstimationHistogramBucket bucketSize(String bucketSize) {
    this.bucketSize = bucketSize;
    return this;
  }

  /**
   * Number of records within these anonymity bounds.
   * @return bucketSize
   */
  @javax.annotation.Nullable
  public String getBucketSize() {
    return bucketSize;
  }

  public void setBucketSize(String bucketSize) {
    this.bucketSize = bucketSize;
  }


  public GooglePrivacyDlpV2KMapEstimationHistogramBucket bucketValueCount(String bucketValueCount) {
    this.bucketValueCount = bucketValueCount;
    return this;
  }

  /**
   * Total number of distinct quasi-identifier tuple values in this bucket.
   * @return bucketValueCount
   */
  @javax.annotation.Nullable
  public String getBucketValueCount() {
    return bucketValueCount;
  }

  public void setBucketValueCount(String bucketValueCount) {
    this.bucketValueCount = bucketValueCount;
  }


  public GooglePrivacyDlpV2KMapEstimationHistogramBucket bucketValues(List<GooglePrivacyDlpV2KMapEstimationQuasiIdValues> bucketValues) {
    this.bucketValues = bucketValues;
    return this;
  }

  public GooglePrivacyDlpV2KMapEstimationHistogramBucket addBucketValuesItem(GooglePrivacyDlpV2KMapEstimationQuasiIdValues bucketValuesItem) {
    if (this.bucketValues == null) {
      this.bucketValues = new ArrayList<>();
    }
    this.bucketValues.add(bucketValuesItem);
    return this;
  }

  /**
   * Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.
   * @return bucketValues
   */
  @javax.annotation.Nullable
  public List<GooglePrivacyDlpV2KMapEstimationQuasiIdValues> getBucketValues() {
    return bucketValues;
  }

  public void setBucketValues(List<GooglePrivacyDlpV2KMapEstimationQuasiIdValues> bucketValues) {
    this.bucketValues = bucketValues;
  }


  public GooglePrivacyDlpV2KMapEstimationHistogramBucket maxAnonymity(String maxAnonymity) {
    this.maxAnonymity = maxAnonymity;
    return this;
  }

  /**
   * Always greater than or equal to min_anonymity.
   * @return maxAnonymity
   */
  @javax.annotation.Nullable
  public String getMaxAnonymity() {
    return maxAnonymity;
  }

  public void setMaxAnonymity(String maxAnonymity) {
    this.maxAnonymity = maxAnonymity;
  }


  public GooglePrivacyDlpV2KMapEstimationHistogramBucket minAnonymity(String minAnonymity) {
    this.minAnonymity = minAnonymity;
    return this;
  }

  /**
   * Always positive.
   * @return minAnonymity
   */
  @javax.annotation.Nullable
  public String getMinAnonymity() {
    return minAnonymity;
  }

  public void setMinAnonymity(String minAnonymity) {
    this.minAnonymity = minAnonymity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePrivacyDlpV2KMapEstimationHistogramBucket googlePrivacyDlpV2KMapEstimationHistogramBucket = (GooglePrivacyDlpV2KMapEstimationHistogramBucket) o;
    return Objects.equals(this.bucketSize, googlePrivacyDlpV2KMapEstimationHistogramBucket.bucketSize) &&
        Objects.equals(this.bucketValueCount, googlePrivacyDlpV2KMapEstimationHistogramBucket.bucketValueCount) &&
        Objects.equals(this.bucketValues, googlePrivacyDlpV2KMapEstimationHistogramBucket.bucketValues) &&
        Objects.equals(this.maxAnonymity, googlePrivacyDlpV2KMapEstimationHistogramBucket.maxAnonymity) &&
        Objects.equals(this.minAnonymity, googlePrivacyDlpV2KMapEstimationHistogramBucket.minAnonymity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucketSize, bucketValueCount, bucketValues, maxAnonymity, minAnonymity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePrivacyDlpV2KMapEstimationHistogramBucket {\n");
    sb.append("    bucketSize: ").append(toIndentedString(bucketSize)).append("\n");
    sb.append("    bucketValueCount: ").append(toIndentedString(bucketValueCount)).append("\n");
    sb.append("    bucketValues: ").append(toIndentedString(bucketValues)).append("\n");
    sb.append("    maxAnonymity: ").append(toIndentedString(maxAnonymity)).append("\n");
    sb.append("    minAnonymity: ").append(toIndentedString(minAnonymity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bucketSize");
    openapiFields.add("bucketValueCount");
    openapiFields.add("bucketValues");
    openapiFields.add("maxAnonymity");
    openapiFields.add("minAnonymity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePrivacyDlpV2KMapEstimationHistogramBucket
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePrivacyDlpV2KMapEstimationHistogramBucket.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePrivacyDlpV2KMapEstimationHistogramBucket is not found in the empty JSON string", GooglePrivacyDlpV2KMapEstimationHistogramBucket.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePrivacyDlpV2KMapEstimationHistogramBucket.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePrivacyDlpV2KMapEstimationHistogramBucket` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bucketSize") != null && !jsonObj.get("bucketSize").isJsonNull()) && !jsonObj.get("bucketSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bucketSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bucketSize").toString()));
      }
      if ((jsonObj.get("bucketValueCount") != null && !jsonObj.get("bucketValueCount").isJsonNull()) && !jsonObj.get("bucketValueCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bucketValueCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bucketValueCount").toString()));
      }
      if (jsonObj.get("bucketValues") != null && !jsonObj.get("bucketValues").isJsonNull()) {
        JsonArray jsonArraybucketValues = jsonObj.getAsJsonArray("bucketValues");
        if (jsonArraybucketValues != null) {
          // ensure the json data is an array
          if (!jsonObj.get("bucketValues").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `bucketValues` to be an array in the JSON string but got `%s`", jsonObj.get("bucketValues").toString()));
          }

          // validate the optional field `bucketValues` (array)
          for (int i = 0; i < jsonArraybucketValues.size(); i++) {
            GooglePrivacyDlpV2KMapEstimationQuasiIdValues.validateJsonElement(jsonArraybucketValues.get(i));
          };
        }
      }
      if ((jsonObj.get("maxAnonymity") != null && !jsonObj.get("maxAnonymity").isJsonNull()) && !jsonObj.get("maxAnonymity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxAnonymity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxAnonymity").toString()));
      }
      if ((jsonObj.get("minAnonymity") != null && !jsonObj.get("minAnonymity").isJsonNull()) && !jsonObj.get("minAnonymity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minAnonymity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minAnonymity").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePrivacyDlpV2KMapEstimationHistogramBucket.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePrivacyDlpV2KMapEstimationHistogramBucket' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePrivacyDlpV2KMapEstimationHistogramBucket> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePrivacyDlpV2KMapEstimationHistogramBucket.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePrivacyDlpV2KMapEstimationHistogramBucket>() {
           @Override
           public void write(JsonWriter out, GooglePrivacyDlpV2KMapEstimationHistogramBucket value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePrivacyDlpV2KMapEstimationHistogramBucket read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePrivacyDlpV2KMapEstimationHistogramBucket given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePrivacyDlpV2KMapEstimationHistogramBucket
   * @throws IOException if the JSON string is invalid with respect to GooglePrivacyDlpV2KMapEstimationHistogramBucket
   */
  public static GooglePrivacyDlpV2KMapEstimationHistogramBucket fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePrivacyDlpV2KMapEstimationHistogramBucket.class);
  }

  /**
   * Convert an instance of GooglePrivacyDlpV2KMapEstimationHistogramBucket to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

