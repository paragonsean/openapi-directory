/*
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GooglePrivacyDlpV2DataProfileConfigSnapshot;
import org.openapitools.client.model.GooglePrivacyDlpV2DataRiskLevel;
import org.openapitools.client.model.GooglePrivacyDlpV2DataSourceType;
import org.openapitools.client.model.GooglePrivacyDlpV2InfoTypeSummary;
import org.openapitools.client.model.GooglePrivacyDlpV2OtherInfoTypeSummary;
import org.openapitools.client.model.GooglePrivacyDlpV2ProfileStatus;
import org.openapitools.client.model.GooglePrivacyDlpV2SensitivityScore;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GooglePrivacyDlpV2TableDataProfile
 */
public class GooglePrivacyDlpV2TableDataProfileTest {
    private final GooglePrivacyDlpV2TableDataProfile model = new GooglePrivacyDlpV2TableDataProfile();

    /**
     * Model tests for GooglePrivacyDlpV2TableDataProfile
     */
    @Test
    public void testGooglePrivacyDlpV2TableDataProfile() {
        // TODO: test GooglePrivacyDlpV2TableDataProfile
    }

    /**
     * Test the property 'configSnapshot'
     */
    @Test
    public void configSnapshotTest() {
        // TODO: test configSnapshot
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'dataRiskLevel'
     */
    @Test
    public void dataRiskLevelTest() {
        // TODO: test dataRiskLevel
    }

    /**
     * Test the property 'dataSourceType'
     */
    @Test
    public void dataSourceTypeTest() {
        // TODO: test dataSourceType
    }

    /**
     * Test the property 'datasetId'
     */
    @Test
    public void datasetIdTest() {
        // TODO: test datasetId
    }

    /**
     * Test the property 'datasetLocation'
     */
    @Test
    public void datasetLocationTest() {
        // TODO: test datasetLocation
    }

    /**
     * Test the property 'datasetProjectId'
     */
    @Test
    public void datasetProjectIdTest() {
        // TODO: test datasetProjectId
    }

    /**
     * Test the property 'encryptionStatus'
     */
    @Test
    public void encryptionStatusTest() {
        // TODO: test encryptionStatus
    }

    /**
     * Test the property 'expirationTime'
     */
    @Test
    public void expirationTimeTest() {
        // TODO: test expirationTime
    }

    /**
     * Test the property 'failedColumnCount'
     */
    @Test
    public void failedColumnCountTest() {
        // TODO: test failedColumnCount
    }

    /**
     * Test the property 'fullResource'
     */
    @Test
    public void fullResourceTest() {
        // TODO: test fullResource
    }

    /**
     * Test the property 'lastModifiedTime'
     */
    @Test
    public void lastModifiedTimeTest() {
        // TODO: test lastModifiedTime
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'otherInfoTypes'
     */
    @Test
    public void otherInfoTypesTest() {
        // TODO: test otherInfoTypes
    }

    /**
     * Test the property 'predictedInfoTypes'
     */
    @Test
    public void predictedInfoTypesTest() {
        // TODO: test predictedInfoTypes
    }

    /**
     * Test the property 'profileLastGenerated'
     */
    @Test
    public void profileLastGeneratedTest() {
        // TODO: test profileLastGenerated
    }

    /**
     * Test the property 'profileStatus'
     */
    @Test
    public void profileStatusTest() {
        // TODO: test profileStatus
    }

    /**
     * Test the property 'projectDataProfile'
     */
    @Test
    public void projectDataProfileTest() {
        // TODO: test projectDataProfile
    }

    /**
     * Test the property 'resourceLabels'
     */
    @Test
    public void resourceLabelsTest() {
        // TODO: test resourceLabels
    }

    /**
     * Test the property 'resourceVisibility'
     */
    @Test
    public void resourceVisibilityTest() {
        // TODO: test resourceVisibility
    }

    /**
     * Test the property 'rowCount'
     */
    @Test
    public void rowCountTest() {
        // TODO: test rowCount
    }

    /**
     * Test the property 'scannedColumnCount'
     */
    @Test
    public void scannedColumnCountTest() {
        // TODO: test scannedColumnCount
    }

    /**
     * Test the property 'sensitivityScore'
     */
    @Test
    public void sensitivityScoreTest() {
        // TODO: test sensitivityScore
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'tableId'
     */
    @Test
    public void tableIdTest() {
        // TODO: test tableId
    }

    /**
     * Test the property 'tableSizeBytes'
     */
    @Test
    public void tableSizeBytesTest() {
        // TODO: test tableSizeBytes
    }

}
