# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_time_zone import GooglePrivacyDlpV2TimeZone
from openapi_server.models.google_type_date import GoogleTypeDate
from openapi_server.models.google_type_time_of_day import GoogleTypeTimeOfDay
from openapi_server import util


class GooglePrivacyDlpV2DateTime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: GoogleTypeDate=None, day_of_week: str=None, time: GoogleTypeTimeOfDay=None, time_zone: GooglePrivacyDlpV2TimeZone=None):
        """GooglePrivacyDlpV2DateTime - a model defined in OpenAPI

        :param _date: The _date of this GooglePrivacyDlpV2DateTime.
        :param day_of_week: The day_of_week of this GooglePrivacyDlpV2DateTime.
        :param time: The time of this GooglePrivacyDlpV2DateTime.
        :param time_zone: The time_zone of this GooglePrivacyDlpV2DateTime.
        """
        self.openapi_types = {
            '_date': GoogleTypeDate,
            'day_of_week': str,
            'time': GoogleTypeTimeOfDay,
            'time_zone': GooglePrivacyDlpV2TimeZone
        }

        self.attribute_map = {
            '_date': 'date',
            'day_of_week': 'dayOfWeek',
            'time': 'time',
            'time_zone': 'timeZone'
        }

        self.__date = _date
        self._day_of_week = day_of_week
        self._time = time
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2DateTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2DateTime of this GooglePrivacyDlpV2DateTime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this GooglePrivacyDlpV2DateTime.


        :return: The _date of this GooglePrivacyDlpV2DateTime.
        :rtype: GoogleTypeDate
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this GooglePrivacyDlpV2DateTime.


        :param _date: The _date of this GooglePrivacyDlpV2DateTime.
        :type _date: GoogleTypeDate
        """

        self.__date = _date

    @property
    def day_of_week(self):
        """Gets the day_of_week of this GooglePrivacyDlpV2DateTime.

        Day of week

        :return: The day_of_week of this GooglePrivacyDlpV2DateTime.
        :rtype: str
        """
        return self._day_of_week

    @day_of_week.setter
    def day_of_week(self, day_of_week):
        """Sets the day_of_week of this GooglePrivacyDlpV2DateTime.

        Day of week

        :param day_of_week: The day_of_week of this GooglePrivacyDlpV2DateTime.
        :type day_of_week: str
        """
        allowed_values = ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]  # noqa: E501
        if day_of_week not in allowed_values:
            raise ValueError(
                "Invalid value for `day_of_week` ({0}), must be one of {1}"
                .format(day_of_week, allowed_values)
            )

        self._day_of_week = day_of_week

    @property
    def time(self):
        """Gets the time of this GooglePrivacyDlpV2DateTime.


        :return: The time of this GooglePrivacyDlpV2DateTime.
        :rtype: GoogleTypeTimeOfDay
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this GooglePrivacyDlpV2DateTime.


        :param time: The time of this GooglePrivacyDlpV2DateTime.
        :type time: GoogleTypeTimeOfDay
        """

        self._time = time

    @property
    def time_zone(self):
        """Gets the time_zone of this GooglePrivacyDlpV2DateTime.


        :return: The time_zone of this GooglePrivacyDlpV2DateTime.
        :rtype: GooglePrivacyDlpV2TimeZone
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this GooglePrivacyDlpV2DateTime.


        :param time_zone: The time_zone of this GooglePrivacyDlpV2DateTime.
        :type time_zone: GooglePrivacyDlpV2TimeZone
        """

        self._time_zone = time_zone
