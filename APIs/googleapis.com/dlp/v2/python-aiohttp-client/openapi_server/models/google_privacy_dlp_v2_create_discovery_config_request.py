# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_discovery_config import GooglePrivacyDlpV2DiscoveryConfig
from openapi_server import util


class GooglePrivacyDlpV2CreateDiscoveryConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config_id: str=None, discovery_config: GooglePrivacyDlpV2DiscoveryConfig=None):
        """GooglePrivacyDlpV2CreateDiscoveryConfigRequest - a model defined in OpenAPI

        :param config_id: The config_id of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.
        :param discovery_config: The discovery_config of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.
        """
        self.openapi_types = {
            'config_id': str,
            'discovery_config': GooglePrivacyDlpV2DiscoveryConfig
        }

        self.attribute_map = {
            'config_id': 'configId',
            'discovery_config': 'discoveryConfig'
        }

        self._config_id = config_id
        self._discovery_config = discovery_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2CreateDiscoveryConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2CreateDiscoveryConfigRequest of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_id(self):
        """Gets the config_id of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.

        The config ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.

        :return: The config_id of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.
        :rtype: str
        """
        return self._config_id

    @config_id.setter
    def config_id(self, config_id):
        """Sets the config_id of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.

        The config ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.

        :param config_id: The config_id of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.
        :type config_id: str
        """

        self._config_id = config_id

    @property
    def discovery_config(self):
        """Gets the discovery_config of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.


        :return: The discovery_config of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.
        :rtype: GooglePrivacyDlpV2DiscoveryConfig
        """
        return self._discovery_config

    @discovery_config.setter
    def discovery_config(self, discovery_config):
        """Sets the discovery_config of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.


        :param discovery_config: The discovery_config of this GooglePrivacyDlpV2CreateDiscoveryConfigRequest.
        :type discovery_config: GooglePrivacyDlpV2DiscoveryConfig
        """

        self._discovery_config = discovery_config
