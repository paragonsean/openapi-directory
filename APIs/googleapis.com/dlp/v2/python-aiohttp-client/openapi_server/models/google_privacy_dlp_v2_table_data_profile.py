# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_data_profile_config_snapshot import GooglePrivacyDlpV2DataProfileConfigSnapshot
from openapi_server.models.google_privacy_dlp_v2_data_risk_level import GooglePrivacyDlpV2DataRiskLevel
from openapi_server.models.google_privacy_dlp_v2_data_source_type import GooglePrivacyDlpV2DataSourceType
from openapi_server.models.google_privacy_dlp_v2_info_type_summary import GooglePrivacyDlpV2InfoTypeSummary
from openapi_server.models.google_privacy_dlp_v2_other_info_type_summary import GooglePrivacyDlpV2OtherInfoTypeSummary
from openapi_server.models.google_privacy_dlp_v2_profile_status import GooglePrivacyDlpV2ProfileStatus
from openapi_server.models.google_privacy_dlp_v2_sensitivity_score import GooglePrivacyDlpV2SensitivityScore
from openapi_server import util


class GooglePrivacyDlpV2TableDataProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config_snapshot: GooglePrivacyDlpV2DataProfileConfigSnapshot=None, create_time: str=None, data_risk_level: GooglePrivacyDlpV2DataRiskLevel=None, data_source_type: GooglePrivacyDlpV2DataSourceType=None, dataset_id: str=None, dataset_location: str=None, dataset_project_id: str=None, encryption_status: str=None, expiration_time: str=None, failed_column_count: str=None, full_resource: str=None, last_modified_time: str=None, name: str=None, other_info_types: List[GooglePrivacyDlpV2OtherInfoTypeSummary]=None, predicted_info_types: List[GooglePrivacyDlpV2InfoTypeSummary]=None, profile_last_generated: str=None, profile_status: GooglePrivacyDlpV2ProfileStatus=None, project_data_profile: str=None, resource_labels: Dict[str, str]=None, resource_visibility: str=None, row_count: str=None, scanned_column_count: str=None, sensitivity_score: GooglePrivacyDlpV2SensitivityScore=None, state: str=None, table_id: str=None, table_size_bytes: str=None):
        """GooglePrivacyDlpV2TableDataProfile - a model defined in OpenAPI

        :param config_snapshot: The config_snapshot of this GooglePrivacyDlpV2TableDataProfile.
        :param create_time: The create_time of this GooglePrivacyDlpV2TableDataProfile.
        :param data_risk_level: The data_risk_level of this GooglePrivacyDlpV2TableDataProfile.
        :param data_source_type: The data_source_type of this GooglePrivacyDlpV2TableDataProfile.
        :param dataset_id: The dataset_id of this GooglePrivacyDlpV2TableDataProfile.
        :param dataset_location: The dataset_location of this GooglePrivacyDlpV2TableDataProfile.
        :param dataset_project_id: The dataset_project_id of this GooglePrivacyDlpV2TableDataProfile.
        :param encryption_status: The encryption_status of this GooglePrivacyDlpV2TableDataProfile.
        :param expiration_time: The expiration_time of this GooglePrivacyDlpV2TableDataProfile.
        :param failed_column_count: The failed_column_count of this GooglePrivacyDlpV2TableDataProfile.
        :param full_resource: The full_resource of this GooglePrivacyDlpV2TableDataProfile.
        :param last_modified_time: The last_modified_time of this GooglePrivacyDlpV2TableDataProfile.
        :param name: The name of this GooglePrivacyDlpV2TableDataProfile.
        :param other_info_types: The other_info_types of this GooglePrivacyDlpV2TableDataProfile.
        :param predicted_info_types: The predicted_info_types of this GooglePrivacyDlpV2TableDataProfile.
        :param profile_last_generated: The profile_last_generated of this GooglePrivacyDlpV2TableDataProfile.
        :param profile_status: The profile_status of this GooglePrivacyDlpV2TableDataProfile.
        :param project_data_profile: The project_data_profile of this GooglePrivacyDlpV2TableDataProfile.
        :param resource_labels: The resource_labels of this GooglePrivacyDlpV2TableDataProfile.
        :param resource_visibility: The resource_visibility of this GooglePrivacyDlpV2TableDataProfile.
        :param row_count: The row_count of this GooglePrivacyDlpV2TableDataProfile.
        :param scanned_column_count: The scanned_column_count of this GooglePrivacyDlpV2TableDataProfile.
        :param sensitivity_score: The sensitivity_score of this GooglePrivacyDlpV2TableDataProfile.
        :param state: The state of this GooglePrivacyDlpV2TableDataProfile.
        :param table_id: The table_id of this GooglePrivacyDlpV2TableDataProfile.
        :param table_size_bytes: The table_size_bytes of this GooglePrivacyDlpV2TableDataProfile.
        """
        self.openapi_types = {
            'config_snapshot': GooglePrivacyDlpV2DataProfileConfigSnapshot,
            'create_time': str,
            'data_risk_level': GooglePrivacyDlpV2DataRiskLevel,
            'data_source_type': GooglePrivacyDlpV2DataSourceType,
            'dataset_id': str,
            'dataset_location': str,
            'dataset_project_id': str,
            'encryption_status': str,
            'expiration_time': str,
            'failed_column_count': str,
            'full_resource': str,
            'last_modified_time': str,
            'name': str,
            'other_info_types': List[GooglePrivacyDlpV2OtherInfoTypeSummary],
            'predicted_info_types': List[GooglePrivacyDlpV2InfoTypeSummary],
            'profile_last_generated': str,
            'profile_status': GooglePrivacyDlpV2ProfileStatus,
            'project_data_profile': str,
            'resource_labels': Dict[str, str],
            'resource_visibility': str,
            'row_count': str,
            'scanned_column_count': str,
            'sensitivity_score': GooglePrivacyDlpV2SensitivityScore,
            'state': str,
            'table_id': str,
            'table_size_bytes': str
        }

        self.attribute_map = {
            'config_snapshot': 'configSnapshot',
            'create_time': 'createTime',
            'data_risk_level': 'dataRiskLevel',
            'data_source_type': 'dataSourceType',
            'dataset_id': 'datasetId',
            'dataset_location': 'datasetLocation',
            'dataset_project_id': 'datasetProjectId',
            'encryption_status': 'encryptionStatus',
            'expiration_time': 'expirationTime',
            'failed_column_count': 'failedColumnCount',
            'full_resource': 'fullResource',
            'last_modified_time': 'lastModifiedTime',
            'name': 'name',
            'other_info_types': 'otherInfoTypes',
            'predicted_info_types': 'predictedInfoTypes',
            'profile_last_generated': 'profileLastGenerated',
            'profile_status': 'profileStatus',
            'project_data_profile': 'projectDataProfile',
            'resource_labels': 'resourceLabels',
            'resource_visibility': 'resourceVisibility',
            'row_count': 'rowCount',
            'scanned_column_count': 'scannedColumnCount',
            'sensitivity_score': 'sensitivityScore',
            'state': 'state',
            'table_id': 'tableId',
            'table_size_bytes': 'tableSizeBytes'
        }

        self._config_snapshot = config_snapshot
        self._create_time = create_time
        self._data_risk_level = data_risk_level
        self._data_source_type = data_source_type
        self._dataset_id = dataset_id
        self._dataset_location = dataset_location
        self._dataset_project_id = dataset_project_id
        self._encryption_status = encryption_status
        self._expiration_time = expiration_time
        self._failed_column_count = failed_column_count
        self._full_resource = full_resource
        self._last_modified_time = last_modified_time
        self._name = name
        self._other_info_types = other_info_types
        self._predicted_info_types = predicted_info_types
        self._profile_last_generated = profile_last_generated
        self._profile_status = profile_status
        self._project_data_profile = project_data_profile
        self._resource_labels = resource_labels
        self._resource_visibility = resource_visibility
        self._row_count = row_count
        self._scanned_column_count = scanned_column_count
        self._sensitivity_score = sensitivity_score
        self._state = state
        self._table_id = table_id
        self._table_size_bytes = table_size_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2TableDataProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2TableDataProfile of this GooglePrivacyDlpV2TableDataProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_snapshot(self):
        """Gets the config_snapshot of this GooglePrivacyDlpV2TableDataProfile.


        :return: The config_snapshot of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: GooglePrivacyDlpV2DataProfileConfigSnapshot
        """
        return self._config_snapshot

    @config_snapshot.setter
    def config_snapshot(self, config_snapshot):
        """Sets the config_snapshot of this GooglePrivacyDlpV2TableDataProfile.


        :param config_snapshot: The config_snapshot of this GooglePrivacyDlpV2TableDataProfile.
        :type config_snapshot: GooglePrivacyDlpV2DataProfileConfigSnapshot
        """

        self._config_snapshot = config_snapshot

    @property
    def create_time(self):
        """Gets the create_time of this GooglePrivacyDlpV2TableDataProfile.

        The time at which the table was created.

        :return: The create_time of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GooglePrivacyDlpV2TableDataProfile.

        The time at which the table was created.

        :param create_time: The create_time of this GooglePrivacyDlpV2TableDataProfile.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def data_risk_level(self):
        """Gets the data_risk_level of this GooglePrivacyDlpV2TableDataProfile.


        :return: The data_risk_level of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: GooglePrivacyDlpV2DataRiskLevel
        """
        return self._data_risk_level

    @data_risk_level.setter
    def data_risk_level(self, data_risk_level):
        """Sets the data_risk_level of this GooglePrivacyDlpV2TableDataProfile.


        :param data_risk_level: The data_risk_level of this GooglePrivacyDlpV2TableDataProfile.
        :type data_risk_level: GooglePrivacyDlpV2DataRiskLevel
        """

        self._data_risk_level = data_risk_level

    @property
    def data_source_type(self):
        """Gets the data_source_type of this GooglePrivacyDlpV2TableDataProfile.


        :return: The data_source_type of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: GooglePrivacyDlpV2DataSourceType
        """
        return self._data_source_type

    @data_source_type.setter
    def data_source_type(self, data_source_type):
        """Sets the data_source_type of this GooglePrivacyDlpV2TableDataProfile.


        :param data_source_type: The data_source_type of this GooglePrivacyDlpV2TableDataProfile.
        :type data_source_type: GooglePrivacyDlpV2DataSourceType
        """

        self._data_source_type = data_source_type

    @property
    def dataset_id(self):
        """Gets the dataset_id of this GooglePrivacyDlpV2TableDataProfile.

        If the resource is BigQuery, the dataset ID.

        :return: The dataset_id of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._dataset_id

    @dataset_id.setter
    def dataset_id(self, dataset_id):
        """Sets the dataset_id of this GooglePrivacyDlpV2TableDataProfile.

        If the resource is BigQuery, the dataset ID.

        :param dataset_id: The dataset_id of this GooglePrivacyDlpV2TableDataProfile.
        :type dataset_id: str
        """

        self._dataset_id = dataset_id

    @property
    def dataset_location(self):
        """Gets the dataset_location of this GooglePrivacyDlpV2TableDataProfile.

        If supported, the location where the dataset's data is stored. See https://cloud.google.com/bigquery/docs/locations for supported locations.

        :return: The dataset_location of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._dataset_location

    @dataset_location.setter
    def dataset_location(self, dataset_location):
        """Sets the dataset_location of this GooglePrivacyDlpV2TableDataProfile.

        If supported, the location where the dataset's data is stored. See https://cloud.google.com/bigquery/docs/locations for supported locations.

        :param dataset_location: The dataset_location of this GooglePrivacyDlpV2TableDataProfile.
        :type dataset_location: str
        """

        self._dataset_location = dataset_location

    @property
    def dataset_project_id(self):
        """Gets the dataset_project_id of this GooglePrivacyDlpV2TableDataProfile.

        The Google Cloud project ID that owns the resource.

        :return: The dataset_project_id of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._dataset_project_id

    @dataset_project_id.setter
    def dataset_project_id(self, dataset_project_id):
        """Sets the dataset_project_id of this GooglePrivacyDlpV2TableDataProfile.

        The Google Cloud project ID that owns the resource.

        :param dataset_project_id: The dataset_project_id of this GooglePrivacyDlpV2TableDataProfile.
        :type dataset_project_id: str
        """

        self._dataset_project_id = dataset_project_id

    @property
    def encryption_status(self):
        """Gets the encryption_status of this GooglePrivacyDlpV2TableDataProfile.

        How the table is encrypted.

        :return: The encryption_status of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._encryption_status

    @encryption_status.setter
    def encryption_status(self, encryption_status):
        """Sets the encryption_status of this GooglePrivacyDlpV2TableDataProfile.

        How the table is encrypted.

        :param encryption_status: The encryption_status of this GooglePrivacyDlpV2TableDataProfile.
        :type encryption_status: str
        """
        allowed_values = ["ENCRYPTION_STATUS_UNSPECIFIED", "ENCRYPTION_GOOGLE_MANAGED", "ENCRYPTION_CUSTOMER_MANAGED"]  # noqa: E501
        if encryption_status not in allowed_values:
            raise ValueError(
                "Invalid value for `encryption_status` ({0}), must be one of {1}"
                .format(encryption_status, allowed_values)
            )

        self._encryption_status = encryption_status

    @property
    def expiration_time(self):
        """Gets the expiration_time of this GooglePrivacyDlpV2TableDataProfile.

        Optional. The time when this table expires.

        :return: The expiration_time of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this GooglePrivacyDlpV2TableDataProfile.

        Optional. The time when this table expires.

        :param expiration_time: The expiration_time of this GooglePrivacyDlpV2TableDataProfile.
        :type expiration_time: str
        """

        self._expiration_time = expiration_time

    @property
    def failed_column_count(self):
        """Gets the failed_column_count of this GooglePrivacyDlpV2TableDataProfile.

        The number of columns skipped in the table because of an error.

        :return: The failed_column_count of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._failed_column_count

    @failed_column_count.setter
    def failed_column_count(self, failed_column_count):
        """Sets the failed_column_count of this GooglePrivacyDlpV2TableDataProfile.

        The number of columns skipped in the table because of an error.

        :param failed_column_count: The failed_column_count of this GooglePrivacyDlpV2TableDataProfile.
        :type failed_column_count: str
        """

        self._failed_column_count = failed_column_count

    @property
    def full_resource(self):
        """Gets the full_resource of this GooglePrivacyDlpV2TableDataProfile.

        The resource name of the resource profiled. https://cloud.google.com/apis/design/resource_names#full_resource_name

        :return: The full_resource of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._full_resource

    @full_resource.setter
    def full_resource(self, full_resource):
        """Sets the full_resource of this GooglePrivacyDlpV2TableDataProfile.

        The resource name of the resource profiled. https://cloud.google.com/apis/design/resource_names#full_resource_name

        :param full_resource: The full_resource of this GooglePrivacyDlpV2TableDataProfile.
        :type full_resource: str
        """

        self._full_resource = full_resource

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this GooglePrivacyDlpV2TableDataProfile.

        The time when this table was last modified

        :return: The last_modified_time of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this GooglePrivacyDlpV2TableDataProfile.

        The time when this table was last modified

        :param last_modified_time: The last_modified_time of this GooglePrivacyDlpV2TableDataProfile.
        :type last_modified_time: str
        """

        self._last_modified_time = last_modified_time

    @property
    def name(self):
        """Gets the name of this GooglePrivacyDlpV2TableDataProfile.

        The name of the profile.

        :return: The name of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GooglePrivacyDlpV2TableDataProfile.

        The name of the profile.

        :param name: The name of this GooglePrivacyDlpV2TableDataProfile.
        :type name: str
        """

        self._name = name

    @property
    def other_info_types(self):
        """Gets the other_info_types of this GooglePrivacyDlpV2TableDataProfile.

        Other infoTypes found in this table's data.

        :return: The other_info_types of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: List[GooglePrivacyDlpV2OtherInfoTypeSummary]
        """
        return self._other_info_types

    @other_info_types.setter
    def other_info_types(self, other_info_types):
        """Sets the other_info_types of this GooglePrivacyDlpV2TableDataProfile.

        Other infoTypes found in this table's data.

        :param other_info_types: The other_info_types of this GooglePrivacyDlpV2TableDataProfile.
        :type other_info_types: List[GooglePrivacyDlpV2OtherInfoTypeSummary]
        """

        self._other_info_types = other_info_types

    @property
    def predicted_info_types(self):
        """Gets the predicted_info_types of this GooglePrivacyDlpV2TableDataProfile.

        The infoTypes predicted from this table's data.

        :return: The predicted_info_types of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: List[GooglePrivacyDlpV2InfoTypeSummary]
        """
        return self._predicted_info_types

    @predicted_info_types.setter
    def predicted_info_types(self, predicted_info_types):
        """Sets the predicted_info_types of this GooglePrivacyDlpV2TableDataProfile.

        The infoTypes predicted from this table's data.

        :param predicted_info_types: The predicted_info_types of this GooglePrivacyDlpV2TableDataProfile.
        :type predicted_info_types: List[GooglePrivacyDlpV2InfoTypeSummary]
        """

        self._predicted_info_types = predicted_info_types

    @property
    def profile_last_generated(self):
        """Gets the profile_last_generated of this GooglePrivacyDlpV2TableDataProfile.

        The last time the profile was generated.

        :return: The profile_last_generated of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._profile_last_generated

    @profile_last_generated.setter
    def profile_last_generated(self, profile_last_generated):
        """Sets the profile_last_generated of this GooglePrivacyDlpV2TableDataProfile.

        The last time the profile was generated.

        :param profile_last_generated: The profile_last_generated of this GooglePrivacyDlpV2TableDataProfile.
        :type profile_last_generated: str
        """

        self._profile_last_generated = profile_last_generated

    @property
    def profile_status(self):
        """Gets the profile_status of this GooglePrivacyDlpV2TableDataProfile.


        :return: The profile_status of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: GooglePrivacyDlpV2ProfileStatus
        """
        return self._profile_status

    @profile_status.setter
    def profile_status(self, profile_status):
        """Sets the profile_status of this GooglePrivacyDlpV2TableDataProfile.


        :param profile_status: The profile_status of this GooglePrivacyDlpV2TableDataProfile.
        :type profile_status: GooglePrivacyDlpV2ProfileStatus
        """

        self._profile_status = profile_status

    @property
    def project_data_profile(self):
        """Gets the project_data_profile of this GooglePrivacyDlpV2TableDataProfile.

        The resource name to the project data profile for this table.

        :return: The project_data_profile of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._project_data_profile

    @project_data_profile.setter
    def project_data_profile(self, project_data_profile):
        """Sets the project_data_profile of this GooglePrivacyDlpV2TableDataProfile.

        The resource name to the project data profile for this table.

        :param project_data_profile: The project_data_profile of this GooglePrivacyDlpV2TableDataProfile.
        :type project_data_profile: str
        """

        self._project_data_profile = project_data_profile

    @property
    def resource_labels(self):
        """Gets the resource_labels of this GooglePrivacyDlpV2TableDataProfile.

        The labels applied to the resource at the time the profile was generated.

        :return: The resource_labels of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: Dict[str, str]
        """
        return self._resource_labels

    @resource_labels.setter
    def resource_labels(self, resource_labels):
        """Sets the resource_labels of this GooglePrivacyDlpV2TableDataProfile.

        The labels applied to the resource at the time the profile was generated.

        :param resource_labels: The resource_labels of this GooglePrivacyDlpV2TableDataProfile.
        :type resource_labels: Dict[str, str]
        """

        self._resource_labels = resource_labels

    @property
    def resource_visibility(self):
        """Gets the resource_visibility of this GooglePrivacyDlpV2TableDataProfile.

        How broadly a resource has been shared.

        :return: The resource_visibility of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._resource_visibility

    @resource_visibility.setter
    def resource_visibility(self, resource_visibility):
        """Sets the resource_visibility of this GooglePrivacyDlpV2TableDataProfile.

        How broadly a resource has been shared.

        :param resource_visibility: The resource_visibility of this GooglePrivacyDlpV2TableDataProfile.
        :type resource_visibility: str
        """
        allowed_values = ["RESOURCE_VISIBILITY_UNSPECIFIED", "RESOURCE_VISIBILITY_PUBLIC", "RESOURCE_VISIBILITY_RESTRICTED"]  # noqa: E501
        if resource_visibility not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_visibility` ({0}), must be one of {1}"
                .format(resource_visibility, allowed_values)
            )

        self._resource_visibility = resource_visibility

    @property
    def row_count(self):
        """Gets the row_count of this GooglePrivacyDlpV2TableDataProfile.

        Number of rows in the table when the profile was generated. This will not be populated for BigLake tables.

        :return: The row_count of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this GooglePrivacyDlpV2TableDataProfile.

        Number of rows in the table when the profile was generated. This will not be populated for BigLake tables.

        :param row_count: The row_count of this GooglePrivacyDlpV2TableDataProfile.
        :type row_count: str
        """

        self._row_count = row_count

    @property
    def scanned_column_count(self):
        """Gets the scanned_column_count of this GooglePrivacyDlpV2TableDataProfile.

        The number of columns profiled in the table.

        :return: The scanned_column_count of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._scanned_column_count

    @scanned_column_count.setter
    def scanned_column_count(self, scanned_column_count):
        """Sets the scanned_column_count of this GooglePrivacyDlpV2TableDataProfile.

        The number of columns profiled in the table.

        :param scanned_column_count: The scanned_column_count of this GooglePrivacyDlpV2TableDataProfile.
        :type scanned_column_count: str
        """

        self._scanned_column_count = scanned_column_count

    @property
    def sensitivity_score(self):
        """Gets the sensitivity_score of this GooglePrivacyDlpV2TableDataProfile.


        :return: The sensitivity_score of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: GooglePrivacyDlpV2SensitivityScore
        """
        return self._sensitivity_score

    @sensitivity_score.setter
    def sensitivity_score(self, sensitivity_score):
        """Sets the sensitivity_score of this GooglePrivacyDlpV2TableDataProfile.


        :param sensitivity_score: The sensitivity_score of this GooglePrivacyDlpV2TableDataProfile.
        :type sensitivity_score: GooglePrivacyDlpV2SensitivityScore
        """

        self._sensitivity_score = sensitivity_score

    @property
    def state(self):
        """Gets the state of this GooglePrivacyDlpV2TableDataProfile.

        State of a profile.

        :return: The state of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GooglePrivacyDlpV2TableDataProfile.

        State of a profile.

        :param state: The state of this GooglePrivacyDlpV2TableDataProfile.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "RUNNING", "DONE"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def table_id(self):
        """Gets the table_id of this GooglePrivacyDlpV2TableDataProfile.

        If the resource is BigQuery, the BigQuery table ID.

        :return: The table_id of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._table_id

    @table_id.setter
    def table_id(self, table_id):
        """Sets the table_id of this GooglePrivacyDlpV2TableDataProfile.

        If the resource is BigQuery, the BigQuery table ID.

        :param table_id: The table_id of this GooglePrivacyDlpV2TableDataProfile.
        :type table_id: str
        """

        self._table_id = table_id

    @property
    def table_size_bytes(self):
        """Gets the table_size_bytes of this GooglePrivacyDlpV2TableDataProfile.

        The size of the table when the profile was generated.

        :return: The table_size_bytes of this GooglePrivacyDlpV2TableDataProfile.
        :rtype: str
        """
        return self._table_size_bytes

    @table_size_bytes.setter
    def table_size_bytes(self, table_size_bytes):
        """Sets the table_size_bytes of this GooglePrivacyDlpV2TableDataProfile.

        The size of the table when the profile was generated.

        :param table_size_bytes: The table_size_bytes of this GooglePrivacyDlpV2TableDataProfile.
        :type table_size_bytes: str
        """

        self._table_size_bytes = table_size_bytes
