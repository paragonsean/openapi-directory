# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GooglePrivacyDlpV2LikelihoodAdjustment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fixed_likelihood: str=None, relative_likelihood: int=None):
        """GooglePrivacyDlpV2LikelihoodAdjustment - a model defined in OpenAPI

        :param fixed_likelihood: The fixed_likelihood of this GooglePrivacyDlpV2LikelihoodAdjustment.
        :param relative_likelihood: The relative_likelihood of this GooglePrivacyDlpV2LikelihoodAdjustment.
        """
        self.openapi_types = {
            'fixed_likelihood': str,
            'relative_likelihood': int
        }

        self.attribute_map = {
            'fixed_likelihood': 'fixedLikelihood',
            'relative_likelihood': 'relativeLikelihood'
        }

        self._fixed_likelihood = fixed_likelihood
        self._relative_likelihood = relative_likelihood

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2LikelihoodAdjustment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2LikelihoodAdjustment of this GooglePrivacyDlpV2LikelihoodAdjustment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fixed_likelihood(self):
        """Gets the fixed_likelihood of this GooglePrivacyDlpV2LikelihoodAdjustment.

        Set the likelihood of a finding to a fixed value.

        :return: The fixed_likelihood of this GooglePrivacyDlpV2LikelihoodAdjustment.
        :rtype: str
        """
        return self._fixed_likelihood

    @fixed_likelihood.setter
    def fixed_likelihood(self, fixed_likelihood):
        """Sets the fixed_likelihood of this GooglePrivacyDlpV2LikelihoodAdjustment.

        Set the likelihood of a finding to a fixed value.

        :param fixed_likelihood: The fixed_likelihood of this GooglePrivacyDlpV2LikelihoodAdjustment.
        :type fixed_likelihood: str
        """
        allowed_values = ["LIKELIHOOD_UNSPECIFIED", "VERY_UNLIKELY", "UNLIKELY", "POSSIBLE", "LIKELY", "VERY_LIKELY"]  # noqa: E501
        if fixed_likelihood not in allowed_values:
            raise ValueError(
                "Invalid value for `fixed_likelihood` ({0}), must be one of {1}"
                .format(fixed_likelihood, allowed_values)
            )

        self._fixed_likelihood = fixed_likelihood

    @property
    def relative_likelihood(self):
        """Gets the relative_likelihood of this GooglePrivacyDlpV2LikelihoodAdjustment.

        Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.

        :return: The relative_likelihood of this GooglePrivacyDlpV2LikelihoodAdjustment.
        :rtype: int
        """
        return self._relative_likelihood

    @relative_likelihood.setter
    def relative_likelihood(self, relative_likelihood):
        """Sets the relative_likelihood of this GooglePrivacyDlpV2LikelihoodAdjustment.

        Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.

        :param relative_likelihood: The relative_likelihood of this GooglePrivacyDlpV2LikelihoodAdjustment.
        :type relative_likelihood: int
        """

        self._relative_likelihood = relative_likelihood
