# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_action import GooglePrivacyDlpV2Action
from openapi_server.models.google_privacy_dlp_v2_inspect_config import GooglePrivacyDlpV2InspectConfig
from openapi_server.models.google_privacy_dlp_v2_storage_config import GooglePrivacyDlpV2StorageConfig
from openapi_server import util


class GooglePrivacyDlpV2InspectJobConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions: List[GooglePrivacyDlpV2Action]=None, inspect_config: GooglePrivacyDlpV2InspectConfig=None, inspect_template_name: str=None, storage_config: GooglePrivacyDlpV2StorageConfig=None):
        """GooglePrivacyDlpV2InspectJobConfig - a model defined in OpenAPI

        :param actions: The actions of this GooglePrivacyDlpV2InspectJobConfig.
        :param inspect_config: The inspect_config of this GooglePrivacyDlpV2InspectJobConfig.
        :param inspect_template_name: The inspect_template_name of this GooglePrivacyDlpV2InspectJobConfig.
        :param storage_config: The storage_config of this GooglePrivacyDlpV2InspectJobConfig.
        """
        self.openapi_types = {
            'actions': List[GooglePrivacyDlpV2Action],
            'inspect_config': GooglePrivacyDlpV2InspectConfig,
            'inspect_template_name': str,
            'storage_config': GooglePrivacyDlpV2StorageConfig
        }

        self.attribute_map = {
            'actions': 'actions',
            'inspect_config': 'inspectConfig',
            'inspect_template_name': 'inspectTemplateName',
            'storage_config': 'storageConfig'
        }

        self._actions = actions
        self._inspect_config = inspect_config
        self._inspect_template_name = inspect_template_name
        self._storage_config = storage_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2InspectJobConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2InspectJobConfig of this GooglePrivacyDlpV2InspectJobConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions(self):
        """Gets the actions of this GooglePrivacyDlpV2InspectJobConfig.

        Actions to execute at the completion of the job.

        :return: The actions of this GooglePrivacyDlpV2InspectJobConfig.
        :rtype: List[GooglePrivacyDlpV2Action]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this GooglePrivacyDlpV2InspectJobConfig.

        Actions to execute at the completion of the job.

        :param actions: The actions of this GooglePrivacyDlpV2InspectJobConfig.
        :type actions: List[GooglePrivacyDlpV2Action]
        """

        self._actions = actions

    @property
    def inspect_config(self):
        """Gets the inspect_config of this GooglePrivacyDlpV2InspectJobConfig.


        :return: The inspect_config of this GooglePrivacyDlpV2InspectJobConfig.
        :rtype: GooglePrivacyDlpV2InspectConfig
        """
        return self._inspect_config

    @inspect_config.setter
    def inspect_config(self, inspect_config):
        """Sets the inspect_config of this GooglePrivacyDlpV2InspectJobConfig.


        :param inspect_config: The inspect_config of this GooglePrivacyDlpV2InspectJobConfig.
        :type inspect_config: GooglePrivacyDlpV2InspectConfig
        """

        self._inspect_config = inspect_config

    @property
    def inspect_template_name(self):
        """Gets the inspect_template_name of this GooglePrivacyDlpV2InspectJobConfig.

        If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.

        :return: The inspect_template_name of this GooglePrivacyDlpV2InspectJobConfig.
        :rtype: str
        """
        return self._inspect_template_name

    @inspect_template_name.setter
    def inspect_template_name(self, inspect_template_name):
        """Sets the inspect_template_name of this GooglePrivacyDlpV2InspectJobConfig.

        If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.

        :param inspect_template_name: The inspect_template_name of this GooglePrivacyDlpV2InspectJobConfig.
        :type inspect_template_name: str
        """

        self._inspect_template_name = inspect_template_name

    @property
    def storage_config(self):
        """Gets the storage_config of this GooglePrivacyDlpV2InspectJobConfig.


        :return: The storage_config of this GooglePrivacyDlpV2InspectJobConfig.
        :rtype: GooglePrivacyDlpV2StorageConfig
        """
        return self._storage_config

    @storage_config.setter
    def storage_config(self, storage_config):
        """Sets the storage_config of this GooglePrivacyDlpV2InspectJobConfig.


        :param storage_config: The storage_config of this GooglePrivacyDlpV2InspectJobConfig.
        :type storage_config: GooglePrivacyDlpV2StorageConfig
        """

        self._storage_config = storage_config
