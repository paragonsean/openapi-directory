# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GooglePrivacyDlpV2PartitionId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, namespace_id: str=None, project_id: str=None):
        """GooglePrivacyDlpV2PartitionId - a model defined in OpenAPI

        :param namespace_id: The namespace_id of this GooglePrivacyDlpV2PartitionId.
        :param project_id: The project_id of this GooglePrivacyDlpV2PartitionId.
        """
        self.openapi_types = {
            'namespace_id': str,
            'project_id': str
        }

        self.attribute_map = {
            'namespace_id': 'namespaceId',
            'project_id': 'projectId'
        }

        self._namespace_id = namespace_id
        self._project_id = project_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2PartitionId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2PartitionId of this GooglePrivacyDlpV2PartitionId.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def namespace_id(self):
        """Gets the namespace_id of this GooglePrivacyDlpV2PartitionId.

        If not empty, the ID of the namespace to which the entities belong.

        :return: The namespace_id of this GooglePrivacyDlpV2PartitionId.
        :rtype: str
        """
        return self._namespace_id

    @namespace_id.setter
    def namespace_id(self, namespace_id):
        """Sets the namespace_id of this GooglePrivacyDlpV2PartitionId.

        If not empty, the ID of the namespace to which the entities belong.

        :param namespace_id: The namespace_id of this GooglePrivacyDlpV2PartitionId.
        :type namespace_id: str
        """

        self._namespace_id = namespace_id

    @property
    def project_id(self):
        """Gets the project_id of this GooglePrivacyDlpV2PartitionId.

        The ID of the project to which the entities belong.

        :return: The project_id of this GooglePrivacyDlpV2PartitionId.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this GooglePrivacyDlpV2PartitionId.

        The ID of the project to which the entities belong.

        :param project_id: The project_id of this GooglePrivacyDlpV2PartitionId.
        :type project_id: str
        """

        self._project_id = project_id
