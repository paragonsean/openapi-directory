# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_entity_id import GooglePrivacyDlpV2EntityId
from openapi_server.models.google_privacy_dlp_v2_field_id import GooglePrivacyDlpV2FieldId
from openapi_server import util


class GooglePrivacyDlpV2KAnonymityConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: GooglePrivacyDlpV2EntityId=None, quasi_ids: List[GooglePrivacyDlpV2FieldId]=None):
        """GooglePrivacyDlpV2KAnonymityConfig - a model defined in OpenAPI

        :param entity_id: The entity_id of this GooglePrivacyDlpV2KAnonymityConfig.
        :param quasi_ids: The quasi_ids of this GooglePrivacyDlpV2KAnonymityConfig.
        """
        self.openapi_types = {
            'entity_id': GooglePrivacyDlpV2EntityId,
            'quasi_ids': List[GooglePrivacyDlpV2FieldId]
        }

        self.attribute_map = {
            'entity_id': 'entityId',
            'quasi_ids': 'quasiIds'
        }

        self._entity_id = entity_id
        self._quasi_ids = quasi_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2KAnonymityConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2KAnonymityConfig of this GooglePrivacyDlpV2KAnonymityConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this GooglePrivacyDlpV2KAnonymityConfig.


        :return: The entity_id of this GooglePrivacyDlpV2KAnonymityConfig.
        :rtype: GooglePrivacyDlpV2EntityId
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this GooglePrivacyDlpV2KAnonymityConfig.


        :param entity_id: The entity_id of this GooglePrivacyDlpV2KAnonymityConfig.
        :type entity_id: GooglePrivacyDlpV2EntityId
        """

        self._entity_id = entity_id

    @property
    def quasi_ids(self):
        """Gets the quasi_ids of this GooglePrivacyDlpV2KAnonymityConfig.

        Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.

        :return: The quasi_ids of this GooglePrivacyDlpV2KAnonymityConfig.
        :rtype: List[GooglePrivacyDlpV2FieldId]
        """
        return self._quasi_ids

    @quasi_ids.setter
    def quasi_ids(self, quasi_ids):
        """Sets the quasi_ids of this GooglePrivacyDlpV2KAnonymityConfig.

        Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.

        :param quasi_ids: The quasi_ids of this GooglePrivacyDlpV2KAnonymityConfig.
        :type quasi_ids: List[GooglePrivacyDlpV2FieldId]
        """

        self._quasi_ids = quasi_ids
