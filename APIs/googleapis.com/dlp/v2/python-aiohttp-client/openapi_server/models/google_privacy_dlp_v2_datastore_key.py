# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_key import GooglePrivacyDlpV2Key
from openapi_server import util


class GooglePrivacyDlpV2DatastoreKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_key: GooglePrivacyDlpV2Key=None):
        """GooglePrivacyDlpV2DatastoreKey - a model defined in OpenAPI

        :param entity_key: The entity_key of this GooglePrivacyDlpV2DatastoreKey.
        """
        self.openapi_types = {
            'entity_key': GooglePrivacyDlpV2Key
        }

        self.attribute_map = {
            'entity_key': 'entityKey'
        }

        self._entity_key = entity_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2DatastoreKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2DatastoreKey of this GooglePrivacyDlpV2DatastoreKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_key(self):
        """Gets the entity_key of this GooglePrivacyDlpV2DatastoreKey.


        :return: The entity_key of this GooglePrivacyDlpV2DatastoreKey.
        :rtype: GooglePrivacyDlpV2Key
        """
        return self._entity_key

    @entity_key.setter
    def entity_key(self, entity_key):
        """Sets the entity_key of this GooglePrivacyDlpV2DatastoreKey.


        :param entity_key: The entity_key of this GooglePrivacyDlpV2DatastoreKey.
        :type entity_key: GooglePrivacyDlpV2Key
        """

        self._entity_key = entity_key
