# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GooglePrivacyDlpV2WordList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, words: List[str]=None):
        """GooglePrivacyDlpV2WordList - a model defined in OpenAPI

        :param words: The words of this GooglePrivacyDlpV2WordList.
        """
        self.openapi_types = {
            'words': List[str]
        }

        self.attribute_map = {
            'words': 'words'
        }

        self._words = words

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2WordList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2WordList of this GooglePrivacyDlpV2WordList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def words(self):
        """Gets the words of this GooglePrivacyDlpV2WordList.

        Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]

        :return: The words of this GooglePrivacyDlpV2WordList.
        :rtype: List[str]
        """
        return self._words

    @words.setter
    def words(self, words):
        """Sets the words of this GooglePrivacyDlpV2WordList.

        Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]

        :param words: The words of this GooglePrivacyDlpV2WordList.
        :type words: List[str]
        """

        self._words = words
