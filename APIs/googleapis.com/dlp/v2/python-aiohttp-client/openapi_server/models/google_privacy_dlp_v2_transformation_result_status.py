# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GooglePrivacyDlpV2TransformationResultStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: GoogleRpcStatus=None, result_status_type: str=None):
        """GooglePrivacyDlpV2TransformationResultStatus - a model defined in OpenAPI

        :param details: The details of this GooglePrivacyDlpV2TransformationResultStatus.
        :param result_status_type: The result_status_type of this GooglePrivacyDlpV2TransformationResultStatus.
        """
        self.openapi_types = {
            'details': GoogleRpcStatus,
            'result_status_type': str
        }

        self.attribute_map = {
            'details': 'details',
            'result_status_type': 'resultStatusType'
        }

        self._details = details
        self._result_status_type = result_status_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2TransformationResultStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2TransformationResultStatus of this GooglePrivacyDlpV2TransformationResultStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this GooglePrivacyDlpV2TransformationResultStatus.


        :return: The details of this GooglePrivacyDlpV2TransformationResultStatus.
        :rtype: GoogleRpcStatus
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this GooglePrivacyDlpV2TransformationResultStatus.


        :param details: The details of this GooglePrivacyDlpV2TransformationResultStatus.
        :type details: GoogleRpcStatus
        """

        self._details = details

    @property
    def result_status_type(self):
        """Gets the result_status_type of this GooglePrivacyDlpV2TransformationResultStatus.

        Transformation result status type, this will be either SUCCESS, or it will be the reason for why the transformation was not completely successful.

        :return: The result_status_type of this GooglePrivacyDlpV2TransformationResultStatus.
        :rtype: str
        """
        return self._result_status_type

    @result_status_type.setter
    def result_status_type(self, result_status_type):
        """Sets the result_status_type of this GooglePrivacyDlpV2TransformationResultStatus.

        Transformation result status type, this will be either SUCCESS, or it will be the reason for why the transformation was not completely successful.

        :param result_status_type: The result_status_type of this GooglePrivacyDlpV2TransformationResultStatus.
        :type result_status_type: str
        """
        allowed_values = ["STATE_TYPE_UNSPECIFIED", "INVALID_TRANSFORM", "BIGQUERY_MAX_ROW_SIZE_EXCEEDED", "METADATA_UNRETRIEVABLE", "SUCCESS"]  # noqa: E501
        if result_status_type not in allowed_values:
            raise ValueError(
                "Invalid value for `result_status_type` ({0}), must be one of {1}"
                .format(result_status_type, allowed_values)
            )

        self._result_status_type = result_status_type
