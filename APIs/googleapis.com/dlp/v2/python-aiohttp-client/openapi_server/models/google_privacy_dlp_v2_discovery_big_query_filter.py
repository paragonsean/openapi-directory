# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_big_query_table_collection import GooglePrivacyDlpV2BigQueryTableCollection
from openapi_server import util


class GooglePrivacyDlpV2DiscoveryBigQueryFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, other_tables: object=None, tables: GooglePrivacyDlpV2BigQueryTableCollection=None):
        """GooglePrivacyDlpV2DiscoveryBigQueryFilter - a model defined in OpenAPI

        :param other_tables: The other_tables of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.
        :param tables: The tables of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.
        """
        self.openapi_types = {
            'other_tables': object,
            'tables': GooglePrivacyDlpV2BigQueryTableCollection
        }

        self.attribute_map = {
            'other_tables': 'otherTables',
            'tables': 'tables'
        }

        self._other_tables = other_tables
        self._tables = tables

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2DiscoveryBigQueryFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2DiscoveryBigQueryFilter of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def other_tables(self):
        """Gets the other_tables of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.

        Catch-all for all other tables not specified by other filters. Should always be last, except for single-table configurations, which will only have a TableReference target.

        :return: The other_tables of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.
        :rtype: object
        """
        return self._other_tables

    @other_tables.setter
    def other_tables(self, other_tables):
        """Sets the other_tables of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.

        Catch-all for all other tables not specified by other filters. Should always be last, except for single-table configurations, which will only have a TableReference target.

        :param other_tables: The other_tables of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.
        :type other_tables: object
        """

        self._other_tables = other_tables

    @property
    def tables(self):
        """Gets the tables of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.


        :return: The tables of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.
        :rtype: GooglePrivacyDlpV2BigQueryTableCollection
        """
        return self._tables

    @tables.setter
    def tables(self, tables):
        """Sets the tables of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.


        :param tables: The tables of this GooglePrivacyDlpV2DiscoveryBigQueryFilter.
        :type tables: GooglePrivacyDlpV2BigQueryTableCollection
        """

        self._tables = tables
