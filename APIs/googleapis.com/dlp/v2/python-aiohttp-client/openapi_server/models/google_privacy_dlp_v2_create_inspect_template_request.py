# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_inspect_template import GooglePrivacyDlpV2InspectTemplate
from openapi_server import util


class GooglePrivacyDlpV2CreateInspectTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inspect_template: GooglePrivacyDlpV2InspectTemplate=None, location_id: str=None, template_id: str=None):
        """GooglePrivacyDlpV2CreateInspectTemplateRequest - a model defined in OpenAPI

        :param inspect_template: The inspect_template of this GooglePrivacyDlpV2CreateInspectTemplateRequest.
        :param location_id: The location_id of this GooglePrivacyDlpV2CreateInspectTemplateRequest.
        :param template_id: The template_id of this GooglePrivacyDlpV2CreateInspectTemplateRequest.
        """
        self.openapi_types = {
            'inspect_template': GooglePrivacyDlpV2InspectTemplate,
            'location_id': str,
            'template_id': str
        }

        self.attribute_map = {
            'inspect_template': 'inspectTemplate',
            'location_id': 'locationId',
            'template_id': 'templateId'
        }

        self._inspect_template = inspect_template
        self._location_id = location_id
        self._template_id = template_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2CreateInspectTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2CreateInspectTemplateRequest of this GooglePrivacyDlpV2CreateInspectTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inspect_template(self):
        """Gets the inspect_template of this GooglePrivacyDlpV2CreateInspectTemplateRequest.


        :return: The inspect_template of this GooglePrivacyDlpV2CreateInspectTemplateRequest.
        :rtype: GooglePrivacyDlpV2InspectTemplate
        """
        return self._inspect_template

    @inspect_template.setter
    def inspect_template(self, inspect_template):
        """Sets the inspect_template of this GooglePrivacyDlpV2CreateInspectTemplateRequest.


        :param inspect_template: The inspect_template of this GooglePrivacyDlpV2CreateInspectTemplateRequest.
        :type inspect_template: GooglePrivacyDlpV2InspectTemplate
        """

        self._inspect_template = inspect_template

    @property
    def location_id(self):
        """Gets the location_id of this GooglePrivacyDlpV2CreateInspectTemplateRequest.

        Deprecated. This field has no effect.

        :return: The location_id of this GooglePrivacyDlpV2CreateInspectTemplateRequest.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this GooglePrivacyDlpV2CreateInspectTemplateRequest.

        Deprecated. This field has no effect.

        :param location_id: The location_id of this GooglePrivacyDlpV2CreateInspectTemplateRequest.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def template_id(self):
        """Gets the template_id of this GooglePrivacyDlpV2CreateInspectTemplateRequest.

        The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.

        :return: The template_id of this GooglePrivacyDlpV2CreateInspectTemplateRequest.
        :rtype: str
        """
        return self._template_id

    @template_id.setter
    def template_id(self, template_id):
        """Sets the template_id of this GooglePrivacyDlpV2CreateInspectTemplateRequest.

        The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.

        :param template_id: The template_id of this GooglePrivacyDlpV2CreateInspectTemplateRequest.
        :type template_id: str
        """

        self._template_id = template_id
