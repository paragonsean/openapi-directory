# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GooglePrivacyDlpV2CloudStorageRegexFileSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_name: str=None, exclude_regex: List[str]=None, include_regex: List[str]=None):
        """GooglePrivacyDlpV2CloudStorageRegexFileSet - a model defined in OpenAPI

        :param bucket_name: The bucket_name of this GooglePrivacyDlpV2CloudStorageRegexFileSet.
        :param exclude_regex: The exclude_regex of this GooglePrivacyDlpV2CloudStorageRegexFileSet.
        :param include_regex: The include_regex of this GooglePrivacyDlpV2CloudStorageRegexFileSet.
        """
        self.openapi_types = {
            'bucket_name': str,
            'exclude_regex': List[str],
            'include_regex': List[str]
        }

        self.attribute_map = {
            'bucket_name': 'bucketName',
            'exclude_regex': 'excludeRegex',
            'include_regex': 'includeRegex'
        }

        self._bucket_name = bucket_name
        self._exclude_regex = exclude_regex
        self._include_regex = include_regex

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2CloudStorageRegexFileSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2CloudStorageRegexFileSet of this GooglePrivacyDlpV2CloudStorageRegexFileSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_name(self):
        """Gets the bucket_name of this GooglePrivacyDlpV2CloudStorageRegexFileSet.

        The name of a Cloud Storage bucket. Required.

        :return: The bucket_name of this GooglePrivacyDlpV2CloudStorageRegexFileSet.
        :rtype: str
        """
        return self._bucket_name

    @bucket_name.setter
    def bucket_name(self, bucket_name):
        """Sets the bucket_name of this GooglePrivacyDlpV2CloudStorageRegexFileSet.

        The name of a Cloud Storage bucket. Required.

        :param bucket_name: The bucket_name of this GooglePrivacyDlpV2CloudStorageRegexFileSet.
        :type bucket_name: str
        """

        self._bucket_name = bucket_name

    @property
    def exclude_regex(self):
        """Gets the exclude_regex of this GooglePrivacyDlpV2CloudStorageRegexFileSet.

        A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.

        :return: The exclude_regex of this GooglePrivacyDlpV2CloudStorageRegexFileSet.
        :rtype: List[str]
        """
        return self._exclude_regex

    @exclude_regex.setter
    def exclude_regex(self, exclude_regex):
        """Sets the exclude_regex of this GooglePrivacyDlpV2CloudStorageRegexFileSet.

        A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.

        :param exclude_regex: The exclude_regex of this GooglePrivacyDlpV2CloudStorageRegexFileSet.
        :type exclude_regex: List[str]
        """

        self._exclude_regex = exclude_regex

    @property
    def include_regex(self):
        """Gets the include_regex of this GooglePrivacyDlpV2CloudStorageRegexFileSet.

        A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.

        :return: The include_regex of this GooglePrivacyDlpV2CloudStorageRegexFileSet.
        :rtype: List[str]
        """
        return self._include_regex

    @include_regex.setter
    def include_regex(self, include_regex):
        """Sets the include_regex of this GooglePrivacyDlpV2CloudStorageRegexFileSet.

        A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.

        :param include_regex: The include_regex of this GooglePrivacyDlpV2CloudStorageRegexFileSet.
        :type include_regex: List[str]
        """

        self._include_regex = include_regex
