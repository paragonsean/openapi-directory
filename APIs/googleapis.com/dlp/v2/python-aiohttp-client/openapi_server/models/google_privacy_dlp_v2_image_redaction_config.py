# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_color import GooglePrivacyDlpV2Color
from openapi_server.models.google_privacy_dlp_v2_info_type import GooglePrivacyDlpV2InfoType
from openapi_server import util


class GooglePrivacyDlpV2ImageRedactionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, info_type: GooglePrivacyDlpV2InfoType=None, redact_all_text: bool=None, redaction_color: GooglePrivacyDlpV2Color=None):
        """GooglePrivacyDlpV2ImageRedactionConfig - a model defined in OpenAPI

        :param info_type: The info_type of this GooglePrivacyDlpV2ImageRedactionConfig.
        :param redact_all_text: The redact_all_text of this GooglePrivacyDlpV2ImageRedactionConfig.
        :param redaction_color: The redaction_color of this GooglePrivacyDlpV2ImageRedactionConfig.
        """
        self.openapi_types = {
            'info_type': GooglePrivacyDlpV2InfoType,
            'redact_all_text': bool,
            'redaction_color': GooglePrivacyDlpV2Color
        }

        self.attribute_map = {
            'info_type': 'infoType',
            'redact_all_text': 'redactAllText',
            'redaction_color': 'redactionColor'
        }

        self._info_type = info_type
        self._redact_all_text = redact_all_text
        self._redaction_color = redaction_color

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2ImageRedactionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2ImageRedactionConfig of this GooglePrivacyDlpV2ImageRedactionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def info_type(self):
        """Gets the info_type of this GooglePrivacyDlpV2ImageRedactionConfig.


        :return: The info_type of this GooglePrivacyDlpV2ImageRedactionConfig.
        :rtype: GooglePrivacyDlpV2InfoType
        """
        return self._info_type

    @info_type.setter
    def info_type(self, info_type):
        """Sets the info_type of this GooglePrivacyDlpV2ImageRedactionConfig.


        :param info_type: The info_type of this GooglePrivacyDlpV2ImageRedactionConfig.
        :type info_type: GooglePrivacyDlpV2InfoType
        """

        self._info_type = info_type

    @property
    def redact_all_text(self):
        """Gets the redact_all_text of this GooglePrivacyDlpV2ImageRedactionConfig.

        If true, all text found in the image, regardless whether it matches an info_type, is redacted. Only one should be provided.

        :return: The redact_all_text of this GooglePrivacyDlpV2ImageRedactionConfig.
        :rtype: bool
        """
        return self._redact_all_text

    @redact_all_text.setter
    def redact_all_text(self, redact_all_text):
        """Sets the redact_all_text of this GooglePrivacyDlpV2ImageRedactionConfig.

        If true, all text found in the image, regardless whether it matches an info_type, is redacted. Only one should be provided.

        :param redact_all_text: The redact_all_text of this GooglePrivacyDlpV2ImageRedactionConfig.
        :type redact_all_text: bool
        """

        self._redact_all_text = redact_all_text

    @property
    def redaction_color(self):
        """Gets the redaction_color of this GooglePrivacyDlpV2ImageRedactionConfig.


        :return: The redaction_color of this GooglePrivacyDlpV2ImageRedactionConfig.
        :rtype: GooglePrivacyDlpV2Color
        """
        return self._redaction_color

    @redaction_color.setter
    def redaction_color(self, redaction_color):
        """Sets the redaction_color of this GooglePrivacyDlpV2ImageRedactionConfig.


        :param redaction_color: The redaction_color of this GooglePrivacyDlpV2ImageRedactionConfig.
        :type redaction_color: GooglePrivacyDlpV2Color
        """

        self._redaction_color = redaction_color
