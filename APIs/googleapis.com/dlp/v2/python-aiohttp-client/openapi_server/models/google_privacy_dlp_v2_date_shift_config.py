# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_crypto_key import GooglePrivacyDlpV2CryptoKey
from openapi_server.models.google_privacy_dlp_v2_field_id import GooglePrivacyDlpV2FieldId
from openapi_server import util


class GooglePrivacyDlpV2DateShiftConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: GooglePrivacyDlpV2FieldId=None, crypto_key: GooglePrivacyDlpV2CryptoKey=None, lower_bound_days: int=None, upper_bound_days: int=None):
        """GooglePrivacyDlpV2DateShiftConfig - a model defined in OpenAPI

        :param context: The context of this GooglePrivacyDlpV2DateShiftConfig.
        :param crypto_key: The crypto_key of this GooglePrivacyDlpV2DateShiftConfig.
        :param lower_bound_days: The lower_bound_days of this GooglePrivacyDlpV2DateShiftConfig.
        :param upper_bound_days: The upper_bound_days of this GooglePrivacyDlpV2DateShiftConfig.
        """
        self.openapi_types = {
            'context': GooglePrivacyDlpV2FieldId,
            'crypto_key': GooglePrivacyDlpV2CryptoKey,
            'lower_bound_days': int,
            'upper_bound_days': int
        }

        self.attribute_map = {
            'context': 'context',
            'crypto_key': 'cryptoKey',
            'lower_bound_days': 'lowerBoundDays',
            'upper_bound_days': 'upperBoundDays'
        }

        self._context = context
        self._crypto_key = crypto_key
        self._lower_bound_days = lower_bound_days
        self._upper_bound_days = upper_bound_days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2DateShiftConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2DateShiftConfig of this GooglePrivacyDlpV2DateShiftConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this GooglePrivacyDlpV2DateShiftConfig.


        :return: The context of this GooglePrivacyDlpV2DateShiftConfig.
        :rtype: GooglePrivacyDlpV2FieldId
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this GooglePrivacyDlpV2DateShiftConfig.


        :param context: The context of this GooglePrivacyDlpV2DateShiftConfig.
        :type context: GooglePrivacyDlpV2FieldId
        """

        self._context = context

    @property
    def crypto_key(self):
        """Gets the crypto_key of this GooglePrivacyDlpV2DateShiftConfig.


        :return: The crypto_key of this GooglePrivacyDlpV2DateShiftConfig.
        :rtype: GooglePrivacyDlpV2CryptoKey
        """
        return self._crypto_key

    @crypto_key.setter
    def crypto_key(self, crypto_key):
        """Sets the crypto_key of this GooglePrivacyDlpV2DateShiftConfig.


        :param crypto_key: The crypto_key of this GooglePrivacyDlpV2DateShiftConfig.
        :type crypto_key: GooglePrivacyDlpV2CryptoKey
        """

        self._crypto_key = crypto_key

    @property
    def lower_bound_days(self):
        """Gets the lower_bound_days of this GooglePrivacyDlpV2DateShiftConfig.

        Required. For example, -5 means shift date to at most 5 days back in the past.

        :return: The lower_bound_days of this GooglePrivacyDlpV2DateShiftConfig.
        :rtype: int
        """
        return self._lower_bound_days

    @lower_bound_days.setter
    def lower_bound_days(self, lower_bound_days):
        """Sets the lower_bound_days of this GooglePrivacyDlpV2DateShiftConfig.

        Required. For example, -5 means shift date to at most 5 days back in the past.

        :param lower_bound_days: The lower_bound_days of this GooglePrivacyDlpV2DateShiftConfig.
        :type lower_bound_days: int
        """

        self._lower_bound_days = lower_bound_days

    @property
    def upper_bound_days(self):
        """Gets the upper_bound_days of this GooglePrivacyDlpV2DateShiftConfig.

        Required. Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.

        :return: The upper_bound_days of this GooglePrivacyDlpV2DateShiftConfig.
        :rtype: int
        """
        return self._upper_bound_days

    @upper_bound_days.setter
    def upper_bound_days(self, upper_bound_days):
        """Sets the upper_bound_days of this GooglePrivacyDlpV2DateShiftConfig.

        Required. Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.

        :param upper_bound_days: The upper_bound_days of this GooglePrivacyDlpV2DateShiftConfig.
        :type upper_bound_days: int
        """

        self._upper_bound_days = upper_bound_days
