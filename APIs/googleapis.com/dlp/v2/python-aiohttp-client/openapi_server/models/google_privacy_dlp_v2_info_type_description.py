# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_info_type_category import GooglePrivacyDlpV2InfoTypeCategory
from openapi_server.models.google_privacy_dlp_v2_sensitivity_score import GooglePrivacyDlpV2SensitivityScore
from openapi_server.models.google_privacy_dlp_v2_version_description import GooglePrivacyDlpV2VersionDescription
from openapi_server import util


class GooglePrivacyDlpV2InfoTypeDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categories: List[GooglePrivacyDlpV2InfoTypeCategory]=None, description: str=None, display_name: str=None, name: str=None, sensitivity_score: GooglePrivacyDlpV2SensitivityScore=None, supported_by: List[str]=None, versions: List[GooglePrivacyDlpV2VersionDescription]=None):
        """GooglePrivacyDlpV2InfoTypeDescription - a model defined in OpenAPI

        :param categories: The categories of this GooglePrivacyDlpV2InfoTypeDescription.
        :param description: The description of this GooglePrivacyDlpV2InfoTypeDescription.
        :param display_name: The display_name of this GooglePrivacyDlpV2InfoTypeDescription.
        :param name: The name of this GooglePrivacyDlpV2InfoTypeDescription.
        :param sensitivity_score: The sensitivity_score of this GooglePrivacyDlpV2InfoTypeDescription.
        :param supported_by: The supported_by of this GooglePrivacyDlpV2InfoTypeDescription.
        :param versions: The versions of this GooglePrivacyDlpV2InfoTypeDescription.
        """
        self.openapi_types = {
            'categories': List[GooglePrivacyDlpV2InfoTypeCategory],
            'description': str,
            'display_name': str,
            'name': str,
            'sensitivity_score': GooglePrivacyDlpV2SensitivityScore,
            'supported_by': List[str],
            'versions': List[GooglePrivacyDlpV2VersionDescription]
        }

        self.attribute_map = {
            'categories': 'categories',
            'description': 'description',
            'display_name': 'displayName',
            'name': 'name',
            'sensitivity_score': 'sensitivityScore',
            'supported_by': 'supportedBy',
            'versions': 'versions'
        }

        self._categories = categories
        self._description = description
        self._display_name = display_name
        self._name = name
        self._sensitivity_score = sensitivity_score
        self._supported_by = supported_by
        self._versions = versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2InfoTypeDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2InfoTypeDescription of this GooglePrivacyDlpV2InfoTypeDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories(self):
        """Gets the categories of this GooglePrivacyDlpV2InfoTypeDescription.

        The category of the infoType.

        :return: The categories of this GooglePrivacyDlpV2InfoTypeDescription.
        :rtype: List[GooglePrivacyDlpV2InfoTypeCategory]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this GooglePrivacyDlpV2InfoTypeDescription.

        The category of the infoType.

        :param categories: The categories of this GooglePrivacyDlpV2InfoTypeDescription.
        :type categories: List[GooglePrivacyDlpV2InfoTypeCategory]
        """

        self._categories = categories

    @property
    def description(self):
        """Gets the description of this GooglePrivacyDlpV2InfoTypeDescription.

        Description of the infotype. Translated when language is provided in the request.

        :return: The description of this GooglePrivacyDlpV2InfoTypeDescription.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GooglePrivacyDlpV2InfoTypeDescription.

        Description of the infotype. Translated when language is provided in the request.

        :param description: The description of this GooglePrivacyDlpV2InfoTypeDescription.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GooglePrivacyDlpV2InfoTypeDescription.

        Human readable form of the infoType name.

        :return: The display_name of this GooglePrivacyDlpV2InfoTypeDescription.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GooglePrivacyDlpV2InfoTypeDescription.

        Human readable form of the infoType name.

        :param display_name: The display_name of this GooglePrivacyDlpV2InfoTypeDescription.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this GooglePrivacyDlpV2InfoTypeDescription.

        Internal name of the infoType.

        :return: The name of this GooglePrivacyDlpV2InfoTypeDescription.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GooglePrivacyDlpV2InfoTypeDescription.

        Internal name of the infoType.

        :param name: The name of this GooglePrivacyDlpV2InfoTypeDescription.
        :type name: str
        """

        self._name = name

    @property
    def sensitivity_score(self):
        """Gets the sensitivity_score of this GooglePrivacyDlpV2InfoTypeDescription.


        :return: The sensitivity_score of this GooglePrivacyDlpV2InfoTypeDescription.
        :rtype: GooglePrivacyDlpV2SensitivityScore
        """
        return self._sensitivity_score

    @sensitivity_score.setter
    def sensitivity_score(self, sensitivity_score):
        """Sets the sensitivity_score of this GooglePrivacyDlpV2InfoTypeDescription.


        :param sensitivity_score: The sensitivity_score of this GooglePrivacyDlpV2InfoTypeDescription.
        :type sensitivity_score: GooglePrivacyDlpV2SensitivityScore
        """

        self._sensitivity_score = sensitivity_score

    @property
    def supported_by(self):
        """Gets the supported_by of this GooglePrivacyDlpV2InfoTypeDescription.

        Which parts of the API supports this InfoType.

        :return: The supported_by of this GooglePrivacyDlpV2InfoTypeDescription.
        :rtype: List[str]
        """
        return self._supported_by

    @supported_by.setter
    def supported_by(self, supported_by):
        """Sets the supported_by of this GooglePrivacyDlpV2InfoTypeDescription.

        Which parts of the API supports this InfoType.

        :param supported_by: The supported_by of this GooglePrivacyDlpV2InfoTypeDescription.
        :type supported_by: List[str]
        """
        allowed_values = ["ENUM_TYPE_UNSPECIFIED", "INSPECT", "RISK_ANALYSIS"]  # noqa: E501
        if not set(supported_by).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `supported_by` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(supported_by) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._supported_by = supported_by

    @property
    def versions(self):
        """Gets the versions of this GooglePrivacyDlpV2InfoTypeDescription.

        A list of available versions for the infotype.

        :return: The versions of this GooglePrivacyDlpV2InfoTypeDescription.
        :rtype: List[GooglePrivacyDlpV2VersionDescription]
        """
        return self._versions

    @versions.setter
    def versions(self, versions):
        """Sets the versions of this GooglePrivacyDlpV2InfoTypeDescription.

        A list of available versions for the infotype.

        :param versions: The versions of this GooglePrivacyDlpV2InfoTypeDescription.
        :type versions: List[GooglePrivacyDlpV2VersionDescription]
        """

        self._versions = versions
