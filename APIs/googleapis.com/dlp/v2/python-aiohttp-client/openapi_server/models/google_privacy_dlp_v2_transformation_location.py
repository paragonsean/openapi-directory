# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_record_transformation import GooglePrivacyDlpV2RecordTransformation
from openapi_server import util


class GooglePrivacyDlpV2TransformationLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_type: str=None, finding_id: str=None, record_transformation: GooglePrivacyDlpV2RecordTransformation=None):
        """GooglePrivacyDlpV2TransformationLocation - a model defined in OpenAPI

        :param container_type: The container_type of this GooglePrivacyDlpV2TransformationLocation.
        :param finding_id: The finding_id of this GooglePrivacyDlpV2TransformationLocation.
        :param record_transformation: The record_transformation of this GooglePrivacyDlpV2TransformationLocation.
        """
        self.openapi_types = {
            'container_type': str,
            'finding_id': str,
            'record_transformation': GooglePrivacyDlpV2RecordTransformation
        }

        self.attribute_map = {
            'container_type': 'containerType',
            'finding_id': 'findingId',
            'record_transformation': 'recordTransformation'
        }

        self._container_type = container_type
        self._finding_id = finding_id
        self._record_transformation = record_transformation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2TransformationLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2TransformationLocation of this GooglePrivacyDlpV2TransformationLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_type(self):
        """Gets the container_type of this GooglePrivacyDlpV2TransformationLocation.

        Information about the functionality of the container where this finding occurred, if available.

        :return: The container_type of this GooglePrivacyDlpV2TransformationLocation.
        :rtype: str
        """
        return self._container_type

    @container_type.setter
    def container_type(self, container_type):
        """Sets the container_type of this GooglePrivacyDlpV2TransformationLocation.

        Information about the functionality of the container where this finding occurred, if available.

        :param container_type: The container_type of this GooglePrivacyDlpV2TransformationLocation.
        :type container_type: str
        """
        allowed_values = ["TRANSFORM_UNKNOWN_CONTAINER", "TRANSFORM_BODY", "TRANSFORM_METADATA", "TRANSFORM_TABLE"]  # noqa: E501
        if container_type not in allowed_values:
            raise ValueError(
                "Invalid value for `container_type` ({0}), must be one of {1}"
                .format(container_type, allowed_values)
            )

        self._container_type = container_type

    @property
    def finding_id(self):
        """Gets the finding_id of this GooglePrivacyDlpV2TransformationLocation.

        For infotype transformations, link to the corresponding findings ID so that location information does not need to be duplicated. Each findings ID correlates to an entry in the findings output table, this table only gets created when users specify to save findings (add the save findings action to the request).

        :return: The finding_id of this GooglePrivacyDlpV2TransformationLocation.
        :rtype: str
        """
        return self._finding_id

    @finding_id.setter
    def finding_id(self, finding_id):
        """Sets the finding_id of this GooglePrivacyDlpV2TransformationLocation.

        For infotype transformations, link to the corresponding findings ID so that location information does not need to be duplicated. Each findings ID correlates to an entry in the findings output table, this table only gets created when users specify to save findings (add the save findings action to the request).

        :param finding_id: The finding_id of this GooglePrivacyDlpV2TransformationLocation.
        :type finding_id: str
        """

        self._finding_id = finding_id

    @property
    def record_transformation(self):
        """Gets the record_transformation of this GooglePrivacyDlpV2TransformationLocation.


        :return: The record_transformation of this GooglePrivacyDlpV2TransformationLocation.
        :rtype: GooglePrivacyDlpV2RecordTransformation
        """
        return self._record_transformation

    @record_transformation.setter
    def record_transformation(self, record_transformation):
        """Sets the record_transformation of this GooglePrivacyDlpV2TransformationLocation.


        :param record_transformation: The record_transformation of this GooglePrivacyDlpV2TransformationLocation.
        :type record_transformation: GooglePrivacyDlpV2RecordTransformation
        """

        self._record_transformation = record_transformation
