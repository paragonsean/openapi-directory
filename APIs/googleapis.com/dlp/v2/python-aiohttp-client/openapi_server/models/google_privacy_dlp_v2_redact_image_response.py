# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_inspect_result import GooglePrivacyDlpV2InspectResult
from openapi_server import util


class GooglePrivacyDlpV2RedactImageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extracted_text: str=None, inspect_result: GooglePrivacyDlpV2InspectResult=None, redacted_image: str=None):
        """GooglePrivacyDlpV2RedactImageResponse - a model defined in OpenAPI

        :param extracted_text: The extracted_text of this GooglePrivacyDlpV2RedactImageResponse.
        :param inspect_result: The inspect_result of this GooglePrivacyDlpV2RedactImageResponse.
        :param redacted_image: The redacted_image of this GooglePrivacyDlpV2RedactImageResponse.
        """
        self.openapi_types = {
            'extracted_text': str,
            'inspect_result': GooglePrivacyDlpV2InspectResult,
            'redacted_image': str
        }

        self.attribute_map = {
            'extracted_text': 'extractedText',
            'inspect_result': 'inspectResult',
            'redacted_image': 'redactedImage'
        }

        self._extracted_text = extracted_text
        self._inspect_result = inspect_result
        self._redacted_image = redacted_image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2RedactImageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2RedactImageResponse of this GooglePrivacyDlpV2RedactImageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extracted_text(self):
        """Gets the extracted_text of this GooglePrivacyDlpV2RedactImageResponse.

        If an image was being inspected and the InspectConfig's include_quote was set to true, then this field will include all text, if any, that was found in the image.

        :return: The extracted_text of this GooglePrivacyDlpV2RedactImageResponse.
        :rtype: str
        """
        return self._extracted_text

    @extracted_text.setter
    def extracted_text(self, extracted_text):
        """Sets the extracted_text of this GooglePrivacyDlpV2RedactImageResponse.

        If an image was being inspected and the InspectConfig's include_quote was set to true, then this field will include all text, if any, that was found in the image.

        :param extracted_text: The extracted_text of this GooglePrivacyDlpV2RedactImageResponse.
        :type extracted_text: str
        """

        self._extracted_text = extracted_text

    @property
    def inspect_result(self):
        """Gets the inspect_result of this GooglePrivacyDlpV2RedactImageResponse.


        :return: The inspect_result of this GooglePrivacyDlpV2RedactImageResponse.
        :rtype: GooglePrivacyDlpV2InspectResult
        """
        return self._inspect_result

    @inspect_result.setter
    def inspect_result(self, inspect_result):
        """Sets the inspect_result of this GooglePrivacyDlpV2RedactImageResponse.


        :param inspect_result: The inspect_result of this GooglePrivacyDlpV2RedactImageResponse.
        :type inspect_result: GooglePrivacyDlpV2InspectResult
        """

        self._inspect_result = inspect_result

    @property
    def redacted_image(self):
        """Gets the redacted_image of this GooglePrivacyDlpV2RedactImageResponse.

        The redacted image. The type will be the same as the original image.

        :return: The redacted_image of this GooglePrivacyDlpV2RedactImageResponse.
        :rtype: str
        """
        return self._redacted_image

    @redacted_image.setter
    def redacted_image(self, redacted_image):
        """Sets the redacted_image of this GooglePrivacyDlpV2RedactImageResponse.

        The redacted image. The type will be the same as the original image.

        :param redacted_image: The redacted_image of this GooglePrivacyDlpV2RedactImageResponse.
        :type redacted_image: str
        """

        self._redacted_image = redacted_image
