# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_discovery_big_query_conditions import GooglePrivacyDlpV2DiscoveryBigQueryConditions
from openapi_server.models.google_privacy_dlp_v2_discovery_big_query_filter import GooglePrivacyDlpV2DiscoveryBigQueryFilter
from openapi_server.models.google_privacy_dlp_v2_discovery_generation_cadence import GooglePrivacyDlpV2DiscoveryGenerationCadence
from openapi_server import util


class GooglePrivacyDlpV2BigQueryDiscoveryTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cadence: GooglePrivacyDlpV2DiscoveryGenerationCadence=None, conditions: GooglePrivacyDlpV2DiscoveryBigQueryConditions=None, disabled: object=None, filter: GooglePrivacyDlpV2DiscoveryBigQueryFilter=None):
        """GooglePrivacyDlpV2BigQueryDiscoveryTarget - a model defined in OpenAPI

        :param cadence: The cadence of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :param conditions: The conditions of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :param disabled: The disabled of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :param filter: The filter of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        """
        self.openapi_types = {
            'cadence': GooglePrivacyDlpV2DiscoveryGenerationCadence,
            'conditions': GooglePrivacyDlpV2DiscoveryBigQueryConditions,
            'disabled': object,
            'filter': GooglePrivacyDlpV2DiscoveryBigQueryFilter
        }

        self.attribute_map = {
            'cadence': 'cadence',
            'conditions': 'conditions',
            'disabled': 'disabled',
            'filter': 'filter'
        }

        self._cadence = cadence
        self._conditions = conditions
        self._disabled = disabled
        self._filter = filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2BigQueryDiscoveryTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2BigQueryDiscoveryTarget of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cadence(self):
        """Gets the cadence of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.


        :return: The cadence of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :rtype: GooglePrivacyDlpV2DiscoveryGenerationCadence
        """
        return self._cadence

    @cadence.setter
    def cadence(self, cadence):
        """Sets the cadence of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.


        :param cadence: The cadence of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :type cadence: GooglePrivacyDlpV2DiscoveryGenerationCadence
        """

        self._cadence = cadence

    @property
    def conditions(self):
        """Gets the conditions of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.


        :return: The conditions of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :rtype: GooglePrivacyDlpV2DiscoveryBigQueryConditions
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions):
        """Sets the conditions of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.


        :param conditions: The conditions of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :type conditions: GooglePrivacyDlpV2DiscoveryBigQueryConditions
        """

        self._conditions = conditions

    @property
    def disabled(self):
        """Gets the disabled of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.

        Do not profile the tables.

        :return: The disabled of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :rtype: object
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.

        Do not profile the tables.

        :param disabled: The disabled of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :type disabled: object
        """

        self._disabled = disabled

    @property
    def filter(self):
        """Gets the filter of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.


        :return: The filter of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :rtype: GooglePrivacyDlpV2DiscoveryBigQueryFilter
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.


        :param filter: The filter of this GooglePrivacyDlpV2BigQueryDiscoveryTarget.
        :type filter: GooglePrivacyDlpV2DiscoveryBigQueryFilter
        """

        self._filter = filter
