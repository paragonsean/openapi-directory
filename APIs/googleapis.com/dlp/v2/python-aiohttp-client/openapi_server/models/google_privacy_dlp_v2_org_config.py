# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_discovery_starting_location import GooglePrivacyDlpV2DiscoveryStartingLocation
from openapi_server import util


class GooglePrivacyDlpV2OrgConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location: GooglePrivacyDlpV2DiscoveryStartingLocation=None, project_id: str=None):
        """GooglePrivacyDlpV2OrgConfig - a model defined in OpenAPI

        :param location: The location of this GooglePrivacyDlpV2OrgConfig.
        :param project_id: The project_id of this GooglePrivacyDlpV2OrgConfig.
        """
        self.openapi_types = {
            'location': GooglePrivacyDlpV2DiscoveryStartingLocation,
            'project_id': str
        }

        self.attribute_map = {
            'location': 'location',
            'project_id': 'projectId'
        }

        self._location = location
        self._project_id = project_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2OrgConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2OrgConfig of this GooglePrivacyDlpV2OrgConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self):
        """Gets the location of this GooglePrivacyDlpV2OrgConfig.


        :return: The location of this GooglePrivacyDlpV2OrgConfig.
        :rtype: GooglePrivacyDlpV2DiscoveryStartingLocation
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this GooglePrivacyDlpV2OrgConfig.


        :param location: The location of this GooglePrivacyDlpV2OrgConfig.
        :type location: GooglePrivacyDlpV2DiscoveryStartingLocation
        """

        self._location = location

    @property
    def project_id(self):
        """Gets the project_id of this GooglePrivacyDlpV2OrgConfig.

        The project that will run the scan. The DLP service account that exists within this project must have access to all resources that are profiled, and the Cloud DLP API must be enabled.

        :return: The project_id of this GooglePrivacyDlpV2OrgConfig.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this GooglePrivacyDlpV2OrgConfig.

        The project that will run the scan. The DLP service account that exists within this project must have access to all resources that are profiled, and the Cloud DLP API must be enabled.

        :param project_id: The project_id of this GooglePrivacyDlpV2OrgConfig.
        :type project_id: str
        """

        self._project_id = project_id
