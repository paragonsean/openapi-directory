# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_info_type import GooglePrivacyDlpV2InfoType
from openapi_server import util


class GooglePrivacyDlpV2InfoTypeStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: str=None, info_type: GooglePrivacyDlpV2InfoType=None):
        """GooglePrivacyDlpV2InfoTypeStats - a model defined in OpenAPI

        :param count: The count of this GooglePrivacyDlpV2InfoTypeStats.
        :param info_type: The info_type of this GooglePrivacyDlpV2InfoTypeStats.
        """
        self.openapi_types = {
            'count': str,
            'info_type': GooglePrivacyDlpV2InfoType
        }

        self.attribute_map = {
            'count': 'count',
            'info_type': 'infoType'
        }

        self._count = count
        self._info_type = info_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2InfoTypeStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2InfoTypeStats of this GooglePrivacyDlpV2InfoTypeStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this GooglePrivacyDlpV2InfoTypeStats.

        Number of findings for this infoType.

        :return: The count of this GooglePrivacyDlpV2InfoTypeStats.
        :rtype: str
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this GooglePrivacyDlpV2InfoTypeStats.

        Number of findings for this infoType.

        :param count: The count of this GooglePrivacyDlpV2InfoTypeStats.
        :type count: str
        """

        self._count = count

    @property
    def info_type(self):
        """Gets the info_type of this GooglePrivacyDlpV2InfoTypeStats.


        :return: The info_type of this GooglePrivacyDlpV2InfoTypeStats.
        :rtype: GooglePrivacyDlpV2InfoType
        """
        return self._info_type

    @info_type.setter
    def info_type(self, info_type):
        """Sets the info_type of this GooglePrivacyDlpV2InfoTypeStats.


        :param info_type: The info_type of this GooglePrivacyDlpV2InfoTypeStats.
        :type info_type: GooglePrivacyDlpV2InfoType
        """

        self._info_type = info_type
