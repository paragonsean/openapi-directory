# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GooglePrivacyDlpV2TimeZone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offset_minutes: int=None):
        """GooglePrivacyDlpV2TimeZone - a model defined in OpenAPI

        :param offset_minutes: The offset_minutes of this GooglePrivacyDlpV2TimeZone.
        """
        self.openapi_types = {
            'offset_minutes': int
        }

        self.attribute_map = {
            'offset_minutes': 'offsetMinutes'
        }

        self._offset_minutes = offset_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2TimeZone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2TimeZone of this GooglePrivacyDlpV2TimeZone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offset_minutes(self):
        """Gets the offset_minutes of this GooglePrivacyDlpV2TimeZone.

        Set only if the offset can be determined. Positive for time ahead of UTC. E.g. For \"UTC-9\", this value is -540.

        :return: The offset_minutes of this GooglePrivacyDlpV2TimeZone.
        :rtype: int
        """
        return self._offset_minutes

    @offset_minutes.setter
    def offset_minutes(self, offset_minutes):
        """Sets the offset_minutes of this GooglePrivacyDlpV2TimeZone.

        Set only if the offset can be determined. Positive for time ahead of UTC. E.g. For \"UTC-9\", this value is -540.

        :param offset_minutes: The offset_minutes of this GooglePrivacyDlpV2TimeZone.
        :type offset_minutes: int
        """

        self._offset_minutes = offset_minutes
