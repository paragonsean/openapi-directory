# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_info_type_limit import GooglePrivacyDlpV2InfoTypeLimit
from openapi_server import util


class GooglePrivacyDlpV2FindingLimits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_findings_per_info_type: List[GooglePrivacyDlpV2InfoTypeLimit]=None, max_findings_per_item: int=None, max_findings_per_request: int=None):
        """GooglePrivacyDlpV2FindingLimits - a model defined in OpenAPI

        :param max_findings_per_info_type: The max_findings_per_info_type of this GooglePrivacyDlpV2FindingLimits.
        :param max_findings_per_item: The max_findings_per_item of this GooglePrivacyDlpV2FindingLimits.
        :param max_findings_per_request: The max_findings_per_request of this GooglePrivacyDlpV2FindingLimits.
        """
        self.openapi_types = {
            'max_findings_per_info_type': List[GooglePrivacyDlpV2InfoTypeLimit],
            'max_findings_per_item': int,
            'max_findings_per_request': int
        }

        self.attribute_map = {
            'max_findings_per_info_type': 'maxFindingsPerInfoType',
            'max_findings_per_item': 'maxFindingsPerItem',
            'max_findings_per_request': 'maxFindingsPerRequest'
        }

        self._max_findings_per_info_type = max_findings_per_info_type
        self._max_findings_per_item = max_findings_per_item
        self._max_findings_per_request = max_findings_per_request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2FindingLimits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2FindingLimits of this GooglePrivacyDlpV2FindingLimits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_findings_per_info_type(self):
        """Gets the max_findings_per_info_type of this GooglePrivacyDlpV2FindingLimits.

        Configuration of findings limit given for specified infoTypes.

        :return: The max_findings_per_info_type of this GooglePrivacyDlpV2FindingLimits.
        :rtype: List[GooglePrivacyDlpV2InfoTypeLimit]
        """
        return self._max_findings_per_info_type

    @max_findings_per_info_type.setter
    def max_findings_per_info_type(self, max_findings_per_info_type):
        """Sets the max_findings_per_info_type of this GooglePrivacyDlpV2FindingLimits.

        Configuration of findings limit given for specified infoTypes.

        :param max_findings_per_info_type: The max_findings_per_info_type of this GooglePrivacyDlpV2FindingLimits.
        :type max_findings_per_info_type: List[GooglePrivacyDlpV2InfoTypeLimit]
        """

        self._max_findings_per_info_type = max_findings_per_info_type

    @property
    def max_findings_per_item(self):
        """Gets the max_findings_per_item of this GooglePrivacyDlpV2FindingLimits.

        Max number of findings that are returned for each item scanned. When set within an InspectContentRequest, this field is ignored. This value isn't a hard limit. If the number of findings for an item reaches this limit, the inspection of that item ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns for the item can be multiple times higher than this value.

        :return: The max_findings_per_item of this GooglePrivacyDlpV2FindingLimits.
        :rtype: int
        """
        return self._max_findings_per_item

    @max_findings_per_item.setter
    def max_findings_per_item(self, max_findings_per_item):
        """Sets the max_findings_per_item of this GooglePrivacyDlpV2FindingLimits.

        Max number of findings that are returned for each item scanned. When set within an InspectContentRequest, this field is ignored. This value isn't a hard limit. If the number of findings for an item reaches this limit, the inspection of that item ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns for the item can be multiple times higher than this value.

        :param max_findings_per_item: The max_findings_per_item of this GooglePrivacyDlpV2FindingLimits.
        :type max_findings_per_item: int
        """

        self._max_findings_per_item = max_findings_per_item

    @property
    def max_findings_per_request(self):
        """Gets the max_findings_per_request of this GooglePrivacyDlpV2FindingLimits.

        Max number of findings that are returned per request or job. If you set this field in an InspectContentRequest, the resulting maximum value is the value that you set or 3,000, whichever is lower. This value isn't a hard limit. If an inspection reaches this limit, the inspection ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns can be multiple times higher than this value.

        :return: The max_findings_per_request of this GooglePrivacyDlpV2FindingLimits.
        :rtype: int
        """
        return self._max_findings_per_request

    @max_findings_per_request.setter
    def max_findings_per_request(self, max_findings_per_request):
        """Sets the max_findings_per_request of this GooglePrivacyDlpV2FindingLimits.

        Max number of findings that are returned per request or job. If you set this field in an InspectContentRequest, the resulting maximum value is the value that you set or 3,000, whichever is lower. This value isn't a hard limit. If an inspection reaches this limit, the inspection ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns can be multiple times higher than this value.

        :param max_findings_per_request: The max_findings_per_request of this GooglePrivacyDlpV2FindingLimits.
        :type max_findings_per_request: int
        """

        self._max_findings_per_request = max_findings_per_request
