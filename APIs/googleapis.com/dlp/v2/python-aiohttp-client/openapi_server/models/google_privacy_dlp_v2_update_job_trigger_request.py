# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_job_trigger import GooglePrivacyDlpV2JobTrigger
from openapi_server import util


class GooglePrivacyDlpV2UpdateJobTriggerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_trigger: GooglePrivacyDlpV2JobTrigger=None, update_mask: str=None):
        """GooglePrivacyDlpV2UpdateJobTriggerRequest - a model defined in OpenAPI

        :param job_trigger: The job_trigger of this GooglePrivacyDlpV2UpdateJobTriggerRequest.
        :param update_mask: The update_mask of this GooglePrivacyDlpV2UpdateJobTriggerRequest.
        """
        self.openapi_types = {
            'job_trigger': GooglePrivacyDlpV2JobTrigger,
            'update_mask': str
        }

        self.attribute_map = {
            'job_trigger': 'jobTrigger',
            'update_mask': 'updateMask'
        }

        self._job_trigger = job_trigger
        self._update_mask = update_mask

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2UpdateJobTriggerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2UpdateJobTriggerRequest of this GooglePrivacyDlpV2UpdateJobTriggerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_trigger(self):
        """Gets the job_trigger of this GooglePrivacyDlpV2UpdateJobTriggerRequest.


        :return: The job_trigger of this GooglePrivacyDlpV2UpdateJobTriggerRequest.
        :rtype: GooglePrivacyDlpV2JobTrigger
        """
        return self._job_trigger

    @job_trigger.setter
    def job_trigger(self, job_trigger):
        """Sets the job_trigger of this GooglePrivacyDlpV2UpdateJobTriggerRequest.


        :param job_trigger: The job_trigger of this GooglePrivacyDlpV2UpdateJobTriggerRequest.
        :type job_trigger: GooglePrivacyDlpV2JobTrigger
        """

        self._job_trigger = job_trigger

    @property
    def update_mask(self):
        """Gets the update_mask of this GooglePrivacyDlpV2UpdateJobTriggerRequest.

        Mask to control which fields get updated.

        :return: The update_mask of this GooglePrivacyDlpV2UpdateJobTriggerRequest.
        :rtype: str
        """
        return self._update_mask

    @update_mask.setter
    def update_mask(self, update_mask):
        """Sets the update_mask of this GooglePrivacyDlpV2UpdateJobTriggerRequest.

        Mask to control which fields get updated.

        :param update_mask: The update_mask of this GooglePrivacyDlpV2UpdateJobTriggerRequest.
        :type update_mask: str
        """

        self._update_mask = update_mask
