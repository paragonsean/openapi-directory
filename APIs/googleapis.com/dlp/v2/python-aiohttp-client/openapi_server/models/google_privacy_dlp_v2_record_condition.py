# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_expressions import GooglePrivacyDlpV2Expressions
from openapi_server import util


class GooglePrivacyDlpV2RecordCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expressions: GooglePrivacyDlpV2Expressions=None):
        """GooglePrivacyDlpV2RecordCondition - a model defined in OpenAPI

        :param expressions: The expressions of this GooglePrivacyDlpV2RecordCondition.
        """
        self.openapi_types = {
            'expressions': GooglePrivacyDlpV2Expressions
        }

        self.attribute_map = {
            'expressions': 'expressions'
        }

        self._expressions = expressions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2RecordCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2RecordCondition of this GooglePrivacyDlpV2RecordCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expressions(self):
        """Gets the expressions of this GooglePrivacyDlpV2RecordCondition.


        :return: The expressions of this GooglePrivacyDlpV2RecordCondition.
        :rtype: GooglePrivacyDlpV2Expressions
        """
        return self._expressions

    @expressions.setter
    def expressions(self, expressions):
        """Sets the expressions of this GooglePrivacyDlpV2RecordCondition.


        :param expressions: The expressions of this GooglePrivacyDlpV2RecordCondition.
        :type expressions: GooglePrivacyDlpV2Expressions
        """

        self._expressions = expressions
