# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_dictionary import GooglePrivacyDlpV2Dictionary
from openapi_server.models.google_privacy_dlp_v2_large_custom_dictionary_config import GooglePrivacyDlpV2LargeCustomDictionaryConfig
from openapi_server.models.google_privacy_dlp_v2_regex import GooglePrivacyDlpV2Regex
from openapi_server import util


class GooglePrivacyDlpV2StoredInfoTypeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, dictionary: GooglePrivacyDlpV2Dictionary=None, display_name: str=None, large_custom_dictionary: GooglePrivacyDlpV2LargeCustomDictionaryConfig=None, regex: GooglePrivacyDlpV2Regex=None):
        """GooglePrivacyDlpV2StoredInfoTypeConfig - a model defined in OpenAPI

        :param description: The description of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :param dictionary: The dictionary of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :param display_name: The display_name of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :param large_custom_dictionary: The large_custom_dictionary of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :param regex: The regex of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        """
        self.openapi_types = {
            'description': str,
            'dictionary': GooglePrivacyDlpV2Dictionary,
            'display_name': str,
            'large_custom_dictionary': GooglePrivacyDlpV2LargeCustomDictionaryConfig,
            'regex': GooglePrivacyDlpV2Regex
        }

        self.attribute_map = {
            'description': 'description',
            'dictionary': 'dictionary',
            'display_name': 'displayName',
            'large_custom_dictionary': 'largeCustomDictionary',
            'regex': 'regex'
        }

        self._description = description
        self._dictionary = dictionary
        self._display_name = display_name
        self._large_custom_dictionary = large_custom_dictionary
        self._regex = regex

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2StoredInfoTypeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2StoredInfoTypeConfig of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GooglePrivacyDlpV2StoredInfoTypeConfig.

        Description of the StoredInfoType (max 256 characters).

        :return: The description of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GooglePrivacyDlpV2StoredInfoTypeConfig.

        Description of the StoredInfoType (max 256 characters).

        :param description: The description of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :type description: str
        """

        self._description = description

    @property
    def dictionary(self):
        """Gets the dictionary of this GooglePrivacyDlpV2StoredInfoTypeConfig.


        :return: The dictionary of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :rtype: GooglePrivacyDlpV2Dictionary
        """
        return self._dictionary

    @dictionary.setter
    def dictionary(self, dictionary):
        """Sets the dictionary of this GooglePrivacyDlpV2StoredInfoTypeConfig.


        :param dictionary: The dictionary of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :type dictionary: GooglePrivacyDlpV2Dictionary
        """

        self._dictionary = dictionary

    @property
    def display_name(self):
        """Gets the display_name of this GooglePrivacyDlpV2StoredInfoTypeConfig.

        Display name of the StoredInfoType (max 256 characters).

        :return: The display_name of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GooglePrivacyDlpV2StoredInfoTypeConfig.

        Display name of the StoredInfoType (max 256 characters).

        :param display_name: The display_name of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def large_custom_dictionary(self):
        """Gets the large_custom_dictionary of this GooglePrivacyDlpV2StoredInfoTypeConfig.


        :return: The large_custom_dictionary of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :rtype: GooglePrivacyDlpV2LargeCustomDictionaryConfig
        """
        return self._large_custom_dictionary

    @large_custom_dictionary.setter
    def large_custom_dictionary(self, large_custom_dictionary):
        """Sets the large_custom_dictionary of this GooglePrivacyDlpV2StoredInfoTypeConfig.


        :param large_custom_dictionary: The large_custom_dictionary of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :type large_custom_dictionary: GooglePrivacyDlpV2LargeCustomDictionaryConfig
        """

        self._large_custom_dictionary = large_custom_dictionary

    @property
    def regex(self):
        """Gets the regex of this GooglePrivacyDlpV2StoredInfoTypeConfig.


        :return: The regex of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :rtype: GooglePrivacyDlpV2Regex
        """
        return self._regex

    @regex.setter
    def regex(self, regex):
        """Sets the regex of this GooglePrivacyDlpV2StoredInfoTypeConfig.


        :param regex: The regex of this GooglePrivacyDlpV2StoredInfoTypeConfig.
        :type regex: GooglePrivacyDlpV2Regex
        """

        self._regex = regex
