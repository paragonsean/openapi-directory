# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_big_query_discovery_target import GooglePrivacyDlpV2BigQueryDiscoveryTarget
from openapi_server import util


class GooglePrivacyDlpV2DiscoveryTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, big_query_target: GooglePrivacyDlpV2BigQueryDiscoveryTarget=None):
        """GooglePrivacyDlpV2DiscoveryTarget - a model defined in OpenAPI

        :param big_query_target: The big_query_target of this GooglePrivacyDlpV2DiscoveryTarget.
        """
        self.openapi_types = {
            'big_query_target': GooglePrivacyDlpV2BigQueryDiscoveryTarget
        }

        self.attribute_map = {
            'big_query_target': 'bigQueryTarget'
        }

        self._big_query_target = big_query_target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2DiscoveryTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2DiscoveryTarget of this GooglePrivacyDlpV2DiscoveryTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def big_query_target(self):
        """Gets the big_query_target of this GooglePrivacyDlpV2DiscoveryTarget.


        :return: The big_query_target of this GooglePrivacyDlpV2DiscoveryTarget.
        :rtype: GooglePrivacyDlpV2BigQueryDiscoveryTarget
        """
        return self._big_query_target

    @big_query_target.setter
    def big_query_target(self, big_query_target):
        """Sets the big_query_target of this GooglePrivacyDlpV2DiscoveryTarget.


        :param big_query_target: The big_query_target of this GooglePrivacyDlpV2DiscoveryTarget.
        :type big_query_target: GooglePrivacyDlpV2BigQueryDiscoveryTarget
        """

        self._big_query_target = big_query_target
