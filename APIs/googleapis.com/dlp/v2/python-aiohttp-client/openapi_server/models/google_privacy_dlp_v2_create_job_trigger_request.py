# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_job_trigger import GooglePrivacyDlpV2JobTrigger
from openapi_server import util


class GooglePrivacyDlpV2CreateJobTriggerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_trigger: GooglePrivacyDlpV2JobTrigger=None, location_id: str=None, trigger_id: str=None):
        """GooglePrivacyDlpV2CreateJobTriggerRequest - a model defined in OpenAPI

        :param job_trigger: The job_trigger of this GooglePrivacyDlpV2CreateJobTriggerRequest.
        :param location_id: The location_id of this GooglePrivacyDlpV2CreateJobTriggerRequest.
        :param trigger_id: The trigger_id of this GooglePrivacyDlpV2CreateJobTriggerRequest.
        """
        self.openapi_types = {
            'job_trigger': GooglePrivacyDlpV2JobTrigger,
            'location_id': str,
            'trigger_id': str
        }

        self.attribute_map = {
            'job_trigger': 'jobTrigger',
            'location_id': 'locationId',
            'trigger_id': 'triggerId'
        }

        self._job_trigger = job_trigger
        self._location_id = location_id
        self._trigger_id = trigger_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2CreateJobTriggerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2CreateJobTriggerRequest of this GooglePrivacyDlpV2CreateJobTriggerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_trigger(self):
        """Gets the job_trigger of this GooglePrivacyDlpV2CreateJobTriggerRequest.


        :return: The job_trigger of this GooglePrivacyDlpV2CreateJobTriggerRequest.
        :rtype: GooglePrivacyDlpV2JobTrigger
        """
        return self._job_trigger

    @job_trigger.setter
    def job_trigger(self, job_trigger):
        """Sets the job_trigger of this GooglePrivacyDlpV2CreateJobTriggerRequest.


        :param job_trigger: The job_trigger of this GooglePrivacyDlpV2CreateJobTriggerRequest.
        :type job_trigger: GooglePrivacyDlpV2JobTrigger
        """

        self._job_trigger = job_trigger

    @property
    def location_id(self):
        """Gets the location_id of this GooglePrivacyDlpV2CreateJobTriggerRequest.

        Deprecated. This field has no effect.

        :return: The location_id of this GooglePrivacyDlpV2CreateJobTriggerRequest.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this GooglePrivacyDlpV2CreateJobTriggerRequest.

        Deprecated. This field has no effect.

        :param location_id: The location_id of this GooglePrivacyDlpV2CreateJobTriggerRequest.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def trigger_id(self):
        """Gets the trigger_id of this GooglePrivacyDlpV2CreateJobTriggerRequest.

        The trigger id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.

        :return: The trigger_id of this GooglePrivacyDlpV2CreateJobTriggerRequest.
        :rtype: str
        """
        return self._trigger_id

    @trigger_id.setter
    def trigger_id(self, trigger_id):
        """Sets the trigger_id of this GooglePrivacyDlpV2CreateJobTriggerRequest.

        The trigger id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.

        :param trigger_id: The trigger_id of this GooglePrivacyDlpV2CreateJobTriggerRequest.
        :type trigger_id: str
        """

        self._trigger_id = trigger_id
