# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_color import GooglePrivacyDlpV2Color
from openapi_server.models.google_privacy_dlp_v2_selected_info_types import GooglePrivacyDlpV2SelectedInfoTypes
from openapi_server import util


class GooglePrivacyDlpV2ImageTransformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all_info_types: object=None, all_text: object=None, redaction_color: GooglePrivacyDlpV2Color=None, selected_info_types: GooglePrivacyDlpV2SelectedInfoTypes=None):
        """GooglePrivacyDlpV2ImageTransformation - a model defined in OpenAPI

        :param all_info_types: The all_info_types of this GooglePrivacyDlpV2ImageTransformation.
        :param all_text: The all_text of this GooglePrivacyDlpV2ImageTransformation.
        :param redaction_color: The redaction_color of this GooglePrivacyDlpV2ImageTransformation.
        :param selected_info_types: The selected_info_types of this GooglePrivacyDlpV2ImageTransformation.
        """
        self.openapi_types = {
            'all_info_types': object,
            'all_text': object,
            'redaction_color': GooglePrivacyDlpV2Color,
            'selected_info_types': GooglePrivacyDlpV2SelectedInfoTypes
        }

        self.attribute_map = {
            'all_info_types': 'allInfoTypes',
            'all_text': 'allText',
            'redaction_color': 'redactionColor',
            'selected_info_types': 'selectedInfoTypes'
        }

        self._all_info_types = all_info_types
        self._all_text = all_text
        self._redaction_color = redaction_color
        self._selected_info_types = selected_info_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2ImageTransformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2ImageTransformation of this GooglePrivacyDlpV2ImageTransformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all_info_types(self):
        """Gets the all_info_types of this GooglePrivacyDlpV2ImageTransformation.

        Apply transformation to all findings.

        :return: The all_info_types of this GooglePrivacyDlpV2ImageTransformation.
        :rtype: object
        """
        return self._all_info_types

    @all_info_types.setter
    def all_info_types(self, all_info_types):
        """Sets the all_info_types of this GooglePrivacyDlpV2ImageTransformation.

        Apply transformation to all findings.

        :param all_info_types: The all_info_types of this GooglePrivacyDlpV2ImageTransformation.
        :type all_info_types: object
        """

        self._all_info_types = all_info_types

    @property
    def all_text(self):
        """Gets the all_text of this GooglePrivacyDlpV2ImageTransformation.

        Apply to all text.

        :return: The all_text of this GooglePrivacyDlpV2ImageTransformation.
        :rtype: object
        """
        return self._all_text

    @all_text.setter
    def all_text(self, all_text):
        """Sets the all_text of this GooglePrivacyDlpV2ImageTransformation.

        Apply to all text.

        :param all_text: The all_text of this GooglePrivacyDlpV2ImageTransformation.
        :type all_text: object
        """

        self._all_text = all_text

    @property
    def redaction_color(self):
        """Gets the redaction_color of this GooglePrivacyDlpV2ImageTransformation.


        :return: The redaction_color of this GooglePrivacyDlpV2ImageTransformation.
        :rtype: GooglePrivacyDlpV2Color
        """
        return self._redaction_color

    @redaction_color.setter
    def redaction_color(self, redaction_color):
        """Sets the redaction_color of this GooglePrivacyDlpV2ImageTransformation.


        :param redaction_color: The redaction_color of this GooglePrivacyDlpV2ImageTransformation.
        :type redaction_color: GooglePrivacyDlpV2Color
        """

        self._redaction_color = redaction_color

    @property
    def selected_info_types(self):
        """Gets the selected_info_types of this GooglePrivacyDlpV2ImageTransformation.


        :return: The selected_info_types of this GooglePrivacyDlpV2ImageTransformation.
        :rtype: GooglePrivacyDlpV2SelectedInfoTypes
        """
        return self._selected_info_types

    @selected_info_types.setter
    def selected_info_types(self, selected_info_types):
        """Sets the selected_info_types of this GooglePrivacyDlpV2ImageTransformation.


        :param selected_info_types: The selected_info_types of this GooglePrivacyDlpV2ImageTransformation.
        :type selected_info_types: GooglePrivacyDlpV2SelectedInfoTypes
        """

        self._selected_info_types = selected_info_types
