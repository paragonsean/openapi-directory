# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_action_details import GooglePrivacyDlpV2ActionDetails
from openapi_server.models.google_privacy_dlp_v2_analyze_data_source_risk_details import GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails
from openapi_server.models.google_privacy_dlp_v2_error import GooglePrivacyDlpV2Error
from openapi_server.models.google_privacy_dlp_v2_inspect_data_source_details import GooglePrivacyDlpV2InspectDataSourceDetails
from openapi_server import util


class GooglePrivacyDlpV2DlpJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_details: List[GooglePrivacyDlpV2ActionDetails]=None, create_time: str=None, end_time: str=None, errors: List[GooglePrivacyDlpV2Error]=None, inspect_details: GooglePrivacyDlpV2InspectDataSourceDetails=None, job_trigger_name: str=None, last_modified: str=None, name: str=None, risk_details: GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails=None, start_time: str=None, state: str=None, type: str=None):
        """GooglePrivacyDlpV2DlpJob - a model defined in OpenAPI

        :param action_details: The action_details of this GooglePrivacyDlpV2DlpJob.
        :param create_time: The create_time of this GooglePrivacyDlpV2DlpJob.
        :param end_time: The end_time of this GooglePrivacyDlpV2DlpJob.
        :param errors: The errors of this GooglePrivacyDlpV2DlpJob.
        :param inspect_details: The inspect_details of this GooglePrivacyDlpV2DlpJob.
        :param job_trigger_name: The job_trigger_name of this GooglePrivacyDlpV2DlpJob.
        :param last_modified: The last_modified of this GooglePrivacyDlpV2DlpJob.
        :param name: The name of this GooglePrivacyDlpV2DlpJob.
        :param risk_details: The risk_details of this GooglePrivacyDlpV2DlpJob.
        :param start_time: The start_time of this GooglePrivacyDlpV2DlpJob.
        :param state: The state of this GooglePrivacyDlpV2DlpJob.
        :param type: The type of this GooglePrivacyDlpV2DlpJob.
        """
        self.openapi_types = {
            'action_details': List[GooglePrivacyDlpV2ActionDetails],
            'create_time': str,
            'end_time': str,
            'errors': List[GooglePrivacyDlpV2Error],
            'inspect_details': GooglePrivacyDlpV2InspectDataSourceDetails,
            'job_trigger_name': str,
            'last_modified': str,
            'name': str,
            'risk_details': GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails,
            'start_time': str,
            'state': str,
            'type': str
        }

        self.attribute_map = {
            'action_details': 'actionDetails',
            'create_time': 'createTime',
            'end_time': 'endTime',
            'errors': 'errors',
            'inspect_details': 'inspectDetails',
            'job_trigger_name': 'jobTriggerName',
            'last_modified': 'lastModified',
            'name': 'name',
            'risk_details': 'riskDetails',
            'start_time': 'startTime',
            'state': 'state',
            'type': 'type'
        }

        self._action_details = action_details
        self._create_time = create_time
        self._end_time = end_time
        self._errors = errors
        self._inspect_details = inspect_details
        self._job_trigger_name = job_trigger_name
        self._last_modified = last_modified
        self._name = name
        self._risk_details = risk_details
        self._start_time = start_time
        self._state = state
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2DlpJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2DlpJob of this GooglePrivacyDlpV2DlpJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_details(self):
        """Gets the action_details of this GooglePrivacyDlpV2DlpJob.

        Events that should occur after the job has completed.

        :return: The action_details of this GooglePrivacyDlpV2DlpJob.
        :rtype: List[GooglePrivacyDlpV2ActionDetails]
        """
        return self._action_details

    @action_details.setter
    def action_details(self, action_details):
        """Sets the action_details of this GooglePrivacyDlpV2DlpJob.

        Events that should occur after the job has completed.

        :param action_details: The action_details of this GooglePrivacyDlpV2DlpJob.
        :type action_details: List[GooglePrivacyDlpV2ActionDetails]
        """

        self._action_details = action_details

    @property
    def create_time(self):
        """Gets the create_time of this GooglePrivacyDlpV2DlpJob.

        Time when the job was created.

        :return: The create_time of this GooglePrivacyDlpV2DlpJob.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GooglePrivacyDlpV2DlpJob.

        Time when the job was created.

        :param create_time: The create_time of this GooglePrivacyDlpV2DlpJob.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def end_time(self):
        """Gets the end_time of this GooglePrivacyDlpV2DlpJob.

        Time when the job finished.

        :return: The end_time of this GooglePrivacyDlpV2DlpJob.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GooglePrivacyDlpV2DlpJob.

        Time when the job finished.

        :param end_time: The end_time of this GooglePrivacyDlpV2DlpJob.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def errors(self):
        """Gets the errors of this GooglePrivacyDlpV2DlpJob.

        A stream of errors encountered running the job.

        :return: The errors of this GooglePrivacyDlpV2DlpJob.
        :rtype: List[GooglePrivacyDlpV2Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this GooglePrivacyDlpV2DlpJob.

        A stream of errors encountered running the job.

        :param errors: The errors of this GooglePrivacyDlpV2DlpJob.
        :type errors: List[GooglePrivacyDlpV2Error]
        """

        self._errors = errors

    @property
    def inspect_details(self):
        """Gets the inspect_details of this GooglePrivacyDlpV2DlpJob.


        :return: The inspect_details of this GooglePrivacyDlpV2DlpJob.
        :rtype: GooglePrivacyDlpV2InspectDataSourceDetails
        """
        return self._inspect_details

    @inspect_details.setter
    def inspect_details(self, inspect_details):
        """Sets the inspect_details of this GooglePrivacyDlpV2DlpJob.


        :param inspect_details: The inspect_details of this GooglePrivacyDlpV2DlpJob.
        :type inspect_details: GooglePrivacyDlpV2InspectDataSourceDetails
        """

        self._inspect_details = inspect_details

    @property
    def job_trigger_name(self):
        """Gets the job_trigger_name of this GooglePrivacyDlpV2DlpJob.

        If created by a job trigger, the resource name of the trigger that instantiated the job.

        :return: The job_trigger_name of this GooglePrivacyDlpV2DlpJob.
        :rtype: str
        """
        return self._job_trigger_name

    @job_trigger_name.setter
    def job_trigger_name(self, job_trigger_name):
        """Sets the job_trigger_name of this GooglePrivacyDlpV2DlpJob.

        If created by a job trigger, the resource name of the trigger that instantiated the job.

        :param job_trigger_name: The job_trigger_name of this GooglePrivacyDlpV2DlpJob.
        :type job_trigger_name: str
        """

        self._job_trigger_name = job_trigger_name

    @property
    def last_modified(self):
        """Gets the last_modified of this GooglePrivacyDlpV2DlpJob.

        Time when the job was last modified by the system.

        :return: The last_modified of this GooglePrivacyDlpV2DlpJob.
        :rtype: str
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this GooglePrivacyDlpV2DlpJob.

        Time when the job was last modified by the system.

        :param last_modified: The last_modified of this GooglePrivacyDlpV2DlpJob.
        :type last_modified: str
        """

        self._last_modified = last_modified

    @property
    def name(self):
        """Gets the name of this GooglePrivacyDlpV2DlpJob.

        The server-assigned name.

        :return: The name of this GooglePrivacyDlpV2DlpJob.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GooglePrivacyDlpV2DlpJob.

        The server-assigned name.

        :param name: The name of this GooglePrivacyDlpV2DlpJob.
        :type name: str
        """

        self._name = name

    @property
    def risk_details(self):
        """Gets the risk_details of this GooglePrivacyDlpV2DlpJob.


        :return: The risk_details of this GooglePrivacyDlpV2DlpJob.
        :rtype: GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails
        """
        return self._risk_details

    @risk_details.setter
    def risk_details(self, risk_details):
        """Sets the risk_details of this GooglePrivacyDlpV2DlpJob.


        :param risk_details: The risk_details of this GooglePrivacyDlpV2DlpJob.
        :type risk_details: GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails
        """

        self._risk_details = risk_details

    @property
    def start_time(self):
        """Gets the start_time of this GooglePrivacyDlpV2DlpJob.

        Time when the job started.

        :return: The start_time of this GooglePrivacyDlpV2DlpJob.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GooglePrivacyDlpV2DlpJob.

        Time when the job started.

        :param start_time: The start_time of this GooglePrivacyDlpV2DlpJob.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this GooglePrivacyDlpV2DlpJob.

        State of a job.

        :return: The state of this GooglePrivacyDlpV2DlpJob.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GooglePrivacyDlpV2DlpJob.

        State of a job.

        :param state: The state of this GooglePrivacyDlpV2DlpJob.
        :type state: str
        """
        allowed_values = ["JOB_STATE_UNSPECIFIED", "PENDING", "RUNNING", "DONE", "CANCELED", "FAILED", "ACTIVE"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def type(self):
        """Gets the type of this GooglePrivacyDlpV2DlpJob.

        The type of job.

        :return: The type of this GooglePrivacyDlpV2DlpJob.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GooglePrivacyDlpV2DlpJob.

        The type of job.

        :param type: The type of this GooglePrivacyDlpV2DlpJob.
        :type type: str
        """
        allowed_values = ["DLP_JOB_TYPE_UNSPECIFIED", "INSPECT_JOB", "RISK_ANALYSIS_JOB"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
