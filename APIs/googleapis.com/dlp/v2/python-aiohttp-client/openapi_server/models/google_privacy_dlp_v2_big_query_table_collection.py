# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_big_query_regexes import GooglePrivacyDlpV2BigQueryRegexes
from openapi_server import util


class GooglePrivacyDlpV2BigQueryTableCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_regexes: GooglePrivacyDlpV2BigQueryRegexes=None):
        """GooglePrivacyDlpV2BigQueryTableCollection - a model defined in OpenAPI

        :param include_regexes: The include_regexes of this GooglePrivacyDlpV2BigQueryTableCollection.
        """
        self.openapi_types = {
            'include_regexes': GooglePrivacyDlpV2BigQueryRegexes
        }

        self.attribute_map = {
            'include_regexes': 'includeRegexes'
        }

        self._include_regexes = include_regexes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2BigQueryTableCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2BigQueryTableCollection of this GooglePrivacyDlpV2BigQueryTableCollection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_regexes(self):
        """Gets the include_regexes of this GooglePrivacyDlpV2BigQueryTableCollection.


        :return: The include_regexes of this GooglePrivacyDlpV2BigQueryTableCollection.
        :rtype: GooglePrivacyDlpV2BigQueryRegexes
        """
        return self._include_regexes

    @include_regexes.setter
    def include_regexes(self, include_regexes):
        """Sets the include_regexes of this GooglePrivacyDlpV2BigQueryTableCollection.


        :param include_regexes: The include_regexes of this GooglePrivacyDlpV2BigQueryTableCollection.
        :type include_regexes: GooglePrivacyDlpV2BigQueryRegexes
        """

        self._include_regexes = include_regexes
