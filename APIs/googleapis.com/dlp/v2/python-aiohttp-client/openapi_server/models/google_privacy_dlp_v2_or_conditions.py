# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GooglePrivacyDlpV2OrConditions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_age: str=None, min_row_count: int=None):
        """GooglePrivacyDlpV2OrConditions - a model defined in OpenAPI

        :param min_age: The min_age of this GooglePrivacyDlpV2OrConditions.
        :param min_row_count: The min_row_count of this GooglePrivacyDlpV2OrConditions.
        """
        self.openapi_types = {
            'min_age': str,
            'min_row_count': int
        }

        self.attribute_map = {
            'min_age': 'minAge',
            'min_row_count': 'minRowCount'
        }

        self._min_age = min_age
        self._min_row_count = min_row_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2OrConditions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2OrConditions of this GooglePrivacyDlpV2OrConditions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_age(self):
        """Gets the min_age of this GooglePrivacyDlpV2OrConditions.

        Minimum age a table must have before Cloud DLP can profile it. Value must be 1 hour or greater.

        :return: The min_age of this GooglePrivacyDlpV2OrConditions.
        :rtype: str
        """
        return self._min_age

    @min_age.setter
    def min_age(self, min_age):
        """Sets the min_age of this GooglePrivacyDlpV2OrConditions.

        Minimum age a table must have before Cloud DLP can profile it. Value must be 1 hour or greater.

        :param min_age: The min_age of this GooglePrivacyDlpV2OrConditions.
        :type min_age: str
        """

        self._min_age = min_age

    @property
    def min_row_count(self):
        """Gets the min_row_count of this GooglePrivacyDlpV2OrConditions.

        Minimum number of rows that should be present before Cloud DLP profiles a table

        :return: The min_row_count of this GooglePrivacyDlpV2OrConditions.
        :rtype: int
        """
        return self._min_row_count

    @min_row_count.setter
    def min_row_count(self, min_row_count):
        """Sets the min_row_count of this GooglePrivacyDlpV2OrConditions.

        Minimum number of rows that should be present before Cloud DLP profiles a table

        :param min_row_count: The min_row_count of this GooglePrivacyDlpV2OrConditions.
        :type min_row_count: int
        """

        self._min_row_count = min_row_count
