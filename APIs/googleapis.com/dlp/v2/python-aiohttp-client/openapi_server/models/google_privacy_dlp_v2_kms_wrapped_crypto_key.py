# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GooglePrivacyDlpV2KmsWrappedCryptoKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, crypto_key_name: str=None, wrapped_key: str=None):
        """GooglePrivacyDlpV2KmsWrappedCryptoKey - a model defined in OpenAPI

        :param crypto_key_name: The crypto_key_name of this GooglePrivacyDlpV2KmsWrappedCryptoKey.
        :param wrapped_key: The wrapped_key of this GooglePrivacyDlpV2KmsWrappedCryptoKey.
        """
        self.openapi_types = {
            'crypto_key_name': str,
            'wrapped_key': str
        }

        self.attribute_map = {
            'crypto_key_name': 'cryptoKeyName',
            'wrapped_key': 'wrappedKey'
        }

        self._crypto_key_name = crypto_key_name
        self._wrapped_key = wrapped_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2KmsWrappedCryptoKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2KmsWrappedCryptoKey of this GooglePrivacyDlpV2KmsWrappedCryptoKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crypto_key_name(self):
        """Gets the crypto_key_name of this GooglePrivacyDlpV2KmsWrappedCryptoKey.

        Required. The resource name of the KMS CryptoKey to use for unwrapping.

        :return: The crypto_key_name of this GooglePrivacyDlpV2KmsWrappedCryptoKey.
        :rtype: str
        """
        return self._crypto_key_name

    @crypto_key_name.setter
    def crypto_key_name(self, crypto_key_name):
        """Sets the crypto_key_name of this GooglePrivacyDlpV2KmsWrappedCryptoKey.

        Required. The resource name of the KMS CryptoKey to use for unwrapping.

        :param crypto_key_name: The crypto_key_name of this GooglePrivacyDlpV2KmsWrappedCryptoKey.
        :type crypto_key_name: str
        """

        self._crypto_key_name = crypto_key_name

    @property
    def wrapped_key(self):
        """Gets the wrapped_key of this GooglePrivacyDlpV2KmsWrappedCryptoKey.

        Required. The wrapped data crypto key.

        :return: The wrapped_key of this GooglePrivacyDlpV2KmsWrappedCryptoKey.
        :rtype: str
        """
        return self._wrapped_key

    @wrapped_key.setter
    def wrapped_key(self, wrapped_key):
        """Sets the wrapped_key of this GooglePrivacyDlpV2KmsWrappedCryptoKey.

        Required. The wrapped data crypto key.

        :param wrapped_key: The wrapped_key of this GooglePrivacyDlpV2KmsWrappedCryptoKey.
        :type wrapped_key: str
        """

        self._wrapped_key = wrapped_key
