# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_big_query_options import GooglePrivacyDlpV2BigQueryOptions
from openapi_server.models.google_privacy_dlp_v2_cloud_storage_options import GooglePrivacyDlpV2CloudStorageOptions
from openapi_server.models.google_privacy_dlp_v2_datastore_options import GooglePrivacyDlpV2DatastoreOptions
from openapi_server.models.google_privacy_dlp_v2_hybrid_options import GooglePrivacyDlpV2HybridOptions
from openapi_server.models.google_privacy_dlp_v2_timespan_config import GooglePrivacyDlpV2TimespanConfig
from openapi_server import util


class GooglePrivacyDlpV2StorageConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, big_query_options: GooglePrivacyDlpV2BigQueryOptions=None, cloud_storage_options: GooglePrivacyDlpV2CloudStorageOptions=None, datastore_options: GooglePrivacyDlpV2DatastoreOptions=None, hybrid_options: GooglePrivacyDlpV2HybridOptions=None, timespan_config: GooglePrivacyDlpV2TimespanConfig=None):
        """GooglePrivacyDlpV2StorageConfig - a model defined in OpenAPI

        :param big_query_options: The big_query_options of this GooglePrivacyDlpV2StorageConfig.
        :param cloud_storage_options: The cloud_storage_options of this GooglePrivacyDlpV2StorageConfig.
        :param datastore_options: The datastore_options of this GooglePrivacyDlpV2StorageConfig.
        :param hybrid_options: The hybrid_options of this GooglePrivacyDlpV2StorageConfig.
        :param timespan_config: The timespan_config of this GooglePrivacyDlpV2StorageConfig.
        """
        self.openapi_types = {
            'big_query_options': GooglePrivacyDlpV2BigQueryOptions,
            'cloud_storage_options': GooglePrivacyDlpV2CloudStorageOptions,
            'datastore_options': GooglePrivacyDlpV2DatastoreOptions,
            'hybrid_options': GooglePrivacyDlpV2HybridOptions,
            'timespan_config': GooglePrivacyDlpV2TimespanConfig
        }

        self.attribute_map = {
            'big_query_options': 'bigQueryOptions',
            'cloud_storage_options': 'cloudStorageOptions',
            'datastore_options': 'datastoreOptions',
            'hybrid_options': 'hybridOptions',
            'timespan_config': 'timespanConfig'
        }

        self._big_query_options = big_query_options
        self._cloud_storage_options = cloud_storage_options
        self._datastore_options = datastore_options
        self._hybrid_options = hybrid_options
        self._timespan_config = timespan_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2StorageConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2StorageConfig of this GooglePrivacyDlpV2StorageConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def big_query_options(self):
        """Gets the big_query_options of this GooglePrivacyDlpV2StorageConfig.


        :return: The big_query_options of this GooglePrivacyDlpV2StorageConfig.
        :rtype: GooglePrivacyDlpV2BigQueryOptions
        """
        return self._big_query_options

    @big_query_options.setter
    def big_query_options(self, big_query_options):
        """Sets the big_query_options of this GooglePrivacyDlpV2StorageConfig.


        :param big_query_options: The big_query_options of this GooglePrivacyDlpV2StorageConfig.
        :type big_query_options: GooglePrivacyDlpV2BigQueryOptions
        """

        self._big_query_options = big_query_options

    @property
    def cloud_storage_options(self):
        """Gets the cloud_storage_options of this GooglePrivacyDlpV2StorageConfig.


        :return: The cloud_storage_options of this GooglePrivacyDlpV2StorageConfig.
        :rtype: GooglePrivacyDlpV2CloudStorageOptions
        """
        return self._cloud_storage_options

    @cloud_storage_options.setter
    def cloud_storage_options(self, cloud_storage_options):
        """Sets the cloud_storage_options of this GooglePrivacyDlpV2StorageConfig.


        :param cloud_storage_options: The cloud_storage_options of this GooglePrivacyDlpV2StorageConfig.
        :type cloud_storage_options: GooglePrivacyDlpV2CloudStorageOptions
        """

        self._cloud_storage_options = cloud_storage_options

    @property
    def datastore_options(self):
        """Gets the datastore_options of this GooglePrivacyDlpV2StorageConfig.


        :return: The datastore_options of this GooglePrivacyDlpV2StorageConfig.
        :rtype: GooglePrivacyDlpV2DatastoreOptions
        """
        return self._datastore_options

    @datastore_options.setter
    def datastore_options(self, datastore_options):
        """Sets the datastore_options of this GooglePrivacyDlpV2StorageConfig.


        :param datastore_options: The datastore_options of this GooglePrivacyDlpV2StorageConfig.
        :type datastore_options: GooglePrivacyDlpV2DatastoreOptions
        """

        self._datastore_options = datastore_options

    @property
    def hybrid_options(self):
        """Gets the hybrid_options of this GooglePrivacyDlpV2StorageConfig.


        :return: The hybrid_options of this GooglePrivacyDlpV2StorageConfig.
        :rtype: GooglePrivacyDlpV2HybridOptions
        """
        return self._hybrid_options

    @hybrid_options.setter
    def hybrid_options(self, hybrid_options):
        """Sets the hybrid_options of this GooglePrivacyDlpV2StorageConfig.


        :param hybrid_options: The hybrid_options of this GooglePrivacyDlpV2StorageConfig.
        :type hybrid_options: GooglePrivacyDlpV2HybridOptions
        """

        self._hybrid_options = hybrid_options

    @property
    def timespan_config(self):
        """Gets the timespan_config of this GooglePrivacyDlpV2StorageConfig.


        :return: The timespan_config of this GooglePrivacyDlpV2StorageConfig.
        :rtype: GooglePrivacyDlpV2TimespanConfig
        """
        return self._timespan_config

    @timespan_config.setter
    def timespan_config(self, timespan_config):
        """Sets the timespan_config of this GooglePrivacyDlpV2StorageConfig.


        :param timespan_config: The timespan_config of this GooglePrivacyDlpV2StorageConfig.
        :type timespan_config: GooglePrivacyDlpV2TimespanConfig
        """

        self._timespan_config = timespan_config
