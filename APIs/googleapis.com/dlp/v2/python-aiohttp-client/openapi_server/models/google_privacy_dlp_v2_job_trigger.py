# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_error import GooglePrivacyDlpV2Error
from openapi_server.models.google_privacy_dlp_v2_inspect_job_config import GooglePrivacyDlpV2InspectJobConfig
from openapi_server.models.google_privacy_dlp_v2_trigger import GooglePrivacyDlpV2Trigger
from openapi_server import util


class GooglePrivacyDlpV2JobTrigger(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, display_name: str=None, errors: List[GooglePrivacyDlpV2Error]=None, inspect_job: GooglePrivacyDlpV2InspectJobConfig=None, last_run_time: str=None, name: str=None, status: str=None, triggers: List[GooglePrivacyDlpV2Trigger]=None, update_time: str=None):
        """GooglePrivacyDlpV2JobTrigger - a model defined in OpenAPI

        :param create_time: The create_time of this GooglePrivacyDlpV2JobTrigger.
        :param description: The description of this GooglePrivacyDlpV2JobTrigger.
        :param display_name: The display_name of this GooglePrivacyDlpV2JobTrigger.
        :param errors: The errors of this GooglePrivacyDlpV2JobTrigger.
        :param inspect_job: The inspect_job of this GooglePrivacyDlpV2JobTrigger.
        :param last_run_time: The last_run_time of this GooglePrivacyDlpV2JobTrigger.
        :param name: The name of this GooglePrivacyDlpV2JobTrigger.
        :param status: The status of this GooglePrivacyDlpV2JobTrigger.
        :param triggers: The triggers of this GooglePrivacyDlpV2JobTrigger.
        :param update_time: The update_time of this GooglePrivacyDlpV2JobTrigger.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'display_name': str,
            'errors': List[GooglePrivacyDlpV2Error],
            'inspect_job': GooglePrivacyDlpV2InspectJobConfig,
            'last_run_time': str,
            'name': str,
            'status': str,
            'triggers': List[GooglePrivacyDlpV2Trigger],
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'display_name': 'displayName',
            'errors': 'errors',
            'inspect_job': 'inspectJob',
            'last_run_time': 'lastRunTime',
            'name': 'name',
            'status': 'status',
            'triggers': 'triggers',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._description = description
        self._display_name = display_name
        self._errors = errors
        self._inspect_job = inspect_job
        self._last_run_time = last_run_time
        self._name = name
        self._status = status
        self._triggers = triggers
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2JobTrigger':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2JobTrigger of this GooglePrivacyDlpV2JobTrigger.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GooglePrivacyDlpV2JobTrigger.

        Output only. The creation timestamp of a triggeredJob.

        :return: The create_time of this GooglePrivacyDlpV2JobTrigger.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GooglePrivacyDlpV2JobTrigger.

        Output only. The creation timestamp of a triggeredJob.

        :param create_time: The create_time of this GooglePrivacyDlpV2JobTrigger.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GooglePrivacyDlpV2JobTrigger.

        User provided description (max 256 chars)

        :return: The description of this GooglePrivacyDlpV2JobTrigger.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GooglePrivacyDlpV2JobTrigger.

        User provided description (max 256 chars)

        :param description: The description of this GooglePrivacyDlpV2JobTrigger.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GooglePrivacyDlpV2JobTrigger.

        Display name (max 100 chars)

        :return: The display_name of this GooglePrivacyDlpV2JobTrigger.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GooglePrivacyDlpV2JobTrigger.

        Display name (max 100 chars)

        :param display_name: The display_name of this GooglePrivacyDlpV2JobTrigger.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def errors(self):
        """Gets the errors of this GooglePrivacyDlpV2JobTrigger.

        Output only. A stream of errors encountered when the trigger was activated. Repeated errors may result in the JobTrigger automatically being paused. Will return the last 100 errors. Whenever the JobTrigger is modified this list will be cleared.

        :return: The errors of this GooglePrivacyDlpV2JobTrigger.
        :rtype: List[GooglePrivacyDlpV2Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this GooglePrivacyDlpV2JobTrigger.

        Output only. A stream of errors encountered when the trigger was activated. Repeated errors may result in the JobTrigger automatically being paused. Will return the last 100 errors. Whenever the JobTrigger is modified this list will be cleared.

        :param errors: The errors of this GooglePrivacyDlpV2JobTrigger.
        :type errors: List[GooglePrivacyDlpV2Error]
        """

        self._errors = errors

    @property
    def inspect_job(self):
        """Gets the inspect_job of this GooglePrivacyDlpV2JobTrigger.


        :return: The inspect_job of this GooglePrivacyDlpV2JobTrigger.
        :rtype: GooglePrivacyDlpV2InspectJobConfig
        """
        return self._inspect_job

    @inspect_job.setter
    def inspect_job(self, inspect_job):
        """Sets the inspect_job of this GooglePrivacyDlpV2JobTrigger.


        :param inspect_job: The inspect_job of this GooglePrivacyDlpV2JobTrigger.
        :type inspect_job: GooglePrivacyDlpV2InspectJobConfig
        """

        self._inspect_job = inspect_job

    @property
    def last_run_time(self):
        """Gets the last_run_time of this GooglePrivacyDlpV2JobTrigger.

        Output only. The timestamp of the last time this trigger executed.

        :return: The last_run_time of this GooglePrivacyDlpV2JobTrigger.
        :rtype: str
        """
        return self._last_run_time

    @last_run_time.setter
    def last_run_time(self, last_run_time):
        """Sets the last_run_time of this GooglePrivacyDlpV2JobTrigger.

        Output only. The timestamp of the last time this trigger executed.

        :param last_run_time: The last_run_time of this GooglePrivacyDlpV2JobTrigger.
        :type last_run_time: str
        """

        self._last_run_time = last_run_time

    @property
    def name(self):
        """Gets the name of this GooglePrivacyDlpV2JobTrigger.

        Unique resource name for the triggeredJob, assigned by the service when the triggeredJob is created, for example `projects/dlp-test-project/jobTriggers/53234423`.

        :return: The name of this GooglePrivacyDlpV2JobTrigger.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GooglePrivacyDlpV2JobTrigger.

        Unique resource name for the triggeredJob, assigned by the service when the triggeredJob is created, for example `projects/dlp-test-project/jobTriggers/53234423`.

        :param name: The name of this GooglePrivacyDlpV2JobTrigger.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this GooglePrivacyDlpV2JobTrigger.

        Required. A status for this trigger.

        :return: The status of this GooglePrivacyDlpV2JobTrigger.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GooglePrivacyDlpV2JobTrigger.

        Required. A status for this trigger.

        :param status: The status of this GooglePrivacyDlpV2JobTrigger.
        :type status: str
        """
        allowed_values = ["STATUS_UNSPECIFIED", "HEALTHY", "PAUSED", "CANCELLED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def triggers(self):
        """Gets the triggers of this GooglePrivacyDlpV2JobTrigger.

        A list of triggers which will be OR'ed together. Only one in the list needs to trigger for a job to be started. The list may contain only a single Schedule trigger and must have at least one object.

        :return: The triggers of this GooglePrivacyDlpV2JobTrigger.
        :rtype: List[GooglePrivacyDlpV2Trigger]
        """
        return self._triggers

    @triggers.setter
    def triggers(self, triggers):
        """Sets the triggers of this GooglePrivacyDlpV2JobTrigger.

        A list of triggers which will be OR'ed together. Only one in the list needs to trigger for a job to be started. The list may contain only a single Schedule trigger and must have at least one object.

        :param triggers: The triggers of this GooglePrivacyDlpV2JobTrigger.
        :type triggers: List[GooglePrivacyDlpV2Trigger]
        """

        self._triggers = triggers

    @property
    def update_time(self):
        """Gets the update_time of this GooglePrivacyDlpV2JobTrigger.

        Output only. The last update timestamp of a triggeredJob.

        :return: The update_time of this GooglePrivacyDlpV2JobTrigger.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GooglePrivacyDlpV2JobTrigger.

        Output only. The last update timestamp of a triggeredJob.

        :param update_time: The update_time of this GooglePrivacyDlpV2JobTrigger.
        :type update_time: str
        """

        self._update_time = update_time
