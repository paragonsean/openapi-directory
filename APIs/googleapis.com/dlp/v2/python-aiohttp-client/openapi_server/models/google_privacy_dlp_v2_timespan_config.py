# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_field_id import GooglePrivacyDlpV2FieldId
from openapi_server import util


class GooglePrivacyDlpV2TimespanConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_auto_population_of_timespan_config: bool=None, end_time: str=None, start_time: str=None, timestamp_field: GooglePrivacyDlpV2FieldId=None):
        """GooglePrivacyDlpV2TimespanConfig - a model defined in OpenAPI

        :param enable_auto_population_of_timespan_config: The enable_auto_population_of_timespan_config of this GooglePrivacyDlpV2TimespanConfig.
        :param end_time: The end_time of this GooglePrivacyDlpV2TimespanConfig.
        :param start_time: The start_time of this GooglePrivacyDlpV2TimespanConfig.
        :param timestamp_field: The timestamp_field of this GooglePrivacyDlpV2TimespanConfig.
        """
        self.openapi_types = {
            'enable_auto_population_of_timespan_config': bool,
            'end_time': str,
            'start_time': str,
            'timestamp_field': GooglePrivacyDlpV2FieldId
        }

        self.attribute_map = {
            'enable_auto_population_of_timespan_config': 'enableAutoPopulationOfTimespanConfig',
            'end_time': 'endTime',
            'start_time': 'startTime',
            'timestamp_field': 'timestampField'
        }

        self._enable_auto_population_of_timespan_config = enable_auto_population_of_timespan_config
        self._end_time = end_time
        self._start_time = start_time
        self._timestamp_field = timestamp_field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2TimespanConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2TimespanConfig of this GooglePrivacyDlpV2TimespanConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_auto_population_of_timespan_config(self):
        """Gets the enable_auto_population_of_timespan_config of this GooglePrivacyDlpV2TimespanConfig.

        When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger or the timespan end_time used in the last run of the JobTrigger.

        :return: The enable_auto_population_of_timespan_config of this GooglePrivacyDlpV2TimespanConfig.
        :rtype: bool
        """
        return self._enable_auto_population_of_timespan_config

    @enable_auto_population_of_timespan_config.setter
    def enable_auto_population_of_timespan_config(self, enable_auto_population_of_timespan_config):
        """Sets the enable_auto_population_of_timespan_config of this GooglePrivacyDlpV2TimespanConfig.

        When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger or the timespan end_time used in the last run of the JobTrigger.

        :param enable_auto_population_of_timespan_config: The enable_auto_population_of_timespan_config of this GooglePrivacyDlpV2TimespanConfig.
        :type enable_auto_population_of_timespan_config: bool
        """

        self._enable_auto_population_of_timespan_config = enable_auto_population_of_timespan_config

    @property
    def end_time(self):
        """Gets the end_time of this GooglePrivacyDlpV2TimespanConfig.

        Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.

        :return: The end_time of this GooglePrivacyDlpV2TimespanConfig.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GooglePrivacyDlpV2TimespanConfig.

        Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.

        :param end_time: The end_time of this GooglePrivacyDlpV2TimespanConfig.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def start_time(self):
        """Gets the start_time of this GooglePrivacyDlpV2TimespanConfig.

        Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.

        :return: The start_time of this GooglePrivacyDlpV2TimespanConfig.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GooglePrivacyDlpV2TimespanConfig.

        Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.

        :param start_time: The start_time of this GooglePrivacyDlpV2TimespanConfig.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def timestamp_field(self):
        """Gets the timestamp_field of this GooglePrivacyDlpV2TimespanConfig.


        :return: The timestamp_field of this GooglePrivacyDlpV2TimespanConfig.
        :rtype: GooglePrivacyDlpV2FieldId
        """
        return self._timestamp_field

    @timestamp_field.setter
    def timestamp_field(self, timestamp_field):
        """Sets the timestamp_field of this GooglePrivacyDlpV2TimespanConfig.


        :param timestamp_field: The timestamp_field of this GooglePrivacyDlpV2TimespanConfig.
        :type timestamp_field: GooglePrivacyDlpV2FieldId
        """

        self._timestamp_field = timestamp_field
