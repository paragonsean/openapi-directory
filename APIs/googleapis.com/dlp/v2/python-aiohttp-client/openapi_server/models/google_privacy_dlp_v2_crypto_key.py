# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_kms_wrapped_crypto_key import GooglePrivacyDlpV2KmsWrappedCryptoKey
from openapi_server.models.google_privacy_dlp_v2_transient_crypto_key import GooglePrivacyDlpV2TransientCryptoKey
from openapi_server.models.google_privacy_dlp_v2_unwrapped_crypto_key import GooglePrivacyDlpV2UnwrappedCryptoKey
from openapi_server import util


class GooglePrivacyDlpV2CryptoKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kms_wrapped: GooglePrivacyDlpV2KmsWrappedCryptoKey=None, transient: GooglePrivacyDlpV2TransientCryptoKey=None, unwrapped: GooglePrivacyDlpV2UnwrappedCryptoKey=None):
        """GooglePrivacyDlpV2CryptoKey - a model defined in OpenAPI

        :param kms_wrapped: The kms_wrapped of this GooglePrivacyDlpV2CryptoKey.
        :param transient: The transient of this GooglePrivacyDlpV2CryptoKey.
        :param unwrapped: The unwrapped of this GooglePrivacyDlpV2CryptoKey.
        """
        self.openapi_types = {
            'kms_wrapped': GooglePrivacyDlpV2KmsWrappedCryptoKey,
            'transient': GooglePrivacyDlpV2TransientCryptoKey,
            'unwrapped': GooglePrivacyDlpV2UnwrappedCryptoKey
        }

        self.attribute_map = {
            'kms_wrapped': 'kmsWrapped',
            'transient': 'transient',
            'unwrapped': 'unwrapped'
        }

        self._kms_wrapped = kms_wrapped
        self._transient = transient
        self._unwrapped = unwrapped

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2CryptoKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2CryptoKey of this GooglePrivacyDlpV2CryptoKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kms_wrapped(self):
        """Gets the kms_wrapped of this GooglePrivacyDlpV2CryptoKey.


        :return: The kms_wrapped of this GooglePrivacyDlpV2CryptoKey.
        :rtype: GooglePrivacyDlpV2KmsWrappedCryptoKey
        """
        return self._kms_wrapped

    @kms_wrapped.setter
    def kms_wrapped(self, kms_wrapped):
        """Sets the kms_wrapped of this GooglePrivacyDlpV2CryptoKey.


        :param kms_wrapped: The kms_wrapped of this GooglePrivacyDlpV2CryptoKey.
        :type kms_wrapped: GooglePrivacyDlpV2KmsWrappedCryptoKey
        """

        self._kms_wrapped = kms_wrapped

    @property
    def transient(self):
        """Gets the transient of this GooglePrivacyDlpV2CryptoKey.


        :return: The transient of this GooglePrivacyDlpV2CryptoKey.
        :rtype: GooglePrivacyDlpV2TransientCryptoKey
        """
        return self._transient

    @transient.setter
    def transient(self, transient):
        """Sets the transient of this GooglePrivacyDlpV2CryptoKey.


        :param transient: The transient of this GooglePrivacyDlpV2CryptoKey.
        :type transient: GooglePrivacyDlpV2TransientCryptoKey
        """

        self._transient = transient

    @property
    def unwrapped(self):
        """Gets the unwrapped of this GooglePrivacyDlpV2CryptoKey.


        :return: The unwrapped of this GooglePrivacyDlpV2CryptoKey.
        :rtype: GooglePrivacyDlpV2UnwrappedCryptoKey
        """
        return self._unwrapped

    @unwrapped.setter
    def unwrapped(self, unwrapped):
        """Sets the unwrapped of this GooglePrivacyDlpV2CryptoKey.


        :param unwrapped: The unwrapped of this GooglePrivacyDlpV2CryptoKey.
        :type unwrapped: GooglePrivacyDlpV2UnwrappedCryptoKey
        """

        self._unwrapped = unwrapped
