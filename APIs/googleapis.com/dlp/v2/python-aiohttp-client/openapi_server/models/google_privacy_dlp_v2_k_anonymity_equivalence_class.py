# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_value import GooglePrivacyDlpV2Value
from openapi_server import util


class GooglePrivacyDlpV2KAnonymityEquivalenceClass(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, equivalence_class_size: str=None, quasi_ids_values: List[GooglePrivacyDlpV2Value]=None):
        """GooglePrivacyDlpV2KAnonymityEquivalenceClass - a model defined in OpenAPI

        :param equivalence_class_size: The equivalence_class_size of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.
        :param quasi_ids_values: The quasi_ids_values of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.
        """
        self.openapi_types = {
            'equivalence_class_size': str,
            'quasi_ids_values': List[GooglePrivacyDlpV2Value]
        }

        self.attribute_map = {
            'equivalence_class_size': 'equivalenceClassSize',
            'quasi_ids_values': 'quasiIdsValues'
        }

        self._equivalence_class_size = equivalence_class_size
        self._quasi_ids_values = quasi_ids_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2KAnonymityEquivalenceClass':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2KAnonymityEquivalenceClass of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def equivalence_class_size(self):
        """Gets the equivalence_class_size of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.

        Size of the equivalence class, for example number of rows with the above set of values.

        :return: The equivalence_class_size of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.
        :rtype: str
        """
        return self._equivalence_class_size

    @equivalence_class_size.setter
    def equivalence_class_size(self, equivalence_class_size):
        """Sets the equivalence_class_size of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.

        Size of the equivalence class, for example number of rows with the above set of values.

        :param equivalence_class_size: The equivalence_class_size of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.
        :type equivalence_class_size: str
        """

        self._equivalence_class_size = equivalence_class_size

    @property
    def quasi_ids_values(self):
        """Gets the quasi_ids_values of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.

        Set of values defining the equivalence class. One value per quasi-identifier column in the original KAnonymity metric message. The order is always the same as the original request.

        :return: The quasi_ids_values of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.
        :rtype: List[GooglePrivacyDlpV2Value]
        """
        return self._quasi_ids_values

    @quasi_ids_values.setter
    def quasi_ids_values(self, quasi_ids_values):
        """Sets the quasi_ids_values of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.

        Set of values defining the equivalence class. One value per quasi-identifier column in the original KAnonymity metric message. The order is always the same as the original request.

        :param quasi_ids_values: The quasi_ids_values of this GooglePrivacyDlpV2KAnonymityEquivalenceClass.
        :type quasi_ids_values: List[GooglePrivacyDlpV2Value]
        """

        self._quasi_ids_values = quasi_ids_values
