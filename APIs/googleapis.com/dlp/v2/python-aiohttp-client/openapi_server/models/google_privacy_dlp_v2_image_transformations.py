# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_image_transformation import GooglePrivacyDlpV2ImageTransformation
from openapi_server import util


class GooglePrivacyDlpV2ImageTransformations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transforms: List[GooglePrivacyDlpV2ImageTransformation]=None):
        """GooglePrivacyDlpV2ImageTransformations - a model defined in OpenAPI

        :param transforms: The transforms of this GooglePrivacyDlpV2ImageTransformations.
        """
        self.openapi_types = {
            'transforms': List[GooglePrivacyDlpV2ImageTransformation]
        }

        self.attribute_map = {
            'transforms': 'transforms'
        }

        self._transforms = transforms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2ImageTransformations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2ImageTransformations of this GooglePrivacyDlpV2ImageTransformations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transforms(self):
        """Gets the transforms of this GooglePrivacyDlpV2ImageTransformations.

        List of transforms to make.

        :return: The transforms of this GooglePrivacyDlpV2ImageTransformations.
        :rtype: List[GooglePrivacyDlpV2ImageTransformation]
        """
        return self._transforms

    @transforms.setter
    def transforms(self, transforms):
        """Sets the transforms of this GooglePrivacyDlpV2ImageTransformations.

        List of transforms to make.

        :param transforms: The transforms of this GooglePrivacyDlpV2ImageTransformations.
        :type transforms: List[GooglePrivacyDlpV2ImageTransformation]
        """

        self._transforms = transforms
