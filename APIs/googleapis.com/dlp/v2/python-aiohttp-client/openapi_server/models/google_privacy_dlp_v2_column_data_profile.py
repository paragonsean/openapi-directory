# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_data_risk_level import GooglePrivacyDlpV2DataRiskLevel
from openapi_server.models.google_privacy_dlp_v2_info_type_summary import GooglePrivacyDlpV2InfoTypeSummary
from openapi_server.models.google_privacy_dlp_v2_other_info_type_summary import GooglePrivacyDlpV2OtherInfoTypeSummary
from openapi_server.models.google_privacy_dlp_v2_profile_status import GooglePrivacyDlpV2ProfileStatus
from openapi_server.models.google_privacy_dlp_v2_sensitivity_score import GooglePrivacyDlpV2SensitivityScore
from openapi_server import util


class GooglePrivacyDlpV2ColumnDataProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column: str=None, column_info_type: GooglePrivacyDlpV2InfoTypeSummary=None, column_type: str=None, data_risk_level: GooglePrivacyDlpV2DataRiskLevel=None, dataset_id: str=None, dataset_location: str=None, dataset_project_id: str=None, estimated_null_percentage: str=None, estimated_uniqueness_score: str=None, free_text_score: float=None, name: str=None, other_matches: List[GooglePrivacyDlpV2OtherInfoTypeSummary]=None, policy_state: str=None, profile_last_generated: str=None, profile_status: GooglePrivacyDlpV2ProfileStatus=None, sensitivity_score: GooglePrivacyDlpV2SensitivityScore=None, state: str=None, table_data_profile: str=None, table_full_resource: str=None, table_id: str=None):
        """GooglePrivacyDlpV2ColumnDataProfile - a model defined in OpenAPI

        :param column: The column of this GooglePrivacyDlpV2ColumnDataProfile.
        :param column_info_type: The column_info_type of this GooglePrivacyDlpV2ColumnDataProfile.
        :param column_type: The column_type of this GooglePrivacyDlpV2ColumnDataProfile.
        :param data_risk_level: The data_risk_level of this GooglePrivacyDlpV2ColumnDataProfile.
        :param dataset_id: The dataset_id of this GooglePrivacyDlpV2ColumnDataProfile.
        :param dataset_location: The dataset_location of this GooglePrivacyDlpV2ColumnDataProfile.
        :param dataset_project_id: The dataset_project_id of this GooglePrivacyDlpV2ColumnDataProfile.
        :param estimated_null_percentage: The estimated_null_percentage of this GooglePrivacyDlpV2ColumnDataProfile.
        :param estimated_uniqueness_score: The estimated_uniqueness_score of this GooglePrivacyDlpV2ColumnDataProfile.
        :param free_text_score: The free_text_score of this GooglePrivacyDlpV2ColumnDataProfile.
        :param name: The name of this GooglePrivacyDlpV2ColumnDataProfile.
        :param other_matches: The other_matches of this GooglePrivacyDlpV2ColumnDataProfile.
        :param policy_state: The policy_state of this GooglePrivacyDlpV2ColumnDataProfile.
        :param profile_last_generated: The profile_last_generated of this GooglePrivacyDlpV2ColumnDataProfile.
        :param profile_status: The profile_status of this GooglePrivacyDlpV2ColumnDataProfile.
        :param sensitivity_score: The sensitivity_score of this GooglePrivacyDlpV2ColumnDataProfile.
        :param state: The state of this GooglePrivacyDlpV2ColumnDataProfile.
        :param table_data_profile: The table_data_profile of this GooglePrivacyDlpV2ColumnDataProfile.
        :param table_full_resource: The table_full_resource of this GooglePrivacyDlpV2ColumnDataProfile.
        :param table_id: The table_id of this GooglePrivacyDlpV2ColumnDataProfile.
        """
        self.openapi_types = {
            'column': str,
            'column_info_type': GooglePrivacyDlpV2InfoTypeSummary,
            'column_type': str,
            'data_risk_level': GooglePrivacyDlpV2DataRiskLevel,
            'dataset_id': str,
            'dataset_location': str,
            'dataset_project_id': str,
            'estimated_null_percentage': str,
            'estimated_uniqueness_score': str,
            'free_text_score': float,
            'name': str,
            'other_matches': List[GooglePrivacyDlpV2OtherInfoTypeSummary],
            'policy_state': str,
            'profile_last_generated': str,
            'profile_status': GooglePrivacyDlpV2ProfileStatus,
            'sensitivity_score': GooglePrivacyDlpV2SensitivityScore,
            'state': str,
            'table_data_profile': str,
            'table_full_resource': str,
            'table_id': str
        }

        self.attribute_map = {
            'column': 'column',
            'column_info_type': 'columnInfoType',
            'column_type': 'columnType',
            'data_risk_level': 'dataRiskLevel',
            'dataset_id': 'datasetId',
            'dataset_location': 'datasetLocation',
            'dataset_project_id': 'datasetProjectId',
            'estimated_null_percentage': 'estimatedNullPercentage',
            'estimated_uniqueness_score': 'estimatedUniquenessScore',
            'free_text_score': 'freeTextScore',
            'name': 'name',
            'other_matches': 'otherMatches',
            'policy_state': 'policyState',
            'profile_last_generated': 'profileLastGenerated',
            'profile_status': 'profileStatus',
            'sensitivity_score': 'sensitivityScore',
            'state': 'state',
            'table_data_profile': 'tableDataProfile',
            'table_full_resource': 'tableFullResource',
            'table_id': 'tableId'
        }

        self._column = column
        self._column_info_type = column_info_type
        self._column_type = column_type
        self._data_risk_level = data_risk_level
        self._dataset_id = dataset_id
        self._dataset_location = dataset_location
        self._dataset_project_id = dataset_project_id
        self._estimated_null_percentage = estimated_null_percentage
        self._estimated_uniqueness_score = estimated_uniqueness_score
        self._free_text_score = free_text_score
        self._name = name
        self._other_matches = other_matches
        self._policy_state = policy_state
        self._profile_last_generated = profile_last_generated
        self._profile_status = profile_status
        self._sensitivity_score = sensitivity_score
        self._state = state
        self._table_data_profile = table_data_profile
        self._table_full_resource = table_full_resource
        self._table_id = table_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2ColumnDataProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2ColumnDataProfile of this GooglePrivacyDlpV2ColumnDataProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column(self):
        """Gets the column of this GooglePrivacyDlpV2ColumnDataProfile.

        The name of the column.

        :return: The column of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._column

    @column.setter
    def column(self, column):
        """Sets the column of this GooglePrivacyDlpV2ColumnDataProfile.

        The name of the column.

        :param column: The column of this GooglePrivacyDlpV2ColumnDataProfile.
        :type column: str
        """

        self._column = column

    @property
    def column_info_type(self):
        """Gets the column_info_type of this GooglePrivacyDlpV2ColumnDataProfile.


        :return: The column_info_type of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: GooglePrivacyDlpV2InfoTypeSummary
        """
        return self._column_info_type

    @column_info_type.setter
    def column_info_type(self, column_info_type):
        """Sets the column_info_type of this GooglePrivacyDlpV2ColumnDataProfile.


        :param column_info_type: The column_info_type of this GooglePrivacyDlpV2ColumnDataProfile.
        :type column_info_type: GooglePrivacyDlpV2InfoTypeSummary
        """

        self._column_info_type = column_info_type

    @property
    def column_type(self):
        """Gets the column_type of this GooglePrivacyDlpV2ColumnDataProfile.

        The data type of a given column.

        :return: The column_type of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._column_type

    @column_type.setter
    def column_type(self, column_type):
        """Sets the column_type of this GooglePrivacyDlpV2ColumnDataProfile.

        The data type of a given column.

        :param column_type: The column_type of this GooglePrivacyDlpV2ColumnDataProfile.
        :type column_type: str
        """
        allowed_values = ["COLUMN_DATA_TYPE_UNSPECIFIED", "TYPE_INT64", "TYPE_BOOL", "TYPE_FLOAT64", "TYPE_STRING", "TYPE_BYTES", "TYPE_TIMESTAMP", "TYPE_DATE", "TYPE_TIME", "TYPE_DATETIME", "TYPE_GEOGRAPHY", "TYPE_NUMERIC", "TYPE_RECORD", "TYPE_BIGNUMERIC", "TYPE_JSON"]  # noqa: E501
        if column_type not in allowed_values:
            raise ValueError(
                "Invalid value for `column_type` ({0}), must be one of {1}"
                .format(column_type, allowed_values)
            )

        self._column_type = column_type

    @property
    def data_risk_level(self):
        """Gets the data_risk_level of this GooglePrivacyDlpV2ColumnDataProfile.


        :return: The data_risk_level of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: GooglePrivacyDlpV2DataRiskLevel
        """
        return self._data_risk_level

    @data_risk_level.setter
    def data_risk_level(self, data_risk_level):
        """Sets the data_risk_level of this GooglePrivacyDlpV2ColumnDataProfile.


        :param data_risk_level: The data_risk_level of this GooglePrivacyDlpV2ColumnDataProfile.
        :type data_risk_level: GooglePrivacyDlpV2DataRiskLevel
        """

        self._data_risk_level = data_risk_level

    @property
    def dataset_id(self):
        """Gets the dataset_id of this GooglePrivacyDlpV2ColumnDataProfile.

        The BigQuery dataset ID.

        :return: The dataset_id of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._dataset_id

    @dataset_id.setter
    def dataset_id(self, dataset_id):
        """Sets the dataset_id of this GooglePrivacyDlpV2ColumnDataProfile.

        The BigQuery dataset ID.

        :param dataset_id: The dataset_id of this GooglePrivacyDlpV2ColumnDataProfile.
        :type dataset_id: str
        """

        self._dataset_id = dataset_id

    @property
    def dataset_location(self):
        """Gets the dataset_location of this GooglePrivacyDlpV2ColumnDataProfile.

        The BigQuery location where the dataset's data is stored. See https://cloud.google.com/bigquery/docs/locations for supported locations.

        :return: The dataset_location of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._dataset_location

    @dataset_location.setter
    def dataset_location(self, dataset_location):
        """Sets the dataset_location of this GooglePrivacyDlpV2ColumnDataProfile.

        The BigQuery location where the dataset's data is stored. See https://cloud.google.com/bigquery/docs/locations for supported locations.

        :param dataset_location: The dataset_location of this GooglePrivacyDlpV2ColumnDataProfile.
        :type dataset_location: str
        """

        self._dataset_location = dataset_location

    @property
    def dataset_project_id(self):
        """Gets the dataset_project_id of this GooglePrivacyDlpV2ColumnDataProfile.

        The Google Cloud project ID that owns the profiled resource.

        :return: The dataset_project_id of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._dataset_project_id

    @dataset_project_id.setter
    def dataset_project_id(self, dataset_project_id):
        """Sets the dataset_project_id of this GooglePrivacyDlpV2ColumnDataProfile.

        The Google Cloud project ID that owns the profiled resource.

        :param dataset_project_id: The dataset_project_id of this GooglePrivacyDlpV2ColumnDataProfile.
        :type dataset_project_id: str
        """

        self._dataset_project_id = dataset_project_id

    @property
    def estimated_null_percentage(self):
        """Gets the estimated_null_percentage of this GooglePrivacyDlpV2ColumnDataProfile.

        Approximate percentage of entries being null in the column.

        :return: The estimated_null_percentage of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._estimated_null_percentage

    @estimated_null_percentage.setter
    def estimated_null_percentage(self, estimated_null_percentage):
        """Sets the estimated_null_percentage of this GooglePrivacyDlpV2ColumnDataProfile.

        Approximate percentage of entries being null in the column.

        :param estimated_null_percentage: The estimated_null_percentage of this GooglePrivacyDlpV2ColumnDataProfile.
        :type estimated_null_percentage: str
        """
        allowed_values = ["NULL_PERCENTAGE_LEVEL_UNSPECIFIED", "NULL_PERCENTAGE_VERY_LOW", "NULL_PERCENTAGE_LOW", "NULL_PERCENTAGE_MEDIUM", "NULL_PERCENTAGE_HIGH"]  # noqa: E501
        if estimated_null_percentage not in allowed_values:
            raise ValueError(
                "Invalid value for `estimated_null_percentage` ({0}), must be one of {1}"
                .format(estimated_null_percentage, allowed_values)
            )

        self._estimated_null_percentage = estimated_null_percentage

    @property
    def estimated_uniqueness_score(self):
        """Gets the estimated_uniqueness_score of this GooglePrivacyDlpV2ColumnDataProfile.

        Approximate uniqueness of the column.

        :return: The estimated_uniqueness_score of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._estimated_uniqueness_score

    @estimated_uniqueness_score.setter
    def estimated_uniqueness_score(self, estimated_uniqueness_score):
        """Sets the estimated_uniqueness_score of this GooglePrivacyDlpV2ColumnDataProfile.

        Approximate uniqueness of the column.

        :param estimated_uniqueness_score: The estimated_uniqueness_score of this GooglePrivacyDlpV2ColumnDataProfile.
        :type estimated_uniqueness_score: str
        """
        allowed_values = ["UNIQUENESS_SCORE_LEVEL_UNSPECIFIED", "UNIQUENESS_SCORE_LOW", "UNIQUENESS_SCORE_MEDIUM", "UNIQUENESS_SCORE_HIGH"]  # noqa: E501
        if estimated_uniqueness_score not in allowed_values:
            raise ValueError(
                "Invalid value for `estimated_uniqueness_score` ({0}), must be one of {1}"
                .format(estimated_uniqueness_score, allowed_values)
            )

        self._estimated_uniqueness_score = estimated_uniqueness_score

    @property
    def free_text_score(self):
        """Gets the free_text_score of this GooglePrivacyDlpV2ColumnDataProfile.

        The likelihood that this column contains free-form text. A value close to 1 may indicate the column is likely to contain free-form or natural language text. Range in 0-1.

        :return: The free_text_score of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: float
        """
        return self._free_text_score

    @free_text_score.setter
    def free_text_score(self, free_text_score):
        """Sets the free_text_score of this GooglePrivacyDlpV2ColumnDataProfile.

        The likelihood that this column contains free-form text. A value close to 1 may indicate the column is likely to contain free-form or natural language text. Range in 0-1.

        :param free_text_score: The free_text_score of this GooglePrivacyDlpV2ColumnDataProfile.
        :type free_text_score: float
        """

        self._free_text_score = free_text_score

    @property
    def name(self):
        """Gets the name of this GooglePrivacyDlpV2ColumnDataProfile.

        The name of the profile.

        :return: The name of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GooglePrivacyDlpV2ColumnDataProfile.

        The name of the profile.

        :param name: The name of this GooglePrivacyDlpV2ColumnDataProfile.
        :type name: str
        """

        self._name = name

    @property
    def other_matches(self):
        """Gets the other_matches of this GooglePrivacyDlpV2ColumnDataProfile.

        Other types found within this column. List will be unordered.

        :return: The other_matches of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: List[GooglePrivacyDlpV2OtherInfoTypeSummary]
        """
        return self._other_matches

    @other_matches.setter
    def other_matches(self, other_matches):
        """Sets the other_matches of this GooglePrivacyDlpV2ColumnDataProfile.

        Other types found within this column. List will be unordered.

        :param other_matches: The other_matches of this GooglePrivacyDlpV2ColumnDataProfile.
        :type other_matches: List[GooglePrivacyDlpV2OtherInfoTypeSummary]
        """

        self._other_matches = other_matches

    @property
    def policy_state(self):
        """Gets the policy_state of this GooglePrivacyDlpV2ColumnDataProfile.

        Indicates if a policy tag has been applied to the column.

        :return: The policy_state of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._policy_state

    @policy_state.setter
    def policy_state(self, policy_state):
        """Sets the policy_state of this GooglePrivacyDlpV2ColumnDataProfile.

        Indicates if a policy tag has been applied to the column.

        :param policy_state: The policy_state of this GooglePrivacyDlpV2ColumnDataProfile.
        :type policy_state: str
        """
        allowed_values = ["COLUMN_POLICY_STATE_UNSPECIFIED", "COLUMN_POLICY_TAGGED"]  # noqa: E501
        if policy_state not in allowed_values:
            raise ValueError(
                "Invalid value for `policy_state` ({0}), must be one of {1}"
                .format(policy_state, allowed_values)
            )

        self._policy_state = policy_state

    @property
    def profile_last_generated(self):
        """Gets the profile_last_generated of this GooglePrivacyDlpV2ColumnDataProfile.

        The last time the profile was generated.

        :return: The profile_last_generated of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._profile_last_generated

    @profile_last_generated.setter
    def profile_last_generated(self, profile_last_generated):
        """Sets the profile_last_generated of this GooglePrivacyDlpV2ColumnDataProfile.

        The last time the profile was generated.

        :param profile_last_generated: The profile_last_generated of this GooglePrivacyDlpV2ColumnDataProfile.
        :type profile_last_generated: str
        """

        self._profile_last_generated = profile_last_generated

    @property
    def profile_status(self):
        """Gets the profile_status of this GooglePrivacyDlpV2ColumnDataProfile.


        :return: The profile_status of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: GooglePrivacyDlpV2ProfileStatus
        """
        return self._profile_status

    @profile_status.setter
    def profile_status(self, profile_status):
        """Sets the profile_status of this GooglePrivacyDlpV2ColumnDataProfile.


        :param profile_status: The profile_status of this GooglePrivacyDlpV2ColumnDataProfile.
        :type profile_status: GooglePrivacyDlpV2ProfileStatus
        """

        self._profile_status = profile_status

    @property
    def sensitivity_score(self):
        """Gets the sensitivity_score of this GooglePrivacyDlpV2ColumnDataProfile.


        :return: The sensitivity_score of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: GooglePrivacyDlpV2SensitivityScore
        """
        return self._sensitivity_score

    @sensitivity_score.setter
    def sensitivity_score(self, sensitivity_score):
        """Sets the sensitivity_score of this GooglePrivacyDlpV2ColumnDataProfile.


        :param sensitivity_score: The sensitivity_score of this GooglePrivacyDlpV2ColumnDataProfile.
        :type sensitivity_score: GooglePrivacyDlpV2SensitivityScore
        """

        self._sensitivity_score = sensitivity_score

    @property
    def state(self):
        """Gets the state of this GooglePrivacyDlpV2ColumnDataProfile.

        State of a profile.

        :return: The state of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GooglePrivacyDlpV2ColumnDataProfile.

        State of a profile.

        :param state: The state of this GooglePrivacyDlpV2ColumnDataProfile.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "RUNNING", "DONE"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def table_data_profile(self):
        """Gets the table_data_profile of this GooglePrivacyDlpV2ColumnDataProfile.

        The resource name of the table data profile.

        :return: The table_data_profile of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._table_data_profile

    @table_data_profile.setter
    def table_data_profile(self, table_data_profile):
        """Sets the table_data_profile of this GooglePrivacyDlpV2ColumnDataProfile.

        The resource name of the table data profile.

        :param table_data_profile: The table_data_profile of this GooglePrivacyDlpV2ColumnDataProfile.
        :type table_data_profile: str
        """

        self._table_data_profile = table_data_profile

    @property
    def table_full_resource(self):
        """Gets the table_full_resource of this GooglePrivacyDlpV2ColumnDataProfile.

        The resource name of the resource this column is within.

        :return: The table_full_resource of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._table_full_resource

    @table_full_resource.setter
    def table_full_resource(self, table_full_resource):
        """Sets the table_full_resource of this GooglePrivacyDlpV2ColumnDataProfile.

        The resource name of the resource this column is within.

        :param table_full_resource: The table_full_resource of this GooglePrivacyDlpV2ColumnDataProfile.
        :type table_full_resource: str
        """

        self._table_full_resource = table_full_resource

    @property
    def table_id(self):
        """Gets the table_id of this GooglePrivacyDlpV2ColumnDataProfile.

        The BigQuery table ID.

        :return: The table_id of this GooglePrivacyDlpV2ColumnDataProfile.
        :rtype: str
        """
        return self._table_id

    @table_id.setter
    def table_id(self, table_id):
        """Sets the table_id of this GooglePrivacyDlpV2ColumnDataProfile.

        The BigQuery table ID.

        :param table_id: The table_id of this GooglePrivacyDlpV2ColumnDataProfile.
        :type table_id: str
        """

        self._table_id = table_id
