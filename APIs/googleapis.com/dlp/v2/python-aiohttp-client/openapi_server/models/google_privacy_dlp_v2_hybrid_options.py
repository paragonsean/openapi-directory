# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_table_options import GooglePrivacyDlpV2TableOptions
from openapi_server import util


class GooglePrivacyDlpV2HybridOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, labels: Dict[str, str]=None, required_finding_label_keys: List[str]=None, table_options: GooglePrivacyDlpV2TableOptions=None):
        """GooglePrivacyDlpV2HybridOptions - a model defined in OpenAPI

        :param description: The description of this GooglePrivacyDlpV2HybridOptions.
        :param labels: The labels of this GooglePrivacyDlpV2HybridOptions.
        :param required_finding_label_keys: The required_finding_label_keys of this GooglePrivacyDlpV2HybridOptions.
        :param table_options: The table_options of this GooglePrivacyDlpV2HybridOptions.
        """
        self.openapi_types = {
            'description': str,
            'labels': Dict[str, str],
            'required_finding_label_keys': List[str],
            'table_options': GooglePrivacyDlpV2TableOptions
        }

        self.attribute_map = {
            'description': 'description',
            'labels': 'labels',
            'required_finding_label_keys': 'requiredFindingLabelKeys',
            'table_options': 'tableOptions'
        }

        self._description = description
        self._labels = labels
        self._required_finding_label_keys = required_finding_label_keys
        self._table_options = table_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2HybridOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2HybridOptions of this GooglePrivacyDlpV2HybridOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GooglePrivacyDlpV2HybridOptions.

        A short description of where the data is coming from. Will be stored once in the job. 256 max length.

        :return: The description of this GooglePrivacyDlpV2HybridOptions.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GooglePrivacyDlpV2HybridOptions.

        A short description of where the data is coming from. Will be stored once in the job. 256 max length.

        :param description: The description of this GooglePrivacyDlpV2HybridOptions.
        :type description: str
        """

        self._description = description

    @property
    def labels(self):
        """Gets the labels of this GooglePrivacyDlpV2HybridOptions.

        To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`

        :return: The labels of this GooglePrivacyDlpV2HybridOptions.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GooglePrivacyDlpV2HybridOptions.

        To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`

        :param labels: The labels of this GooglePrivacyDlpV2HybridOptions.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def required_finding_label_keys(self):
        """Gets the required_finding_label_keys of this GooglePrivacyDlpV2HybridOptions.

        These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.

        :return: The required_finding_label_keys of this GooglePrivacyDlpV2HybridOptions.
        :rtype: List[str]
        """
        return self._required_finding_label_keys

    @required_finding_label_keys.setter
    def required_finding_label_keys(self, required_finding_label_keys):
        """Sets the required_finding_label_keys of this GooglePrivacyDlpV2HybridOptions.

        These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.

        :param required_finding_label_keys: The required_finding_label_keys of this GooglePrivacyDlpV2HybridOptions.
        :type required_finding_label_keys: List[str]
        """

        self._required_finding_label_keys = required_finding_label_keys

    @property
    def table_options(self):
        """Gets the table_options of this GooglePrivacyDlpV2HybridOptions.


        :return: The table_options of this GooglePrivacyDlpV2HybridOptions.
        :rtype: GooglePrivacyDlpV2TableOptions
        """
        return self._table_options

    @table_options.setter
    def table_options(self, table_options):
        """Sets the table_options of this GooglePrivacyDlpV2HybridOptions.


        :param table_options: The table_options of this GooglePrivacyDlpV2HybridOptions.
        :type table_options: GooglePrivacyDlpV2TableOptions
        """

        self._table_options = table_options
