# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_crypto_key import GooglePrivacyDlpV2CryptoKey
from openapi_server import util


class GooglePrivacyDlpV2CryptoHashConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, crypto_key: GooglePrivacyDlpV2CryptoKey=None):
        """GooglePrivacyDlpV2CryptoHashConfig - a model defined in OpenAPI

        :param crypto_key: The crypto_key of this GooglePrivacyDlpV2CryptoHashConfig.
        """
        self.openapi_types = {
            'crypto_key': GooglePrivacyDlpV2CryptoKey
        }

        self.attribute_map = {
            'crypto_key': 'cryptoKey'
        }

        self._crypto_key = crypto_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2CryptoHashConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2CryptoHashConfig of this GooglePrivacyDlpV2CryptoHashConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crypto_key(self):
        """Gets the crypto_key of this GooglePrivacyDlpV2CryptoHashConfig.


        :return: The crypto_key of this GooglePrivacyDlpV2CryptoHashConfig.
        :rtype: GooglePrivacyDlpV2CryptoKey
        """
        return self._crypto_key

    @crypto_key.setter
    def crypto_key(self, crypto_key):
        """Sets the crypto_key of this GooglePrivacyDlpV2CryptoHashConfig.


        :param crypto_key: The crypto_key of this GooglePrivacyDlpV2CryptoHashConfig.
        :type crypto_key: GooglePrivacyDlpV2CryptoKey
        """

        self._crypto_key = crypto_key
