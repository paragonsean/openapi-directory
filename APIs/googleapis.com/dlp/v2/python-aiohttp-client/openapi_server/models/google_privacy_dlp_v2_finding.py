# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_info_type import GooglePrivacyDlpV2InfoType
from openapi_server.models.google_privacy_dlp_v2_location import GooglePrivacyDlpV2Location
from openapi_server.models.google_privacy_dlp_v2_quote_info import GooglePrivacyDlpV2QuoteInfo
from openapi_server import util


class GooglePrivacyDlpV2Finding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, finding_id: str=None, info_type: GooglePrivacyDlpV2InfoType=None, job_create_time: str=None, job_name: str=None, labels: Dict[str, str]=None, likelihood: str=None, location: GooglePrivacyDlpV2Location=None, name: str=None, quote: str=None, quote_info: GooglePrivacyDlpV2QuoteInfo=None, resource_name: str=None, trigger_name: str=None):
        """GooglePrivacyDlpV2Finding - a model defined in OpenAPI

        :param create_time: The create_time of this GooglePrivacyDlpV2Finding.
        :param finding_id: The finding_id of this GooglePrivacyDlpV2Finding.
        :param info_type: The info_type of this GooglePrivacyDlpV2Finding.
        :param job_create_time: The job_create_time of this GooglePrivacyDlpV2Finding.
        :param job_name: The job_name of this GooglePrivacyDlpV2Finding.
        :param labels: The labels of this GooglePrivacyDlpV2Finding.
        :param likelihood: The likelihood of this GooglePrivacyDlpV2Finding.
        :param location: The location of this GooglePrivacyDlpV2Finding.
        :param name: The name of this GooglePrivacyDlpV2Finding.
        :param quote: The quote of this GooglePrivacyDlpV2Finding.
        :param quote_info: The quote_info of this GooglePrivacyDlpV2Finding.
        :param resource_name: The resource_name of this GooglePrivacyDlpV2Finding.
        :param trigger_name: The trigger_name of this GooglePrivacyDlpV2Finding.
        """
        self.openapi_types = {
            'create_time': str,
            'finding_id': str,
            'info_type': GooglePrivacyDlpV2InfoType,
            'job_create_time': str,
            'job_name': str,
            'labels': Dict[str, str],
            'likelihood': str,
            'location': GooglePrivacyDlpV2Location,
            'name': str,
            'quote': str,
            'quote_info': GooglePrivacyDlpV2QuoteInfo,
            'resource_name': str,
            'trigger_name': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'finding_id': 'findingId',
            'info_type': 'infoType',
            'job_create_time': 'jobCreateTime',
            'job_name': 'jobName',
            'labels': 'labels',
            'likelihood': 'likelihood',
            'location': 'location',
            'name': 'name',
            'quote': 'quote',
            'quote_info': 'quoteInfo',
            'resource_name': 'resourceName',
            'trigger_name': 'triggerName'
        }

        self._create_time = create_time
        self._finding_id = finding_id
        self._info_type = info_type
        self._job_create_time = job_create_time
        self._job_name = job_name
        self._labels = labels
        self._likelihood = likelihood
        self._location = location
        self._name = name
        self._quote = quote
        self._quote_info = quote_info
        self._resource_name = resource_name
        self._trigger_name = trigger_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2Finding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2Finding of this GooglePrivacyDlpV2Finding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GooglePrivacyDlpV2Finding.

        Timestamp when finding was detected.

        :return: The create_time of this GooglePrivacyDlpV2Finding.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GooglePrivacyDlpV2Finding.

        Timestamp when finding was detected.

        :param create_time: The create_time of this GooglePrivacyDlpV2Finding.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def finding_id(self):
        """Gets the finding_id of this GooglePrivacyDlpV2Finding.

        The unique finding id.

        :return: The finding_id of this GooglePrivacyDlpV2Finding.
        :rtype: str
        """
        return self._finding_id

    @finding_id.setter
    def finding_id(self, finding_id):
        """Sets the finding_id of this GooglePrivacyDlpV2Finding.

        The unique finding id.

        :param finding_id: The finding_id of this GooglePrivacyDlpV2Finding.
        :type finding_id: str
        """

        self._finding_id = finding_id

    @property
    def info_type(self):
        """Gets the info_type of this GooglePrivacyDlpV2Finding.


        :return: The info_type of this GooglePrivacyDlpV2Finding.
        :rtype: GooglePrivacyDlpV2InfoType
        """
        return self._info_type

    @info_type.setter
    def info_type(self, info_type):
        """Sets the info_type of this GooglePrivacyDlpV2Finding.


        :param info_type: The info_type of this GooglePrivacyDlpV2Finding.
        :type info_type: GooglePrivacyDlpV2InfoType
        """

        self._info_type = info_type

    @property
    def job_create_time(self):
        """Gets the job_create_time of this GooglePrivacyDlpV2Finding.

        Time the job started that produced this finding.

        :return: The job_create_time of this GooglePrivacyDlpV2Finding.
        :rtype: str
        """
        return self._job_create_time

    @job_create_time.setter
    def job_create_time(self, job_create_time):
        """Sets the job_create_time of this GooglePrivacyDlpV2Finding.

        Time the job started that produced this finding.

        :param job_create_time: The job_create_time of this GooglePrivacyDlpV2Finding.
        :type job_create_time: str
        """

        self._job_create_time = job_create_time

    @property
    def job_name(self):
        """Gets the job_name of this GooglePrivacyDlpV2Finding.

        The job that stored the finding.

        :return: The job_name of this GooglePrivacyDlpV2Finding.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this GooglePrivacyDlpV2Finding.

        The job that stored the finding.

        :param job_name: The job_name of this GooglePrivacyDlpV2Finding.
        :type job_name: str
        """

        self._job_name = job_name

    @property
    def labels(self):
        """Gets the labels of this GooglePrivacyDlpV2Finding.

        The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`

        :return: The labels of this GooglePrivacyDlpV2Finding.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GooglePrivacyDlpV2Finding.

        The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`

        :param labels: The labels of this GooglePrivacyDlpV2Finding.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def likelihood(self):
        """Gets the likelihood of this GooglePrivacyDlpV2Finding.

        Confidence of how likely it is that the `info_type` is correct.

        :return: The likelihood of this GooglePrivacyDlpV2Finding.
        :rtype: str
        """
        return self._likelihood

    @likelihood.setter
    def likelihood(self, likelihood):
        """Sets the likelihood of this GooglePrivacyDlpV2Finding.

        Confidence of how likely it is that the `info_type` is correct.

        :param likelihood: The likelihood of this GooglePrivacyDlpV2Finding.
        :type likelihood: str
        """
        allowed_values = ["LIKELIHOOD_UNSPECIFIED", "VERY_UNLIKELY", "UNLIKELY", "POSSIBLE", "LIKELY", "VERY_LIKELY"]  # noqa: E501
        if likelihood not in allowed_values:
            raise ValueError(
                "Invalid value for `likelihood` ({0}), must be one of {1}"
                .format(likelihood, allowed_values)
            )

        self._likelihood = likelihood

    @property
    def location(self):
        """Gets the location of this GooglePrivacyDlpV2Finding.


        :return: The location of this GooglePrivacyDlpV2Finding.
        :rtype: GooglePrivacyDlpV2Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this GooglePrivacyDlpV2Finding.


        :param location: The location of this GooglePrivacyDlpV2Finding.
        :type location: GooglePrivacyDlpV2Location
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this GooglePrivacyDlpV2Finding.

        Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings.

        :return: The name of this GooglePrivacyDlpV2Finding.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GooglePrivacyDlpV2Finding.

        Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings.

        :param name: The name of this GooglePrivacyDlpV2Finding.
        :type name: str
        """

        self._name = name

    @property
    def quote(self):
        """Gets the quote of this GooglePrivacyDlpV2Finding.

        The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted.

        :return: The quote of this GooglePrivacyDlpV2Finding.
        :rtype: str
        """
        return self._quote

    @quote.setter
    def quote(self, quote):
        """Sets the quote of this GooglePrivacyDlpV2Finding.

        The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted.

        :param quote: The quote of this GooglePrivacyDlpV2Finding.
        :type quote: str
        """

        self._quote = quote

    @property
    def quote_info(self):
        """Gets the quote_info of this GooglePrivacyDlpV2Finding.


        :return: The quote_info of this GooglePrivacyDlpV2Finding.
        :rtype: GooglePrivacyDlpV2QuoteInfo
        """
        return self._quote_info

    @quote_info.setter
    def quote_info(self, quote_info):
        """Sets the quote_info of this GooglePrivacyDlpV2Finding.


        :param quote_info: The quote_info of this GooglePrivacyDlpV2Finding.
        :type quote_info: GooglePrivacyDlpV2QuoteInfo
        """

        self._quote_info = quote_info

    @property
    def resource_name(self):
        """Gets the resource_name of this GooglePrivacyDlpV2Finding.

        The job that stored the finding.

        :return: The resource_name of this GooglePrivacyDlpV2Finding.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this GooglePrivacyDlpV2Finding.

        The job that stored the finding.

        :param resource_name: The resource_name of this GooglePrivacyDlpV2Finding.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def trigger_name(self):
        """Gets the trigger_name of this GooglePrivacyDlpV2Finding.

        Job trigger name, if applicable, for this finding.

        :return: The trigger_name of this GooglePrivacyDlpV2Finding.
        :rtype: str
        """
        return self._trigger_name

    @trigger_name.setter
    def trigger_name(self, trigger_name):
        """Sets the trigger_name of this GooglePrivacyDlpV2Finding.

        Job trigger name, if applicable, for this finding.

        :param trigger_name: The trigger_name of this GooglePrivacyDlpV2Finding.
        :type trigger_name: str
        """

        self._trigger_name = trigger_name
