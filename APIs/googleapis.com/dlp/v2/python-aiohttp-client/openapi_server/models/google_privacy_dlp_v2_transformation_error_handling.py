# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GooglePrivacyDlpV2TransformationErrorHandling(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, leave_untransformed: object=None, throw_error: object=None):
        """GooglePrivacyDlpV2TransformationErrorHandling - a model defined in OpenAPI

        :param leave_untransformed: The leave_untransformed of this GooglePrivacyDlpV2TransformationErrorHandling.
        :param throw_error: The throw_error of this GooglePrivacyDlpV2TransformationErrorHandling.
        """
        self.openapi_types = {
            'leave_untransformed': object,
            'throw_error': object
        }

        self.attribute_map = {
            'leave_untransformed': 'leaveUntransformed',
            'throw_error': 'throwError'
        }

        self._leave_untransformed = leave_untransformed
        self._throw_error = throw_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2TransformationErrorHandling':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2TransformationErrorHandling of this GooglePrivacyDlpV2TransformationErrorHandling.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def leave_untransformed(self):
        """Gets the leave_untransformed of this GooglePrivacyDlpV2TransformationErrorHandling.

        Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.

        :return: The leave_untransformed of this GooglePrivacyDlpV2TransformationErrorHandling.
        :rtype: object
        """
        return self._leave_untransformed

    @leave_untransformed.setter
    def leave_untransformed(self, leave_untransformed):
        """Sets the leave_untransformed of this GooglePrivacyDlpV2TransformationErrorHandling.

        Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.

        :param leave_untransformed: The leave_untransformed of this GooglePrivacyDlpV2TransformationErrorHandling.
        :type leave_untransformed: object
        """

        self._leave_untransformed = leave_untransformed

    @property
    def throw_error(self):
        """Gets the throw_error of this GooglePrivacyDlpV2TransformationErrorHandling.

        Throw an error and fail the request when a transformation error occurs.

        :return: The throw_error of this GooglePrivacyDlpV2TransformationErrorHandling.
        :rtype: object
        """
        return self._throw_error

    @throw_error.setter
    def throw_error(self, throw_error):
        """Sets the throw_error of this GooglePrivacyDlpV2TransformationErrorHandling.

        Throw an error and fail the request when a transformation error occurs.

        :param throw_error: The throw_error of this GooglePrivacyDlpV2TransformationErrorHandling.
        :type throw_error: object
        """

        self._throw_error = throw_error
