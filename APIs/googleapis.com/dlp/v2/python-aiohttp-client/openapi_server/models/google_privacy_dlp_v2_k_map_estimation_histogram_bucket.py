# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_k_map_estimation_quasi_id_values import GooglePrivacyDlpV2KMapEstimationQuasiIdValues
from openapi_server import util


class GooglePrivacyDlpV2KMapEstimationHistogramBucket(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_size: str=None, bucket_value_count: str=None, bucket_values: List[GooglePrivacyDlpV2KMapEstimationQuasiIdValues]=None, max_anonymity: str=None, min_anonymity: str=None):
        """GooglePrivacyDlpV2KMapEstimationHistogramBucket - a model defined in OpenAPI

        :param bucket_size: The bucket_size of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :param bucket_value_count: The bucket_value_count of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :param bucket_values: The bucket_values of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :param max_anonymity: The max_anonymity of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :param min_anonymity: The min_anonymity of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        """
        self.openapi_types = {
            'bucket_size': str,
            'bucket_value_count': str,
            'bucket_values': List[GooglePrivacyDlpV2KMapEstimationQuasiIdValues],
            'max_anonymity': str,
            'min_anonymity': str
        }

        self.attribute_map = {
            'bucket_size': 'bucketSize',
            'bucket_value_count': 'bucketValueCount',
            'bucket_values': 'bucketValues',
            'max_anonymity': 'maxAnonymity',
            'min_anonymity': 'minAnonymity'
        }

        self._bucket_size = bucket_size
        self._bucket_value_count = bucket_value_count
        self._bucket_values = bucket_values
        self._max_anonymity = max_anonymity
        self._min_anonymity = min_anonymity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2KMapEstimationHistogramBucket':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2KMapEstimationHistogramBucket of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_size(self):
        """Gets the bucket_size of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.

        Number of records within these anonymity bounds.

        :return: The bucket_size of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :rtype: str
        """
        return self._bucket_size

    @bucket_size.setter
    def bucket_size(self, bucket_size):
        """Sets the bucket_size of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.

        Number of records within these anonymity bounds.

        :param bucket_size: The bucket_size of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :type bucket_size: str
        """

        self._bucket_size = bucket_size

    @property
    def bucket_value_count(self):
        """Gets the bucket_value_count of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.

        Total number of distinct quasi-identifier tuple values in this bucket.

        :return: The bucket_value_count of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :rtype: str
        """
        return self._bucket_value_count

    @bucket_value_count.setter
    def bucket_value_count(self, bucket_value_count):
        """Sets the bucket_value_count of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.

        Total number of distinct quasi-identifier tuple values in this bucket.

        :param bucket_value_count: The bucket_value_count of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :type bucket_value_count: str
        """

        self._bucket_value_count = bucket_value_count

    @property
    def bucket_values(self):
        """Gets the bucket_values of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.

        Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.

        :return: The bucket_values of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :rtype: List[GooglePrivacyDlpV2KMapEstimationQuasiIdValues]
        """
        return self._bucket_values

    @bucket_values.setter
    def bucket_values(self, bucket_values):
        """Sets the bucket_values of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.

        Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.

        :param bucket_values: The bucket_values of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :type bucket_values: List[GooglePrivacyDlpV2KMapEstimationQuasiIdValues]
        """

        self._bucket_values = bucket_values

    @property
    def max_anonymity(self):
        """Gets the max_anonymity of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.

        Always greater than or equal to min_anonymity.

        :return: The max_anonymity of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :rtype: str
        """
        return self._max_anonymity

    @max_anonymity.setter
    def max_anonymity(self, max_anonymity):
        """Sets the max_anonymity of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.

        Always greater than or equal to min_anonymity.

        :param max_anonymity: The max_anonymity of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :type max_anonymity: str
        """

        self._max_anonymity = max_anonymity

    @property
    def min_anonymity(self):
        """Gets the min_anonymity of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.

        Always positive.

        :return: The min_anonymity of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :rtype: str
        """
        return self._min_anonymity

    @min_anonymity.setter
    def min_anonymity(self, min_anonymity):
        """Sets the min_anonymity of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.

        Always positive.

        :param min_anonymity: The min_anonymity of this GooglePrivacyDlpV2KMapEstimationHistogramBucket.
        :type min_anonymity: str
        """

        self._min_anonymity = min_anonymity
