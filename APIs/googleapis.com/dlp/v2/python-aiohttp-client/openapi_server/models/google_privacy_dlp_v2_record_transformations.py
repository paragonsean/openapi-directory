# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_field_transformation import GooglePrivacyDlpV2FieldTransformation
from openapi_server.models.google_privacy_dlp_v2_record_suppression import GooglePrivacyDlpV2RecordSuppression
from openapi_server import util


class GooglePrivacyDlpV2RecordTransformations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_transformations: List[GooglePrivacyDlpV2FieldTransformation]=None, record_suppressions: List[GooglePrivacyDlpV2RecordSuppression]=None):
        """GooglePrivacyDlpV2RecordTransformations - a model defined in OpenAPI

        :param field_transformations: The field_transformations of this GooglePrivacyDlpV2RecordTransformations.
        :param record_suppressions: The record_suppressions of this GooglePrivacyDlpV2RecordTransformations.
        """
        self.openapi_types = {
            'field_transformations': List[GooglePrivacyDlpV2FieldTransformation],
            'record_suppressions': List[GooglePrivacyDlpV2RecordSuppression]
        }

        self.attribute_map = {
            'field_transformations': 'fieldTransformations',
            'record_suppressions': 'recordSuppressions'
        }

        self._field_transformations = field_transformations
        self._record_suppressions = record_suppressions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2RecordTransformations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2RecordTransformations of this GooglePrivacyDlpV2RecordTransformations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_transformations(self):
        """Gets the field_transformations of this GooglePrivacyDlpV2RecordTransformations.

        Transform the record by applying various field transformations.

        :return: The field_transformations of this GooglePrivacyDlpV2RecordTransformations.
        :rtype: List[GooglePrivacyDlpV2FieldTransformation]
        """
        return self._field_transformations

    @field_transformations.setter
    def field_transformations(self, field_transformations):
        """Sets the field_transformations of this GooglePrivacyDlpV2RecordTransformations.

        Transform the record by applying various field transformations.

        :param field_transformations: The field_transformations of this GooglePrivacyDlpV2RecordTransformations.
        :type field_transformations: List[GooglePrivacyDlpV2FieldTransformation]
        """

        self._field_transformations = field_transformations

    @property
    def record_suppressions(self):
        """Gets the record_suppressions of this GooglePrivacyDlpV2RecordTransformations.

        Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.

        :return: The record_suppressions of this GooglePrivacyDlpV2RecordTransformations.
        :rtype: List[GooglePrivacyDlpV2RecordSuppression]
        """
        return self._record_suppressions

    @record_suppressions.setter
    def record_suppressions(self, record_suppressions):
        """Sets the record_suppressions of this GooglePrivacyDlpV2RecordTransformations.

        Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.

        :param record_suppressions: The record_suppressions of this GooglePrivacyDlpV2RecordTransformations.
        :type record_suppressions: List[GooglePrivacyDlpV2RecordSuppression]
        """

        self._record_suppressions = record_suppressions
