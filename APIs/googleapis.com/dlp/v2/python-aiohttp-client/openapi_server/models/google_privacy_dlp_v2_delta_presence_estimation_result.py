# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_privacy_dlp_v2_delta_presence_estimation_histogram_bucket import GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket
from openapi_server import util


class GooglePrivacyDlpV2DeltaPresenceEstimationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delta_presence_estimation_histogram: List[GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket]=None):
        """GooglePrivacyDlpV2DeltaPresenceEstimationResult - a model defined in OpenAPI

        :param delta_presence_estimation_histogram: The delta_presence_estimation_histogram of this GooglePrivacyDlpV2DeltaPresenceEstimationResult.
        """
        self.openapi_types = {
            'delta_presence_estimation_histogram': List[GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket]
        }

        self.attribute_map = {
            'delta_presence_estimation_histogram': 'deltaPresenceEstimationHistogram'
        }

        self._delta_presence_estimation_histogram = delta_presence_estimation_histogram

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GooglePrivacyDlpV2DeltaPresenceEstimationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GooglePrivacyDlpV2DeltaPresenceEstimationResult of this GooglePrivacyDlpV2DeltaPresenceEstimationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delta_presence_estimation_histogram(self):
        """Gets the delta_presence_estimation_histogram of this GooglePrivacyDlpV2DeltaPresenceEstimationResult.

        The intervals [min_probability, max_probability) do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_probability: 0, max_probability: 0.1, frequency: 17} {min_probability: 0.2, max_probability: 0.3, frequency: 42} {min_probability: 0.3, max_probability: 0.4, frequency: 99} mean that there are no record with an estimated probability in [0.1, 0.2) nor larger or equal to 0.4.

        :return: The delta_presence_estimation_histogram of this GooglePrivacyDlpV2DeltaPresenceEstimationResult.
        :rtype: List[GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket]
        """
        return self._delta_presence_estimation_histogram

    @delta_presence_estimation_histogram.setter
    def delta_presence_estimation_histogram(self, delta_presence_estimation_histogram):
        """Sets the delta_presence_estimation_histogram of this GooglePrivacyDlpV2DeltaPresenceEstimationResult.

        The intervals [min_probability, max_probability) do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_probability: 0, max_probability: 0.1, frequency: 17} {min_probability: 0.2, max_probability: 0.3, frequency: 42} {min_probability: 0.3, max_probability: 0.4, frequency: 99} mean that there are no record with an estimated probability in [0.1, 0.2) nor larger or equal to 0.4.

        :param delta_presence_estimation_histogram: The delta_presence_estimation_histogram of this GooglePrivacyDlpV2DeltaPresenceEstimationResult.
        :type delta_presence_estimation_histogram: List[GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket]
        """

        self._delta_presence_estimation_histogram = delta_presence_estimation_histogram
