/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2Value.h
 *
 * Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a &#39;Value&#39; is based on its representation as a UTF-8 encoded string. For example, if &#39;integer_value&#39; is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
 */

#ifndef OAIGooglePrivacyDlpV2Value_H
#define OAIGooglePrivacyDlpV2Value_H

#include <QJsonObject>

#include "OAIGoogleTypeDate.h"
#include "OAIGoogleTypeTimeOfDay.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleTypeDate;
class OAIGoogleTypeTimeOfDay;

class OAIGooglePrivacyDlpV2Value : public OAIObject {
public:
    OAIGooglePrivacyDlpV2Value();
    OAIGooglePrivacyDlpV2Value(QString json);
    ~OAIGooglePrivacyDlpV2Value() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBooleanValue() const;
    void setBooleanValue(const bool &boolean_value);
    bool is_boolean_value_Set() const;
    bool is_boolean_value_Valid() const;

    OAIGoogleTypeDate getDateValue() const;
    void setDateValue(const OAIGoogleTypeDate &date_value);
    bool is_date_value_Set() const;
    bool is_date_value_Valid() const;

    QString getDayOfWeekValue() const;
    void setDayOfWeekValue(const QString &day_of_week_value);
    bool is_day_of_week_value_Set() const;
    bool is_day_of_week_value_Valid() const;

    double getFloatValue() const;
    void setFloatValue(const double &float_value);
    bool is_float_value_Set() const;
    bool is_float_value_Valid() const;

    QString getIntegerValue() const;
    void setIntegerValue(const QString &integer_value);
    bool is_integer_value_Set() const;
    bool is_integer_value_Valid() const;

    QString getStringValue() const;
    void setStringValue(const QString &string_value);
    bool is_string_value_Set() const;
    bool is_string_value_Valid() const;

    OAIGoogleTypeTimeOfDay getTimeValue() const;
    void setTimeValue(const OAIGoogleTypeTimeOfDay &time_value);
    bool is_time_value_Set() const;
    bool is_time_value_Valid() const;

    QString getTimestampValue() const;
    void setTimestampValue(const QString &timestamp_value);
    bool is_timestamp_value_Set() const;
    bool is_timestamp_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_boolean_value;
    bool m_boolean_value_isSet;
    bool m_boolean_value_isValid;

    OAIGoogleTypeDate m_date_value;
    bool m_date_value_isSet;
    bool m_date_value_isValid;

    QString m_day_of_week_value;
    bool m_day_of_week_value_isSet;
    bool m_day_of_week_value_isValid;

    double m_float_value;
    bool m_float_value_isSet;
    bool m_float_value_isValid;

    QString m_integer_value;
    bool m_integer_value_isSet;
    bool m_integer_value_isValid;

    QString m_string_value;
    bool m_string_value_isSet;
    bool m_string_value_isValid;

    OAIGoogleTypeTimeOfDay m_time_value;
    bool m_time_value_isSet;
    bool m_time_value_isValid;

    QString m_timestamp_value;
    bool m_timestamp_value_isSet;
    bool m_timestamp_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2Value)

#endif // OAIGooglePrivacyDlpV2Value_H
