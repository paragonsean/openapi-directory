/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2BigQueryOptions.h
 *
 * Options defining BigQuery table and row identifiers.
 */

#ifndef OAIGooglePrivacyDlpV2BigQueryOptions_H
#define OAIGooglePrivacyDlpV2BigQueryOptions_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2BigQueryTable.h"
#include "OAIGooglePrivacyDlpV2FieldId.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2FieldId;
class OAIGooglePrivacyDlpV2BigQueryTable;

class OAIGooglePrivacyDlpV2BigQueryOptions : public OAIObject {
public:
    OAIGooglePrivacyDlpV2BigQueryOptions();
    OAIGooglePrivacyDlpV2BigQueryOptions(QString json);
    ~OAIGooglePrivacyDlpV2BigQueryOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGooglePrivacyDlpV2FieldId> getExcludedFields() const;
    void setExcludedFields(const QList<OAIGooglePrivacyDlpV2FieldId> &excluded_fields);
    bool is_excluded_fields_Set() const;
    bool is_excluded_fields_Valid() const;

    QList<OAIGooglePrivacyDlpV2FieldId> getIdentifyingFields() const;
    void setIdentifyingFields(const QList<OAIGooglePrivacyDlpV2FieldId> &identifying_fields);
    bool is_identifying_fields_Set() const;
    bool is_identifying_fields_Valid() const;

    QList<OAIGooglePrivacyDlpV2FieldId> getIncludedFields() const;
    void setIncludedFields(const QList<OAIGooglePrivacyDlpV2FieldId> &included_fields);
    bool is_included_fields_Set() const;
    bool is_included_fields_Valid() const;

    QString getRowsLimit() const;
    void setRowsLimit(const QString &rows_limit);
    bool is_rows_limit_Set() const;
    bool is_rows_limit_Valid() const;

    qint32 getRowsLimitPercent() const;
    void setRowsLimitPercent(const qint32 &rows_limit_percent);
    bool is_rows_limit_percent_Set() const;
    bool is_rows_limit_percent_Valid() const;

    QString getSampleMethod() const;
    void setSampleMethod(const QString &sample_method);
    bool is_sample_method_Set() const;
    bool is_sample_method_Valid() const;

    OAIGooglePrivacyDlpV2BigQueryTable getTableReference() const;
    void setTableReference(const OAIGooglePrivacyDlpV2BigQueryTable &table_reference);
    bool is_table_reference_Set() const;
    bool is_table_reference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGooglePrivacyDlpV2FieldId> m_excluded_fields;
    bool m_excluded_fields_isSet;
    bool m_excluded_fields_isValid;

    QList<OAIGooglePrivacyDlpV2FieldId> m_identifying_fields;
    bool m_identifying_fields_isSet;
    bool m_identifying_fields_isValid;

    QList<OAIGooglePrivacyDlpV2FieldId> m_included_fields;
    bool m_included_fields_isSet;
    bool m_included_fields_isValid;

    QString m_rows_limit;
    bool m_rows_limit_isSet;
    bool m_rows_limit_isValid;

    qint32 m_rows_limit_percent;
    bool m_rows_limit_percent_isSet;
    bool m_rows_limit_percent_isValid;

    QString m_sample_method;
    bool m_sample_method_isSet;
    bool m_sample_method_isValid;

    OAIGooglePrivacyDlpV2BigQueryTable m_table_reference;
    bool m_table_reference_isSet;
    bool m_table_reference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2BigQueryOptions)

#endif // OAIGooglePrivacyDlpV2BigQueryOptions_H
