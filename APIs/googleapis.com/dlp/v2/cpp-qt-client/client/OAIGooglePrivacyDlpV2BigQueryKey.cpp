/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2BigQueryKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2BigQueryKey::OAIGooglePrivacyDlpV2BigQueryKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2BigQueryKey::OAIGooglePrivacyDlpV2BigQueryKey() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2BigQueryKey::~OAIGooglePrivacyDlpV2BigQueryKey() {}

void OAIGooglePrivacyDlpV2BigQueryKey::initializeModel() {

    m_row_number_isSet = false;
    m_row_number_isValid = false;

    m_table_reference_isSet = false;
    m_table_reference_isValid = false;
}

void OAIGooglePrivacyDlpV2BigQueryKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2BigQueryKey::fromJsonObject(QJsonObject json) {

    m_row_number_isValid = ::OpenAPI::fromJsonValue(m_row_number, json[QString("rowNumber")]);
    m_row_number_isSet = !json[QString("rowNumber")].isNull() && m_row_number_isValid;

    m_table_reference_isValid = ::OpenAPI::fromJsonValue(m_table_reference, json[QString("tableReference")]);
    m_table_reference_isSet = !json[QString("tableReference")].isNull() && m_table_reference_isValid;
}

QString OAIGooglePrivacyDlpV2BigQueryKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2BigQueryKey::asJsonObject() const {
    QJsonObject obj;
    if (m_row_number_isSet) {
        obj.insert(QString("rowNumber"), ::OpenAPI::toJsonValue(m_row_number));
    }
    if (m_table_reference.isSet()) {
        obj.insert(QString("tableReference"), ::OpenAPI::toJsonValue(m_table_reference));
    }
    return obj;
}

QString OAIGooglePrivacyDlpV2BigQueryKey::getRowNumber() const {
    return m_row_number;
}
void OAIGooglePrivacyDlpV2BigQueryKey::setRowNumber(const QString &row_number) {
    m_row_number = row_number;
    m_row_number_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryKey::is_row_number_Set() const{
    return m_row_number_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryKey::is_row_number_Valid() const{
    return m_row_number_isValid;
}

OAIGooglePrivacyDlpV2BigQueryTable OAIGooglePrivacyDlpV2BigQueryKey::getTableReference() const {
    return m_table_reference;
}
void OAIGooglePrivacyDlpV2BigQueryKey::setTableReference(const OAIGooglePrivacyDlpV2BigQueryTable &table_reference) {
    m_table_reference = table_reference;
    m_table_reference_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryKey::is_table_reference_Set() const{
    return m_table_reference_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryKey::is_table_reference_Valid() const{
    return m_table_reference_isValid;
}

bool OAIGooglePrivacyDlpV2BigQueryKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_row_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2BigQueryKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
