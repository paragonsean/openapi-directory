/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2PrimitiveTransformation.h
 *
 * A rule for transforming a value.
 */

#ifndef OAIGooglePrivacyDlpV2PrimitiveTransformation_H
#define OAIGooglePrivacyDlpV2PrimitiveTransformation_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2BucketingConfig.h"
#include "OAIGooglePrivacyDlpV2CharacterMaskConfig.h"
#include "OAIGooglePrivacyDlpV2CryptoDeterministicConfig.h"
#include "OAIGooglePrivacyDlpV2CryptoHashConfig.h"
#include "OAIGooglePrivacyDlpV2CryptoReplaceFfxFpeConfig.h"
#include "OAIGooglePrivacyDlpV2DateShiftConfig.h"
#include "OAIGooglePrivacyDlpV2FixedSizeBucketingConfig.h"
#include "OAIGooglePrivacyDlpV2ReplaceDictionaryConfig.h"
#include "OAIGooglePrivacyDlpV2ReplaceValueConfig.h"
#include "OAIGooglePrivacyDlpV2TimePartConfig.h"
#include "OAIObject.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2BucketingConfig;
class OAIGooglePrivacyDlpV2CharacterMaskConfig;
class OAIGooglePrivacyDlpV2CryptoDeterministicConfig;
class OAIGooglePrivacyDlpV2CryptoHashConfig;
class OAIGooglePrivacyDlpV2CryptoReplaceFfxFpeConfig;
class OAIGooglePrivacyDlpV2DateShiftConfig;
class OAIGooglePrivacyDlpV2FixedSizeBucketingConfig;
class OAIGooglePrivacyDlpV2ReplaceValueConfig;
class OAIGooglePrivacyDlpV2ReplaceDictionaryConfig;
class OAIGooglePrivacyDlpV2TimePartConfig;

class OAIGooglePrivacyDlpV2PrimitiveTransformation : public OAIObject {
public:
    OAIGooglePrivacyDlpV2PrimitiveTransformation();
    OAIGooglePrivacyDlpV2PrimitiveTransformation(QString json);
    ~OAIGooglePrivacyDlpV2PrimitiveTransformation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2BucketingConfig getBucketingConfig() const;
    void setBucketingConfig(const OAIGooglePrivacyDlpV2BucketingConfig &bucketing_config);
    bool is_bucketing_config_Set() const;
    bool is_bucketing_config_Valid() const;

    OAIGooglePrivacyDlpV2CharacterMaskConfig getCharacterMaskConfig() const;
    void setCharacterMaskConfig(const OAIGooglePrivacyDlpV2CharacterMaskConfig &character_mask_config);
    bool is_character_mask_config_Set() const;
    bool is_character_mask_config_Valid() const;

    OAIGooglePrivacyDlpV2CryptoDeterministicConfig getCryptoDeterministicConfig() const;
    void setCryptoDeterministicConfig(const OAIGooglePrivacyDlpV2CryptoDeterministicConfig &crypto_deterministic_config);
    bool is_crypto_deterministic_config_Set() const;
    bool is_crypto_deterministic_config_Valid() const;

    OAIGooglePrivacyDlpV2CryptoHashConfig getCryptoHashConfig() const;
    void setCryptoHashConfig(const OAIGooglePrivacyDlpV2CryptoHashConfig &crypto_hash_config);
    bool is_crypto_hash_config_Set() const;
    bool is_crypto_hash_config_Valid() const;

    OAIGooglePrivacyDlpV2CryptoReplaceFfxFpeConfig getCryptoReplaceFfxFpeConfig() const;
    void setCryptoReplaceFfxFpeConfig(const OAIGooglePrivacyDlpV2CryptoReplaceFfxFpeConfig &crypto_replace_ffx_fpe_config);
    bool is_crypto_replace_ffx_fpe_config_Set() const;
    bool is_crypto_replace_ffx_fpe_config_Valid() const;

    OAIGooglePrivacyDlpV2DateShiftConfig getDateShiftConfig() const;
    void setDateShiftConfig(const OAIGooglePrivacyDlpV2DateShiftConfig &date_shift_config);
    bool is_date_shift_config_Set() const;
    bool is_date_shift_config_Valid() const;

    OAIGooglePrivacyDlpV2FixedSizeBucketingConfig getFixedSizeBucketingConfig() const;
    void setFixedSizeBucketingConfig(const OAIGooglePrivacyDlpV2FixedSizeBucketingConfig &fixed_size_bucketing_config);
    bool is_fixed_size_bucketing_config_Set() const;
    bool is_fixed_size_bucketing_config_Valid() const;

    OAIObject getRedactConfig() const;
    void setRedactConfig(const OAIObject &redact_config);
    bool is_redact_config_Set() const;
    bool is_redact_config_Valid() const;

    OAIGooglePrivacyDlpV2ReplaceValueConfig getReplaceConfig() const;
    void setReplaceConfig(const OAIGooglePrivacyDlpV2ReplaceValueConfig &replace_config);
    bool is_replace_config_Set() const;
    bool is_replace_config_Valid() const;

    OAIGooglePrivacyDlpV2ReplaceDictionaryConfig getReplaceDictionaryConfig() const;
    void setReplaceDictionaryConfig(const OAIGooglePrivacyDlpV2ReplaceDictionaryConfig &replace_dictionary_config);
    bool is_replace_dictionary_config_Set() const;
    bool is_replace_dictionary_config_Valid() const;

    OAIObject getReplaceWithInfoTypeConfig() const;
    void setReplaceWithInfoTypeConfig(const OAIObject &replace_with_info_type_config);
    bool is_replace_with_info_type_config_Set() const;
    bool is_replace_with_info_type_config_Valid() const;

    OAIGooglePrivacyDlpV2TimePartConfig getTimePartConfig() const;
    void setTimePartConfig(const OAIGooglePrivacyDlpV2TimePartConfig &time_part_config);
    bool is_time_part_config_Set() const;
    bool is_time_part_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2BucketingConfig m_bucketing_config;
    bool m_bucketing_config_isSet;
    bool m_bucketing_config_isValid;

    OAIGooglePrivacyDlpV2CharacterMaskConfig m_character_mask_config;
    bool m_character_mask_config_isSet;
    bool m_character_mask_config_isValid;

    OAIGooglePrivacyDlpV2CryptoDeterministicConfig m_crypto_deterministic_config;
    bool m_crypto_deterministic_config_isSet;
    bool m_crypto_deterministic_config_isValid;

    OAIGooglePrivacyDlpV2CryptoHashConfig m_crypto_hash_config;
    bool m_crypto_hash_config_isSet;
    bool m_crypto_hash_config_isValid;

    OAIGooglePrivacyDlpV2CryptoReplaceFfxFpeConfig m_crypto_replace_ffx_fpe_config;
    bool m_crypto_replace_ffx_fpe_config_isSet;
    bool m_crypto_replace_ffx_fpe_config_isValid;

    OAIGooglePrivacyDlpV2DateShiftConfig m_date_shift_config;
    bool m_date_shift_config_isSet;
    bool m_date_shift_config_isValid;

    OAIGooglePrivacyDlpV2FixedSizeBucketingConfig m_fixed_size_bucketing_config;
    bool m_fixed_size_bucketing_config_isSet;
    bool m_fixed_size_bucketing_config_isValid;

    OAIObject m_redact_config;
    bool m_redact_config_isSet;
    bool m_redact_config_isValid;

    OAIGooglePrivacyDlpV2ReplaceValueConfig m_replace_config;
    bool m_replace_config_isSet;
    bool m_replace_config_isValid;

    OAIGooglePrivacyDlpV2ReplaceDictionaryConfig m_replace_dictionary_config;
    bool m_replace_dictionary_config_isSet;
    bool m_replace_dictionary_config_isValid;

    OAIObject m_replace_with_info_type_config;
    bool m_replace_with_info_type_config_isSet;
    bool m_replace_with_info_type_config_isValid;

    OAIGooglePrivacyDlpV2TimePartConfig m_time_part_config;
    bool m_time_part_config_isSet;
    bool m_time_part_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2PrimitiveTransformation)

#endif // OAIGooglePrivacyDlpV2PrimitiveTransformation_H
