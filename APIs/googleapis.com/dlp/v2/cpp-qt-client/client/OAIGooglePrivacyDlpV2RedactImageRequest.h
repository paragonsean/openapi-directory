/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2RedactImageRequest.h
 *
 * Request to search for potentially sensitive info in an image and redact it by covering it with a colored rectangle.
 */

#ifndef OAIGooglePrivacyDlpV2RedactImageRequest_H
#define OAIGooglePrivacyDlpV2RedactImageRequest_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2ByteContentItem.h"
#include "OAIGooglePrivacyDlpV2ImageRedactionConfig.h"
#include "OAIGooglePrivacyDlpV2InspectConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2ByteContentItem;
class OAIGooglePrivacyDlpV2ImageRedactionConfig;
class OAIGooglePrivacyDlpV2InspectConfig;

class OAIGooglePrivacyDlpV2RedactImageRequest : public OAIObject {
public:
    OAIGooglePrivacyDlpV2RedactImageRequest();
    OAIGooglePrivacyDlpV2RedactImageRequest(QString json);
    ~OAIGooglePrivacyDlpV2RedactImageRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2ByteContentItem getByteItem() const;
    void setByteItem(const OAIGooglePrivacyDlpV2ByteContentItem &byte_item);
    bool is_byte_item_Set() const;
    bool is_byte_item_Valid() const;

    QList<OAIGooglePrivacyDlpV2ImageRedactionConfig> getImageRedactionConfigs() const;
    void setImageRedactionConfigs(const QList<OAIGooglePrivacyDlpV2ImageRedactionConfig> &image_redaction_configs);
    bool is_image_redaction_configs_Set() const;
    bool is_image_redaction_configs_Valid() const;

    bool isIncludeFindings() const;
    void setIncludeFindings(const bool &include_findings);
    bool is_include_findings_Set() const;
    bool is_include_findings_Valid() const;

    OAIGooglePrivacyDlpV2InspectConfig getInspectConfig() const;
    void setInspectConfig(const OAIGooglePrivacyDlpV2InspectConfig &inspect_config);
    bool is_inspect_config_Set() const;
    bool is_inspect_config_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2ByteContentItem m_byte_item;
    bool m_byte_item_isSet;
    bool m_byte_item_isValid;

    QList<OAIGooglePrivacyDlpV2ImageRedactionConfig> m_image_redaction_configs;
    bool m_image_redaction_configs_isSet;
    bool m_image_redaction_configs_isValid;

    bool m_include_findings;
    bool m_include_findings_isSet;
    bool m_include_findings_isValid;

    OAIGooglePrivacyDlpV2InspectConfig m_inspect_config;
    bool m_inspect_config_isSet;
    bool m_inspect_config_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2RedactImageRequest)

#endif // OAIGooglePrivacyDlpV2RedactImageRequest_H
