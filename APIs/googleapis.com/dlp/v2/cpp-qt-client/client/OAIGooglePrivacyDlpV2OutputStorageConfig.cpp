/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2OutputStorageConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2OutputStorageConfig::OAIGooglePrivacyDlpV2OutputStorageConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2OutputStorageConfig::OAIGooglePrivacyDlpV2OutputStorageConfig() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2OutputStorageConfig::~OAIGooglePrivacyDlpV2OutputStorageConfig() {}

void OAIGooglePrivacyDlpV2OutputStorageConfig::initializeModel() {

    m_output_schema_isSet = false;
    m_output_schema_isValid = false;

    m_table_isSet = false;
    m_table_isValid = false;
}

void OAIGooglePrivacyDlpV2OutputStorageConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2OutputStorageConfig::fromJsonObject(QJsonObject json) {

    m_output_schema_isValid = ::OpenAPI::fromJsonValue(m_output_schema, json[QString("outputSchema")]);
    m_output_schema_isSet = !json[QString("outputSchema")].isNull() && m_output_schema_isValid;

    m_table_isValid = ::OpenAPI::fromJsonValue(m_table, json[QString("table")]);
    m_table_isSet = !json[QString("table")].isNull() && m_table_isValid;
}

QString OAIGooglePrivacyDlpV2OutputStorageConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2OutputStorageConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_output_schema_isSet) {
        obj.insert(QString("outputSchema"), ::OpenAPI::toJsonValue(m_output_schema));
    }
    if (m_table.isSet()) {
        obj.insert(QString("table"), ::OpenAPI::toJsonValue(m_table));
    }
    return obj;
}

QString OAIGooglePrivacyDlpV2OutputStorageConfig::getOutputSchema() const {
    return m_output_schema;
}
void OAIGooglePrivacyDlpV2OutputStorageConfig::setOutputSchema(const QString &output_schema) {
    m_output_schema = output_schema;
    m_output_schema_isSet = true;
}

bool OAIGooglePrivacyDlpV2OutputStorageConfig::is_output_schema_Set() const{
    return m_output_schema_isSet;
}

bool OAIGooglePrivacyDlpV2OutputStorageConfig::is_output_schema_Valid() const{
    return m_output_schema_isValid;
}

OAIGooglePrivacyDlpV2BigQueryTable OAIGooglePrivacyDlpV2OutputStorageConfig::getTable() const {
    return m_table;
}
void OAIGooglePrivacyDlpV2OutputStorageConfig::setTable(const OAIGooglePrivacyDlpV2BigQueryTable &table) {
    m_table = table;
    m_table_isSet = true;
}

bool OAIGooglePrivacyDlpV2OutputStorageConfig::is_table_Set() const{
    return m_table_isSet;
}

bool OAIGooglePrivacyDlpV2OutputStorageConfig::is_table_Valid() const{
    return m_table_isValid;
}

bool OAIGooglePrivacyDlpV2OutputStorageConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_schema_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2OutputStorageConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
