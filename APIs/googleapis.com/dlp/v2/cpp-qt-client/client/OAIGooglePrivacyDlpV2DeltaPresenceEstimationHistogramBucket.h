/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket.h
 *
 * A DeltaPresenceEstimationHistogramBucket message with the following values: min_probability: 0.1 max_probability: 0.2 frequency: 42 means that there are 42 records for which Î´ is in [0.1, 0.2). An important particular case is when min_probability &#x3D; max_probability &#x3D; 1: then, every individual who shares this quasi-identifier combination is in the dataset.
 */

#ifndef OAIGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket_H
#define OAIGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues;

class OAIGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket : public OAIObject {
public:
    OAIGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket();
    OAIGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket(QString json);
    ~OAIGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBucketSize() const;
    void setBucketSize(const QString &bucket_size);
    bool is_bucket_size_Set() const;
    bool is_bucket_size_Valid() const;

    QString getBucketValueCount() const;
    void setBucketValueCount(const QString &bucket_value_count);
    bool is_bucket_value_count_Set() const;
    bool is_bucket_value_count_Valid() const;

    QList<OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues> getBucketValues() const;
    void setBucketValues(const QList<OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues> &bucket_values);
    bool is_bucket_values_Set() const;
    bool is_bucket_values_Valid() const;

    double getMaxProbability() const;
    void setMaxProbability(const double &max_probability);
    bool is_max_probability_Set() const;
    bool is_max_probability_Valid() const;

    double getMinProbability() const;
    void setMinProbability(const double &min_probability);
    bool is_min_probability_Set() const;
    bool is_min_probability_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bucket_size;
    bool m_bucket_size_isSet;
    bool m_bucket_size_isValid;

    QString m_bucket_value_count;
    bool m_bucket_value_count_isSet;
    bool m_bucket_value_count_isValid;

    QList<OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues> m_bucket_values;
    bool m_bucket_values_isSet;
    bool m_bucket_values_isValid;

    double m_max_probability;
    bool m_max_probability_isSet;
    bool m_max_probability_isValid;

    double m_min_probability;
    bool m_min_probability_isSet;
    bool m_min_probability_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket)

#endif // OAIGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket_H
