/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2QuoteInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2QuoteInfo::OAIGooglePrivacyDlpV2QuoteInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2QuoteInfo::OAIGooglePrivacyDlpV2QuoteInfo() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2QuoteInfo::~OAIGooglePrivacyDlpV2QuoteInfo() {}

void OAIGooglePrivacyDlpV2QuoteInfo::initializeModel() {

    m_date_time_isSet = false;
    m_date_time_isValid = false;
}

void OAIGooglePrivacyDlpV2QuoteInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2QuoteInfo::fromJsonObject(QJsonObject json) {

    m_date_time_isValid = ::OpenAPI::fromJsonValue(m_date_time, json[QString("dateTime")]);
    m_date_time_isSet = !json[QString("dateTime")].isNull() && m_date_time_isValid;
}

QString OAIGooglePrivacyDlpV2QuoteInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2QuoteInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_date_time.isSet()) {
        obj.insert(QString("dateTime"), ::OpenAPI::toJsonValue(m_date_time));
    }
    return obj;
}

OAIGooglePrivacyDlpV2DateTime OAIGooglePrivacyDlpV2QuoteInfo::getDateTime() const {
    return m_date_time;
}
void OAIGooglePrivacyDlpV2QuoteInfo::setDateTime(const OAIGooglePrivacyDlpV2DateTime &date_time) {
    m_date_time = date_time;
    m_date_time_isSet = true;
}

bool OAIGooglePrivacyDlpV2QuoteInfo::is_date_time_Set() const{
    return m_date_time_isSet;
}

bool OAIGooglePrivacyDlpV2QuoteInfo::is_date_time_Valid() const{
    return m_date_time_isValid;
}

bool OAIGooglePrivacyDlpV2QuoteInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2QuoteInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
