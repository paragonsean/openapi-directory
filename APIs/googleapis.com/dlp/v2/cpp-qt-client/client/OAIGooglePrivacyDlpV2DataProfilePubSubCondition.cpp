/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2DataProfilePubSubCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2DataProfilePubSubCondition::OAIGooglePrivacyDlpV2DataProfilePubSubCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2DataProfilePubSubCondition::OAIGooglePrivacyDlpV2DataProfilePubSubCondition() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2DataProfilePubSubCondition::~OAIGooglePrivacyDlpV2DataProfilePubSubCondition() {}

void OAIGooglePrivacyDlpV2DataProfilePubSubCondition::initializeModel() {

    m_expressions_isSet = false;
    m_expressions_isValid = false;
}

void OAIGooglePrivacyDlpV2DataProfilePubSubCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2DataProfilePubSubCondition::fromJsonObject(QJsonObject json) {

    m_expressions_isValid = ::OpenAPI::fromJsonValue(m_expressions, json[QString("expressions")]);
    m_expressions_isSet = !json[QString("expressions")].isNull() && m_expressions_isValid;
}

QString OAIGooglePrivacyDlpV2DataProfilePubSubCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2DataProfilePubSubCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_expressions.isSet()) {
        obj.insert(QString("expressions"), ::OpenAPI::toJsonValue(m_expressions));
    }
    return obj;
}

OAIGooglePrivacyDlpV2PubSubExpressions OAIGooglePrivacyDlpV2DataProfilePubSubCondition::getExpressions() const {
    return m_expressions;
}
void OAIGooglePrivacyDlpV2DataProfilePubSubCondition::setExpressions(const OAIGooglePrivacyDlpV2PubSubExpressions &expressions) {
    m_expressions = expressions;
    m_expressions_isSet = true;
}

bool OAIGooglePrivacyDlpV2DataProfilePubSubCondition::is_expressions_Set() const{
    return m_expressions_isSet;
}

bool OAIGooglePrivacyDlpV2DataProfilePubSubCondition::is_expressions_Valid() const{
    return m_expressions_isValid;
}

bool OAIGooglePrivacyDlpV2DataProfilePubSubCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expressions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2DataProfilePubSubCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
