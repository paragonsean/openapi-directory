/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2CloudStorageRegexFileSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::OAIGooglePrivacyDlpV2CloudStorageRegexFileSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::OAIGooglePrivacyDlpV2CloudStorageRegexFileSet() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::~OAIGooglePrivacyDlpV2CloudStorageRegexFileSet() {}

void OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::initializeModel() {

    m_bucket_name_isSet = false;
    m_bucket_name_isValid = false;

    m_exclude_regex_isSet = false;
    m_exclude_regex_isValid = false;

    m_include_regex_isSet = false;
    m_include_regex_isValid = false;
}

void OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::fromJsonObject(QJsonObject json) {

    m_bucket_name_isValid = ::OpenAPI::fromJsonValue(m_bucket_name, json[QString("bucketName")]);
    m_bucket_name_isSet = !json[QString("bucketName")].isNull() && m_bucket_name_isValid;

    m_exclude_regex_isValid = ::OpenAPI::fromJsonValue(m_exclude_regex, json[QString("excludeRegex")]);
    m_exclude_regex_isSet = !json[QString("excludeRegex")].isNull() && m_exclude_regex_isValid;

    m_include_regex_isValid = ::OpenAPI::fromJsonValue(m_include_regex, json[QString("includeRegex")]);
    m_include_regex_isSet = !json[QString("includeRegex")].isNull() && m_include_regex_isValid;
}

QString OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::asJsonObject() const {
    QJsonObject obj;
    if (m_bucket_name_isSet) {
        obj.insert(QString("bucketName"), ::OpenAPI::toJsonValue(m_bucket_name));
    }
    if (m_exclude_regex.size() > 0) {
        obj.insert(QString("excludeRegex"), ::OpenAPI::toJsonValue(m_exclude_regex));
    }
    if (m_include_regex.size() > 0) {
        obj.insert(QString("includeRegex"), ::OpenAPI::toJsonValue(m_include_regex));
    }
    return obj;
}

QString OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::getBucketName() const {
    return m_bucket_name;
}
void OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::setBucketName(const QString &bucket_name) {
    m_bucket_name = bucket_name;
    m_bucket_name_isSet = true;
}

bool OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::is_bucket_name_Set() const{
    return m_bucket_name_isSet;
}

bool OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::is_bucket_name_Valid() const{
    return m_bucket_name_isValid;
}

QList<QString> OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::getExcludeRegex() const {
    return m_exclude_regex;
}
void OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::setExcludeRegex(const QList<QString> &exclude_regex) {
    m_exclude_regex = exclude_regex;
    m_exclude_regex_isSet = true;
}

bool OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::is_exclude_regex_Set() const{
    return m_exclude_regex_isSet;
}

bool OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::is_exclude_regex_Valid() const{
    return m_exclude_regex_isValid;
}

QList<QString> OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::getIncludeRegex() const {
    return m_include_regex;
}
void OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::setIncludeRegex(const QList<QString> &include_regex) {
    m_include_regex = include_regex;
    m_include_regex_isSet = true;
}

bool OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::is_include_regex_Set() const{
    return m_include_regex_isSet;
}

bool OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::is_include_regex_Valid() const{
    return m_include_regex_isValid;
}

bool OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bucket_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude_regex.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_regex.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2CloudStorageRegexFileSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
