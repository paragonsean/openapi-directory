/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2LDiversityEquivalenceClass.h
 *
 * The set of columns&#39; values that share the same ldiversity value.
 */

#ifndef OAIGooglePrivacyDlpV2LDiversityEquivalenceClass_H
#define OAIGooglePrivacyDlpV2LDiversityEquivalenceClass_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2Value.h"
#include "OAIGooglePrivacyDlpV2ValueFrequency.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2Value;
class OAIGooglePrivacyDlpV2ValueFrequency;

class OAIGooglePrivacyDlpV2LDiversityEquivalenceClass : public OAIObject {
public:
    OAIGooglePrivacyDlpV2LDiversityEquivalenceClass();
    OAIGooglePrivacyDlpV2LDiversityEquivalenceClass(QString json);
    ~OAIGooglePrivacyDlpV2LDiversityEquivalenceClass() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEquivalenceClassSize() const;
    void setEquivalenceClassSize(const QString &equivalence_class_size);
    bool is_equivalence_class_size_Set() const;
    bool is_equivalence_class_size_Valid() const;

    QString getNumDistinctSensitiveValues() const;
    void setNumDistinctSensitiveValues(const QString &num_distinct_sensitive_values);
    bool is_num_distinct_sensitive_values_Set() const;
    bool is_num_distinct_sensitive_values_Valid() const;

    QList<OAIGooglePrivacyDlpV2Value> getQuasiIdsValues() const;
    void setQuasiIdsValues(const QList<OAIGooglePrivacyDlpV2Value> &quasi_ids_values);
    bool is_quasi_ids_values_Set() const;
    bool is_quasi_ids_values_Valid() const;

    QList<OAIGooglePrivacyDlpV2ValueFrequency> getTopSensitiveValues() const;
    void setTopSensitiveValues(const QList<OAIGooglePrivacyDlpV2ValueFrequency> &top_sensitive_values);
    bool is_top_sensitive_values_Set() const;
    bool is_top_sensitive_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_equivalence_class_size;
    bool m_equivalence_class_size_isSet;
    bool m_equivalence_class_size_isValid;

    QString m_num_distinct_sensitive_values;
    bool m_num_distinct_sensitive_values_isSet;
    bool m_num_distinct_sensitive_values_isValid;

    QList<OAIGooglePrivacyDlpV2Value> m_quasi_ids_values;
    bool m_quasi_ids_values_isSet;
    bool m_quasi_ids_values_isValid;

    QList<OAIGooglePrivacyDlpV2ValueFrequency> m_top_sensitive_values;
    bool m_top_sensitive_values_isSet;
    bool m_top_sensitive_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2LDiversityEquivalenceClass)

#endif // OAIGooglePrivacyDlpV2LDiversityEquivalenceClass_H
