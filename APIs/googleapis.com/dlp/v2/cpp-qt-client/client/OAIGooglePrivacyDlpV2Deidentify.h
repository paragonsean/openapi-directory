/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2Deidentify.h
 *
 * Create a de-identified copy of the requested table or files. A TransformationDetail will be created for each transformation. If any rows in BigQuery are skipped during de-identification (transformation errors or row size exceeds BigQuery insert API limits) they are placed in the failure output table. If the original row exceeds the BigQuery insert API limit it will be truncated when written to the failure output table. The failure output table can be set in the action.deidentify.output.big_query_output.deidentified_failure_output_table field, if no table is set, a table will be automatically created in the same project and dataset as the original table. Compatible with: Inspect
 */

#ifndef OAIGooglePrivacyDlpV2Deidentify_H
#define OAIGooglePrivacyDlpV2Deidentify_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2TransformationConfig.h"
#include "OAIGooglePrivacyDlpV2TransformationDetailsStorageConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2TransformationConfig;
class OAIGooglePrivacyDlpV2TransformationDetailsStorageConfig;

class OAIGooglePrivacyDlpV2Deidentify : public OAIObject {
public:
    OAIGooglePrivacyDlpV2Deidentify();
    OAIGooglePrivacyDlpV2Deidentify(QString json);
    ~OAIGooglePrivacyDlpV2Deidentify() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCloudStorageOutput() const;
    void setCloudStorageOutput(const QString &cloud_storage_output);
    bool is_cloud_storage_output_Set() const;
    bool is_cloud_storage_output_Valid() const;

    QList<QString> getFileTypesToTransform() const;
    void setFileTypesToTransform(const QList<QString> &file_types_to_transform);
    bool is_file_types_to_transform_Set() const;
    bool is_file_types_to_transform_Valid() const;

    OAIGooglePrivacyDlpV2TransformationConfig getTransformationConfig() const;
    void setTransformationConfig(const OAIGooglePrivacyDlpV2TransformationConfig &transformation_config);
    bool is_transformation_config_Set() const;
    bool is_transformation_config_Valid() const;

    OAIGooglePrivacyDlpV2TransformationDetailsStorageConfig getTransformationDetailsStorageConfig() const;
    void setTransformationDetailsStorageConfig(const OAIGooglePrivacyDlpV2TransformationDetailsStorageConfig &transformation_details_storage_config);
    bool is_transformation_details_storage_config_Set() const;
    bool is_transformation_details_storage_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cloud_storage_output;
    bool m_cloud_storage_output_isSet;
    bool m_cloud_storage_output_isValid;

    QList<QString> m_file_types_to_transform;
    bool m_file_types_to_transform_isSet;
    bool m_file_types_to_transform_isValid;

    OAIGooglePrivacyDlpV2TransformationConfig m_transformation_config;
    bool m_transformation_config_isSet;
    bool m_transformation_config_isValid;

    OAIGooglePrivacyDlpV2TransformationDetailsStorageConfig m_transformation_details_storage_config;
    bool m_transformation_details_storage_config_isSet;
    bool m_transformation_details_storage_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2Deidentify)

#endif // OAIGooglePrivacyDlpV2Deidentify_H
