/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2RecordKey.h
 *
 * Message for a unique key indicating a record that contains a finding.
 */

#ifndef OAIGooglePrivacyDlpV2RecordKey_H
#define OAIGooglePrivacyDlpV2RecordKey_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2BigQueryKey.h"
#include "OAIGooglePrivacyDlpV2DatastoreKey.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2BigQueryKey;
class OAIGooglePrivacyDlpV2DatastoreKey;

class OAIGooglePrivacyDlpV2RecordKey : public OAIObject {
public:
    OAIGooglePrivacyDlpV2RecordKey();
    OAIGooglePrivacyDlpV2RecordKey(QString json);
    ~OAIGooglePrivacyDlpV2RecordKey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2BigQueryKey getBigQueryKey() const;
    void setBigQueryKey(const OAIGooglePrivacyDlpV2BigQueryKey &big_query_key);
    bool is_big_query_key_Set() const;
    bool is_big_query_key_Valid() const;

    OAIGooglePrivacyDlpV2DatastoreKey getDatastoreKey() const;
    void setDatastoreKey(const OAIGooglePrivacyDlpV2DatastoreKey &datastore_key);
    bool is_datastore_key_Set() const;
    bool is_datastore_key_Valid() const;

    QList<QString> getIdValues() const;
    void setIdValues(const QList<QString> &id_values);
    bool is_id_values_Set() const;
    bool is_id_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2BigQueryKey m_big_query_key;
    bool m_big_query_key_isSet;
    bool m_big_query_key_isValid;

    OAIGooglePrivacyDlpV2DatastoreKey m_datastore_key;
    bool m_datastore_key_isSet;
    bool m_datastore_key_isValid;

    QList<QString> m_id_values;
    bool m_id_values_isSet;
    bool m_id_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2RecordKey)

#endif // OAIGooglePrivacyDlpV2RecordKey_H
