/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2FileSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2FileSet::OAIGooglePrivacyDlpV2FileSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2FileSet::OAIGooglePrivacyDlpV2FileSet() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2FileSet::~OAIGooglePrivacyDlpV2FileSet() {}

void OAIGooglePrivacyDlpV2FileSet::initializeModel() {

    m_regex_file_set_isSet = false;
    m_regex_file_set_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIGooglePrivacyDlpV2FileSet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2FileSet::fromJsonObject(QJsonObject json) {

    m_regex_file_set_isValid = ::OpenAPI::fromJsonValue(m_regex_file_set, json[QString("regexFileSet")]);
    m_regex_file_set_isSet = !json[QString("regexFileSet")].isNull() && m_regex_file_set_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIGooglePrivacyDlpV2FileSet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2FileSet::asJsonObject() const {
    QJsonObject obj;
    if (m_regex_file_set.isSet()) {
        obj.insert(QString("regexFileSet"), ::OpenAPI::toJsonValue(m_regex_file_set));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIGooglePrivacyDlpV2CloudStorageRegexFileSet OAIGooglePrivacyDlpV2FileSet::getRegexFileSet() const {
    return m_regex_file_set;
}
void OAIGooglePrivacyDlpV2FileSet::setRegexFileSet(const OAIGooglePrivacyDlpV2CloudStorageRegexFileSet &regex_file_set) {
    m_regex_file_set = regex_file_set;
    m_regex_file_set_isSet = true;
}

bool OAIGooglePrivacyDlpV2FileSet::is_regex_file_set_Set() const{
    return m_regex_file_set_isSet;
}

bool OAIGooglePrivacyDlpV2FileSet::is_regex_file_set_Valid() const{
    return m_regex_file_set_isValid;
}

QString OAIGooglePrivacyDlpV2FileSet::getUrl() const {
    return m_url;
}
void OAIGooglePrivacyDlpV2FileSet::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIGooglePrivacyDlpV2FileSet::is_url_Set() const{
    return m_url_isSet;
}

bool OAIGooglePrivacyDlpV2FileSet::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIGooglePrivacyDlpV2FileSet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_regex_file_set.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2FileSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
