/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2BigQueryRegex.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2BigQueryRegex::OAIGooglePrivacyDlpV2BigQueryRegex(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2BigQueryRegex::OAIGooglePrivacyDlpV2BigQueryRegex() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2BigQueryRegex::~OAIGooglePrivacyDlpV2BigQueryRegex() {}

void OAIGooglePrivacyDlpV2BigQueryRegex::initializeModel() {

    m_dataset_id_regex_isSet = false;
    m_dataset_id_regex_isValid = false;

    m_project_id_regex_isSet = false;
    m_project_id_regex_isValid = false;

    m_table_id_regex_isSet = false;
    m_table_id_regex_isValid = false;
}

void OAIGooglePrivacyDlpV2BigQueryRegex::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2BigQueryRegex::fromJsonObject(QJsonObject json) {

    m_dataset_id_regex_isValid = ::OpenAPI::fromJsonValue(m_dataset_id_regex, json[QString("datasetIdRegex")]);
    m_dataset_id_regex_isSet = !json[QString("datasetIdRegex")].isNull() && m_dataset_id_regex_isValid;

    m_project_id_regex_isValid = ::OpenAPI::fromJsonValue(m_project_id_regex, json[QString("projectIdRegex")]);
    m_project_id_regex_isSet = !json[QString("projectIdRegex")].isNull() && m_project_id_regex_isValid;

    m_table_id_regex_isValid = ::OpenAPI::fromJsonValue(m_table_id_regex, json[QString("tableIdRegex")]);
    m_table_id_regex_isSet = !json[QString("tableIdRegex")].isNull() && m_table_id_regex_isValid;
}

QString OAIGooglePrivacyDlpV2BigQueryRegex::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2BigQueryRegex::asJsonObject() const {
    QJsonObject obj;
    if (m_dataset_id_regex_isSet) {
        obj.insert(QString("datasetIdRegex"), ::OpenAPI::toJsonValue(m_dataset_id_regex));
    }
    if (m_project_id_regex_isSet) {
        obj.insert(QString("projectIdRegex"), ::OpenAPI::toJsonValue(m_project_id_regex));
    }
    if (m_table_id_regex_isSet) {
        obj.insert(QString("tableIdRegex"), ::OpenAPI::toJsonValue(m_table_id_regex));
    }
    return obj;
}

QString OAIGooglePrivacyDlpV2BigQueryRegex::getDatasetIdRegex() const {
    return m_dataset_id_regex;
}
void OAIGooglePrivacyDlpV2BigQueryRegex::setDatasetIdRegex(const QString &dataset_id_regex) {
    m_dataset_id_regex = dataset_id_regex;
    m_dataset_id_regex_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryRegex::is_dataset_id_regex_Set() const{
    return m_dataset_id_regex_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryRegex::is_dataset_id_regex_Valid() const{
    return m_dataset_id_regex_isValid;
}

QString OAIGooglePrivacyDlpV2BigQueryRegex::getProjectIdRegex() const {
    return m_project_id_regex;
}
void OAIGooglePrivacyDlpV2BigQueryRegex::setProjectIdRegex(const QString &project_id_regex) {
    m_project_id_regex = project_id_regex;
    m_project_id_regex_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryRegex::is_project_id_regex_Set() const{
    return m_project_id_regex_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryRegex::is_project_id_regex_Valid() const{
    return m_project_id_regex_isValid;
}

QString OAIGooglePrivacyDlpV2BigQueryRegex::getTableIdRegex() const {
    return m_table_id_regex;
}
void OAIGooglePrivacyDlpV2BigQueryRegex::setTableIdRegex(const QString &table_id_regex) {
    m_table_id_regex = table_id_regex;
    m_table_id_regex_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryRegex::is_table_id_regex_Set() const{
    return m_table_id_regex_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryRegex::is_table_id_regex_Valid() const{
    return m_table_id_regex_isValid;
}

bool OAIGooglePrivacyDlpV2BigQueryRegex::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dataset_id_regex_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_regex_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_id_regex_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2BigQueryRegex::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
