/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2TransformationDescription.h
 *
 * A flattened description of a &#x60;PrimitiveTransformation&#x60; or &#x60;RecordSuppression&#x60;.
 */

#ifndef OAIGooglePrivacyDlpV2TransformationDescription_H
#define OAIGooglePrivacyDlpV2TransformationDescription_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2InfoType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2InfoType;

class OAIGooglePrivacyDlpV2TransformationDescription : public OAIObject {
public:
    OAIGooglePrivacyDlpV2TransformationDescription();
    OAIGooglePrivacyDlpV2TransformationDescription(QString json);
    ~OAIGooglePrivacyDlpV2TransformationDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCondition() const;
    void setCondition(const QString &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIGooglePrivacyDlpV2InfoType getInfoType() const;
    void setInfoType(const OAIGooglePrivacyDlpV2InfoType &info_type);
    bool is_info_type_Set() const;
    bool is_info_type_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIGooglePrivacyDlpV2InfoType m_info_type;
    bool m_info_type_isSet;
    bool m_info_type_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2TransformationDescription)

#endif // OAIGooglePrivacyDlpV2TransformationDescription_H
