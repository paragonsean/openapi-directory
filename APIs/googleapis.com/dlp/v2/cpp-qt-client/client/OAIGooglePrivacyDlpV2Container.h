/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2Container.h
 *
 * Represents a container that may contain DLP findings. Examples of a container include a file, table, or database record.
 */

#ifndef OAIGooglePrivacyDlpV2Container_H
#define OAIGooglePrivacyDlpV2Container_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGooglePrivacyDlpV2Container : public OAIObject {
public:
    OAIGooglePrivacyDlpV2Container();
    OAIGooglePrivacyDlpV2Container(QString json);
    ~OAIGooglePrivacyDlpV2Container() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFullPath() const;
    void setFullPath(const QString &full_path);
    bool is_full_path_Set() const;
    bool is_full_path_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getRelativePath() const;
    void setRelativePath(const QString &relative_path);
    bool is_relative_path_Set() const;
    bool is_relative_path_Valid() const;

    QString getRootPath() const;
    void setRootPath(const QString &root_path);
    bool is_root_path_Set() const;
    bool is_root_path_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_full_path;
    bool m_full_path_isSet;
    bool m_full_path_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_relative_path;
    bool m_relative_path_isSet;
    bool m_relative_path_isValid;

    QString m_root_path;
    bool m_root_path_isSet;
    bool m_root_path_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2Container)

#endif // OAIGooglePrivacyDlpV2Container_H
