/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2CryptoHashConfig.h
 *
 * Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM&#x3D;). Currently, only string and integer values can be hashed. See https://cloud.google.com/sensitive-data-protection/docs/pseudonymization to learn more.
 */

#ifndef OAIGooglePrivacyDlpV2CryptoHashConfig_H
#define OAIGooglePrivacyDlpV2CryptoHashConfig_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2CryptoKey.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2CryptoKey;

class OAIGooglePrivacyDlpV2CryptoHashConfig : public OAIObject {
public:
    OAIGooglePrivacyDlpV2CryptoHashConfig();
    OAIGooglePrivacyDlpV2CryptoHashConfig(QString json);
    ~OAIGooglePrivacyDlpV2CryptoHashConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2CryptoKey getCryptoKey() const;
    void setCryptoKey(const OAIGooglePrivacyDlpV2CryptoKey &crypto_key);
    bool is_crypto_key_Set() const;
    bool is_crypto_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2CryptoKey m_crypto_key;
    bool m_crypto_key_isSet;
    bool m_crypto_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2CryptoHashConfig)

#endif // OAIGooglePrivacyDlpV2CryptoHashConfig_H
