/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2StoredInfoTypeConfig.h
 *
 * Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/sensitive-data-protection/docs/creating-custom-infotypes.
 */

#ifndef OAIGooglePrivacyDlpV2StoredInfoTypeConfig_H
#define OAIGooglePrivacyDlpV2StoredInfoTypeConfig_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2Dictionary.h"
#include "OAIGooglePrivacyDlpV2LargeCustomDictionaryConfig.h"
#include "OAIGooglePrivacyDlpV2Regex.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2Dictionary;
class OAIGooglePrivacyDlpV2LargeCustomDictionaryConfig;
class OAIGooglePrivacyDlpV2Regex;

class OAIGooglePrivacyDlpV2StoredInfoTypeConfig : public OAIObject {
public:
    OAIGooglePrivacyDlpV2StoredInfoTypeConfig();
    OAIGooglePrivacyDlpV2StoredInfoTypeConfig(QString json);
    ~OAIGooglePrivacyDlpV2StoredInfoTypeConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIGooglePrivacyDlpV2Dictionary getDictionary() const;
    void setDictionary(const OAIGooglePrivacyDlpV2Dictionary &dictionary);
    bool is_dictionary_Set() const;
    bool is_dictionary_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIGooglePrivacyDlpV2LargeCustomDictionaryConfig getLargeCustomDictionary() const;
    void setLargeCustomDictionary(const OAIGooglePrivacyDlpV2LargeCustomDictionaryConfig &large_custom_dictionary);
    bool is_large_custom_dictionary_Set() const;
    bool is_large_custom_dictionary_Valid() const;

    OAIGooglePrivacyDlpV2Regex getRegex() const;
    void setRegex(const OAIGooglePrivacyDlpV2Regex &regex);
    bool is_regex_Set() const;
    bool is_regex_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIGooglePrivacyDlpV2Dictionary m_dictionary;
    bool m_dictionary_isSet;
    bool m_dictionary_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIGooglePrivacyDlpV2LargeCustomDictionaryConfig m_large_custom_dictionary;
    bool m_large_custom_dictionary_isSet;
    bool m_large_custom_dictionary_isValid;

    OAIGooglePrivacyDlpV2Regex m_regex;
    bool m_regex_isSet;
    bool m_regex_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2StoredInfoTypeConfig)

#endif // OAIGooglePrivacyDlpV2StoredInfoTypeConfig_H
