/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2ColumnDataProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2ColumnDataProfile::OAIGooglePrivacyDlpV2ColumnDataProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2ColumnDataProfile::OAIGooglePrivacyDlpV2ColumnDataProfile() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2ColumnDataProfile::~OAIGooglePrivacyDlpV2ColumnDataProfile() {}

void OAIGooglePrivacyDlpV2ColumnDataProfile::initializeModel() {

    m_column_isSet = false;
    m_column_isValid = false;

    m_column_info_type_isSet = false;
    m_column_info_type_isValid = false;

    m_column_type_isSet = false;
    m_column_type_isValid = false;

    m_data_risk_level_isSet = false;
    m_data_risk_level_isValid = false;

    m_dataset_id_isSet = false;
    m_dataset_id_isValid = false;

    m_dataset_location_isSet = false;
    m_dataset_location_isValid = false;

    m_dataset_project_id_isSet = false;
    m_dataset_project_id_isValid = false;

    m_estimated_null_percentage_isSet = false;
    m_estimated_null_percentage_isValid = false;

    m_estimated_uniqueness_score_isSet = false;
    m_estimated_uniqueness_score_isValid = false;

    m_free_text_score_isSet = false;
    m_free_text_score_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_other_matches_isSet = false;
    m_other_matches_isValid = false;

    m_policy_state_isSet = false;
    m_policy_state_isValid = false;

    m_profile_last_generated_isSet = false;
    m_profile_last_generated_isValid = false;

    m_profile_status_isSet = false;
    m_profile_status_isValid = false;

    m_sensitivity_score_isSet = false;
    m_sensitivity_score_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_table_data_profile_isSet = false;
    m_table_data_profile_isValid = false;

    m_table_full_resource_isSet = false;
    m_table_full_resource_isValid = false;

    m_table_id_isSet = false;
    m_table_id_isValid = false;
}

void OAIGooglePrivacyDlpV2ColumnDataProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2ColumnDataProfile::fromJsonObject(QJsonObject json) {

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("column")]);
    m_column_isSet = !json[QString("column")].isNull() && m_column_isValid;

    m_column_info_type_isValid = ::OpenAPI::fromJsonValue(m_column_info_type, json[QString("columnInfoType")]);
    m_column_info_type_isSet = !json[QString("columnInfoType")].isNull() && m_column_info_type_isValid;

    m_column_type_isValid = ::OpenAPI::fromJsonValue(m_column_type, json[QString("columnType")]);
    m_column_type_isSet = !json[QString("columnType")].isNull() && m_column_type_isValid;

    m_data_risk_level_isValid = ::OpenAPI::fromJsonValue(m_data_risk_level, json[QString("dataRiskLevel")]);
    m_data_risk_level_isSet = !json[QString("dataRiskLevel")].isNull() && m_data_risk_level_isValid;

    m_dataset_id_isValid = ::OpenAPI::fromJsonValue(m_dataset_id, json[QString("datasetId")]);
    m_dataset_id_isSet = !json[QString("datasetId")].isNull() && m_dataset_id_isValid;

    m_dataset_location_isValid = ::OpenAPI::fromJsonValue(m_dataset_location, json[QString("datasetLocation")]);
    m_dataset_location_isSet = !json[QString("datasetLocation")].isNull() && m_dataset_location_isValid;

    m_dataset_project_id_isValid = ::OpenAPI::fromJsonValue(m_dataset_project_id, json[QString("datasetProjectId")]);
    m_dataset_project_id_isSet = !json[QString("datasetProjectId")].isNull() && m_dataset_project_id_isValid;

    m_estimated_null_percentage_isValid = ::OpenAPI::fromJsonValue(m_estimated_null_percentage, json[QString("estimatedNullPercentage")]);
    m_estimated_null_percentage_isSet = !json[QString("estimatedNullPercentage")].isNull() && m_estimated_null_percentage_isValid;

    m_estimated_uniqueness_score_isValid = ::OpenAPI::fromJsonValue(m_estimated_uniqueness_score, json[QString("estimatedUniquenessScore")]);
    m_estimated_uniqueness_score_isSet = !json[QString("estimatedUniquenessScore")].isNull() && m_estimated_uniqueness_score_isValid;

    m_free_text_score_isValid = ::OpenAPI::fromJsonValue(m_free_text_score, json[QString("freeTextScore")]);
    m_free_text_score_isSet = !json[QString("freeTextScore")].isNull() && m_free_text_score_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_other_matches_isValid = ::OpenAPI::fromJsonValue(m_other_matches, json[QString("otherMatches")]);
    m_other_matches_isSet = !json[QString("otherMatches")].isNull() && m_other_matches_isValid;

    m_policy_state_isValid = ::OpenAPI::fromJsonValue(m_policy_state, json[QString("policyState")]);
    m_policy_state_isSet = !json[QString("policyState")].isNull() && m_policy_state_isValid;

    m_profile_last_generated_isValid = ::OpenAPI::fromJsonValue(m_profile_last_generated, json[QString("profileLastGenerated")]);
    m_profile_last_generated_isSet = !json[QString("profileLastGenerated")].isNull() && m_profile_last_generated_isValid;

    m_profile_status_isValid = ::OpenAPI::fromJsonValue(m_profile_status, json[QString("profileStatus")]);
    m_profile_status_isSet = !json[QString("profileStatus")].isNull() && m_profile_status_isValid;

    m_sensitivity_score_isValid = ::OpenAPI::fromJsonValue(m_sensitivity_score, json[QString("sensitivityScore")]);
    m_sensitivity_score_isSet = !json[QString("sensitivityScore")].isNull() && m_sensitivity_score_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_table_data_profile_isValid = ::OpenAPI::fromJsonValue(m_table_data_profile, json[QString("tableDataProfile")]);
    m_table_data_profile_isSet = !json[QString("tableDataProfile")].isNull() && m_table_data_profile_isValid;

    m_table_full_resource_isValid = ::OpenAPI::fromJsonValue(m_table_full_resource, json[QString("tableFullResource")]);
    m_table_full_resource_isSet = !json[QString("tableFullResource")].isNull() && m_table_full_resource_isValid;

    m_table_id_isValid = ::OpenAPI::fromJsonValue(m_table_id, json[QString("tableId")]);
    m_table_id_isSet = !json[QString("tableId")].isNull() && m_table_id_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2ColumnDataProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_column_isSet) {
        obj.insert(QString("column"), ::OpenAPI::toJsonValue(m_column));
    }
    if (m_column_info_type.isSet()) {
        obj.insert(QString("columnInfoType"), ::OpenAPI::toJsonValue(m_column_info_type));
    }
    if (m_column_type_isSet) {
        obj.insert(QString("columnType"), ::OpenAPI::toJsonValue(m_column_type));
    }
    if (m_data_risk_level.isSet()) {
        obj.insert(QString("dataRiskLevel"), ::OpenAPI::toJsonValue(m_data_risk_level));
    }
    if (m_dataset_id_isSet) {
        obj.insert(QString("datasetId"), ::OpenAPI::toJsonValue(m_dataset_id));
    }
    if (m_dataset_location_isSet) {
        obj.insert(QString("datasetLocation"), ::OpenAPI::toJsonValue(m_dataset_location));
    }
    if (m_dataset_project_id_isSet) {
        obj.insert(QString("datasetProjectId"), ::OpenAPI::toJsonValue(m_dataset_project_id));
    }
    if (m_estimated_null_percentage_isSet) {
        obj.insert(QString("estimatedNullPercentage"), ::OpenAPI::toJsonValue(m_estimated_null_percentage));
    }
    if (m_estimated_uniqueness_score_isSet) {
        obj.insert(QString("estimatedUniquenessScore"), ::OpenAPI::toJsonValue(m_estimated_uniqueness_score));
    }
    if (m_free_text_score_isSet) {
        obj.insert(QString("freeTextScore"), ::OpenAPI::toJsonValue(m_free_text_score));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_other_matches.size() > 0) {
        obj.insert(QString("otherMatches"), ::OpenAPI::toJsonValue(m_other_matches));
    }
    if (m_policy_state_isSet) {
        obj.insert(QString("policyState"), ::OpenAPI::toJsonValue(m_policy_state));
    }
    if (m_profile_last_generated_isSet) {
        obj.insert(QString("profileLastGenerated"), ::OpenAPI::toJsonValue(m_profile_last_generated));
    }
    if (m_profile_status.isSet()) {
        obj.insert(QString("profileStatus"), ::OpenAPI::toJsonValue(m_profile_status));
    }
    if (m_sensitivity_score.isSet()) {
        obj.insert(QString("sensitivityScore"), ::OpenAPI::toJsonValue(m_sensitivity_score));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_table_data_profile_isSet) {
        obj.insert(QString("tableDataProfile"), ::OpenAPI::toJsonValue(m_table_data_profile));
    }
    if (m_table_full_resource_isSet) {
        obj.insert(QString("tableFullResource"), ::OpenAPI::toJsonValue(m_table_full_resource));
    }
    if (m_table_id_isSet) {
        obj.insert(QString("tableId"), ::OpenAPI::toJsonValue(m_table_id));
    }
    return obj;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getColumn() const {
    return m_column;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setColumn(const QString &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_column_Set() const{
    return m_column_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_column_Valid() const{
    return m_column_isValid;
}

OAIGooglePrivacyDlpV2InfoTypeSummary OAIGooglePrivacyDlpV2ColumnDataProfile::getColumnInfoType() const {
    return m_column_info_type;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setColumnInfoType(const OAIGooglePrivacyDlpV2InfoTypeSummary &column_info_type) {
    m_column_info_type = column_info_type;
    m_column_info_type_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_column_info_type_Set() const{
    return m_column_info_type_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_column_info_type_Valid() const{
    return m_column_info_type_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getColumnType() const {
    return m_column_type;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setColumnType(const QString &column_type) {
    m_column_type = column_type;
    m_column_type_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_column_type_Set() const{
    return m_column_type_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_column_type_Valid() const{
    return m_column_type_isValid;
}

OAIGooglePrivacyDlpV2DataRiskLevel OAIGooglePrivacyDlpV2ColumnDataProfile::getDataRiskLevel() const {
    return m_data_risk_level;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setDataRiskLevel(const OAIGooglePrivacyDlpV2DataRiskLevel &data_risk_level) {
    m_data_risk_level = data_risk_level;
    m_data_risk_level_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_data_risk_level_Set() const{
    return m_data_risk_level_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_data_risk_level_Valid() const{
    return m_data_risk_level_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getDatasetId() const {
    return m_dataset_id;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setDatasetId(const QString &dataset_id) {
    m_dataset_id = dataset_id;
    m_dataset_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_dataset_id_Set() const{
    return m_dataset_id_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_dataset_id_Valid() const{
    return m_dataset_id_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getDatasetLocation() const {
    return m_dataset_location;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setDatasetLocation(const QString &dataset_location) {
    m_dataset_location = dataset_location;
    m_dataset_location_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_dataset_location_Set() const{
    return m_dataset_location_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_dataset_location_Valid() const{
    return m_dataset_location_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getDatasetProjectId() const {
    return m_dataset_project_id;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setDatasetProjectId(const QString &dataset_project_id) {
    m_dataset_project_id = dataset_project_id;
    m_dataset_project_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_dataset_project_id_Set() const{
    return m_dataset_project_id_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_dataset_project_id_Valid() const{
    return m_dataset_project_id_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getEstimatedNullPercentage() const {
    return m_estimated_null_percentage;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setEstimatedNullPercentage(const QString &estimated_null_percentage) {
    m_estimated_null_percentage = estimated_null_percentage;
    m_estimated_null_percentage_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_estimated_null_percentage_Set() const{
    return m_estimated_null_percentage_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_estimated_null_percentage_Valid() const{
    return m_estimated_null_percentage_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getEstimatedUniquenessScore() const {
    return m_estimated_uniqueness_score;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setEstimatedUniquenessScore(const QString &estimated_uniqueness_score) {
    m_estimated_uniqueness_score = estimated_uniqueness_score;
    m_estimated_uniqueness_score_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_estimated_uniqueness_score_Set() const{
    return m_estimated_uniqueness_score_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_estimated_uniqueness_score_Valid() const{
    return m_estimated_uniqueness_score_isValid;
}

double OAIGooglePrivacyDlpV2ColumnDataProfile::getFreeTextScore() const {
    return m_free_text_score;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setFreeTextScore(const double &free_text_score) {
    m_free_text_score = free_text_score;
    m_free_text_score_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_free_text_score_Set() const{
    return m_free_text_score_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_free_text_score_Valid() const{
    return m_free_text_score_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getName() const {
    return m_name;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGooglePrivacyDlpV2OtherInfoTypeSummary> OAIGooglePrivacyDlpV2ColumnDataProfile::getOtherMatches() const {
    return m_other_matches;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setOtherMatches(const QList<OAIGooglePrivacyDlpV2OtherInfoTypeSummary> &other_matches) {
    m_other_matches = other_matches;
    m_other_matches_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_other_matches_Set() const{
    return m_other_matches_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_other_matches_Valid() const{
    return m_other_matches_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getPolicyState() const {
    return m_policy_state;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setPolicyState(const QString &policy_state) {
    m_policy_state = policy_state;
    m_policy_state_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_policy_state_Set() const{
    return m_policy_state_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_policy_state_Valid() const{
    return m_policy_state_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getProfileLastGenerated() const {
    return m_profile_last_generated;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setProfileLastGenerated(const QString &profile_last_generated) {
    m_profile_last_generated = profile_last_generated;
    m_profile_last_generated_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_profile_last_generated_Set() const{
    return m_profile_last_generated_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_profile_last_generated_Valid() const{
    return m_profile_last_generated_isValid;
}

OAIGooglePrivacyDlpV2ProfileStatus OAIGooglePrivacyDlpV2ColumnDataProfile::getProfileStatus() const {
    return m_profile_status;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setProfileStatus(const OAIGooglePrivacyDlpV2ProfileStatus &profile_status) {
    m_profile_status = profile_status;
    m_profile_status_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_profile_status_Set() const{
    return m_profile_status_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_profile_status_Valid() const{
    return m_profile_status_isValid;
}

OAIGooglePrivacyDlpV2SensitivityScore OAIGooglePrivacyDlpV2ColumnDataProfile::getSensitivityScore() const {
    return m_sensitivity_score;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setSensitivityScore(const OAIGooglePrivacyDlpV2SensitivityScore &sensitivity_score) {
    m_sensitivity_score = sensitivity_score;
    m_sensitivity_score_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_sensitivity_score_Set() const{
    return m_sensitivity_score_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_sensitivity_score_Valid() const{
    return m_sensitivity_score_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getState() const {
    return m_state;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getTableDataProfile() const {
    return m_table_data_profile;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setTableDataProfile(const QString &table_data_profile) {
    m_table_data_profile = table_data_profile;
    m_table_data_profile_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_table_data_profile_Set() const{
    return m_table_data_profile_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_table_data_profile_Valid() const{
    return m_table_data_profile_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getTableFullResource() const {
    return m_table_full_resource;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setTableFullResource(const QString &table_full_resource) {
    m_table_full_resource = table_full_resource;
    m_table_full_resource_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_table_full_resource_Set() const{
    return m_table_full_resource_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_table_full_resource_Valid() const{
    return m_table_full_resource_isValid;
}

QString OAIGooglePrivacyDlpV2ColumnDataProfile::getTableId() const {
    return m_table_id;
}
void OAIGooglePrivacyDlpV2ColumnDataProfile::setTableId(const QString &table_id) {
    m_table_id = table_id;
    m_table_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_table_id_Set() const{
    return m_table_id_isSet;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::is_table_id_Valid() const{
    return m_table_id_isValid;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_info_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_risk_level.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataset_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataset_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataset_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_estimated_null_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_estimated_uniqueness_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_text_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_matches.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_last_generated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitivity_score.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_data_profile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_full_resource_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2ColumnDataProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
