/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2Finding.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2Finding::OAIGooglePrivacyDlpV2Finding(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2Finding::OAIGooglePrivacyDlpV2Finding() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2Finding::~OAIGooglePrivacyDlpV2Finding() {}

void OAIGooglePrivacyDlpV2Finding::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_finding_id_isSet = false;
    m_finding_id_isValid = false;

    m_info_type_isSet = false;
    m_info_type_isValid = false;

    m_job_create_time_isSet = false;
    m_job_create_time_isValid = false;

    m_job_name_isSet = false;
    m_job_name_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_likelihood_isSet = false;
    m_likelihood_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_quote_isSet = false;
    m_quote_isValid = false;

    m_quote_info_isSet = false;
    m_quote_info_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_trigger_name_isSet = false;
    m_trigger_name_isValid = false;
}

void OAIGooglePrivacyDlpV2Finding::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2Finding::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_finding_id_isValid = ::OpenAPI::fromJsonValue(m_finding_id, json[QString("findingId")]);
    m_finding_id_isSet = !json[QString("findingId")].isNull() && m_finding_id_isValid;

    m_info_type_isValid = ::OpenAPI::fromJsonValue(m_info_type, json[QString("infoType")]);
    m_info_type_isSet = !json[QString("infoType")].isNull() && m_info_type_isValid;

    m_job_create_time_isValid = ::OpenAPI::fromJsonValue(m_job_create_time, json[QString("jobCreateTime")]);
    m_job_create_time_isSet = !json[QString("jobCreateTime")].isNull() && m_job_create_time_isValid;

    m_job_name_isValid = ::OpenAPI::fromJsonValue(m_job_name, json[QString("jobName")]);
    m_job_name_isSet = !json[QString("jobName")].isNull() && m_job_name_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_likelihood_isValid = ::OpenAPI::fromJsonValue(m_likelihood, json[QString("likelihood")]);
    m_likelihood_isSet = !json[QString("likelihood")].isNull() && m_likelihood_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_quote_isValid = ::OpenAPI::fromJsonValue(m_quote, json[QString("quote")]);
    m_quote_isSet = !json[QString("quote")].isNull() && m_quote_isValid;

    m_quote_info_isValid = ::OpenAPI::fromJsonValue(m_quote_info, json[QString("quoteInfo")]);
    m_quote_info_isSet = !json[QString("quoteInfo")].isNull() && m_quote_info_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;

    m_trigger_name_isValid = ::OpenAPI::fromJsonValue(m_trigger_name, json[QString("triggerName")]);
    m_trigger_name_isSet = !json[QString("triggerName")].isNull() && m_trigger_name_isValid;
}

QString OAIGooglePrivacyDlpV2Finding::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2Finding::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_finding_id_isSet) {
        obj.insert(QString("findingId"), ::OpenAPI::toJsonValue(m_finding_id));
    }
    if (m_info_type.isSet()) {
        obj.insert(QString("infoType"), ::OpenAPI::toJsonValue(m_info_type));
    }
    if (m_job_create_time_isSet) {
        obj.insert(QString("jobCreateTime"), ::OpenAPI::toJsonValue(m_job_create_time));
    }
    if (m_job_name_isSet) {
        obj.insert(QString("jobName"), ::OpenAPI::toJsonValue(m_job_name));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_likelihood_isSet) {
        obj.insert(QString("likelihood"), ::OpenAPI::toJsonValue(m_likelihood));
    }
    if (m_location.isSet()) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_quote_isSet) {
        obj.insert(QString("quote"), ::OpenAPI::toJsonValue(m_quote));
    }
    if (m_quote_info.isSet()) {
        obj.insert(QString("quoteInfo"), ::OpenAPI::toJsonValue(m_quote_info));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_trigger_name_isSet) {
        obj.insert(QString("triggerName"), ::OpenAPI::toJsonValue(m_trigger_name));
    }
    return obj;
}

QString OAIGooglePrivacyDlpV2Finding::getCreateTime() const {
    return m_create_time;
}
void OAIGooglePrivacyDlpV2Finding::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGooglePrivacyDlpV2Finding::getFindingId() const {
    return m_finding_id;
}
void OAIGooglePrivacyDlpV2Finding::setFindingId(const QString &finding_id) {
    m_finding_id = finding_id;
    m_finding_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_finding_id_Set() const{
    return m_finding_id_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_finding_id_Valid() const{
    return m_finding_id_isValid;
}

OAIGooglePrivacyDlpV2InfoType OAIGooglePrivacyDlpV2Finding::getInfoType() const {
    return m_info_type;
}
void OAIGooglePrivacyDlpV2Finding::setInfoType(const OAIGooglePrivacyDlpV2InfoType &info_type) {
    m_info_type = info_type;
    m_info_type_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_info_type_Set() const{
    return m_info_type_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_info_type_Valid() const{
    return m_info_type_isValid;
}

QString OAIGooglePrivacyDlpV2Finding::getJobCreateTime() const {
    return m_job_create_time;
}
void OAIGooglePrivacyDlpV2Finding::setJobCreateTime(const QString &job_create_time) {
    m_job_create_time = job_create_time;
    m_job_create_time_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_job_create_time_Set() const{
    return m_job_create_time_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_job_create_time_Valid() const{
    return m_job_create_time_isValid;
}

QString OAIGooglePrivacyDlpV2Finding::getJobName() const {
    return m_job_name;
}
void OAIGooglePrivacyDlpV2Finding::setJobName(const QString &job_name) {
    m_job_name = job_name;
    m_job_name_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_job_name_Set() const{
    return m_job_name_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_job_name_Valid() const{
    return m_job_name_isValid;
}

QMap<QString, QString> OAIGooglePrivacyDlpV2Finding::getLabels() const {
    return m_labels;
}
void OAIGooglePrivacyDlpV2Finding::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGooglePrivacyDlpV2Finding::getLikelihood() const {
    return m_likelihood;
}
void OAIGooglePrivacyDlpV2Finding::setLikelihood(const QString &likelihood) {
    m_likelihood = likelihood;
    m_likelihood_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_likelihood_Set() const{
    return m_likelihood_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_likelihood_Valid() const{
    return m_likelihood_isValid;
}

OAIGooglePrivacyDlpV2Location OAIGooglePrivacyDlpV2Finding::getLocation() const {
    return m_location;
}
void OAIGooglePrivacyDlpV2Finding::setLocation(const OAIGooglePrivacyDlpV2Location &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIGooglePrivacyDlpV2Finding::getName() const {
    return m_name;
}
void OAIGooglePrivacyDlpV2Finding::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGooglePrivacyDlpV2Finding::getQuote() const {
    return m_quote;
}
void OAIGooglePrivacyDlpV2Finding::setQuote(const QString &quote) {
    m_quote = quote;
    m_quote_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_quote_Set() const{
    return m_quote_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_quote_Valid() const{
    return m_quote_isValid;
}

OAIGooglePrivacyDlpV2QuoteInfo OAIGooglePrivacyDlpV2Finding::getQuoteInfo() const {
    return m_quote_info;
}
void OAIGooglePrivacyDlpV2Finding::setQuoteInfo(const OAIGooglePrivacyDlpV2QuoteInfo &quote_info) {
    m_quote_info = quote_info;
    m_quote_info_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_quote_info_Set() const{
    return m_quote_info_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_quote_info_Valid() const{
    return m_quote_info_isValid;
}

QString OAIGooglePrivacyDlpV2Finding::getResourceName() const {
    return m_resource_name;
}
void OAIGooglePrivacyDlpV2Finding::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QString OAIGooglePrivacyDlpV2Finding::getTriggerName() const {
    return m_trigger_name;
}
void OAIGooglePrivacyDlpV2Finding::setTriggerName(const QString &trigger_name) {
    m_trigger_name = trigger_name;
    m_trigger_name_isSet = true;
}

bool OAIGooglePrivacyDlpV2Finding::is_trigger_name_Set() const{
    return m_trigger_name_isSet;
}

bool OAIGooglePrivacyDlpV2Finding::is_trigger_name_Valid() const{
    return m_trigger_name_isValid;
}

bool OAIGooglePrivacyDlpV2Finding::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_finding_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_info_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_likelihood_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quote_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quote_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2Finding::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
