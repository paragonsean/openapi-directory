/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2CreateJobTriggerRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2CreateJobTriggerRequest::OAIGooglePrivacyDlpV2CreateJobTriggerRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2CreateJobTriggerRequest::OAIGooglePrivacyDlpV2CreateJobTriggerRequest() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2CreateJobTriggerRequest::~OAIGooglePrivacyDlpV2CreateJobTriggerRequest() {}

void OAIGooglePrivacyDlpV2CreateJobTriggerRequest::initializeModel() {

    m_job_trigger_isSet = false;
    m_job_trigger_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_trigger_id_isSet = false;
    m_trigger_id_isValid = false;
}

void OAIGooglePrivacyDlpV2CreateJobTriggerRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2CreateJobTriggerRequest::fromJsonObject(QJsonObject json) {

    m_job_trigger_isValid = ::OpenAPI::fromJsonValue(m_job_trigger, json[QString("jobTrigger")]);
    m_job_trigger_isSet = !json[QString("jobTrigger")].isNull() && m_job_trigger_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("locationId")]);
    m_location_id_isSet = !json[QString("locationId")].isNull() && m_location_id_isValid;

    m_trigger_id_isValid = ::OpenAPI::fromJsonValue(m_trigger_id, json[QString("triggerId")]);
    m_trigger_id_isSet = !json[QString("triggerId")].isNull() && m_trigger_id_isValid;
}

QString OAIGooglePrivacyDlpV2CreateJobTriggerRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2CreateJobTriggerRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_job_trigger.isSet()) {
        obj.insert(QString("jobTrigger"), ::OpenAPI::toJsonValue(m_job_trigger));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("locationId"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_trigger_id_isSet) {
        obj.insert(QString("triggerId"), ::OpenAPI::toJsonValue(m_trigger_id));
    }
    return obj;
}

OAIGooglePrivacyDlpV2JobTrigger OAIGooglePrivacyDlpV2CreateJobTriggerRequest::getJobTrigger() const {
    return m_job_trigger;
}
void OAIGooglePrivacyDlpV2CreateJobTriggerRequest::setJobTrigger(const OAIGooglePrivacyDlpV2JobTrigger &job_trigger) {
    m_job_trigger = job_trigger;
    m_job_trigger_isSet = true;
}

bool OAIGooglePrivacyDlpV2CreateJobTriggerRequest::is_job_trigger_Set() const{
    return m_job_trigger_isSet;
}

bool OAIGooglePrivacyDlpV2CreateJobTriggerRequest::is_job_trigger_Valid() const{
    return m_job_trigger_isValid;
}

QString OAIGooglePrivacyDlpV2CreateJobTriggerRequest::getLocationId() const {
    return m_location_id;
}
void OAIGooglePrivacyDlpV2CreateJobTriggerRequest::setLocationId(const QString &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2CreateJobTriggerRequest::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAIGooglePrivacyDlpV2CreateJobTriggerRequest::is_location_id_Valid() const{
    return m_location_id_isValid;
}

QString OAIGooglePrivacyDlpV2CreateJobTriggerRequest::getTriggerId() const {
    return m_trigger_id;
}
void OAIGooglePrivacyDlpV2CreateJobTriggerRequest::setTriggerId(const QString &trigger_id) {
    m_trigger_id = trigger_id;
    m_trigger_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2CreateJobTriggerRequest::is_trigger_id_Set() const{
    return m_trigger_id_isSet;
}

bool OAIGooglePrivacyDlpV2CreateJobTriggerRequest::is_trigger_id_Valid() const{
    return m_trigger_id_isValid;
}

bool OAIGooglePrivacyDlpV2CreateJobTriggerRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_trigger.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2CreateJobTriggerRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
