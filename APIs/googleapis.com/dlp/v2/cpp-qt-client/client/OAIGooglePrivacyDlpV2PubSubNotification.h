/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2PubSubNotification.h
 *
 * Send a Pub/Sub message into the given Pub/Sub topic to connect other systems to data profile generation. The message payload data will be the byte serialization of &#x60;DataProfilePubSubMessage&#x60;.
 */

#ifndef OAIGooglePrivacyDlpV2PubSubNotification_H
#define OAIGooglePrivacyDlpV2PubSubNotification_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2DataProfilePubSubCondition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2DataProfilePubSubCondition;

class OAIGooglePrivacyDlpV2PubSubNotification : public OAIObject {
public:
    OAIGooglePrivacyDlpV2PubSubNotification();
    OAIGooglePrivacyDlpV2PubSubNotification(QString json);
    ~OAIGooglePrivacyDlpV2PubSubNotification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDetailOfMessage() const;
    void setDetailOfMessage(const QString &detail_of_message);
    bool is_detail_of_message_Set() const;
    bool is_detail_of_message_Valid() const;

    QString getEvent() const;
    void setEvent(const QString &event);
    bool is_event_Set() const;
    bool is_event_Valid() const;

    OAIGooglePrivacyDlpV2DataProfilePubSubCondition getPubsubCondition() const;
    void setPubsubCondition(const OAIGooglePrivacyDlpV2DataProfilePubSubCondition &pubsub_condition);
    bool is_pubsub_condition_Set() const;
    bool is_pubsub_condition_Valid() const;

    QString getTopic() const;
    void setTopic(const QString &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_detail_of_message;
    bool m_detail_of_message_isSet;
    bool m_detail_of_message_isValid;

    QString m_event;
    bool m_event_isSet;
    bool m_event_isValid;

    OAIGooglePrivacyDlpV2DataProfilePubSubCondition m_pubsub_condition;
    bool m_pubsub_condition_isSet;
    bool m_pubsub_condition_isValid;

    QString m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2PubSubNotification)

#endif // OAIGooglePrivacyDlpV2PubSubNotification_H
