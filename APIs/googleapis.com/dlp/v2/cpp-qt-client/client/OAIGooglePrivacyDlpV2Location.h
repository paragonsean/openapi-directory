/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2Location.h
 *
 * Specifies the location of the finding.
 */

#ifndef OAIGooglePrivacyDlpV2Location_H
#define OAIGooglePrivacyDlpV2Location_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2Container.h"
#include "OAIGooglePrivacyDlpV2ContentLocation.h"
#include "OAIGooglePrivacyDlpV2Range.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2Range;
class OAIGooglePrivacyDlpV2Container;
class OAIGooglePrivacyDlpV2ContentLocation;

class OAIGooglePrivacyDlpV2Location : public OAIObject {
public:
    OAIGooglePrivacyDlpV2Location();
    OAIGooglePrivacyDlpV2Location(QString json);
    ~OAIGooglePrivacyDlpV2Location() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2Range getByteRange() const;
    void setByteRange(const OAIGooglePrivacyDlpV2Range &byte_range);
    bool is_byte_range_Set() const;
    bool is_byte_range_Valid() const;

    OAIGooglePrivacyDlpV2Range getCodepointRange() const;
    void setCodepointRange(const OAIGooglePrivacyDlpV2Range &codepoint_range);
    bool is_codepoint_range_Set() const;
    bool is_codepoint_range_Valid() const;

    OAIGooglePrivacyDlpV2Container getContainer() const;
    void setContainer(const OAIGooglePrivacyDlpV2Container &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    QList<OAIGooglePrivacyDlpV2ContentLocation> getContentLocations() const;
    void setContentLocations(const QList<OAIGooglePrivacyDlpV2ContentLocation> &content_locations);
    bool is_content_locations_Set() const;
    bool is_content_locations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2Range m_byte_range;
    bool m_byte_range_isSet;
    bool m_byte_range_isValid;

    OAIGooglePrivacyDlpV2Range m_codepoint_range;
    bool m_codepoint_range_isSet;
    bool m_codepoint_range_isValid;

    OAIGooglePrivacyDlpV2Container m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    QList<OAIGooglePrivacyDlpV2ContentLocation> m_content_locations;
    bool m_content_locations_isSet;
    bool m_content_locations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2Location)

#endif // OAIGooglePrivacyDlpV2Location_H
