/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::~OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues() {}

void OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::initializeModel() {

    m_estimated_probability_isSet = false;
    m_estimated_probability_isValid = false;

    m_quasi_ids_values_isSet = false;
    m_quasi_ids_values_isValid = false;
}

void OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::fromJsonObject(QJsonObject json) {

    m_estimated_probability_isValid = ::OpenAPI::fromJsonValue(m_estimated_probability, json[QString("estimatedProbability")]);
    m_estimated_probability_isSet = !json[QString("estimatedProbability")].isNull() && m_estimated_probability_isValid;

    m_quasi_ids_values_isValid = ::OpenAPI::fromJsonValue(m_quasi_ids_values, json[QString("quasiIdsValues")]);
    m_quasi_ids_values_isSet = !json[QString("quasiIdsValues")].isNull() && m_quasi_ids_values_isValid;
}

QString OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::asJsonObject() const {
    QJsonObject obj;
    if (m_estimated_probability_isSet) {
        obj.insert(QString("estimatedProbability"), ::OpenAPI::toJsonValue(m_estimated_probability));
    }
    if (m_quasi_ids_values.size() > 0) {
        obj.insert(QString("quasiIdsValues"), ::OpenAPI::toJsonValue(m_quasi_ids_values));
    }
    return obj;
}

double OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::getEstimatedProbability() const {
    return m_estimated_probability;
}
void OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::setEstimatedProbability(const double &estimated_probability) {
    m_estimated_probability = estimated_probability;
    m_estimated_probability_isSet = true;
}

bool OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::is_estimated_probability_Set() const{
    return m_estimated_probability_isSet;
}

bool OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::is_estimated_probability_Valid() const{
    return m_estimated_probability_isValid;
}

QList<OAIGooglePrivacyDlpV2Value> OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::getQuasiIdsValues() const {
    return m_quasi_ids_values;
}
void OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::setQuasiIdsValues(const QList<OAIGooglePrivacyDlpV2Value> &quasi_ids_values) {
    m_quasi_ids_values = quasi_ids_values;
    m_quasi_ids_values_isSet = true;
}

bool OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::is_quasi_ids_values_Set() const{
    return m_quasi_ids_values_isSet;
}

bool OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::is_quasi_ids_values_Valid() const{
    return m_quasi_ids_values_isValid;
}

bool OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_estimated_probability_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quasi_ids_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
