/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2RecordLocation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2RecordLocation::OAIGooglePrivacyDlpV2RecordLocation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2RecordLocation::OAIGooglePrivacyDlpV2RecordLocation() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2RecordLocation::~OAIGooglePrivacyDlpV2RecordLocation() {}

void OAIGooglePrivacyDlpV2RecordLocation::initializeModel() {

    m_field_id_isSet = false;
    m_field_id_isValid = false;

    m_record_key_isSet = false;
    m_record_key_isValid = false;

    m_table_location_isSet = false;
    m_table_location_isValid = false;
}

void OAIGooglePrivacyDlpV2RecordLocation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2RecordLocation::fromJsonObject(QJsonObject json) {

    m_field_id_isValid = ::OpenAPI::fromJsonValue(m_field_id, json[QString("fieldId")]);
    m_field_id_isSet = !json[QString("fieldId")].isNull() && m_field_id_isValid;

    m_record_key_isValid = ::OpenAPI::fromJsonValue(m_record_key, json[QString("recordKey")]);
    m_record_key_isSet = !json[QString("recordKey")].isNull() && m_record_key_isValid;

    m_table_location_isValid = ::OpenAPI::fromJsonValue(m_table_location, json[QString("tableLocation")]);
    m_table_location_isSet = !json[QString("tableLocation")].isNull() && m_table_location_isValid;
}

QString OAIGooglePrivacyDlpV2RecordLocation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2RecordLocation::asJsonObject() const {
    QJsonObject obj;
    if (m_field_id.isSet()) {
        obj.insert(QString("fieldId"), ::OpenAPI::toJsonValue(m_field_id));
    }
    if (m_record_key.isSet()) {
        obj.insert(QString("recordKey"), ::OpenAPI::toJsonValue(m_record_key));
    }
    if (m_table_location.isSet()) {
        obj.insert(QString("tableLocation"), ::OpenAPI::toJsonValue(m_table_location));
    }
    return obj;
}

OAIGooglePrivacyDlpV2FieldId OAIGooglePrivacyDlpV2RecordLocation::getFieldId() const {
    return m_field_id;
}
void OAIGooglePrivacyDlpV2RecordLocation::setFieldId(const OAIGooglePrivacyDlpV2FieldId &field_id) {
    m_field_id = field_id;
    m_field_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2RecordLocation::is_field_id_Set() const{
    return m_field_id_isSet;
}

bool OAIGooglePrivacyDlpV2RecordLocation::is_field_id_Valid() const{
    return m_field_id_isValid;
}

OAIGooglePrivacyDlpV2RecordKey OAIGooglePrivacyDlpV2RecordLocation::getRecordKey() const {
    return m_record_key;
}
void OAIGooglePrivacyDlpV2RecordLocation::setRecordKey(const OAIGooglePrivacyDlpV2RecordKey &record_key) {
    m_record_key = record_key;
    m_record_key_isSet = true;
}

bool OAIGooglePrivacyDlpV2RecordLocation::is_record_key_Set() const{
    return m_record_key_isSet;
}

bool OAIGooglePrivacyDlpV2RecordLocation::is_record_key_Valid() const{
    return m_record_key_isValid;
}

OAIGooglePrivacyDlpV2TableLocation OAIGooglePrivacyDlpV2RecordLocation::getTableLocation() const {
    return m_table_location;
}
void OAIGooglePrivacyDlpV2RecordLocation::setTableLocation(const OAIGooglePrivacyDlpV2TableLocation &table_location) {
    m_table_location = table_location;
    m_table_location_isSet = true;
}

bool OAIGooglePrivacyDlpV2RecordLocation::is_table_location_Set() const{
    return m_table_location_isSet;
}

bool OAIGooglePrivacyDlpV2RecordLocation::is_table_location_Valid() const{
    return m_table_location_isValid;
}

bool OAIGooglePrivacyDlpV2RecordLocation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_record_key.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_location.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2RecordLocation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
