/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2BigQueryOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2BigQueryOptions::OAIGooglePrivacyDlpV2BigQueryOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2BigQueryOptions::OAIGooglePrivacyDlpV2BigQueryOptions() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2BigQueryOptions::~OAIGooglePrivacyDlpV2BigQueryOptions() {}

void OAIGooglePrivacyDlpV2BigQueryOptions::initializeModel() {

    m_excluded_fields_isSet = false;
    m_excluded_fields_isValid = false;

    m_identifying_fields_isSet = false;
    m_identifying_fields_isValid = false;

    m_included_fields_isSet = false;
    m_included_fields_isValid = false;

    m_rows_limit_isSet = false;
    m_rows_limit_isValid = false;

    m_rows_limit_percent_isSet = false;
    m_rows_limit_percent_isValid = false;

    m_sample_method_isSet = false;
    m_sample_method_isValid = false;

    m_table_reference_isSet = false;
    m_table_reference_isValid = false;
}

void OAIGooglePrivacyDlpV2BigQueryOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2BigQueryOptions::fromJsonObject(QJsonObject json) {

    m_excluded_fields_isValid = ::OpenAPI::fromJsonValue(m_excluded_fields, json[QString("excludedFields")]);
    m_excluded_fields_isSet = !json[QString("excludedFields")].isNull() && m_excluded_fields_isValid;

    m_identifying_fields_isValid = ::OpenAPI::fromJsonValue(m_identifying_fields, json[QString("identifyingFields")]);
    m_identifying_fields_isSet = !json[QString("identifyingFields")].isNull() && m_identifying_fields_isValid;

    m_included_fields_isValid = ::OpenAPI::fromJsonValue(m_included_fields, json[QString("includedFields")]);
    m_included_fields_isSet = !json[QString("includedFields")].isNull() && m_included_fields_isValid;

    m_rows_limit_isValid = ::OpenAPI::fromJsonValue(m_rows_limit, json[QString("rowsLimit")]);
    m_rows_limit_isSet = !json[QString("rowsLimit")].isNull() && m_rows_limit_isValid;

    m_rows_limit_percent_isValid = ::OpenAPI::fromJsonValue(m_rows_limit_percent, json[QString("rowsLimitPercent")]);
    m_rows_limit_percent_isSet = !json[QString("rowsLimitPercent")].isNull() && m_rows_limit_percent_isValid;

    m_sample_method_isValid = ::OpenAPI::fromJsonValue(m_sample_method, json[QString("sampleMethod")]);
    m_sample_method_isSet = !json[QString("sampleMethod")].isNull() && m_sample_method_isValid;

    m_table_reference_isValid = ::OpenAPI::fromJsonValue(m_table_reference, json[QString("tableReference")]);
    m_table_reference_isSet = !json[QString("tableReference")].isNull() && m_table_reference_isValid;
}

QString OAIGooglePrivacyDlpV2BigQueryOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2BigQueryOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_excluded_fields.size() > 0) {
        obj.insert(QString("excludedFields"), ::OpenAPI::toJsonValue(m_excluded_fields));
    }
    if (m_identifying_fields.size() > 0) {
        obj.insert(QString("identifyingFields"), ::OpenAPI::toJsonValue(m_identifying_fields));
    }
    if (m_included_fields.size() > 0) {
        obj.insert(QString("includedFields"), ::OpenAPI::toJsonValue(m_included_fields));
    }
    if (m_rows_limit_isSet) {
        obj.insert(QString("rowsLimit"), ::OpenAPI::toJsonValue(m_rows_limit));
    }
    if (m_rows_limit_percent_isSet) {
        obj.insert(QString("rowsLimitPercent"), ::OpenAPI::toJsonValue(m_rows_limit_percent));
    }
    if (m_sample_method_isSet) {
        obj.insert(QString("sampleMethod"), ::OpenAPI::toJsonValue(m_sample_method));
    }
    if (m_table_reference.isSet()) {
        obj.insert(QString("tableReference"), ::OpenAPI::toJsonValue(m_table_reference));
    }
    return obj;
}

QList<OAIGooglePrivacyDlpV2FieldId> OAIGooglePrivacyDlpV2BigQueryOptions::getExcludedFields() const {
    return m_excluded_fields;
}
void OAIGooglePrivacyDlpV2BigQueryOptions::setExcludedFields(const QList<OAIGooglePrivacyDlpV2FieldId> &excluded_fields) {
    m_excluded_fields = excluded_fields;
    m_excluded_fields_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_excluded_fields_Set() const{
    return m_excluded_fields_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_excluded_fields_Valid() const{
    return m_excluded_fields_isValid;
}

QList<OAIGooglePrivacyDlpV2FieldId> OAIGooglePrivacyDlpV2BigQueryOptions::getIdentifyingFields() const {
    return m_identifying_fields;
}
void OAIGooglePrivacyDlpV2BigQueryOptions::setIdentifyingFields(const QList<OAIGooglePrivacyDlpV2FieldId> &identifying_fields) {
    m_identifying_fields = identifying_fields;
    m_identifying_fields_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_identifying_fields_Set() const{
    return m_identifying_fields_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_identifying_fields_Valid() const{
    return m_identifying_fields_isValid;
}

QList<OAIGooglePrivacyDlpV2FieldId> OAIGooglePrivacyDlpV2BigQueryOptions::getIncludedFields() const {
    return m_included_fields;
}
void OAIGooglePrivacyDlpV2BigQueryOptions::setIncludedFields(const QList<OAIGooglePrivacyDlpV2FieldId> &included_fields) {
    m_included_fields = included_fields;
    m_included_fields_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_included_fields_Set() const{
    return m_included_fields_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_included_fields_Valid() const{
    return m_included_fields_isValid;
}

QString OAIGooglePrivacyDlpV2BigQueryOptions::getRowsLimit() const {
    return m_rows_limit;
}
void OAIGooglePrivacyDlpV2BigQueryOptions::setRowsLimit(const QString &rows_limit) {
    m_rows_limit = rows_limit;
    m_rows_limit_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_rows_limit_Set() const{
    return m_rows_limit_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_rows_limit_Valid() const{
    return m_rows_limit_isValid;
}

qint32 OAIGooglePrivacyDlpV2BigQueryOptions::getRowsLimitPercent() const {
    return m_rows_limit_percent;
}
void OAIGooglePrivacyDlpV2BigQueryOptions::setRowsLimitPercent(const qint32 &rows_limit_percent) {
    m_rows_limit_percent = rows_limit_percent;
    m_rows_limit_percent_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_rows_limit_percent_Set() const{
    return m_rows_limit_percent_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_rows_limit_percent_Valid() const{
    return m_rows_limit_percent_isValid;
}

QString OAIGooglePrivacyDlpV2BigQueryOptions::getSampleMethod() const {
    return m_sample_method;
}
void OAIGooglePrivacyDlpV2BigQueryOptions::setSampleMethod(const QString &sample_method) {
    m_sample_method = sample_method;
    m_sample_method_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_sample_method_Set() const{
    return m_sample_method_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_sample_method_Valid() const{
    return m_sample_method_isValid;
}

OAIGooglePrivacyDlpV2BigQueryTable OAIGooglePrivacyDlpV2BigQueryOptions::getTableReference() const {
    return m_table_reference;
}
void OAIGooglePrivacyDlpV2BigQueryOptions::setTableReference(const OAIGooglePrivacyDlpV2BigQueryTable &table_reference) {
    m_table_reference = table_reference;
    m_table_reference_isSet = true;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_table_reference_Set() const{
    return m_table_reference_isSet;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::is_table_reference_Valid() const{
    return m_table_reference_isValid;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_excluded_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_identifying_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_included_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_rows_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rows_limit_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sample_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2BigQueryOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
