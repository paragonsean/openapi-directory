/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2PubSubCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2PubSubCondition::OAIGooglePrivacyDlpV2PubSubCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2PubSubCondition::OAIGooglePrivacyDlpV2PubSubCondition() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2PubSubCondition::~OAIGooglePrivacyDlpV2PubSubCondition() {}

void OAIGooglePrivacyDlpV2PubSubCondition::initializeModel() {

    m_minimum_risk_score_isSet = false;
    m_minimum_risk_score_isValid = false;

    m_minimum_sensitivity_score_isSet = false;
    m_minimum_sensitivity_score_isValid = false;
}

void OAIGooglePrivacyDlpV2PubSubCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2PubSubCondition::fromJsonObject(QJsonObject json) {

    m_minimum_risk_score_isValid = ::OpenAPI::fromJsonValue(m_minimum_risk_score, json[QString("minimumRiskScore")]);
    m_minimum_risk_score_isSet = !json[QString("minimumRiskScore")].isNull() && m_minimum_risk_score_isValid;

    m_minimum_sensitivity_score_isValid = ::OpenAPI::fromJsonValue(m_minimum_sensitivity_score, json[QString("minimumSensitivityScore")]);
    m_minimum_sensitivity_score_isSet = !json[QString("minimumSensitivityScore")].isNull() && m_minimum_sensitivity_score_isValid;
}

QString OAIGooglePrivacyDlpV2PubSubCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2PubSubCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_minimum_risk_score_isSet) {
        obj.insert(QString("minimumRiskScore"), ::OpenAPI::toJsonValue(m_minimum_risk_score));
    }
    if (m_minimum_sensitivity_score_isSet) {
        obj.insert(QString("minimumSensitivityScore"), ::OpenAPI::toJsonValue(m_minimum_sensitivity_score));
    }
    return obj;
}

QString OAIGooglePrivacyDlpV2PubSubCondition::getMinimumRiskScore() const {
    return m_minimum_risk_score;
}
void OAIGooglePrivacyDlpV2PubSubCondition::setMinimumRiskScore(const QString &minimum_risk_score) {
    m_minimum_risk_score = minimum_risk_score;
    m_minimum_risk_score_isSet = true;
}

bool OAIGooglePrivacyDlpV2PubSubCondition::is_minimum_risk_score_Set() const{
    return m_minimum_risk_score_isSet;
}

bool OAIGooglePrivacyDlpV2PubSubCondition::is_minimum_risk_score_Valid() const{
    return m_minimum_risk_score_isValid;
}

QString OAIGooglePrivacyDlpV2PubSubCondition::getMinimumSensitivityScore() const {
    return m_minimum_sensitivity_score;
}
void OAIGooglePrivacyDlpV2PubSubCondition::setMinimumSensitivityScore(const QString &minimum_sensitivity_score) {
    m_minimum_sensitivity_score = minimum_sensitivity_score;
    m_minimum_sensitivity_score_isSet = true;
}

bool OAIGooglePrivacyDlpV2PubSubCondition::is_minimum_sensitivity_score_Set() const{
    return m_minimum_sensitivity_score_isSet;
}

bool OAIGooglePrivacyDlpV2PubSubCondition::is_minimum_sensitivity_score_Valid() const{
    return m_minimum_sensitivity_score_isValid;
}

bool OAIGooglePrivacyDlpV2PubSubCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_minimum_risk_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_sensitivity_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2PubSubCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
