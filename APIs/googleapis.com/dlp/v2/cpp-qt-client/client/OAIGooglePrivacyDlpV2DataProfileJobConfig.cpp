/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2DataProfileJobConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2DataProfileJobConfig::OAIGooglePrivacyDlpV2DataProfileJobConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2DataProfileJobConfig::OAIGooglePrivacyDlpV2DataProfileJobConfig() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2DataProfileJobConfig::~OAIGooglePrivacyDlpV2DataProfileJobConfig() {}

void OAIGooglePrivacyDlpV2DataProfileJobConfig::initializeModel() {

    m_data_profile_actions_isSet = false;
    m_data_profile_actions_isValid = false;

    m_inspect_templates_isSet = false;
    m_inspect_templates_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;
}

void OAIGooglePrivacyDlpV2DataProfileJobConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2DataProfileJobConfig::fromJsonObject(QJsonObject json) {

    m_data_profile_actions_isValid = ::OpenAPI::fromJsonValue(m_data_profile_actions, json[QString("dataProfileActions")]);
    m_data_profile_actions_isSet = !json[QString("dataProfileActions")].isNull() && m_data_profile_actions_isValid;

    m_inspect_templates_isValid = ::OpenAPI::fromJsonValue(m_inspect_templates, json[QString("inspectTemplates")]);
    m_inspect_templates_isSet = !json[QString("inspectTemplates")].isNull() && m_inspect_templates_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;
}

QString OAIGooglePrivacyDlpV2DataProfileJobConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2DataProfileJobConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_data_profile_actions.size() > 0) {
        obj.insert(QString("dataProfileActions"), ::OpenAPI::toJsonValue(m_data_profile_actions));
    }
    if (m_inspect_templates.size() > 0) {
        obj.insert(QString("inspectTemplates"), ::OpenAPI::toJsonValue(m_inspect_templates));
    }
    if (m_location.isSet()) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    return obj;
}

QList<OAIGooglePrivacyDlpV2DataProfileAction> OAIGooglePrivacyDlpV2DataProfileJobConfig::getDataProfileActions() const {
    return m_data_profile_actions;
}
void OAIGooglePrivacyDlpV2DataProfileJobConfig::setDataProfileActions(const QList<OAIGooglePrivacyDlpV2DataProfileAction> &data_profile_actions) {
    m_data_profile_actions = data_profile_actions;
    m_data_profile_actions_isSet = true;
}

bool OAIGooglePrivacyDlpV2DataProfileJobConfig::is_data_profile_actions_Set() const{
    return m_data_profile_actions_isSet;
}

bool OAIGooglePrivacyDlpV2DataProfileJobConfig::is_data_profile_actions_Valid() const{
    return m_data_profile_actions_isValid;
}

QList<QString> OAIGooglePrivacyDlpV2DataProfileJobConfig::getInspectTemplates() const {
    return m_inspect_templates;
}
void OAIGooglePrivacyDlpV2DataProfileJobConfig::setInspectTemplates(const QList<QString> &inspect_templates) {
    m_inspect_templates = inspect_templates;
    m_inspect_templates_isSet = true;
}

bool OAIGooglePrivacyDlpV2DataProfileJobConfig::is_inspect_templates_Set() const{
    return m_inspect_templates_isSet;
}

bool OAIGooglePrivacyDlpV2DataProfileJobConfig::is_inspect_templates_Valid() const{
    return m_inspect_templates_isValid;
}

OAIGooglePrivacyDlpV2DataProfileLocation OAIGooglePrivacyDlpV2DataProfileJobConfig::getLocation() const {
    return m_location;
}
void OAIGooglePrivacyDlpV2DataProfileJobConfig::setLocation(const OAIGooglePrivacyDlpV2DataProfileLocation &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGooglePrivacyDlpV2DataProfileJobConfig::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGooglePrivacyDlpV2DataProfileJobConfig::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIGooglePrivacyDlpV2DataProfileJobConfig::getProjectId() const {
    return m_project_id;
}
void OAIGooglePrivacyDlpV2DataProfileJobConfig::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2DataProfileJobConfig::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIGooglePrivacyDlpV2DataProfileJobConfig::is_project_id_Valid() const{
    return m_project_id_isValid;
}

bool OAIGooglePrivacyDlpV2DataProfileJobConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_profile_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_inspect_templates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2DataProfileJobConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
