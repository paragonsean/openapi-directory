/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2ProjectDataProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2ProjectDataProfile::OAIGooglePrivacyDlpV2ProjectDataProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2ProjectDataProfile::OAIGooglePrivacyDlpV2ProjectDataProfile() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2ProjectDataProfile::~OAIGooglePrivacyDlpV2ProjectDataProfile() {}

void OAIGooglePrivacyDlpV2ProjectDataProfile::initializeModel() {

    m_data_risk_level_isSet = false;
    m_data_risk_level_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_profile_last_generated_isSet = false;
    m_profile_last_generated_isValid = false;

    m_profile_status_isSet = false;
    m_profile_status_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_sensitivity_score_isSet = false;
    m_sensitivity_score_isValid = false;
}

void OAIGooglePrivacyDlpV2ProjectDataProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2ProjectDataProfile::fromJsonObject(QJsonObject json) {

    m_data_risk_level_isValid = ::OpenAPI::fromJsonValue(m_data_risk_level, json[QString("dataRiskLevel")]);
    m_data_risk_level_isSet = !json[QString("dataRiskLevel")].isNull() && m_data_risk_level_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_profile_last_generated_isValid = ::OpenAPI::fromJsonValue(m_profile_last_generated, json[QString("profileLastGenerated")]);
    m_profile_last_generated_isSet = !json[QString("profileLastGenerated")].isNull() && m_profile_last_generated_isValid;

    m_profile_status_isValid = ::OpenAPI::fromJsonValue(m_profile_status, json[QString("profileStatus")]);
    m_profile_status_isSet = !json[QString("profileStatus")].isNull() && m_profile_status_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_sensitivity_score_isValid = ::OpenAPI::fromJsonValue(m_sensitivity_score, json[QString("sensitivityScore")]);
    m_sensitivity_score_isSet = !json[QString("sensitivityScore")].isNull() && m_sensitivity_score_isValid;
}

QString OAIGooglePrivacyDlpV2ProjectDataProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2ProjectDataProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_data_risk_level.isSet()) {
        obj.insert(QString("dataRiskLevel"), ::OpenAPI::toJsonValue(m_data_risk_level));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_profile_last_generated_isSet) {
        obj.insert(QString("profileLastGenerated"), ::OpenAPI::toJsonValue(m_profile_last_generated));
    }
    if (m_profile_status.isSet()) {
        obj.insert(QString("profileStatus"), ::OpenAPI::toJsonValue(m_profile_status));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_sensitivity_score.isSet()) {
        obj.insert(QString("sensitivityScore"), ::OpenAPI::toJsonValue(m_sensitivity_score));
    }
    return obj;
}

OAIGooglePrivacyDlpV2DataRiskLevel OAIGooglePrivacyDlpV2ProjectDataProfile::getDataRiskLevel() const {
    return m_data_risk_level;
}
void OAIGooglePrivacyDlpV2ProjectDataProfile::setDataRiskLevel(const OAIGooglePrivacyDlpV2DataRiskLevel &data_risk_level) {
    m_data_risk_level = data_risk_level;
    m_data_risk_level_isSet = true;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_data_risk_level_Set() const{
    return m_data_risk_level_isSet;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_data_risk_level_Valid() const{
    return m_data_risk_level_isValid;
}

QString OAIGooglePrivacyDlpV2ProjectDataProfile::getName() const {
    return m_name;
}
void OAIGooglePrivacyDlpV2ProjectDataProfile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGooglePrivacyDlpV2ProjectDataProfile::getProfileLastGenerated() const {
    return m_profile_last_generated;
}
void OAIGooglePrivacyDlpV2ProjectDataProfile::setProfileLastGenerated(const QString &profile_last_generated) {
    m_profile_last_generated = profile_last_generated;
    m_profile_last_generated_isSet = true;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_profile_last_generated_Set() const{
    return m_profile_last_generated_isSet;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_profile_last_generated_Valid() const{
    return m_profile_last_generated_isValid;
}

OAIGooglePrivacyDlpV2ProfileStatus OAIGooglePrivacyDlpV2ProjectDataProfile::getProfileStatus() const {
    return m_profile_status;
}
void OAIGooglePrivacyDlpV2ProjectDataProfile::setProfileStatus(const OAIGooglePrivacyDlpV2ProfileStatus &profile_status) {
    m_profile_status = profile_status;
    m_profile_status_isSet = true;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_profile_status_Set() const{
    return m_profile_status_isSet;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_profile_status_Valid() const{
    return m_profile_status_isValid;
}

QString OAIGooglePrivacyDlpV2ProjectDataProfile::getProjectId() const {
    return m_project_id;
}
void OAIGooglePrivacyDlpV2ProjectDataProfile::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_project_id_Valid() const{
    return m_project_id_isValid;
}

OAIGooglePrivacyDlpV2SensitivityScore OAIGooglePrivacyDlpV2ProjectDataProfile::getSensitivityScore() const {
    return m_sensitivity_score;
}
void OAIGooglePrivacyDlpV2ProjectDataProfile::setSensitivityScore(const OAIGooglePrivacyDlpV2SensitivityScore &sensitivity_score) {
    m_sensitivity_score = sensitivity_score;
    m_sensitivity_score_isSet = true;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_sensitivity_score_Set() const{
    return m_sensitivity_score_isSet;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::is_sensitivity_score_Valid() const{
    return m_sensitivity_score_isValid;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_risk_level.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_last_generated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitivity_score.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2ProjectDataProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
