/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2FieldTransformation.h
 *
 * The transformation to apply to the field.
 */

#ifndef OAIGooglePrivacyDlpV2FieldTransformation_H
#define OAIGooglePrivacyDlpV2FieldTransformation_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2FieldId.h"
#include "OAIGooglePrivacyDlpV2InfoTypeTransformations.h"
#include "OAIGooglePrivacyDlpV2PrimitiveTransformation.h"
#include "OAIGooglePrivacyDlpV2RecordCondition.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2RecordCondition;
class OAIGooglePrivacyDlpV2FieldId;
class OAIGooglePrivacyDlpV2InfoTypeTransformations;
class OAIGooglePrivacyDlpV2PrimitiveTransformation;

class OAIGooglePrivacyDlpV2FieldTransformation : public OAIObject {
public:
    OAIGooglePrivacyDlpV2FieldTransformation();
    OAIGooglePrivacyDlpV2FieldTransformation(QString json);
    ~OAIGooglePrivacyDlpV2FieldTransformation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2RecordCondition getCondition() const;
    void setCondition(const OAIGooglePrivacyDlpV2RecordCondition &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QList<OAIGooglePrivacyDlpV2FieldId> getFields() const;
    void setFields(const QList<OAIGooglePrivacyDlpV2FieldId> &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    OAIGooglePrivacyDlpV2InfoTypeTransformations getInfoTypeTransformations() const;
    void setInfoTypeTransformations(const OAIGooglePrivacyDlpV2InfoTypeTransformations &info_type_transformations);
    bool is_info_type_transformations_Set() const;
    bool is_info_type_transformations_Valid() const;

    OAIGooglePrivacyDlpV2PrimitiveTransformation getPrimitiveTransformation() const;
    void setPrimitiveTransformation(const OAIGooglePrivacyDlpV2PrimitiveTransformation &primitive_transformation);
    bool is_primitive_transformation_Set() const;
    bool is_primitive_transformation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2RecordCondition m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QList<OAIGooglePrivacyDlpV2FieldId> m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    OAIGooglePrivacyDlpV2InfoTypeTransformations m_info_type_transformations;
    bool m_info_type_transformations_isSet;
    bool m_info_type_transformations_isValid;

    OAIGooglePrivacyDlpV2PrimitiveTransformation m_primitive_transformation;
    bool m_primitive_transformation_isSet;
    bool m_primitive_transformation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2FieldTransformation)

#endif // OAIGooglePrivacyDlpV2FieldTransformation_H
