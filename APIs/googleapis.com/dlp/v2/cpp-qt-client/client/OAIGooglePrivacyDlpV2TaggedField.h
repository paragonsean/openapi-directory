/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2TaggedField.h
 *
 * A column with a semantic tag attached.
 */

#ifndef OAIGooglePrivacyDlpV2TaggedField_H
#define OAIGooglePrivacyDlpV2TaggedField_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2FieldId.h"
#include "OAIGooglePrivacyDlpV2InfoType.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2FieldId;
class OAIGooglePrivacyDlpV2InfoType;

class OAIGooglePrivacyDlpV2TaggedField : public OAIObject {
public:
    OAIGooglePrivacyDlpV2TaggedField();
    OAIGooglePrivacyDlpV2TaggedField(QString json);
    ~OAIGooglePrivacyDlpV2TaggedField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCustomTag() const;
    void setCustomTag(const QString &custom_tag);
    bool is_custom_tag_Set() const;
    bool is_custom_tag_Valid() const;

    OAIGooglePrivacyDlpV2FieldId getField() const;
    void setField(const OAIGooglePrivacyDlpV2FieldId &field);
    bool is_field_Set() const;
    bool is_field_Valid() const;

    OAIObject getInferred() const;
    void setInferred(const OAIObject &inferred);
    bool is_inferred_Set() const;
    bool is_inferred_Valid() const;

    OAIGooglePrivacyDlpV2InfoType getInfoType() const;
    void setInfoType(const OAIGooglePrivacyDlpV2InfoType &info_type);
    bool is_info_type_Set() const;
    bool is_info_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_custom_tag;
    bool m_custom_tag_isSet;
    bool m_custom_tag_isValid;

    OAIGooglePrivacyDlpV2FieldId m_field;
    bool m_field_isSet;
    bool m_field_isValid;

    OAIObject m_inferred;
    bool m_inferred_isSet;
    bool m_inferred_isValid;

    OAIGooglePrivacyDlpV2InfoType m_info_type;
    bool m_info_type_isSet;
    bool m_info_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2TaggedField)

#endif // OAIGooglePrivacyDlpV2TaggedField_H
