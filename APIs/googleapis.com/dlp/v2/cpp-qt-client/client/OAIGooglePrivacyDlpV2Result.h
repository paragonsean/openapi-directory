/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2Result.h
 *
 * All result fields mentioned below are updated while the job is processing.
 */

#ifndef OAIGooglePrivacyDlpV2Result_H
#define OAIGooglePrivacyDlpV2Result_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2HybridInspectStatistics.h"
#include "OAIGooglePrivacyDlpV2InfoTypeStats.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2HybridInspectStatistics;
class OAIGooglePrivacyDlpV2InfoTypeStats;

class OAIGooglePrivacyDlpV2Result : public OAIObject {
public:
    OAIGooglePrivacyDlpV2Result();
    OAIGooglePrivacyDlpV2Result(QString json);
    ~OAIGooglePrivacyDlpV2Result() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2HybridInspectStatistics getHybridStats() const;
    void setHybridStats(const OAIGooglePrivacyDlpV2HybridInspectStatistics &hybrid_stats);
    bool is_hybrid_stats_Set() const;
    bool is_hybrid_stats_Valid() const;

    QList<OAIGooglePrivacyDlpV2InfoTypeStats> getInfoTypeStats() const;
    void setInfoTypeStats(const QList<OAIGooglePrivacyDlpV2InfoTypeStats> &info_type_stats);
    bool is_info_type_stats_Set() const;
    bool is_info_type_stats_Valid() const;

    QString getProcessedBytes() const;
    void setProcessedBytes(const QString &processed_bytes);
    bool is_processed_bytes_Set() const;
    bool is_processed_bytes_Valid() const;

    QString getTotalEstimatedBytes() const;
    void setTotalEstimatedBytes(const QString &total_estimated_bytes);
    bool is_total_estimated_bytes_Set() const;
    bool is_total_estimated_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2HybridInspectStatistics m_hybrid_stats;
    bool m_hybrid_stats_isSet;
    bool m_hybrid_stats_isValid;

    QList<OAIGooglePrivacyDlpV2InfoTypeStats> m_info_type_stats;
    bool m_info_type_stats_isSet;
    bool m_info_type_stats_isValid;

    QString m_processed_bytes;
    bool m_processed_bytes_isSet;
    bool m_processed_bytes_isValid;

    QString m_total_estimated_bytes;
    bool m_total_estimated_bytes_isSet;
    bool m_total_estimated_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2Result)

#endif // OAIGooglePrivacyDlpV2Result_H
