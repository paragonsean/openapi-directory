/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2CreateDlpJobRequest.h
 *
 * Request message for CreateDlpJobRequest. Used to initiate long running jobs such as calculating risk metrics or inspecting Google Cloud Storage.
 */

#ifndef OAIGooglePrivacyDlpV2CreateDlpJobRequest_H
#define OAIGooglePrivacyDlpV2CreateDlpJobRequest_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2InspectJobConfig.h"
#include "OAIGooglePrivacyDlpV2RiskAnalysisJobConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2InspectJobConfig;
class OAIGooglePrivacyDlpV2RiskAnalysisJobConfig;

class OAIGooglePrivacyDlpV2CreateDlpJobRequest : public OAIObject {
public:
    OAIGooglePrivacyDlpV2CreateDlpJobRequest();
    OAIGooglePrivacyDlpV2CreateDlpJobRequest(QString json);
    ~OAIGooglePrivacyDlpV2CreateDlpJobRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2InspectJobConfig getInspectJob() const;
    void setInspectJob(const OAIGooglePrivacyDlpV2InspectJobConfig &inspect_job);
    bool is_inspect_job_Set() const;
    bool is_inspect_job_Valid() const;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    OAIGooglePrivacyDlpV2RiskAnalysisJobConfig getRiskJob() const;
    void setRiskJob(const OAIGooglePrivacyDlpV2RiskAnalysisJobConfig &risk_job);
    bool is_risk_job_Set() const;
    bool is_risk_job_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2InspectJobConfig m_inspect_job;
    bool m_inspect_job_isSet;
    bool m_inspect_job_isValid;

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    OAIGooglePrivacyDlpV2RiskAnalysisJobConfig m_risk_job;
    bool m_risk_job_isSet;
    bool m_risk_job_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2CreateDlpJobRequest)

#endif // OAIGooglePrivacyDlpV2CreateDlpJobRequest_H
