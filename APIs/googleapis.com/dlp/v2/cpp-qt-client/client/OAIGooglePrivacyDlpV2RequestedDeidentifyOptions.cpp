/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2RequestedDeidentifyOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::OAIGooglePrivacyDlpV2RequestedDeidentifyOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::OAIGooglePrivacyDlpV2RequestedDeidentifyOptions() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::~OAIGooglePrivacyDlpV2RequestedDeidentifyOptions() {}

void OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::initializeModel() {

    m_snapshot_deidentify_template_isSet = false;
    m_snapshot_deidentify_template_isValid = false;

    m_snapshot_image_redact_template_isSet = false;
    m_snapshot_image_redact_template_isValid = false;

    m_snapshot_structured_deidentify_template_isSet = false;
    m_snapshot_structured_deidentify_template_isValid = false;
}

void OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::fromJsonObject(QJsonObject json) {

    m_snapshot_deidentify_template_isValid = ::OpenAPI::fromJsonValue(m_snapshot_deidentify_template, json[QString("snapshotDeidentifyTemplate")]);
    m_snapshot_deidentify_template_isSet = !json[QString("snapshotDeidentifyTemplate")].isNull() && m_snapshot_deidentify_template_isValid;

    m_snapshot_image_redact_template_isValid = ::OpenAPI::fromJsonValue(m_snapshot_image_redact_template, json[QString("snapshotImageRedactTemplate")]);
    m_snapshot_image_redact_template_isSet = !json[QString("snapshotImageRedactTemplate")].isNull() && m_snapshot_image_redact_template_isValid;

    m_snapshot_structured_deidentify_template_isValid = ::OpenAPI::fromJsonValue(m_snapshot_structured_deidentify_template, json[QString("snapshotStructuredDeidentifyTemplate")]);
    m_snapshot_structured_deidentify_template_isSet = !json[QString("snapshotStructuredDeidentifyTemplate")].isNull() && m_snapshot_structured_deidentify_template_isValid;
}

QString OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_snapshot_deidentify_template.isSet()) {
        obj.insert(QString("snapshotDeidentifyTemplate"), ::OpenAPI::toJsonValue(m_snapshot_deidentify_template));
    }
    if (m_snapshot_image_redact_template.isSet()) {
        obj.insert(QString("snapshotImageRedactTemplate"), ::OpenAPI::toJsonValue(m_snapshot_image_redact_template));
    }
    if (m_snapshot_structured_deidentify_template.isSet()) {
        obj.insert(QString("snapshotStructuredDeidentifyTemplate"), ::OpenAPI::toJsonValue(m_snapshot_structured_deidentify_template));
    }
    return obj;
}

OAIGooglePrivacyDlpV2DeidentifyTemplate OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::getSnapshotDeidentifyTemplate() const {
    return m_snapshot_deidentify_template;
}
void OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::setSnapshotDeidentifyTemplate(const OAIGooglePrivacyDlpV2DeidentifyTemplate &snapshot_deidentify_template) {
    m_snapshot_deidentify_template = snapshot_deidentify_template;
    m_snapshot_deidentify_template_isSet = true;
}

bool OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::is_snapshot_deidentify_template_Set() const{
    return m_snapshot_deidentify_template_isSet;
}

bool OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::is_snapshot_deidentify_template_Valid() const{
    return m_snapshot_deidentify_template_isValid;
}

OAIGooglePrivacyDlpV2DeidentifyTemplate OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::getSnapshotImageRedactTemplate() const {
    return m_snapshot_image_redact_template;
}
void OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::setSnapshotImageRedactTemplate(const OAIGooglePrivacyDlpV2DeidentifyTemplate &snapshot_image_redact_template) {
    m_snapshot_image_redact_template = snapshot_image_redact_template;
    m_snapshot_image_redact_template_isSet = true;
}

bool OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::is_snapshot_image_redact_template_Set() const{
    return m_snapshot_image_redact_template_isSet;
}

bool OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::is_snapshot_image_redact_template_Valid() const{
    return m_snapshot_image_redact_template_isValid;
}

OAIGooglePrivacyDlpV2DeidentifyTemplate OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::getSnapshotStructuredDeidentifyTemplate() const {
    return m_snapshot_structured_deidentify_template;
}
void OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::setSnapshotStructuredDeidentifyTemplate(const OAIGooglePrivacyDlpV2DeidentifyTemplate &snapshot_structured_deidentify_template) {
    m_snapshot_structured_deidentify_template = snapshot_structured_deidentify_template;
    m_snapshot_structured_deidentify_template_isSet = true;
}

bool OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::is_snapshot_structured_deidentify_template_Set() const{
    return m_snapshot_structured_deidentify_template_isSet;
}

bool OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::is_snapshot_structured_deidentify_template_Valid() const{
    return m_snapshot_structured_deidentify_template_isValid;
}

bool OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_snapshot_deidentify_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_snapshot_image_redact_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_snapshot_structured_deidentify_template.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2RequestedDeidentifyOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
