/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2InfoTypeCategory.h
 *
 * Classification of infoTypes to organize them according to geographic location, industry, and data type.
 */

#ifndef OAIGooglePrivacyDlpV2InfoTypeCategory_H
#define OAIGooglePrivacyDlpV2InfoTypeCategory_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGooglePrivacyDlpV2InfoTypeCategory : public OAIObject {
public:
    OAIGooglePrivacyDlpV2InfoTypeCategory();
    OAIGooglePrivacyDlpV2InfoTypeCategory(QString json);
    ~OAIGooglePrivacyDlpV2InfoTypeCategory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIndustryCategory() const;
    void setIndustryCategory(const QString &industry_category);
    bool is_industry_category_Set() const;
    bool is_industry_category_Valid() const;

    QString getLocationCategory() const;
    void setLocationCategory(const QString &location_category);
    bool is_location_category_Set() const;
    bool is_location_category_Valid() const;

    QString getTypeCategory() const;
    void setTypeCategory(const QString &type_category);
    bool is_type_category_Set() const;
    bool is_type_category_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_industry_category;
    bool m_industry_category_isSet;
    bool m_industry_category_isValid;

    QString m_location_category;
    bool m_location_category_isSet;
    bool m_location_category_isValid;

    QString m_type_category;
    bool m_type_category_isSet;
    bool m_type_category_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2InfoTypeCategory)

#endif // OAIGooglePrivacyDlpV2InfoTypeCategory_H
