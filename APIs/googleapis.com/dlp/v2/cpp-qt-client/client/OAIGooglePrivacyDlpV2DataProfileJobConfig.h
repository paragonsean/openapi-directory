/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2DataProfileJobConfig.h
 *
 * Configuration for setting up a job to scan resources for profile generation. Only one data profile configuration may exist per organization, folder, or project. The generated data profiles are retained according to the [data retention policy] (https://cloud.google.com/sensitive-data-protection/docs/data-profiles#retention).
 */

#ifndef OAIGooglePrivacyDlpV2DataProfileJobConfig_H
#define OAIGooglePrivacyDlpV2DataProfileJobConfig_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2DataProfileAction.h"
#include "OAIGooglePrivacyDlpV2DataProfileLocation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2DataProfileAction;
class OAIGooglePrivacyDlpV2DataProfileLocation;

class OAIGooglePrivacyDlpV2DataProfileJobConfig : public OAIObject {
public:
    OAIGooglePrivacyDlpV2DataProfileJobConfig();
    OAIGooglePrivacyDlpV2DataProfileJobConfig(QString json);
    ~OAIGooglePrivacyDlpV2DataProfileJobConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGooglePrivacyDlpV2DataProfileAction> getDataProfileActions() const;
    void setDataProfileActions(const QList<OAIGooglePrivacyDlpV2DataProfileAction> &data_profile_actions);
    bool is_data_profile_actions_Set() const;
    bool is_data_profile_actions_Valid() const;

    QList<QString> getInspectTemplates() const;
    void setInspectTemplates(const QList<QString> &inspect_templates);
    bool is_inspect_templates_Set() const;
    bool is_inspect_templates_Valid() const;

    OAIGooglePrivacyDlpV2DataProfileLocation getLocation() const;
    void setLocation(const OAIGooglePrivacyDlpV2DataProfileLocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGooglePrivacyDlpV2DataProfileAction> m_data_profile_actions;
    bool m_data_profile_actions_isSet;
    bool m_data_profile_actions_isValid;

    QList<QString> m_inspect_templates;
    bool m_inspect_templates_isSet;
    bool m_inspect_templates_isValid;

    OAIGooglePrivacyDlpV2DataProfileLocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2DataProfileJobConfig)

#endif // OAIGooglePrivacyDlpV2DataProfileJobConfig_H
