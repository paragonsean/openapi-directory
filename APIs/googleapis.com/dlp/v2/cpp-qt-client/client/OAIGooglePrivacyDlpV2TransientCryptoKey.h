/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2TransientCryptoKey.h
 *
 * Use this to have a random data crypto key generated. It will be discarded after the request finishes.
 */

#ifndef OAIGooglePrivacyDlpV2TransientCryptoKey_H
#define OAIGooglePrivacyDlpV2TransientCryptoKey_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGooglePrivacyDlpV2TransientCryptoKey : public OAIObject {
public:
    OAIGooglePrivacyDlpV2TransientCryptoKey();
    OAIGooglePrivacyDlpV2TransientCryptoKey(QString json);
    ~OAIGooglePrivacyDlpV2TransientCryptoKey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2TransientCryptoKey)

#endif // OAIGooglePrivacyDlpV2TransientCryptoKey_H
