/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2TimePartConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2TimePartConfig::OAIGooglePrivacyDlpV2TimePartConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2TimePartConfig::OAIGooglePrivacyDlpV2TimePartConfig() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2TimePartConfig::~OAIGooglePrivacyDlpV2TimePartConfig() {}

void OAIGooglePrivacyDlpV2TimePartConfig::initializeModel() {

    m_part_to_extract_isSet = false;
    m_part_to_extract_isValid = false;
}

void OAIGooglePrivacyDlpV2TimePartConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2TimePartConfig::fromJsonObject(QJsonObject json) {

    m_part_to_extract_isValid = ::OpenAPI::fromJsonValue(m_part_to_extract, json[QString("partToExtract")]);
    m_part_to_extract_isSet = !json[QString("partToExtract")].isNull() && m_part_to_extract_isValid;
}

QString OAIGooglePrivacyDlpV2TimePartConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2TimePartConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_part_to_extract_isSet) {
        obj.insert(QString("partToExtract"), ::OpenAPI::toJsonValue(m_part_to_extract));
    }
    return obj;
}

QString OAIGooglePrivacyDlpV2TimePartConfig::getPartToExtract() const {
    return m_part_to_extract;
}
void OAIGooglePrivacyDlpV2TimePartConfig::setPartToExtract(const QString &part_to_extract) {
    m_part_to_extract = part_to_extract;
    m_part_to_extract_isSet = true;
}

bool OAIGooglePrivacyDlpV2TimePartConfig::is_part_to_extract_Set() const{
    return m_part_to_extract_isSet;
}

bool OAIGooglePrivacyDlpV2TimePartConfig::is_part_to_extract_Valid() const{
    return m_part_to_extract_isValid;
}

bool OAIGooglePrivacyDlpV2TimePartConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_part_to_extract_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2TimePartConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
