/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2CloudStorageRegexFileSet.h
 *
 * Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in &#x60;include_regex&#x60; and do not match any items in &#x60;exclude_regex&#x60;. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input &#x60;{bucket_name: \&quot;mybucket\&quot;, include_regex: [\&quot;directory1/.*\&quot;], exclude_regex: [\&quot;directory1/excluded.*\&quot;]}&#x60;: * &#x60;gs://mybucket/directory1/myfile&#x60; will be included * &#x60;gs://mybucket/directory1/directory2/myfile&#x60; will be included (&#x60;.*&#x60; matches across &#x60;/&#x60;) * &#x60;gs://mybucket/directory0/directory1/myfile&#x60; will _not_ be included (the full path doesn&#39;t match any items in &#x60;include_regex&#x60;) * &#x60;gs://mybucket/directory1/excludedfile&#x60; will _not_ be included (the path matches an item in &#x60;exclude_regex&#x60;) If &#x60;include_regex&#x60; is left empty, it will match all files by default (this is equivalent to setting &#x60;include_regex: [\&quot;.*\&quot;]&#x60;). Some other common use cases: * &#x60;{bucket_name: \&quot;mybucket\&quot;, exclude_regex: [\&quot;.*\\.pdf\&quot;]}&#x60; will include all files in &#x60;mybucket&#x60; except for .pdf files * &#x60;{bucket_name: \&quot;mybucket\&quot;, include_regex: [\&quot;directory/[^/]+\&quot;]}&#x60; will include all files directly under &#x60;gs://mybucket/directory/&#x60;, without matching across &#x60;/&#x60;
 */

#ifndef OAIGooglePrivacyDlpV2CloudStorageRegexFileSet_H
#define OAIGooglePrivacyDlpV2CloudStorageRegexFileSet_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGooglePrivacyDlpV2CloudStorageRegexFileSet : public OAIObject {
public:
    OAIGooglePrivacyDlpV2CloudStorageRegexFileSet();
    OAIGooglePrivacyDlpV2CloudStorageRegexFileSet(QString json);
    ~OAIGooglePrivacyDlpV2CloudStorageRegexFileSet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBucketName() const;
    void setBucketName(const QString &bucket_name);
    bool is_bucket_name_Set() const;
    bool is_bucket_name_Valid() const;

    QList<QString> getExcludeRegex() const;
    void setExcludeRegex(const QList<QString> &exclude_regex);
    bool is_exclude_regex_Set() const;
    bool is_exclude_regex_Valid() const;

    QList<QString> getIncludeRegex() const;
    void setIncludeRegex(const QList<QString> &include_regex);
    bool is_include_regex_Set() const;
    bool is_include_regex_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bucket_name;
    bool m_bucket_name_isSet;
    bool m_bucket_name_isValid;

    QList<QString> m_exclude_regex;
    bool m_exclude_regex_isSet;
    bool m_exclude_regex_isValid;

    QList<QString> m_include_regex;
    bool m_include_regex_isSet;
    bool m_include_regex_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2CloudStorageRegexFileSet)

#endif // OAIGooglePrivacyDlpV2CloudStorageRegexFileSet_H
