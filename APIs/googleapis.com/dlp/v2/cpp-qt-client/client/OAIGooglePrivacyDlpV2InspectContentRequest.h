/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2InspectContentRequest.h
 *
 * Request to search for potentially sensitive info in a ContentItem.
 */

#ifndef OAIGooglePrivacyDlpV2InspectContentRequest_H
#define OAIGooglePrivacyDlpV2InspectContentRequest_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2ContentItem.h"
#include "OAIGooglePrivacyDlpV2InspectConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2InspectConfig;
class OAIGooglePrivacyDlpV2ContentItem;

class OAIGooglePrivacyDlpV2InspectContentRequest : public OAIObject {
public:
    OAIGooglePrivacyDlpV2InspectContentRequest();
    OAIGooglePrivacyDlpV2InspectContentRequest(QString json);
    ~OAIGooglePrivacyDlpV2InspectContentRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2InspectConfig getInspectConfig() const;
    void setInspectConfig(const OAIGooglePrivacyDlpV2InspectConfig &inspect_config);
    bool is_inspect_config_Set() const;
    bool is_inspect_config_Valid() const;

    QString getInspectTemplateName() const;
    void setInspectTemplateName(const QString &inspect_template_name);
    bool is_inspect_template_name_Set() const;
    bool is_inspect_template_name_Valid() const;

    OAIGooglePrivacyDlpV2ContentItem getItem() const;
    void setItem(const OAIGooglePrivacyDlpV2ContentItem &item);
    bool is_item_Set() const;
    bool is_item_Valid() const;

    QString getLocationId() const;
    void setLocationId(const QString &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2InspectConfig m_inspect_config;
    bool m_inspect_config_isSet;
    bool m_inspect_config_isValid;

    QString m_inspect_template_name;
    bool m_inspect_template_name_isSet;
    bool m_inspect_template_name_isValid;

    OAIGooglePrivacyDlpV2ContentItem m_item;
    bool m_item_isSet;
    bool m_item_isValid;

    QString m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2InspectContentRequest)

#endif // OAIGooglePrivacyDlpV2InspectContentRequest_H
