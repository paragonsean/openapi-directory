/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2HybridFindingDetails.h
 *
 * Populate to associate additional data with each finding.
 */

#ifndef OAIGooglePrivacyDlpV2HybridFindingDetails_H
#define OAIGooglePrivacyDlpV2HybridFindingDetails_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2Container.h"
#include "OAIGooglePrivacyDlpV2TableOptions.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2Container;
class OAIGooglePrivacyDlpV2TableOptions;

class OAIGooglePrivacyDlpV2HybridFindingDetails : public OAIObject {
public:
    OAIGooglePrivacyDlpV2HybridFindingDetails();
    OAIGooglePrivacyDlpV2HybridFindingDetails(QString json);
    ~OAIGooglePrivacyDlpV2HybridFindingDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2Container getContainerDetails() const;
    void setContainerDetails(const OAIGooglePrivacyDlpV2Container &container_details);
    bool is_container_details_Set() const;
    bool is_container_details_Valid() const;

    QString getFileOffset() const;
    void setFileOffset(const QString &file_offset);
    bool is_file_offset_Set() const;
    bool is_file_offset_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getRowOffset() const;
    void setRowOffset(const QString &row_offset);
    bool is_row_offset_Set() const;
    bool is_row_offset_Valid() const;

    OAIGooglePrivacyDlpV2TableOptions getTableOptions() const;
    void setTableOptions(const OAIGooglePrivacyDlpV2TableOptions &table_options);
    bool is_table_options_Set() const;
    bool is_table_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2Container m_container_details;
    bool m_container_details_isSet;
    bool m_container_details_isValid;

    QString m_file_offset;
    bool m_file_offset_isSet;
    bool m_file_offset_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_row_offset;
    bool m_row_offset_isSet;
    bool m_row_offset_isValid;

    OAIGooglePrivacyDlpV2TableOptions m_table_options;
    bool m_table_options_isSet;
    bool m_table_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2HybridFindingDetails)

#endif // OAIGooglePrivacyDlpV2HybridFindingDetails_H
