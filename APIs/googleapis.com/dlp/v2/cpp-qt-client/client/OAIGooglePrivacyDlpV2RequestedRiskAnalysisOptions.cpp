/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::~OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions() {}

void OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::initializeModel() {

    m_job_config_isSet = false;
    m_job_config_isValid = false;
}

void OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::fromJsonObject(QJsonObject json) {

    m_job_config_isValid = ::OpenAPI::fromJsonValue(m_job_config, json[QString("jobConfig")]);
    m_job_config_isSet = !json[QString("jobConfig")].isNull() && m_job_config_isValid;
}

QString OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_job_config.isSet()) {
        obj.insert(QString("jobConfig"), ::OpenAPI::toJsonValue(m_job_config));
    }
    return obj;
}

OAIGooglePrivacyDlpV2RiskAnalysisJobConfig OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::getJobConfig() const {
    return m_job_config;
}
void OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::setJobConfig(const OAIGooglePrivacyDlpV2RiskAnalysisJobConfig &job_config) {
    m_job_config = job_config;
    m_job_config_isSet = true;
}

bool OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::is_job_config_Set() const{
    return m_job_config_isSet;
}

bool OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::is_job_config_Valid() const{
    return m_job_config_isValid;
}

bool OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2RequestedRiskAnalysisOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
