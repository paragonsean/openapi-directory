/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2AuxiliaryTable.h
 *
 * An auxiliary table contains statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
 */

#ifndef OAIGooglePrivacyDlpV2AuxiliaryTable_H
#define OAIGooglePrivacyDlpV2AuxiliaryTable_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2BigQueryTable.h"
#include "OAIGooglePrivacyDlpV2FieldId.h"
#include "OAIGooglePrivacyDlpV2QuasiIdField.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2QuasiIdField;
class OAIGooglePrivacyDlpV2FieldId;
class OAIGooglePrivacyDlpV2BigQueryTable;

class OAIGooglePrivacyDlpV2AuxiliaryTable : public OAIObject {
public:
    OAIGooglePrivacyDlpV2AuxiliaryTable();
    OAIGooglePrivacyDlpV2AuxiliaryTable(QString json);
    ~OAIGooglePrivacyDlpV2AuxiliaryTable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGooglePrivacyDlpV2QuasiIdField> getQuasiIds() const;
    void setQuasiIds(const QList<OAIGooglePrivacyDlpV2QuasiIdField> &quasi_ids);
    bool is_quasi_ids_Set() const;
    bool is_quasi_ids_Valid() const;

    OAIGooglePrivacyDlpV2FieldId getRelativeFrequency() const;
    void setRelativeFrequency(const OAIGooglePrivacyDlpV2FieldId &relative_frequency);
    bool is_relative_frequency_Set() const;
    bool is_relative_frequency_Valid() const;

    OAIGooglePrivacyDlpV2BigQueryTable getTable() const;
    void setTable(const OAIGooglePrivacyDlpV2BigQueryTable &table);
    bool is_table_Set() const;
    bool is_table_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGooglePrivacyDlpV2QuasiIdField> m_quasi_ids;
    bool m_quasi_ids_isSet;
    bool m_quasi_ids_isValid;

    OAIGooglePrivacyDlpV2FieldId m_relative_frequency;
    bool m_relative_frequency_isSet;
    bool m_relative_frequency_isValid;

    OAIGooglePrivacyDlpV2BigQueryTable m_table;
    bool m_table_isSet;
    bool m_table_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2AuxiliaryTable)

#endif // OAIGooglePrivacyDlpV2AuxiliaryTable_H
