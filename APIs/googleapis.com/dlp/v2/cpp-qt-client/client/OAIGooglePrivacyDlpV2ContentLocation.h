/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2ContentLocation.h
 *
 * Precise location of the finding within a document, record, image, or metadata container.
 */

#ifndef OAIGooglePrivacyDlpV2ContentLocation_H
#define OAIGooglePrivacyDlpV2ContentLocation_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2DocumentLocation.h"
#include "OAIGooglePrivacyDlpV2ImageLocation.h"
#include "OAIGooglePrivacyDlpV2MetadataLocation.h"
#include "OAIGooglePrivacyDlpV2RecordLocation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2DocumentLocation;
class OAIGooglePrivacyDlpV2ImageLocation;
class OAIGooglePrivacyDlpV2MetadataLocation;
class OAIGooglePrivacyDlpV2RecordLocation;

class OAIGooglePrivacyDlpV2ContentLocation : public OAIObject {
public:
    OAIGooglePrivacyDlpV2ContentLocation();
    OAIGooglePrivacyDlpV2ContentLocation(QString json);
    ~OAIGooglePrivacyDlpV2ContentLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContainerName() const;
    void setContainerName(const QString &container_name);
    bool is_container_name_Set() const;
    bool is_container_name_Valid() const;

    QString getContainerTimestamp() const;
    void setContainerTimestamp(const QString &container_timestamp);
    bool is_container_timestamp_Set() const;
    bool is_container_timestamp_Valid() const;

    QString getContainerVersion() const;
    void setContainerVersion(const QString &container_version);
    bool is_container_version_Set() const;
    bool is_container_version_Valid() const;

    OAIGooglePrivacyDlpV2DocumentLocation getDocumentLocation() const;
    void setDocumentLocation(const OAIGooglePrivacyDlpV2DocumentLocation &document_location);
    bool is_document_location_Set() const;
    bool is_document_location_Valid() const;

    OAIGooglePrivacyDlpV2ImageLocation getImageLocation() const;
    void setImageLocation(const OAIGooglePrivacyDlpV2ImageLocation &image_location);
    bool is_image_location_Set() const;
    bool is_image_location_Valid() const;

    OAIGooglePrivacyDlpV2MetadataLocation getMetadataLocation() const;
    void setMetadataLocation(const OAIGooglePrivacyDlpV2MetadataLocation &metadata_location);
    bool is_metadata_location_Set() const;
    bool is_metadata_location_Valid() const;

    OAIGooglePrivacyDlpV2RecordLocation getRecordLocation() const;
    void setRecordLocation(const OAIGooglePrivacyDlpV2RecordLocation &record_location);
    bool is_record_location_Set() const;
    bool is_record_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_container_name;
    bool m_container_name_isSet;
    bool m_container_name_isValid;

    QString m_container_timestamp;
    bool m_container_timestamp_isSet;
    bool m_container_timestamp_isValid;

    QString m_container_version;
    bool m_container_version_isSet;
    bool m_container_version_isValid;

    OAIGooglePrivacyDlpV2DocumentLocation m_document_location;
    bool m_document_location_isSet;
    bool m_document_location_isValid;

    OAIGooglePrivacyDlpV2ImageLocation m_image_location;
    bool m_image_location_isSet;
    bool m_image_location_isValid;

    OAIGooglePrivacyDlpV2MetadataLocation m_metadata_location;
    bool m_metadata_location_isSet;
    bool m_metadata_location_isValid;

    OAIGooglePrivacyDlpV2RecordLocation m_record_location;
    bool m_record_location_isSet;
    bool m_record_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2ContentLocation)

#endif // OAIGooglePrivacyDlpV2ContentLocation_H
