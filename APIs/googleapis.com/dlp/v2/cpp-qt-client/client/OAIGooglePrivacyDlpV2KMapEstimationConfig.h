/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2KMapEstimationConfig.h
 *
 * Reidentifiability metric. This corresponds to a risk model similar to what is called \&quot;journalist risk\&quot; in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
 */

#ifndef OAIGooglePrivacyDlpV2KMapEstimationConfig_H
#define OAIGooglePrivacyDlpV2KMapEstimationConfig_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2AuxiliaryTable.h"
#include "OAIGooglePrivacyDlpV2TaggedField.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2AuxiliaryTable;
class OAIGooglePrivacyDlpV2TaggedField;

class OAIGooglePrivacyDlpV2KMapEstimationConfig : public OAIObject {
public:
    OAIGooglePrivacyDlpV2KMapEstimationConfig();
    OAIGooglePrivacyDlpV2KMapEstimationConfig(QString json);
    ~OAIGooglePrivacyDlpV2KMapEstimationConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGooglePrivacyDlpV2AuxiliaryTable> getAuxiliaryTables() const;
    void setAuxiliaryTables(const QList<OAIGooglePrivacyDlpV2AuxiliaryTable> &auxiliary_tables);
    bool is_auxiliary_tables_Set() const;
    bool is_auxiliary_tables_Valid() const;

    QList<OAIGooglePrivacyDlpV2TaggedField> getQuasiIds() const;
    void setQuasiIds(const QList<OAIGooglePrivacyDlpV2TaggedField> &quasi_ids);
    bool is_quasi_ids_Set() const;
    bool is_quasi_ids_Valid() const;

    QString getRegionCode() const;
    void setRegionCode(const QString &region_code);
    bool is_region_code_Set() const;
    bool is_region_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGooglePrivacyDlpV2AuxiliaryTable> m_auxiliary_tables;
    bool m_auxiliary_tables_isSet;
    bool m_auxiliary_tables_isValid;

    QList<OAIGooglePrivacyDlpV2TaggedField> m_quasi_ids;
    bool m_quasi_ids_isSet;
    bool m_quasi_ids_isValid;

    QString m_region_code;
    bool m_region_code_isSet;
    bool m_region_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2KMapEstimationConfig)

#endif // OAIGooglePrivacyDlpV2KMapEstimationConfig_H
