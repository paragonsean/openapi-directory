/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2DeidentifyConfig.h
 *
 * The configuration that controls how the data will change.
 */

#ifndef OAIGooglePrivacyDlpV2DeidentifyConfig_H
#define OAIGooglePrivacyDlpV2DeidentifyConfig_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2ImageTransformations.h"
#include "OAIGooglePrivacyDlpV2InfoTypeTransformations.h"
#include "OAIGooglePrivacyDlpV2RecordTransformations.h"
#include "OAIGooglePrivacyDlpV2TransformationErrorHandling.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2ImageTransformations;
class OAIGooglePrivacyDlpV2InfoTypeTransformations;
class OAIGooglePrivacyDlpV2RecordTransformations;
class OAIGooglePrivacyDlpV2TransformationErrorHandling;

class OAIGooglePrivacyDlpV2DeidentifyConfig : public OAIObject {
public:
    OAIGooglePrivacyDlpV2DeidentifyConfig();
    OAIGooglePrivacyDlpV2DeidentifyConfig(QString json);
    ~OAIGooglePrivacyDlpV2DeidentifyConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGooglePrivacyDlpV2ImageTransformations getImageTransformations() const;
    void setImageTransformations(const OAIGooglePrivacyDlpV2ImageTransformations &image_transformations);
    bool is_image_transformations_Set() const;
    bool is_image_transformations_Valid() const;

    OAIGooglePrivacyDlpV2InfoTypeTransformations getInfoTypeTransformations() const;
    void setInfoTypeTransformations(const OAIGooglePrivacyDlpV2InfoTypeTransformations &info_type_transformations);
    bool is_info_type_transformations_Set() const;
    bool is_info_type_transformations_Valid() const;

    OAIGooglePrivacyDlpV2RecordTransformations getRecordTransformations() const;
    void setRecordTransformations(const OAIGooglePrivacyDlpV2RecordTransformations &record_transformations);
    bool is_record_transformations_Set() const;
    bool is_record_transformations_Valid() const;

    OAIGooglePrivacyDlpV2TransformationErrorHandling getTransformationErrorHandling() const;
    void setTransformationErrorHandling(const OAIGooglePrivacyDlpV2TransformationErrorHandling &transformation_error_handling);
    bool is_transformation_error_handling_Set() const;
    bool is_transformation_error_handling_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGooglePrivacyDlpV2ImageTransformations m_image_transformations;
    bool m_image_transformations_isSet;
    bool m_image_transformations_isValid;

    OAIGooglePrivacyDlpV2InfoTypeTransformations m_info_type_transformations;
    bool m_info_type_transformations_isSet;
    bool m_info_type_transformations_isValid;

    OAIGooglePrivacyDlpV2RecordTransformations m_record_transformations;
    bool m_record_transformations_isSet;
    bool m_record_transformations_isValid;

    OAIGooglePrivacyDlpV2TransformationErrorHandling m_transformation_error_handling;
    bool m_transformation_error_handling_isSet;
    bool m_transformation_error_handling_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2DeidentifyConfig)

#endif // OAIGooglePrivacyDlpV2DeidentifyConfig_H
