/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest() {
    this->initializeModel();
}

OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::~OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest() {}

void OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::initializeModel() {

    m_config_isSet = false;
    m_config_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_stored_info_type_id_isSet = false;
    m_stored_info_type_id_isValid = false;
}

void OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::fromJsonObject(QJsonObject json) {

    m_config_isValid = ::OpenAPI::fromJsonValue(m_config, json[QString("config")]);
    m_config_isSet = !json[QString("config")].isNull() && m_config_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("locationId")]);
    m_location_id_isSet = !json[QString("locationId")].isNull() && m_location_id_isValid;

    m_stored_info_type_id_isValid = ::OpenAPI::fromJsonValue(m_stored_info_type_id, json[QString("storedInfoTypeId")]);
    m_stored_info_type_id_isSet = !json[QString("storedInfoTypeId")].isNull() && m_stored_info_type_id_isValid;
}

QString OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_config.isSet()) {
        obj.insert(QString("config"), ::OpenAPI::toJsonValue(m_config));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("locationId"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_stored_info_type_id_isSet) {
        obj.insert(QString("storedInfoTypeId"), ::OpenAPI::toJsonValue(m_stored_info_type_id));
    }
    return obj;
}

OAIGooglePrivacyDlpV2StoredInfoTypeConfig OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::getConfig() const {
    return m_config;
}
void OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::setConfig(const OAIGooglePrivacyDlpV2StoredInfoTypeConfig &config) {
    m_config = config;
    m_config_isSet = true;
}

bool OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::is_config_Set() const{
    return m_config_isSet;
}

bool OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::is_config_Valid() const{
    return m_config_isValid;
}

QString OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::getLocationId() const {
    return m_location_id;
}
void OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::setLocationId(const QString &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::is_location_id_Valid() const{
    return m_location_id_isValid;
}

QString OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::getStoredInfoTypeId() const {
    return m_stored_info_type_id;
}
void OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::setStoredInfoTypeId(const QString &stored_info_type_id) {
    m_stored_info_type_id = stored_info_type_id;
    m_stored_info_type_id_isSet = true;
}

bool OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::is_stored_info_type_id_Set() const{
    return m_stored_info_type_id_isSet;
}

bool OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::is_stored_info_type_id_Valid() const{
    return m_stored_info_type_id_isValid;
}

bool OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stored_info_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePrivacyDlpV2CreateStoredInfoTypeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
