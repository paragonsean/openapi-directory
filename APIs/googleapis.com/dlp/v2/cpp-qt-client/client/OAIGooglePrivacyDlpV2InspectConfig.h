/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2InspectConfig.h
 *
 * Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
 */

#ifndef OAIGooglePrivacyDlpV2InspectConfig_H
#define OAIGooglePrivacyDlpV2InspectConfig_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2CustomInfoType.h"
#include "OAIGooglePrivacyDlpV2FindingLimits.h"
#include "OAIGooglePrivacyDlpV2InfoType.h"
#include "OAIGooglePrivacyDlpV2InfoTypeLikelihood.h"
#include "OAIGooglePrivacyDlpV2InspectionRuleSet.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2CustomInfoType;
class OAIGooglePrivacyDlpV2InfoType;
class OAIGooglePrivacyDlpV2FindingLimits;
class OAIGooglePrivacyDlpV2InfoTypeLikelihood;
class OAIGooglePrivacyDlpV2InspectionRuleSet;

class OAIGooglePrivacyDlpV2InspectConfig : public OAIObject {
public:
    OAIGooglePrivacyDlpV2InspectConfig();
    OAIGooglePrivacyDlpV2InspectConfig(QString json);
    ~OAIGooglePrivacyDlpV2InspectConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getContentOptions() const;
    void setContentOptions(const QList<QString> &content_options);
    bool is_content_options_Set() const;
    bool is_content_options_Valid() const;

    QList<OAIGooglePrivacyDlpV2CustomInfoType> getCustomInfoTypes() const;
    void setCustomInfoTypes(const QList<OAIGooglePrivacyDlpV2CustomInfoType> &custom_info_types);
    bool is_custom_info_types_Set() const;
    bool is_custom_info_types_Valid() const;

    bool isExcludeInfoTypes() const;
    void setExcludeInfoTypes(const bool &exclude_info_types);
    bool is_exclude_info_types_Set() const;
    bool is_exclude_info_types_Valid() const;

    bool isIncludeQuote() const;
    void setIncludeQuote(const bool &include_quote);
    bool is_include_quote_Set() const;
    bool is_include_quote_Valid() const;

    QList<OAIGooglePrivacyDlpV2InfoType> getInfoTypes() const;
    void setInfoTypes(const QList<OAIGooglePrivacyDlpV2InfoType> &info_types);
    bool is_info_types_Set() const;
    bool is_info_types_Valid() const;

    OAIGooglePrivacyDlpV2FindingLimits getLimits() const;
    void setLimits(const OAIGooglePrivacyDlpV2FindingLimits &limits);
    bool is_limits_Set() const;
    bool is_limits_Valid() const;

    QString getMinLikelihood() const;
    void setMinLikelihood(const QString &min_likelihood);
    bool is_min_likelihood_Set() const;
    bool is_min_likelihood_Valid() const;

    QList<OAIGooglePrivacyDlpV2InfoTypeLikelihood> getMinLikelihoodPerInfoType() const;
    void setMinLikelihoodPerInfoType(const QList<OAIGooglePrivacyDlpV2InfoTypeLikelihood> &min_likelihood_per_info_type);
    bool is_min_likelihood_per_info_type_Set() const;
    bool is_min_likelihood_per_info_type_Valid() const;

    QList<OAIGooglePrivacyDlpV2InspectionRuleSet> getRuleSet() const;
    void setRuleSet(const QList<OAIGooglePrivacyDlpV2InspectionRuleSet> &rule_set);
    bool is_rule_set_Set() const;
    bool is_rule_set_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_content_options;
    bool m_content_options_isSet;
    bool m_content_options_isValid;

    QList<OAIGooglePrivacyDlpV2CustomInfoType> m_custom_info_types;
    bool m_custom_info_types_isSet;
    bool m_custom_info_types_isValid;

    bool m_exclude_info_types;
    bool m_exclude_info_types_isSet;
    bool m_exclude_info_types_isValid;

    bool m_include_quote;
    bool m_include_quote_isSet;
    bool m_include_quote_isValid;

    QList<OAIGooglePrivacyDlpV2InfoType> m_info_types;
    bool m_info_types_isSet;
    bool m_info_types_isValid;

    OAIGooglePrivacyDlpV2FindingLimits m_limits;
    bool m_limits_isSet;
    bool m_limits_isValid;

    QString m_min_likelihood;
    bool m_min_likelihood_isSet;
    bool m_min_likelihood_isValid;

    QList<OAIGooglePrivacyDlpV2InfoTypeLikelihood> m_min_likelihood_per_info_type;
    bool m_min_likelihood_per_info_type_isSet;
    bool m_min_likelihood_per_info_type_isValid;

    QList<OAIGooglePrivacyDlpV2InspectionRuleSet> m_rule_set;
    bool m_rule_set_isSet;
    bool m_rule_set_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2InspectConfig)

#endif // OAIGooglePrivacyDlpV2InspectConfig_H
