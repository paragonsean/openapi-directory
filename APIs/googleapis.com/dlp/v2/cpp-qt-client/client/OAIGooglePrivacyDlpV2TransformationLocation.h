/**
 * Sensitive Data Protection (DLP)
 * Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGooglePrivacyDlpV2TransformationLocation.h
 *
 * Specifies the location of a transformation.
 */

#ifndef OAIGooglePrivacyDlpV2TransformationLocation_H
#define OAIGooglePrivacyDlpV2TransformationLocation_H

#include <QJsonObject>

#include "OAIGooglePrivacyDlpV2RecordTransformation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGooglePrivacyDlpV2RecordTransformation;

class OAIGooglePrivacyDlpV2TransformationLocation : public OAIObject {
public:
    OAIGooglePrivacyDlpV2TransformationLocation();
    OAIGooglePrivacyDlpV2TransformationLocation(QString json);
    ~OAIGooglePrivacyDlpV2TransformationLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContainerType() const;
    void setContainerType(const QString &container_type);
    bool is_container_type_Set() const;
    bool is_container_type_Valid() const;

    QString getFindingId() const;
    void setFindingId(const QString &finding_id);
    bool is_finding_id_Set() const;
    bool is_finding_id_Valid() const;

    OAIGooglePrivacyDlpV2RecordTransformation getRecordTransformation() const;
    void setRecordTransformation(const OAIGooglePrivacyDlpV2RecordTransformation &record_transformation);
    bool is_record_transformation_Set() const;
    bool is_record_transformation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_container_type;
    bool m_container_type_isSet;
    bool m_container_type_isValid;

    QString m_finding_id;
    bool m_finding_id_isSet;
    bool m_finding_id_isValid;

    OAIGooglePrivacyDlpV2RecordTransformation m_record_transformation;
    bool m_record_transformation_isSet;
    bool m_record_transformation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGooglePrivacyDlpV2TransformationLocation)

#endif // OAIGooglePrivacyDlpV2TransformationLocation_H
