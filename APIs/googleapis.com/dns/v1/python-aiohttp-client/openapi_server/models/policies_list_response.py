# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy import Policy
from openapi_server.models.response_header import ResponseHeader
from openapi_server import util


class PoliciesListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, header: ResponseHeader=None, kind: str='dns#policiesListResponse', next_page_token: str=None, policies: List[Policy]=None):
        """PoliciesListResponse - a model defined in OpenAPI

        :param header: The header of this PoliciesListResponse.
        :param kind: The kind of this PoliciesListResponse.
        :param next_page_token: The next_page_token of this PoliciesListResponse.
        :param policies: The policies of this PoliciesListResponse.
        """
        self.openapi_types = {
            'header': ResponseHeader,
            'kind': str,
            'next_page_token': str,
            'policies': List[Policy]
        }

        self.attribute_map = {
            'header': 'header',
            'kind': 'kind',
            'next_page_token': 'nextPageToken',
            'policies': 'policies'
        }

        self._header = header
        self._kind = kind
        self._next_page_token = next_page_token
        self._policies = policies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PoliciesListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PoliciesListResponse of this PoliciesListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def header(self):
        """Gets the header of this PoliciesListResponse.


        :return: The header of this PoliciesListResponse.
        :rtype: ResponseHeader
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this PoliciesListResponse.


        :param header: The header of this PoliciesListResponse.
        :type header: ResponseHeader
        """

        self._header = header

    @property
    def kind(self):
        """Gets the kind of this PoliciesListResponse.

        Type of resource.

        :return: The kind of this PoliciesListResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PoliciesListResponse.

        Type of resource.

        :param kind: The kind of this PoliciesListResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this PoliciesListResponse.

        The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.

        :return: The next_page_token of this PoliciesListResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this PoliciesListResponse.

        The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.

        :param next_page_token: The next_page_token of this PoliciesListResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def policies(self):
        """Gets the policies of this PoliciesListResponse.

        The policy resources.

        :return: The policies of this PoliciesListResponse.
        :rtype: List[Policy]
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this PoliciesListResponse.

        The policy resources.

        :param policies: The policies of this PoliciesListResponse.
        :type policies: List[Policy]
        """

        self._policies = policies
