# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.managed_zone_service_directory_config_namespace import ManagedZoneServiceDirectoryConfigNamespace
from openapi_server import util


class ManagedZoneServiceDirectoryConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str='dns#managedZoneServiceDirectoryConfig', namespace: ManagedZoneServiceDirectoryConfigNamespace=None):
        """ManagedZoneServiceDirectoryConfig - a model defined in OpenAPI

        :param kind: The kind of this ManagedZoneServiceDirectoryConfig.
        :param namespace: The namespace of this ManagedZoneServiceDirectoryConfig.
        """
        self.openapi_types = {
            'kind': str,
            'namespace': ManagedZoneServiceDirectoryConfigNamespace
        }

        self.attribute_map = {
            'kind': 'kind',
            'namespace': 'namespace'
        }

        self._kind = kind
        self._namespace = namespace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedZoneServiceDirectoryConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedZoneServiceDirectoryConfig of this ManagedZoneServiceDirectoryConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this ManagedZoneServiceDirectoryConfig.


        :return: The kind of this ManagedZoneServiceDirectoryConfig.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ManagedZoneServiceDirectoryConfig.


        :param kind: The kind of this ManagedZoneServiceDirectoryConfig.
        :type kind: str
        """

        self._kind = kind

    @property
    def namespace(self):
        """Gets the namespace of this ManagedZoneServiceDirectoryConfig.


        :return: The namespace of this ManagedZoneServiceDirectoryConfig.
        :rtype: ManagedZoneServiceDirectoryConfigNamespace
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this ManagedZoneServiceDirectoryConfig.


        :param namespace: The namespace of this ManagedZoneServiceDirectoryConfig.
        :type namespace: ManagedZoneServiceDirectoryConfigNamespace
        """

        self._namespace = namespace
