# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.change import Change
from openapi_server.models.response_header import ResponseHeader
from openapi_server import util


class ChangesListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changes: List[Change]=None, header: ResponseHeader=None, kind: str='dns#changesListResponse', next_page_token: str=None):
        """ChangesListResponse - a model defined in OpenAPI

        :param changes: The changes of this ChangesListResponse.
        :param header: The header of this ChangesListResponse.
        :param kind: The kind of this ChangesListResponse.
        :param next_page_token: The next_page_token of this ChangesListResponse.
        """
        self.openapi_types = {
            'changes': List[Change],
            'header': ResponseHeader,
            'kind': str,
            'next_page_token': str
        }

        self.attribute_map = {
            'changes': 'changes',
            'header': 'header',
            'kind': 'kind',
            'next_page_token': 'nextPageToken'
        }

        self._changes = changes
        self._header = header
        self._kind = kind
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangesListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangesListResponse of this ChangesListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changes(self):
        """Gets the changes of this ChangesListResponse.

        The requested changes.

        :return: The changes of this ChangesListResponse.
        :rtype: List[Change]
        """
        return self._changes

    @changes.setter
    def changes(self, changes):
        """Sets the changes of this ChangesListResponse.

        The requested changes.

        :param changes: The changes of this ChangesListResponse.
        :type changes: List[Change]
        """

        self._changes = changes

    @property
    def header(self):
        """Gets the header of this ChangesListResponse.


        :return: The header of this ChangesListResponse.
        :rtype: ResponseHeader
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this ChangesListResponse.


        :param header: The header of this ChangesListResponse.
        :type header: ResponseHeader
        """

        self._header = header

    @property
    def kind(self):
        """Gets the kind of this ChangesListResponse.

        Type of resource.

        :return: The kind of this ChangesListResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ChangesListResponse.

        Type of resource.

        :param kind: The kind of this ChangesListResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ChangesListResponse.

        The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a \"snapshot\" of collections larger than the maximum page size.

        :return: The next_page_token of this ChangesListResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ChangesListResponse.

        The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a \"snapshot\" of collections larger than the maximum page size.

        :param next_page_token: The next_page_token of this ChangesListResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
