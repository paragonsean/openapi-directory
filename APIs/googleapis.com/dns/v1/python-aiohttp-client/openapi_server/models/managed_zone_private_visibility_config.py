# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.managed_zone_private_visibility_config_gke_cluster import ManagedZonePrivateVisibilityConfigGKECluster
from openapi_server.models.managed_zone_private_visibility_config_network import ManagedZonePrivateVisibilityConfigNetwork
from openapi_server import util


class ManagedZonePrivateVisibilityConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gke_clusters: List[ManagedZonePrivateVisibilityConfigGKECluster]=None, kind: str='dns#managedZonePrivateVisibilityConfig', networks: List[ManagedZonePrivateVisibilityConfigNetwork]=None):
        """ManagedZonePrivateVisibilityConfig - a model defined in OpenAPI

        :param gke_clusters: The gke_clusters of this ManagedZonePrivateVisibilityConfig.
        :param kind: The kind of this ManagedZonePrivateVisibilityConfig.
        :param networks: The networks of this ManagedZonePrivateVisibilityConfig.
        """
        self.openapi_types = {
            'gke_clusters': List[ManagedZonePrivateVisibilityConfigGKECluster],
            'kind': str,
            'networks': List[ManagedZonePrivateVisibilityConfigNetwork]
        }

        self.attribute_map = {
            'gke_clusters': 'gkeClusters',
            'kind': 'kind',
            'networks': 'networks'
        }

        self._gke_clusters = gke_clusters
        self._kind = kind
        self._networks = networks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedZonePrivateVisibilityConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedZonePrivateVisibilityConfig of this ManagedZonePrivateVisibilityConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gke_clusters(self):
        """Gets the gke_clusters of this ManagedZonePrivateVisibilityConfig.

        The list of Google Kubernetes Engine clusters that can see this zone.

        :return: The gke_clusters of this ManagedZonePrivateVisibilityConfig.
        :rtype: List[ManagedZonePrivateVisibilityConfigGKECluster]
        """
        return self._gke_clusters

    @gke_clusters.setter
    def gke_clusters(self, gke_clusters):
        """Sets the gke_clusters of this ManagedZonePrivateVisibilityConfig.

        The list of Google Kubernetes Engine clusters that can see this zone.

        :param gke_clusters: The gke_clusters of this ManagedZonePrivateVisibilityConfig.
        :type gke_clusters: List[ManagedZonePrivateVisibilityConfigGKECluster]
        """

        self._gke_clusters = gke_clusters

    @property
    def kind(self):
        """Gets the kind of this ManagedZonePrivateVisibilityConfig.


        :return: The kind of this ManagedZonePrivateVisibilityConfig.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ManagedZonePrivateVisibilityConfig.


        :param kind: The kind of this ManagedZonePrivateVisibilityConfig.
        :type kind: str
        """

        self._kind = kind

    @property
    def networks(self):
        """Gets the networks of this ManagedZonePrivateVisibilityConfig.

        The list of VPC networks that can see this zone.

        :return: The networks of this ManagedZonePrivateVisibilityConfig.
        :rtype: List[ManagedZonePrivateVisibilityConfigNetwork]
        """
        return self._networks

    @networks.setter
    def networks(self, networks):
        """Sets the networks of this ManagedZonePrivateVisibilityConfig.

        The list of VPC networks that can see this zone.

        :param networks: The networks of this ManagedZonePrivateVisibilityConfig.
        :type networks: List[ManagedZonePrivateVisibilityConfigNetwork]
        """

        self._networks = networks
