# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.managed_zone import ManagedZone
from openapi_server import util


class OperationManagedZoneContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, new_value: ManagedZone=None, old_value: ManagedZone=None):
        """OperationManagedZoneContext - a model defined in OpenAPI

        :param new_value: The new_value of this OperationManagedZoneContext.
        :param old_value: The old_value of this OperationManagedZoneContext.
        """
        self.openapi_types = {
            'new_value': ManagedZone,
            'old_value': ManagedZone
        }

        self.attribute_map = {
            'new_value': 'newValue',
            'old_value': 'oldValue'
        }

        self._new_value = new_value
        self._old_value = old_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperationManagedZoneContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperationManagedZoneContext of this OperationManagedZoneContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def new_value(self):
        """Gets the new_value of this OperationManagedZoneContext.


        :return: The new_value of this OperationManagedZoneContext.
        :rtype: ManagedZone
        """
        return self._new_value

    @new_value.setter
    def new_value(self, new_value):
        """Sets the new_value of this OperationManagedZoneContext.


        :param new_value: The new_value of this OperationManagedZoneContext.
        :type new_value: ManagedZone
        """

        self._new_value = new_value

    @property
    def old_value(self):
        """Gets the old_value of this OperationManagedZoneContext.


        :return: The old_value of this OperationManagedZoneContext.
        :rtype: ManagedZone
        """
        return self._old_value

    @old_value.setter
    def old_value(self, old_value):
        """Sets the old_value of this OperationManagedZoneContext.


        :param old_value: The old_value of this OperationManagedZoneContext.
        :type old_value: ManagedZone
        """

        self._old_value = old_value
