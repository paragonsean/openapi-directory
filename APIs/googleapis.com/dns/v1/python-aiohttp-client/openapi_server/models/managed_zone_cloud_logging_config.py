# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManagedZoneCloudLoggingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_logging: bool=None, kind: str='dns#managedZoneCloudLoggingConfig'):
        """ManagedZoneCloudLoggingConfig - a model defined in OpenAPI

        :param enable_logging: The enable_logging of this ManagedZoneCloudLoggingConfig.
        :param kind: The kind of this ManagedZoneCloudLoggingConfig.
        """
        self.openapi_types = {
            'enable_logging': bool,
            'kind': str
        }

        self.attribute_map = {
            'enable_logging': 'enableLogging',
            'kind': 'kind'
        }

        self._enable_logging = enable_logging
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedZoneCloudLoggingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedZoneCloudLoggingConfig of this ManagedZoneCloudLoggingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_logging(self):
        """Gets the enable_logging of this ManagedZoneCloudLoggingConfig.

        If set, enable query logging for this ManagedZone. False by default, making logging opt-in.

        :return: The enable_logging of this ManagedZoneCloudLoggingConfig.
        :rtype: bool
        """
        return self._enable_logging

    @enable_logging.setter
    def enable_logging(self, enable_logging):
        """Sets the enable_logging of this ManagedZoneCloudLoggingConfig.

        If set, enable query logging for this ManagedZone. False by default, making logging opt-in.

        :param enable_logging: The enable_logging of this ManagedZoneCloudLoggingConfig.
        :type enable_logging: bool
        """

        self._enable_logging = enable_logging

    @property
    def kind(self):
        """Gets the kind of this ManagedZoneCloudLoggingConfig.


        :return: The kind of this ManagedZoneCloudLoggingConfig.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ManagedZoneCloudLoggingConfig.


        :param kind: The kind of this ManagedZoneCloudLoggingConfig.
        :type kind: str
        """

        self._kind = kind
