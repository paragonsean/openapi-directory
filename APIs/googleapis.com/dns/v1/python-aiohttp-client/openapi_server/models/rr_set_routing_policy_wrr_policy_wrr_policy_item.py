# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rr_set_routing_policy_health_check_targets import RRSetRoutingPolicyHealthCheckTargets
from openapi_server import util


class RRSetRoutingPolicyWrrPolicyWrrPolicyItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health_checked_targets: RRSetRoutingPolicyHealthCheckTargets=None, kind: str='dns#rRSetRoutingPolicyWrrPolicyWrrPolicyItem', rrdatas: List[str]=None, signature_rrdatas: List[str]=None, weight: float=None):
        """RRSetRoutingPolicyWrrPolicyWrrPolicyItem - a model defined in OpenAPI

        :param health_checked_targets: The health_checked_targets of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :param kind: The kind of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :param rrdatas: The rrdatas of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :param signature_rrdatas: The signature_rrdatas of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :param weight: The weight of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        """
        self.openapi_types = {
            'health_checked_targets': RRSetRoutingPolicyHealthCheckTargets,
            'kind': str,
            'rrdatas': List[str],
            'signature_rrdatas': List[str],
            'weight': float
        }

        self.attribute_map = {
            'health_checked_targets': 'healthCheckedTargets',
            'kind': 'kind',
            'rrdatas': 'rrdatas',
            'signature_rrdatas': 'signatureRrdatas',
            'weight': 'weight'
        }

        self._health_checked_targets = health_checked_targets
        self._kind = kind
        self._rrdatas = rrdatas
        self._signature_rrdatas = signature_rrdatas
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RRSetRoutingPolicyWrrPolicyWrrPolicyItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RRSetRoutingPolicyWrrPolicyWrrPolicyItem of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health_checked_targets(self):
        """Gets the health_checked_targets of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.


        :return: The health_checked_targets of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :rtype: RRSetRoutingPolicyHealthCheckTargets
        """
        return self._health_checked_targets

    @health_checked_targets.setter
    def health_checked_targets(self, health_checked_targets):
        """Sets the health_checked_targets of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.


        :param health_checked_targets: The health_checked_targets of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :type health_checked_targets: RRSetRoutingPolicyHealthCheckTargets
        """

        self._health_checked_targets = health_checked_targets

    @property
    def kind(self):
        """Gets the kind of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.


        :return: The kind of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.


        :param kind: The kind of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :type kind: str
        """

        self._kind = kind

    @property
    def rrdatas(self):
        """Gets the rrdatas of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.


        :return: The rrdatas of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :rtype: List[str]
        """
        return self._rrdatas

    @rrdatas.setter
    def rrdatas(self, rrdatas):
        """Sets the rrdatas of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.


        :param rrdatas: The rrdatas of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :type rrdatas: List[str]
        """

        self._rrdatas = rrdatas

    @property
    def signature_rrdatas(self):
        """Gets the signature_rrdatas of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.

        DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 IP address per item.

        :return: The signature_rrdatas of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :rtype: List[str]
        """
        return self._signature_rrdatas

    @signature_rrdatas.setter
    def signature_rrdatas(self, signature_rrdatas):
        """Sets the signature_rrdatas of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.

        DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 IP address per item.

        :param signature_rrdatas: The signature_rrdatas of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :type signature_rrdatas: List[str]
        """

        self._signature_rrdatas = signature_rrdatas

    @property
    def weight(self):
        """Gets the weight of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.

        The weight corresponding to this WrrPolicyItem object. When multiple WrrPolicyItem objects are configured, the probability of returning an WrrPolicyItem object's data is proportional to its weight relative to the sum of weights configured for all items. This weight must be non-negative.

        :return: The weight of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.

        The weight corresponding to this WrrPolicyItem object. When multiple WrrPolicyItem objects are configured, the probability of returning an WrrPolicyItem object's data is proportional to its weight relative to the sum of weights configured for all items. This weight must be non-negative.

        :param weight: The weight of this RRSetRoutingPolicyWrrPolicyWrrPolicyItem.
        :type weight: float
        """

        self._weight = weight
