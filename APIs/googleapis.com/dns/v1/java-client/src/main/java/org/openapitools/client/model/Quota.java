/*
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DnsKeySpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Limits associated with a Project.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:19.858215-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Quota {
  public static final String SERIALIZED_NAME_DNS_KEYS_PER_MANAGED_ZONE = "dnsKeysPerManagedZone";
  @SerializedName(SERIALIZED_NAME_DNS_KEYS_PER_MANAGED_ZONE)
  private Integer dnsKeysPerManagedZone;

  public static final String SERIALIZED_NAME_GKE_CLUSTERS_PER_MANAGED_ZONE = "gkeClustersPerManagedZone";
  @SerializedName(SERIALIZED_NAME_GKE_CLUSTERS_PER_MANAGED_ZONE)
  private Integer gkeClustersPerManagedZone;

  public static final String SERIALIZED_NAME_GKE_CLUSTERS_PER_POLICY = "gkeClustersPerPolicy";
  @SerializedName(SERIALIZED_NAME_GKE_CLUSTERS_PER_POLICY)
  private Integer gkeClustersPerPolicy;

  public static final String SERIALIZED_NAME_GKE_CLUSTERS_PER_RESPONSE_POLICY = "gkeClustersPerResponsePolicy";
  @SerializedName(SERIALIZED_NAME_GKE_CLUSTERS_PER_RESPONSE_POLICY)
  private Integer gkeClustersPerResponsePolicy;

  public static final String SERIALIZED_NAME_ITEMS_PER_ROUTING_POLICY = "itemsPerRoutingPolicy";
  @SerializedName(SERIALIZED_NAME_ITEMS_PER_ROUTING_POLICY)
  private Integer itemsPerRoutingPolicy;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "dns#quota";

  public static final String SERIALIZED_NAME_MANAGED_ZONES = "managedZones";
  @SerializedName(SERIALIZED_NAME_MANAGED_ZONES)
  private Integer managedZones;

  public static final String SERIALIZED_NAME_MANAGED_ZONES_PER_GKE_CLUSTER = "managedZonesPerGkeCluster";
  @SerializedName(SERIALIZED_NAME_MANAGED_ZONES_PER_GKE_CLUSTER)
  private Integer managedZonesPerGkeCluster;

  public static final String SERIALIZED_NAME_MANAGED_ZONES_PER_NETWORK = "managedZonesPerNetwork";
  @SerializedName(SERIALIZED_NAME_MANAGED_ZONES_PER_NETWORK)
  private Integer managedZonesPerNetwork;

  public static final String SERIALIZED_NAME_NAMESERVERS_PER_DELEGATION = "nameserversPerDelegation";
  @SerializedName(SERIALIZED_NAME_NAMESERVERS_PER_DELEGATION)
  private Integer nameserversPerDelegation;

  public static final String SERIALIZED_NAME_NETWORKS_PER_MANAGED_ZONE = "networksPerManagedZone";
  @SerializedName(SERIALIZED_NAME_NETWORKS_PER_MANAGED_ZONE)
  private Integer networksPerManagedZone;

  public static final String SERIALIZED_NAME_NETWORKS_PER_POLICY = "networksPerPolicy";
  @SerializedName(SERIALIZED_NAME_NETWORKS_PER_POLICY)
  private Integer networksPerPolicy;

  public static final String SERIALIZED_NAME_NETWORKS_PER_RESPONSE_POLICY = "networksPerResponsePolicy";
  @SerializedName(SERIALIZED_NAME_NETWORKS_PER_RESPONSE_POLICY)
  private Integer networksPerResponsePolicy;

  public static final String SERIALIZED_NAME_PEERING_ZONES_PER_TARGET_NETWORK = "peeringZonesPerTargetNetwork";
  @SerializedName(SERIALIZED_NAME_PEERING_ZONES_PER_TARGET_NETWORK)
  private Integer peeringZonesPerTargetNetwork;

  public static final String SERIALIZED_NAME_POLICIES = "policies";
  @SerializedName(SERIALIZED_NAME_POLICIES)
  private Integer policies;

  public static final String SERIALIZED_NAME_RESOURCE_RECORDS_PER_RRSET = "resourceRecordsPerRrset";
  @SerializedName(SERIALIZED_NAME_RESOURCE_RECORDS_PER_RRSET)
  private Integer resourceRecordsPerRrset;

  public static final String SERIALIZED_NAME_RESPONSE_POLICIES = "responsePolicies";
  @SerializedName(SERIALIZED_NAME_RESPONSE_POLICIES)
  private Integer responsePolicies;

  public static final String SERIALIZED_NAME_RESPONSE_POLICY_RULES_PER_RESPONSE_POLICY = "responsePolicyRulesPerResponsePolicy";
  @SerializedName(SERIALIZED_NAME_RESPONSE_POLICY_RULES_PER_RESPONSE_POLICY)
  private Integer responsePolicyRulesPerResponsePolicy;

  public static final String SERIALIZED_NAME_RRSET_ADDITIONS_PER_CHANGE = "rrsetAdditionsPerChange";
  @SerializedName(SERIALIZED_NAME_RRSET_ADDITIONS_PER_CHANGE)
  private Integer rrsetAdditionsPerChange;

  public static final String SERIALIZED_NAME_RRSET_DELETIONS_PER_CHANGE = "rrsetDeletionsPerChange";
  @SerializedName(SERIALIZED_NAME_RRSET_DELETIONS_PER_CHANGE)
  private Integer rrsetDeletionsPerChange;

  public static final String SERIALIZED_NAME_RRSETS_PER_MANAGED_ZONE = "rrsetsPerManagedZone";
  @SerializedName(SERIALIZED_NAME_RRSETS_PER_MANAGED_ZONE)
  private Integer rrsetsPerManagedZone;

  public static final String SERIALIZED_NAME_TARGET_NAME_SERVERS_PER_MANAGED_ZONE = "targetNameServersPerManagedZone";
  @SerializedName(SERIALIZED_NAME_TARGET_NAME_SERVERS_PER_MANAGED_ZONE)
  private Integer targetNameServersPerManagedZone;

  public static final String SERIALIZED_NAME_TARGET_NAME_SERVERS_PER_POLICY = "targetNameServersPerPolicy";
  @SerializedName(SERIALIZED_NAME_TARGET_NAME_SERVERS_PER_POLICY)
  private Integer targetNameServersPerPolicy;

  public static final String SERIALIZED_NAME_TOTAL_RRDATA_SIZE_PER_CHANGE = "totalRrdataSizePerChange";
  @SerializedName(SERIALIZED_NAME_TOTAL_RRDATA_SIZE_PER_CHANGE)
  private Integer totalRrdataSizePerChange;

  public static final String SERIALIZED_NAME_WHITELISTED_KEY_SPECS = "whitelistedKeySpecs";
  @SerializedName(SERIALIZED_NAME_WHITELISTED_KEY_SPECS)
  private List<DnsKeySpec> whitelistedKeySpecs = new ArrayList<>();

  public Quota() {
  }

  public Quota dnsKeysPerManagedZone(Integer dnsKeysPerManagedZone) {
    this.dnsKeysPerManagedZone = dnsKeysPerManagedZone;
    return this;
  }

  /**
   * Maximum allowed number of DnsKeys per ManagedZone.
   * @return dnsKeysPerManagedZone
   */
  @javax.annotation.Nullable
  public Integer getDnsKeysPerManagedZone() {
    return dnsKeysPerManagedZone;
  }

  public void setDnsKeysPerManagedZone(Integer dnsKeysPerManagedZone) {
    this.dnsKeysPerManagedZone = dnsKeysPerManagedZone;
  }


  public Quota gkeClustersPerManagedZone(Integer gkeClustersPerManagedZone) {
    this.gkeClustersPerManagedZone = gkeClustersPerManagedZone;
    return this;
  }

  /**
   * Maximum allowed number of GKE clusters to which a privately scoped zone can be attached.
   * @return gkeClustersPerManagedZone
   */
  @javax.annotation.Nullable
  public Integer getGkeClustersPerManagedZone() {
    return gkeClustersPerManagedZone;
  }

  public void setGkeClustersPerManagedZone(Integer gkeClustersPerManagedZone) {
    this.gkeClustersPerManagedZone = gkeClustersPerManagedZone;
  }


  public Quota gkeClustersPerPolicy(Integer gkeClustersPerPolicy) {
    this.gkeClustersPerPolicy = gkeClustersPerPolicy;
    return this;
  }

  /**
   * Maximum allowed number of GKE clusters per policy.
   * @return gkeClustersPerPolicy
   */
  @javax.annotation.Nullable
  public Integer getGkeClustersPerPolicy() {
    return gkeClustersPerPolicy;
  }

  public void setGkeClustersPerPolicy(Integer gkeClustersPerPolicy) {
    this.gkeClustersPerPolicy = gkeClustersPerPolicy;
  }


  public Quota gkeClustersPerResponsePolicy(Integer gkeClustersPerResponsePolicy) {
    this.gkeClustersPerResponsePolicy = gkeClustersPerResponsePolicy;
    return this;
  }

  /**
   * Maximum allowed number of GKE clusters per response policy.
   * @return gkeClustersPerResponsePolicy
   */
  @javax.annotation.Nullable
  public Integer getGkeClustersPerResponsePolicy() {
    return gkeClustersPerResponsePolicy;
  }

  public void setGkeClustersPerResponsePolicy(Integer gkeClustersPerResponsePolicy) {
    this.gkeClustersPerResponsePolicy = gkeClustersPerResponsePolicy;
  }


  public Quota itemsPerRoutingPolicy(Integer itemsPerRoutingPolicy) {
    this.itemsPerRoutingPolicy = itemsPerRoutingPolicy;
    return this;
  }

  /**
   * Maximum allowed number of items per routing policy.
   * @return itemsPerRoutingPolicy
   */
  @javax.annotation.Nullable
  public Integer getItemsPerRoutingPolicy() {
    return itemsPerRoutingPolicy;
  }

  public void setItemsPerRoutingPolicy(Integer itemsPerRoutingPolicy) {
    this.itemsPerRoutingPolicy = itemsPerRoutingPolicy;
  }


  public Quota kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Get kind
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public Quota managedZones(Integer managedZones) {
    this.managedZones = managedZones;
    return this;
  }

  /**
   * Maximum allowed number of managed zones in the project.
   * @return managedZones
   */
  @javax.annotation.Nullable
  public Integer getManagedZones() {
    return managedZones;
  }

  public void setManagedZones(Integer managedZones) {
    this.managedZones = managedZones;
  }


  public Quota managedZonesPerGkeCluster(Integer managedZonesPerGkeCluster) {
    this.managedZonesPerGkeCluster = managedZonesPerGkeCluster;
    return this;
  }

  /**
   * Maximum allowed number of managed zones which can be attached to a GKE cluster.
   * @return managedZonesPerGkeCluster
   */
  @javax.annotation.Nullable
  public Integer getManagedZonesPerGkeCluster() {
    return managedZonesPerGkeCluster;
  }

  public void setManagedZonesPerGkeCluster(Integer managedZonesPerGkeCluster) {
    this.managedZonesPerGkeCluster = managedZonesPerGkeCluster;
  }


  public Quota managedZonesPerNetwork(Integer managedZonesPerNetwork) {
    this.managedZonesPerNetwork = managedZonesPerNetwork;
    return this;
  }

  /**
   * Maximum allowed number of managed zones which can be attached to a network.
   * @return managedZonesPerNetwork
   */
  @javax.annotation.Nullable
  public Integer getManagedZonesPerNetwork() {
    return managedZonesPerNetwork;
  }

  public void setManagedZonesPerNetwork(Integer managedZonesPerNetwork) {
    this.managedZonesPerNetwork = managedZonesPerNetwork;
  }


  public Quota nameserversPerDelegation(Integer nameserversPerDelegation) {
    this.nameserversPerDelegation = nameserversPerDelegation;
    return this;
  }

  /**
   * Maximum number of nameservers per delegation, meant to prevent abuse
   * @return nameserversPerDelegation
   */
  @javax.annotation.Nullable
  public Integer getNameserversPerDelegation() {
    return nameserversPerDelegation;
  }

  public void setNameserversPerDelegation(Integer nameserversPerDelegation) {
    this.nameserversPerDelegation = nameserversPerDelegation;
  }


  public Quota networksPerManagedZone(Integer networksPerManagedZone) {
    this.networksPerManagedZone = networksPerManagedZone;
    return this;
  }

  /**
   * Maximum allowed number of networks to which a privately scoped zone can be attached.
   * @return networksPerManagedZone
   */
  @javax.annotation.Nullable
  public Integer getNetworksPerManagedZone() {
    return networksPerManagedZone;
  }

  public void setNetworksPerManagedZone(Integer networksPerManagedZone) {
    this.networksPerManagedZone = networksPerManagedZone;
  }


  public Quota networksPerPolicy(Integer networksPerPolicy) {
    this.networksPerPolicy = networksPerPolicy;
    return this;
  }

  /**
   * Maximum allowed number of networks per policy.
   * @return networksPerPolicy
   */
  @javax.annotation.Nullable
  public Integer getNetworksPerPolicy() {
    return networksPerPolicy;
  }

  public void setNetworksPerPolicy(Integer networksPerPolicy) {
    this.networksPerPolicy = networksPerPolicy;
  }


  public Quota networksPerResponsePolicy(Integer networksPerResponsePolicy) {
    this.networksPerResponsePolicy = networksPerResponsePolicy;
    return this;
  }

  /**
   * Maximum allowed number of networks per response policy.
   * @return networksPerResponsePolicy
   */
  @javax.annotation.Nullable
  public Integer getNetworksPerResponsePolicy() {
    return networksPerResponsePolicy;
  }

  public void setNetworksPerResponsePolicy(Integer networksPerResponsePolicy) {
    this.networksPerResponsePolicy = networksPerResponsePolicy;
  }


  public Quota peeringZonesPerTargetNetwork(Integer peeringZonesPerTargetNetwork) {
    this.peeringZonesPerTargetNetwork = peeringZonesPerTargetNetwork;
    return this;
  }

  /**
   * Maximum allowed number of consumer peering zones per target network owned by this producer project
   * @return peeringZonesPerTargetNetwork
   */
  @javax.annotation.Nullable
  public Integer getPeeringZonesPerTargetNetwork() {
    return peeringZonesPerTargetNetwork;
  }

  public void setPeeringZonesPerTargetNetwork(Integer peeringZonesPerTargetNetwork) {
    this.peeringZonesPerTargetNetwork = peeringZonesPerTargetNetwork;
  }


  public Quota policies(Integer policies) {
    this.policies = policies;
    return this;
  }

  /**
   * Maximum allowed number of policies per project.
   * @return policies
   */
  @javax.annotation.Nullable
  public Integer getPolicies() {
    return policies;
  }

  public void setPolicies(Integer policies) {
    this.policies = policies;
  }


  public Quota resourceRecordsPerRrset(Integer resourceRecordsPerRrset) {
    this.resourceRecordsPerRrset = resourceRecordsPerRrset;
    return this;
  }

  /**
   * Maximum allowed number of ResourceRecords per ResourceRecordSet.
   * @return resourceRecordsPerRrset
   */
  @javax.annotation.Nullable
  public Integer getResourceRecordsPerRrset() {
    return resourceRecordsPerRrset;
  }

  public void setResourceRecordsPerRrset(Integer resourceRecordsPerRrset) {
    this.resourceRecordsPerRrset = resourceRecordsPerRrset;
  }


  public Quota responsePolicies(Integer responsePolicies) {
    this.responsePolicies = responsePolicies;
    return this;
  }

  /**
   * Maximum allowed number of response policies per project.
   * @return responsePolicies
   */
  @javax.annotation.Nullable
  public Integer getResponsePolicies() {
    return responsePolicies;
  }

  public void setResponsePolicies(Integer responsePolicies) {
    this.responsePolicies = responsePolicies;
  }


  public Quota responsePolicyRulesPerResponsePolicy(Integer responsePolicyRulesPerResponsePolicy) {
    this.responsePolicyRulesPerResponsePolicy = responsePolicyRulesPerResponsePolicy;
    return this;
  }

  /**
   * Maximum allowed number of rules per response policy.
   * @return responsePolicyRulesPerResponsePolicy
   */
  @javax.annotation.Nullable
  public Integer getResponsePolicyRulesPerResponsePolicy() {
    return responsePolicyRulesPerResponsePolicy;
  }

  public void setResponsePolicyRulesPerResponsePolicy(Integer responsePolicyRulesPerResponsePolicy) {
    this.responsePolicyRulesPerResponsePolicy = responsePolicyRulesPerResponsePolicy;
  }


  public Quota rrsetAdditionsPerChange(Integer rrsetAdditionsPerChange) {
    this.rrsetAdditionsPerChange = rrsetAdditionsPerChange;
    return this;
  }

  /**
   * Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest.
   * @return rrsetAdditionsPerChange
   */
  @javax.annotation.Nullable
  public Integer getRrsetAdditionsPerChange() {
    return rrsetAdditionsPerChange;
  }

  public void setRrsetAdditionsPerChange(Integer rrsetAdditionsPerChange) {
    this.rrsetAdditionsPerChange = rrsetAdditionsPerChange;
  }


  public Quota rrsetDeletionsPerChange(Integer rrsetDeletionsPerChange) {
    this.rrsetDeletionsPerChange = rrsetDeletionsPerChange;
    return this;
  }

  /**
   * Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest.
   * @return rrsetDeletionsPerChange
   */
  @javax.annotation.Nullable
  public Integer getRrsetDeletionsPerChange() {
    return rrsetDeletionsPerChange;
  }

  public void setRrsetDeletionsPerChange(Integer rrsetDeletionsPerChange) {
    this.rrsetDeletionsPerChange = rrsetDeletionsPerChange;
  }


  public Quota rrsetsPerManagedZone(Integer rrsetsPerManagedZone) {
    this.rrsetsPerManagedZone = rrsetsPerManagedZone;
    return this;
  }

  /**
   * Maximum allowed number of ResourceRecordSets per zone in the project.
   * @return rrsetsPerManagedZone
   */
  @javax.annotation.Nullable
  public Integer getRrsetsPerManagedZone() {
    return rrsetsPerManagedZone;
  }

  public void setRrsetsPerManagedZone(Integer rrsetsPerManagedZone) {
    this.rrsetsPerManagedZone = rrsetsPerManagedZone;
  }


  public Quota targetNameServersPerManagedZone(Integer targetNameServersPerManagedZone) {
    this.targetNameServersPerManagedZone = targetNameServersPerManagedZone;
    return this;
  }

  /**
   * Maximum allowed number of target name servers per managed forwarding zone.
   * @return targetNameServersPerManagedZone
   */
  @javax.annotation.Nullable
  public Integer getTargetNameServersPerManagedZone() {
    return targetNameServersPerManagedZone;
  }

  public void setTargetNameServersPerManagedZone(Integer targetNameServersPerManagedZone) {
    this.targetNameServersPerManagedZone = targetNameServersPerManagedZone;
  }


  public Quota targetNameServersPerPolicy(Integer targetNameServersPerPolicy) {
    this.targetNameServersPerPolicy = targetNameServersPerPolicy;
    return this;
  }

  /**
   * Maximum allowed number of alternative target name servers per policy.
   * @return targetNameServersPerPolicy
   */
  @javax.annotation.Nullable
  public Integer getTargetNameServersPerPolicy() {
    return targetNameServersPerPolicy;
  }

  public void setTargetNameServersPerPolicy(Integer targetNameServersPerPolicy) {
    this.targetNameServersPerPolicy = targetNameServersPerPolicy;
  }


  public Quota totalRrdataSizePerChange(Integer totalRrdataSizePerChange) {
    this.totalRrdataSizePerChange = totalRrdataSizePerChange;
    return this;
  }

  /**
   * Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.
   * @return totalRrdataSizePerChange
   */
  @javax.annotation.Nullable
  public Integer getTotalRrdataSizePerChange() {
    return totalRrdataSizePerChange;
  }

  public void setTotalRrdataSizePerChange(Integer totalRrdataSizePerChange) {
    this.totalRrdataSizePerChange = totalRrdataSizePerChange;
  }


  public Quota whitelistedKeySpecs(List<DnsKeySpec> whitelistedKeySpecs) {
    this.whitelistedKeySpecs = whitelistedKeySpecs;
    return this;
  }

  public Quota addWhitelistedKeySpecsItem(DnsKeySpec whitelistedKeySpecsItem) {
    if (this.whitelistedKeySpecs == null) {
      this.whitelistedKeySpecs = new ArrayList<>();
    }
    this.whitelistedKeySpecs.add(whitelistedKeySpecsItem);
    return this;
  }

  /**
   * DNSSEC algorithm and key length types that can be used for DnsKeys.
   * @return whitelistedKeySpecs
   */
  @javax.annotation.Nullable
  public List<DnsKeySpec> getWhitelistedKeySpecs() {
    return whitelistedKeySpecs;
  }

  public void setWhitelistedKeySpecs(List<DnsKeySpec> whitelistedKeySpecs) {
    this.whitelistedKeySpecs = whitelistedKeySpecs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Quota quota = (Quota) o;
    return Objects.equals(this.dnsKeysPerManagedZone, quota.dnsKeysPerManagedZone) &&
        Objects.equals(this.gkeClustersPerManagedZone, quota.gkeClustersPerManagedZone) &&
        Objects.equals(this.gkeClustersPerPolicy, quota.gkeClustersPerPolicy) &&
        Objects.equals(this.gkeClustersPerResponsePolicy, quota.gkeClustersPerResponsePolicy) &&
        Objects.equals(this.itemsPerRoutingPolicy, quota.itemsPerRoutingPolicy) &&
        Objects.equals(this.kind, quota.kind) &&
        Objects.equals(this.managedZones, quota.managedZones) &&
        Objects.equals(this.managedZonesPerGkeCluster, quota.managedZonesPerGkeCluster) &&
        Objects.equals(this.managedZonesPerNetwork, quota.managedZonesPerNetwork) &&
        Objects.equals(this.nameserversPerDelegation, quota.nameserversPerDelegation) &&
        Objects.equals(this.networksPerManagedZone, quota.networksPerManagedZone) &&
        Objects.equals(this.networksPerPolicy, quota.networksPerPolicy) &&
        Objects.equals(this.networksPerResponsePolicy, quota.networksPerResponsePolicy) &&
        Objects.equals(this.peeringZonesPerTargetNetwork, quota.peeringZonesPerTargetNetwork) &&
        Objects.equals(this.policies, quota.policies) &&
        Objects.equals(this.resourceRecordsPerRrset, quota.resourceRecordsPerRrset) &&
        Objects.equals(this.responsePolicies, quota.responsePolicies) &&
        Objects.equals(this.responsePolicyRulesPerResponsePolicy, quota.responsePolicyRulesPerResponsePolicy) &&
        Objects.equals(this.rrsetAdditionsPerChange, quota.rrsetAdditionsPerChange) &&
        Objects.equals(this.rrsetDeletionsPerChange, quota.rrsetDeletionsPerChange) &&
        Objects.equals(this.rrsetsPerManagedZone, quota.rrsetsPerManagedZone) &&
        Objects.equals(this.targetNameServersPerManagedZone, quota.targetNameServersPerManagedZone) &&
        Objects.equals(this.targetNameServersPerPolicy, quota.targetNameServersPerPolicy) &&
        Objects.equals(this.totalRrdataSizePerChange, quota.totalRrdataSizePerChange) &&
        Objects.equals(this.whitelistedKeySpecs, quota.whitelistedKeySpecs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dnsKeysPerManagedZone, gkeClustersPerManagedZone, gkeClustersPerPolicy, gkeClustersPerResponsePolicy, itemsPerRoutingPolicy, kind, managedZones, managedZonesPerGkeCluster, managedZonesPerNetwork, nameserversPerDelegation, networksPerManagedZone, networksPerPolicy, networksPerResponsePolicy, peeringZonesPerTargetNetwork, policies, resourceRecordsPerRrset, responsePolicies, responsePolicyRulesPerResponsePolicy, rrsetAdditionsPerChange, rrsetDeletionsPerChange, rrsetsPerManagedZone, targetNameServersPerManagedZone, targetNameServersPerPolicy, totalRrdataSizePerChange, whitelistedKeySpecs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Quota {\n");
    sb.append("    dnsKeysPerManagedZone: ").append(toIndentedString(dnsKeysPerManagedZone)).append("\n");
    sb.append("    gkeClustersPerManagedZone: ").append(toIndentedString(gkeClustersPerManagedZone)).append("\n");
    sb.append("    gkeClustersPerPolicy: ").append(toIndentedString(gkeClustersPerPolicy)).append("\n");
    sb.append("    gkeClustersPerResponsePolicy: ").append(toIndentedString(gkeClustersPerResponsePolicy)).append("\n");
    sb.append("    itemsPerRoutingPolicy: ").append(toIndentedString(itemsPerRoutingPolicy)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    managedZones: ").append(toIndentedString(managedZones)).append("\n");
    sb.append("    managedZonesPerGkeCluster: ").append(toIndentedString(managedZonesPerGkeCluster)).append("\n");
    sb.append("    managedZonesPerNetwork: ").append(toIndentedString(managedZonesPerNetwork)).append("\n");
    sb.append("    nameserversPerDelegation: ").append(toIndentedString(nameserversPerDelegation)).append("\n");
    sb.append("    networksPerManagedZone: ").append(toIndentedString(networksPerManagedZone)).append("\n");
    sb.append("    networksPerPolicy: ").append(toIndentedString(networksPerPolicy)).append("\n");
    sb.append("    networksPerResponsePolicy: ").append(toIndentedString(networksPerResponsePolicy)).append("\n");
    sb.append("    peeringZonesPerTargetNetwork: ").append(toIndentedString(peeringZonesPerTargetNetwork)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    resourceRecordsPerRrset: ").append(toIndentedString(resourceRecordsPerRrset)).append("\n");
    sb.append("    responsePolicies: ").append(toIndentedString(responsePolicies)).append("\n");
    sb.append("    responsePolicyRulesPerResponsePolicy: ").append(toIndentedString(responsePolicyRulesPerResponsePolicy)).append("\n");
    sb.append("    rrsetAdditionsPerChange: ").append(toIndentedString(rrsetAdditionsPerChange)).append("\n");
    sb.append("    rrsetDeletionsPerChange: ").append(toIndentedString(rrsetDeletionsPerChange)).append("\n");
    sb.append("    rrsetsPerManagedZone: ").append(toIndentedString(rrsetsPerManagedZone)).append("\n");
    sb.append("    targetNameServersPerManagedZone: ").append(toIndentedString(targetNameServersPerManagedZone)).append("\n");
    sb.append("    targetNameServersPerPolicy: ").append(toIndentedString(targetNameServersPerPolicy)).append("\n");
    sb.append("    totalRrdataSizePerChange: ").append(toIndentedString(totalRrdataSizePerChange)).append("\n");
    sb.append("    whitelistedKeySpecs: ").append(toIndentedString(whitelistedKeySpecs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dnsKeysPerManagedZone");
    openapiFields.add("gkeClustersPerManagedZone");
    openapiFields.add("gkeClustersPerPolicy");
    openapiFields.add("gkeClustersPerResponsePolicy");
    openapiFields.add("itemsPerRoutingPolicy");
    openapiFields.add("kind");
    openapiFields.add("managedZones");
    openapiFields.add("managedZonesPerGkeCluster");
    openapiFields.add("managedZonesPerNetwork");
    openapiFields.add("nameserversPerDelegation");
    openapiFields.add("networksPerManagedZone");
    openapiFields.add("networksPerPolicy");
    openapiFields.add("networksPerResponsePolicy");
    openapiFields.add("peeringZonesPerTargetNetwork");
    openapiFields.add("policies");
    openapiFields.add("resourceRecordsPerRrset");
    openapiFields.add("responsePolicies");
    openapiFields.add("responsePolicyRulesPerResponsePolicy");
    openapiFields.add("rrsetAdditionsPerChange");
    openapiFields.add("rrsetDeletionsPerChange");
    openapiFields.add("rrsetsPerManagedZone");
    openapiFields.add("targetNameServersPerManagedZone");
    openapiFields.add("targetNameServersPerPolicy");
    openapiFields.add("totalRrdataSizePerChange");
    openapiFields.add("whitelistedKeySpecs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Quota
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Quota.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Quota is not found in the empty JSON string", Quota.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Quota.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Quota` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if (jsonObj.get("whitelistedKeySpecs") != null && !jsonObj.get("whitelistedKeySpecs").isJsonNull()) {
        JsonArray jsonArraywhitelistedKeySpecs = jsonObj.getAsJsonArray("whitelistedKeySpecs");
        if (jsonArraywhitelistedKeySpecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("whitelistedKeySpecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `whitelistedKeySpecs` to be an array in the JSON string but got `%s`", jsonObj.get("whitelistedKeySpecs").toString()));
          }

          // validate the optional field `whitelistedKeySpecs` (array)
          for (int i = 0; i < jsonArraywhitelistedKeySpecs.size(); i++) {
            DnsKeySpec.validateJsonElement(jsonArraywhitelistedKeySpecs.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Quota.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Quota' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Quota> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Quota.class));

       return (TypeAdapter<T>) new TypeAdapter<Quota>() {
           @Override
           public void write(JsonWriter out, Quota value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Quota read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Quota given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Quota
   * @throws IOException if the JSON string is invalid with respect to Quota
   */
  public static Quota fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Quota.class);
  }

  /**
   * Convert an instance of Quota to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

