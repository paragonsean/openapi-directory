/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedZonePrivateVisibilityConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedZonePrivateVisibilityConfig::OAIManagedZonePrivateVisibilityConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedZonePrivateVisibilityConfig::OAIManagedZonePrivateVisibilityConfig() {
    this->initializeModel();
}

OAIManagedZonePrivateVisibilityConfig::~OAIManagedZonePrivateVisibilityConfig() {}

void OAIManagedZonePrivateVisibilityConfig::initializeModel() {

    m_gke_clusters_isSet = false;
    m_gke_clusters_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_networks_isSet = false;
    m_networks_isValid = false;
}

void OAIManagedZonePrivateVisibilityConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedZonePrivateVisibilityConfig::fromJsonObject(QJsonObject json) {

    m_gke_clusters_isValid = ::OpenAPI::fromJsonValue(m_gke_clusters, json[QString("gkeClusters")]);
    m_gke_clusters_isSet = !json[QString("gkeClusters")].isNull() && m_gke_clusters_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_networks_isValid = ::OpenAPI::fromJsonValue(m_networks, json[QString("networks")]);
    m_networks_isSet = !json[QString("networks")].isNull() && m_networks_isValid;
}

QString OAIManagedZonePrivateVisibilityConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedZonePrivateVisibilityConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_gke_clusters.size() > 0) {
        obj.insert(QString("gkeClusters"), ::OpenAPI::toJsonValue(m_gke_clusters));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_networks.size() > 0) {
        obj.insert(QString("networks"), ::OpenAPI::toJsonValue(m_networks));
    }
    return obj;
}

QList<OAIManagedZonePrivateVisibilityConfigGKECluster> OAIManagedZonePrivateVisibilityConfig::getGkeClusters() const {
    return m_gke_clusters;
}
void OAIManagedZonePrivateVisibilityConfig::setGkeClusters(const QList<OAIManagedZonePrivateVisibilityConfigGKECluster> &gke_clusters) {
    m_gke_clusters = gke_clusters;
    m_gke_clusters_isSet = true;
}

bool OAIManagedZonePrivateVisibilityConfig::is_gke_clusters_Set() const{
    return m_gke_clusters_isSet;
}

bool OAIManagedZonePrivateVisibilityConfig::is_gke_clusters_Valid() const{
    return m_gke_clusters_isValid;
}

QString OAIManagedZonePrivateVisibilityConfig::getKind() const {
    return m_kind;
}
void OAIManagedZonePrivateVisibilityConfig::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIManagedZonePrivateVisibilityConfig::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIManagedZonePrivateVisibilityConfig::is_kind_Valid() const{
    return m_kind_isValid;
}

QList<OAIManagedZonePrivateVisibilityConfigNetwork> OAIManagedZonePrivateVisibilityConfig::getNetworks() const {
    return m_networks;
}
void OAIManagedZonePrivateVisibilityConfig::setNetworks(const QList<OAIManagedZonePrivateVisibilityConfigNetwork> &networks) {
    m_networks = networks;
    m_networks_isSet = true;
}

bool OAIManagedZonePrivateVisibilityConfig::is_networks_Set() const{
    return m_networks_isSet;
}

bool OAIManagedZonePrivateVisibilityConfig::is_networks_Valid() const{
    return m_networks_isValid;
}

bool OAIManagedZonePrivateVisibilityConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gke_clusters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_networks.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedZonePrivateVisibilityConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
