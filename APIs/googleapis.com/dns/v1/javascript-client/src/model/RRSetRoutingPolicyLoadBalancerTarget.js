/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RRSetRoutingPolicyLoadBalancerTarget model module.
 * @module model/RRSetRoutingPolicyLoadBalancerTarget
 * @version v1
 */
class RRSetRoutingPolicyLoadBalancerTarget {
    /**
     * Constructs a new <code>RRSetRoutingPolicyLoadBalancerTarget</code>.
     * The configuration for an individual load balancer to health check.
     * @alias module:model/RRSetRoutingPolicyLoadBalancerTarget
     */
    constructor() { 
        
        RRSetRoutingPolicyLoadBalancerTarget.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'dns#rRSetRoutingPolicyLoadBalancerTarget';
    }

    /**
     * Constructs a <code>RRSetRoutingPolicyLoadBalancerTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RRSetRoutingPolicyLoadBalancerTarget} obj Optional instance to populate.
     * @return {module:model/RRSetRoutingPolicyLoadBalancerTarget} The populated <code>RRSetRoutingPolicyLoadBalancerTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RRSetRoutingPolicyLoadBalancerTarget();

            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('ipProtocol')) {
                obj['ipProtocol'] = ApiClient.convertToType(data['ipProtocol'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('loadBalancerType')) {
                obj['loadBalancerType'] = ApiClient.convertToType(data['loadBalancerType'], 'String');
            }
            if (data.hasOwnProperty('networkUrl')) {
                obj['networkUrl'] = ApiClient.convertToType(data['networkUrl'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'String');
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RRSetRoutingPolicyLoadBalancerTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RRSetRoutingPolicyLoadBalancerTarget</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['ipProtocol'] && !(typeof data['ipProtocol'] === 'string' || data['ipProtocol'] instanceof String)) {
            throw new Error("Expected the field `ipProtocol` to be a primitive type in the JSON string but got " + data['ipProtocol']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['loadBalancerType'] && !(typeof data['loadBalancerType'] === 'string' || data['loadBalancerType'] instanceof String)) {
            throw new Error("Expected the field `loadBalancerType` to be a primitive type in the JSON string but got " + data['loadBalancerType']);
        }
        // ensure the json data is a string
        if (data['networkUrl'] && !(typeof data['networkUrl'] === 'string' || data['networkUrl'] instanceof String)) {
            throw new Error("Expected the field `networkUrl` to be a primitive type in the JSON string but got " + data['networkUrl']);
        }
        // ensure the json data is a string
        if (data['port'] && !(typeof data['port'] === 'string' || data['port'] instanceof String)) {
            throw new Error("Expected the field `port` to be a primitive type in the JSON string but got " + data['port']);
        }
        // ensure the json data is a string
        if (data['project'] && !(typeof data['project'] === 'string' || data['project'] instanceof String)) {
            throw new Error("Expected the field `project` to be a primitive type in the JSON string but got " + data['project']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }

        return true;
    }


}



/**
 * The frontend IP address of the load balancer to health check.
 * @member {String} ipAddress
 */
RRSetRoutingPolicyLoadBalancerTarget.prototype['ipAddress'] = undefined;

/**
 * The protocol of the load balancer to health check.
 * @member {module:model/RRSetRoutingPolicyLoadBalancerTarget.IpProtocolEnum} ipProtocol
 */
RRSetRoutingPolicyLoadBalancerTarget.prototype['ipProtocol'] = undefined;

/**
 * @member {String} kind
 * @default 'dns#rRSetRoutingPolicyLoadBalancerTarget'
 */
RRSetRoutingPolicyLoadBalancerTarget.prototype['kind'] = 'dns#rRSetRoutingPolicyLoadBalancerTarget';

/**
 * The type of load balancer specified by this target. This value must match the configuration of the load balancer located at the LoadBalancerTarget's IP address, port, and region. Use the following: - *regionalL4ilb*: for a regional internal passthrough Network Load Balancer. - *regionalL7ilb*: for a regional internal Application Load Balancer. - *globalL7ilb*: for a global internal Application Load Balancer. 
 * @member {module:model/RRSetRoutingPolicyLoadBalancerTarget.LoadBalancerTypeEnum} loadBalancerType
 */
RRSetRoutingPolicyLoadBalancerTarget.prototype['loadBalancerType'] = undefined;

/**
 * The fully qualified URL of the network that the load balancer is attached to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network} .
 * @member {String} networkUrl
 */
RRSetRoutingPolicyLoadBalancerTarget.prototype['networkUrl'] = undefined;

/**
 * The configured port of the load balancer.
 * @member {String} port
 */
RRSetRoutingPolicyLoadBalancerTarget.prototype['port'] = undefined;

/**
 * The project ID in which the load balancer is located.
 * @member {String} project
 */
RRSetRoutingPolicyLoadBalancerTarget.prototype['project'] = undefined;

/**
 * The region in which the load balancer is located.
 * @member {String} region
 */
RRSetRoutingPolicyLoadBalancerTarget.prototype['region'] = undefined;





/**
 * Allowed values for the <code>ipProtocol</code> property.
 * @enum {String}
 * @readonly
 */
RRSetRoutingPolicyLoadBalancerTarget['IpProtocolEnum'] = {

    /**
     * value: "undefined"
     * @const
     */
    "undefined": "undefined",

    /**
     * value: "tcp"
     * @const
     */
    "tcp": "tcp",

    /**
     * value: "udp"
     * @const
     */
    "udp": "udp"
};


/**
 * Allowed values for the <code>loadBalancerType</code> property.
 * @enum {String}
 * @readonly
 */
RRSetRoutingPolicyLoadBalancerTarget['LoadBalancerTypeEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "globalL7ilb"
     * @const
     */
    "globalL7ilb": "globalL7ilb",

    /**
     * value: "regionalL4ilb"
     * @const
     */
    "regionalL4ilb": "regionalL4ilb",

    /**
     * value: "regionalL7ilb"
     * @const
     */
    "regionalL7ilb": "regionalL7ilb"
};



export default RRSetRoutingPolicyLoadBalancerTarget;

