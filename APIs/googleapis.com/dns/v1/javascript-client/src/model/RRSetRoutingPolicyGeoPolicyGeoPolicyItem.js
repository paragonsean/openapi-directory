/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RRSetRoutingPolicyHealthCheckTargets from './RRSetRoutingPolicyHealthCheckTargets';

/**
 * The RRSetRoutingPolicyGeoPolicyGeoPolicyItem model module.
 * @module model/RRSetRoutingPolicyGeoPolicyGeoPolicyItem
 * @version v1
 */
class RRSetRoutingPolicyGeoPolicyGeoPolicyItem {
    /**
     * Constructs a new <code>RRSetRoutingPolicyGeoPolicyGeoPolicyItem</code>.
     * ResourceRecordSet data for one geo location.
     * @alias module:model/RRSetRoutingPolicyGeoPolicyGeoPolicyItem
     */
    constructor() { 
        
        RRSetRoutingPolicyGeoPolicyGeoPolicyItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'dns#rRSetRoutingPolicyGeoPolicyGeoPolicyItem';
    }

    /**
     * Constructs a <code>RRSetRoutingPolicyGeoPolicyGeoPolicyItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RRSetRoutingPolicyGeoPolicyGeoPolicyItem} obj Optional instance to populate.
     * @return {module:model/RRSetRoutingPolicyGeoPolicyGeoPolicyItem} The populated <code>RRSetRoutingPolicyGeoPolicyGeoPolicyItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RRSetRoutingPolicyGeoPolicyGeoPolicyItem();

            if (data.hasOwnProperty('healthCheckedTargets')) {
                obj['healthCheckedTargets'] = RRSetRoutingPolicyHealthCheckTargets.constructFromObject(data['healthCheckedTargets']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('rrdatas')) {
                obj['rrdatas'] = ApiClient.convertToType(data['rrdatas'], ['String']);
            }
            if (data.hasOwnProperty('signatureRrdatas')) {
                obj['signatureRrdatas'] = ApiClient.convertToType(data['signatureRrdatas'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RRSetRoutingPolicyGeoPolicyGeoPolicyItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RRSetRoutingPolicyGeoPolicyGeoPolicyItem</code>.
     */
    static validateJSON(data) {
        // validate the optional field `healthCheckedTargets`
        if (data['healthCheckedTargets']) { // data not null
          RRSetRoutingPolicyHealthCheckTargets.validateJSON(data['healthCheckedTargets']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['rrdatas'])) {
            throw new Error("Expected the field `rrdatas` to be an array in the JSON data but got " + data['rrdatas']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['signatureRrdatas'])) {
            throw new Error("Expected the field `signatureRrdatas` to be an array in the JSON data but got " + data['signatureRrdatas']);
        }

        return true;
    }


}



/**
 * @member {module:model/RRSetRoutingPolicyHealthCheckTargets} healthCheckedTargets
 */
RRSetRoutingPolicyGeoPolicyGeoPolicyItem.prototype['healthCheckedTargets'] = undefined;

/**
 * @member {String} kind
 * @default 'dns#rRSetRoutingPolicyGeoPolicyGeoPolicyItem'
 */
RRSetRoutingPolicyGeoPolicyGeoPolicyItem.prototype['kind'] = 'dns#rRSetRoutingPolicyGeoPolicyGeoPolicyItem';

/**
 * The geo-location granularity is a GCP region. This location string should correspond to a GCP region. e.g. \"us-east1\", \"southamerica-east1\", \"asia-east1\", etc.
 * @member {String} location
 */
RRSetRoutingPolicyGeoPolicyGeoPolicyItem.prototype['location'] = undefined;

/**
 * @member {Array.<String>} rrdatas
 */
RRSetRoutingPolicyGeoPolicyGeoPolicyItem.prototype['rrdatas'] = undefined;

/**
 * DNSSEC generated signatures for all the rrdata within this item. If health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 IP address per item.
 * @member {Array.<String>} signatureRrdatas
 */
RRSetRoutingPolicyGeoPolicyGeoPolicyItem.prototype['signatureRrdatas'] = undefined;






export default RRSetRoutingPolicyGeoPolicyGeoPolicyItem;

