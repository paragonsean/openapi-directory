/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DnsKeySpec from './DnsKeySpec';

/**
 * The Quota model module.
 * @module model/Quota
 * @version v1
 */
class Quota {
    /**
     * Constructs a new <code>Quota</code>.
     * Limits associated with a Project.
     * @alias module:model/Quota
     */
    constructor() { 
        
        Quota.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'dns#quota';
    }

    /**
     * Constructs a <code>Quota</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Quota} obj Optional instance to populate.
     * @return {module:model/Quota} The populated <code>Quota</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Quota();

            if (data.hasOwnProperty('dnsKeysPerManagedZone')) {
                obj['dnsKeysPerManagedZone'] = ApiClient.convertToType(data['dnsKeysPerManagedZone'], 'Number');
            }
            if (data.hasOwnProperty('gkeClustersPerManagedZone')) {
                obj['gkeClustersPerManagedZone'] = ApiClient.convertToType(data['gkeClustersPerManagedZone'], 'Number');
            }
            if (data.hasOwnProperty('gkeClustersPerPolicy')) {
                obj['gkeClustersPerPolicy'] = ApiClient.convertToType(data['gkeClustersPerPolicy'], 'Number');
            }
            if (data.hasOwnProperty('gkeClustersPerResponsePolicy')) {
                obj['gkeClustersPerResponsePolicy'] = ApiClient.convertToType(data['gkeClustersPerResponsePolicy'], 'Number');
            }
            if (data.hasOwnProperty('itemsPerRoutingPolicy')) {
                obj['itemsPerRoutingPolicy'] = ApiClient.convertToType(data['itemsPerRoutingPolicy'], 'Number');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('managedZones')) {
                obj['managedZones'] = ApiClient.convertToType(data['managedZones'], 'Number');
            }
            if (data.hasOwnProperty('managedZonesPerGkeCluster')) {
                obj['managedZonesPerGkeCluster'] = ApiClient.convertToType(data['managedZonesPerGkeCluster'], 'Number');
            }
            if (data.hasOwnProperty('managedZonesPerNetwork')) {
                obj['managedZonesPerNetwork'] = ApiClient.convertToType(data['managedZonesPerNetwork'], 'Number');
            }
            if (data.hasOwnProperty('nameserversPerDelegation')) {
                obj['nameserversPerDelegation'] = ApiClient.convertToType(data['nameserversPerDelegation'], 'Number');
            }
            if (data.hasOwnProperty('networksPerManagedZone')) {
                obj['networksPerManagedZone'] = ApiClient.convertToType(data['networksPerManagedZone'], 'Number');
            }
            if (data.hasOwnProperty('networksPerPolicy')) {
                obj['networksPerPolicy'] = ApiClient.convertToType(data['networksPerPolicy'], 'Number');
            }
            if (data.hasOwnProperty('networksPerResponsePolicy')) {
                obj['networksPerResponsePolicy'] = ApiClient.convertToType(data['networksPerResponsePolicy'], 'Number');
            }
            if (data.hasOwnProperty('peeringZonesPerTargetNetwork')) {
                obj['peeringZonesPerTargetNetwork'] = ApiClient.convertToType(data['peeringZonesPerTargetNetwork'], 'Number');
            }
            if (data.hasOwnProperty('policies')) {
                obj['policies'] = ApiClient.convertToType(data['policies'], 'Number');
            }
            if (data.hasOwnProperty('resourceRecordsPerRrset')) {
                obj['resourceRecordsPerRrset'] = ApiClient.convertToType(data['resourceRecordsPerRrset'], 'Number');
            }
            if (data.hasOwnProperty('responsePolicies')) {
                obj['responsePolicies'] = ApiClient.convertToType(data['responsePolicies'], 'Number');
            }
            if (data.hasOwnProperty('responsePolicyRulesPerResponsePolicy')) {
                obj['responsePolicyRulesPerResponsePolicy'] = ApiClient.convertToType(data['responsePolicyRulesPerResponsePolicy'], 'Number');
            }
            if (data.hasOwnProperty('rrsetAdditionsPerChange')) {
                obj['rrsetAdditionsPerChange'] = ApiClient.convertToType(data['rrsetAdditionsPerChange'], 'Number');
            }
            if (data.hasOwnProperty('rrsetDeletionsPerChange')) {
                obj['rrsetDeletionsPerChange'] = ApiClient.convertToType(data['rrsetDeletionsPerChange'], 'Number');
            }
            if (data.hasOwnProperty('rrsetsPerManagedZone')) {
                obj['rrsetsPerManagedZone'] = ApiClient.convertToType(data['rrsetsPerManagedZone'], 'Number');
            }
            if (data.hasOwnProperty('targetNameServersPerManagedZone')) {
                obj['targetNameServersPerManagedZone'] = ApiClient.convertToType(data['targetNameServersPerManagedZone'], 'Number');
            }
            if (data.hasOwnProperty('targetNameServersPerPolicy')) {
                obj['targetNameServersPerPolicy'] = ApiClient.convertToType(data['targetNameServersPerPolicy'], 'Number');
            }
            if (data.hasOwnProperty('totalRrdataSizePerChange')) {
                obj['totalRrdataSizePerChange'] = ApiClient.convertToType(data['totalRrdataSizePerChange'], 'Number');
            }
            if (data.hasOwnProperty('whitelistedKeySpecs')) {
                obj['whitelistedKeySpecs'] = ApiClient.convertToType(data['whitelistedKeySpecs'], [DnsKeySpec]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Quota</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Quota</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        if (data['whitelistedKeySpecs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['whitelistedKeySpecs'])) {
                throw new Error("Expected the field `whitelistedKeySpecs` to be an array in the JSON data but got " + data['whitelistedKeySpecs']);
            }
            // validate the optional field `whitelistedKeySpecs` (array)
            for (const item of data['whitelistedKeySpecs']) {
                DnsKeySpec.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Maximum allowed number of DnsKeys per ManagedZone.
 * @member {Number} dnsKeysPerManagedZone
 */
Quota.prototype['dnsKeysPerManagedZone'] = undefined;

/**
 * Maximum allowed number of GKE clusters to which a privately scoped zone can be attached.
 * @member {Number} gkeClustersPerManagedZone
 */
Quota.prototype['gkeClustersPerManagedZone'] = undefined;

/**
 * Maximum allowed number of GKE clusters per policy.
 * @member {Number} gkeClustersPerPolicy
 */
Quota.prototype['gkeClustersPerPolicy'] = undefined;

/**
 * Maximum allowed number of GKE clusters per response policy.
 * @member {Number} gkeClustersPerResponsePolicy
 */
Quota.prototype['gkeClustersPerResponsePolicy'] = undefined;

/**
 * Maximum allowed number of items per routing policy.
 * @member {Number} itemsPerRoutingPolicy
 */
Quota.prototype['itemsPerRoutingPolicy'] = undefined;

/**
 * @member {String} kind
 * @default 'dns#quota'
 */
Quota.prototype['kind'] = 'dns#quota';

/**
 * Maximum allowed number of managed zones in the project.
 * @member {Number} managedZones
 */
Quota.prototype['managedZones'] = undefined;

/**
 * Maximum allowed number of managed zones which can be attached to a GKE cluster.
 * @member {Number} managedZonesPerGkeCluster
 */
Quota.prototype['managedZonesPerGkeCluster'] = undefined;

/**
 * Maximum allowed number of managed zones which can be attached to a network.
 * @member {Number} managedZonesPerNetwork
 */
Quota.prototype['managedZonesPerNetwork'] = undefined;

/**
 * Maximum number of nameservers per delegation, meant to prevent abuse
 * @member {Number} nameserversPerDelegation
 */
Quota.prototype['nameserversPerDelegation'] = undefined;

/**
 * Maximum allowed number of networks to which a privately scoped zone can be attached.
 * @member {Number} networksPerManagedZone
 */
Quota.prototype['networksPerManagedZone'] = undefined;

/**
 * Maximum allowed number of networks per policy.
 * @member {Number} networksPerPolicy
 */
Quota.prototype['networksPerPolicy'] = undefined;

/**
 * Maximum allowed number of networks per response policy.
 * @member {Number} networksPerResponsePolicy
 */
Quota.prototype['networksPerResponsePolicy'] = undefined;

/**
 * Maximum allowed number of consumer peering zones per target network owned by this producer project
 * @member {Number} peeringZonesPerTargetNetwork
 */
Quota.prototype['peeringZonesPerTargetNetwork'] = undefined;

/**
 * Maximum allowed number of policies per project.
 * @member {Number} policies
 */
Quota.prototype['policies'] = undefined;

/**
 * Maximum allowed number of ResourceRecords per ResourceRecordSet.
 * @member {Number} resourceRecordsPerRrset
 */
Quota.prototype['resourceRecordsPerRrset'] = undefined;

/**
 * Maximum allowed number of response policies per project.
 * @member {Number} responsePolicies
 */
Quota.prototype['responsePolicies'] = undefined;

/**
 * Maximum allowed number of rules per response policy.
 * @member {Number} responsePolicyRulesPerResponsePolicy
 */
Quota.prototype['responsePolicyRulesPerResponsePolicy'] = undefined;

/**
 * Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest.
 * @member {Number} rrsetAdditionsPerChange
 */
Quota.prototype['rrsetAdditionsPerChange'] = undefined;

/**
 * Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest.
 * @member {Number} rrsetDeletionsPerChange
 */
Quota.prototype['rrsetDeletionsPerChange'] = undefined;

/**
 * Maximum allowed number of ResourceRecordSets per zone in the project.
 * @member {Number} rrsetsPerManagedZone
 */
Quota.prototype['rrsetsPerManagedZone'] = undefined;

/**
 * Maximum allowed number of target name servers per managed forwarding zone.
 * @member {Number} targetNameServersPerManagedZone
 */
Quota.prototype['targetNameServersPerManagedZone'] = undefined;

/**
 * Maximum allowed number of alternative target name servers per policy.
 * @member {Number} targetNameServersPerPolicy
 */
Quota.prototype['targetNameServersPerPolicy'] = undefined;

/**
 * Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.
 * @member {Number} totalRrdataSizePerChange
 */
Quota.prototype['totalRrdataSizePerChange'] = undefined;

/**
 * DNSSEC algorithm and key length types that can be used for DnsKeys.
 * @member {Array.<module:model/DnsKeySpec>} whitelistedKeySpecs
 */
Quota.prototype['whitelistedKeySpecs'] = undefined;






export default Quota;

