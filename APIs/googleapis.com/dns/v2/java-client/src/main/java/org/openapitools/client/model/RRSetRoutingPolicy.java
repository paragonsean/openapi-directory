/*
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.RRSetRoutingPolicyGeoPolicy;
import org.openapitools.client.model.RRSetRoutingPolicyPrimaryBackupPolicy;
import org.openapitools.client.model.RRSetRoutingPolicyWrrPolicy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A RRSetRoutingPolicy represents ResourceRecordSet data that is returned dynamically with the response varying based on configured properties such as geolocation or by weighted random selection.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:18.564963-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RRSetRoutingPolicy {
  public static final String SERIALIZED_NAME_GEO = "geo";
  @SerializedName(SERIALIZED_NAME_GEO)
  private RRSetRoutingPolicyGeoPolicy geo;

  public static final String SERIALIZED_NAME_HEALTH_CHECK = "healthCheck";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK)
  private String healthCheck;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "dns#rRSetRoutingPolicy";

  public static final String SERIALIZED_NAME_PRIMARY_BACKUP = "primaryBackup";
  @SerializedName(SERIALIZED_NAME_PRIMARY_BACKUP)
  private RRSetRoutingPolicyPrimaryBackupPolicy primaryBackup;

  public static final String SERIALIZED_NAME_WRR = "wrr";
  @SerializedName(SERIALIZED_NAME_WRR)
  private RRSetRoutingPolicyWrrPolicy wrr;

  public RRSetRoutingPolicy() {
  }

  public RRSetRoutingPolicy geo(RRSetRoutingPolicyGeoPolicy geo) {
    this.geo = geo;
    return this;
  }

  /**
   * Get geo
   * @return geo
   */
  @javax.annotation.Nullable
  public RRSetRoutingPolicyGeoPolicy getGeo() {
    return geo;
  }

  public void setGeo(RRSetRoutingPolicyGeoPolicy geo) {
    this.geo = geo;
  }


  public RRSetRoutingPolicy healthCheck(String healthCheck) {
    this.healthCheck = healthCheck;
    return this;
  }

  /**
   * The selfLink attribute of the HealthCheck resource to use for this RRSetRoutingPolicy. https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks
   * @return healthCheck
   */
  @javax.annotation.Nullable
  public String getHealthCheck() {
    return healthCheck;
  }

  public void setHealthCheck(String healthCheck) {
    this.healthCheck = healthCheck;
  }


  public RRSetRoutingPolicy kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Get kind
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public RRSetRoutingPolicy primaryBackup(RRSetRoutingPolicyPrimaryBackupPolicy primaryBackup) {
    this.primaryBackup = primaryBackup;
    return this;
  }

  /**
   * Get primaryBackup
   * @return primaryBackup
   */
  @javax.annotation.Nullable
  public RRSetRoutingPolicyPrimaryBackupPolicy getPrimaryBackup() {
    return primaryBackup;
  }

  public void setPrimaryBackup(RRSetRoutingPolicyPrimaryBackupPolicy primaryBackup) {
    this.primaryBackup = primaryBackup;
  }


  public RRSetRoutingPolicy wrr(RRSetRoutingPolicyWrrPolicy wrr) {
    this.wrr = wrr;
    return this;
  }

  /**
   * Get wrr
   * @return wrr
   */
  @javax.annotation.Nullable
  public RRSetRoutingPolicyWrrPolicy getWrr() {
    return wrr;
  }

  public void setWrr(RRSetRoutingPolicyWrrPolicy wrr) {
    this.wrr = wrr;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RRSetRoutingPolicy rrSetRoutingPolicy = (RRSetRoutingPolicy) o;
    return Objects.equals(this.geo, rrSetRoutingPolicy.geo) &&
        Objects.equals(this.healthCheck, rrSetRoutingPolicy.healthCheck) &&
        Objects.equals(this.kind, rrSetRoutingPolicy.kind) &&
        Objects.equals(this.primaryBackup, rrSetRoutingPolicy.primaryBackup) &&
        Objects.equals(this.wrr, rrSetRoutingPolicy.wrr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(geo, healthCheck, kind, primaryBackup, wrr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RRSetRoutingPolicy {\n");
    sb.append("    geo: ").append(toIndentedString(geo)).append("\n");
    sb.append("    healthCheck: ").append(toIndentedString(healthCheck)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    primaryBackup: ").append(toIndentedString(primaryBackup)).append("\n");
    sb.append("    wrr: ").append(toIndentedString(wrr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("geo");
    openapiFields.add("healthCheck");
    openapiFields.add("kind");
    openapiFields.add("primaryBackup");
    openapiFields.add("wrr");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RRSetRoutingPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RRSetRoutingPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RRSetRoutingPolicy is not found in the empty JSON string", RRSetRoutingPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RRSetRoutingPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RRSetRoutingPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `geo`
      if (jsonObj.get("geo") != null && !jsonObj.get("geo").isJsonNull()) {
        RRSetRoutingPolicyGeoPolicy.validateJsonElement(jsonObj.get("geo"));
      }
      if ((jsonObj.get("healthCheck") != null && !jsonObj.get("healthCheck").isJsonNull()) && !jsonObj.get("healthCheck").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthCheck` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthCheck").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `primaryBackup`
      if (jsonObj.get("primaryBackup") != null && !jsonObj.get("primaryBackup").isJsonNull()) {
        RRSetRoutingPolicyPrimaryBackupPolicy.validateJsonElement(jsonObj.get("primaryBackup"));
      }
      // validate the optional field `wrr`
      if (jsonObj.get("wrr") != null && !jsonObj.get("wrr").isJsonNull()) {
        RRSetRoutingPolicyWrrPolicy.validateJsonElement(jsonObj.get("wrr"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RRSetRoutingPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RRSetRoutingPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RRSetRoutingPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RRSetRoutingPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<RRSetRoutingPolicy>() {
           @Override
           public void write(JsonWriter out, RRSetRoutingPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RRSetRoutingPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RRSetRoutingPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RRSetRoutingPolicy
   * @throws IOException if the JSON string is invalid with respect to RRSetRoutingPolicy
   */
  public static RRSetRoutingPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RRSetRoutingPolicy.class);
  }

  /**
   * Convert an instance of RRSetRoutingPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

