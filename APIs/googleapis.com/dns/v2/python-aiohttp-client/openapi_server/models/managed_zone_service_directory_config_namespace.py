# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManagedZoneServiceDirectoryConfigNamespace(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deletion_time: str=None, kind: str='dns#managedZoneServiceDirectoryConfigNamespace', namespace_url: str=None):
        """ManagedZoneServiceDirectoryConfigNamespace - a model defined in OpenAPI

        :param deletion_time: The deletion_time of this ManagedZoneServiceDirectoryConfigNamespace.
        :param kind: The kind of this ManagedZoneServiceDirectoryConfigNamespace.
        :param namespace_url: The namespace_url of this ManagedZoneServiceDirectoryConfigNamespace.
        """
        self.openapi_types = {
            'deletion_time': str,
            'kind': str,
            'namespace_url': str
        }

        self.attribute_map = {
            'deletion_time': 'deletionTime',
            'kind': 'kind',
            'namespace_url': 'namespaceUrl'
        }

        self._deletion_time = deletion_time
        self._kind = kind
        self._namespace_url = namespace_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedZoneServiceDirectoryConfigNamespace':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedZoneServiceDirectoryConfigNamespace of this ManagedZoneServiceDirectoryConfigNamespace.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deletion_time(self):
        """Gets the deletion_time of this ManagedZoneServiceDirectoryConfigNamespace.

        The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only.

        :return: The deletion_time of this ManagedZoneServiceDirectoryConfigNamespace.
        :rtype: str
        """
        return self._deletion_time

    @deletion_time.setter
    def deletion_time(self, deletion_time):
        """Sets the deletion_time of this ManagedZoneServiceDirectoryConfigNamespace.

        The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only.

        :param deletion_time: The deletion_time of this ManagedZoneServiceDirectoryConfigNamespace.
        :type deletion_time: str
        """

        self._deletion_time = deletion_time

    @property
    def kind(self):
        """Gets the kind of this ManagedZoneServiceDirectoryConfigNamespace.


        :return: The kind of this ManagedZoneServiceDirectoryConfigNamespace.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ManagedZoneServiceDirectoryConfigNamespace.


        :param kind: The kind of this ManagedZoneServiceDirectoryConfigNamespace.
        :type kind: str
        """

        self._kind = kind

    @property
    def namespace_url(self):
        """Gets the namespace_url of this ManagedZoneServiceDirectoryConfigNamespace.

        The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}

        :return: The namespace_url of this ManagedZoneServiceDirectoryConfigNamespace.
        :rtype: str
        """
        return self._namespace_url

    @namespace_url.setter
    def namespace_url(self, namespace_url):
        """Sets the namespace_url of this ManagedZoneServiceDirectoryConfigNamespace.

        The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}

        :param namespace_url: The namespace_url of this ManagedZoneServiceDirectoryConfigNamespace.
        :type namespace_url: str
        """

        self._namespace_url = namespace_url
