# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.response_policy_gke_cluster import ResponsePolicyGKECluster
from openapi_server.models.response_policy_network import ResponsePolicyNetwork
from openapi_server import util


class ResponsePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, gke_clusters: List[ResponsePolicyGKECluster]=None, id: str=None, kind: str='dns#responsePolicy', labels: Dict[str, str]=None, networks: List[ResponsePolicyNetwork]=None, response_policy_name: str=None):
        """ResponsePolicy - a model defined in OpenAPI

        :param description: The description of this ResponsePolicy.
        :param gke_clusters: The gke_clusters of this ResponsePolicy.
        :param id: The id of this ResponsePolicy.
        :param kind: The kind of this ResponsePolicy.
        :param labels: The labels of this ResponsePolicy.
        :param networks: The networks of this ResponsePolicy.
        :param response_policy_name: The response_policy_name of this ResponsePolicy.
        """
        self.openapi_types = {
            'description': str,
            'gke_clusters': List[ResponsePolicyGKECluster],
            'id': str,
            'kind': str,
            'labels': Dict[str, str],
            'networks': List[ResponsePolicyNetwork],
            'response_policy_name': str
        }

        self.attribute_map = {
            'description': 'description',
            'gke_clusters': 'gkeClusters',
            'id': 'id',
            'kind': 'kind',
            'labels': 'labels',
            'networks': 'networks',
            'response_policy_name': 'responsePolicyName'
        }

        self._description = description
        self._gke_clusters = gke_clusters
        self._id = id
        self._kind = kind
        self._labels = labels
        self._networks = networks
        self._response_policy_name = response_policy_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponsePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponsePolicy of this ResponsePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ResponsePolicy.

        User-provided description for this Response Policy.

        :return: The description of this ResponsePolicy.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ResponsePolicy.

        User-provided description for this Response Policy.

        :param description: The description of this ResponsePolicy.
        :type description: str
        """

        self._description = description

    @property
    def gke_clusters(self):
        """Gets the gke_clusters of this ResponsePolicy.

        The list of Google Kubernetes Engine clusters to which this response policy is applied.

        :return: The gke_clusters of this ResponsePolicy.
        :rtype: List[ResponsePolicyGKECluster]
        """
        return self._gke_clusters

    @gke_clusters.setter
    def gke_clusters(self, gke_clusters):
        """Sets the gke_clusters of this ResponsePolicy.

        The list of Google Kubernetes Engine clusters to which this response policy is applied.

        :param gke_clusters: The gke_clusters of this ResponsePolicy.
        :type gke_clusters: List[ResponsePolicyGKECluster]
        """

        self._gke_clusters = gke_clusters

    @property
    def id(self):
        """Gets the id of this ResponsePolicy.

        Unique identifier for the resource; defined by the server (output only).

        :return: The id of this ResponsePolicy.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ResponsePolicy.

        Unique identifier for the resource; defined by the server (output only).

        :param id: The id of this ResponsePolicy.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this ResponsePolicy.


        :return: The kind of this ResponsePolicy.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ResponsePolicy.


        :param kind: The kind of this ResponsePolicy.
        :type kind: str
        """

        self._kind = kind

    @property
    def labels(self):
        """Gets the labels of this ResponsePolicy.

        User labels.

        :return: The labels of this ResponsePolicy.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this ResponsePolicy.

        User labels.

        :param labels: The labels of this ResponsePolicy.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def networks(self):
        """Gets the networks of this ResponsePolicy.

        List of network names specifying networks to which this policy is applied.

        :return: The networks of this ResponsePolicy.
        :rtype: List[ResponsePolicyNetwork]
        """
        return self._networks

    @networks.setter
    def networks(self, networks):
        """Sets the networks of this ResponsePolicy.

        List of network names specifying networks to which this policy is applied.

        :param networks: The networks of this ResponsePolicy.
        :type networks: List[ResponsePolicyNetwork]
        """

        self._networks = networks

    @property
    def response_policy_name(self):
        """Gets the response_policy_name of this ResponsePolicy.

        User assigned name for this Response Policy.

        :return: The response_policy_name of this ResponsePolicy.
        :rtype: str
        """
        return self._response_policy_name

    @response_policy_name.setter
    def response_policy_name(self, response_policy_name):
        """Sets the response_policy_name of this ResponsePolicy.

        User assigned name for this Response Policy.

        :param response_policy_name: The response_policy_name of this ResponsePolicy.
        :type response_policy_name: str
        """

        self._response_policy_name = response_policy_name
