# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quota import Quota
from openapi_server import util


class Project(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, kind: str='dns#project', number: str=None, quota: Quota=None):
        """Project - a model defined in OpenAPI

        :param id: The id of this Project.
        :param kind: The kind of this Project.
        :param number: The number of this Project.
        :param quota: The quota of this Project.
        """
        self.openapi_types = {
            'id': str,
            'kind': str,
            'number': str,
            'quota': Quota
        }

        self.attribute_map = {
            'id': 'id',
            'kind': 'kind',
            'number': 'number',
            'quota': 'quota'
        }

        self._id = id
        self._kind = kind
        self._number = number
        self._quota = quota

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Project':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Project of this Project.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Project.

        User assigned unique identifier for the resource (output only).

        :return: The id of this Project.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Project.

        User assigned unique identifier for the resource (output only).

        :param id: The id of this Project.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this Project.


        :return: The kind of this Project.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Project.


        :param kind: The kind of this Project.
        :type kind: str
        """

        self._kind = kind

    @property
    def number(self):
        """Gets the number of this Project.

        Unique numeric identifier for the resource; defined by the server (output only).

        :return: The number of this Project.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this Project.

        Unique numeric identifier for the resource; defined by the server (output only).

        :param number: The number of this Project.
        :type number: str
        """

        self._number = number

    @property
    def quota(self):
        """Gets the quota of this Project.


        :return: The quota of this Project.
        :rtype: Quota
        """
        return self._quota

    @quota.setter
    def quota(self, quota):
        """Sets the quota of this Project.


        :param quota: The quota of this Project.
        :type quota: Quota
        """

        self._quota = quota
