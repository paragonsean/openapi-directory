# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_record_set import ResourceRecordSet
from openapi_server import util


class ResponsePolicyRuleLocalData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, local_datas: List[ResourceRecordSet]=None):
        """ResponsePolicyRuleLocalData - a model defined in OpenAPI

        :param local_datas: The local_datas of this ResponsePolicyRuleLocalData.
        """
        self.openapi_types = {
            'local_datas': List[ResourceRecordSet]
        }

        self.attribute_map = {
            'local_datas': 'localDatas'
        }

        self._local_datas = local_datas

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponsePolicyRuleLocalData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponsePolicyRuleLocalData of this ResponsePolicyRuleLocalData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def local_datas(self):
        """Gets the local_datas of this ResponsePolicyRuleLocalData.

        All resource record sets for this selector, one per resource record type. The name must match the dns_name.

        :return: The local_datas of this ResponsePolicyRuleLocalData.
        :rtype: List[ResourceRecordSet]
        """
        return self._local_datas

    @local_datas.setter
    def local_datas(self, local_datas):
        """Sets the local_datas of this ResponsePolicyRuleLocalData.

        All resource record sets for this selector, one per resource record type. The name must match the dns_name.

        :param local_datas: The local_datas of this ResponsePolicyRuleLocalData.
        :type local_datas: List[ResourceRecordSet]
        """

        self._local_datas = local_datas
