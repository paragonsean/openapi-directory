/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudDnsApi);
  }
}(this, function(expect, CloudDnsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudDnsApi.Quota();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Quota', function() {
    it('should create an instance of Quota', function() {
      // uncomment below and update the code to test Quota
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be.a(CloudDnsApi.Quota);
    });

    it('should have the property dnsKeysPerManagedZone (base name: "dnsKeysPerManagedZone")', function() {
      // uncomment below and update the code to test the property dnsKeysPerManagedZone
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property gkeClustersPerManagedZone (base name: "gkeClustersPerManagedZone")', function() {
      // uncomment below and update the code to test the property gkeClustersPerManagedZone
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property gkeClustersPerPolicy (base name: "gkeClustersPerPolicy")', function() {
      // uncomment below and update the code to test the property gkeClustersPerPolicy
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property gkeClustersPerResponsePolicy (base name: "gkeClustersPerResponsePolicy")', function() {
      // uncomment below and update the code to test the property gkeClustersPerResponsePolicy
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property itemsPerRoutingPolicy (base name: "itemsPerRoutingPolicy")', function() {
      // uncomment below and update the code to test the property itemsPerRoutingPolicy
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property managedZones (base name: "managedZones")', function() {
      // uncomment below and update the code to test the property managedZones
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property managedZonesPerGkeCluster (base name: "managedZonesPerGkeCluster")', function() {
      // uncomment below and update the code to test the property managedZonesPerGkeCluster
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property managedZonesPerNetwork (base name: "managedZonesPerNetwork")', function() {
      // uncomment below and update the code to test the property managedZonesPerNetwork
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property nameserversPerDelegation (base name: "nameserversPerDelegation")', function() {
      // uncomment below and update the code to test the property nameserversPerDelegation
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property networksPerManagedZone (base name: "networksPerManagedZone")', function() {
      // uncomment below and update the code to test the property networksPerManagedZone
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property networksPerPolicy (base name: "networksPerPolicy")', function() {
      // uncomment below and update the code to test the property networksPerPolicy
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property networksPerResponsePolicy (base name: "networksPerResponsePolicy")', function() {
      // uncomment below and update the code to test the property networksPerResponsePolicy
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property peeringZonesPerTargetNetwork (base name: "peeringZonesPerTargetNetwork")', function() {
      // uncomment below and update the code to test the property peeringZonesPerTargetNetwork
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property policies (base name: "policies")', function() {
      // uncomment below and update the code to test the property policies
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property resourceRecordsPerRrset (base name: "resourceRecordsPerRrset")', function() {
      // uncomment below and update the code to test the property resourceRecordsPerRrset
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property responsePolicies (base name: "responsePolicies")', function() {
      // uncomment below and update the code to test the property responsePolicies
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property responsePolicyRulesPerResponsePolicy (base name: "responsePolicyRulesPerResponsePolicy")', function() {
      // uncomment below and update the code to test the property responsePolicyRulesPerResponsePolicy
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property rrsetAdditionsPerChange (base name: "rrsetAdditionsPerChange")', function() {
      // uncomment below and update the code to test the property rrsetAdditionsPerChange
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property rrsetDeletionsPerChange (base name: "rrsetDeletionsPerChange")', function() {
      // uncomment below and update the code to test the property rrsetDeletionsPerChange
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property rrsetsPerManagedZone (base name: "rrsetsPerManagedZone")', function() {
      // uncomment below and update the code to test the property rrsetsPerManagedZone
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property targetNameServersPerManagedZone (base name: "targetNameServersPerManagedZone")', function() {
      // uncomment below and update the code to test the property targetNameServersPerManagedZone
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property targetNameServersPerPolicy (base name: "targetNameServersPerPolicy")', function() {
      // uncomment below and update the code to test the property targetNameServersPerPolicy
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property totalRrdataSizePerChange (base name: "totalRrdataSizePerChange")', function() {
      // uncomment below and update the code to test the property totalRrdataSizePerChange
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

    it('should have the property whitelistedKeySpecs (base name: "whitelistedKeySpecs")', function() {
      // uncomment below and update the code to test the property whitelistedKeySpecs
      //var instance = new CloudDnsApi.Quota();
      //expect(instance).to.be();
    });

  });

}));
