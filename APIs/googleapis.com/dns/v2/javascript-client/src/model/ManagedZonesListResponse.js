/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ManagedZone from './ManagedZone';
import ResponseHeader from './ResponseHeader';

/**
 * The ManagedZonesListResponse model module.
 * @module model/ManagedZonesListResponse
 * @version v2
 */
class ManagedZonesListResponse {
    /**
     * Constructs a new <code>ManagedZonesListResponse</code>.
     * @alias module:model/ManagedZonesListResponse
     */
    constructor() { 
        
        ManagedZonesListResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'dns#managedZonesListResponse';
    }

    /**
     * Constructs a <code>ManagedZonesListResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagedZonesListResponse} obj Optional instance to populate.
     * @return {module:model/ManagedZonesListResponse} The populated <code>ManagedZonesListResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagedZonesListResponse();

            if (data.hasOwnProperty('header')) {
                obj['header'] = ResponseHeader.constructFromObject(data['header']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('managedZones')) {
                obj['managedZones'] = ApiClient.convertToType(data['managedZones'], [ManagedZone]);
            }
            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagedZonesListResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagedZonesListResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `header`
        if (data['header']) { // data not null
          ResponseHeader.validateJSON(data['header']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        if (data['managedZones']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['managedZones'])) {
                throw new Error("Expected the field `managedZones` to be an array in the JSON data but got " + data['managedZones']);
            }
            // validate the optional field `managedZones` (array)
            for (const item of data['managedZones']) {
                ManagedZone.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }

        return true;
    }


}



/**
 * @member {module:model/ResponseHeader} header
 */
ManagedZonesListResponse.prototype['header'] = undefined;

/**
 * Type of resource.
 * @member {String} kind
 * @default 'dns#managedZonesListResponse'
 */
ManagedZonesListResponse.prototype['kind'] = 'dns#managedZonesListResponse';

/**
 * The managed zone resources.
 * @member {Array.<module:model/ManagedZone>} managedZones
 */
ManagedZonesListResponse.prototype['managedZones'] = undefined;

/**
 * The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.
 * @member {String} nextPageToken
 */
ManagedZonesListResponse.prototype['nextPageToken'] = undefined;






export default ManagedZonesListResponse;

