/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRRSetRoutingPolicyPrimaryBackupPolicy.h
 *
 * Configures a RRSetRoutingPolicy such that all queries are responded with the primary_targets if they are healthy. And if all of them are unhealthy, then we fallback to a geo localized policy.
 */

#ifndef OAIRRSetRoutingPolicyPrimaryBackupPolicy_H
#define OAIRRSetRoutingPolicyPrimaryBackupPolicy_H

#include <QJsonObject>

#include "OAIRRSetRoutingPolicyGeoPolicy.h"
#include "OAIRRSetRoutingPolicyHealthCheckTargets.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRRSetRoutingPolicyGeoPolicy;
class OAIRRSetRoutingPolicyHealthCheckTargets;

class OAIRRSetRoutingPolicyPrimaryBackupPolicy : public OAIObject {
public:
    OAIRRSetRoutingPolicyPrimaryBackupPolicy();
    OAIRRSetRoutingPolicyPrimaryBackupPolicy(QString json);
    ~OAIRRSetRoutingPolicyPrimaryBackupPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRRSetRoutingPolicyGeoPolicy getBackupGeoTargets() const;
    void setBackupGeoTargets(const OAIRRSetRoutingPolicyGeoPolicy &backup_geo_targets);
    bool is_backup_geo_targets_Set() const;
    bool is_backup_geo_targets_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAIRRSetRoutingPolicyHealthCheckTargets getPrimaryTargets() const;
    void setPrimaryTargets(const OAIRRSetRoutingPolicyHealthCheckTargets &primary_targets);
    bool is_primary_targets_Set() const;
    bool is_primary_targets_Valid() const;

    double getTrickleTraffic() const;
    void setTrickleTraffic(const double &trickle_traffic);
    bool is_trickle_traffic_Set() const;
    bool is_trickle_traffic_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRRSetRoutingPolicyGeoPolicy m_backup_geo_targets;
    bool m_backup_geo_targets_isSet;
    bool m_backup_geo_targets_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAIRRSetRoutingPolicyHealthCheckTargets m_primary_targets;
    bool m_primary_targets_isSet;
    bool m_primary_targets_isValid;

    double m_trickle_traffic;
    bool m_trickle_traffic_isSet;
    bool m_trickle_traffic_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRRSetRoutingPolicyPrimaryBackupPolicy)

#endif // OAIRRSetRoutingPolicyPrimaryBackupPolicy_H
