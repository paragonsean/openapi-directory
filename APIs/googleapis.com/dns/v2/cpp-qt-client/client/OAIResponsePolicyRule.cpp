/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponsePolicyRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponsePolicyRule::OAIResponsePolicyRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponsePolicyRule::OAIResponsePolicyRule() {
    this->initializeModel();
}

OAIResponsePolicyRule::~OAIResponsePolicyRule() {}

void OAIResponsePolicyRule::initializeModel() {

    m_behavior_isSet = false;
    m_behavior_isValid = false;

    m_dns_name_isSet = false;
    m_dns_name_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_local_data_isSet = false;
    m_local_data_isValid = false;

    m_rule_name_isSet = false;
    m_rule_name_isValid = false;
}

void OAIResponsePolicyRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponsePolicyRule::fromJsonObject(QJsonObject json) {

    m_behavior_isValid = ::OpenAPI::fromJsonValue(m_behavior, json[QString("behavior")]);
    m_behavior_isSet = !json[QString("behavior")].isNull() && m_behavior_isValid;

    m_dns_name_isValid = ::OpenAPI::fromJsonValue(m_dns_name, json[QString("dnsName")]);
    m_dns_name_isSet = !json[QString("dnsName")].isNull() && m_dns_name_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_local_data_isValid = ::OpenAPI::fromJsonValue(m_local_data, json[QString("localData")]);
    m_local_data_isSet = !json[QString("localData")].isNull() && m_local_data_isValid;

    m_rule_name_isValid = ::OpenAPI::fromJsonValue(m_rule_name, json[QString("ruleName")]);
    m_rule_name_isSet = !json[QString("ruleName")].isNull() && m_rule_name_isValid;
}

QString OAIResponsePolicyRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponsePolicyRule::asJsonObject() const {
    QJsonObject obj;
    if (m_behavior_isSet) {
        obj.insert(QString("behavior"), ::OpenAPI::toJsonValue(m_behavior));
    }
    if (m_dns_name_isSet) {
        obj.insert(QString("dnsName"), ::OpenAPI::toJsonValue(m_dns_name));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_local_data.isSet()) {
        obj.insert(QString("localData"), ::OpenAPI::toJsonValue(m_local_data));
    }
    if (m_rule_name_isSet) {
        obj.insert(QString("ruleName"), ::OpenAPI::toJsonValue(m_rule_name));
    }
    return obj;
}

QString OAIResponsePolicyRule::getBehavior() const {
    return m_behavior;
}
void OAIResponsePolicyRule::setBehavior(const QString &behavior) {
    m_behavior = behavior;
    m_behavior_isSet = true;
}

bool OAIResponsePolicyRule::is_behavior_Set() const{
    return m_behavior_isSet;
}

bool OAIResponsePolicyRule::is_behavior_Valid() const{
    return m_behavior_isValid;
}

QString OAIResponsePolicyRule::getDnsName() const {
    return m_dns_name;
}
void OAIResponsePolicyRule::setDnsName(const QString &dns_name) {
    m_dns_name = dns_name;
    m_dns_name_isSet = true;
}

bool OAIResponsePolicyRule::is_dns_name_Set() const{
    return m_dns_name_isSet;
}

bool OAIResponsePolicyRule::is_dns_name_Valid() const{
    return m_dns_name_isValid;
}

QString OAIResponsePolicyRule::getKind() const {
    return m_kind;
}
void OAIResponsePolicyRule::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIResponsePolicyRule::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIResponsePolicyRule::is_kind_Valid() const{
    return m_kind_isValid;
}

OAIResponsePolicyRuleLocalData OAIResponsePolicyRule::getLocalData() const {
    return m_local_data;
}
void OAIResponsePolicyRule::setLocalData(const OAIResponsePolicyRuleLocalData &local_data) {
    m_local_data = local_data;
    m_local_data_isSet = true;
}

bool OAIResponsePolicyRule::is_local_data_Set() const{
    return m_local_data_isSet;
}

bool OAIResponsePolicyRule::is_local_data_Valid() const{
    return m_local_data_isValid;
}

QString OAIResponsePolicyRule::getRuleName() const {
    return m_rule_name;
}
void OAIResponsePolicyRule::setRuleName(const QString &rule_name) {
    m_rule_name = rule_name;
    m_rule_name_isSet = true;
}

bool OAIResponsePolicyRule::is_rule_name_Set() const{
    return m_rule_name_isSet;
}

bool OAIResponsePolicyRule::is_rule_name_Valid() const{
    return m_rule_name_isValid;
}

bool OAIResponsePolicyRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_behavior_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dns_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_local_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponsePolicyRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
