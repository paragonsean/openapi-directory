/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuota.h
 *
 * Limits associated with a Project.
 */

#ifndef OAIQuota_H
#define OAIQuota_H

#include <QJsonObject>

#include "OAIDnsKeySpec.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDnsKeySpec;

class OAIQuota : public OAIObject {
public:
    OAIQuota();
    OAIQuota(QString json);
    ~OAIQuota() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDnsKeysPerManagedZone() const;
    void setDnsKeysPerManagedZone(const qint32 &dns_keys_per_managed_zone);
    bool is_dns_keys_per_managed_zone_Set() const;
    bool is_dns_keys_per_managed_zone_Valid() const;

    qint32 getGkeClustersPerManagedZone() const;
    void setGkeClustersPerManagedZone(const qint32 &gke_clusters_per_managed_zone);
    bool is_gke_clusters_per_managed_zone_Set() const;
    bool is_gke_clusters_per_managed_zone_Valid() const;

    qint32 getGkeClustersPerPolicy() const;
    void setGkeClustersPerPolicy(const qint32 &gke_clusters_per_policy);
    bool is_gke_clusters_per_policy_Set() const;
    bool is_gke_clusters_per_policy_Valid() const;

    qint32 getGkeClustersPerResponsePolicy() const;
    void setGkeClustersPerResponsePolicy(const qint32 &gke_clusters_per_response_policy);
    bool is_gke_clusters_per_response_policy_Set() const;
    bool is_gke_clusters_per_response_policy_Valid() const;

    qint32 getItemsPerRoutingPolicy() const;
    void setItemsPerRoutingPolicy(const qint32 &items_per_routing_policy);
    bool is_items_per_routing_policy_Set() const;
    bool is_items_per_routing_policy_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    qint32 getManagedZones() const;
    void setManagedZones(const qint32 &managed_zones);
    bool is_managed_zones_Set() const;
    bool is_managed_zones_Valid() const;

    qint32 getManagedZonesPerGkeCluster() const;
    void setManagedZonesPerGkeCluster(const qint32 &managed_zones_per_gke_cluster);
    bool is_managed_zones_per_gke_cluster_Set() const;
    bool is_managed_zones_per_gke_cluster_Valid() const;

    qint32 getManagedZonesPerNetwork() const;
    void setManagedZonesPerNetwork(const qint32 &managed_zones_per_network);
    bool is_managed_zones_per_network_Set() const;
    bool is_managed_zones_per_network_Valid() const;

    qint32 getNameserversPerDelegation() const;
    void setNameserversPerDelegation(const qint32 &nameservers_per_delegation);
    bool is_nameservers_per_delegation_Set() const;
    bool is_nameservers_per_delegation_Valid() const;

    qint32 getNetworksPerManagedZone() const;
    void setNetworksPerManagedZone(const qint32 &networks_per_managed_zone);
    bool is_networks_per_managed_zone_Set() const;
    bool is_networks_per_managed_zone_Valid() const;

    qint32 getNetworksPerPolicy() const;
    void setNetworksPerPolicy(const qint32 &networks_per_policy);
    bool is_networks_per_policy_Set() const;
    bool is_networks_per_policy_Valid() const;

    qint32 getNetworksPerResponsePolicy() const;
    void setNetworksPerResponsePolicy(const qint32 &networks_per_response_policy);
    bool is_networks_per_response_policy_Set() const;
    bool is_networks_per_response_policy_Valid() const;

    qint32 getPeeringZonesPerTargetNetwork() const;
    void setPeeringZonesPerTargetNetwork(const qint32 &peering_zones_per_target_network);
    bool is_peering_zones_per_target_network_Set() const;
    bool is_peering_zones_per_target_network_Valid() const;

    qint32 getPolicies() const;
    void setPolicies(const qint32 &policies);
    bool is_policies_Set() const;
    bool is_policies_Valid() const;

    qint32 getResourceRecordsPerRrset() const;
    void setResourceRecordsPerRrset(const qint32 &resource_records_per_rrset);
    bool is_resource_records_per_rrset_Set() const;
    bool is_resource_records_per_rrset_Valid() const;

    qint32 getResponsePolicies() const;
    void setResponsePolicies(const qint32 &response_policies);
    bool is_response_policies_Set() const;
    bool is_response_policies_Valid() const;

    qint32 getResponsePolicyRulesPerResponsePolicy() const;
    void setResponsePolicyRulesPerResponsePolicy(const qint32 &response_policy_rules_per_response_policy);
    bool is_response_policy_rules_per_response_policy_Set() const;
    bool is_response_policy_rules_per_response_policy_Valid() const;

    qint32 getRrsetAdditionsPerChange() const;
    void setRrsetAdditionsPerChange(const qint32 &rrset_additions_per_change);
    bool is_rrset_additions_per_change_Set() const;
    bool is_rrset_additions_per_change_Valid() const;

    qint32 getRrsetDeletionsPerChange() const;
    void setRrsetDeletionsPerChange(const qint32 &rrset_deletions_per_change);
    bool is_rrset_deletions_per_change_Set() const;
    bool is_rrset_deletions_per_change_Valid() const;

    qint32 getRrsetsPerManagedZone() const;
    void setRrsetsPerManagedZone(const qint32 &rrsets_per_managed_zone);
    bool is_rrsets_per_managed_zone_Set() const;
    bool is_rrsets_per_managed_zone_Valid() const;

    qint32 getTargetNameServersPerManagedZone() const;
    void setTargetNameServersPerManagedZone(const qint32 &target_name_servers_per_managed_zone);
    bool is_target_name_servers_per_managed_zone_Set() const;
    bool is_target_name_servers_per_managed_zone_Valid() const;

    qint32 getTargetNameServersPerPolicy() const;
    void setTargetNameServersPerPolicy(const qint32 &target_name_servers_per_policy);
    bool is_target_name_servers_per_policy_Set() const;
    bool is_target_name_servers_per_policy_Valid() const;

    qint32 getTotalRrdataSizePerChange() const;
    void setTotalRrdataSizePerChange(const qint32 &total_rrdata_size_per_change);
    bool is_total_rrdata_size_per_change_Set() const;
    bool is_total_rrdata_size_per_change_Valid() const;

    QList<OAIDnsKeySpec> getWhitelistedKeySpecs() const;
    void setWhitelistedKeySpecs(const QList<OAIDnsKeySpec> &whitelisted_key_specs);
    bool is_whitelisted_key_specs_Set() const;
    bool is_whitelisted_key_specs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_dns_keys_per_managed_zone;
    bool m_dns_keys_per_managed_zone_isSet;
    bool m_dns_keys_per_managed_zone_isValid;

    qint32 m_gke_clusters_per_managed_zone;
    bool m_gke_clusters_per_managed_zone_isSet;
    bool m_gke_clusters_per_managed_zone_isValid;

    qint32 m_gke_clusters_per_policy;
    bool m_gke_clusters_per_policy_isSet;
    bool m_gke_clusters_per_policy_isValid;

    qint32 m_gke_clusters_per_response_policy;
    bool m_gke_clusters_per_response_policy_isSet;
    bool m_gke_clusters_per_response_policy_isValid;

    qint32 m_items_per_routing_policy;
    bool m_items_per_routing_policy_isSet;
    bool m_items_per_routing_policy_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    qint32 m_managed_zones;
    bool m_managed_zones_isSet;
    bool m_managed_zones_isValid;

    qint32 m_managed_zones_per_gke_cluster;
    bool m_managed_zones_per_gke_cluster_isSet;
    bool m_managed_zones_per_gke_cluster_isValid;

    qint32 m_managed_zones_per_network;
    bool m_managed_zones_per_network_isSet;
    bool m_managed_zones_per_network_isValid;

    qint32 m_nameservers_per_delegation;
    bool m_nameservers_per_delegation_isSet;
    bool m_nameservers_per_delegation_isValid;

    qint32 m_networks_per_managed_zone;
    bool m_networks_per_managed_zone_isSet;
    bool m_networks_per_managed_zone_isValid;

    qint32 m_networks_per_policy;
    bool m_networks_per_policy_isSet;
    bool m_networks_per_policy_isValid;

    qint32 m_networks_per_response_policy;
    bool m_networks_per_response_policy_isSet;
    bool m_networks_per_response_policy_isValid;

    qint32 m_peering_zones_per_target_network;
    bool m_peering_zones_per_target_network_isSet;
    bool m_peering_zones_per_target_network_isValid;

    qint32 m_policies;
    bool m_policies_isSet;
    bool m_policies_isValid;

    qint32 m_resource_records_per_rrset;
    bool m_resource_records_per_rrset_isSet;
    bool m_resource_records_per_rrset_isValid;

    qint32 m_response_policies;
    bool m_response_policies_isSet;
    bool m_response_policies_isValid;

    qint32 m_response_policy_rules_per_response_policy;
    bool m_response_policy_rules_per_response_policy_isSet;
    bool m_response_policy_rules_per_response_policy_isValid;

    qint32 m_rrset_additions_per_change;
    bool m_rrset_additions_per_change_isSet;
    bool m_rrset_additions_per_change_isValid;

    qint32 m_rrset_deletions_per_change;
    bool m_rrset_deletions_per_change_isSet;
    bool m_rrset_deletions_per_change_isValid;

    qint32 m_rrsets_per_managed_zone;
    bool m_rrsets_per_managed_zone_isSet;
    bool m_rrsets_per_managed_zone_isValid;

    qint32 m_target_name_servers_per_managed_zone;
    bool m_target_name_servers_per_managed_zone_isSet;
    bool m_target_name_servers_per_managed_zone_isValid;

    qint32 m_target_name_servers_per_policy;
    bool m_target_name_servers_per_policy_isSet;
    bool m_target_name_servers_per_policy_isValid;

    qint32 m_total_rrdata_size_per_change;
    bool m_total_rrdata_size_per_change_isSet;
    bool m_total_rrdata_size_per_change_isValid;

    QList<OAIDnsKeySpec> m_whitelisted_key_specs;
    bool m_whitelisted_key_specs_isSet;
    bool m_whitelisted_key_specs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuota)

#endif // OAIQuota_H
