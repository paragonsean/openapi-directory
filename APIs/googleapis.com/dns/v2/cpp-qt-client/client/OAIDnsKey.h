/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDnsKey.h
 *
 * A DNSSEC key pair.
 */

#ifndef OAIDnsKey_H
#define OAIDnsKey_H

#include <QJsonObject>

#include "OAIDnsKeyDigest.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDnsKeyDigest;

class OAIDnsKey : public OAIObject {
public:
    OAIDnsKey();
    OAIDnsKey(QString json);
    ~OAIDnsKey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlgorithm() const;
    void setAlgorithm(const QString &algorithm);
    bool is_algorithm_Set() const;
    bool is_algorithm_Valid() const;

    QString getCreationTime() const;
    void setCreationTime(const QString &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIDnsKeyDigest> getDigests() const;
    void setDigests(const QList<OAIDnsKeyDigest> &digests);
    bool is_digests_Set() const;
    bool is_digests_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    qint32 getKeyLength() const;
    void setKeyLength(const qint32 &key_length);
    bool is_key_length_Set() const;
    bool is_key_length_Valid() const;

    qint32 getKeyTag() const;
    void setKeyTag(const qint32 &key_tag);
    bool is_key_tag_Set() const;
    bool is_key_tag_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getPublicKey() const;
    void setPublicKey(const QString &public_key);
    bool is_public_key_Set() const;
    bool is_public_key_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_algorithm;
    bool m_algorithm_isSet;
    bool m_algorithm_isValid;

    QString m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIDnsKeyDigest> m_digests;
    bool m_digests_isSet;
    bool m_digests_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    qint32 m_key_length;
    bool m_key_length_isSet;
    bool m_key_length_isValid;

    qint32 m_key_tag;
    bool m_key_tag_isSet;
    bool m_key_tag_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_public_key;
    bool m_public_key_isSet;
    bool m_public_key_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDnsKey)

#endif // OAIDnsKey_H
