# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rr_set_routing_policy_health_check_targets import RRSetRoutingPolicyHealthCheckTargets
from openapi_server import util


class RRSetRoutingPolicyGeoPolicyGeoPolicyItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health_checked_targets: RRSetRoutingPolicyHealthCheckTargets=None, kind: str='dns#rRSetRoutingPolicyGeoPolicyGeoPolicyItem', location: str=None, rrdatas: List[str]=None, signature_rrdatas: List[str]=None):
        """RRSetRoutingPolicyGeoPolicyGeoPolicyItem - a model defined in OpenAPI

        :param health_checked_targets: The health_checked_targets of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :param kind: The kind of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :param location: The location of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :param rrdatas: The rrdatas of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :param signature_rrdatas: The signature_rrdatas of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        """
        self.openapi_types = {
            'health_checked_targets': RRSetRoutingPolicyHealthCheckTargets,
            'kind': str,
            'location': str,
            'rrdatas': List[str],
            'signature_rrdatas': List[str]
        }

        self.attribute_map = {
            'health_checked_targets': 'healthCheckedTargets',
            'kind': 'kind',
            'location': 'location',
            'rrdatas': 'rrdatas',
            'signature_rrdatas': 'signatureRrdatas'
        }

        self._health_checked_targets = health_checked_targets
        self._kind = kind
        self._location = location
        self._rrdatas = rrdatas
        self._signature_rrdatas = signature_rrdatas

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RRSetRoutingPolicyGeoPolicyGeoPolicyItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RRSetRoutingPolicyGeoPolicyGeoPolicyItem of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health_checked_targets(self):
        """Gets the health_checked_targets of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.


        :return: The health_checked_targets of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :rtype: RRSetRoutingPolicyHealthCheckTargets
        """
        return self._health_checked_targets

    @health_checked_targets.setter
    def health_checked_targets(self, health_checked_targets):
        """Sets the health_checked_targets of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.


        :param health_checked_targets: The health_checked_targets of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :type health_checked_targets: RRSetRoutingPolicyHealthCheckTargets
        """

        self._health_checked_targets = health_checked_targets

    @property
    def kind(self):
        """Gets the kind of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.


        :return: The kind of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.


        :param kind: The kind of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :type kind: str
        """

        self._kind = kind

    @property
    def location(self):
        """Gets the location of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.

        The geo-location granularity is a GCP region. This location string should correspond to a GCP region. e.g. \"us-east1\", \"southamerica-east1\", \"asia-east1\", etc.

        :return: The location of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.

        The geo-location granularity is a GCP region. This location string should correspond to a GCP region. e.g. \"us-east1\", \"southamerica-east1\", \"asia-east1\", etc.

        :param location: The location of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :type location: str
        """

        self._location = location

    @property
    def rrdatas(self):
        """Gets the rrdatas of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.


        :return: The rrdatas of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :rtype: List[str]
        """
        return self._rrdatas

    @rrdatas.setter
    def rrdatas(self, rrdatas):
        """Sets the rrdatas of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.


        :param rrdatas: The rrdatas of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :type rrdatas: List[str]
        """

        self._rrdatas = rrdatas

    @property
    def signature_rrdatas(self):
        """Gets the signature_rrdatas of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.

        DNSSEC generated signatures for all the rrdata within this item. If health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 IP address per item.

        :return: The signature_rrdatas of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :rtype: List[str]
        """
        return self._signature_rrdatas

    @signature_rrdatas.setter
    def signature_rrdatas(self, signature_rrdatas):
        """Sets the signature_rrdatas of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.

        DNSSEC generated signatures for all the rrdata within this item. If health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 IP address per item.

        :param signature_rrdatas: The signature_rrdatas of this RRSetRoutingPolicyGeoPolicyGeoPolicyItem.
        :type signature_rrdatas: List[str]
        """

        self._signature_rrdatas = signature_rrdatas
