/*
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.RRSetRoutingPolicyGeoPolicy;
import org.openapitools.client.model.RRSetRoutingPolicyHealthCheckTargets;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configures a RRSetRoutingPolicy such that all queries are responded with the primary_targets if they are healthy. And if all of them are unhealthy, then we fallback to a geo localized policy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:24.747480-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RRSetRoutingPolicyPrimaryBackupPolicy {
  public static final String SERIALIZED_NAME_BACKUP_GEO_TARGETS = "backupGeoTargets";
  @SerializedName(SERIALIZED_NAME_BACKUP_GEO_TARGETS)
  private RRSetRoutingPolicyGeoPolicy backupGeoTargets;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "dns#rRSetRoutingPolicyPrimaryBackupPolicy";

  public static final String SERIALIZED_NAME_PRIMARY_TARGETS = "primaryTargets";
  @SerializedName(SERIALIZED_NAME_PRIMARY_TARGETS)
  private RRSetRoutingPolicyHealthCheckTargets primaryTargets;

  public static final String SERIALIZED_NAME_TRICKLE_TRAFFIC = "trickleTraffic";
  @SerializedName(SERIALIZED_NAME_TRICKLE_TRAFFIC)
  private Double trickleTraffic;

  public RRSetRoutingPolicyPrimaryBackupPolicy() {
  }

  public RRSetRoutingPolicyPrimaryBackupPolicy backupGeoTargets(RRSetRoutingPolicyGeoPolicy backupGeoTargets) {
    this.backupGeoTargets = backupGeoTargets;
    return this;
  }

  /**
   * Get backupGeoTargets
   * @return backupGeoTargets
   */
  @javax.annotation.Nullable
  public RRSetRoutingPolicyGeoPolicy getBackupGeoTargets() {
    return backupGeoTargets;
  }

  public void setBackupGeoTargets(RRSetRoutingPolicyGeoPolicy backupGeoTargets) {
    this.backupGeoTargets = backupGeoTargets;
  }


  public RRSetRoutingPolicyPrimaryBackupPolicy kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Get kind
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public RRSetRoutingPolicyPrimaryBackupPolicy primaryTargets(RRSetRoutingPolicyHealthCheckTargets primaryTargets) {
    this.primaryTargets = primaryTargets;
    return this;
  }

  /**
   * Get primaryTargets
   * @return primaryTargets
   */
  @javax.annotation.Nullable
  public RRSetRoutingPolicyHealthCheckTargets getPrimaryTargets() {
    return primaryTargets;
  }

  public void setPrimaryTargets(RRSetRoutingPolicyHealthCheckTargets primaryTargets) {
    this.primaryTargets = primaryTargets;
  }


  public RRSetRoutingPolicyPrimaryBackupPolicy trickleTraffic(Double trickleTraffic) {
    this.trickleTraffic = trickleTraffic;
    return this;
  }

  /**
   * When serving state is PRIMARY, this field provides the option of sending a small percentage of the traffic to the backup targets.
   * @return trickleTraffic
   */
  @javax.annotation.Nullable
  public Double getTrickleTraffic() {
    return trickleTraffic;
  }

  public void setTrickleTraffic(Double trickleTraffic) {
    this.trickleTraffic = trickleTraffic;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RRSetRoutingPolicyPrimaryBackupPolicy rrSetRoutingPolicyPrimaryBackupPolicy = (RRSetRoutingPolicyPrimaryBackupPolicy) o;
    return Objects.equals(this.backupGeoTargets, rrSetRoutingPolicyPrimaryBackupPolicy.backupGeoTargets) &&
        Objects.equals(this.kind, rrSetRoutingPolicyPrimaryBackupPolicy.kind) &&
        Objects.equals(this.primaryTargets, rrSetRoutingPolicyPrimaryBackupPolicy.primaryTargets) &&
        Objects.equals(this.trickleTraffic, rrSetRoutingPolicyPrimaryBackupPolicy.trickleTraffic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupGeoTargets, kind, primaryTargets, trickleTraffic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RRSetRoutingPolicyPrimaryBackupPolicy {\n");
    sb.append("    backupGeoTargets: ").append(toIndentedString(backupGeoTargets)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    primaryTargets: ").append(toIndentedString(primaryTargets)).append("\n");
    sb.append("    trickleTraffic: ").append(toIndentedString(trickleTraffic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backupGeoTargets");
    openapiFields.add("kind");
    openapiFields.add("primaryTargets");
    openapiFields.add("trickleTraffic");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RRSetRoutingPolicyPrimaryBackupPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RRSetRoutingPolicyPrimaryBackupPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RRSetRoutingPolicyPrimaryBackupPolicy is not found in the empty JSON string", RRSetRoutingPolicyPrimaryBackupPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RRSetRoutingPolicyPrimaryBackupPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RRSetRoutingPolicyPrimaryBackupPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `backupGeoTargets`
      if (jsonObj.get("backupGeoTargets") != null && !jsonObj.get("backupGeoTargets").isJsonNull()) {
        RRSetRoutingPolicyGeoPolicy.validateJsonElement(jsonObj.get("backupGeoTargets"));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `primaryTargets`
      if (jsonObj.get("primaryTargets") != null && !jsonObj.get("primaryTargets").isJsonNull()) {
        RRSetRoutingPolicyHealthCheckTargets.validateJsonElement(jsonObj.get("primaryTargets"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RRSetRoutingPolicyPrimaryBackupPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RRSetRoutingPolicyPrimaryBackupPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RRSetRoutingPolicyPrimaryBackupPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RRSetRoutingPolicyPrimaryBackupPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<RRSetRoutingPolicyPrimaryBackupPolicy>() {
           @Override
           public void write(JsonWriter out, RRSetRoutingPolicyPrimaryBackupPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RRSetRoutingPolicyPrimaryBackupPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RRSetRoutingPolicyPrimaryBackupPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RRSetRoutingPolicyPrimaryBackupPolicy
   * @throws IOException if the JSON string is invalid with respect to RRSetRoutingPolicyPrimaryBackupPolicy
   */
  public static RRSetRoutingPolicyPrimaryBackupPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RRSetRoutingPolicyPrimaryBackupPolicy.class);
  }

  /**
   * Convert an instance of RRSetRoutingPolicyPrimaryBackupPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

