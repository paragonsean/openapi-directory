/*
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RRSetRoutingPolicyHealthCheckTargets;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A routing block which contains the routing information for one WRR item.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:50:24.747480-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RRSetRoutingPolicyWrrPolicyWrrPolicyItem {
  public static final String SERIALIZED_NAME_HEALTH_CHECKED_TARGETS = "healthCheckedTargets";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECKED_TARGETS)
  private RRSetRoutingPolicyHealthCheckTargets healthCheckedTargets;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind = "dns#rRSetRoutingPolicyWrrPolicyWrrPolicyItem";

  public static final String SERIALIZED_NAME_RRDATAS = "rrdatas";
  @SerializedName(SERIALIZED_NAME_RRDATAS)
  private List<String> rrdatas = new ArrayList<>();

  public static final String SERIALIZED_NAME_SIGNATURE_RRDATAS = "signatureRrdatas";
  @SerializedName(SERIALIZED_NAME_SIGNATURE_RRDATAS)
  private List<String> signatureRrdatas = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Double weight;

  public RRSetRoutingPolicyWrrPolicyWrrPolicyItem() {
  }

  public RRSetRoutingPolicyWrrPolicyWrrPolicyItem healthCheckedTargets(RRSetRoutingPolicyHealthCheckTargets healthCheckedTargets) {
    this.healthCheckedTargets = healthCheckedTargets;
    return this;
  }

  /**
   * Get healthCheckedTargets
   * @return healthCheckedTargets
   */
  @javax.annotation.Nullable
  public RRSetRoutingPolicyHealthCheckTargets getHealthCheckedTargets() {
    return healthCheckedTargets;
  }

  public void setHealthCheckedTargets(RRSetRoutingPolicyHealthCheckTargets healthCheckedTargets) {
    this.healthCheckedTargets = healthCheckedTargets;
  }


  public RRSetRoutingPolicyWrrPolicyWrrPolicyItem kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Get kind
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public RRSetRoutingPolicyWrrPolicyWrrPolicyItem rrdatas(List<String> rrdatas) {
    this.rrdatas = rrdatas;
    return this;
  }

  public RRSetRoutingPolicyWrrPolicyWrrPolicyItem addRrdatasItem(String rrdatasItem) {
    if (this.rrdatas == null) {
      this.rrdatas = new ArrayList<>();
    }
    this.rrdatas.add(rrdatasItem);
    return this;
  }

  /**
   * Get rrdatas
   * @return rrdatas
   */
  @javax.annotation.Nullable
  public List<String> getRrdatas() {
    return rrdatas;
  }

  public void setRrdatas(List<String> rrdatas) {
    this.rrdatas = rrdatas;
  }


  public RRSetRoutingPolicyWrrPolicyWrrPolicyItem signatureRrdatas(List<String> signatureRrdatas) {
    this.signatureRrdatas = signatureRrdatas;
    return this;
  }

  public RRSetRoutingPolicyWrrPolicyWrrPolicyItem addSignatureRrdatasItem(String signatureRrdatasItem) {
    if (this.signatureRrdatas == null) {
      this.signatureRrdatas = new ArrayList<>();
    }
    this.signatureRrdatas.add(signatureRrdatasItem);
    return this;
  }

  /**
   * DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there&#39;s a restriction of 1 IP address per item.
   * @return signatureRrdatas
   */
  @javax.annotation.Nullable
  public List<String> getSignatureRrdatas() {
    return signatureRrdatas;
  }

  public void setSignatureRrdatas(List<String> signatureRrdatas) {
    this.signatureRrdatas = signatureRrdatas;
  }


  public RRSetRoutingPolicyWrrPolicyWrrPolicyItem weight(Double weight) {
    this.weight = weight;
    return this;
  }

  /**
   * The weight corresponding to this WrrPolicyItem object. When multiple WrrPolicyItem objects are configured, the probability of returning an WrrPolicyItem object&#39;s data is proportional to its weight relative to the sum of weights configured for all items. This weight must be non-negative.
   * @return weight
   */
  @javax.annotation.Nullable
  public Double getWeight() {
    return weight;
  }

  public void setWeight(Double weight) {
    this.weight = weight;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RRSetRoutingPolicyWrrPolicyWrrPolicyItem rrSetRoutingPolicyWrrPolicyWrrPolicyItem = (RRSetRoutingPolicyWrrPolicyWrrPolicyItem) o;
    return Objects.equals(this.healthCheckedTargets, rrSetRoutingPolicyWrrPolicyWrrPolicyItem.healthCheckedTargets) &&
        Objects.equals(this.kind, rrSetRoutingPolicyWrrPolicyWrrPolicyItem.kind) &&
        Objects.equals(this.rrdatas, rrSetRoutingPolicyWrrPolicyWrrPolicyItem.rrdatas) &&
        Objects.equals(this.signatureRrdatas, rrSetRoutingPolicyWrrPolicyWrrPolicyItem.signatureRrdatas) &&
        Objects.equals(this.weight, rrSetRoutingPolicyWrrPolicyWrrPolicyItem.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(healthCheckedTargets, kind, rrdatas, signatureRrdatas, weight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RRSetRoutingPolicyWrrPolicyWrrPolicyItem {\n");
    sb.append("    healthCheckedTargets: ").append(toIndentedString(healthCheckedTargets)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    rrdatas: ").append(toIndentedString(rrdatas)).append("\n");
    sb.append("    signatureRrdatas: ").append(toIndentedString(signatureRrdatas)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("healthCheckedTargets");
    openapiFields.add("kind");
    openapiFields.add("rrdatas");
    openapiFields.add("signatureRrdatas");
    openapiFields.add("weight");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RRSetRoutingPolicyWrrPolicyWrrPolicyItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RRSetRoutingPolicyWrrPolicyWrrPolicyItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RRSetRoutingPolicyWrrPolicyWrrPolicyItem is not found in the empty JSON string", RRSetRoutingPolicyWrrPolicyWrrPolicyItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RRSetRoutingPolicyWrrPolicyWrrPolicyItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RRSetRoutingPolicyWrrPolicyWrrPolicyItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `healthCheckedTargets`
      if (jsonObj.get("healthCheckedTargets") != null && !jsonObj.get("healthCheckedTargets").isJsonNull()) {
        RRSetRoutingPolicyHealthCheckTargets.validateJsonElement(jsonObj.get("healthCheckedTargets"));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("rrdatas") != null && !jsonObj.get("rrdatas").isJsonNull() && !jsonObj.get("rrdatas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `rrdatas` to be an array in the JSON string but got `%s`", jsonObj.get("rrdatas").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("signatureRrdatas") != null && !jsonObj.get("signatureRrdatas").isJsonNull() && !jsonObj.get("signatureRrdatas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `signatureRrdatas` to be an array in the JSON string but got `%s`", jsonObj.get("signatureRrdatas").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RRSetRoutingPolicyWrrPolicyWrrPolicyItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RRSetRoutingPolicyWrrPolicyWrrPolicyItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RRSetRoutingPolicyWrrPolicyWrrPolicyItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RRSetRoutingPolicyWrrPolicyWrrPolicyItem.class));

       return (TypeAdapter<T>) new TypeAdapter<RRSetRoutingPolicyWrrPolicyWrrPolicyItem>() {
           @Override
           public void write(JsonWriter out, RRSetRoutingPolicyWrrPolicyWrrPolicyItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RRSetRoutingPolicyWrrPolicyWrrPolicyItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RRSetRoutingPolicyWrrPolicyWrrPolicyItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RRSetRoutingPolicyWrrPolicyWrrPolicyItem
   * @throws IOException if the JSON string is invalid with respect to RRSetRoutingPolicyWrrPolicyWrrPolicyItem
   */
  public static RRSetRoutingPolicyWrrPolicyWrrPolicyItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RRSetRoutingPolicyWrrPolicyWrrPolicyItem.class);
  }

  /**
   * Convert an instance of RRSetRoutingPolicyWrrPolicyWrrPolicyItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

