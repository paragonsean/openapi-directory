/**
 * Cloud DNS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPolicy.h
 *
 * A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources.
 */

#ifndef OAIPolicy_H
#define OAIPolicy_H

#include <QJsonObject>

#include "OAIPolicyAlternativeNameServerConfig.h"
#include "OAIPolicyNetwork.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPolicyAlternativeNameServerConfig;
class OAIPolicyNetwork;

class OAIPolicy : public OAIObject {
public:
    OAIPolicy();
    OAIPolicy(QString json);
    ~OAIPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPolicyAlternativeNameServerConfig getAlternativeNameServerConfig() const;
    void setAlternativeNameServerConfig(const OAIPolicyAlternativeNameServerConfig &alternative_name_server_config);
    bool is_alternative_name_server_config_Set() const;
    bool is_alternative_name_server_config_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isEnableInboundForwarding() const;
    void setEnableInboundForwarding(const bool &enable_inbound_forwarding);
    bool is_enable_inbound_forwarding_Set() const;
    bool is_enable_inbound_forwarding_Valid() const;

    bool isEnableLogging() const;
    void setEnableLogging(const bool &enable_logging);
    bool is_enable_logging_Set() const;
    bool is_enable_logging_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIPolicyNetwork> getNetworks() const;
    void setNetworks(const QList<OAIPolicyNetwork> &networks);
    bool is_networks_Set() const;
    bool is_networks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPolicyAlternativeNameServerConfig m_alternative_name_server_config;
    bool m_alternative_name_server_config_isSet;
    bool m_alternative_name_server_config_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_enable_inbound_forwarding;
    bool m_enable_inbound_forwarding_isSet;
    bool m_enable_inbound_forwarding_isValid;

    bool m_enable_logging;
    bool m_enable_logging_isSet;
    bool m_enable_logging_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIPolicyNetwork> m_networks;
    bool m_networks_isSet;
    bool m_networks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPolicy)

#endif // OAIPolicy_H
