# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.invocation_config import InvocationConfig
from openapi_server.models.scheduled_execution_record import ScheduledExecutionRecord
from openapi_server import util


class WorkflowConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cron_schedule: str=None, invocation_config: InvocationConfig=None, name: str=None, recent_scheduled_execution_records: List[ScheduledExecutionRecord]=None, release_config: str=None, time_zone: str=None):
        """WorkflowConfig - a model defined in OpenAPI

        :param cron_schedule: The cron_schedule of this WorkflowConfig.
        :param invocation_config: The invocation_config of this WorkflowConfig.
        :param name: The name of this WorkflowConfig.
        :param recent_scheduled_execution_records: The recent_scheduled_execution_records of this WorkflowConfig.
        :param release_config: The release_config of this WorkflowConfig.
        :param time_zone: The time_zone of this WorkflowConfig.
        """
        self.openapi_types = {
            'cron_schedule': str,
            'invocation_config': InvocationConfig,
            'name': str,
            'recent_scheduled_execution_records': List[ScheduledExecutionRecord],
            'release_config': str,
            'time_zone': str
        }

        self.attribute_map = {
            'cron_schedule': 'cronSchedule',
            'invocation_config': 'invocationConfig',
            'name': 'name',
            'recent_scheduled_execution_records': 'recentScheduledExecutionRecords',
            'release_config': 'releaseConfig',
            'time_zone': 'timeZone'
        }

        self._cron_schedule = cron_schedule
        self._invocation_config = invocation_config
        self._name = name
        self._recent_scheduled_execution_records = recent_scheduled_execution_records
        self._release_config = release_config
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkflowConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkflowConfig of this WorkflowConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cron_schedule(self):
        """Gets the cron_schedule of this WorkflowConfig.

        Optional. Optional schedule (in cron format) for automatic execution of this workflow config.

        :return: The cron_schedule of this WorkflowConfig.
        :rtype: str
        """
        return self._cron_schedule

    @cron_schedule.setter
    def cron_schedule(self, cron_schedule):
        """Sets the cron_schedule of this WorkflowConfig.

        Optional. Optional schedule (in cron format) for automatic execution of this workflow config.

        :param cron_schedule: The cron_schedule of this WorkflowConfig.
        :type cron_schedule: str
        """

        self._cron_schedule = cron_schedule

    @property
    def invocation_config(self):
        """Gets the invocation_config of this WorkflowConfig.


        :return: The invocation_config of this WorkflowConfig.
        :rtype: InvocationConfig
        """
        return self._invocation_config

    @invocation_config.setter
    def invocation_config(self, invocation_config):
        """Sets the invocation_config of this WorkflowConfig.


        :param invocation_config: The invocation_config of this WorkflowConfig.
        :type invocation_config: InvocationConfig
        """

        self._invocation_config = invocation_config

    @property
    def name(self):
        """Gets the name of this WorkflowConfig.

        Output only. The workflow config's name.

        :return: The name of this WorkflowConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WorkflowConfig.

        Output only. The workflow config's name.

        :param name: The name of this WorkflowConfig.
        :type name: str
        """

        self._name = name

    @property
    def recent_scheduled_execution_records(self):
        """Gets the recent_scheduled_execution_records of this WorkflowConfig.

        Output only. Records of the 10 most recent scheduled execution attempts, ordered in in descending order of `execution_time`. Updated whenever automatic creation of a workflow invocation is triggered by cron_schedule.

        :return: The recent_scheduled_execution_records of this WorkflowConfig.
        :rtype: List[ScheduledExecutionRecord]
        """
        return self._recent_scheduled_execution_records

    @recent_scheduled_execution_records.setter
    def recent_scheduled_execution_records(self, recent_scheduled_execution_records):
        """Sets the recent_scheduled_execution_records of this WorkflowConfig.

        Output only. Records of the 10 most recent scheduled execution attempts, ordered in in descending order of `execution_time`. Updated whenever automatic creation of a workflow invocation is triggered by cron_schedule.

        :param recent_scheduled_execution_records: The recent_scheduled_execution_records of this WorkflowConfig.
        :type recent_scheduled_execution_records: List[ScheduledExecutionRecord]
        """

        self._recent_scheduled_execution_records = recent_scheduled_execution_records

    @property
    def release_config(self):
        """Gets the release_config of this WorkflowConfig.

        Required. The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.

        :return: The release_config of this WorkflowConfig.
        :rtype: str
        """
        return self._release_config

    @release_config.setter
    def release_config(self, release_config):
        """Sets the release_config of this WorkflowConfig.

        Required. The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.

        :param release_config: The release_config of this WorkflowConfig.
        :type release_config: str
        """

        self._release_config = release_config

    @property
    def time_zone(self):
        """Gets the time_zone of this WorkflowConfig.

        Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.

        :return: The time_zone of this WorkflowConfig.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this WorkflowConfig.

        Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.

        :param time_zone: The time_zone of this WorkflowConfig.
        :type time_zone: str
        """

        self._time_zone = time_zone
