# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.relation_descriptor import RelationDescriptor
from openapi_server import util


class Declaration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, relation_descriptor: RelationDescriptor=None):
        """Declaration - a model defined in OpenAPI

        :param relation_descriptor: The relation_descriptor of this Declaration.
        """
        self.openapi_types = {
            'relation_descriptor': RelationDescriptor
        }

        self.attribute_map = {
            'relation_descriptor': 'relationDescriptor'
        }

        self._relation_descriptor = relation_descriptor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Declaration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Declaration of this Declaration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def relation_descriptor(self):
        """Gets the relation_descriptor of this Declaration.


        :return: The relation_descriptor of this Declaration.
        :rtype: RelationDescriptor
        """
        return self._relation_descriptor

    @relation_descriptor.setter
    def relation_descriptor(self, relation_descriptor):
        """Sets the relation_descriptor of this Declaration.


        :param relation_descriptor: The relation_descriptor of this Declaration.
        :type relation_descriptor: RelationDescriptor
        """

        self._relation_descriptor = relation_descriptor
