# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResetWorkspaceChangesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clean: bool=None, paths: List[str]=None):
        """ResetWorkspaceChangesRequest - a model defined in OpenAPI

        :param clean: The clean of this ResetWorkspaceChangesRequest.
        :param paths: The paths of this ResetWorkspaceChangesRequest.
        """
        self.openapi_types = {
            'clean': bool,
            'paths': List[str]
        }

        self.attribute_map = {
            'clean': 'clean',
            'paths': 'paths'
        }

        self._clean = clean
        self._paths = paths

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResetWorkspaceChangesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResetWorkspaceChangesRequest of this ResetWorkspaceChangesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clean(self):
        """Gets the clean of this ResetWorkspaceChangesRequest.

        Optional. If set to true, untracked files will be deleted.

        :return: The clean of this ResetWorkspaceChangesRequest.
        :rtype: bool
        """
        return self._clean

    @clean.setter
    def clean(self, clean):
        """Sets the clean of this ResetWorkspaceChangesRequest.

        Optional. If set to true, untracked files will be deleted.

        :param clean: The clean of this ResetWorkspaceChangesRequest.
        :type clean: bool
        """

        self._clean = clean

    @property
    def paths(self):
        """Gets the paths of this ResetWorkspaceChangesRequest.

        Optional. Full file paths to reset back to their committed state including filename, rooted at workspace root. If left empty, all files will be reset.

        :return: The paths of this ResetWorkspaceChangesRequest.
        :rtype: List[str]
        """
        return self._paths

    @paths.setter
    def paths(self, paths):
        """Sets the paths of this ResetWorkspaceChangesRequest.

        Optional. Full file paths to reset back to their committed state including filename, rooted at workspace root. If left empty, all files will be reset.

        :param paths: The paths of this ResetWorkspaceChangesRequest.
        :type paths: List[str]
        """

        self._paths = paths
