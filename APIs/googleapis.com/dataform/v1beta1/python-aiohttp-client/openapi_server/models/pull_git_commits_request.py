# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.commit_author import CommitAuthor
from openapi_server import util


class PullGitCommitsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: CommitAuthor=None, remote_branch: str=None):
        """PullGitCommitsRequest - a model defined in OpenAPI

        :param author: The author of this PullGitCommitsRequest.
        :param remote_branch: The remote_branch of this PullGitCommitsRequest.
        """
        self.openapi_types = {
            'author': CommitAuthor,
            'remote_branch': str
        }

        self.attribute_map = {
            'author': 'author',
            'remote_branch': 'remoteBranch'
        }

        self._author = author
        self._remote_branch = remote_branch

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PullGitCommitsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PullGitCommitsRequest of this PullGitCommitsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this PullGitCommitsRequest.


        :return: The author of this PullGitCommitsRequest.
        :rtype: CommitAuthor
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this PullGitCommitsRequest.


        :param author: The author of this PullGitCommitsRequest.
        :type author: CommitAuthor
        """

        self._author = author

    @property
    def remote_branch(self):
        """Gets the remote_branch of this PullGitCommitsRequest.

        Optional. The name of the branch in the Git remote from which to pull commits. If left unset, the repository's default branch name will be used.

        :return: The remote_branch of this PullGitCommitsRequest.
        :rtype: str
        """
        return self._remote_branch

    @remote_branch.setter
    def remote_branch(self, remote_branch):
        """Sets the remote_branch of this PullGitCommitsRequest.

        Optional. The name of the branch in the Git remote from which to pull commits. If left unset, the repository's default branch name will be used.

        :param remote_branch: The remote_branch of this PullGitCommitsRequest.
        :type remote_branch: str
        """

        self._remote_branch = remote_branch
