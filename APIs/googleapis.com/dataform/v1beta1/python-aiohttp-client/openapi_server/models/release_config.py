# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.code_compilation_config import CodeCompilationConfig
from openapi_server.models.scheduled_release_record import ScheduledReleaseRecord
from openapi_server import util


class ReleaseConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_compilation_config: CodeCompilationConfig=None, cron_schedule: str=None, disabled: bool=None, git_commitish: str=None, name: str=None, recent_scheduled_release_records: List[ScheduledReleaseRecord]=None, release_compilation_result: str=None, time_zone: str=None):
        """ReleaseConfig - a model defined in OpenAPI

        :param code_compilation_config: The code_compilation_config of this ReleaseConfig.
        :param cron_schedule: The cron_schedule of this ReleaseConfig.
        :param disabled: The disabled of this ReleaseConfig.
        :param git_commitish: The git_commitish of this ReleaseConfig.
        :param name: The name of this ReleaseConfig.
        :param recent_scheduled_release_records: The recent_scheduled_release_records of this ReleaseConfig.
        :param release_compilation_result: The release_compilation_result of this ReleaseConfig.
        :param time_zone: The time_zone of this ReleaseConfig.
        """
        self.openapi_types = {
            'code_compilation_config': CodeCompilationConfig,
            'cron_schedule': str,
            'disabled': bool,
            'git_commitish': str,
            'name': str,
            'recent_scheduled_release_records': List[ScheduledReleaseRecord],
            'release_compilation_result': str,
            'time_zone': str
        }

        self.attribute_map = {
            'code_compilation_config': 'codeCompilationConfig',
            'cron_schedule': 'cronSchedule',
            'disabled': 'disabled',
            'git_commitish': 'gitCommitish',
            'name': 'name',
            'recent_scheduled_release_records': 'recentScheduledReleaseRecords',
            'release_compilation_result': 'releaseCompilationResult',
            'time_zone': 'timeZone'
        }

        self._code_compilation_config = code_compilation_config
        self._cron_schedule = cron_schedule
        self._disabled = disabled
        self._git_commitish = git_commitish
        self._name = name
        self._recent_scheduled_release_records = recent_scheduled_release_records
        self._release_compilation_result = release_compilation_result
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReleaseConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReleaseConfig of this ReleaseConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_compilation_config(self):
        """Gets the code_compilation_config of this ReleaseConfig.


        :return: The code_compilation_config of this ReleaseConfig.
        :rtype: CodeCompilationConfig
        """
        return self._code_compilation_config

    @code_compilation_config.setter
    def code_compilation_config(self, code_compilation_config):
        """Sets the code_compilation_config of this ReleaseConfig.


        :param code_compilation_config: The code_compilation_config of this ReleaseConfig.
        :type code_compilation_config: CodeCompilationConfig
        """

        self._code_compilation_config = code_compilation_config

    @property
    def cron_schedule(self):
        """Gets the cron_schedule of this ReleaseConfig.

        Optional. Optional schedule (in cron format) for automatic creation of compilation results.

        :return: The cron_schedule of this ReleaseConfig.
        :rtype: str
        """
        return self._cron_schedule

    @cron_schedule.setter
    def cron_schedule(self, cron_schedule):
        """Sets the cron_schedule of this ReleaseConfig.

        Optional. Optional schedule (in cron format) for automatic creation of compilation results.

        :param cron_schedule: The cron_schedule of this ReleaseConfig.
        :type cron_schedule: str
        """

        self._cron_schedule = cron_schedule

    @property
    def disabled(self):
        """Gets the disabled of this ReleaseConfig.

        Optional. Disables automatic creation of compilation results.

        :return: The disabled of this ReleaseConfig.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this ReleaseConfig.

        Optional. Disables automatic creation of compilation results.

        :param disabled: The disabled of this ReleaseConfig.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def git_commitish(self):
        """Gets the git_commitish of this ReleaseConfig.

        Required. Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`

        :return: The git_commitish of this ReleaseConfig.
        :rtype: str
        """
        return self._git_commitish

    @git_commitish.setter
    def git_commitish(self, git_commitish):
        """Sets the git_commitish of this ReleaseConfig.

        Required. Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`

        :param git_commitish: The git_commitish of this ReleaseConfig.
        :type git_commitish: str
        """

        self._git_commitish = git_commitish

    @property
    def name(self):
        """Gets the name of this ReleaseConfig.

        Output only. The release config's name.

        :return: The name of this ReleaseConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReleaseConfig.

        Output only. The release config's name.

        :param name: The name of this ReleaseConfig.
        :type name: str
        """

        self._name = name

    @property
    def recent_scheduled_release_records(self):
        """Gets the recent_scheduled_release_records of this ReleaseConfig.

        Output only. Records of the 10 most recent scheduled release attempts, ordered in in descending order of `release_time`. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.

        :return: The recent_scheduled_release_records of this ReleaseConfig.
        :rtype: List[ScheduledReleaseRecord]
        """
        return self._recent_scheduled_release_records

    @recent_scheduled_release_records.setter
    def recent_scheduled_release_records(self, recent_scheduled_release_records):
        """Sets the recent_scheduled_release_records of this ReleaseConfig.

        Output only. Records of the 10 most recent scheduled release attempts, ordered in in descending order of `release_time`. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.

        :param recent_scheduled_release_records: The recent_scheduled_release_records of this ReleaseConfig.
        :type recent_scheduled_release_records: List[ScheduledReleaseRecord]
        """

        self._recent_scheduled_release_records = recent_scheduled_release_records

    @property
    def release_compilation_result(self):
        """Gets the release_compilation_result of this ReleaseConfig.

        Optional. The name of the currently released compilation result for this release config. This value is updated when a compilation result is automatically created from this release config (using cron_schedule), or when this resource is updated by API call (perhaps to roll back to an earlier release). The compilation result must have been created using this release config. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.

        :return: The release_compilation_result of this ReleaseConfig.
        :rtype: str
        """
        return self._release_compilation_result

    @release_compilation_result.setter
    def release_compilation_result(self, release_compilation_result):
        """Sets the release_compilation_result of this ReleaseConfig.

        Optional. The name of the currently released compilation result for this release config. This value is updated when a compilation result is automatically created from this release config (using cron_schedule), or when this resource is updated by API call (perhaps to roll back to an earlier release). The compilation result must have been created using this release config. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.

        :param release_compilation_result: The release_compilation_result of this ReleaseConfig.
        :type release_compilation_result: str
        """

        self._release_compilation_result = release_compilation_result

    @property
    def time_zone(self):
        """Gets the time_zone of this ReleaseConfig.

        Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.

        :return: The time_zone of this ReleaseConfig.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this ReleaseConfig.

        Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.

        :param time_zone: The time_zone of this ReleaseConfig.
        :type time_zone: str
        """

        self._time_zone = time_zone
