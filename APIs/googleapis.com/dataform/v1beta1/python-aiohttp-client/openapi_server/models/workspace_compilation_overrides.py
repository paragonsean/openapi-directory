# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WorkspaceCompilationOverrides(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_database: str=None, schema_suffix: str=None, table_prefix: str=None):
        """WorkspaceCompilationOverrides - a model defined in OpenAPI

        :param default_database: The default_database of this WorkspaceCompilationOverrides.
        :param schema_suffix: The schema_suffix of this WorkspaceCompilationOverrides.
        :param table_prefix: The table_prefix of this WorkspaceCompilationOverrides.
        """
        self.openapi_types = {
            'default_database': str,
            'schema_suffix': str,
            'table_prefix': str
        }

        self.attribute_map = {
            'default_database': 'defaultDatabase',
            'schema_suffix': 'schemaSuffix',
            'table_prefix': 'tablePrefix'
        }

        self._default_database = default_database
        self._schema_suffix = schema_suffix
        self._table_prefix = table_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkspaceCompilationOverrides':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkspaceCompilationOverrides of this WorkspaceCompilationOverrides.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_database(self):
        """Gets the default_database of this WorkspaceCompilationOverrides.

        Optional. The default database (Google Cloud project ID).

        :return: The default_database of this WorkspaceCompilationOverrides.
        :rtype: str
        """
        return self._default_database

    @default_database.setter
    def default_database(self, default_database):
        """Sets the default_database of this WorkspaceCompilationOverrides.

        Optional. The default database (Google Cloud project ID).

        :param default_database: The default_database of this WorkspaceCompilationOverrides.
        :type default_database: str
        """

        self._default_database = default_database

    @property
    def schema_suffix(self):
        """Gets the schema_suffix of this WorkspaceCompilationOverrides.

        Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.

        :return: The schema_suffix of this WorkspaceCompilationOverrides.
        :rtype: str
        """
        return self._schema_suffix

    @schema_suffix.setter
    def schema_suffix(self, schema_suffix):
        """Sets the schema_suffix of this WorkspaceCompilationOverrides.

        Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.

        :param schema_suffix: The schema_suffix of this WorkspaceCompilationOverrides.
        :type schema_suffix: str
        """

        self._schema_suffix = schema_suffix

    @property
    def table_prefix(self):
        """Gets the table_prefix of this WorkspaceCompilationOverrides.

        Optional. The prefix that should be prepended to all table names.

        :return: The table_prefix of this WorkspaceCompilationOverrides.
        :rtype: str
        """
        return self._table_prefix

    @table_prefix.setter
    def table_prefix(self, table_prefix):
        """Sets the table_prefix of this WorkspaceCompilationOverrides.

        Optional. The prefix that should be prepended to all table names.

        :param table_prefix: The table_prefix of this WorkspaceCompilationOverrides.
        :type table_prefix: str
        """

        self._table_prefix = table_prefix
