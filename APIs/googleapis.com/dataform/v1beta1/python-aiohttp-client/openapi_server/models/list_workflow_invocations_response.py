# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.workflow_invocation import WorkflowInvocation
from openapi_server import util


class ListWorkflowInvocationsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, unreachable: List[str]=None, workflow_invocations: List[WorkflowInvocation]=None):
        """ListWorkflowInvocationsResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListWorkflowInvocationsResponse.
        :param unreachable: The unreachable of this ListWorkflowInvocationsResponse.
        :param workflow_invocations: The workflow_invocations of this ListWorkflowInvocationsResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'unreachable': List[str],
            'workflow_invocations': List[WorkflowInvocation]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'unreachable': 'unreachable',
            'workflow_invocations': 'workflowInvocations'
        }

        self._next_page_token = next_page_token
        self._unreachable = unreachable
        self._workflow_invocations = workflow_invocations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListWorkflowInvocationsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListWorkflowInvocationsResponse of this ListWorkflowInvocationsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListWorkflowInvocationsResponse.

        A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.

        :return: The next_page_token of this ListWorkflowInvocationsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListWorkflowInvocationsResponse.

        A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.

        :param next_page_token: The next_page_token of this ListWorkflowInvocationsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def unreachable(self):
        """Gets the unreachable of this ListWorkflowInvocationsResponse.

        Locations which could not be reached.

        :return: The unreachable of this ListWorkflowInvocationsResponse.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this ListWorkflowInvocationsResponse.

        Locations which could not be reached.

        :param unreachable: The unreachable of this ListWorkflowInvocationsResponse.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable

    @property
    def workflow_invocations(self):
        """Gets the workflow_invocations of this ListWorkflowInvocationsResponse.

        List of workflow invocations.

        :return: The workflow_invocations of this ListWorkflowInvocationsResponse.
        :rtype: List[WorkflowInvocation]
        """
        return self._workflow_invocations

    @workflow_invocations.setter
    def workflow_invocations(self, workflow_invocations):
        """Sets the workflow_invocations of this ListWorkflowInvocationsResponse.

        List of workflow invocations.

        :param workflow_invocations: The workflow_invocations of this ListWorkflowInvocationsResponse.
        :type workflow_invocations: List[WorkflowInvocation]
        """

        self._workflow_invocations = workflow_invocations
