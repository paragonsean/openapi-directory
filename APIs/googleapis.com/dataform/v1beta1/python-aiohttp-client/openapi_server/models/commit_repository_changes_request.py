# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.commit_metadata import CommitMetadata
from openapi_server.models.file_operation import FileOperation
from openapi_server import util


class CommitRepositoryChangesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commit_metadata: CommitMetadata=None, file_operations: Dict[str, FileOperation]=None, required_head_commit_sha: str=None):
        """CommitRepositoryChangesRequest - a model defined in OpenAPI

        :param commit_metadata: The commit_metadata of this CommitRepositoryChangesRequest.
        :param file_operations: The file_operations of this CommitRepositoryChangesRequest.
        :param required_head_commit_sha: The required_head_commit_sha of this CommitRepositoryChangesRequest.
        """
        self.openapi_types = {
            'commit_metadata': CommitMetadata,
            'file_operations': Dict[str, FileOperation],
            'required_head_commit_sha': str
        }

        self.attribute_map = {
            'commit_metadata': 'commitMetadata',
            'file_operations': 'fileOperations',
            'required_head_commit_sha': 'requiredHeadCommitSha'
        }

        self._commit_metadata = commit_metadata
        self._file_operations = file_operations
        self._required_head_commit_sha = required_head_commit_sha

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitRepositoryChangesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommitRepositoryChangesRequest of this CommitRepositoryChangesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commit_metadata(self):
        """Gets the commit_metadata of this CommitRepositoryChangesRequest.


        :return: The commit_metadata of this CommitRepositoryChangesRequest.
        :rtype: CommitMetadata
        """
        return self._commit_metadata

    @commit_metadata.setter
    def commit_metadata(self, commit_metadata):
        """Sets the commit_metadata of this CommitRepositoryChangesRequest.


        :param commit_metadata: The commit_metadata of this CommitRepositoryChangesRequest.
        :type commit_metadata: CommitMetadata
        """

        self._commit_metadata = commit_metadata

    @property
    def file_operations(self):
        """Gets the file_operations of this CommitRepositoryChangesRequest.

        A map to the path of the file to the operation. The path is the full file path including filename, from repository root.

        :return: The file_operations of this CommitRepositoryChangesRequest.
        :rtype: Dict[str, FileOperation]
        """
        return self._file_operations

    @file_operations.setter
    def file_operations(self, file_operations):
        """Sets the file_operations of this CommitRepositoryChangesRequest.

        A map to the path of the file to the operation. The path is the full file path including filename, from repository root.

        :param file_operations: The file_operations of this CommitRepositoryChangesRequest.
        :type file_operations: Dict[str, FileOperation]
        """

        self._file_operations = file_operations

    @property
    def required_head_commit_sha(self):
        """Gets the required_head_commit_sha of this CommitRepositoryChangesRequest.

        Optional. The commit SHA which must be the repository's current HEAD before applying this commit; otherwise this request will fail. If unset, no validation on the current HEAD commit SHA is performed.

        :return: The required_head_commit_sha of this CommitRepositoryChangesRequest.
        :rtype: str
        """
        return self._required_head_commit_sha

    @required_head_commit_sha.setter
    def required_head_commit_sha(self, required_head_commit_sha):
        """Sets the required_head_commit_sha of this CommitRepositoryChangesRequest.

        Optional. The commit SHA which must be the repository's current HEAD before applying this commit; otherwise this request will fail. If unset, no validation on the current HEAD commit SHA is performed.

        :param required_head_commit_sha: The required_head_commit_sha of this CommitRepositoryChangesRequest.
        :type required_head_commit_sha: str
        """

        self._required_head_commit_sha = required_head_commit_sha
