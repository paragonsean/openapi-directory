/*
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.IncrementalTableConfig;
import org.openapitools.client.model.RelationDescriptor;
import org.openapitools.client.model.Target;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Relation
 */
public class RelationTest {
    private final Relation model = new Relation();

    /**
     * Model tests for Relation
     */
    @Test
    public void testRelation() {
        // TODO: test Relation
    }

    /**
     * Test the property 'additionalOptions'
     */
    @Test
    public void additionalOptionsTest() {
        // TODO: test additionalOptions
    }

    /**
     * Test the property 'clusterExpressions'
     */
    @Test
    public void clusterExpressionsTest() {
        // TODO: test clusterExpressions
    }

    /**
     * Test the property 'dependencyTargets'
     */
    @Test
    public void dependencyTargetsTest() {
        // TODO: test dependencyTargets
    }

    /**
     * Test the property 'disabled'
     */
    @Test
    public void disabledTest() {
        // TODO: test disabled
    }

    /**
     * Test the property 'incrementalTableConfig'
     */
    @Test
    public void incrementalTableConfigTest() {
        // TODO: test incrementalTableConfig
    }

    /**
     * Test the property 'partitionExpirationDays'
     */
    @Test
    public void partitionExpirationDaysTest() {
        // TODO: test partitionExpirationDays
    }

    /**
     * Test the property 'partitionExpression'
     */
    @Test
    public void partitionExpressionTest() {
        // TODO: test partitionExpression
    }

    /**
     * Test the property 'postOperations'
     */
    @Test
    public void postOperationsTest() {
        // TODO: test postOperations
    }

    /**
     * Test the property 'preOperations'
     */
    @Test
    public void preOperationsTest() {
        // TODO: test preOperations
    }

    /**
     * Test the property 'relationDescriptor'
     */
    @Test
    public void relationDescriptorTest() {
        // TODO: test relationDescriptor
    }

    /**
     * Test the property 'relationType'
     */
    @Test
    public void relationTypeTest() {
        // TODO: test relationType
    }

    /**
     * Test the property 'requirePartitionFilter'
     */
    @Test
    public void requirePartitionFilterTest() {
        // TODO: test requirePartitionFilter
    }

    /**
     * Test the property 'selectQuery'
     */
    @Test
    public void selectQueryTest() {
        // TODO: test selectQuery
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

}
