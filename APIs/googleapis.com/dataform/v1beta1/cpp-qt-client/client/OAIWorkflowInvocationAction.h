/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkflowInvocationAction.h
 *
 * Represents a single action in a workflow invocation.
 */

#ifndef OAIWorkflowInvocationAction_H
#define OAIWorkflowInvocationAction_H

#include <QJsonObject>

#include "OAIBigQueryAction.h"
#include "OAIInterval.h"
#include "OAITarget.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBigQueryAction;
class OAITarget;
class OAIInterval;

class OAIWorkflowInvocationAction : public OAIObject {
public:
    OAIWorkflowInvocationAction();
    OAIWorkflowInvocationAction(QString json);
    ~OAIWorkflowInvocationAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBigQueryAction getBigqueryAction() const;
    void setBigqueryAction(const OAIBigQueryAction &bigquery_action);
    bool is_bigquery_action_Set() const;
    bool is_bigquery_action_Valid() const;

    OAITarget getCanonicalTarget() const;
    void setCanonicalTarget(const OAITarget &canonical_target);
    bool is_canonical_target_Set() const;
    bool is_canonical_target_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    OAIInterval getInvocationTiming() const;
    void setInvocationTiming(const OAIInterval &invocation_timing);
    bool is_invocation_timing_Set() const;
    bool is_invocation_timing_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAITarget getTarget() const;
    void setTarget(const OAITarget &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBigQueryAction m_bigquery_action;
    bool m_bigquery_action_isSet;
    bool m_bigquery_action_isValid;

    OAITarget m_canonical_target;
    bool m_canonical_target_isSet;
    bool m_canonical_target_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    OAIInterval m_invocation_timing;
    bool m_invocation_timing_isSet;
    bool m_invocation_timing_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAITarget m_target;
    bool m_target_isSet;
    bool m_target_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkflowInvocationAction)

#endif // OAIWorkflowInvocationAction_H
