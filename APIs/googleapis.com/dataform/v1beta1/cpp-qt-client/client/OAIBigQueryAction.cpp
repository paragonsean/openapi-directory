/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBigQueryAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBigQueryAction::OAIBigQueryAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBigQueryAction::OAIBigQueryAction() {
    this->initializeModel();
}

OAIBigQueryAction::~OAIBigQueryAction() {}

void OAIBigQueryAction::initializeModel() {

    m_sql_script_isSet = false;
    m_sql_script_isValid = false;
}

void OAIBigQueryAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBigQueryAction::fromJsonObject(QJsonObject json) {

    m_sql_script_isValid = ::OpenAPI::fromJsonValue(m_sql_script, json[QString("sqlScript")]);
    m_sql_script_isSet = !json[QString("sqlScript")].isNull() && m_sql_script_isValid;
}

QString OAIBigQueryAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBigQueryAction::asJsonObject() const {
    QJsonObject obj;
    if (m_sql_script_isSet) {
        obj.insert(QString("sqlScript"), ::OpenAPI::toJsonValue(m_sql_script));
    }
    return obj;
}

QString OAIBigQueryAction::getSqlScript() const {
    return m_sql_script;
}
void OAIBigQueryAction::setSqlScript(const QString &sql_script) {
    m_sql_script = sql_script;
    m_sql_script_isSet = true;
}

bool OAIBigQueryAction::is_sql_script_Set() const{
    return m_sql_script_isSet;
}

bool OAIBigQueryAction::is_sql_script_Valid() const{
    return m_sql_script_isValid;
}

bool OAIBigQueryAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sql_script_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBigQueryAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
