/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchFilesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchFilesResponse::OAISearchFilesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchFilesResponse::OAISearchFilesResponse() {
    this->initializeModel();
}

OAISearchFilesResponse::~OAISearchFilesResponse() {}

void OAISearchFilesResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_search_results_isSet = false;
    m_search_results_isValid = false;
}

void OAISearchFilesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchFilesResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_search_results_isValid = ::OpenAPI::fromJsonValue(m_search_results, json[QString("searchResults")]);
    m_search_results_isSet = !json[QString("searchResults")].isNull() && m_search_results_isValid;
}

QString OAISearchFilesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchFilesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_search_results.size() > 0) {
        obj.insert(QString("searchResults"), ::OpenAPI::toJsonValue(m_search_results));
    }
    return obj;
}

QString OAISearchFilesResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAISearchFilesResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAISearchFilesResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAISearchFilesResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAISearchResult> OAISearchFilesResponse::getSearchResults() const {
    return m_search_results;
}
void OAISearchFilesResponse::setSearchResults(const QList<OAISearchResult> &search_results) {
    m_search_results = search_results;
    m_search_results_isSet = true;
}

bool OAISearchFilesResponse::is_search_results_Set() const{
    return m_search_results_isSet;
}

bool OAISearchFilesResponse::is_search_results_Valid() const{
    return m_search_results_isValid;
}

bool OAISearchFilesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchFilesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
