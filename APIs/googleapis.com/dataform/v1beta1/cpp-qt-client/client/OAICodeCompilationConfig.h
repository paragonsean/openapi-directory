/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICodeCompilationConfig.h
 *
 * Configures various aspects of Dataform code compilation.
 */

#ifndef OAICodeCompilationConfig_H
#define OAICodeCompilationConfig_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICodeCompilationConfig : public OAIObject {
public:
    OAICodeCompilationConfig();
    OAICodeCompilationConfig(QString json);
    ~OAICodeCompilationConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssertionSchema() const;
    void setAssertionSchema(const QString &assertion_schema);
    bool is_assertion_schema_Set() const;
    bool is_assertion_schema_Valid() const;

    QString getDatabaseSuffix() const;
    void setDatabaseSuffix(const QString &database_suffix);
    bool is_database_suffix_Set() const;
    bool is_database_suffix_Valid() const;

    QString getDefaultDatabase() const;
    void setDefaultDatabase(const QString &default_database);
    bool is_default_database_Set() const;
    bool is_default_database_Valid() const;

    QString getDefaultLocation() const;
    void setDefaultLocation(const QString &default_location);
    bool is_default_location_Set() const;
    bool is_default_location_Valid() const;

    QString getDefaultSchema() const;
    void setDefaultSchema(const QString &default_schema);
    bool is_default_schema_Set() const;
    bool is_default_schema_Valid() const;

    QString getSchemaSuffix() const;
    void setSchemaSuffix(const QString &schema_suffix);
    bool is_schema_suffix_Set() const;
    bool is_schema_suffix_Valid() const;

    QString getTablePrefix() const;
    void setTablePrefix(const QString &table_prefix);
    bool is_table_prefix_Set() const;
    bool is_table_prefix_Valid() const;

    QMap<QString, QString> getVars() const;
    void setVars(const QMap<QString, QString> &vars);
    bool is_vars_Set() const;
    bool is_vars_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_assertion_schema;
    bool m_assertion_schema_isSet;
    bool m_assertion_schema_isValid;

    QString m_database_suffix;
    bool m_database_suffix_isSet;
    bool m_database_suffix_isValid;

    QString m_default_database;
    bool m_default_database_isSet;
    bool m_default_database_isValid;

    QString m_default_location;
    bool m_default_location_isSet;
    bool m_default_location_isValid;

    QString m_default_schema;
    bool m_default_schema_isSet;
    bool m_default_schema_isValid;

    QString m_schema_suffix;
    bool m_schema_suffix_isSet;
    bool m_schema_suffix_isValid;

    QString m_table_prefix;
    bool m_table_prefix_isSet;
    bool m_table_prefix_isValid;

    QMap<QString, QString> m_vars;
    bool m_vars_isSet;
    bool m_vars_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICodeCompilationConfig)

#endif // OAICodeCompilationConfig_H
