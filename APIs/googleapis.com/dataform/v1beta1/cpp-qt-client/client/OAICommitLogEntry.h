/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommitLogEntry.h
 *
 * Represents a single commit log.
 */

#ifndef OAICommitLogEntry_H
#define OAICommitLogEntry_H

#include <QJsonObject>

#include "OAICommitAuthor.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommitAuthor;

class OAICommitLogEntry : public OAIObject {
public:
    OAICommitLogEntry();
    OAICommitLogEntry(QString json);
    ~OAICommitLogEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICommitAuthor getAuthor() const;
    void setAuthor(const OAICommitAuthor &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getCommitMessage() const;
    void setCommitMessage(const QString &commit_message);
    bool is_commit_message_Set() const;
    bool is_commit_message_Valid() const;

    QString getCommitSha() const;
    void setCommitSha(const QString &commit_sha);
    bool is_commit_sha_Set() const;
    bool is_commit_sha_Valid() const;

    QString getCommitTime() const;
    void setCommitTime(const QString &commit_time);
    bool is_commit_time_Set() const;
    bool is_commit_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICommitAuthor m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_commit_message;
    bool m_commit_message_isSet;
    bool m_commit_message_isValid;

    QString m_commit_sha;
    bool m_commit_sha_isSet;
    bool m_commit_sha_isValid;

    QString m_commit_time;
    bool m_commit_time_isSet;
    bool m_commit_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommitLogEntry)

#endif // OAICommitLogEntry_H
