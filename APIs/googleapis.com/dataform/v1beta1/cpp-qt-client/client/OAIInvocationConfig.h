/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInvocationConfig.h
 *
 * Includes various configuration options for a workflow invocation. If both &#x60;included_targets&#x60; and &#x60;included_tags&#x60; are unset, all actions will be included.
 */

#ifndef OAIInvocationConfig_H
#define OAIInvocationConfig_H

#include <QJsonObject>

#include "OAITarget.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITarget;

class OAIInvocationConfig : public OAIObject {
public:
    OAIInvocationConfig();
    OAIInvocationConfig(QString json);
    ~OAIInvocationConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isFullyRefreshIncrementalTablesEnabled() const;
    void setFullyRefreshIncrementalTablesEnabled(const bool &fully_refresh_incremental_tables_enabled);
    bool is_fully_refresh_incremental_tables_enabled_Set() const;
    bool is_fully_refresh_incremental_tables_enabled_Valid() const;

    QList<QString> getIncludedTags() const;
    void setIncludedTags(const QList<QString> &included_tags);
    bool is_included_tags_Set() const;
    bool is_included_tags_Valid() const;

    QList<OAITarget> getIncludedTargets() const;
    void setIncludedTargets(const QList<OAITarget> &included_targets);
    bool is_included_targets_Set() const;
    bool is_included_targets_Valid() const;

    QString getServiceAccount() const;
    void setServiceAccount(const QString &service_account);
    bool is_service_account_Set() const;
    bool is_service_account_Valid() const;

    bool isTransitiveDependenciesIncluded() const;
    void setTransitiveDependenciesIncluded(const bool &transitive_dependencies_included);
    bool is_transitive_dependencies_included_Set() const;
    bool is_transitive_dependencies_included_Valid() const;

    bool isTransitiveDependentsIncluded() const;
    void setTransitiveDependentsIncluded(const bool &transitive_dependents_included);
    bool is_transitive_dependents_included_Set() const;
    bool is_transitive_dependents_included_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_fully_refresh_incremental_tables_enabled;
    bool m_fully_refresh_incremental_tables_enabled_isSet;
    bool m_fully_refresh_incremental_tables_enabled_isValid;

    QList<QString> m_included_tags;
    bool m_included_tags_isSet;
    bool m_included_tags_isValid;

    QList<OAITarget> m_included_targets;
    bool m_included_targets_isSet;
    bool m_included_targets_isValid;

    QString m_service_account;
    bool m_service_account_isSet;
    bool m_service_account_isValid;

    bool m_transitive_dependencies_included;
    bool m_transitive_dependencies_included_isSet;
    bool m_transitive_dependencies_included_isValid;

    bool m_transitive_dependents_included;
    bool m_transitive_dependents_included_isSet;
    bool m_transitive_dependents_included_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInvocationConfig)

#endif // OAIInvocationConfig_H
