/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFetchGitAheadBehindResponse.h
 *
 * &#x60;FetchGitAheadBehind&#x60; response message.
 */

#ifndef OAIFetchGitAheadBehindResponse_H
#define OAIFetchGitAheadBehindResponse_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFetchGitAheadBehindResponse : public OAIObject {
public:
    OAIFetchGitAheadBehindResponse();
    OAIFetchGitAheadBehindResponse(QString json);
    ~OAIFetchGitAheadBehindResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCommitsAhead() const;
    void setCommitsAhead(const qint32 &commits_ahead);
    bool is_commits_ahead_Set() const;
    bool is_commits_ahead_Valid() const;

    qint32 getCommitsBehind() const;
    void setCommitsBehind(const qint32 &commits_behind);
    bool is_commits_behind_Set() const;
    bool is_commits_behind_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_commits_ahead;
    bool m_commits_ahead_isSet;
    bool m_commits_ahead_isValid;

    qint32 m_commits_behind;
    bool m_commits_behind_isSet;
    bool m_commits_behind_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFetchGitAheadBehindResponse)

#endif // OAIFetchGitAheadBehindResponse_H
