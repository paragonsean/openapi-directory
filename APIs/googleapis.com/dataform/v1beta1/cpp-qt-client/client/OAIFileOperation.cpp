/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileOperation::OAIFileOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileOperation::OAIFileOperation() {
    this->initializeModel();
}

OAIFileOperation::~OAIFileOperation() {}

void OAIFileOperation::initializeModel() {

    m_delete_file_isSet = false;
    m_delete_file_isValid = false;

    m_write_file_isSet = false;
    m_write_file_isValid = false;
}

void OAIFileOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileOperation::fromJsonObject(QJsonObject json) {

    m_delete_file_isValid = ::OpenAPI::fromJsonValue(m_delete_file, json[QString("deleteFile")]);
    m_delete_file_isSet = !json[QString("deleteFile")].isNull() && m_delete_file_isValid;

    m_write_file_isValid = ::OpenAPI::fromJsonValue(m_write_file, json[QString("writeFile")]);
    m_write_file_isSet = !json[QString("writeFile")].isNull() && m_write_file_isValid;
}

QString OAIFileOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_delete_file_isSet) {
        obj.insert(QString("deleteFile"), ::OpenAPI::toJsonValue(m_delete_file));
    }
    if (m_write_file.isSet()) {
        obj.insert(QString("writeFile"), ::OpenAPI::toJsonValue(m_write_file));
    }
    return obj;
}

OAIObject OAIFileOperation::getDeleteFile() const {
    return m_delete_file;
}
void OAIFileOperation::setDeleteFile(const OAIObject &delete_file) {
    m_delete_file = delete_file;
    m_delete_file_isSet = true;
}

bool OAIFileOperation::is_delete_file_Set() const{
    return m_delete_file_isSet;
}

bool OAIFileOperation::is_delete_file_Valid() const{
    return m_delete_file_isValid;
}

OAIWriteFile OAIFileOperation::getWriteFile() const {
    return m_write_file;
}
void OAIFileOperation::setWriteFile(const OAIWriteFile &write_file) {
    m_write_file = write_file;
    m_write_file_isSet = true;
}

bool OAIFileOperation::is_write_file_Set() const{
    return m_write_file_isSet;
}

bool OAIFileOperation::is_write_file_Valid() const{
    return m_write_file_isValid;
}

bool OAIFileOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delete_file_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_write_file.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
