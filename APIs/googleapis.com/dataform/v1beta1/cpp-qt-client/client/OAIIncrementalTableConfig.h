/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIncrementalTableConfig.h
 *
 * Contains settings for relations of type &#x60;INCREMENTAL_TABLE&#x60;.
 */

#ifndef OAIIncrementalTableConfig_H
#define OAIIncrementalTableConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIncrementalTableConfig : public OAIObject {
public:
    OAIIncrementalTableConfig();
    OAIIncrementalTableConfig(QString json);
    ~OAIIncrementalTableConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getIncrementalPostOperations() const;
    void setIncrementalPostOperations(const QList<QString> &incremental_post_operations);
    bool is_incremental_post_operations_Set() const;
    bool is_incremental_post_operations_Valid() const;

    QList<QString> getIncrementalPreOperations() const;
    void setIncrementalPreOperations(const QList<QString> &incremental_pre_operations);
    bool is_incremental_pre_operations_Set() const;
    bool is_incremental_pre_operations_Valid() const;

    QString getIncrementalSelectQuery() const;
    void setIncrementalSelectQuery(const QString &incremental_select_query);
    bool is_incremental_select_query_Set() const;
    bool is_incremental_select_query_Valid() const;

    bool isRefreshDisabled() const;
    void setRefreshDisabled(const bool &refresh_disabled);
    bool is_refresh_disabled_Set() const;
    bool is_refresh_disabled_Valid() const;

    QList<QString> getUniqueKeyParts() const;
    void setUniqueKeyParts(const QList<QString> &unique_key_parts);
    bool is_unique_key_parts_Set() const;
    bool is_unique_key_parts_Valid() const;

    QString getUpdatePartitionFilter() const;
    void setUpdatePartitionFilter(const QString &update_partition_filter);
    bool is_update_partition_filter_Set() const;
    bool is_update_partition_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_incremental_post_operations;
    bool m_incremental_post_operations_isSet;
    bool m_incremental_post_operations_isValid;

    QList<QString> m_incremental_pre_operations;
    bool m_incremental_pre_operations_isSet;
    bool m_incremental_pre_operations_isValid;

    QString m_incremental_select_query;
    bool m_incremental_select_query_isSet;
    bool m_incremental_select_query_isValid;

    bool m_refresh_disabled;
    bool m_refresh_disabled_isSet;
    bool m_refresh_disabled_isValid;

    QList<QString> m_unique_key_parts;
    bool m_unique_key_parts_isSet;
    bool m_unique_key_parts_isValid;

    QString m_update_partition_filter;
    bool m_update_partition_filter_isSet;
    bool m_update_partition_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIncrementalTableConfig)

#endif // OAIIncrementalTableConfig_H
