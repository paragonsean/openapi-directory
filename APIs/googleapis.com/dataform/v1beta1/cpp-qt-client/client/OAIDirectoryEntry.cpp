/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDirectoryEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDirectoryEntry::OAIDirectoryEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDirectoryEntry::OAIDirectoryEntry() {
    this->initializeModel();
}

OAIDirectoryEntry::~OAIDirectoryEntry() {}

void OAIDirectoryEntry::initializeModel() {

    m_directory_isSet = false;
    m_directory_isValid = false;

    m_file_isSet = false;
    m_file_isValid = false;
}

void OAIDirectoryEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDirectoryEntry::fromJsonObject(QJsonObject json) {

    m_directory_isValid = ::OpenAPI::fromJsonValue(m_directory, json[QString("directory")]);
    m_directory_isSet = !json[QString("directory")].isNull() && m_directory_isValid;

    m_file_isValid = ::OpenAPI::fromJsonValue(m_file, json[QString("file")]);
    m_file_isSet = !json[QString("file")].isNull() && m_file_isValid;
}

QString OAIDirectoryEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDirectoryEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_directory_isSet) {
        obj.insert(QString("directory"), ::OpenAPI::toJsonValue(m_directory));
    }
    if (m_file_isSet) {
        obj.insert(QString("file"), ::OpenAPI::toJsonValue(m_file));
    }
    return obj;
}

QString OAIDirectoryEntry::getDirectory() const {
    return m_directory;
}
void OAIDirectoryEntry::setDirectory(const QString &directory) {
    m_directory = directory;
    m_directory_isSet = true;
}

bool OAIDirectoryEntry::is_directory_Set() const{
    return m_directory_isSet;
}

bool OAIDirectoryEntry::is_directory_Valid() const{
    return m_directory_isValid;
}

QString OAIDirectoryEntry::getFile() const {
    return m_file;
}
void OAIDirectoryEntry::setFile(const QString &file) {
    m_file = file;
    m_file_isSet = true;
}

bool OAIDirectoryEntry::is_file_Set() const{
    return m_file_isSet;
}

bool OAIDirectoryEntry::is_file_Valid() const{
    return m_file_isValid;
}

bool OAIDirectoryEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_directory_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDirectoryEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
