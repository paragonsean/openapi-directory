/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICompilationResult.h
 *
 * Represents the result of compiling a Dataform project.
 */

#ifndef OAICompilationResult_H
#define OAICompilationResult_H

#include <QJsonObject>

#include "OAICodeCompilationConfig.h"
#include "OAICompilationError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICodeCompilationConfig;
class OAICompilationError;

class OAICompilationResult : public OAIObject {
public:
    OAICompilationResult();
    OAICompilationResult(QString json);
    ~OAICompilationResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICodeCompilationConfig getCodeCompilationConfig() const;
    void setCodeCompilationConfig(const OAICodeCompilationConfig &code_compilation_config);
    bool is_code_compilation_config_Set() const;
    bool is_code_compilation_config_Valid() const;

    QList<OAICompilationError> getCompilationErrors() const;
    void setCompilationErrors(const QList<OAICompilationError> &compilation_errors);
    bool is_compilation_errors_Set() const;
    bool is_compilation_errors_Valid() const;

    QString getDataformCoreVersion() const;
    void setDataformCoreVersion(const QString &dataform_core_version);
    bool is_dataform_core_version_Set() const;
    bool is_dataform_core_version_Valid() const;

    QString getGitCommitish() const;
    void setGitCommitish(const QString &git_commitish);
    bool is_git_commitish_Set() const;
    bool is_git_commitish_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReleaseConfig() const;
    void setReleaseConfig(const QString &release_config);
    bool is_release_config_Set() const;
    bool is_release_config_Valid() const;

    QString getResolvedGitCommitSha() const;
    void setResolvedGitCommitSha(const QString &resolved_git_commit_sha);
    bool is_resolved_git_commit_sha_Set() const;
    bool is_resolved_git_commit_sha_Valid() const;

    QString getWorkspace() const;
    void setWorkspace(const QString &workspace);
    bool is_workspace_Set() const;
    bool is_workspace_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICodeCompilationConfig m_code_compilation_config;
    bool m_code_compilation_config_isSet;
    bool m_code_compilation_config_isValid;

    QList<OAICompilationError> m_compilation_errors;
    bool m_compilation_errors_isSet;
    bool m_compilation_errors_isValid;

    QString m_dataform_core_version;
    bool m_dataform_core_version_isSet;
    bool m_dataform_core_version_isValid;

    QString m_git_commitish;
    bool m_git_commitish_isSet;
    bool m_git_commitish_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_release_config;
    bool m_release_config_isSet;
    bool m_release_config_isValid;

    QString m_resolved_git_commit_sha;
    bool m_resolved_git_commit_sha_isSet;
    bool m_resolved_git_commit_sha_isValid;

    QString m_workspace;
    bool m_workspace_isSet;
    bool m_workspace_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICompilationResult)

#endif // OAICompilationResult_H
