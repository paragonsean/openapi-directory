/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvocationConfig from './InvocationConfig';
import ScheduledExecutionRecord from './ScheduledExecutionRecord';

/**
 * The WorkflowConfig model module.
 * @module model/WorkflowConfig
 * @version v1beta1
 */
class WorkflowConfig {
    /**
     * Constructs a new <code>WorkflowConfig</code>.
     * Represents a Dataform workflow configuration.
     * @alias module:model/WorkflowConfig
     */
    constructor() { 
        
        WorkflowConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkflowConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowConfig} obj Optional instance to populate.
     * @return {module:model/WorkflowConfig} The populated <code>WorkflowConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowConfig();

            if (data.hasOwnProperty('cronSchedule')) {
                obj['cronSchedule'] = ApiClient.convertToType(data['cronSchedule'], 'String');
            }
            if (data.hasOwnProperty('invocationConfig')) {
                obj['invocationConfig'] = InvocationConfig.constructFromObject(data['invocationConfig']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('recentScheduledExecutionRecords')) {
                obj['recentScheduledExecutionRecords'] = ApiClient.convertToType(data['recentScheduledExecutionRecords'], [ScheduledExecutionRecord]);
            }
            if (data.hasOwnProperty('releaseConfig')) {
                obj['releaseConfig'] = ApiClient.convertToType(data['releaseConfig'], 'String');
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cronSchedule'] && !(typeof data['cronSchedule'] === 'string' || data['cronSchedule'] instanceof String)) {
            throw new Error("Expected the field `cronSchedule` to be a primitive type in the JSON string but got " + data['cronSchedule']);
        }
        // validate the optional field `invocationConfig`
        if (data['invocationConfig']) { // data not null
          InvocationConfig.validateJSON(data['invocationConfig']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['recentScheduledExecutionRecords']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recentScheduledExecutionRecords'])) {
                throw new Error("Expected the field `recentScheduledExecutionRecords` to be an array in the JSON data but got " + data['recentScheduledExecutionRecords']);
            }
            // validate the optional field `recentScheduledExecutionRecords` (array)
            for (const item of data['recentScheduledExecutionRecords']) {
                ScheduledExecutionRecord.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['releaseConfig'] && !(typeof data['releaseConfig'] === 'string' || data['releaseConfig'] instanceof String)) {
            throw new Error("Expected the field `releaseConfig` to be a primitive type in the JSON string but got " + data['releaseConfig']);
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }

        return true;
    }


}



/**
 * Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
 * @member {String} cronSchedule
 */
WorkflowConfig.prototype['cronSchedule'] = undefined;

/**
 * @member {module:model/InvocationConfig} invocationConfig
 */
WorkflowConfig.prototype['invocationConfig'] = undefined;

/**
 * Output only. The workflow config's name.
 * @member {String} name
 */
WorkflowConfig.prototype['name'] = undefined;

/**
 * Output only. Records of the 10 most recent scheduled execution attempts, ordered in in descending order of `execution_time`. Updated whenever automatic creation of a workflow invocation is triggered by cron_schedule.
 * @member {Array.<module:model/ScheduledExecutionRecord>} recentScheduledExecutionRecords
 */
WorkflowConfig.prototype['recentScheduledExecutionRecords'] = undefined;

/**
 * Required. The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/_*_/locations/_*_/repositories/_*_/releaseConfigs/_*`.
 * @member {String} releaseConfig
 */
WorkflowConfig.prototype['releaseConfig'] = undefined;

/**
 * Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
 * @member {String} timeZone
 */
WorkflowConfig.prototype['timeZone'] = undefined;






export default WorkflowConfig;

