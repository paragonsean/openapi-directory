/**
 * Dataform API
 * Service to develop, version control, and operationalize SQL pipelines in BigQuery.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FetchGitAheadBehindResponse model module.
 * @module model/FetchGitAheadBehindResponse
 * @version v1beta1
 */
class FetchGitAheadBehindResponse {
    /**
     * Constructs a new <code>FetchGitAheadBehindResponse</code>.
     * &#x60;FetchGitAheadBehind&#x60; response message.
     * @alias module:model/FetchGitAheadBehindResponse
     */
    constructor() { 
        
        FetchGitAheadBehindResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FetchGitAheadBehindResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FetchGitAheadBehindResponse} obj Optional instance to populate.
     * @return {module:model/FetchGitAheadBehindResponse} The populated <code>FetchGitAheadBehindResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FetchGitAheadBehindResponse();

            if (data.hasOwnProperty('commitsAhead')) {
                obj['commitsAhead'] = ApiClient.convertToType(data['commitsAhead'], 'Number');
            }
            if (data.hasOwnProperty('commitsBehind')) {
                obj['commitsBehind'] = ApiClient.convertToType(data['commitsBehind'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FetchGitAheadBehindResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FetchGitAheadBehindResponse</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The number of commits in the remote branch that are not in the workspace.
 * @member {Number} commitsAhead
 */
FetchGitAheadBehindResponse.prototype['commitsAhead'] = undefined;

/**
 * The number of commits in the workspace that are not in the remote branch.
 * @member {Number} commitsBehind
 */
FetchGitAheadBehindResponse.prototype['commitsBehind'] = undefined;






export default FetchGitAheadBehindResponse;

