/**
 * Checks API
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails() {
    this->initializeModel();
}

OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::~OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails() {}

void OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::initializeModel() {

    m_endpoint_isSet = false;
    m_endpoint_isValid = false;
}

void OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::fromJsonObject(QJsonObject json) {

    m_endpoint_isValid = ::OpenAPI::fromJsonValue(m_endpoint, json[QString("endpoint")]);
    m_endpoint_isSet = !json[QString("endpoint")].isNull() && m_endpoint_isValid;
}

QString OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_endpoint.isSet()) {
        obj.insert(QString("endpoint"), ::OpenAPI::toJsonValue(m_endpoint));
    }
    return obj;
}

OAIGoogleChecksReportV1alphaEndpoint OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::getEndpoint() const {
    return m_endpoint;
}
void OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::setEndpoint(const OAIGoogleChecksReportV1alphaEndpoint &endpoint) {
    m_endpoint = endpoint;
    m_endpoint_isSet = true;
}

bool OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::is_endpoint_Set() const{
    return m_endpoint_isSet;
}

bool OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::is_endpoint_Valid() const{
    return m_endpoint_isValid;
}

bool OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_endpoint.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChecksReportV1alphaCheckEndpointRestrictionViolationEvidenceEndpointDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
