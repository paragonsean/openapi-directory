/**
 * Checks API
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChecksReportV1alphaReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChecksReportV1alphaReport::OAIGoogleChecksReportV1alphaReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChecksReportV1alphaReport::OAIGoogleChecksReportV1alphaReport() {
    this->initializeModel();
}

OAIGoogleChecksReportV1alphaReport::~OAIGoogleChecksReportV1alphaReport() {}

void OAIGoogleChecksReportV1alphaReport::initializeModel() {

    m_app_bundle_isSet = false;
    m_app_bundle_isValid = false;

    m_checks_isSet = false;
    m_checks_isValid = false;

    m_data_monitoring_isSet = false;
    m_data_monitoring_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_results_uri_isSet = false;
    m_results_uri_isValid = false;
}

void OAIGoogleChecksReportV1alphaReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChecksReportV1alphaReport::fromJsonObject(QJsonObject json) {

    m_app_bundle_isValid = ::OpenAPI::fromJsonValue(m_app_bundle, json[QString("appBundle")]);
    m_app_bundle_isSet = !json[QString("appBundle")].isNull() && m_app_bundle_isValid;

    m_checks_isValid = ::OpenAPI::fromJsonValue(m_checks, json[QString("checks")]);
    m_checks_isSet = !json[QString("checks")].isNull() && m_checks_isValid;

    m_data_monitoring_isValid = ::OpenAPI::fromJsonValue(m_data_monitoring, json[QString("dataMonitoring")]);
    m_data_monitoring_isSet = !json[QString("dataMonitoring")].isNull() && m_data_monitoring_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_results_uri_isValid = ::OpenAPI::fromJsonValue(m_results_uri, json[QString("resultsUri")]);
    m_results_uri_isSet = !json[QString("resultsUri")].isNull() && m_results_uri_isValid;
}

QString OAIGoogleChecksReportV1alphaReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChecksReportV1alphaReport::asJsonObject() const {
    QJsonObject obj;
    if (m_app_bundle.isSet()) {
        obj.insert(QString("appBundle"), ::OpenAPI::toJsonValue(m_app_bundle));
    }
    if (m_checks.size() > 0) {
        obj.insert(QString("checks"), ::OpenAPI::toJsonValue(m_checks));
    }
    if (m_data_monitoring.isSet()) {
        obj.insert(QString("dataMonitoring"), ::OpenAPI::toJsonValue(m_data_monitoring));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_results_uri_isSet) {
        obj.insert(QString("resultsUri"), ::OpenAPI::toJsonValue(m_results_uri));
    }
    return obj;
}

OAIGoogleChecksReportV1alphaAppBundle OAIGoogleChecksReportV1alphaReport::getAppBundle() const {
    return m_app_bundle;
}
void OAIGoogleChecksReportV1alphaReport::setAppBundle(const OAIGoogleChecksReportV1alphaAppBundle &app_bundle) {
    m_app_bundle = app_bundle;
    m_app_bundle_isSet = true;
}

bool OAIGoogleChecksReportV1alphaReport::is_app_bundle_Set() const{
    return m_app_bundle_isSet;
}

bool OAIGoogleChecksReportV1alphaReport::is_app_bundle_Valid() const{
    return m_app_bundle_isValid;
}

QList<OAIGoogleChecksReportV1alphaCheck> OAIGoogleChecksReportV1alphaReport::getChecks() const {
    return m_checks;
}
void OAIGoogleChecksReportV1alphaReport::setChecks(const QList<OAIGoogleChecksReportV1alphaCheck> &checks) {
    m_checks = checks;
    m_checks_isSet = true;
}

bool OAIGoogleChecksReportV1alphaReport::is_checks_Set() const{
    return m_checks_isSet;
}

bool OAIGoogleChecksReportV1alphaReport::is_checks_Valid() const{
    return m_checks_isValid;
}

OAIGoogleChecksReportV1alphaDataMonitoring OAIGoogleChecksReportV1alphaReport::getDataMonitoring() const {
    return m_data_monitoring;
}
void OAIGoogleChecksReportV1alphaReport::setDataMonitoring(const OAIGoogleChecksReportV1alphaDataMonitoring &data_monitoring) {
    m_data_monitoring = data_monitoring;
    m_data_monitoring_isSet = true;
}

bool OAIGoogleChecksReportV1alphaReport::is_data_monitoring_Set() const{
    return m_data_monitoring_isSet;
}

bool OAIGoogleChecksReportV1alphaReport::is_data_monitoring_Valid() const{
    return m_data_monitoring_isValid;
}

QString OAIGoogleChecksReportV1alphaReport::getName() const {
    return m_name;
}
void OAIGoogleChecksReportV1alphaReport::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleChecksReportV1alphaReport::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleChecksReportV1alphaReport::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleChecksReportV1alphaReport::getResultsUri() const {
    return m_results_uri;
}
void OAIGoogleChecksReportV1alphaReport::setResultsUri(const QString &results_uri) {
    m_results_uri = results_uri;
    m_results_uri_isSet = true;
}

bool OAIGoogleChecksReportV1alphaReport::is_results_uri_Set() const{
    return m_results_uri_isSet;
}

bool OAIGoogleChecksReportV1alphaReport::is_results_uri_Valid() const{
    return m_results_uri_isValid;
}

bool OAIGoogleChecksReportV1alphaReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_bundle.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_checks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_monitoring.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChecksReportV1alphaReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
