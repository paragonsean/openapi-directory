/**
 * Checks API
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChecksReportV1alphaDataMonitoring.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChecksReportV1alphaDataMonitoring::OAIGoogleChecksReportV1alphaDataMonitoring(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChecksReportV1alphaDataMonitoring::OAIGoogleChecksReportV1alphaDataMonitoring() {
    this->initializeModel();
}

OAIGoogleChecksReportV1alphaDataMonitoring::~OAIGoogleChecksReportV1alphaDataMonitoring() {}

void OAIGoogleChecksReportV1alphaDataMonitoring::initializeModel() {

    m_data_types_isSet = false;
    m_data_types_isValid = false;

    m_endpoints_isSet = false;
    m_endpoints_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;

    m_sdks_isSet = false;
    m_sdks_isValid = false;
}

void OAIGoogleChecksReportV1alphaDataMonitoring::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChecksReportV1alphaDataMonitoring::fromJsonObject(QJsonObject json) {

    m_data_types_isValid = ::OpenAPI::fromJsonValue(m_data_types, json[QString("dataTypes")]);
    m_data_types_isSet = !json[QString("dataTypes")].isNull() && m_data_types_isValid;

    m_endpoints_isValid = ::OpenAPI::fromJsonValue(m_endpoints, json[QString("endpoints")]);
    m_endpoints_isSet = !json[QString("endpoints")].isNull() && m_endpoints_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("permissions")]);
    m_permissions_isSet = !json[QString("permissions")].isNull() && m_permissions_isValid;

    m_sdks_isValid = ::OpenAPI::fromJsonValue(m_sdks, json[QString("sdks")]);
    m_sdks_isSet = !json[QString("sdks")].isNull() && m_sdks_isValid;
}

QString OAIGoogleChecksReportV1alphaDataMonitoring::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChecksReportV1alphaDataMonitoring::asJsonObject() const {
    QJsonObject obj;
    if (m_data_types.size() > 0) {
        obj.insert(QString("dataTypes"), ::OpenAPI::toJsonValue(m_data_types));
    }
    if (m_endpoints.size() > 0) {
        obj.insert(QString("endpoints"), ::OpenAPI::toJsonValue(m_endpoints));
    }
    if (m_permissions.size() > 0) {
        obj.insert(QString("permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    if (m_sdks.size() > 0) {
        obj.insert(QString("sdks"), ::OpenAPI::toJsonValue(m_sdks));
    }
    return obj;
}

QList<OAIGoogleChecksReportV1alphaDataMonitoringDataTypeResult> OAIGoogleChecksReportV1alphaDataMonitoring::getDataTypes() const {
    return m_data_types;
}
void OAIGoogleChecksReportV1alphaDataMonitoring::setDataTypes(const QList<OAIGoogleChecksReportV1alphaDataMonitoringDataTypeResult> &data_types) {
    m_data_types = data_types;
    m_data_types_isSet = true;
}

bool OAIGoogleChecksReportV1alphaDataMonitoring::is_data_types_Set() const{
    return m_data_types_isSet;
}

bool OAIGoogleChecksReportV1alphaDataMonitoring::is_data_types_Valid() const{
    return m_data_types_isValid;
}

QList<OAIGoogleChecksReportV1alphaDataMonitoringEndpointResult> OAIGoogleChecksReportV1alphaDataMonitoring::getEndpoints() const {
    return m_endpoints;
}
void OAIGoogleChecksReportV1alphaDataMonitoring::setEndpoints(const QList<OAIGoogleChecksReportV1alphaDataMonitoringEndpointResult> &endpoints) {
    m_endpoints = endpoints;
    m_endpoints_isSet = true;
}

bool OAIGoogleChecksReportV1alphaDataMonitoring::is_endpoints_Set() const{
    return m_endpoints_isSet;
}

bool OAIGoogleChecksReportV1alphaDataMonitoring::is_endpoints_Valid() const{
    return m_endpoints_isValid;
}

QList<OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult> OAIGoogleChecksReportV1alphaDataMonitoring::getPermissions() const {
    return m_permissions;
}
void OAIGoogleChecksReportV1alphaDataMonitoring::setPermissions(const QList<OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult> &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAIGoogleChecksReportV1alphaDataMonitoring::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAIGoogleChecksReportV1alphaDataMonitoring::is_permissions_Valid() const{
    return m_permissions_isValid;
}

QList<OAIGoogleChecksReportV1alphaDataMonitoringSdkResult> OAIGoogleChecksReportV1alphaDataMonitoring::getSdks() const {
    return m_sdks;
}
void OAIGoogleChecksReportV1alphaDataMonitoring::setSdks(const QList<OAIGoogleChecksReportV1alphaDataMonitoringSdkResult> &sdks) {
    m_sdks = sdks;
    m_sdks_isSet = true;
}

bool OAIGoogleChecksReportV1alphaDataMonitoring::is_sdks_Set() const{
    return m_sdks_isSet;
}

bool OAIGoogleChecksReportV1alphaDataMonitoring::is_sdks_Valid() const{
    return m_sdks_isValid;
}

bool OAIGoogleChecksReportV1alphaDataMonitoring::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoints.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sdks.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChecksReportV1alphaDataMonitoring::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
