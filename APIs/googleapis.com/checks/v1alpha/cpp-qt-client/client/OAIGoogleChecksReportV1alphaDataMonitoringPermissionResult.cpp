/**
 * Checks API
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult() {
    this->initializeModel();
}

OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::~OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult() {}

void OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::initializeModel() {

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_permission_isSet = false;
    m_permission_isValid = false;
}

void OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::fromJsonObject(QJsonObject json) {

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_permission_isValid = ::OpenAPI::fromJsonValue(m_permission, json[QString("permission")]);
    m_permission_isSet = !json[QString("permission")].isNull() && m_permission_isValid;
}

QString OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::asJsonObject() const {
    QJsonObject obj;
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_permission.isSet()) {
        obj.insert(QString("permission"), ::OpenAPI::toJsonValue(m_permission));
    }
    return obj;
}

OAIGoogleChecksReportV1alphaDataMonitoringResultMetadata OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::getMetadata() const {
    return m_metadata;
}
void OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::setMetadata(const OAIGoogleChecksReportV1alphaDataMonitoringResultMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::is_metadata_Valid() const{
    return m_metadata_isValid;
}

OAIGoogleChecksReportV1alphaPermission OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::getPermission() const {
    return m_permission;
}
void OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::setPermission(const OAIGoogleChecksReportV1alphaPermission &permission) {
    m_permission = permission;
    m_permission_isSet = true;
}

bool OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::is_permission_Set() const{
    return m_permission_isSet;
}

bool OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::is_permission_Valid() const{
    return m_permission_isValid;
}

bool OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_permission.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChecksReportV1alphaDataMonitoringPermissionResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
