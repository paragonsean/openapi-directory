/**
 * Checks API
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChecksReportV1alphaCheckStateMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChecksReportV1alphaCheckStateMetadata::OAIGoogleChecksReportV1alphaCheckStateMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChecksReportV1alphaCheckStateMetadata::OAIGoogleChecksReportV1alphaCheckStateMetadata() {
    this->initializeModel();
}

OAIGoogleChecksReportV1alphaCheckStateMetadata::~OAIGoogleChecksReportV1alphaCheckStateMetadata() {}

void OAIGoogleChecksReportV1alphaCheckStateMetadata::initializeModel() {

    m_badges_isSet = false;
    m_badges_isValid = false;

    m_first_failing_time_isSet = false;
    m_first_failing_time_isValid = false;

    m_last_failing_time_isSet = false;
    m_last_failing_time_isValid = false;
}

void OAIGoogleChecksReportV1alphaCheckStateMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChecksReportV1alphaCheckStateMetadata::fromJsonObject(QJsonObject json) {

    m_badges_isValid = ::OpenAPI::fromJsonValue(m_badges, json[QString("badges")]);
    m_badges_isSet = !json[QString("badges")].isNull() && m_badges_isValid;

    m_first_failing_time_isValid = ::OpenAPI::fromJsonValue(m_first_failing_time, json[QString("firstFailingTime")]);
    m_first_failing_time_isSet = !json[QString("firstFailingTime")].isNull() && m_first_failing_time_isValid;

    m_last_failing_time_isValid = ::OpenAPI::fromJsonValue(m_last_failing_time, json[QString("lastFailingTime")]);
    m_last_failing_time_isSet = !json[QString("lastFailingTime")].isNull() && m_last_failing_time_isValid;
}

QString OAIGoogleChecksReportV1alphaCheckStateMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChecksReportV1alphaCheckStateMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_badges.size() > 0) {
        obj.insert(QString("badges"), ::OpenAPI::toJsonValue(m_badges));
    }
    if (m_first_failing_time_isSet) {
        obj.insert(QString("firstFailingTime"), ::OpenAPI::toJsonValue(m_first_failing_time));
    }
    if (m_last_failing_time_isSet) {
        obj.insert(QString("lastFailingTime"), ::OpenAPI::toJsonValue(m_last_failing_time));
    }
    return obj;
}

QList<QString> OAIGoogleChecksReportV1alphaCheckStateMetadata::getBadges() const {
    return m_badges;
}
void OAIGoogleChecksReportV1alphaCheckStateMetadata::setBadges(const QList<QString> &badges) {
    m_badges = badges;
    m_badges_isSet = true;
}

bool OAIGoogleChecksReportV1alphaCheckStateMetadata::is_badges_Set() const{
    return m_badges_isSet;
}

bool OAIGoogleChecksReportV1alphaCheckStateMetadata::is_badges_Valid() const{
    return m_badges_isValid;
}

QString OAIGoogleChecksReportV1alphaCheckStateMetadata::getFirstFailingTime() const {
    return m_first_failing_time;
}
void OAIGoogleChecksReportV1alphaCheckStateMetadata::setFirstFailingTime(const QString &first_failing_time) {
    m_first_failing_time = first_failing_time;
    m_first_failing_time_isSet = true;
}

bool OAIGoogleChecksReportV1alphaCheckStateMetadata::is_first_failing_time_Set() const{
    return m_first_failing_time_isSet;
}

bool OAIGoogleChecksReportV1alphaCheckStateMetadata::is_first_failing_time_Valid() const{
    return m_first_failing_time_isValid;
}

QString OAIGoogleChecksReportV1alphaCheckStateMetadata::getLastFailingTime() const {
    return m_last_failing_time;
}
void OAIGoogleChecksReportV1alphaCheckStateMetadata::setLastFailingTime(const QString &last_failing_time) {
    m_last_failing_time = last_failing_time;
    m_last_failing_time_isSet = true;
}

bool OAIGoogleChecksReportV1alphaCheckStateMetadata::is_last_failing_time_Set() const{
    return m_last_failing_time_isSet;
}

bool OAIGoogleChecksReportV1alphaCheckStateMetadata::is_last_failing_time_Valid() const{
    return m_last_failing_time_isValid;
}

bool OAIGoogleChecksReportV1alphaCheckStateMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_badges.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_failing_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_failing_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChecksReportV1alphaCheckStateMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
