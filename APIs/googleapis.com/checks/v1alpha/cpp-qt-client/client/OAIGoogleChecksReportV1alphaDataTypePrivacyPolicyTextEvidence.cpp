/**
 * Checks API
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence() {
    this->initializeModel();
}

OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::~OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence() {}

void OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::initializeModel() {

    m_policy_fragment_isSet = false;
    m_policy_fragment_isValid = false;
}

void OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::fromJsonObject(QJsonObject json) {

    m_policy_fragment_isValid = ::OpenAPI::fromJsonValue(m_policy_fragment, json[QString("policyFragment")]);
    m_policy_fragment_isSet = !json[QString("policyFragment")].isNull() && m_policy_fragment_isValid;
}

QString OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::asJsonObject() const {
    QJsonObject obj;
    if (m_policy_fragment.isSet()) {
        obj.insert(QString("policyFragment"), ::OpenAPI::toJsonValue(m_policy_fragment));
    }
    return obj;
}

OAIGoogleChecksReportV1alphaPolicyFragment OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::getPolicyFragment() const {
    return m_policy_fragment;
}
void OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::setPolicyFragment(const OAIGoogleChecksReportV1alphaPolicyFragment &policy_fragment) {
    m_policy_fragment = policy_fragment;
    m_policy_fragment_isSet = true;
}

bool OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::is_policy_fragment_Set() const{
    return m_policy_fragment_isSet;
}

bool OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::is_policy_fragment_Valid() const{
    return m_policy_fragment_isValid;
}

bool OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_policy_fragment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleChecksReportV1alphaDataTypePrivacyPolicyTextEvidence::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
