/**
 * Checks API
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChecksReportV1alphaCheckStateMetadata model module.
 * @module model/GoogleChecksReportV1alphaCheckStateMetadata
 * @version v1alpha
 */
class GoogleChecksReportV1alphaCheckStateMetadata {
    /**
     * Constructs a new <code>GoogleChecksReportV1alphaCheckStateMetadata</code>.
     * Additional information about the check state in relation to past reports.
     * @alias module:model/GoogleChecksReportV1alphaCheckStateMetadata
     */
    constructor() { 
        
        GoogleChecksReportV1alphaCheckStateMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChecksReportV1alphaCheckStateMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChecksReportV1alphaCheckStateMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleChecksReportV1alphaCheckStateMetadata} The populated <code>GoogleChecksReportV1alphaCheckStateMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChecksReportV1alphaCheckStateMetadata();

            if (data.hasOwnProperty('badges')) {
                obj['badges'] = ApiClient.convertToType(data['badges'], ['String']);
            }
            if (data.hasOwnProperty('firstFailingTime')) {
                obj['firstFailingTime'] = ApiClient.convertToType(data['firstFailingTime'], 'String');
            }
            if (data.hasOwnProperty('lastFailingTime')) {
                obj['lastFailingTime'] = ApiClient.convertToType(data['lastFailingTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChecksReportV1alphaCheckStateMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChecksReportV1alphaCheckStateMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['badges'])) {
            throw new Error("Expected the field `badges` to be an array in the JSON data but got " + data['badges']);
        }
        // ensure the json data is a string
        if (data['firstFailingTime'] && !(typeof data['firstFailingTime'] === 'string' || data['firstFailingTime'] instanceof String)) {
            throw new Error("Expected the field `firstFailingTime` to be a primitive type in the JSON string but got " + data['firstFailingTime']);
        }
        // ensure the json data is a string
        if (data['lastFailingTime'] && !(typeof data['lastFailingTime'] === 'string' || data['lastFailingTime'] instanceof String)) {
            throw new Error("Expected the field `lastFailingTime` to be a primitive type in the JSON string but got " + data['lastFailingTime']);
        }

        return true;
    }


}



/**
 * Indicators related to the check state.
 * @member {Array.<module:model/GoogleChecksReportV1alphaCheckStateMetadata.BadgesEnum>} badges
 */
GoogleChecksReportV1alphaCheckStateMetadata.prototype['badges'] = undefined;

/**
 * The time when the check first started failing.
 * @member {String} firstFailingTime
 */
GoogleChecksReportV1alphaCheckStateMetadata.prototype['firstFailingTime'] = undefined;

/**
 * The last time the check failed.
 * @member {String} lastFailingTime
 */
GoogleChecksReportV1alphaCheckStateMetadata.prototype['lastFailingTime'] = undefined;





/**
 * Allowed values for the <code>badges</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChecksReportV1alphaCheckStateMetadata['BadgesEnum'] = {

    /**
     * value: "CHECK_STATE_BADGE_UNSPECIFIED"
     * @const
     */
    "CHECK_STATE_BADGE_UNSPECIFIED": "CHECK_STATE_BADGE_UNSPECIFIED",

    /**
     * value: "NEWLY_FAILING"
     * @const
     */
    "NEWLY_FAILING": "NEWLY_FAILING",

    /**
     * value: "RECENTLY_FAILING"
     * @const
     */
    "RECENTLY_FAILING": "RECENTLY_FAILING",

    /**
     * value: "RESOLVED"
     * @const
     */
    "RESOLVED": "RESOLVED"
};



export default GoogleChecksReportV1alphaCheckStateMetadata;

