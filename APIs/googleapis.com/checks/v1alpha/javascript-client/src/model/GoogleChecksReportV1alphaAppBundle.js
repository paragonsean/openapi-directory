/**
 * Checks API
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleChecksReportV1alphaAppBundle model module.
 * @module model/GoogleChecksReportV1alphaAppBundle
 * @version v1alpha
 */
class GoogleChecksReportV1alphaAppBundle {
    /**
     * Constructs a new <code>GoogleChecksReportV1alphaAppBundle</code>.
     * Information about the analyzed app bundle.
     * @alias module:model/GoogleChecksReportV1alphaAppBundle
     */
    constructor() { 
        
        GoogleChecksReportV1alphaAppBundle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleChecksReportV1alphaAppBundle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleChecksReportV1alphaAppBundle} obj Optional instance to populate.
     * @return {module:model/GoogleChecksReportV1alphaAppBundle} The populated <code>GoogleChecksReportV1alphaAppBundle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleChecksReportV1alphaAppBundle();

            if (data.hasOwnProperty('bundleId')) {
                obj['bundleId'] = ApiClient.convertToType(data['bundleId'], 'String');
            }
            if (data.hasOwnProperty('codeReferenceId')) {
                obj['codeReferenceId'] = ApiClient.convertToType(data['codeReferenceId'], 'String');
            }
            if (data.hasOwnProperty('releaseType')) {
                obj['releaseType'] = ApiClient.convertToType(data['releaseType'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('versionId')) {
                obj['versionId'] = ApiClient.convertToType(data['versionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleChecksReportV1alphaAppBundle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleChecksReportV1alphaAppBundle</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bundleId'] && !(typeof data['bundleId'] === 'string' || data['bundleId'] instanceof String)) {
            throw new Error("Expected the field `bundleId` to be a primitive type in the JSON string but got " + data['bundleId']);
        }
        // ensure the json data is a string
        if (data['codeReferenceId'] && !(typeof data['codeReferenceId'] === 'string' || data['codeReferenceId'] instanceof String)) {
            throw new Error("Expected the field `codeReferenceId` to be a primitive type in the JSON string but got " + data['codeReferenceId']);
        }
        // ensure the json data is a string
        if (data['releaseType'] && !(typeof data['releaseType'] === 'string' || data['releaseType'] instanceof String)) {
            throw new Error("Expected the field `releaseType` to be a primitive type in the JSON string but got " + data['releaseType']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // ensure the json data is a string
        if (data['versionId'] && !(typeof data['versionId'] === 'string' || data['versionId'] instanceof String)) {
            throw new Error("Expected the field `versionId` to be a primitive type in the JSON string but got " + data['versionId']);
        }

        return true;
    }


}



/**
 * Unique id of the bundle. For example: \"com.google.Gmail\".
 * @member {String} bundleId
 */
GoogleChecksReportV1alphaAppBundle.prototype['bundleId'] = undefined;

/**
 * Git commit hash or changelist number associated with the release.
 * @member {String} codeReferenceId
 */
GoogleChecksReportV1alphaAppBundle.prototype['codeReferenceId'] = undefined;

/**
 * Identifies the type of release.
 * @member {module:model/GoogleChecksReportV1alphaAppBundle.ReleaseTypeEnum} releaseType
 */
GoogleChecksReportV1alphaAppBundle.prototype['releaseType'] = undefined;

/**
 * The user-visible version of the bundle such as the Android `versionName` or iOS `CFBundleShortVersionString`. For example: \"7.21.1\".
 * @member {String} version
 */
GoogleChecksReportV1alphaAppBundle.prototype['version'] = undefined;

/**
 * The version used throughout the operating system and store to identify the build such as the Android `versionCode` or iOS `CFBundleVersion`.
 * @member {String} versionId
 */
GoogleChecksReportV1alphaAppBundle.prototype['versionId'] = undefined;





/**
 * Allowed values for the <code>releaseType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleChecksReportV1alphaAppBundle['ReleaseTypeEnum'] = {

    /**
     * value: "APP_BUNDLE_RELEASE_TYPE_UNSPECIFIED"
     * @const
     */
    "APP_BUNDLE_RELEASE_TYPE_UNSPECIFIED": "APP_BUNDLE_RELEASE_TYPE_UNSPECIFIED",

    /**
     * value: "PUBLIC"
     * @const
     */
    "PUBLIC": "PUBLIC",

    /**
     * value: "PRE_RELEASE"
     * @const
     */
    "PRE_RELEASE": "PRE_RELEASE"
};



export default GoogleChecksReportV1alphaAppBundle;

