# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_checks_report_v1alpha_data_monitoring_result_metadata import GoogleChecksReportV1alphaDataMonitoringResultMetadata
from openapi_server.models.google_checks_report_v1alpha_data_type_evidence import GoogleChecksReportV1alphaDataTypeEvidence
from openapi_server import util


class GoogleChecksReportV1alphaDataMonitoringDataTypeResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_type: str=None, data_type_evidence: GoogleChecksReportV1alphaDataTypeEvidence=None, metadata: GoogleChecksReportV1alphaDataMonitoringResultMetadata=None):
        """GoogleChecksReportV1alphaDataMonitoringDataTypeResult - a model defined in OpenAPI

        :param data_type: The data_type of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.
        :param data_type_evidence: The data_type_evidence of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.
        :param metadata: The metadata of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.
        """
        self.openapi_types = {
            'data_type': str,
            'data_type_evidence': GoogleChecksReportV1alphaDataTypeEvidence,
            'metadata': GoogleChecksReportV1alphaDataMonitoringResultMetadata
        }

        self.attribute_map = {
            'data_type': 'dataType',
            'data_type_evidence': 'dataTypeEvidence',
            'metadata': 'metadata'
        }

        self._data_type = data_type
        self._data_type_evidence = data_type_evidence
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChecksReportV1alphaDataMonitoringDataTypeResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChecksReportV1alphaDataMonitoringDataTypeResult of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_type(self):
        """Gets the data_type of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.

        The data type that was shared or collected by your app.

        :return: The data_type of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.

        The data type that was shared or collected by your app.

        :param data_type: The data_type of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.
        :type data_type: str
        """
        allowed_values = ["DATA_TYPE_UNSPECIFIED", "DATA_TYPE_APPROXIMATE_LOCATION", "DATA_TYPE_PRECISE_LOCATION", "DATA_TYPE_PERSONAL_NAME", "DATA_TYPE_EMAIL_ADDRESS", "DATA_TYPE_USER_IDS", "DATA_TYPE_PHYSICAL_ADDRESS", "DATA_TYPE_PHONE_NUMBER", "DATA_TYPE_RACE_AND_ETHNICITY", "DATA_TYPE_POLITICAL_OR_RELIGIOUS_BELIEFS", "DATA_TYPE_SEXUAL_ORIENTATION", "DATA_TYPE_OTHER_PERSONAL_INFO", "DATA_TYPE_PAYMENT_INFO", "DATA_TYPE_PURCHASE_HISTORY", "DATA_TYPE_CREDIT_SCORE", "DATA_TYPE_OTHER_FINANCIAL_INFO", "DATA_TYPE_HEALTH_INFO", "DATA_TYPE_FITNESS_INFO", "DATA_TYPE_EMAILS", "DATA_TYPE_TEXT_MESSAGES", "DATA_TYPE_PHOTOS", "DATA_TYPE_VIDEOS", "DATA_TYPE_VOICE_OR_SOUND_RECORDINGS", "DATA_TYPE_MUSIC_FILES", "DATA_TYPE_OTHER_AUDIO_FILES", "DATA_TYPE_FILES_AND_DOCS", "DATA_TYPE_CALENDAR_EVENTS", "DATA_TYPE_CONTACTS", "DATA_TYPE_APP_INTERACTIONS", "DATA_TYPE_IN_APP_SEARCH_HISTORY", "DATA_TYPE_INSTALLED_APPS", "DATA_TYPE_OTHER_USER_GENERATED_CONTENT", "DATA_TYPE_OTHER_ACTIONS", "DATA_TYPE_WEB_BROWSING_HISTORY", "DATA_TYPE_CRASH_LOGS", "DATA_TYPE_PERFORMANCE_DIAGNOSTICS", "DATA_TYPE_OTHER_APP_PERFORMANCE_DATA", "DATA_TYPE_DEVICE_OR_OTHER_IDS"]  # noqa: E501
        if data_type not in allowed_values:
            raise ValueError(
                "Invalid value for `data_type` ({0}), must be one of {1}"
                .format(data_type, allowed_values)
            )

        self._data_type = data_type

    @property
    def data_type_evidence(self):
        """Gets the data_type_evidence of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.


        :return: The data_type_evidence of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.
        :rtype: GoogleChecksReportV1alphaDataTypeEvidence
        """
        return self._data_type_evidence

    @data_type_evidence.setter
    def data_type_evidence(self, data_type_evidence):
        """Sets the data_type_evidence of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.


        :param data_type_evidence: The data_type_evidence of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.
        :type data_type_evidence: GoogleChecksReportV1alphaDataTypeEvidence
        """

        self._data_type_evidence = data_type_evidence

    @property
    def metadata(self):
        """Gets the metadata of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.


        :return: The metadata of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.
        :rtype: GoogleChecksReportV1alphaDataMonitoringResultMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.


        :param metadata: The metadata of this GoogleChecksReportV1alphaDataMonitoringDataTypeResult.
        :type metadata: GoogleChecksReportV1alphaDataMonitoringResultMetadata
        """

        self._metadata = metadata
