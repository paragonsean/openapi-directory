# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChecksReportV1alphaAnalyzeUploadRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_binary_file_type: str=None, code_reference_id: str=None):
        """GoogleChecksReportV1alphaAnalyzeUploadRequest - a model defined in OpenAPI

        :param app_binary_file_type: The app_binary_file_type of this GoogleChecksReportV1alphaAnalyzeUploadRequest.
        :param code_reference_id: The code_reference_id of this GoogleChecksReportV1alphaAnalyzeUploadRequest.
        """
        self.openapi_types = {
            'app_binary_file_type': str,
            'code_reference_id': str
        }

        self.attribute_map = {
            'app_binary_file_type': 'appBinaryFileType',
            'code_reference_id': 'codeReferenceId'
        }

        self._app_binary_file_type = app_binary_file_type
        self._code_reference_id = code_reference_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChecksReportV1alphaAnalyzeUploadRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChecksReportV1alphaAnalyzeUploadRequest of this GoogleChecksReportV1alphaAnalyzeUploadRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_binary_file_type(self):
        """Gets the app_binary_file_type of this GoogleChecksReportV1alphaAnalyzeUploadRequest.

        Optional. The type of the uploaded app binary. If not provided, the server assumes APK file for Android and IPA file for iOS.

        :return: The app_binary_file_type of this GoogleChecksReportV1alphaAnalyzeUploadRequest.
        :rtype: str
        """
        return self._app_binary_file_type

    @app_binary_file_type.setter
    def app_binary_file_type(self, app_binary_file_type):
        """Sets the app_binary_file_type of this GoogleChecksReportV1alphaAnalyzeUploadRequest.

        Optional. The type of the uploaded app binary. If not provided, the server assumes APK file for Android and IPA file for iOS.

        :param app_binary_file_type: The app_binary_file_type of this GoogleChecksReportV1alphaAnalyzeUploadRequest.
        :type app_binary_file_type: str
        """
        allowed_values = ["APP_BINARY_FILE_TYPE_UNSPECIFIED", "ANDROID_APK", "ANDROID_AAB", "IOS_IPA"]  # noqa: E501
        if app_binary_file_type not in allowed_values:
            raise ValueError(
                "Invalid value for `app_binary_file_type` ({0}), must be one of {1}"
                .format(app_binary_file_type, allowed_values)
            )

        self._app_binary_file_type = app_binary_file_type

    @property
    def code_reference_id(self):
        """Gets the code_reference_id of this GoogleChecksReportV1alphaAnalyzeUploadRequest.

        Optional. Git commit hash or changelist number associated with the upload.

        :return: The code_reference_id of this GoogleChecksReportV1alphaAnalyzeUploadRequest.
        :rtype: str
        """
        return self._code_reference_id

    @code_reference_id.setter
    def code_reference_id(self, code_reference_id):
        """Sets the code_reference_id of this GoogleChecksReportV1alphaAnalyzeUploadRequest.

        Optional. Git commit hash or changelist number associated with the upload.

        :param code_reference_id: The code_reference_id of this GoogleChecksReportV1alphaAnalyzeUploadRequest.
        :type code_reference_id: str
        """

        self._code_reference_id = code_reference_id
