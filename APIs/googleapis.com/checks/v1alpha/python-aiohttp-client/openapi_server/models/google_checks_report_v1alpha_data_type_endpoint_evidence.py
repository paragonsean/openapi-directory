# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_checks_report_v1alpha_data_type_endpoint_evidence_attributed_sdk import GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk
from openapi_server.models.google_checks_report_v1alpha_data_type_endpoint_evidence_endpoint_details import GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails
from openapi_server import util


class GoogleChecksReportV1alphaDataTypeEndpointEvidence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributed_sdks: List[GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk]=None, endpoint_details: List[GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails]=None, exfiltrated_data_type: str=None):
        """GoogleChecksReportV1alphaDataTypeEndpointEvidence - a model defined in OpenAPI

        :param attributed_sdks: The attributed_sdks of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.
        :param endpoint_details: The endpoint_details of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.
        :param exfiltrated_data_type: The exfiltrated_data_type of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.
        """
        self.openapi_types = {
            'attributed_sdks': List[GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk],
            'endpoint_details': List[GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails],
            'exfiltrated_data_type': str
        }

        self.attribute_map = {
            'attributed_sdks': 'attributedSdks',
            'endpoint_details': 'endpointDetails',
            'exfiltrated_data_type': 'exfiltratedDataType'
        }

        self._attributed_sdks = attributed_sdks
        self._endpoint_details = endpoint_details
        self._exfiltrated_data_type = exfiltrated_data_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChecksReportV1alphaDataTypeEndpointEvidence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChecksReportV1alphaDataTypeEndpointEvidence of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributed_sdks(self):
        """Gets the attributed_sdks of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.

        Set of SDKs that are attributed to the exfiltration.

        :return: The attributed_sdks of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.
        :rtype: List[GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk]
        """
        return self._attributed_sdks

    @attributed_sdks.setter
    def attributed_sdks(self, attributed_sdks):
        """Sets the attributed_sdks of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.

        Set of SDKs that are attributed to the exfiltration.

        :param attributed_sdks: The attributed_sdks of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.
        :type attributed_sdks: List[GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk]
        """

        self._attributed_sdks = attributed_sdks

    @property
    def endpoint_details(self):
        """Gets the endpoint_details of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.

        Endpoints the data type was sent to.

        :return: The endpoint_details of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.
        :rtype: List[GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails]
        """
        return self._endpoint_details

    @endpoint_details.setter
    def endpoint_details(self, endpoint_details):
        """Sets the endpoint_details of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.

        Endpoints the data type was sent to.

        :param endpoint_details: The endpoint_details of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.
        :type endpoint_details: List[GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails]
        """

        self._endpoint_details = endpoint_details

    @property
    def exfiltrated_data_type(self):
        """Gets the exfiltrated_data_type of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.

        Type of data that was exfiltrated.

        :return: The exfiltrated_data_type of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.
        :rtype: str
        """
        return self._exfiltrated_data_type

    @exfiltrated_data_type.setter
    def exfiltrated_data_type(self, exfiltrated_data_type):
        """Sets the exfiltrated_data_type of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.

        Type of data that was exfiltrated.

        :param exfiltrated_data_type: The exfiltrated_data_type of this GoogleChecksReportV1alphaDataTypeEndpointEvidence.
        :type exfiltrated_data_type: str
        """
        allowed_values = ["EXFILTRATED_DATA_TYPE_UNSPECIFIED", "EXFILTRATED_DATA_TYPE_PHONE_NUMBER", "EXFILTRATED_DATA_TYPE_PRECISE_LOCATION", "EXFILTRATED_DATA_TYPE_CONTACT_NAME", "EXFILTRATED_DATA_TYPE_CONTACT_EMAIL", "EXFILTRATED_DATA_TYPE_CONTACT_PHONE_NUMBER", "EXFILTRATED_DATA_TYPE_INCOMING_TEXT_NUMBER", "EXFILTRATED_DATA_TYPE_INCOMING_TEXT_MESSAGE", "EXFILTRATED_DATA_TYPE_OUTGOING_TEXT_NUMBER", "EXFILTRATED_DATA_TYPE_OUTGOING_TEXT_MESSAGE", "EXFILTRATED_DATA_TYPE_ADVERTISING_ID", "EXFILTRATED_DATA_TYPE_ANDROID_ID", "EXFILTRATED_DATA_TYPE_IMEI", "EXFILTRATED_DATA_TYPE_IMSI", "EXFILTRATED_DATA_TYPE_SIM_SERIAL_NUMBER", "EXFILTRATED_DATA_TYPE_SSID", "EXFILTRATED_DATA_TYPE_ACCOUNT", "EXFILTRATED_DATA_TYPE_EXTERNAL_ACCOUNT", "EXFILTRATED_DATA_TYPE_INSTALLED_PACKAGES"]  # noqa: E501
        if exfiltrated_data_type not in allowed_values:
            raise ValueError(
                "Invalid value for `exfiltrated_data_type` ({0}), must be one of {1}"
                .format(exfiltrated_data_type, allowed_values)
            )

        self._exfiltrated_data_type = exfiltrated_data_type
