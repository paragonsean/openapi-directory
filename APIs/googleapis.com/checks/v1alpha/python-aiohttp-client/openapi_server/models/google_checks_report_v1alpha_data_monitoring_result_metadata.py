# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleChecksReportV1alphaDataMonitoringResultMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, badges: List[str]=None, first_detected_time: str=None, last_detected_app_version: str=None, last_detected_time: str=None):
        """GoogleChecksReportV1alphaDataMonitoringResultMetadata - a model defined in OpenAPI

        :param badges: The badges of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :param first_detected_time: The first_detected_time of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :param last_detected_app_version: The last_detected_app_version of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :param last_detected_time: The last_detected_time of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        """
        self.openapi_types = {
            'badges': List[str],
            'first_detected_time': str,
            'last_detected_app_version': str,
            'last_detected_time': str
        }

        self.attribute_map = {
            'badges': 'badges',
            'first_detected_time': 'firstDetectedTime',
            'last_detected_app_version': 'lastDetectedAppVersion',
            'last_detected_time': 'lastDetectedTime'
        }

        self._badges = badges
        self._first_detected_time = first_detected_time
        self._last_detected_app_version = last_detected_app_version
        self._last_detected_time = last_detected_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleChecksReportV1alphaDataMonitoringResultMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleChecksReportV1alphaDataMonitoringResultMetadata of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def badges(self):
        """Gets the badges of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.

        Badges that apply to this result.

        :return: The badges of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :rtype: List[str]
        """
        return self._badges

    @badges.setter
    def badges(self, badges):
        """Sets the badges of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.

        Badges that apply to this result.

        :param badges: The badges of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :type badges: List[str]
        """
        allowed_values = ["DATA_MONITORING_RESULT_BADGE_UNSPECIFIED", "NEW"]  # noqa: E501
        if not set(badges).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `badges` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(badges) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._badges = badges

    @property
    def first_detected_time(self):
        """Gets the first_detected_time of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.

        The timestamp when this result was first detected within the last 8 weeks. If not set, it wasn't detected within the last 8 weeks.

        :return: The first_detected_time of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :rtype: str
        """
        return self._first_detected_time

    @first_detected_time.setter
    def first_detected_time(self, first_detected_time):
        """Sets the first_detected_time of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.

        The timestamp when this result was first detected within the last 8 weeks. If not set, it wasn't detected within the last 8 weeks.

        :param first_detected_time: The first_detected_time of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :type first_detected_time: str
        """

        self._first_detected_time = first_detected_time

    @property
    def last_detected_app_version(self):
        """Gets the last_detected_app_version of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.

        Your app's version name when this result was last detected within the last 8 weeks. If not set, it wasn't detected within the last 8 weeks.

        :return: The last_detected_app_version of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :rtype: str
        """
        return self._last_detected_app_version

    @last_detected_app_version.setter
    def last_detected_app_version(self, last_detected_app_version):
        """Sets the last_detected_app_version of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.

        Your app's version name when this result was last detected within the last 8 weeks. If not set, it wasn't detected within the last 8 weeks.

        :param last_detected_app_version: The last_detected_app_version of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :type last_detected_app_version: str
        """

        self._last_detected_app_version = last_detected_app_version

    @property
    def last_detected_time(self):
        """Gets the last_detected_time of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.

        The timestamp when this result was last detected within the last 8 weeks. If not set, it wasn't detected within the last 8 weeks.

        :return: The last_detected_time of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :rtype: str
        """
        return self._last_detected_time

    @last_detected_time.setter
    def last_detected_time(self, last_detected_time):
        """Sets the last_detected_time of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.

        The timestamp when this result was last detected within the last 8 weeks. If not set, it wasn't detected within the last 8 weeks.

        :param last_detected_time: The last_detected_time of this GoogleChecksReportV1alphaDataMonitoringResultMetadata.
        :type last_detected_time: str
        """

        self._last_detected_time = last_detected_time
