/*
 * Checks API
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleChecksReportV1alphaDataMonitoringResultMetadata;
import org.openapitools.client.model.GoogleChecksReportV1alphaDataTypeEvidence;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a data type that was found in your app.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:21.291746-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleChecksReportV1alphaDataMonitoringDataTypeResult {
  /**
   * The data type that was shared or collected by your app.
   */
  @JsonAdapter(DataTypeEnum.Adapter.class)
  public enum DataTypeEnum {
    UNSPECIFIED("DATA_TYPE_UNSPECIFIED"),
    
    APPROXIMATE_LOCATION("DATA_TYPE_APPROXIMATE_LOCATION"),
    
    PRECISE_LOCATION("DATA_TYPE_PRECISE_LOCATION"),
    
    PERSONAL_NAME("DATA_TYPE_PERSONAL_NAME"),
    
    EMAIL_ADDRESS("DATA_TYPE_EMAIL_ADDRESS"),
    
    USER_IDS("DATA_TYPE_USER_IDS"),
    
    PHYSICAL_ADDRESS("DATA_TYPE_PHYSICAL_ADDRESS"),
    
    PHONE_NUMBER("DATA_TYPE_PHONE_NUMBER"),
    
    RACE_AND_ETHNICITY("DATA_TYPE_RACE_AND_ETHNICITY"),
    
    POLITICAL_OR_RELIGIOUS_BELIEFS("DATA_TYPE_POLITICAL_OR_RELIGIOUS_BELIEFS"),
    
    SEXUAL_ORIENTATION("DATA_TYPE_SEXUAL_ORIENTATION"),
    
    OTHER_PERSONAL_INFO("DATA_TYPE_OTHER_PERSONAL_INFO"),
    
    PAYMENT_INFO("DATA_TYPE_PAYMENT_INFO"),
    
    PURCHASE_HISTORY("DATA_TYPE_PURCHASE_HISTORY"),
    
    CREDIT_SCORE("DATA_TYPE_CREDIT_SCORE"),
    
    OTHER_FINANCIAL_INFO("DATA_TYPE_OTHER_FINANCIAL_INFO"),
    
    HEALTH_INFO("DATA_TYPE_HEALTH_INFO"),
    
    FITNESS_INFO("DATA_TYPE_FITNESS_INFO"),
    
    EMAILS("DATA_TYPE_EMAILS"),
    
    TEXT_MESSAGES("DATA_TYPE_TEXT_MESSAGES"),
    
    PHOTOS("DATA_TYPE_PHOTOS"),
    
    VIDEOS("DATA_TYPE_VIDEOS"),
    
    VOICE_OR_SOUND_RECORDINGS("DATA_TYPE_VOICE_OR_SOUND_RECORDINGS"),
    
    MUSIC_FILES("DATA_TYPE_MUSIC_FILES"),
    
    OTHER_AUDIO_FILES("DATA_TYPE_OTHER_AUDIO_FILES"),
    
    FILES_AND_DOCS("DATA_TYPE_FILES_AND_DOCS"),
    
    CALENDAR_EVENTS("DATA_TYPE_CALENDAR_EVENTS"),
    
    CONTACTS("DATA_TYPE_CONTACTS"),
    
    APP_INTERACTIONS("DATA_TYPE_APP_INTERACTIONS"),
    
    IN_APP_SEARCH_HISTORY("DATA_TYPE_IN_APP_SEARCH_HISTORY"),
    
    INSTALLED_APPS("DATA_TYPE_INSTALLED_APPS"),
    
    OTHER_USER_GENERATED_CONTENT("DATA_TYPE_OTHER_USER_GENERATED_CONTENT"),
    
    OTHER_ACTIONS("DATA_TYPE_OTHER_ACTIONS"),
    
    WEB_BROWSING_HISTORY("DATA_TYPE_WEB_BROWSING_HISTORY"),
    
    CRASH_LOGS("DATA_TYPE_CRASH_LOGS"),
    
    PERFORMANCE_DIAGNOSTICS("DATA_TYPE_PERFORMANCE_DIAGNOSTICS"),
    
    OTHER_APP_PERFORMANCE_DATA("DATA_TYPE_OTHER_APP_PERFORMANCE_DATA"),
    
    DEVICE_OR_OTHER_IDS("DATA_TYPE_DEVICE_OR_OTHER_IDS");

    private String value;

    DataTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DataTypeEnum fromValue(String value) {
      for (DataTypeEnum b : DataTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DataTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DataTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DataTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DataTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DataTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DATA_TYPE = "dataType";
  @SerializedName(SERIALIZED_NAME_DATA_TYPE)
  private DataTypeEnum dataType;

  public static final String SERIALIZED_NAME_DATA_TYPE_EVIDENCE = "dataTypeEvidence";
  @SerializedName(SERIALIZED_NAME_DATA_TYPE_EVIDENCE)
  private GoogleChecksReportV1alphaDataTypeEvidence dataTypeEvidence;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private GoogleChecksReportV1alphaDataMonitoringResultMetadata metadata;

  public GoogleChecksReportV1alphaDataMonitoringDataTypeResult() {
  }

  public GoogleChecksReportV1alphaDataMonitoringDataTypeResult dataType(DataTypeEnum dataType) {
    this.dataType = dataType;
    return this;
  }

  /**
   * The data type that was shared or collected by your app.
   * @return dataType
   */
  @javax.annotation.Nullable
  public DataTypeEnum getDataType() {
    return dataType;
  }

  public void setDataType(DataTypeEnum dataType) {
    this.dataType = dataType;
  }


  public GoogleChecksReportV1alphaDataMonitoringDataTypeResult dataTypeEvidence(GoogleChecksReportV1alphaDataTypeEvidence dataTypeEvidence) {
    this.dataTypeEvidence = dataTypeEvidence;
    return this;
  }

  /**
   * Get dataTypeEvidence
   * @return dataTypeEvidence
   */
  @javax.annotation.Nullable
  public GoogleChecksReportV1alphaDataTypeEvidence getDataTypeEvidence() {
    return dataTypeEvidence;
  }

  public void setDataTypeEvidence(GoogleChecksReportV1alphaDataTypeEvidence dataTypeEvidence) {
    this.dataTypeEvidence = dataTypeEvidence;
  }


  public GoogleChecksReportV1alphaDataMonitoringDataTypeResult metadata(GoogleChecksReportV1alphaDataMonitoringResultMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public GoogleChecksReportV1alphaDataMonitoringResultMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(GoogleChecksReportV1alphaDataMonitoringResultMetadata metadata) {
    this.metadata = metadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleChecksReportV1alphaDataMonitoringDataTypeResult googleChecksReportV1alphaDataMonitoringDataTypeResult = (GoogleChecksReportV1alphaDataMonitoringDataTypeResult) o;
    return Objects.equals(this.dataType, googleChecksReportV1alphaDataMonitoringDataTypeResult.dataType) &&
        Objects.equals(this.dataTypeEvidence, googleChecksReportV1alphaDataMonitoringDataTypeResult.dataTypeEvidence) &&
        Objects.equals(this.metadata, googleChecksReportV1alphaDataMonitoringDataTypeResult.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataType, dataTypeEvidence, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleChecksReportV1alphaDataMonitoringDataTypeResult {\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    dataTypeEvidence: ").append(toIndentedString(dataTypeEvidence)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataType");
    openapiFields.add("dataTypeEvidence");
    openapiFields.add("metadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleChecksReportV1alphaDataMonitoringDataTypeResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleChecksReportV1alphaDataMonitoringDataTypeResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleChecksReportV1alphaDataMonitoringDataTypeResult is not found in the empty JSON string", GoogleChecksReportV1alphaDataMonitoringDataTypeResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleChecksReportV1alphaDataMonitoringDataTypeResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleChecksReportV1alphaDataMonitoringDataTypeResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dataType") != null && !jsonObj.get("dataType").isJsonNull()) && !jsonObj.get("dataType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataType").toString()));
      }
      // validate the optional field `dataType`
      if (jsonObj.get("dataType") != null && !jsonObj.get("dataType").isJsonNull()) {
        DataTypeEnum.validateJsonElement(jsonObj.get("dataType"));
      }
      // validate the optional field `dataTypeEvidence`
      if (jsonObj.get("dataTypeEvidence") != null && !jsonObj.get("dataTypeEvidence").isJsonNull()) {
        GoogleChecksReportV1alphaDataTypeEvidence.validateJsonElement(jsonObj.get("dataTypeEvidence"));
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        GoogleChecksReportV1alphaDataMonitoringResultMetadata.validateJsonElement(jsonObj.get("metadata"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleChecksReportV1alphaDataMonitoringDataTypeResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleChecksReportV1alphaDataMonitoringDataTypeResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleChecksReportV1alphaDataMonitoringDataTypeResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleChecksReportV1alphaDataMonitoringDataTypeResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleChecksReportV1alphaDataMonitoringDataTypeResult>() {
           @Override
           public void write(JsonWriter out, GoogleChecksReportV1alphaDataMonitoringDataTypeResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleChecksReportV1alphaDataMonitoringDataTypeResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleChecksReportV1alphaDataMonitoringDataTypeResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleChecksReportV1alphaDataMonitoringDataTypeResult
   * @throws IOException if the JSON string is invalid with respect to GoogleChecksReportV1alphaDataMonitoringDataTypeResult
   */
  public static GoogleChecksReportV1alphaDataMonitoringDataTypeResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleChecksReportV1alphaDataMonitoringDataTypeResult.class);
  }

  /**
   * Convert an instance of GoogleChecksReportV1alphaDataMonitoringDataTypeResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

