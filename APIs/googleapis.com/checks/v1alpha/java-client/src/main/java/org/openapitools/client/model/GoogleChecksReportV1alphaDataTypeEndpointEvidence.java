/*
 * Checks API
 * The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk;
import org.openapitools.client.model.GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Evidence based on an endpoint that data was sent to.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:21.291746-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleChecksReportV1alphaDataTypeEndpointEvidence {
  public static final String SERIALIZED_NAME_ATTRIBUTED_SDKS = "attributedSdks";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTED_SDKS)
  private List<GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk> attributedSdks = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENDPOINT_DETAILS = "endpointDetails";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_DETAILS)
  private List<GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails> endpointDetails = new ArrayList<>();

  /**
   * Type of data that was exfiltrated.
   */
  @JsonAdapter(ExfiltratedDataTypeEnum.Adapter.class)
  public enum ExfiltratedDataTypeEnum {
    UNSPECIFIED("EXFILTRATED_DATA_TYPE_UNSPECIFIED"),
    
    PHONE_NUMBER("EXFILTRATED_DATA_TYPE_PHONE_NUMBER"),
    
    PRECISE_LOCATION("EXFILTRATED_DATA_TYPE_PRECISE_LOCATION"),
    
    CONTACT_NAME("EXFILTRATED_DATA_TYPE_CONTACT_NAME"),
    
    CONTACT_EMAIL("EXFILTRATED_DATA_TYPE_CONTACT_EMAIL"),
    
    CONTACT_PHONE_NUMBER("EXFILTRATED_DATA_TYPE_CONTACT_PHONE_NUMBER"),
    
    INCOMING_TEXT_NUMBER("EXFILTRATED_DATA_TYPE_INCOMING_TEXT_NUMBER"),
    
    INCOMING_TEXT_MESSAGE("EXFILTRATED_DATA_TYPE_INCOMING_TEXT_MESSAGE"),
    
    OUTGOING_TEXT_NUMBER("EXFILTRATED_DATA_TYPE_OUTGOING_TEXT_NUMBER"),
    
    OUTGOING_TEXT_MESSAGE("EXFILTRATED_DATA_TYPE_OUTGOING_TEXT_MESSAGE"),
    
    ADVERTISING_ID("EXFILTRATED_DATA_TYPE_ADVERTISING_ID"),
    
    ANDROID_ID("EXFILTRATED_DATA_TYPE_ANDROID_ID"),
    
    IMEI("EXFILTRATED_DATA_TYPE_IMEI"),
    
    IMSI("EXFILTRATED_DATA_TYPE_IMSI"),
    
    SIM_SERIAL_NUMBER("EXFILTRATED_DATA_TYPE_SIM_SERIAL_NUMBER"),
    
    SSID("EXFILTRATED_DATA_TYPE_SSID"),
    
    ACCOUNT("EXFILTRATED_DATA_TYPE_ACCOUNT"),
    
    EXTERNAL_ACCOUNT("EXFILTRATED_DATA_TYPE_EXTERNAL_ACCOUNT"),
    
    INSTALLED_PACKAGES("EXFILTRATED_DATA_TYPE_INSTALLED_PACKAGES");

    private String value;

    ExfiltratedDataTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ExfiltratedDataTypeEnum fromValue(String value) {
      for (ExfiltratedDataTypeEnum b : ExfiltratedDataTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ExfiltratedDataTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ExfiltratedDataTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ExfiltratedDataTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ExfiltratedDataTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ExfiltratedDataTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_EXFILTRATED_DATA_TYPE = "exfiltratedDataType";
  @SerializedName(SERIALIZED_NAME_EXFILTRATED_DATA_TYPE)
  private ExfiltratedDataTypeEnum exfiltratedDataType;

  public GoogleChecksReportV1alphaDataTypeEndpointEvidence() {
  }

  public GoogleChecksReportV1alphaDataTypeEndpointEvidence attributedSdks(List<GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk> attributedSdks) {
    this.attributedSdks = attributedSdks;
    return this;
  }

  public GoogleChecksReportV1alphaDataTypeEndpointEvidence addAttributedSdksItem(GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk attributedSdksItem) {
    if (this.attributedSdks == null) {
      this.attributedSdks = new ArrayList<>();
    }
    this.attributedSdks.add(attributedSdksItem);
    return this;
  }

  /**
   * Set of SDKs that are attributed to the exfiltration.
   * @return attributedSdks
   */
  @javax.annotation.Nullable
  public List<GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk> getAttributedSdks() {
    return attributedSdks;
  }

  public void setAttributedSdks(List<GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk> attributedSdks) {
    this.attributedSdks = attributedSdks;
  }


  public GoogleChecksReportV1alphaDataTypeEndpointEvidence endpointDetails(List<GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails> endpointDetails) {
    this.endpointDetails = endpointDetails;
    return this;
  }

  public GoogleChecksReportV1alphaDataTypeEndpointEvidence addEndpointDetailsItem(GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails endpointDetailsItem) {
    if (this.endpointDetails == null) {
      this.endpointDetails = new ArrayList<>();
    }
    this.endpointDetails.add(endpointDetailsItem);
    return this;
  }

  /**
   * Endpoints the data type was sent to.
   * @return endpointDetails
   */
  @javax.annotation.Nullable
  public List<GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails> getEndpointDetails() {
    return endpointDetails;
  }

  public void setEndpointDetails(List<GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails> endpointDetails) {
    this.endpointDetails = endpointDetails;
  }


  public GoogleChecksReportV1alphaDataTypeEndpointEvidence exfiltratedDataType(ExfiltratedDataTypeEnum exfiltratedDataType) {
    this.exfiltratedDataType = exfiltratedDataType;
    return this;
  }

  /**
   * Type of data that was exfiltrated.
   * @return exfiltratedDataType
   */
  @javax.annotation.Nullable
  public ExfiltratedDataTypeEnum getExfiltratedDataType() {
    return exfiltratedDataType;
  }

  public void setExfiltratedDataType(ExfiltratedDataTypeEnum exfiltratedDataType) {
    this.exfiltratedDataType = exfiltratedDataType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleChecksReportV1alphaDataTypeEndpointEvidence googleChecksReportV1alphaDataTypeEndpointEvidence = (GoogleChecksReportV1alphaDataTypeEndpointEvidence) o;
    return Objects.equals(this.attributedSdks, googleChecksReportV1alphaDataTypeEndpointEvidence.attributedSdks) &&
        Objects.equals(this.endpointDetails, googleChecksReportV1alphaDataTypeEndpointEvidence.endpointDetails) &&
        Objects.equals(this.exfiltratedDataType, googleChecksReportV1alphaDataTypeEndpointEvidence.exfiltratedDataType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributedSdks, endpointDetails, exfiltratedDataType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleChecksReportV1alphaDataTypeEndpointEvidence {\n");
    sb.append("    attributedSdks: ").append(toIndentedString(attributedSdks)).append("\n");
    sb.append("    endpointDetails: ").append(toIndentedString(endpointDetails)).append("\n");
    sb.append("    exfiltratedDataType: ").append(toIndentedString(exfiltratedDataType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributedSdks");
    openapiFields.add("endpointDetails");
    openapiFields.add("exfiltratedDataType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleChecksReportV1alphaDataTypeEndpointEvidence
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleChecksReportV1alphaDataTypeEndpointEvidence.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleChecksReportV1alphaDataTypeEndpointEvidence is not found in the empty JSON string", GoogleChecksReportV1alphaDataTypeEndpointEvidence.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleChecksReportV1alphaDataTypeEndpointEvidence.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleChecksReportV1alphaDataTypeEndpointEvidence` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("attributedSdks") != null && !jsonObj.get("attributedSdks").isJsonNull()) {
        JsonArray jsonArrayattributedSdks = jsonObj.getAsJsonArray("attributedSdks");
        if (jsonArrayattributedSdks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributedSdks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributedSdks` to be an array in the JSON string but got `%s`", jsonObj.get("attributedSdks").toString()));
          }

          // validate the optional field `attributedSdks` (array)
          for (int i = 0; i < jsonArrayattributedSdks.size(); i++) {
            GoogleChecksReportV1alphaDataTypeEndpointEvidenceAttributedSdk.validateJsonElement(jsonArrayattributedSdks.get(i));
          };
        }
      }
      if (jsonObj.get("endpointDetails") != null && !jsonObj.get("endpointDetails").isJsonNull()) {
        JsonArray jsonArrayendpointDetails = jsonObj.getAsJsonArray("endpointDetails");
        if (jsonArrayendpointDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("endpointDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `endpointDetails` to be an array in the JSON string but got `%s`", jsonObj.get("endpointDetails").toString()));
          }

          // validate the optional field `endpointDetails` (array)
          for (int i = 0; i < jsonArrayendpointDetails.size(); i++) {
            GoogleChecksReportV1alphaDataTypeEndpointEvidenceEndpointDetails.validateJsonElement(jsonArrayendpointDetails.get(i));
          };
        }
      }
      if ((jsonObj.get("exfiltratedDataType") != null && !jsonObj.get("exfiltratedDataType").isJsonNull()) && !jsonObj.get("exfiltratedDataType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exfiltratedDataType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exfiltratedDataType").toString()));
      }
      // validate the optional field `exfiltratedDataType`
      if (jsonObj.get("exfiltratedDataType") != null && !jsonObj.get("exfiltratedDataType").isJsonNull()) {
        ExfiltratedDataTypeEnum.validateJsonElement(jsonObj.get("exfiltratedDataType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleChecksReportV1alphaDataTypeEndpointEvidence.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleChecksReportV1alphaDataTypeEndpointEvidence' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleChecksReportV1alphaDataTypeEndpointEvidence> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleChecksReportV1alphaDataTypeEndpointEvidence.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleChecksReportV1alphaDataTypeEndpointEvidence>() {
           @Override
           public void write(JsonWriter out, GoogleChecksReportV1alphaDataTypeEndpointEvidence value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleChecksReportV1alphaDataTypeEndpointEvidence read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleChecksReportV1alphaDataTypeEndpointEvidence given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleChecksReportV1alphaDataTypeEndpointEvidence
   * @throws IOException if the JSON string is invalid with respect to GoogleChecksReportV1alphaDataTypeEndpointEvidence
   */
  public static GoogleChecksReportV1alphaDataTypeEndpointEvidence fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleChecksReportV1alphaDataTypeEndpointEvidence.class);
  }

  /**
   * Convert an instance of GoogleChecksReportV1alphaDataTypeEndpointEvidence to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

