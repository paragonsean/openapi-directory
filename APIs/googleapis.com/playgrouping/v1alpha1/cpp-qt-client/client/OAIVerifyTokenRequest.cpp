/**
 * Google Play Grouping API
 * playgrouping.googleapis.com API.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerifyTokenRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerifyTokenRequest::OAIVerifyTokenRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerifyTokenRequest::OAIVerifyTokenRequest() {
    this->initializeModel();
}

OAIVerifyTokenRequest::~OAIVerifyTokenRequest() {}

void OAIVerifyTokenRequest::initializeModel() {

    m_persona_isSet = false;
    m_persona_isValid = false;
}

void OAIVerifyTokenRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerifyTokenRequest::fromJsonObject(QJsonObject json) {

    m_persona_isValid = ::OpenAPI::fromJsonValue(m_persona, json[QString("persona")]);
    m_persona_isSet = !json[QString("persona")].isNull() && m_persona_isValid;
}

QString OAIVerifyTokenRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerifyTokenRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_persona_isSet) {
        obj.insert(QString("persona"), ::OpenAPI::toJsonValue(m_persona));
    }
    return obj;
}

QString OAIVerifyTokenRequest::getPersona() const {
    return m_persona;
}
void OAIVerifyTokenRequest::setPersona(const QString &persona) {
    m_persona = persona;
    m_persona_isSet = true;
}

bool OAIVerifyTokenRequest::is_persona_Set() const{
    return m_persona_isSet;
}

bool OAIVerifyTokenRequest::is_persona_Valid() const{
    return m_persona_isValid;
}

bool OAIVerifyTokenRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_persona_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerifyTokenRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
