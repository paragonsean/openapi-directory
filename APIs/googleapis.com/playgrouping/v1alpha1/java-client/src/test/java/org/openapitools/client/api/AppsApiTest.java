/*
 * Google Play Grouping API
 * playgrouping.googleapis.com API.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrUpdateTagsRequest;
import org.openapitools.client.model.CreateOrUpdateTagsResponse;
import org.openapitools.client.model.VerifyTokenRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppsApi
 */
@Disabled
public class AppsApiTest {

    private final AppsApi api = new AppsApi();

    /**
     * Create or update tags for the user and app that are represented by the given token.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playgroupingAppsTokensTagsCreateOrUpdateTest() throws ApiException {
        String appPackage = null;
        String token = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        CreateOrUpdateTagsRequest createOrUpdateTagsRequest = null;
        CreateOrUpdateTagsResponse response = api.playgroupingAppsTokensTagsCreateOrUpdate(appPackage, token, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, createOrUpdateTagsRequest);
        // TODO: test validations
    }

    /**
     * Verify an API token by asserting the app and persona it belongs to. The verification is a protection against client-side attacks and will fail if the contents of the token don&#39;t match the provided values. A token must be verified before it can be used to manipulate user tags.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playgroupingAppsTokensVerifyTest() throws ApiException {
        String appPackage = null;
        String token = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        VerifyTokenRequest verifyTokenRequest = null;
        Object response = api.playgroupingAppsTokensVerify(appPackage, token, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, verifyTokenRequest);
        // TODO: test validations
    }

}
