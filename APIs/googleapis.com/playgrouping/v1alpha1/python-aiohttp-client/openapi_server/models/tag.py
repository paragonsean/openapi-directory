# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Tag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, boolean_value: bool=None, int64_value: str=None, key: str=None, string_value: str=None, time_value: str=None):
        """Tag - a model defined in OpenAPI

        :param boolean_value: The boolean_value of this Tag.
        :param int64_value: The int64_value of this Tag.
        :param key: The key of this Tag.
        :param string_value: The string_value of this Tag.
        :param time_value: The time_value of this Tag.
        """
        self.openapi_types = {
            'boolean_value': bool,
            'int64_value': str,
            'key': str,
            'string_value': str,
            'time_value': str
        }

        self.attribute_map = {
            'boolean_value': 'booleanValue',
            'int64_value': 'int64Value',
            'key': 'key',
            'string_value': 'stringValue',
            'time_value': 'timeValue'
        }

        self._boolean_value = boolean_value
        self._int64_value = int64_value
        self._key = key
        self._string_value = string_value
        self._time_value = time_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Tag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tag of this Tag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def boolean_value(self):
        """Gets the boolean_value of this Tag.

        A boolean value of the tag.

        :return: The boolean_value of this Tag.
        :rtype: bool
        """
        return self._boolean_value

    @boolean_value.setter
    def boolean_value(self, boolean_value):
        """Sets the boolean_value of this Tag.

        A boolean value of the tag.

        :param boolean_value: The boolean_value of this Tag.
        :type boolean_value: bool
        """

        self._boolean_value = boolean_value

    @property
    def int64_value(self):
        """Gets the int64_value of this Tag.

        A signed 64-bit integer value of the tag.

        :return: The int64_value of this Tag.
        :rtype: str
        """
        return self._int64_value

    @int64_value.setter
    def int64_value(self, int64_value):
        """Sets the int64_value of this Tag.

        A signed 64-bit integer value of the tag.

        :param int64_value: The int64_value of this Tag.
        :type int64_value: str
        """

        self._int64_value = int64_value

    @property
    def key(self):
        """Gets the key of this Tag.

        Required. Key for the tag.

        :return: The key of this Tag.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Tag.

        Required. Key for the tag.

        :param key: The key of this Tag.
        :type key: str
        """

        self._key = key

    @property
    def string_value(self):
        """Gets the string_value of this Tag.

        A string value of the tag.

        :return: The string_value of this Tag.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this Tag.

        A string value of the tag.

        :param string_value: The string_value of this Tag.
        :type string_value: str
        """

        self._string_value = string_value

    @property
    def time_value(self):
        """Gets the time_value of this Tag.

        A time value of the tag.

        :return: The time_value of this Tag.
        :rtype: str
        """
        return self._time_value

    @time_value.setter
    def time_value(self, time_value):
        """Sets the time_value of this Tag.

        A time value of the tag.

        :param time_value: The time_value of this Tag.
        :type time_value: str
        """

        self._time_value = time_value
