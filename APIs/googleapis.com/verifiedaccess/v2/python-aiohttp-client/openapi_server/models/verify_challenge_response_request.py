# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VerifyChallengeResponseRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, challenge_response: str=None, expected_identity: str=None):
        """VerifyChallengeResponseRequest - a model defined in OpenAPI

        :param challenge_response: The challenge_response of this VerifyChallengeResponseRequest.
        :param expected_identity: The expected_identity of this VerifyChallengeResponseRequest.
        """
        self.openapi_types = {
            'challenge_response': str,
            'expected_identity': str
        }

        self.attribute_map = {
            'challenge_response': 'challengeResponse',
            'expected_identity': 'expectedIdentity'
        }

        self._challenge_response = challenge_response
        self._expected_identity = expected_identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyChallengeResponseRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VerifyChallengeResponseRequest of this VerifyChallengeResponseRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def challenge_response(self):
        """Gets the challenge_response of this VerifyChallengeResponseRequest.

        Required. The generated response to the challenge, the bytes representation of SignedData.

        :return: The challenge_response of this VerifyChallengeResponseRequest.
        :rtype: str
        """
        return self._challenge_response

    @challenge_response.setter
    def challenge_response(self, challenge_response):
        """Sets the challenge_response of this VerifyChallengeResponseRequest.

        Required. The generated response to the challenge, the bytes representation of SignedData.

        :param challenge_response: The challenge_response of this VerifyChallengeResponseRequest.
        :type challenge_response: str
        """

        self._challenge_response = challenge_response

    @property
    def expected_identity(self):
        """Gets the expected_identity of this VerifyChallengeResponseRequest.

        Optional. Service can optionally provide identity information about the device or user associated with the key. For an EMK, this value is the enrolled domain. For an EUK, this value is the user's email address. If present, this value will be checked against contents of the response, and verification will fail if there is no match.

        :return: The expected_identity of this VerifyChallengeResponseRequest.
        :rtype: str
        """
        return self._expected_identity

    @expected_identity.setter
    def expected_identity(self, expected_identity):
        """Sets the expected_identity of this VerifyChallengeResponseRequest.

        Optional. Service can optionally provide identity information about the device or user associated with the key. For an EMK, this value is the enrolled domain. For an EUK, this value is the user's email address. If present, this value will be checked against contents of the response, and verification will fail if there is no match.

        :param expected_identity: The expected_identity of this VerifyChallengeResponseRequest.
        :type expected_identity: str
        """

        self._expected_identity = expected_identity
