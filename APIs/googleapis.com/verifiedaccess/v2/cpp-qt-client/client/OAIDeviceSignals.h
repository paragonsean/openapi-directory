/**
 * Chrome Verified Access API
 * API for Verified Access chrome extension to provide credential verification for chrome devices connecting to an enterprise network
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceSignals.h
 *
 * The device signals as reported by Chrome. Unless otherwise specified, signals are available on all platforms.
 */

#ifndef OAIDeviceSignals_H
#define OAIDeviceSignals_H

#include <QJsonObject>

#include "OAICrowdStrikeAgent.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICrowdStrikeAgent;

class OAIDeviceSignals : public OAIObject {
public:
    OAIDeviceSignals();
    OAIDeviceSignals(QString json);
    ~OAIDeviceSignals() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowScreenLock() const;
    void setAllowScreenLock(const bool &allow_screen_lock);
    bool is_allow_screen_lock_Set() const;
    bool is_allow_screen_lock_Valid() const;

    QString getBrowserVersion() const;
    void setBrowserVersion(const QString &browser_version);
    bool is_browser_version_Set() const;
    bool is_browser_version_Valid() const;

    bool isBuiltInDnsClientEnabled() const;
    void setBuiltInDnsClientEnabled(const bool &built_in_dns_client_enabled);
    bool is_built_in_dns_client_enabled_Set() const;
    bool is_built_in_dns_client_enabled_Valid() const;

    bool isChromeRemoteDesktopAppBlocked() const;
    void setChromeRemoteDesktopAppBlocked(const bool &chrome_remote_desktop_app_blocked);
    bool is_chrome_remote_desktop_app_blocked_Set() const;
    bool is_chrome_remote_desktop_app_blocked_Valid() const;

    OAICrowdStrikeAgent getCrowdStrikeAgent() const;
    void setCrowdStrikeAgent(const OAICrowdStrikeAgent &crowd_strike_agent);
    bool is_crowd_strike_agent_Set() const;
    bool is_crowd_strike_agent_Valid() const;

    QList<QString> getDeviceAffiliationIds() const;
    void setDeviceAffiliationIds(const QList<QString> &device_affiliation_ids);
    bool is_device_affiliation_ids_Set() const;
    bool is_device_affiliation_ids_Valid() const;

    QString getDeviceEnrollmentDomain() const;
    void setDeviceEnrollmentDomain(const QString &device_enrollment_domain);
    bool is_device_enrollment_domain_Set() const;
    bool is_device_enrollment_domain_Valid() const;

    QString getDeviceManufacturer() const;
    void setDeviceManufacturer(const QString &device_manufacturer);
    bool is_device_manufacturer_Set() const;
    bool is_device_manufacturer_Valid() const;

    QString getDeviceModel() const;
    void setDeviceModel(const QString &device_model);
    bool is_device_model_Set() const;
    bool is_device_model_Valid() const;

    QString getDiskEncryption() const;
    void setDiskEncryption(const QString &disk_encryption);
    bool is_disk_encryption_Set() const;
    bool is_disk_encryption_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getHostname() const;
    void setHostname(const QString &hostname);
    bool is_hostname_Set() const;
    bool is_hostname_Valid() const;

    QList<QString> getImei() const;
    void setImei(const QList<QString> &imei);
    bool is_imei_Set() const;
    bool is_imei_Valid() const;

    QList<QString> getMacAddresses() const;
    void setMacAddresses(const QList<QString> &mac_addresses);
    bool is_mac_addresses_Set() const;
    bool is_mac_addresses_Valid() const;

    QList<QString> getMeid() const;
    void setMeid(const QList<QString> &meid);
    bool is_meid_Set() const;
    bool is_meid_Valid() const;

    QString getOperatingSystem() const;
    void setOperatingSystem(const QString &operating_system);
    bool is_operating_system_Set() const;
    bool is_operating_system_Valid() const;

    QString getOsFirewall() const;
    void setOsFirewall(const QString &os_firewall);
    bool is_os_firewall_Set() const;
    bool is_os_firewall_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    QString getPasswordProtectionWarningTrigger() const;
    void setPasswordProtectionWarningTrigger(const QString &password_protection_warning_trigger);
    bool is_password_protection_warning_trigger_Set() const;
    bool is_password_protection_warning_trigger_Valid() const;

    QList<QString> getProfileAffiliationIds() const;
    void setProfileAffiliationIds(const QList<QString> &profile_affiliation_ids);
    bool is_profile_affiliation_ids_Set() const;
    bool is_profile_affiliation_ids_Valid() const;

    QString getRealtimeUrlCheckMode() const;
    void setRealtimeUrlCheckMode(const QString &realtime_url_check_mode);
    bool is_realtime_url_check_mode_Set() const;
    bool is_realtime_url_check_mode_Valid() const;

    QString getSafeBrowsingProtectionLevel() const;
    void setSafeBrowsingProtectionLevel(const QString &safe_browsing_protection_level);
    bool is_safe_browsing_protection_level_Set() const;
    bool is_safe_browsing_protection_level_Valid() const;

    QString getScreenLockSecured() const;
    void setScreenLockSecured(const QString &screen_lock_secured);
    bool is_screen_lock_secured_Set() const;
    bool is_screen_lock_secured_Valid() const;

    QString getSecureBootMode() const;
    void setSecureBootMode(const QString &secure_boot_mode);
    bool is_secure_boot_mode_Set() const;
    bool is_secure_boot_mode_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    bool isSiteIsolationEnabled() const;
    void setSiteIsolationEnabled(const bool &site_isolation_enabled);
    bool is_site_isolation_enabled_Set() const;
    bool is_site_isolation_enabled_Valid() const;

    QList<QString> getSystemDnsServers() const;
    void setSystemDnsServers(const QList<QString> &system_dns_servers);
    bool is_system_dns_servers_Set() const;
    bool is_system_dns_servers_Valid() const;

    bool isThirdPartyBlockingEnabled() const;
    void setThirdPartyBlockingEnabled(const bool &third_party_blocking_enabled);
    bool is_third_party_blocking_enabled_Set() const;
    bool is_third_party_blocking_enabled_Valid() const;

    QString getTrigger() const;
    void setTrigger(const QString &trigger);
    bool is_trigger_Set() const;
    bool is_trigger_Valid() const;

    QString getWindowsMachineDomain() const;
    void setWindowsMachineDomain(const QString &windows_machine_domain);
    bool is_windows_machine_domain_Set() const;
    bool is_windows_machine_domain_Valid() const;

    QString getWindowsUserDomain() const;
    void setWindowsUserDomain(const QString &windows_user_domain);
    bool is_windows_user_domain_Set() const;
    bool is_windows_user_domain_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_screen_lock;
    bool m_allow_screen_lock_isSet;
    bool m_allow_screen_lock_isValid;

    QString m_browser_version;
    bool m_browser_version_isSet;
    bool m_browser_version_isValid;

    bool m_built_in_dns_client_enabled;
    bool m_built_in_dns_client_enabled_isSet;
    bool m_built_in_dns_client_enabled_isValid;

    bool m_chrome_remote_desktop_app_blocked;
    bool m_chrome_remote_desktop_app_blocked_isSet;
    bool m_chrome_remote_desktop_app_blocked_isValid;

    OAICrowdStrikeAgent m_crowd_strike_agent;
    bool m_crowd_strike_agent_isSet;
    bool m_crowd_strike_agent_isValid;

    QList<QString> m_device_affiliation_ids;
    bool m_device_affiliation_ids_isSet;
    bool m_device_affiliation_ids_isValid;

    QString m_device_enrollment_domain;
    bool m_device_enrollment_domain_isSet;
    bool m_device_enrollment_domain_isValid;

    QString m_device_manufacturer;
    bool m_device_manufacturer_isSet;
    bool m_device_manufacturer_isValid;

    QString m_device_model;
    bool m_device_model_isSet;
    bool m_device_model_isValid;

    QString m_disk_encryption;
    bool m_disk_encryption_isSet;
    bool m_disk_encryption_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_hostname;
    bool m_hostname_isSet;
    bool m_hostname_isValid;

    QList<QString> m_imei;
    bool m_imei_isSet;
    bool m_imei_isValid;

    QList<QString> m_mac_addresses;
    bool m_mac_addresses_isSet;
    bool m_mac_addresses_isValid;

    QList<QString> m_meid;
    bool m_meid_isSet;
    bool m_meid_isValid;

    QString m_operating_system;
    bool m_operating_system_isSet;
    bool m_operating_system_isValid;

    QString m_os_firewall;
    bool m_os_firewall_isSet;
    bool m_os_firewall_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    QString m_password_protection_warning_trigger;
    bool m_password_protection_warning_trigger_isSet;
    bool m_password_protection_warning_trigger_isValid;

    QList<QString> m_profile_affiliation_ids;
    bool m_profile_affiliation_ids_isSet;
    bool m_profile_affiliation_ids_isValid;

    QString m_realtime_url_check_mode;
    bool m_realtime_url_check_mode_isSet;
    bool m_realtime_url_check_mode_isValid;

    QString m_safe_browsing_protection_level;
    bool m_safe_browsing_protection_level_isSet;
    bool m_safe_browsing_protection_level_isValid;

    QString m_screen_lock_secured;
    bool m_screen_lock_secured_isSet;
    bool m_screen_lock_secured_isValid;

    QString m_secure_boot_mode;
    bool m_secure_boot_mode_isSet;
    bool m_secure_boot_mode_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    bool m_site_isolation_enabled;
    bool m_site_isolation_enabled_isSet;
    bool m_site_isolation_enabled_isValid;

    QList<QString> m_system_dns_servers;
    bool m_system_dns_servers_isSet;
    bool m_system_dns_servers_isValid;

    bool m_third_party_blocking_enabled;
    bool m_third_party_blocking_enabled_isSet;
    bool m_third_party_blocking_enabled_isValid;

    QString m_trigger;
    bool m_trigger_isSet;
    bool m_trigger_isValid;

    QString m_windows_machine_domain;
    bool m_windows_machine_domain_isSet;
    bool m_windows_machine_domain_isValid;

    QString m_windows_user_domain;
    bool m_windows_user_domain_isSet;
    bool m_windows_user_domain_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceSignals)

#endif // OAIDeviceSignals_H
