/*
 * Chrome Verified Access API
 * API for Verified Access chrome extension to provide credential verification for chrome devices connecting to an enterprise network
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Challenge;
import org.openapitools.client.model.VerifyChallengeResponseRequest;
import org.openapitools.client.model.VerifyChallengeResponseResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChallengeApi
 */
@Disabled
public class ChallengeApiTest {

    private final ChallengeApi api = new ChallengeApi();

    /**
     * Generates a new challenge.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifiedaccessChallengeGenerateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Challenge response = api.verifiedaccessChallengeGenerate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Verifies the challenge response.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifiedaccessChallengeVerifyTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        VerifyChallengeResponseRequest verifyChallengeResponseRequest = null;
        VerifyChallengeResponseResult response = api.verifiedaccessChallengeVerify($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, verifyChallengeResponseRequest);
        // TODO: test validations
    }

}
