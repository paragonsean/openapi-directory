/*
 * Chrome Verified Access API
 * API for Verified Access chrome extension to provide credential verification for chrome devices connecting to an enterprise network
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CrowdStrikeAgent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DeviceSignals
 */
public class DeviceSignalsTest {
    private final DeviceSignals model = new DeviceSignals();

    /**
     * Model tests for DeviceSignals
     */
    @Test
    public void testDeviceSignals() {
        // TODO: test DeviceSignals
    }

    /**
     * Test the property 'allowScreenLock'
     */
    @Test
    public void allowScreenLockTest() {
        // TODO: test allowScreenLock
    }

    /**
     * Test the property 'browserVersion'
     */
    @Test
    public void browserVersionTest() {
        // TODO: test browserVersion
    }

    /**
     * Test the property 'builtInDnsClientEnabled'
     */
    @Test
    public void builtInDnsClientEnabledTest() {
        // TODO: test builtInDnsClientEnabled
    }

    /**
     * Test the property 'chromeRemoteDesktopAppBlocked'
     */
    @Test
    public void chromeRemoteDesktopAppBlockedTest() {
        // TODO: test chromeRemoteDesktopAppBlocked
    }

    /**
     * Test the property 'crowdStrikeAgent'
     */
    @Test
    public void crowdStrikeAgentTest() {
        // TODO: test crowdStrikeAgent
    }

    /**
     * Test the property 'deviceAffiliationIds'
     */
    @Test
    public void deviceAffiliationIdsTest() {
        // TODO: test deviceAffiliationIds
    }

    /**
     * Test the property 'deviceEnrollmentDomain'
     */
    @Test
    public void deviceEnrollmentDomainTest() {
        // TODO: test deviceEnrollmentDomain
    }

    /**
     * Test the property 'deviceManufacturer'
     */
    @Test
    public void deviceManufacturerTest() {
        // TODO: test deviceManufacturer
    }

    /**
     * Test the property 'deviceModel'
     */
    @Test
    public void deviceModelTest() {
        // TODO: test deviceModel
    }

    /**
     * Test the property 'diskEncryption'
     */
    @Test
    public void diskEncryptionTest() {
        // TODO: test diskEncryption
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'hostname'
     */
    @Test
    public void hostnameTest() {
        // TODO: test hostname
    }

    /**
     * Test the property 'imei'
     */
    @Test
    public void imeiTest() {
        // TODO: test imei
    }

    /**
     * Test the property 'macAddresses'
     */
    @Test
    public void macAddressesTest() {
        // TODO: test macAddresses
    }

    /**
     * Test the property 'meid'
     */
    @Test
    public void meidTest() {
        // TODO: test meid
    }

    /**
     * Test the property 'operatingSystem'
     */
    @Test
    public void operatingSystemTest() {
        // TODO: test operatingSystem
    }

    /**
     * Test the property 'osFirewall'
     */
    @Test
    public void osFirewallTest() {
        // TODO: test osFirewall
    }

    /**
     * Test the property 'osVersion'
     */
    @Test
    public void osVersionTest() {
        // TODO: test osVersion
    }

    /**
     * Test the property 'passwordProtectionWarningTrigger'
     */
    @Test
    public void passwordProtectionWarningTriggerTest() {
        // TODO: test passwordProtectionWarningTrigger
    }

    /**
     * Test the property 'profileAffiliationIds'
     */
    @Test
    public void profileAffiliationIdsTest() {
        // TODO: test profileAffiliationIds
    }

    /**
     * Test the property 'realtimeUrlCheckMode'
     */
    @Test
    public void realtimeUrlCheckModeTest() {
        // TODO: test realtimeUrlCheckMode
    }

    /**
     * Test the property 'safeBrowsingProtectionLevel'
     */
    @Test
    public void safeBrowsingProtectionLevelTest() {
        // TODO: test safeBrowsingProtectionLevel
    }

    /**
     * Test the property 'screenLockSecured'
     */
    @Test
    public void screenLockSecuredTest() {
        // TODO: test screenLockSecured
    }

    /**
     * Test the property 'secureBootMode'
     */
    @Test
    public void secureBootModeTest() {
        // TODO: test secureBootMode
    }

    /**
     * Test the property 'serialNumber'
     */
    @Test
    public void serialNumberTest() {
        // TODO: test serialNumber
    }

    /**
     * Test the property 'siteIsolationEnabled'
     */
    @Test
    public void siteIsolationEnabledTest() {
        // TODO: test siteIsolationEnabled
    }

    /**
     * Test the property 'systemDnsServers'
     */
    @Test
    public void systemDnsServersTest() {
        // TODO: test systemDnsServers
    }

    /**
     * Test the property 'thirdPartyBlockingEnabled'
     */
    @Test
    public void thirdPartyBlockingEnabledTest() {
        // TODO: test thirdPartyBlockingEnabled
    }

    /**
     * Test the property 'trigger'
     */
    @Test
    public void triggerTest() {
        // TODO: test trigger
    }

    /**
     * Test the property 'windowsMachineDomain'
     */
    @Test
    public void windowsMachineDomainTest() {
        // TODO: test windowsMachineDomain
    }

    /**
     * Test the property 'windowsUserDomain'
     */
    @Test
    public void windowsUserDomainTest() {
        // TODO: test windowsUserDomain
    }

}
