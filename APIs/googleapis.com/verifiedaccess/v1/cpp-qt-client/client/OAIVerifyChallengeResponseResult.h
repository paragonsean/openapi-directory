/**
 * Chrome Verified Access API
 * API for Verified Access chrome extension to provide credential verification for chrome devices connecting to an enterprise network
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerifyChallengeResponseResult.h
 *
 * Result message for VerifiedAccess.VerifyChallengeResponse.
 */

#ifndef OAIVerifyChallengeResponseResult_H
#define OAIVerifyChallengeResponseResult_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVerifyChallengeResponseResult : public OAIObject {
public:
    OAIVerifyChallengeResponseResult();
    OAIVerifyChallengeResponseResult(QString json);
    ~OAIVerifyChallengeResponseResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttestedDeviceId() const;
    void setAttestedDeviceId(const QString &attested_device_id);
    bool is_attested_device_id_Set() const;
    bool is_attested_device_id_Valid() const;

    QString getDeviceEnrollmentId() const;
    void setDeviceEnrollmentId(const QString &device_enrollment_id);
    bool is_device_enrollment_id_Set() const;
    bool is_device_enrollment_id_Valid() const;

    QString getDevicePermanentId() const;
    void setDevicePermanentId(const QString &device_permanent_id);
    bool is_device_permanent_id_Set() const;
    bool is_device_permanent_id_Valid() const;

    QString getSignedPublicKeyAndChallenge() const;
    void setSignedPublicKeyAndChallenge(const QString &signed_public_key_and_challenge);
    bool is_signed_public_key_and_challenge_Set() const;
    bool is_signed_public_key_and_challenge_Valid() const;

    Q_DECL_DEPRECATED QString getVerificationOutput() const;
    Q_DECL_DEPRECATED void setVerificationOutput(const QString &verification_output);
    Q_DECL_DEPRECATED bool is_verification_output_Set() const;
    Q_DECL_DEPRECATED bool is_verification_output_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attested_device_id;
    bool m_attested_device_id_isSet;
    bool m_attested_device_id_isValid;

    QString m_device_enrollment_id;
    bool m_device_enrollment_id_isSet;
    bool m_device_enrollment_id_isValid;

    QString m_device_permanent_id;
    bool m_device_permanent_id_isSet;
    bool m_device_permanent_id_isValid;

    QString m_signed_public_key_and_challenge;
    bool m_signed_public_key_and_challenge_isSet;
    bool m_signed_public_key_and_challenge_isValid;

    QString m_verification_output;
    bool m_verification_output_isSet;
    bool m_verification_output_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerifyChallengeResponseResult)

#endif // OAIVerifyChallengeResponseResult_H
