/**
 * Chrome Verified Access API
 * API for Verified Access chrome extension to provide credential verification for chrome devices connecting to an enterprise network
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChallenge.h
 *
 * Result message for VerifiedAccess.CreateChallenge.
 */

#ifndef OAIChallenge_H
#define OAIChallenge_H

#include <QJsonObject>

#include "OAISignedData.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISignedData;

class OAIChallenge : public OAIObject {
public:
    OAIChallenge();
    OAIChallenge(QString json);
    ~OAIChallenge() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISignedData getAlternativeChallenge() const;
    void setAlternativeChallenge(const OAISignedData &alternative_challenge);
    bool is_alternative_challenge_Set() const;
    bool is_alternative_challenge_Valid() const;

    OAISignedData getChallenge() const;
    void setChallenge(const OAISignedData &challenge);
    bool is_challenge_Set() const;
    bool is_challenge_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISignedData m_alternative_challenge;
    bool m_alternative_challenge_isSet;
    bool m_alternative_challenge_isValid;

    OAISignedData m_challenge;
    bool m_challenge_isSet;
    bool m_challenge_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChallenge)

#endif // OAIChallenge_H
