/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGatewaySecurityPolicyRule.h
 *
 * The GatewaySecurityPolicyRule resource is in a nested collection within a GatewaySecurityPolicy and represents a traffic matching condition and associated action to perform.
 */

#ifndef OAIGatewaySecurityPolicyRule_H
#define OAIGatewaySecurityPolicyRule_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGatewaySecurityPolicyRule : public OAIObject {
public:
    OAIGatewaySecurityPolicyRule();
    OAIGatewaySecurityPolicyRule(QString json);
    ~OAIGatewaySecurityPolicyRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationMatcher() const;
    void setApplicationMatcher(const QString &application_matcher);
    bool is_application_matcher_Set() const;
    bool is_application_matcher_Valid() const;

    QString getBasicProfile() const;
    void setBasicProfile(const QString &basic_profile);
    bool is_basic_profile_Set() const;
    bool is_basic_profile_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getSessionMatcher() const;
    void setSessionMatcher(const QString &session_matcher);
    bool is_session_matcher_Set() const;
    bool is_session_matcher_Valid() const;

    bool isTlsInspectionEnabled() const;
    void setTlsInspectionEnabled(const bool &tls_inspection_enabled);
    bool is_tls_inspection_enabled_Set() const;
    bool is_tls_inspection_enabled_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_matcher;
    bool m_application_matcher_isSet;
    bool m_application_matcher_isValid;

    QString m_basic_profile;
    bool m_basic_profile_isSet;
    bool m_basic_profile_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_session_matcher;
    bool m_session_matcher_isSet;
    bool m_session_matcher_isValid;

    bool m_tls_inspection_enabled;
    bool m_tls_inspection_enabled_isSet;
    bool m_tls_inspection_enabled_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGatewaySecurityPolicyRule)

#endif // OAIGatewaySecurityPolicyRule_H
