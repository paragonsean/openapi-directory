/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITlsInspectionPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITlsInspectionPolicy::OAITlsInspectionPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITlsInspectionPolicy::OAITlsInspectionPolicy() {
    this->initializeModel();
}

OAITlsInspectionPolicy::~OAITlsInspectionPolicy() {}

void OAITlsInspectionPolicy::initializeModel() {

    m_ca_pool_isSet = false;
    m_ca_pool_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_custom_tls_features_isSet = false;
    m_custom_tls_features_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_exclude_public_ca_set_isSet = false;
    m_exclude_public_ca_set_isValid = false;

    m_min_tls_version_isSet = false;
    m_min_tls_version_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_tls_feature_profile_isSet = false;
    m_tls_feature_profile_isValid = false;

    m_trust_config_isSet = false;
    m_trust_config_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAITlsInspectionPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITlsInspectionPolicy::fromJsonObject(QJsonObject json) {

    m_ca_pool_isValid = ::OpenAPI::fromJsonValue(m_ca_pool, json[QString("caPool")]);
    m_ca_pool_isSet = !json[QString("caPool")].isNull() && m_ca_pool_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_custom_tls_features_isValid = ::OpenAPI::fromJsonValue(m_custom_tls_features, json[QString("customTlsFeatures")]);
    m_custom_tls_features_isSet = !json[QString("customTlsFeatures")].isNull() && m_custom_tls_features_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_exclude_public_ca_set_isValid = ::OpenAPI::fromJsonValue(m_exclude_public_ca_set, json[QString("excludePublicCaSet")]);
    m_exclude_public_ca_set_isSet = !json[QString("excludePublicCaSet")].isNull() && m_exclude_public_ca_set_isValid;

    m_min_tls_version_isValid = ::OpenAPI::fromJsonValue(m_min_tls_version, json[QString("minTlsVersion")]);
    m_min_tls_version_isSet = !json[QString("minTlsVersion")].isNull() && m_min_tls_version_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_tls_feature_profile_isValid = ::OpenAPI::fromJsonValue(m_tls_feature_profile, json[QString("tlsFeatureProfile")]);
    m_tls_feature_profile_isSet = !json[QString("tlsFeatureProfile")].isNull() && m_tls_feature_profile_isValid;

    m_trust_config_isValid = ::OpenAPI::fromJsonValue(m_trust_config, json[QString("trustConfig")]);
    m_trust_config_isSet = !json[QString("trustConfig")].isNull() && m_trust_config_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAITlsInspectionPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITlsInspectionPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_ca_pool_isSet) {
        obj.insert(QString("caPool"), ::OpenAPI::toJsonValue(m_ca_pool));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_custom_tls_features.size() > 0) {
        obj.insert(QString("customTlsFeatures"), ::OpenAPI::toJsonValue(m_custom_tls_features));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_exclude_public_ca_set_isSet) {
        obj.insert(QString("excludePublicCaSet"), ::OpenAPI::toJsonValue(m_exclude_public_ca_set));
    }
    if (m_min_tls_version_isSet) {
        obj.insert(QString("minTlsVersion"), ::OpenAPI::toJsonValue(m_min_tls_version));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_tls_feature_profile_isSet) {
        obj.insert(QString("tlsFeatureProfile"), ::OpenAPI::toJsonValue(m_tls_feature_profile));
    }
    if (m_trust_config_isSet) {
        obj.insert(QString("trustConfig"), ::OpenAPI::toJsonValue(m_trust_config));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAITlsInspectionPolicy::getCaPool() const {
    return m_ca_pool;
}
void OAITlsInspectionPolicy::setCaPool(const QString &ca_pool) {
    m_ca_pool = ca_pool;
    m_ca_pool_isSet = true;
}

bool OAITlsInspectionPolicy::is_ca_pool_Set() const{
    return m_ca_pool_isSet;
}

bool OAITlsInspectionPolicy::is_ca_pool_Valid() const{
    return m_ca_pool_isValid;
}

QString OAITlsInspectionPolicy::getCreateTime() const {
    return m_create_time;
}
void OAITlsInspectionPolicy::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAITlsInspectionPolicy::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAITlsInspectionPolicy::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QList<QString> OAITlsInspectionPolicy::getCustomTlsFeatures() const {
    return m_custom_tls_features;
}
void OAITlsInspectionPolicy::setCustomTlsFeatures(const QList<QString> &custom_tls_features) {
    m_custom_tls_features = custom_tls_features;
    m_custom_tls_features_isSet = true;
}

bool OAITlsInspectionPolicy::is_custom_tls_features_Set() const{
    return m_custom_tls_features_isSet;
}

bool OAITlsInspectionPolicy::is_custom_tls_features_Valid() const{
    return m_custom_tls_features_isValid;
}

QString OAITlsInspectionPolicy::getDescription() const {
    return m_description;
}
void OAITlsInspectionPolicy::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITlsInspectionPolicy::is_description_Set() const{
    return m_description_isSet;
}

bool OAITlsInspectionPolicy::is_description_Valid() const{
    return m_description_isValid;
}

bool OAITlsInspectionPolicy::isExcludePublicCaSet() const {
    return m_exclude_public_ca_set;
}
void OAITlsInspectionPolicy::setExcludePublicCaSet(const bool &exclude_public_ca_set) {
    m_exclude_public_ca_set = exclude_public_ca_set;
    m_exclude_public_ca_set_isSet = true;
}

bool OAITlsInspectionPolicy::is_exclude_public_ca_set_Set() const{
    return m_exclude_public_ca_set_isSet;
}

bool OAITlsInspectionPolicy::is_exclude_public_ca_set_Valid() const{
    return m_exclude_public_ca_set_isValid;
}

QString OAITlsInspectionPolicy::getMinTlsVersion() const {
    return m_min_tls_version;
}
void OAITlsInspectionPolicy::setMinTlsVersion(const QString &min_tls_version) {
    m_min_tls_version = min_tls_version;
    m_min_tls_version_isSet = true;
}

bool OAITlsInspectionPolicy::is_min_tls_version_Set() const{
    return m_min_tls_version_isSet;
}

bool OAITlsInspectionPolicy::is_min_tls_version_Valid() const{
    return m_min_tls_version_isValid;
}

QString OAITlsInspectionPolicy::getName() const {
    return m_name;
}
void OAITlsInspectionPolicy::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITlsInspectionPolicy::is_name_Set() const{
    return m_name_isSet;
}

bool OAITlsInspectionPolicy::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITlsInspectionPolicy::getTlsFeatureProfile() const {
    return m_tls_feature_profile;
}
void OAITlsInspectionPolicy::setTlsFeatureProfile(const QString &tls_feature_profile) {
    m_tls_feature_profile = tls_feature_profile;
    m_tls_feature_profile_isSet = true;
}

bool OAITlsInspectionPolicy::is_tls_feature_profile_Set() const{
    return m_tls_feature_profile_isSet;
}

bool OAITlsInspectionPolicy::is_tls_feature_profile_Valid() const{
    return m_tls_feature_profile_isValid;
}

QString OAITlsInspectionPolicy::getTrustConfig() const {
    return m_trust_config;
}
void OAITlsInspectionPolicy::setTrustConfig(const QString &trust_config) {
    m_trust_config = trust_config;
    m_trust_config_isSet = true;
}

bool OAITlsInspectionPolicy::is_trust_config_Set() const{
    return m_trust_config_isSet;
}

bool OAITlsInspectionPolicy::is_trust_config_Valid() const{
    return m_trust_config_isValid;
}

QString OAITlsInspectionPolicy::getUpdateTime() const {
    return m_update_time;
}
void OAITlsInspectionPolicy::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAITlsInspectionPolicy::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAITlsInspectionPolicy::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAITlsInspectionPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ca_pool_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_tls_features.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude_public_ca_set_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_tls_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tls_feature_profile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trust_config_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITlsInspectionPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
