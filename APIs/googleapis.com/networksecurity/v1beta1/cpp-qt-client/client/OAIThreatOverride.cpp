/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIThreatOverride.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIThreatOverride::OAIThreatOverride(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIThreatOverride::OAIThreatOverride() {
    this->initializeModel();
}

OAIThreatOverride::~OAIThreatOverride() {}

void OAIThreatOverride::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_threat_id_isSet = false;
    m_threat_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIThreatOverride::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIThreatOverride::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_threat_id_isValid = ::OpenAPI::fromJsonValue(m_threat_id, json[QString("threatId")]);
    m_threat_id_isSet = !json[QString("threatId")].isNull() && m_threat_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIThreatOverride::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIThreatOverride::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_threat_id_isSet) {
        obj.insert(QString("threatId"), ::OpenAPI::toJsonValue(m_threat_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIThreatOverride::getAction() const {
    return m_action;
}
void OAIThreatOverride::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIThreatOverride::is_action_Set() const{
    return m_action_isSet;
}

bool OAIThreatOverride::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIThreatOverride::getThreatId() const {
    return m_threat_id;
}
void OAIThreatOverride::setThreatId(const QString &threat_id) {
    m_threat_id = threat_id;
    m_threat_id_isSet = true;
}

bool OAIThreatOverride::is_threat_id_Set() const{
    return m_threat_id_isSet;
}

bool OAIThreatOverride::is_threat_id_Valid() const{
    return m_threat_id_isValid;
}

QString OAIThreatOverride::getType() const {
    return m_type;
}
void OAIThreatOverride::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIThreatOverride::is_type_Set() const{
    return m_type_isSet;
}

bool OAIThreatOverride::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIThreatOverride::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_threat_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIThreatOverride::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
