/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestination.h
 *
 * Specification of traffic destination attributes.
 */

#ifndef OAIDestination_H
#define OAIDestination_H

#include <QJsonObject>

#include "OAIHttpHeaderMatch.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHttpHeaderMatch;

class OAIDestination : public OAIObject {
public:
    OAIDestination();
    OAIDestination(QString json);
    ~OAIDestination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getHosts() const;
    void setHosts(const QList<QString> &hosts);
    bool is_hosts_Set() const;
    bool is_hosts_Valid() const;

    OAIHttpHeaderMatch getHttpHeaderMatch() const;
    void setHttpHeaderMatch(const OAIHttpHeaderMatch &http_header_match);
    bool is_http_header_match_Set() const;
    bool is_http_header_match_Valid() const;

    QList<QString> getMethods() const;
    void setMethods(const QList<QString> &methods);
    bool is_methods_Set() const;
    bool is_methods_Valid() const;

    QList<qint32> getPorts() const;
    void setPorts(const QList<qint32> &ports);
    bool is_ports_Set() const;
    bool is_ports_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_hosts;
    bool m_hosts_isSet;
    bool m_hosts_isValid;

    OAIHttpHeaderMatch m_http_header_match;
    bool m_http_header_match_isSet;
    bool m_http_header_match_isValid;

    QList<QString> m_methods;
    bool m_methods_isSet;
    bool m_methods_isValid;

    QList<qint32> m_ports;
    bool m_ports_isSet;
    bool m_ports_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestination)

#endif // OAIDestination_H
