/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMTLSPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMTLSPolicy::OAIMTLSPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMTLSPolicy::OAIMTLSPolicy() {
    this->initializeModel();
}

OAIMTLSPolicy::~OAIMTLSPolicy() {}

void OAIMTLSPolicy::initializeModel() {

    m_client_validation_ca_isSet = false;
    m_client_validation_ca_isValid = false;

    m_client_validation_mode_isSet = false;
    m_client_validation_mode_isValid = false;

    m_client_validation_trust_config_isSet = false;
    m_client_validation_trust_config_isValid = false;
}

void OAIMTLSPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMTLSPolicy::fromJsonObject(QJsonObject json) {

    m_client_validation_ca_isValid = ::OpenAPI::fromJsonValue(m_client_validation_ca, json[QString("clientValidationCa")]);
    m_client_validation_ca_isSet = !json[QString("clientValidationCa")].isNull() && m_client_validation_ca_isValid;

    m_client_validation_mode_isValid = ::OpenAPI::fromJsonValue(m_client_validation_mode, json[QString("clientValidationMode")]);
    m_client_validation_mode_isSet = !json[QString("clientValidationMode")].isNull() && m_client_validation_mode_isValid;

    m_client_validation_trust_config_isValid = ::OpenAPI::fromJsonValue(m_client_validation_trust_config, json[QString("clientValidationTrustConfig")]);
    m_client_validation_trust_config_isSet = !json[QString("clientValidationTrustConfig")].isNull() && m_client_validation_trust_config_isValid;
}

QString OAIMTLSPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMTLSPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_client_validation_ca.size() > 0) {
        obj.insert(QString("clientValidationCa"), ::OpenAPI::toJsonValue(m_client_validation_ca));
    }
    if (m_client_validation_mode_isSet) {
        obj.insert(QString("clientValidationMode"), ::OpenAPI::toJsonValue(m_client_validation_mode));
    }
    if (m_client_validation_trust_config_isSet) {
        obj.insert(QString("clientValidationTrustConfig"), ::OpenAPI::toJsonValue(m_client_validation_trust_config));
    }
    return obj;
}

QList<OAIValidationCA> OAIMTLSPolicy::getClientValidationCa() const {
    return m_client_validation_ca;
}
void OAIMTLSPolicy::setClientValidationCa(const QList<OAIValidationCA> &client_validation_ca) {
    m_client_validation_ca = client_validation_ca;
    m_client_validation_ca_isSet = true;
}

bool OAIMTLSPolicy::is_client_validation_ca_Set() const{
    return m_client_validation_ca_isSet;
}

bool OAIMTLSPolicy::is_client_validation_ca_Valid() const{
    return m_client_validation_ca_isValid;
}

QString OAIMTLSPolicy::getClientValidationMode() const {
    return m_client_validation_mode;
}
void OAIMTLSPolicy::setClientValidationMode(const QString &client_validation_mode) {
    m_client_validation_mode = client_validation_mode;
    m_client_validation_mode_isSet = true;
}

bool OAIMTLSPolicy::is_client_validation_mode_Set() const{
    return m_client_validation_mode_isSet;
}

bool OAIMTLSPolicy::is_client_validation_mode_Valid() const{
    return m_client_validation_mode_isValid;
}

QString OAIMTLSPolicy::getClientValidationTrustConfig() const {
    return m_client_validation_trust_config;
}
void OAIMTLSPolicy::setClientValidationTrustConfig(const QString &client_validation_trust_config) {
    m_client_validation_trust_config = client_validation_trust_config;
    m_client_validation_trust_config_isSet = true;
}

bool OAIMTLSPolicy::is_client_validation_trust_config_Set() const{
    return m_client_validation_trust_config_isSet;
}

bool OAIMTLSPolicy::is_client_validation_trust_config_Valid() const{
    return m_client_validation_trust_config_isValid;
}

bool OAIMTLSPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_validation_ca.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_validation_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_validation_trust_config_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMTLSPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
