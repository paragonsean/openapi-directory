/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICertificateProviderInstance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICertificateProviderInstance::OAICertificateProviderInstance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICertificateProviderInstance::OAICertificateProviderInstance() {
    this->initializeModel();
}

OAICertificateProviderInstance::~OAICertificateProviderInstance() {}

void OAICertificateProviderInstance::initializeModel() {

    m_plugin_instance_isSet = false;
    m_plugin_instance_isValid = false;
}

void OAICertificateProviderInstance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICertificateProviderInstance::fromJsonObject(QJsonObject json) {

    m_plugin_instance_isValid = ::OpenAPI::fromJsonValue(m_plugin_instance, json[QString("pluginInstance")]);
    m_plugin_instance_isSet = !json[QString("pluginInstance")].isNull() && m_plugin_instance_isValid;
}

QString OAICertificateProviderInstance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICertificateProviderInstance::asJsonObject() const {
    QJsonObject obj;
    if (m_plugin_instance_isSet) {
        obj.insert(QString("pluginInstance"), ::OpenAPI::toJsonValue(m_plugin_instance));
    }
    return obj;
}

QString OAICertificateProviderInstance::getPluginInstance() const {
    return m_plugin_instance;
}
void OAICertificateProviderInstance::setPluginInstance(const QString &plugin_instance) {
    m_plugin_instance = plugin_instance;
    m_plugin_instance_isSet = true;
}

bool OAICertificateProviderInstance::is_plugin_instance_Set() const{
    return m_plugin_instance_isSet;
}

bool OAICertificateProviderInstance::is_plugin_instance_Valid() const{
    return m_plugin_instance_isValid;
}

bool OAICertificateProviderInstance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_plugin_instance_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICertificateProviderInstance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
