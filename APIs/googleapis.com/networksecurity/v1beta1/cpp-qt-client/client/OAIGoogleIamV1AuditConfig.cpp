/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleIamV1AuditConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleIamV1AuditConfig::OAIGoogleIamV1AuditConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleIamV1AuditConfig::OAIGoogleIamV1AuditConfig() {
    this->initializeModel();
}

OAIGoogleIamV1AuditConfig::~OAIGoogleIamV1AuditConfig() {}

void OAIGoogleIamV1AuditConfig::initializeModel() {

    m_audit_log_configs_isSet = false;
    m_audit_log_configs_isValid = false;

    m_service_isSet = false;
    m_service_isValid = false;
}

void OAIGoogleIamV1AuditConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleIamV1AuditConfig::fromJsonObject(QJsonObject json) {

    m_audit_log_configs_isValid = ::OpenAPI::fromJsonValue(m_audit_log_configs, json[QString("auditLogConfigs")]);
    m_audit_log_configs_isSet = !json[QString("auditLogConfigs")].isNull() && m_audit_log_configs_isValid;

    m_service_isValid = ::OpenAPI::fromJsonValue(m_service, json[QString("service")]);
    m_service_isSet = !json[QString("service")].isNull() && m_service_isValid;
}

QString OAIGoogleIamV1AuditConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleIamV1AuditConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_audit_log_configs.size() > 0) {
        obj.insert(QString("auditLogConfigs"), ::OpenAPI::toJsonValue(m_audit_log_configs));
    }
    if (m_service_isSet) {
        obj.insert(QString("service"), ::OpenAPI::toJsonValue(m_service));
    }
    return obj;
}

QList<OAIGoogleIamV1AuditLogConfig> OAIGoogleIamV1AuditConfig::getAuditLogConfigs() const {
    return m_audit_log_configs;
}
void OAIGoogleIamV1AuditConfig::setAuditLogConfigs(const QList<OAIGoogleIamV1AuditLogConfig> &audit_log_configs) {
    m_audit_log_configs = audit_log_configs;
    m_audit_log_configs_isSet = true;
}

bool OAIGoogleIamV1AuditConfig::is_audit_log_configs_Set() const{
    return m_audit_log_configs_isSet;
}

bool OAIGoogleIamV1AuditConfig::is_audit_log_configs_Valid() const{
    return m_audit_log_configs_isValid;
}

QString OAIGoogleIamV1AuditConfig::getService() const {
    return m_service;
}
void OAIGoogleIamV1AuditConfig::setService(const QString &service) {
    m_service = service;
    m_service_isSet = true;
}

bool OAIGoogleIamV1AuditConfig::is_service_Set() const{
    return m_service_isSet;
}

bool OAIGoogleIamV1AuditConfig::is_service_Valid() const{
    return m_service_isValid;
}

bool OAIGoogleIamV1AuditConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audit_log_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleIamV1AuditConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
