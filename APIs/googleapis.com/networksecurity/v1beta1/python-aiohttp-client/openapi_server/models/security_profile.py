# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.threat_prevention_profile import ThreatPreventionProfile
from openapi_server import util


class SecurityProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, etag: str=None, labels: Dict[str, str]=None, name: str=None, threat_prevention_profile: ThreatPreventionProfile=None, type: str=None, update_time: str=None):
        """SecurityProfile - a model defined in OpenAPI

        :param create_time: The create_time of this SecurityProfile.
        :param description: The description of this SecurityProfile.
        :param etag: The etag of this SecurityProfile.
        :param labels: The labels of this SecurityProfile.
        :param name: The name of this SecurityProfile.
        :param threat_prevention_profile: The threat_prevention_profile of this SecurityProfile.
        :param type: The type of this SecurityProfile.
        :param update_time: The update_time of this SecurityProfile.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'etag': str,
            'labels': Dict[str, str],
            'name': str,
            'threat_prevention_profile': ThreatPreventionProfile,
            'type': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'etag': 'etag',
            'labels': 'labels',
            'name': 'name',
            'threat_prevention_profile': 'threatPreventionProfile',
            'type': 'type',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._description = description
        self._etag = etag
        self._labels = labels
        self._name = name
        self._threat_prevention_profile = threat_prevention_profile
        self._type = type
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecurityProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecurityProfile of this SecurityProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this SecurityProfile.

        Output only. Resource creation timestamp.

        :return: The create_time of this SecurityProfile.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this SecurityProfile.

        Output only. Resource creation timestamp.

        :param create_time: The create_time of this SecurityProfile.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this SecurityProfile.

        Optional. An optional description of the profile. Max length 512 characters.

        :return: The description of this SecurityProfile.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SecurityProfile.

        Optional. An optional description of the profile. Max length 512 characters.

        :param description: The description of this SecurityProfile.
        :type description: str
        """

        self._description = description

    @property
    def etag(self):
        """Gets the etag of this SecurityProfile.

        Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.

        :return: The etag of this SecurityProfile.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this SecurityProfile.

        Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.

        :param etag: The etag of this SecurityProfile.
        :type etag: str
        """

        self._etag = etag

    @property
    def labels(self):
        """Gets the labels of this SecurityProfile.

        Optional. Labels as key value pairs.

        :return: The labels of this SecurityProfile.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this SecurityProfile.

        Optional. Labels as key value pairs.

        :param labels: The labels of this SecurityProfile.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this SecurityProfile.

        Immutable. Identifier. Name of the SecurityProfile resource. It matches pattern `projects|organizations/*/locations/{location}/securityProfiles/{security_profile}`.

        :return: The name of this SecurityProfile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SecurityProfile.

        Immutable. Identifier. Name of the SecurityProfile resource. It matches pattern `projects|organizations/*/locations/{location}/securityProfiles/{security_profile}`.

        :param name: The name of this SecurityProfile.
        :type name: str
        """

        self._name = name

    @property
    def threat_prevention_profile(self):
        """Gets the threat_prevention_profile of this SecurityProfile.


        :return: The threat_prevention_profile of this SecurityProfile.
        :rtype: ThreatPreventionProfile
        """
        return self._threat_prevention_profile

    @threat_prevention_profile.setter
    def threat_prevention_profile(self, threat_prevention_profile):
        """Sets the threat_prevention_profile of this SecurityProfile.


        :param threat_prevention_profile: The threat_prevention_profile of this SecurityProfile.
        :type threat_prevention_profile: ThreatPreventionProfile
        """

        self._threat_prevention_profile = threat_prevention_profile

    @property
    def type(self):
        """Gets the type of this SecurityProfile.

        Immutable. The single ProfileType that the SecurityProfile resource configures.

        :return: The type of this SecurityProfile.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SecurityProfile.

        Immutable. The single ProfileType that the SecurityProfile resource configures.

        :param type: The type of this SecurityProfile.
        :type type: str
        """
        allowed_values = ["PROFILE_TYPE_UNSPECIFIED", "THREAT_PREVENTION"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def update_time(self):
        """Gets the update_time of this SecurityProfile.

        Output only. Last resource update timestamp.

        :return: The update_time of this SecurityProfile.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this SecurityProfile.

        Output only. Last resource update timestamp.

        :param update_time: The update_time of this SecurityProfile.
        :type update_time: str
        """

        self._update_time = update_time
