# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_networksecurity_v1beta1_certificate_provider import GoogleCloudNetworksecurityV1beta1CertificateProvider
from openapi_server.models.validation_ca import ValidationCA
from openapi_server import util


class ClientTlsPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_certificate: GoogleCloudNetworksecurityV1beta1CertificateProvider=None, create_time: str=None, description: str=None, labels: Dict[str, str]=None, name: str=None, server_validation_ca: List[ValidationCA]=None, sni: str=None, update_time: str=None):
        """ClientTlsPolicy - a model defined in OpenAPI

        :param client_certificate: The client_certificate of this ClientTlsPolicy.
        :param create_time: The create_time of this ClientTlsPolicy.
        :param description: The description of this ClientTlsPolicy.
        :param labels: The labels of this ClientTlsPolicy.
        :param name: The name of this ClientTlsPolicy.
        :param server_validation_ca: The server_validation_ca of this ClientTlsPolicy.
        :param sni: The sni of this ClientTlsPolicy.
        :param update_time: The update_time of this ClientTlsPolicy.
        """
        self.openapi_types = {
            'client_certificate': GoogleCloudNetworksecurityV1beta1CertificateProvider,
            'create_time': str,
            'description': str,
            'labels': Dict[str, str],
            'name': str,
            'server_validation_ca': List[ValidationCA],
            'sni': str,
            'update_time': str
        }

        self.attribute_map = {
            'client_certificate': 'clientCertificate',
            'create_time': 'createTime',
            'description': 'description',
            'labels': 'labels',
            'name': 'name',
            'server_validation_ca': 'serverValidationCa',
            'sni': 'sni',
            'update_time': 'updateTime'
        }

        self._client_certificate = client_certificate
        self._create_time = create_time
        self._description = description
        self._labels = labels
        self._name = name
        self._server_validation_ca = server_validation_ca
        self._sni = sni
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientTlsPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientTlsPolicy of this ClientTlsPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_certificate(self):
        """Gets the client_certificate of this ClientTlsPolicy.


        :return: The client_certificate of this ClientTlsPolicy.
        :rtype: GoogleCloudNetworksecurityV1beta1CertificateProvider
        """
        return self._client_certificate

    @client_certificate.setter
    def client_certificate(self, client_certificate):
        """Sets the client_certificate of this ClientTlsPolicy.


        :param client_certificate: The client_certificate of this ClientTlsPolicy.
        :type client_certificate: GoogleCloudNetworksecurityV1beta1CertificateProvider
        """

        self._client_certificate = client_certificate

    @property
    def create_time(self):
        """Gets the create_time of this ClientTlsPolicy.

        Output only. The timestamp when the resource was created.

        :return: The create_time of this ClientTlsPolicy.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this ClientTlsPolicy.

        Output only. The timestamp when the resource was created.

        :param create_time: The create_time of this ClientTlsPolicy.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this ClientTlsPolicy.

        Optional. Free-text description of the resource.

        :return: The description of this ClientTlsPolicy.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ClientTlsPolicy.

        Optional. Free-text description of the resource.

        :param description: The description of this ClientTlsPolicy.
        :type description: str
        """

        self._description = description

    @property
    def labels(self):
        """Gets the labels of this ClientTlsPolicy.

        Optional. Set of label tags associated with the resource.

        :return: The labels of this ClientTlsPolicy.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this ClientTlsPolicy.

        Optional. Set of label tags associated with the resource.

        :param labels: The labels of this ClientTlsPolicy.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this ClientTlsPolicy.

        Required. Name of the ClientTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/clientTlsPolicies/{client_tls_policy}`

        :return: The name of this ClientTlsPolicy.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ClientTlsPolicy.

        Required. Name of the ClientTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/clientTlsPolicies/{client_tls_policy}`

        :param name: The name of this ClientTlsPolicy.
        :type name: str
        """

        self._name = name

    @property
    def server_validation_ca(self):
        """Gets the server_validation_ca of this ClientTlsPolicy.

        Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.

        :return: The server_validation_ca of this ClientTlsPolicy.
        :rtype: List[ValidationCA]
        """
        return self._server_validation_ca

    @server_validation_ca.setter
    def server_validation_ca(self, server_validation_ca):
        """Sets the server_validation_ca of this ClientTlsPolicy.

        Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.

        :param server_validation_ca: The server_validation_ca of this ClientTlsPolicy.
        :type server_validation_ca: List[ValidationCA]
        """

        self._server_validation_ca = server_validation_ca

    @property
    def sni(self):
        """Gets the sni of this ClientTlsPolicy.

        Optional. Server Name Indication string to present to the server during TLS handshake. E.g: \"secure.example.com\".

        :return: The sni of this ClientTlsPolicy.
        :rtype: str
        """
        return self._sni

    @sni.setter
    def sni(self, sni):
        """Sets the sni of this ClientTlsPolicy.

        Optional. Server Name Indication string to present to the server during TLS handshake. E.g: \"secure.example.com\".

        :param sni: The sni of this ClientTlsPolicy.
        :type sni: str
        """

        self._sni = sni

    @property
    def update_time(self):
        """Gets the update_time of this ClientTlsPolicy.

        Output only. The timestamp when the resource was updated.

        :return: The update_time of this ClientTlsPolicy.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this ClientTlsPolicy.

        Output only. The timestamp when the resource was updated.

        :param update_time: The update_time of this ClientTlsPolicy.
        :type update_time: str
        """

        self._update_time = update_time
