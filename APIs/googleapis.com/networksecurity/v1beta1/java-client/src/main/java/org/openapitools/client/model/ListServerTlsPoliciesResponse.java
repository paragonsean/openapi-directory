/*
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ServerTlsPolicy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response returned by the ListServerTlsPolicies method.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:15.058911-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListServerTlsPoliciesResponse {
  public static final String SERIALIZED_NAME_NEXT_PAGE_TOKEN = "nextPageToken";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_TOKEN)
  private String nextPageToken;

  public static final String SERIALIZED_NAME_SERVER_TLS_POLICIES = "serverTlsPolicies";
  @SerializedName(SERIALIZED_NAME_SERVER_TLS_POLICIES)
  private List<ServerTlsPolicy> serverTlsPolicies = new ArrayList<>();

  public ListServerTlsPoliciesResponse() {
  }

  public ListServerTlsPoliciesResponse nextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

  /**
   * If there might be more results than those appearing in this response, then &#x60;next_page_token&#x60; is included. To get the next set of results, call this method again using the value of &#x60;next_page_token&#x60; as &#x60;page_token&#x60;.
   * @return nextPageToken
   */
  @javax.annotation.Nullable
  public String getNextPageToken() {
    return nextPageToken;
  }

  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }


  public ListServerTlsPoliciesResponse serverTlsPolicies(List<ServerTlsPolicy> serverTlsPolicies) {
    this.serverTlsPolicies = serverTlsPolicies;
    return this;
  }

  public ListServerTlsPoliciesResponse addServerTlsPoliciesItem(ServerTlsPolicy serverTlsPoliciesItem) {
    if (this.serverTlsPolicies == null) {
      this.serverTlsPolicies = new ArrayList<>();
    }
    this.serverTlsPolicies.add(serverTlsPoliciesItem);
    return this;
  }

  /**
   * List of ServerTlsPolicy resources.
   * @return serverTlsPolicies
   */
  @javax.annotation.Nullable
  public List<ServerTlsPolicy> getServerTlsPolicies() {
    return serverTlsPolicies;
  }

  public void setServerTlsPolicies(List<ServerTlsPolicy> serverTlsPolicies) {
    this.serverTlsPolicies = serverTlsPolicies;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListServerTlsPoliciesResponse listServerTlsPoliciesResponse = (ListServerTlsPoliciesResponse) o;
    return Objects.equals(this.nextPageToken, listServerTlsPoliciesResponse.nextPageToken) &&
        Objects.equals(this.serverTlsPolicies, listServerTlsPoliciesResponse.serverTlsPolicies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextPageToken, serverTlsPolicies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListServerTlsPoliciesResponse {\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("    serverTlsPolicies: ").append(toIndentedString(serverTlsPolicies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("nextPageToken");
    openapiFields.add("serverTlsPolicies");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListServerTlsPoliciesResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListServerTlsPoliciesResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListServerTlsPoliciesResponse is not found in the empty JSON string", ListServerTlsPoliciesResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListServerTlsPoliciesResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListServerTlsPoliciesResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("nextPageToken") != null && !jsonObj.get("nextPageToken").isJsonNull()) && !jsonObj.get("nextPageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextPageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextPageToken").toString()));
      }
      if (jsonObj.get("serverTlsPolicies") != null && !jsonObj.get("serverTlsPolicies").isJsonNull()) {
        JsonArray jsonArrayserverTlsPolicies = jsonObj.getAsJsonArray("serverTlsPolicies");
        if (jsonArrayserverTlsPolicies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("serverTlsPolicies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `serverTlsPolicies` to be an array in the JSON string but got `%s`", jsonObj.get("serverTlsPolicies").toString()));
          }

          // validate the optional field `serverTlsPolicies` (array)
          for (int i = 0; i < jsonArrayserverTlsPolicies.size(); i++) {
            ServerTlsPolicy.validateJsonElement(jsonArrayserverTlsPolicies.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListServerTlsPoliciesResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListServerTlsPoliciesResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListServerTlsPoliciesResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListServerTlsPoliciesResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ListServerTlsPoliciesResponse>() {
           @Override
           public void write(JsonWriter out, ListServerTlsPoliciesResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListServerTlsPoliciesResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListServerTlsPoliciesResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListServerTlsPoliciesResponse
   * @throws IOException if the JSON string is invalid with respect to ListServerTlsPoliciesResponse
   */
  public static ListServerTlsPoliciesResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListServerTlsPoliciesResponse.class);
  }

  /**
   * Convert an instance of ListServerTlsPoliciesResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

