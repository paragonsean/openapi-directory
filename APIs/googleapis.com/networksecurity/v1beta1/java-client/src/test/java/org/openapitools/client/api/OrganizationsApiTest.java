/*
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FirewallEndpoint;
import org.openapitools.client.model.ListFirewallEndpointsResponse;
import org.openapitools.client.model.ListSecurityProfileGroupsResponse;
import org.openapitools.client.model.ListSecurityProfilesResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.SecurityProfile;
import org.openapitools.client.model.SecurityProfileGroup;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationsApi
 */
@Disabled
public class OrganizationsApiTest {

    private final OrganizationsApi api = new OrganizationsApi();

    /**
     * Creates a new FirewallEndpoint in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networksecurityOrganizationsLocationsFirewallEndpointsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String firewallEndpointId = null;
        String requestId = null;
        FirewallEndpoint firewallEndpoint = null;
        Operation response = api.networksecurityOrganizationsLocationsFirewallEndpointsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, firewallEndpointId, requestId, firewallEndpoint);
        // TODO: test validations
    }

    /**
     * Lists FirewallEndpoints in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networksecurityOrganizationsLocationsFirewallEndpointsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        ListFirewallEndpointsResponse response = api.networksecurityOrganizationsLocationsFirewallEndpointsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a new SecurityProfileGroup in a given organization and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networksecurityOrganizationsLocationsSecurityProfileGroupsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String securityProfileGroupId = null;
        SecurityProfileGroup securityProfileGroup = null;
        Operation response = api.networksecurityOrganizationsLocationsSecurityProfileGroupsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, securityProfileGroupId, securityProfileGroup);
        // TODO: test validations
    }

    /**
     * Lists SecurityProfileGroups in a given organization and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networksecurityOrganizationsLocationsSecurityProfileGroupsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        ListSecurityProfileGroupsResponse response = api.networksecurityOrganizationsLocationsSecurityProfileGroupsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a new SecurityProfile in a given organization and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networksecurityOrganizationsLocationsSecurityProfilesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String securityProfileId = null;
        SecurityProfile securityProfile = null;
        Operation response = api.networksecurityOrganizationsLocationsSecurityProfilesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, securityProfileId, securityProfile);
        // TODO: test validations
    }

    /**
     * Lists SecurityProfiles in a given organization and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networksecurityOrganizationsLocationsSecurityProfilesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        ListSecurityProfilesResponse response = api.networksecurityOrganizationsLocationsSecurityProfilesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

}
