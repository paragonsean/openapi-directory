/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TlsInspectionPolicy model module.
 * @module model/TlsInspectionPolicy
 * @version v1beta1
 */
class TlsInspectionPolicy {
    /**
     * Constructs a new <code>TlsInspectionPolicy</code>.
     * The TlsInspectionPolicy resource contains references to CA pools in Certificate Authority Service and associated metadata.
     * @alias module:model/TlsInspectionPolicy
     */
    constructor() { 
        
        TlsInspectionPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TlsInspectionPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TlsInspectionPolicy} obj Optional instance to populate.
     * @return {module:model/TlsInspectionPolicy} The populated <code>TlsInspectionPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TlsInspectionPolicy();

            if (data.hasOwnProperty('caPool')) {
                obj['caPool'] = ApiClient.convertToType(data['caPool'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('customTlsFeatures')) {
                obj['customTlsFeatures'] = ApiClient.convertToType(data['customTlsFeatures'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('excludePublicCaSet')) {
                obj['excludePublicCaSet'] = ApiClient.convertToType(data['excludePublicCaSet'], 'Boolean');
            }
            if (data.hasOwnProperty('minTlsVersion')) {
                obj['minTlsVersion'] = ApiClient.convertToType(data['minTlsVersion'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tlsFeatureProfile')) {
                obj['tlsFeatureProfile'] = ApiClient.convertToType(data['tlsFeatureProfile'], 'String');
            }
            if (data.hasOwnProperty('trustConfig')) {
                obj['trustConfig'] = ApiClient.convertToType(data['trustConfig'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TlsInspectionPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TlsInspectionPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['caPool'] && !(typeof data['caPool'] === 'string' || data['caPool'] instanceof String)) {
            throw new Error("Expected the field `caPool` to be a primitive type in the JSON string but got " + data['caPool']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['customTlsFeatures'])) {
            throw new Error("Expected the field `customTlsFeatures` to be an array in the JSON data but got " + data['customTlsFeatures']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['minTlsVersion'] && !(typeof data['minTlsVersion'] === 'string' || data['minTlsVersion'] instanceof String)) {
            throw new Error("Expected the field `minTlsVersion` to be a primitive type in the JSON string but got " + data['minTlsVersion']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['tlsFeatureProfile'] && !(typeof data['tlsFeatureProfile'] === 'string' || data['tlsFeatureProfile'] instanceof String)) {
            throw new Error("Expected the field `tlsFeatureProfile` to be a primitive type in the JSON string but got " + data['tlsFeatureProfile']);
        }
        // ensure the json data is a string
        if (data['trustConfig'] && !(typeof data['trustConfig'] === 'string' || data['trustConfig'] instanceof String)) {
            throw new Error("Expected the field `trustConfig` to be a primitive type in the JSON string but got " + data['trustConfig']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Required. A CA pool resource used to issue interception certificates. The CA pool string has a relative resource path following the form \"projects/{project}/locations/{location}/caPools/{ca_pool}\".
 * @member {String} caPool
 */
TlsInspectionPolicy.prototype['caPool'] = undefined;

/**
 * Output only. The timestamp when the resource was created.
 * @member {String} createTime
 */
TlsInspectionPolicy.prototype['createTime'] = undefined;

/**
 * Optional. List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list. Note that Secure Web Proxy does not yet honor this field.
 * @member {Array.<String>} customTlsFeatures
 */
TlsInspectionPolicy.prototype['customTlsFeatures'] = undefined;

/**
 * Optional. Free-text description of the resource.
 * @member {String} description
 */
TlsInspectionPolicy.prototype['description'] = undefined;

/**
 * Optional. If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trust_config. These public CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our default set of public CAs. Only CAs specified in trust_config will be accepted. This defaults to FALSE (use public CAs in addition to trust_config) for backwards compatibility, but trusting public root CAs is *not recommended* unless the traffic in question is outbound to public web servers. When possible, prefer setting this to \"false\" and explicitly specifying trusted CAs and certificates in a TrustConfig. Note that Secure Web Proxy does not yet honor this field.
 * @member {Boolean} excludePublicCaSet
 */
TlsInspectionPolicy.prototype['excludePublicCaSet'] = undefined;

/**
 * Optional. Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
 * @member {module:model/TlsInspectionPolicy.MinTlsVersionEnum} minTlsVersion
 */
TlsInspectionPolicy.prototype['minTlsVersion'] = undefined;

/**
 * Required. Name of the resource. Name is of the form projects/{project}/locations/{location}/tlsInspectionPolicies/{tls_inspection_policy} tls_inspection_policy should match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 * @member {String} name
 */
TlsInspectionPolicy.prototype['name'] = undefined;

/**
 * Optional. The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers (\"PROFILE_COMPATIBLE\"). Setting this to more restrictive values may improve security, but may also prevent the TLS inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
 * @member {module:model/TlsInspectionPolicy.TlsFeatureProfileEnum} tlsFeatureProfile
 */
TlsInspectionPolicy.prototype['tlsFeatureProfile'] = undefined;

/**
 * Optional. A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the form \"projects/{project}/locations/{location}/trustConfigs/{trust_config}\". This is necessary to intercept TLS connections to servers with certificates signed by a private CA or self-signed certificates. Note that Secure Web Proxy does not yet honor this field.
 * @member {String} trustConfig
 */
TlsInspectionPolicy.prototype['trustConfig'] = undefined;

/**
 * Output only. The timestamp when the resource was updated.
 * @member {String} updateTime
 */
TlsInspectionPolicy.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>minTlsVersion</code> property.
 * @enum {String}
 * @readonly
 */
TlsInspectionPolicy['MinTlsVersionEnum'] = {

    /**
     * value: "TLS_VERSION_UNSPECIFIED"
     * @const
     */
    "VERSION_UNSPECIFIED": "TLS_VERSION_UNSPECIFIED",

    /**
     * value: "TLS_1_0"
     * @const
     */
    "1_0": "TLS_1_0",

    /**
     * value: "TLS_1_1"
     * @const
     */
    "1_1": "TLS_1_1",

    /**
     * value: "TLS_1_2"
     * @const
     */
    "1_2": "TLS_1_2",

    /**
     * value: "TLS_1_3"
     * @const
     */
    "1_3": "TLS_1_3"
};


/**
 * Allowed values for the <code>tlsFeatureProfile</code> property.
 * @enum {String}
 * @readonly
 */
TlsInspectionPolicy['TlsFeatureProfileEnum'] = {

    /**
     * value: "PROFILE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PROFILE_UNSPECIFIED",

    /**
     * value: "PROFILE_COMPATIBLE"
     * @const
     */
    "COMPATIBLE": "PROFILE_COMPATIBLE",

    /**
     * value: "PROFILE_MODERN"
     * @const
     */
    "MODERN": "PROFILE_MODERN",

    /**
     * value: "PROFILE_RESTRICTED"
     * @const
     */
    "RESTRICTED": "PROFILE_RESTRICTED",

    /**
     * value: "PROFILE_CUSTOM"
     * @const
     */
    "CUSTOM": "PROFILE_CUSTOM"
};



export default TlsInspectionPolicy;

