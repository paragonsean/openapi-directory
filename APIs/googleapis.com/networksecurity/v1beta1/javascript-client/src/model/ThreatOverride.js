/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ThreatOverride model module.
 * @module model/ThreatOverride
 * @version v1beta1
 */
class ThreatOverride {
    /**
     * Constructs a new <code>ThreatOverride</code>.
     * Defines what action to take for a specific threat_id match.
     * @alias module:model/ThreatOverride
     */
    constructor() { 
        
        ThreatOverride.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ThreatOverride</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ThreatOverride} obj Optional instance to populate.
     * @return {module:model/ThreatOverride} The populated <code>ThreatOverride</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ThreatOverride();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('threatId')) {
                obj['threatId'] = ApiClient.convertToType(data['threatId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ThreatOverride</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ThreatOverride</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['threatId'] && !(typeof data['threatId'] === 'string' || data['threatId'] instanceof String)) {
            throw new Error("Expected the field `threatId` to be a primitive type in the JSON string but got " + data['threatId']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Required. Threat action override. For some threat types, only a subset of actions applies.
 * @member {module:model/ThreatOverride.ActionEnum} action
 */
ThreatOverride.prototype['action'] = undefined;

/**
 * Required. Vendor-specific ID of a threat to override.
 * @member {String} threatId
 */
ThreatOverride.prototype['threatId'] = undefined;

/**
 * Output only. Type of the threat (read only).
 * @member {module:model/ThreatOverride.TypeEnum} type
 */
ThreatOverride.prototype['type'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
ThreatOverride['ActionEnum'] = {

    /**
     * value: "THREAT_ACTION_UNSPECIFIED"
     * @const
     */
    "THREAT_ACTION_UNSPECIFIED": "THREAT_ACTION_UNSPECIFIED",

    /**
     * value: "DEFAULT_ACTION"
     * @const
     */
    "DEFAULT_ACTION": "DEFAULT_ACTION",

    /**
     * value: "ALLOW"
     * @const
     */
    "ALLOW": "ALLOW",

    /**
     * value: "ALERT"
     * @const
     */
    "ALERT": "ALERT",

    /**
     * value: "DENY"
     * @const
     */
    "DENY": "DENY"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ThreatOverride['TypeEnum'] = {

    /**
     * value: "THREAT_TYPE_UNSPECIFIED"
     * @const
     */
    "THREAT_TYPE_UNSPECIFIED": "THREAT_TYPE_UNSPECIFIED",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "VULNERABILITY"
     * @const
     */
    "VULNERABILITY": "VULNERABILITY",

    /**
     * value: "ANTIVIRUS"
     * @const
     */
    "ANTIVIRUS": "ANTIVIRUS",

    /**
     * value: "SPYWARE"
     * @const
     */
    "SPYWARE": "SPYWARE",

    /**
     * value: "DNS"
     * @const
     */
    "DNS": "DNS"
};



export default ThreatOverride;

