/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HttpHeaderMatch from './HttpHeaderMatch';

/**
 * The Destination model module.
 * @module model/Destination
 * @version v1beta1
 */
class Destination {
    /**
     * Constructs a new <code>Destination</code>.
     * Specification of traffic destination attributes.
     * @alias module:model/Destination
     */
    constructor() { 
        
        Destination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Destination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Destination} obj Optional instance to populate.
     * @return {module:model/Destination} The populated <code>Destination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Destination();

            if (data.hasOwnProperty('hosts')) {
                obj['hosts'] = ApiClient.convertToType(data['hosts'], ['String']);
            }
            if (data.hasOwnProperty('httpHeaderMatch')) {
                obj['httpHeaderMatch'] = HttpHeaderMatch.constructFromObject(data['httpHeaderMatch']);
            }
            if (data.hasOwnProperty('methods')) {
                obj['methods'] = ApiClient.convertToType(data['methods'], ['String']);
            }
            if (data.hasOwnProperty('ports')) {
                obj['ports'] = ApiClient.convertToType(data['ports'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Destination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Destination</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['hosts'])) {
            throw new Error("Expected the field `hosts` to be an array in the JSON data but got " + data['hosts']);
        }
        // validate the optional field `httpHeaderMatch`
        if (data['httpHeaderMatch']) { // data not null
          HttpHeaderMatch.validateJSON(data['httpHeaderMatch']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['methods'])) {
            throw new Error("Expected the field `methods` to be an array in the JSON data but got " + data['methods']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ports'])) {
            throw new Error("Expected the field `ports` to be an array in the JSON data but got " + data['ports']);
        }

        return true;
    }


}



/**
 * Required. List of host names to match. Matched against the \":authority\" header in http requests. At least one host should match. Each host can be an exact match, or a prefix match (example \"mydomain.*\") or a suffix match (example \"*.myorg.com\") or a presence (any) match \"*\".
 * @member {Array.<String>} hosts
 */
Destination.prototype['hosts'] = undefined;

/**
 * @member {module:model/HttpHeaderMatch} httpHeaderMatch
 */
Destination.prototype['httpHeaderMatch'] = undefined;

/**
 * Optional. A list of HTTP methods to match. At least one method should match. Should not be set for gRPC services.
 * @member {Array.<String>} methods
 */
Destination.prototype['methods'] = undefined;

/**
 * Required. List of destination ports to match. At least one port should match.
 * @member {Array.<Number>} ports
 */
Destination.prototype['ports'] = undefined;






export default Destination;

