/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FirewallEndpointAssociationReference from './FirewallEndpointAssociationReference';

/**
 * The FirewallEndpoint model module.
 * @module model/FirewallEndpoint
 * @version v1beta1
 */
class FirewallEndpoint {
    /**
     * Constructs a new <code>FirewallEndpoint</code>.
     * Message describing Endpoint object
     * @alias module:model/FirewallEndpoint
     */
    constructor() { 
        
        FirewallEndpoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FirewallEndpoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FirewallEndpoint} obj Optional instance to populate.
     * @return {module:model/FirewallEndpoint} The populated <code>FirewallEndpoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FirewallEndpoint();

            if (data.hasOwnProperty('associatedNetworks')) {
                obj['associatedNetworks'] = ApiClient.convertToType(data['associatedNetworks'], ['String']);
            }
            if (data.hasOwnProperty('associations')) {
                obj['associations'] = ApiClient.convertToType(data['associations'], [FirewallEndpointAssociationReference]);
            }
            if (data.hasOwnProperty('billingProjectId')) {
                obj['billingProjectId'] = ApiClient.convertToType(data['billingProjectId'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('reconciling')) {
                obj['reconciling'] = ApiClient.convertToType(data['reconciling'], 'Boolean');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FirewallEndpoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FirewallEndpoint</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['associatedNetworks'])) {
            throw new Error("Expected the field `associatedNetworks` to be an array in the JSON data but got " + data['associatedNetworks']);
        }
        if (data['associations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['associations'])) {
                throw new Error("Expected the field `associations` to be an array in the JSON data but got " + data['associations']);
            }
            // validate the optional field `associations` (array)
            for (const item of data['associations']) {
                FirewallEndpointAssociationReference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['billingProjectId'] && !(typeof data['billingProjectId'] === 'string' || data['billingProjectId'] instanceof String)) {
            throw new Error("Expected the field `billingProjectId` to be a primitive type in the JSON string but got " + data['billingProjectId']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. List of networks that are associated with this endpoint in the local zone. This is a projection of the FirewallEndpointAssociations pointing at this endpoint. A network will only appear in this list after traffic routing is fully configured. Format: projects/{project}/global/networks/{name}.
 * @member {Array.<String>} associatedNetworks
 */
FirewallEndpoint.prototype['associatedNetworks'] = undefined;

/**
 * Output only. List of FirewallEndpointAssociations that are associated to this endpoint. An association will only appear in this list after traffic routing is fully configured.
 * @member {Array.<module:model/FirewallEndpointAssociationReference>} associations
 */
FirewallEndpoint.prototype['associations'] = undefined;

/**
 * Required. Project to bill on endpoint uptime usage.
 * @member {String} billingProjectId
 */
FirewallEndpoint.prototype['billingProjectId'] = undefined;

/**
 * Output only. Create time stamp
 * @member {String} createTime
 */
FirewallEndpoint.prototype['createTime'] = undefined;

/**
 * Optional. Description of the firewall endpoint. Max length 2048 characters.
 * @member {String} description
 */
FirewallEndpoint.prototype['description'] = undefined;

/**
 * Optional. Labels as key value pairs
 * @member {Object.<String, String>} labels
 */
FirewallEndpoint.prototype['labels'] = undefined;

/**
 * Immutable. Identifier. name of resource
 * @member {String} name
 */
FirewallEndpoint.prototype['name'] = undefined;

/**
 * Output only. Whether reconciling is in progress, recommended per https://google.aip.dev/128.
 * @member {Boolean} reconciling
 */
FirewallEndpoint.prototype['reconciling'] = undefined;

/**
 * Output only. Current state of the endpoint.
 * @member {module:model/FirewallEndpoint.StateEnum} state
 */
FirewallEndpoint.prototype['state'] = undefined;

/**
 * Output only. Update time stamp
 * @member {String} updateTime
 */
FirewallEndpoint.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
FirewallEndpoint['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE"
};



export default FirewallEndpoint;

