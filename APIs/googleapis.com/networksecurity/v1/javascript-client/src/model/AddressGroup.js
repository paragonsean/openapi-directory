/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddressGroup model module.
 * @module model/AddressGroup
 * @version v1
 */
class AddressGroup {
    /**
     * Constructs a new <code>AddressGroup</code>.
     * AddressGroup is a resource that specifies how a collection of IP/DNS used in Firewall Policy.
     * @alias module:model/AddressGroup
     */
    constructor() { 
        
        AddressGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddressGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddressGroup} obj Optional instance to populate.
     * @return {module:model/AddressGroup} The populated <code>AddressGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddressGroup();

            if (data.hasOwnProperty('capacity')) {
                obj['capacity'] = ApiClient.convertToType(data['capacity'], 'Number');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], ['String']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('selfLink')) {
                obj['selfLink'] = ApiClient.convertToType(data['selfLink'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddressGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddressGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['items'])) {
            throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['selfLink'] && !(typeof data['selfLink'] === 'string' || data['selfLink'] instanceof String)) {
            throw new Error("Expected the field `selfLink` to be a primitive type in the JSON string but got " + data['selfLink']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Required. Capacity of the Address Group
 * @member {Number} capacity
 */
AddressGroup.prototype['capacity'] = undefined;

/**
 * Output only. The timestamp when the resource was created.
 * @member {String} createTime
 */
AddressGroup.prototype['createTime'] = undefined;

/**
 * Optional. Free-text description of the resource.
 * @member {String} description
 */
AddressGroup.prototype['description'] = undefined;

/**
 * Optional. List of items.
 * @member {Array.<String>} items
 */
AddressGroup.prototype['items'] = undefined;

/**
 * Optional. Set of label tags associated with the AddressGroup resource.
 * @member {Object.<String, String>} labels
 */
AddressGroup.prototype['labels'] = undefined;

/**
 * Required. Name of the AddressGroup resource. It matches pattern `projects/_*_/locations/{location}/addressGroups/`.
 * @member {String} name
 */
AddressGroup.prototype['name'] = undefined;

/**
 * Output only. Server-defined fully-qualified URL for this resource.
 * @member {String} selfLink
 */
AddressGroup.prototype['selfLink'] = undefined;

/**
 * Required. The type of the Address Group. Possible values are \"IPv4\" or \"IPV6\".
 * @member {module:model/AddressGroup.TypeEnum} type
 */
AddressGroup.prototype['type'] = undefined;

/**
 * Output only. The timestamp when the resource was updated.
 * @member {String} updateTime
 */
AddressGroup.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AddressGroup['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "IPV4"
     * @const
     */
    "IPV4": "IPV4",

    /**
     * value: "IPV6"
     * @const
     */
    "IPV6": "IPV6"
};



export default AddressGroup;

