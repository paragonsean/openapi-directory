/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudNetworksecurityV1CertificateProvider from './GoogleCloudNetworksecurityV1CertificateProvider';
import ValidationCA from './ValidationCA';

/**
 * The ClientTlsPolicy model module.
 * @module model/ClientTlsPolicy
 * @version v1
 */
class ClientTlsPolicy {
    /**
     * Constructs a new <code>ClientTlsPolicy</code>.
     * ClientTlsPolicy is a resource that specifies how a client should authenticate connections to backends of a service. This resource itself does not affect configuration unless it is attached to a backend service resource.
     * @alias module:model/ClientTlsPolicy
     */
    constructor() { 
        
        ClientTlsPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientTlsPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientTlsPolicy} obj Optional instance to populate.
     * @return {module:model/ClientTlsPolicy} The populated <code>ClientTlsPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientTlsPolicy();

            if (data.hasOwnProperty('clientCertificate')) {
                obj['clientCertificate'] = GoogleCloudNetworksecurityV1CertificateProvider.constructFromObject(data['clientCertificate']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('serverValidationCa')) {
                obj['serverValidationCa'] = ApiClient.convertToType(data['serverValidationCa'], [ValidationCA]);
            }
            if (data.hasOwnProperty('sni')) {
                obj['sni'] = ApiClient.convertToType(data['sni'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientTlsPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientTlsPolicy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `clientCertificate`
        if (data['clientCertificate']) { // data not null
          GoogleCloudNetworksecurityV1CertificateProvider.validateJSON(data['clientCertificate']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['serverValidationCa']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['serverValidationCa'])) {
                throw new Error("Expected the field `serverValidationCa` to be an array in the JSON data but got " + data['serverValidationCa']);
            }
            // validate the optional field `serverValidationCa` (array)
            for (const item of data['serverValidationCa']) {
                ValidationCA.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sni'] && !(typeof data['sni'] === 'string' || data['sni'] instanceof String)) {
            throw new Error("Expected the field `sni` to be a primitive type in the JSON string but got " + data['sni']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudNetworksecurityV1CertificateProvider} clientCertificate
 */
ClientTlsPolicy.prototype['clientCertificate'] = undefined;

/**
 * Output only. The timestamp when the resource was created.
 * @member {String} createTime
 */
ClientTlsPolicy.prototype['createTime'] = undefined;

/**
 * Optional. Free-text description of the resource.
 * @member {String} description
 */
ClientTlsPolicy.prototype['description'] = undefined;

/**
 * Optional. Set of label tags associated with the resource.
 * @member {Object.<String, String>} labels
 */
ClientTlsPolicy.prototype['labels'] = undefined;

/**
 * Required. Name of the ClientTlsPolicy resource. It matches the pattern `projects/_*_/locations/{location}/clientTlsPolicies/{client_tls_policy}`
 * @member {String} name
 */
ClientTlsPolicy.prototype['name'] = undefined;

/**
 * Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
 * @member {Array.<module:model/ValidationCA>} serverValidationCa
 */
ClientTlsPolicy.prototype['serverValidationCa'] = undefined;

/**
 * Optional. Server Name Indication string to present to the server during TLS handshake. E.g: \"secure.example.com\".
 * @member {String} sni
 */
ClientTlsPolicy.prototype['sni'] = undefined;

/**
 * Output only. The timestamp when the resource was updated.
 * @member {String} updateTime
 */
ClientTlsPolicy.prototype['updateTime'] = undefined;






export default ClientTlsPolicy;

