/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateProviderInstance.h
 *
 * Specification of a TLS certificate provider instance. Workloads may have one or more CertificateProvider instances (plugins) and one of them is enabled and configured by specifying this message. Workloads use the values from this message to locate and load the CertificateProvider instance configuration.
 */

#ifndef OAICertificateProviderInstance_H
#define OAICertificateProviderInstance_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICertificateProviderInstance : public OAIObject {
public:
    OAICertificateProviderInstance();
    OAICertificateProviderInstance(QString json);
    ~OAICertificateProviderInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPluginInstance() const;
    void setPluginInstance(const QString &plugin_instance);
    bool is_plugin_instance_Set() const;
    bool is_plugin_instance_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_plugin_instance;
    bool m_plugin_instance_isSet;
    bool m_plugin_instance_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateProviderInstance)

#endif // OAICertificateProviderInstance_H
