/**
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGatewaySecurityPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGatewaySecurityPolicy::OAIGatewaySecurityPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGatewaySecurityPolicy::OAIGatewaySecurityPolicy() {
    this->initializeModel();
}

OAIGatewaySecurityPolicy::~OAIGatewaySecurityPolicy() {}

void OAIGatewaySecurityPolicy::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_tls_inspection_policy_isSet = false;
    m_tls_inspection_policy_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGatewaySecurityPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGatewaySecurityPolicy::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_tls_inspection_policy_isValid = ::OpenAPI::fromJsonValue(m_tls_inspection_policy, json[QString("tlsInspectionPolicy")]);
    m_tls_inspection_policy_isSet = !json[QString("tlsInspectionPolicy")].isNull() && m_tls_inspection_policy_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGatewaySecurityPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGatewaySecurityPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_tls_inspection_policy_isSet) {
        obj.insert(QString("tlsInspectionPolicy"), ::OpenAPI::toJsonValue(m_tls_inspection_policy));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGatewaySecurityPolicy::getCreateTime() const {
    return m_create_time;
}
void OAIGatewaySecurityPolicy::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGatewaySecurityPolicy::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGatewaySecurityPolicy::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGatewaySecurityPolicy::getDescription() const {
    return m_description;
}
void OAIGatewaySecurityPolicy::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGatewaySecurityPolicy::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGatewaySecurityPolicy::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGatewaySecurityPolicy::getName() const {
    return m_name;
}
void OAIGatewaySecurityPolicy::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGatewaySecurityPolicy::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGatewaySecurityPolicy::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGatewaySecurityPolicy::getTlsInspectionPolicy() const {
    return m_tls_inspection_policy;
}
void OAIGatewaySecurityPolicy::setTlsInspectionPolicy(const QString &tls_inspection_policy) {
    m_tls_inspection_policy = tls_inspection_policy;
    m_tls_inspection_policy_isSet = true;
}

bool OAIGatewaySecurityPolicy::is_tls_inspection_policy_Set() const{
    return m_tls_inspection_policy_isSet;
}

bool OAIGatewaySecurityPolicy::is_tls_inspection_policy_Valid() const{
    return m_tls_inspection_policy_isValid;
}

QString OAIGatewaySecurityPolicy::getUpdateTime() const {
    return m_update_time;
}
void OAIGatewaySecurityPolicy::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGatewaySecurityPolicy::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGatewaySecurityPolicy::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGatewaySecurityPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tls_inspection_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGatewaySecurityPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
