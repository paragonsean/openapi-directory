# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CertificateProviderInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, plugin_instance: str=None):
        """CertificateProviderInstance - a model defined in OpenAPI

        :param plugin_instance: The plugin_instance of this CertificateProviderInstance.
        """
        self.openapi_types = {
            'plugin_instance': str
        }

        self.attribute_map = {
            'plugin_instance': 'pluginInstance'
        }

        self._plugin_instance = plugin_instance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateProviderInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateProviderInstance of this CertificateProviderInstance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plugin_instance(self):
        """Gets the plugin_instance of this CertificateProviderInstance.

        Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.

        :return: The plugin_instance of this CertificateProviderInstance.
        :rtype: str
        """
        return self._plugin_instance

    @plugin_instance.setter
    def plugin_instance(self, plugin_instance):
        """Sets the plugin_instance of this CertificateProviderInstance.

        Required. Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.

        :param plugin_instance: The plugin_instance of this CertificateProviderInstance.
        :type plugin_instance: str
        """

        self._plugin_instance = plugin_instance
