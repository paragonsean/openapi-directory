/*
 * Network Security API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudNetworksecurityV1CertificateProvider;
import org.openapitools.client.model.ValidationCA;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ClientTlsPolicy is a resource that specifies how a client should authenticate connections to backends of a service. This resource itself does not affect configuration unless it is attached to a backend service resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:15.829513-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ClientTlsPolicy {
  public static final String SERIALIZED_NAME_CLIENT_CERTIFICATE = "clientCertificate";
  @SerializedName(SERIALIZED_NAME_CLIENT_CERTIFICATE)
  private GoogleCloudNetworksecurityV1CertificateProvider clientCertificate;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SERVER_VALIDATION_CA = "serverValidationCa";
  @SerializedName(SERIALIZED_NAME_SERVER_VALIDATION_CA)
  private List<ValidationCA> serverValidationCa = new ArrayList<>();

  public static final String SERIALIZED_NAME_SNI = "sni";
  @SerializedName(SERIALIZED_NAME_SNI)
  private String sni;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public ClientTlsPolicy() {
  }

  public ClientTlsPolicy(
     String createTime, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.updateTime = updateTime;
  }

  public ClientTlsPolicy clientCertificate(GoogleCloudNetworksecurityV1CertificateProvider clientCertificate) {
    this.clientCertificate = clientCertificate;
    return this;
  }

  /**
   * Get clientCertificate
   * @return clientCertificate
   */
  @javax.annotation.Nullable
  public GoogleCloudNetworksecurityV1CertificateProvider getClientCertificate() {
    return clientCertificate;
  }

  public void setClientCertificate(GoogleCloudNetworksecurityV1CertificateProvider clientCertificate) {
    this.clientCertificate = clientCertificate;
  }


  /**
   * Output only. The timestamp when the resource was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public ClientTlsPolicy description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Free-text description of the resource.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ClientTlsPolicy labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public ClientTlsPolicy putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. Set of label tags associated with the resource.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public ClientTlsPolicy name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Name of the ClientTlsPolicy resource. It matches the pattern &#x60;projects/_*_/locations/{location}/clientTlsPolicies/{client_tls_policy}&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ClientTlsPolicy serverValidationCa(List<ValidationCA> serverValidationCa) {
    this.serverValidationCa = serverValidationCa;
    return this;
  }

  public ClientTlsPolicy addServerValidationCaItem(ValidationCA serverValidationCaItem) {
    if (this.serverValidationCa == null) {
      this.serverValidationCa = new ArrayList<>();
    }
    this.serverValidationCa.add(serverValidationCaItem);
    return this;
  }

  /**
   * Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
   * @return serverValidationCa
   */
  @javax.annotation.Nullable
  public List<ValidationCA> getServerValidationCa() {
    return serverValidationCa;
  }

  public void setServerValidationCa(List<ValidationCA> serverValidationCa) {
    this.serverValidationCa = serverValidationCa;
  }


  public ClientTlsPolicy sni(String sni) {
    this.sni = sni;
    return this;
  }

  /**
   * Optional. Server Name Indication string to present to the server during TLS handshake. E.g: \&quot;secure.example.com\&quot;.
   * @return sni
   */
  @javax.annotation.Nullable
  public String getSni() {
    return sni;
  }

  public void setSni(String sni) {
    this.sni = sni;
  }


  /**
   * Output only. The timestamp when the resource was updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientTlsPolicy clientTlsPolicy = (ClientTlsPolicy) o;
    return Objects.equals(this.clientCertificate, clientTlsPolicy.clientCertificate) &&
        Objects.equals(this.createTime, clientTlsPolicy.createTime) &&
        Objects.equals(this.description, clientTlsPolicy.description) &&
        Objects.equals(this.labels, clientTlsPolicy.labels) &&
        Objects.equals(this.name, clientTlsPolicy.name) &&
        Objects.equals(this.serverValidationCa, clientTlsPolicy.serverValidationCa) &&
        Objects.equals(this.sni, clientTlsPolicy.sni) &&
        Objects.equals(this.updateTime, clientTlsPolicy.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientCertificate, createTime, description, labels, name, serverValidationCa, sni, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientTlsPolicy {\n");
    sb.append("    clientCertificate: ").append(toIndentedString(clientCertificate)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    serverValidationCa: ").append(toIndentedString(serverValidationCa)).append("\n");
    sb.append("    sni: ").append(toIndentedString(sni)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clientCertificate");
    openapiFields.add("createTime");
    openapiFields.add("description");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("serverValidationCa");
    openapiFields.add("sni");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ClientTlsPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ClientTlsPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClientTlsPolicy is not found in the empty JSON string", ClientTlsPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ClientTlsPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClientTlsPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `clientCertificate`
      if (jsonObj.get("clientCertificate") != null && !jsonObj.get("clientCertificate").isJsonNull()) {
        GoogleCloudNetworksecurityV1CertificateProvider.validateJsonElement(jsonObj.get("clientCertificate"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("serverValidationCa") != null && !jsonObj.get("serverValidationCa").isJsonNull()) {
        JsonArray jsonArrayserverValidationCa = jsonObj.getAsJsonArray("serverValidationCa");
        if (jsonArrayserverValidationCa != null) {
          // ensure the json data is an array
          if (!jsonObj.get("serverValidationCa").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `serverValidationCa` to be an array in the JSON string but got `%s`", jsonObj.get("serverValidationCa").toString()));
          }

          // validate the optional field `serverValidationCa` (array)
          for (int i = 0; i < jsonArrayserverValidationCa.size(); i++) {
            ValidationCA.validateJsonElement(jsonArrayserverValidationCa.get(i));
          };
        }
      }
      if ((jsonObj.get("sni") != null && !jsonObj.get("sni").isJsonNull()) && !jsonObj.get("sni").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sni` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sni").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClientTlsPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClientTlsPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClientTlsPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClientTlsPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<ClientTlsPolicy>() {
           @Override
           public void write(JsonWriter out, ClientTlsPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClientTlsPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ClientTlsPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ClientTlsPolicy
   * @throws IOException if the JSON string is invalid with respect to ClientTlsPolicy
   */
  public static ClientTlsPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClientTlsPolicy.class);
  }

  /**
   * Convert an instance of ClientTlsPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

