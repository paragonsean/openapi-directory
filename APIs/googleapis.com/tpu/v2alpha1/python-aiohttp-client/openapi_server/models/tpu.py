# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.node_spec import NodeSpec
from openapi_server import util


class Tpu(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_spec: List[NodeSpec]=None):
        """Tpu - a model defined in OpenAPI

        :param node_spec: The node_spec of this Tpu.
        """
        self.openapi_types = {
            'node_spec': List[NodeSpec]
        }

        self.attribute_map = {
            'node_spec': 'nodeSpec'
        }

        self._node_spec = node_spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Tpu':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tpu of this Tpu.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_spec(self):
        """Gets the node_spec of this Tpu.

        The TPU node(s) being requested.

        :return: The node_spec of this Tpu.
        :rtype: List[NodeSpec]
        """
        return self._node_spec

    @node_spec.setter
    def node_spec(self, node_spec):
        """Sets the node_spec of this Tpu.

        The TPU node(s) being requested.

        :param node_spec: The node_spec of this Tpu.
        :type node_spec: List[NodeSpec]
        """

        self._node_spec = node_spec
