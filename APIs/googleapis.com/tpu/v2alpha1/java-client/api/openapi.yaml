openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: TPU API provides customers with access to Google TPU technology.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud TPU API
  version: v2alpha1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://tpu.googleapis.com/$discovery/rest?version=v2alpha1
    version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: tpu
externalDocs:
  url: https://cloud.google.com/tpu/
servers:
- url: https://tpu.googleapis.com/
tags:
- name: projects
paths:
  /v2alpha1/{name}:
    delete:
      description: Deletes a QueuedResource TPU instance.
      operationId: tpu.projects.locations.queuedResources.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The resource name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to true, all running nodes belonging to this queued resource\
          \ will be deleted first and then the queued resource will be deleted. Otherwise\
          \ (i.e. force=false), the queued resource will only be deleted if its nodes\
          \ have already been deleted or the queued resource is in the ACCEPTED, FAILED,\
          \ or SUSPENDED state."
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Idempotent request UUID.
        explode: true
        in: query
        name: requestId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    get:
      description: Gets a runtime version.
      operationId: tpu.projects.locations.runtimeVersions.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The resource name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeVersion'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    patch:
      description: Updates the configurations of a node.
      operationId: tpu.projects.locations.nodes.patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Output only. Immutable. The name of the TPU.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. Mask of fields from Node to update. Supported fields:\
          \ [description, tags, labels, metadata, network_config.enable_external_ips]."
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2alpha1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: tpu.projects.locations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The resource that owns the locations collection, if applicable."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "A filter to narrow down results to a preferred subset. The filtering\
          \ language accepts strings like `\"displayName=tokyo\"`, and is documented\
          \ in more detail in [AIP-160](https://google.aip.dev/160)."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of results to return. If not set, the service\
          \ selects a default."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A page token received from the `next_page_token` field in the
          response. Send that page token to receive the subsequent page.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v2alpha1/{name}/operations:
    get:
      description: "Lists operations that match the specified filter in the request.\
        \ If the server doesn't support this method, it returns `UNIMPLEMENTED`."
      operationId: tpu.projects.locations.operations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation's parent resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The standard list filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The standard list page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: The standard list page token.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v2alpha1/{name}:cancel:
    post:
      description: "Starts asynchronous cancellation on a long-running operation.\
        \ The server makes a best effort to cancel the operation, but success is not\
        \ guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.\
        \ Clients can use Operations.GetOperation or other methods to check whether\
        \ the cancellation succeeded or whether the operation completed despite cancellation.\
        \ On successful cancellation, the operation is not deleted; instead, it becomes\
        \ an operation with an Operation.error value with a google.rpc.Status.code\
        \ of 1, corresponding to `Code.CANCELLED`."
      operationId: tpu.projects.locations.operations.cancel
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to be cancelled.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v2alpha1/{name}:getGuestAttributes:
    post:
      description: Retrieves the guest attributes for the node.
      operationId: tpu.projects.locations.nodes.getGuestAttributes
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The resource name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGuestAttributesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGuestAttributesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2alpha1/{name}:reset:
    post:
      description: Resets a QueuedResource TPU instance
      operationId: tpu.projects.locations.queuedResources.reset
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the queued resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetQueuedResourceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2alpha1/{name}:simulateMaintenanceEvent:
    post:
      description: Simulates a maintenance event.
      operationId: tpu.projects.locations.nodes.simulateMaintenanceEvent
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The resource name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulateMaintenanceEventRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2alpha1/{name}:start:
    post:
      description: Starts a node.
      operationId: tpu.projects.locations.nodes.start
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The resource name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartNodeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2alpha1/{name}:stop:
    post:
      description: Stops a node. This operation is only available with single TPU
        nodes.
      operationId: tpu.projects.locations.nodes.stop
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The resource name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopNodeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2alpha1/{parent}/acceleratorTypes:
    get:
      description: Lists accelerator types supported by this API.
      operationId: tpu.projects.locations.acceleratorTypes.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The parent resource name.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: List filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort results.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous List request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAcceleratorTypesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v2alpha1/{parent}/nodes:
    get:
      description: Lists nodes.
      operationId: tpu.projects.locations.nodes.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The parent resource name.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of items to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous List request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    post:
      description: Creates a node.
      operationId: tpu.projects.locations.nodes.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The parent resource name.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The unqualified resource name.
        explode: true
        in: query
        name: nodeId
        required: false
        schema:
          type: string
        style: form
      - description: Idempotent request UUID.
        explode: true
        in: query
        name: requestId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2alpha1/{parent}/queuedResources:
    get:
      description: Lists queued resources.
      operationId: tpu.projects.locations.queuedResources.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The parent resource name.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of items to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous List request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueuedResourcesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    post:
      description: Creates a QueuedResource TPU instance.
      operationId: tpu.projects.locations.queuedResources.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The parent resource name.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The unqualified resource name. Should follow the `^[A-Za-z0-9_.~+%-]+$`\
          \ regex format."
        explode: true
        in: query
        name: queuedResourceId
        required: false
        schema:
          type: string
        style: form
      - description: Idempotent request UUID.
        explode: true
        in: query
        name: requestId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueuedResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2alpha1/{parent}/reservations:
    get:
      description: Retrieves the reservations for the given project in the given location.
      operationId: tpu.projects.locations.reservations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The parent for reservations.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of items to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous List request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReservationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v2alpha1/{parent}/runtimeVersions:
    get:
      description: Lists runtime versions supported by this API.
      operationId: tpu.projects.locations.runtimeVersions.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The parent resource name.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: List filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort results.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous List request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimeVersionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v2alpha1/{parent}:generateServiceIdentity:
    post:
      description: Generates the Cloud TPU service identity for the project.
      operationId: tpu.projects.locations.generateServiceIdentity
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The parent resource name.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateServiceIdentityRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateServiceIdentityResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    AcceleratorConfig:
      description: A TPU accelerator configuration.
      example:
        topology: topology
        type: TYPE_UNSPECIFIED
      properties:
        topology:
          description: Required. Topology of TPU in chips.
          type: string
        type:
          description: Required. Type of TPU.
          enum:
          - TYPE_UNSPECIFIED
          - V2
          - V3
          - V4
          - V5P
          type: string
      type: object
    AcceleratorType:
      description: A accelerator type that a Node can be configured with.
      example:
        name: name
        acceleratorConfigs:
        - topology: topology
          type: TYPE_UNSPECIFIED
        - topology: topology
          type: TYPE_UNSPECIFIED
        type: type
      properties:
        acceleratorConfigs:
          description: The accelerator config.
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
          type: array
        name:
          description: The resource name.
          type: string
        type:
          description: The accelerator type.
          type: string
      type: object
    AcceptedData:
      description: Further data for the accepted state.
      properties: {}
      type: object
    AccessConfig:
      description: An access config attached to the TPU worker.
      example:
        externalIp: externalIp
      properties:
        externalIp:
          description: Output only. An external IP address associated with the TPU
            worker.
          readOnly: true
          type: string
      type: object
    ActiveData:
      description: Further data for the active state.
      properties: {}
      type: object
    AttachedDisk:
      description: "A node-attached disk resource. Next ID: 8;"
      example:
        mode: DISK_MODE_UNSPECIFIED
        sourceDisk: sourceDisk
      properties:
        mode:
          description: "The mode in which to attach this disk. If not specified, the\
            \ default is READ_WRITE mode. Only applicable to data_disks."
          enum:
          - DISK_MODE_UNSPECIFIED
          - READ_WRITE
          - READ_ONLY
          type: string
        sourceDisk:
          description: "Specifies the full path to an existing disk. For example:\
            \ \"projects/my-project/zones/us-central1-c/disks/my-disk\"."
          type: string
      type: object
    BestEffort:
      description: BestEffort tier definition.
      properties: {}
      type: object
    BootDiskConfig:
      description: Boot disk configurations.
      example:
        enableConfidentialCompute: true
        customerEncryptionKey:
          kmsKeyName: kmsKeyName
      properties:
        customerEncryptionKey:
          $ref: '#/components/schemas/CustomerEncryptionKey'
        enableConfidentialCompute:
          description: Optional. Whether the boot disk will be created with confidential
            compute mode.
          type: boolean
      type: object
    CreatingData:
      description: Further data for the creating state.
      properties: {}
      type: object
    CustomerEncryptionKey:
      description: Customer's encryption key.
      example:
        kmsKeyName: kmsKeyName
      properties:
        kmsKeyName:
          description: "The name of the encryption key that is stored in Google Cloud\
            \ KMS. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/\
            \ key_region/cryptoKeys/key The fully-qualifed key name may be returned\
            \ for resource GET requests. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/\
            \ key_region/cryptoKeys/key /cryptoKeyVersions/1 "
          type: string
      type: object
    DeletingData:
      description: Further data for the deleting state.
      properties: {}
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    FailedData:
      description: Further data for the failed state.
      example:
        error:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
      properties:
        error:
          $ref: '#/components/schemas/Status'
      type: object
    GenerateServiceIdentityRequest:
      description: Request for GenerateServiceIdentity.
      properties: {}
      type: object
    GenerateServiceIdentityResponse:
      description: Response for GenerateServiceIdentity.
      example:
        identity:
          email: email
      properties:
        identity:
          $ref: '#/components/schemas/ServiceIdentity'
      type: object
    GetGuestAttributesRequest:
      description: Request for GetGuestAttributes.
      example:
        queryPath: queryPath
        workerIds:
        - workerIds
        - workerIds
      properties:
        queryPath:
          description: The guest attributes path to be queried.
          type: string
        workerIds:
          description: "The 0-based worker ID. If it is empty, all workers' GuestAttributes\
            \ will be returned."
          items:
            type: string
          type: array
      type: object
    GetGuestAttributesResponse:
      description: Response for GetGuestAttributes.
      example:
        guestAttributes:
        - queryPath: queryPath
          queryValue:
            items:
            - namespace: namespace
              value: value
              key: key
            - namespace: namespace
              value: value
              key: key
        - queryPath: queryPath
          queryValue:
            items:
            - namespace: namespace
              value: value
              key: key
            - namespace: namespace
              value: value
              key: key
      properties:
        guestAttributes:
          description: The guest attributes for the TPU workers.
          items:
            $ref: '#/components/schemas/GuestAttributes'
          type: array
      type: object
    Guaranteed:
      description: Guaranteed tier definition.
      example:
        minDuration: minDuration
        reserved: true
      properties:
        minDuration:
          description: "Optional. Defines the minimum duration of the guarantee. If\
            \ specified, the requested resources will only be provisioned if they\
            \ can be allocated for at least the given duration."
          format: google-duration
          type: string
        reserved:
          description: Optional. Specifies the request should be scheduled on reserved
            capacity.
          type: boolean
      type: object
    GuestAttributes:
      description: A guest attributes.
      example:
        queryPath: queryPath
        queryValue:
          items:
          - namespace: namespace
            value: value
            key: key
          - namespace: namespace
            value: value
            key: key
      properties:
        queryPath:
          description: The path to be queried. This can be the default namespace ('/')
            or a nested namespace ('/\/') or a specified key ('/\/\')
          type: string
        queryValue:
          $ref: '#/components/schemas/GuestAttributesValue'
      type: object
    GuestAttributesEntry:
      description: A guest attributes namespace/key/value entry.
      example:
        namespace: namespace
        value: value
        key: key
      properties:
        key:
          description: Key for the guest attribute entry.
          type: string
        namespace:
          description: Namespace for the guest attribute entry.
          type: string
        value:
          description: Value for the guest attribute entry.
          type: string
      type: object
    GuestAttributesValue:
      description: Array of guest attribute namespace/key/value tuples.
      example:
        items:
        - namespace: namespace
          value: value
          key: key
        - namespace: namespace
          value: value
          key: key
      properties:
        items:
          description: The list of guest attributes entries.
          items:
            $ref: '#/components/schemas/GuestAttributesEntry'
          type: array
      type: object
    Interval:
      description: "Represents a time interval, encoded as a Timestamp start (inclusive)\
        \ and a Timestamp end (exclusive). The start must be less than or equal to\
        \ the end. When the start equals the end, the interval is empty (matches no\
        \ time). When both start and end are unspecified, the interval matches any\
        \ time."
      example:
        startTime: startTime
        endTime: endTime
      properties:
        endTime:
          description: "Optional. Exclusive end of the interval. If specified, a Timestamp\
            \ matching this interval will have to be before the end."
          format: google-datetime
          type: string
        startTime:
          description: "Optional. Inclusive start of the interval. If specified, a\
            \ Timestamp matching this interval will have to be the same or after the\
            \ start."
          format: google-datetime
          type: string
      type: object
    ListAcceleratorTypesResponse:
      description: Response for ListAcceleratorTypes.
      example:
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
        acceleratorTypes:
        - name: name
          acceleratorConfigs:
          - topology: topology
            type: TYPE_UNSPECIFIED
          - topology: topology
            type: TYPE_UNSPECIFIED
          type: type
        - name: name
          acceleratorConfigs:
          - topology: topology
            type: TYPE_UNSPECIFIED
          - topology: topology
            type: TYPE_UNSPECIFIED
          type: type
      properties:
        acceleratorTypes:
          description: The listed nodes.
          items:
            $ref: '#/components/schemas/AcceleratorType'
          type: array
        nextPageToken:
          description: The next page token or empty if none.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      example:
        nextPageToken: nextPageToken
        locations:
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
      properties:
        locations:
          description: A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListNodesResponse:
      description: Response for ListNodes.
      example:
        nodes:
        - metadata:
            key: metadata
          runtimeVersion: runtimeVersion
          description: description
          multisliceNode: true
          acceleratorType: acceleratorType
          apiVersion: API_VERSION_UNSPECIFIED
          id: id
          state: STATE_UNSPECIFIED
          schedulingConfig:
            preemptible: true
            reserved: true
            spot: true
          shieldedInstanceConfig:
            enableSecureBoot: true
          cidrBlock: cidrBlock
          networkConfig:
            queueCount: 0
            canIpForward: true
            enableExternalIps: true
            subnetwork: subnetwork
            network: network
          bootDiskConfig:
            enableConfidentialCompute: true
            customerEncryptionKey:
              kmsKeyName: kmsKeyName
          health: HEALTH_UNSPECIFIED
          serviceAccount:
            scope:
            - scope
            - scope
            email: email
          healthDescription: healthDescription
          autocheckpointEnabled: true
          labels:
            key: labels
          tags:
          - tags
          - tags
          symptoms:
          - workerId: workerId
            createTime: createTime
            details: details
            symptomType: SYMPTOM_TYPE_UNSPECIFIED
          - workerId: workerId
            createTime: createTime
            details: details
            symptomType: SYMPTOM_TYPE_UNSPECIFIED
          networkEndpoints:
          - port: 6
            ipAddress: ipAddress
            accessConfig:
              externalIp: externalIp
          - port: 6
            ipAddress: ipAddress
            accessConfig:
              externalIp: externalIp
          acceleratorConfig:
            topology: topology
            type: TYPE_UNSPECIFIED
          createTime: createTime
          name: name
          dataDisks:
          - mode: DISK_MODE_UNSPECIFIED
            sourceDisk: sourceDisk
          - mode: DISK_MODE_UNSPECIFIED
            sourceDisk: sourceDisk
          queuedResource: queuedResource
        - metadata:
            key: metadata
          runtimeVersion: runtimeVersion
          description: description
          multisliceNode: true
          acceleratorType: acceleratorType
          apiVersion: API_VERSION_UNSPECIFIED
          id: id
          state: STATE_UNSPECIFIED
          schedulingConfig:
            preemptible: true
            reserved: true
            spot: true
          shieldedInstanceConfig:
            enableSecureBoot: true
          cidrBlock: cidrBlock
          networkConfig:
            queueCount: 0
            canIpForward: true
            enableExternalIps: true
            subnetwork: subnetwork
            network: network
          bootDiskConfig:
            enableConfidentialCompute: true
            customerEncryptionKey:
              kmsKeyName: kmsKeyName
          health: HEALTH_UNSPECIFIED
          serviceAccount:
            scope:
            - scope
            - scope
            email: email
          healthDescription: healthDescription
          autocheckpointEnabled: true
          labels:
            key: labels
          tags:
          - tags
          - tags
          symptoms:
          - workerId: workerId
            createTime: createTime
            details: details
            symptomType: SYMPTOM_TYPE_UNSPECIFIED
          - workerId: workerId
            createTime: createTime
            details: details
            symptomType: SYMPTOM_TYPE_UNSPECIFIED
          networkEndpoints:
          - port: 6
            ipAddress: ipAddress
            accessConfig:
              externalIp: externalIp
          - port: 6
            ipAddress: ipAddress
            accessConfig:
              externalIp: externalIp
          acceleratorConfig:
            topology: topology
            type: TYPE_UNSPECIFIED
          createTime: createTime
          name: name
          dataDisks:
          - mode: DISK_MODE_UNSPECIFIED
            sourceDisk: sourceDisk
          - mode: DISK_MODE_UNSPECIFIED
            sourceDisk: sourceDisk
          queuedResource: queuedResource
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The next page token or empty if none.
          type: string
        nodes:
          description: The listed nodes.
          items:
            $ref: '#/components/schemas/Node'
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      example:
        operations:
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    ListQueuedResourcesResponse:
      description: Response for ListQueuedResources.
      example:
        queuedResources:
        - bestEffort: "{}"
          createTime: createTime
          queueingPolicy:
            validAfterDuration: validAfterDuration
            validInterval:
              startTime: startTime
              endTime: endTime
            validUntilDuration: validUntilDuration
            validUntilTime: validUntilTime
            validAfterTime: validAfterTime
          spot: "{}"
          name: name
          tpu:
            nodeSpec:
            - node:
                metadata:
                  key: metadata
                runtimeVersion: runtimeVersion
                description: description
                multisliceNode: true
                acceleratorType: acceleratorType
                apiVersion: API_VERSION_UNSPECIFIED
                id: id
                state: STATE_UNSPECIFIED
                schedulingConfig:
                  preemptible: true
                  reserved: true
                  spot: true
                shieldedInstanceConfig:
                  enableSecureBoot: true
                cidrBlock: cidrBlock
                networkConfig:
                  queueCount: 0
                  canIpForward: true
                  enableExternalIps: true
                  subnetwork: subnetwork
                  network: network
                bootDiskConfig:
                  enableConfidentialCompute: true
                  customerEncryptionKey:
                    kmsKeyName: kmsKeyName
                health: HEALTH_UNSPECIFIED
                serviceAccount:
                  scope:
                  - scope
                  - scope
                  email: email
                healthDescription: healthDescription
                autocheckpointEnabled: true
                labels:
                  key: labels
                tags:
                - tags
                - tags
                symptoms:
                - workerId: workerId
                  createTime: createTime
                  details: details
                  symptomType: SYMPTOM_TYPE_UNSPECIFIED
                - workerId: workerId
                  createTime: createTime
                  details: details
                  symptomType: SYMPTOM_TYPE_UNSPECIFIED
                networkEndpoints:
                - port: 6
                  ipAddress: ipAddress
                  accessConfig:
                    externalIp: externalIp
                - port: 6
                  ipAddress: ipAddress
                  accessConfig:
                    externalIp: externalIp
                acceleratorConfig:
                  topology: topology
                  type: TYPE_UNSPECIFIED
                createTime: createTime
                name: name
                dataDisks:
                - mode: DISK_MODE_UNSPECIFIED
                  sourceDisk: sourceDisk
                - mode: DISK_MODE_UNSPECIFIED
                  sourceDisk: sourceDisk
                queuedResource: queuedResource
              parent: parent
              multiNodeParams:
                nodeIdPrefix: nodeIdPrefix
                nodeCount: 0
              nodeId: nodeId
            - node:
                metadata:
                  key: metadata
                runtimeVersion: runtimeVersion
                description: description
                multisliceNode: true
                acceleratorType: acceleratorType
                apiVersion: API_VERSION_UNSPECIFIED
                id: id
                state: STATE_UNSPECIFIED
                schedulingConfig:
                  preemptible: true
                  reserved: true
                  spot: true
                shieldedInstanceConfig:
                  enableSecureBoot: true
                cidrBlock: cidrBlock
                networkConfig:
                  queueCount: 0
                  canIpForward: true
                  enableExternalIps: true
                  subnetwork: subnetwork
                  network: network
                bootDiskConfig:
                  enableConfidentialCompute: true
                  customerEncryptionKey:
                    kmsKeyName: kmsKeyName
                health: HEALTH_UNSPECIFIED
                serviceAccount:
                  scope:
                  - scope
                  - scope
                  email: email
                healthDescription: healthDescription
                autocheckpointEnabled: true
                labels:
                  key: labels
                tags:
                - tags
                - tags
                symptoms:
                - workerId: workerId
                  createTime: createTime
                  details: details
                  symptomType: SYMPTOM_TYPE_UNSPECIFIED
                - workerId: workerId
                  createTime: createTime
                  details: details
                  symptomType: SYMPTOM_TYPE_UNSPECIFIED
                networkEndpoints:
                - port: 6
                  ipAddress: ipAddress
                  accessConfig:
                    externalIp: externalIp
                - port: 6
                  ipAddress: ipAddress
                  accessConfig:
                    externalIp: externalIp
                acceleratorConfig:
                  topology: topology
                  type: TYPE_UNSPECIFIED
                createTime: createTime
                name: name
                dataDisks:
                - mode: DISK_MODE_UNSPECIFIED
                  sourceDisk: sourceDisk
                - mode: DISK_MODE_UNSPECIFIED
                  sourceDisk: sourceDisk
                queuedResource: queuedResource
              parent: parent
              multiNodeParams:
                nodeIdPrefix: nodeIdPrefix
                nodeCount: 0
              nodeId: nodeId
          guaranteed:
            minDuration: minDuration
            reserved: true
          state:
            deletingData: "{}"
            suspendedData: "{}"
            suspendingData: "{}"
            acceptedData: "{}"
            creatingData: "{}"
            state: STATE_UNSPECIFIED
            stateInitiator: STATE_INITIATOR_UNSPECIFIED
            activeData: "{}"
            provisioningData: "{}"
            failedData:
              error:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
          reservationName: reservationName
        - bestEffort: "{}"
          createTime: createTime
          queueingPolicy:
            validAfterDuration: validAfterDuration
            validInterval:
              startTime: startTime
              endTime: endTime
            validUntilDuration: validUntilDuration
            validUntilTime: validUntilTime
            validAfterTime: validAfterTime
          spot: "{}"
          name: name
          tpu:
            nodeSpec:
            - node:
                metadata:
                  key: metadata
                runtimeVersion: runtimeVersion
                description: description
                multisliceNode: true
                acceleratorType: acceleratorType
                apiVersion: API_VERSION_UNSPECIFIED
                id: id
                state: STATE_UNSPECIFIED
                schedulingConfig:
                  preemptible: true
                  reserved: true
                  spot: true
                shieldedInstanceConfig:
                  enableSecureBoot: true
                cidrBlock: cidrBlock
                networkConfig:
                  queueCount: 0
                  canIpForward: true
                  enableExternalIps: true
                  subnetwork: subnetwork
                  network: network
                bootDiskConfig:
                  enableConfidentialCompute: true
                  customerEncryptionKey:
                    kmsKeyName: kmsKeyName
                health: HEALTH_UNSPECIFIED
                serviceAccount:
                  scope:
                  - scope
                  - scope
                  email: email
                healthDescription: healthDescription
                autocheckpointEnabled: true
                labels:
                  key: labels
                tags:
                - tags
                - tags
                symptoms:
                - workerId: workerId
                  createTime: createTime
                  details: details
                  symptomType: SYMPTOM_TYPE_UNSPECIFIED
                - workerId: workerId
                  createTime: createTime
                  details: details
                  symptomType: SYMPTOM_TYPE_UNSPECIFIED
                networkEndpoints:
                - port: 6
                  ipAddress: ipAddress
                  accessConfig:
                    externalIp: externalIp
                - port: 6
                  ipAddress: ipAddress
                  accessConfig:
                    externalIp: externalIp
                acceleratorConfig:
                  topology: topology
                  type: TYPE_UNSPECIFIED
                createTime: createTime
                name: name
                dataDisks:
                - mode: DISK_MODE_UNSPECIFIED
                  sourceDisk: sourceDisk
                - mode: DISK_MODE_UNSPECIFIED
                  sourceDisk: sourceDisk
                queuedResource: queuedResource
              parent: parent
              multiNodeParams:
                nodeIdPrefix: nodeIdPrefix
                nodeCount: 0
              nodeId: nodeId
            - node:
                metadata:
                  key: metadata
                runtimeVersion: runtimeVersion
                description: description
                multisliceNode: true
                acceleratorType: acceleratorType
                apiVersion: API_VERSION_UNSPECIFIED
                id: id
                state: STATE_UNSPECIFIED
                schedulingConfig:
                  preemptible: true
                  reserved: true
                  spot: true
                shieldedInstanceConfig:
                  enableSecureBoot: true
                cidrBlock: cidrBlock
                networkConfig:
                  queueCount: 0
                  canIpForward: true
                  enableExternalIps: true
                  subnetwork: subnetwork
                  network: network
                bootDiskConfig:
                  enableConfidentialCompute: true
                  customerEncryptionKey:
                    kmsKeyName: kmsKeyName
                health: HEALTH_UNSPECIFIED
                serviceAccount:
                  scope:
                  - scope
                  - scope
                  email: email
                healthDescription: healthDescription
                autocheckpointEnabled: true
                labels:
                  key: labels
                tags:
                - tags
                - tags
                symptoms:
                - workerId: workerId
                  createTime: createTime
                  details: details
                  symptomType: SYMPTOM_TYPE_UNSPECIFIED
                - workerId: workerId
                  createTime: createTime
                  details: details
                  symptomType: SYMPTOM_TYPE_UNSPECIFIED
                networkEndpoints:
                - port: 6
                  ipAddress: ipAddress
                  accessConfig:
                    externalIp: externalIp
                - port: 6
                  ipAddress: ipAddress
                  accessConfig:
                    externalIp: externalIp
                acceleratorConfig:
                  topology: topology
                  type: TYPE_UNSPECIFIED
                createTime: createTime
                name: name
                dataDisks:
                - mode: DISK_MODE_UNSPECIFIED
                  sourceDisk: sourceDisk
                - mode: DISK_MODE_UNSPECIFIED
                  sourceDisk: sourceDisk
                queuedResource: queuedResource
              parent: parent
              multiNodeParams:
                nodeIdPrefix: nodeIdPrefix
                nodeCount: 0
              nodeId: nodeId
          guaranteed:
            minDuration: minDuration
            reserved: true
          state:
            deletingData: "{}"
            suspendedData: "{}"
            suspendingData: "{}"
            acceptedData: "{}"
            creatingData: "{}"
            state: STATE_UNSPECIFIED
            stateInitiator: STATE_INITIATOR_UNSPECIFIED
            activeData: "{}"
            provisioningData: "{}"
            failedData:
              error:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
          reservationName: reservationName
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The next page token or empty if none.
          type: string
        queuedResources:
          description: The listed queued resources.
          items:
            $ref: '#/components/schemas/QueuedResource'
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListReservationsResponse:
      description: Response for ListReservations.
      example:
        reservations:
        - standard:
            size: 0
            usage:
              total: total
            interval:
              startTime: startTime
              endTime: endTime
            capacityUnits: CAPACITY_UNITS_UNSPECIFIED
            resourceType: resourceType
          name: name
        - standard:
            size: 0
            usage:
              total: total
            interval:
              startTime: startTime
              endTime: endTime
            capacityUnits: CAPACITY_UNITS_UNSPECIFIED
            resourceType: resourceType
          name: name
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The next page token or empty if none.
          type: string
        reservations:
          description: The listed reservations.
          items:
            $ref: '#/components/schemas/Reservation'
          type: array
      type: object
    ListRuntimeVersionsResponse:
      description: Response for ListRuntimeVersions.
      example:
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
        runtimeVersions:
        - name: name
          version: version
        - name: name
          version: version
      properties:
        nextPageToken:
          description: The next page token or empty if none.
          type: string
        runtimeVersions:
          description: The listed nodes.
          items:
            $ref: '#/components/schemas/RuntimeVersion'
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      example:
        metadata:
          key: ""
        displayName: displayName
        locationId: locationId
        name: name
        labels:
          key: labels
      properties:
        displayName:
          description: "The friendly name for this location, typically a nearby city\
            \ name. For example, \"Tokyo\"."
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Cross-service attributes for the location. For example {\"\
            cloud.googleapis.com/region\": \"us-east1\"}"
          type: object
        locationId:
          description: "The canonical id for this location. For example: `\"us-east1\"\
            `."
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: Service-specific metadata. For example the available capacity
            at the given location.
          type: object
        name:
          description: "Resource name for the location, which may vary between implementations.\
            \ For example: `\"projects/example-project/locations/us-east1\"`"
          type: string
      type: object
    MultiNodeParams:
      description: Parameters to specify for multi-node QueuedResource requests. This
        field must be populated in case of multi-node requests instead of node_id.
        It's an error to specify both node_id and multi_node_params.
      example:
        nodeIdPrefix: nodeIdPrefix
        nodeCount: 0
      properties:
        nodeCount:
          description: Required. Number of nodes with this spec. The system will attempt
            to provison "node_count" nodes as part of the request. This needs to be
            > 1.
          format: int32
          type: integer
        nodeIdPrefix:
          description: "Prefix of node_ids in case of multi-node request Should follow\
            \ the `^[A-Za-z0-9_.~+%-]+$` regex format. If node_count = 3 and node_id_prefix\
            \ = \"np\", node ids of nodes created will be \"np-0\", \"np-1\", \"np-2\"\
            . If this field is not provided we use queued_resource_id as the node_id_prefix."
          type: string
      type: object
    NetworkConfig:
      description: Network related configurations.
      example:
        queueCount: 0
        canIpForward: true
        enableExternalIps: true
        subnetwork: subnetwork
        network: network
      properties:
        canIpForward:
          description: Allows the TPU node to send and receive packets with non-matching
            destination or source IPs. This is required if you plan to use the TPU
            workers to forward routes.
          type: boolean
        enableExternalIps:
          description: "Indicates that external IP addresses would be associated with\
            \ the TPU workers. If set to false, the specified subnetwork or network\
            \ should have Private Google Access enabled."
          type: boolean
        network:
          description: "The name of the network for the TPU node. It must be a preexisting\
            \ Google Compute Engine network. If none is provided, \"default\" will\
            \ be used."
          type: string
        queueCount:
          description: Optional. Specifies networking queue count for TPU VM instance's
            network interface.
          format: int32
          type: integer
        subnetwork:
          description: "The name of the subnetwork for the TPU node. It must be a\
            \ preexisting Google Compute Engine subnetwork. If none is provided, \"\
            default\" will be used."
          type: string
      type: object
    NetworkEndpoint:
      description: A network endpoint over which a TPU worker can be reached.
      example:
        port: 6
        ipAddress: ipAddress
        accessConfig:
          externalIp: externalIp
      properties:
        accessConfig:
          $ref: '#/components/schemas/AccessConfig'
        ipAddress:
          description: The internal IP address of this network endpoint.
          type: string
        port:
          description: The port of this network endpoint.
          format: int32
          type: integer
      type: object
    Node:
      description: A TPU instance.
      example:
        metadata:
          key: metadata
        runtimeVersion: runtimeVersion
        description: description
        multisliceNode: true
        acceleratorType: acceleratorType
        apiVersion: API_VERSION_UNSPECIFIED
        id: id
        state: STATE_UNSPECIFIED
        schedulingConfig:
          preemptible: true
          reserved: true
          spot: true
        shieldedInstanceConfig:
          enableSecureBoot: true
        cidrBlock: cidrBlock
        networkConfig:
          queueCount: 0
          canIpForward: true
          enableExternalIps: true
          subnetwork: subnetwork
          network: network
        bootDiskConfig:
          enableConfidentialCompute: true
          customerEncryptionKey:
            kmsKeyName: kmsKeyName
        health: HEALTH_UNSPECIFIED
        serviceAccount:
          scope:
          - scope
          - scope
          email: email
        healthDescription: healthDescription
        autocheckpointEnabled: true
        labels:
          key: labels
        tags:
        - tags
        - tags
        symptoms:
        - workerId: workerId
          createTime: createTime
          details: details
          symptomType: SYMPTOM_TYPE_UNSPECIFIED
        - workerId: workerId
          createTime: createTime
          details: details
          symptomType: SYMPTOM_TYPE_UNSPECIFIED
        networkEndpoints:
        - port: 6
          ipAddress: ipAddress
          accessConfig:
            externalIp: externalIp
        - port: 6
          ipAddress: ipAddress
          accessConfig:
            externalIp: externalIp
        acceleratorConfig:
          topology: topology
          type: TYPE_UNSPECIFIED
        createTime: createTime
        name: name
        dataDisks:
        - mode: DISK_MODE_UNSPECIFIED
          sourceDisk: sourceDisk
        - mode: DISK_MODE_UNSPECIFIED
          sourceDisk: sourceDisk
        queuedResource: queuedResource
      properties:
        acceleratorConfig:
          $ref: '#/components/schemas/AcceleratorConfig'
        acceleratorType:
          description: The type of hardware accelerators associated with this node.
          type: string
        apiVersion:
          description: Output only. The API version that created this Node.
          enum:
          - API_VERSION_UNSPECIFIED
          - V1_ALPHA1
          - V1
          - V2_ALPHA1
          readOnly: true
          type: string
        autocheckpointEnabled:
          description: Optional. Whether Autocheckpoint is enabled.
          type: boolean
        bootDiskConfig:
          $ref: '#/components/schemas/BootDiskConfig'
        cidrBlock:
          description: "The CIDR block that the TPU node will use when selecting an\
            \ IP address. This CIDR block must be a /29 block; the Compute Engine\
            \ networks API forbids a smaller block, and using a larger block would\
            \ be wasteful (a node can only consume one IP address). Errors will occur\
            \ if the CIDR block has already been used for a currently existing TPU\
            \ node, the CIDR block conflicts with any subnetworks in the user's provided\
            \ network, or the provided network is peered with another network that\
            \ is using that CIDR block."
          type: string
        createTime:
          description: Output only. The time when the node was created.
          format: google-datetime
          readOnly: true
          type: string
        dataDisks:
          description: The additional data disks for the Node.
          items:
            $ref: '#/components/schemas/AttachedDisk'
          type: array
        description:
          description: The user-supplied description of the TPU. Maximum of 512 characters.
          type: string
        health:
          description: The health status of the TPU node.
          enum:
          - HEALTH_UNSPECIFIED
          - HEALTHY
          - TIMEOUT
          - UNHEALTHY_TENSORFLOW
          - UNHEALTHY_MAINTENANCE
          type: string
        healthDescription:
          description: "Output only. If this field is populated, it contains a description\
            \ of why the TPU Node is unhealthy."
          readOnly: true
          type: string
        id:
          description: Output only. The unique identifier for the TPU Node.
          format: int64
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Resource labels to represent user-provided metadata.
          type: object
        metadata:
          additionalProperties:
            type: string
          description: Custom metadata to apply to the TPU Node. Can set startup-script
            and shutdown-script
          type: object
        multisliceNode:
          description: Output only. Whether the Node belongs to a Multislice group.
          readOnly: true
          type: boolean
        name:
          description: Output only. Immutable. The name of the TPU.
          readOnly: true
          type: string
        networkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        networkEndpoints:
          description: Output only. The network endpoints where TPU workers can be
            accessed and sent work. It is recommended that runtime clients of the
            node reach out to the 0th entry in this map first.
          items:
            $ref: '#/components/schemas/NetworkEndpoint'
          readOnly: true
          type: array
        queuedResource:
          description: Output only. The qualified name of the QueuedResource that
            requested this Node.
          readOnly: true
          type: string
        runtimeVersion:
          description: Required. The runtime version running in the Node.
          type: string
        schedulingConfig:
          $ref: '#/components/schemas/SchedulingConfig'
        serviceAccount:
          $ref: '#/components/schemas/ServiceAccount'
        shieldedInstanceConfig:
          $ref: '#/components/schemas/ShieldedInstanceConfig'
        state:
          description: Output only. The current state for the TPU Node.
          enum:
          - STATE_UNSPECIFIED
          - CREATING
          - READY
          - RESTARTING
          - REIMAGING
          - DELETING
          - REPAIRING
          - STOPPED
          - STOPPING
          - STARTING
          - PREEMPTED
          - TERMINATED
          - HIDING
          - HIDDEN
          - UNHIDING
          readOnly: true
          type: string
        symptoms:
          description: Output only. The Symptoms that have occurred to the TPU Node.
          items:
            $ref: '#/components/schemas/Symptom'
          readOnly: true
          type: array
        tags:
          description: Tags to apply to the TPU Node. Tags are used to identify valid
            sources or targets for network firewalls.
          items:
            type: string
          type: array
      type: object
    NodeSpec:
      description: Details of the TPU node(s) being requested. Users can request either
        a single node or multiple nodes. NodeSpec provides the specification for node(s)
        to be created.
      example:
        node:
          metadata:
            key: metadata
          runtimeVersion: runtimeVersion
          description: description
          multisliceNode: true
          acceleratorType: acceleratorType
          apiVersion: API_VERSION_UNSPECIFIED
          id: id
          state: STATE_UNSPECIFIED
          schedulingConfig:
            preemptible: true
            reserved: true
            spot: true
          shieldedInstanceConfig:
            enableSecureBoot: true
          cidrBlock: cidrBlock
          networkConfig:
            queueCount: 0
            canIpForward: true
            enableExternalIps: true
            subnetwork: subnetwork
            network: network
          bootDiskConfig:
            enableConfidentialCompute: true
            customerEncryptionKey:
              kmsKeyName: kmsKeyName
          health: HEALTH_UNSPECIFIED
          serviceAccount:
            scope:
            - scope
            - scope
            email: email
          healthDescription: healthDescription
          autocheckpointEnabled: true
          labels:
            key: labels
          tags:
          - tags
          - tags
          symptoms:
          - workerId: workerId
            createTime: createTime
            details: details
            symptomType: SYMPTOM_TYPE_UNSPECIFIED
          - workerId: workerId
            createTime: createTime
            details: details
            symptomType: SYMPTOM_TYPE_UNSPECIFIED
          networkEndpoints:
          - port: 6
            ipAddress: ipAddress
            accessConfig:
              externalIp: externalIp
          - port: 6
            ipAddress: ipAddress
            accessConfig:
              externalIp: externalIp
          acceleratorConfig:
            topology: topology
            type: TYPE_UNSPECIFIED
          createTime: createTime
          name: name
          dataDisks:
          - mode: DISK_MODE_UNSPECIFIED
            sourceDisk: sourceDisk
          - mode: DISK_MODE_UNSPECIFIED
            sourceDisk: sourceDisk
          queuedResource: queuedResource
        parent: parent
        multiNodeParams:
          nodeIdPrefix: nodeIdPrefix
          nodeCount: 0
        nodeId: nodeId
      properties:
        multiNodeParams:
          $ref: '#/components/schemas/MultiNodeParams'
        node:
          $ref: '#/components/schemas/Node'
        nodeId:
          description: "The unqualified resource name. Should follow the `^[A-Za-z0-9_.~+%-]+$`\
            \ regex format. This is only specified when requesting a single node.\
            \ In case of multi-node requests, multi_node_params must be populated\
            \ instead. It's an error to specify both node_id and multi_node_params."
          type: string
        parent:
          description: Required. The parent resource name.
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      example:
        metadata:
          key: ""
        response:
          key: ""
        name: name
        error:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
        done: true
      properties:
        done:
          description: "If the value is `false`, it means the operation is still in\
            \ progress. If `true`, the operation is completed, and either `error`\
            \ or `response` is available."
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "Service-specific metadata associated with the operation. It\
            \ typically contains progress information and common metadata such as\
            \ create time. Some services might not provide such metadata. Any method\
            \ that returns a long-running operation should document the metadata type,\
            \ if any."
          type: object
        name:
          description: "The server-assigned name, which is only unique within the\
            \ same service that originally returns it. If you use the default HTTP\
            \ mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "The normal, successful response of the operation. If the original\
            \ method returns no data on success, such as `Delete`, the response is\
            \ `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`,\
            \ the response should be the resource. For other methods, the response\
            \ should have the type `XxxResponse`, where `Xxx` is the original method\
            \ name. For example, if the original method name is `TakeSnapshot()`,\
            \ the inferred response type is `TakeSnapshotResponse`."
          type: object
      type: object
    OperationMetadata:
      description: Metadata describing an Operation
      properties:
        apiVersion:
          description: API version.
          type: string
        cancelRequested:
          description: Specifies if cancellation was requested for the operation.
          type: boolean
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
        statusDetail:
          description: "Human-readable status of the operation, if any."
          type: string
        target:
          description: Target of the operation - for example projects/project-1/connectivityTests/test-1
          type: string
        verb:
          description: Name of the verb executed by the operation.
          type: string
      type: object
    ProvisioningData:
      description: Further data for the provisioning state.
      properties: {}
      type: object
    QueuedResource:
      description: A QueuedResource represents a request for resources that will be
        placed in a queue and fulfilled when the necessary resources are available.
      example:
        bestEffort: "{}"
        createTime: createTime
        queueingPolicy:
          validAfterDuration: validAfterDuration
          validInterval:
            startTime: startTime
            endTime: endTime
          validUntilDuration: validUntilDuration
          validUntilTime: validUntilTime
          validAfterTime: validAfterTime
        spot: "{}"
        name: name
        tpu:
          nodeSpec:
          - node:
              metadata:
                key: metadata
              runtimeVersion: runtimeVersion
              description: description
              multisliceNode: true
              acceleratorType: acceleratorType
              apiVersion: API_VERSION_UNSPECIFIED
              id: id
              state: STATE_UNSPECIFIED
              schedulingConfig:
                preemptible: true
                reserved: true
                spot: true
              shieldedInstanceConfig:
                enableSecureBoot: true
              cidrBlock: cidrBlock
              networkConfig:
                queueCount: 0
                canIpForward: true
                enableExternalIps: true
                subnetwork: subnetwork
                network: network
              bootDiskConfig:
                enableConfidentialCompute: true
                customerEncryptionKey:
                  kmsKeyName: kmsKeyName
              health: HEALTH_UNSPECIFIED
              serviceAccount:
                scope:
                - scope
                - scope
                email: email
              healthDescription: healthDescription
              autocheckpointEnabled: true
              labels:
                key: labels
              tags:
              - tags
              - tags
              symptoms:
              - workerId: workerId
                createTime: createTime
                details: details
                symptomType: SYMPTOM_TYPE_UNSPECIFIED
              - workerId: workerId
                createTime: createTime
                details: details
                symptomType: SYMPTOM_TYPE_UNSPECIFIED
              networkEndpoints:
              - port: 6
                ipAddress: ipAddress
                accessConfig:
                  externalIp: externalIp
              - port: 6
                ipAddress: ipAddress
                accessConfig:
                  externalIp: externalIp
              acceleratorConfig:
                topology: topology
                type: TYPE_UNSPECIFIED
              createTime: createTime
              name: name
              dataDisks:
              - mode: DISK_MODE_UNSPECIFIED
                sourceDisk: sourceDisk
              - mode: DISK_MODE_UNSPECIFIED
                sourceDisk: sourceDisk
              queuedResource: queuedResource
            parent: parent
            multiNodeParams:
              nodeIdPrefix: nodeIdPrefix
              nodeCount: 0
            nodeId: nodeId
          - node:
              metadata:
                key: metadata
              runtimeVersion: runtimeVersion
              description: description
              multisliceNode: true
              acceleratorType: acceleratorType
              apiVersion: API_VERSION_UNSPECIFIED
              id: id
              state: STATE_UNSPECIFIED
              schedulingConfig:
                preemptible: true
                reserved: true
                spot: true
              shieldedInstanceConfig:
                enableSecureBoot: true
              cidrBlock: cidrBlock
              networkConfig:
                queueCount: 0
                canIpForward: true
                enableExternalIps: true
                subnetwork: subnetwork
                network: network
              bootDiskConfig:
                enableConfidentialCompute: true
                customerEncryptionKey:
                  kmsKeyName: kmsKeyName
              health: HEALTH_UNSPECIFIED
              serviceAccount:
                scope:
                - scope
                - scope
                email: email
              healthDescription: healthDescription
              autocheckpointEnabled: true
              labels:
                key: labels
              tags:
              - tags
              - tags
              symptoms:
              - workerId: workerId
                createTime: createTime
                details: details
                symptomType: SYMPTOM_TYPE_UNSPECIFIED
              - workerId: workerId
                createTime: createTime
                details: details
                symptomType: SYMPTOM_TYPE_UNSPECIFIED
              networkEndpoints:
              - port: 6
                ipAddress: ipAddress
                accessConfig:
                  externalIp: externalIp
              - port: 6
                ipAddress: ipAddress
                accessConfig:
                  externalIp: externalIp
              acceleratorConfig:
                topology: topology
                type: TYPE_UNSPECIFIED
              createTime: createTime
              name: name
              dataDisks:
              - mode: DISK_MODE_UNSPECIFIED
                sourceDisk: sourceDisk
              - mode: DISK_MODE_UNSPECIFIED
                sourceDisk: sourceDisk
              queuedResource: queuedResource
            parent: parent
            multiNodeParams:
              nodeIdPrefix: nodeIdPrefix
              nodeCount: 0
            nodeId: nodeId
        guaranteed:
          minDuration: minDuration
          reserved: true
        state:
          deletingData: "{}"
          suspendedData: "{}"
          suspendingData: "{}"
          acceptedData: "{}"
          creatingData: "{}"
          state: STATE_UNSPECIFIED
          stateInitiator: STATE_INITIATOR_UNSPECIFIED
          activeData: "{}"
          provisioningData: "{}"
          failedData:
            error:
              code: 0
              details:
              - key: ""
              - key: ""
              message: message
        reservationName: reservationName
      properties:
        bestEffort:
          description: BestEffort tier definition.
          properties: {}
          type: object
        createTime:
          description: Output only. The time when the QueuedResource was created.
          format: google-datetime
          readOnly: true
          type: string
        guaranteed:
          $ref: '#/components/schemas/Guaranteed'
        name:
          description: Output only. Immutable. The name of the QueuedResource.
          readOnly: true
          type: string
        queueingPolicy:
          $ref: '#/components/schemas/QueueingPolicy'
        reservationName:
          description: "Name of the reservation in which the resource should be provisioned.\
            \ Format: projects/{project}/locations/{zone}/reservations/{reservation}"
          type: string
        spot:
          description: Spot tier definition.
          properties: {}
          type: object
        state:
          $ref: '#/components/schemas/QueuedResourceState'
        tpu:
          $ref: '#/components/schemas/Tpu'
      type: object
    QueuedResourceState:
      description: QueuedResourceState defines the details of the QueuedResource request.
      example:
        deletingData: "{}"
        suspendedData: "{}"
        suspendingData: "{}"
        acceptedData: "{}"
        creatingData: "{}"
        state: STATE_UNSPECIFIED
        stateInitiator: STATE_INITIATOR_UNSPECIFIED
        activeData: "{}"
        provisioningData: "{}"
        failedData:
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
      properties:
        acceptedData:
          description: Further data for the accepted state.
          properties: {}
          type: object
        activeData:
          description: Further data for the active state.
          properties: {}
          type: object
        creatingData:
          description: Further data for the creating state.
          properties: {}
          type: object
        deletingData:
          description: Further data for the deleting state.
          properties: {}
          type: object
        failedData:
          $ref: '#/components/schemas/FailedData'
        provisioningData:
          description: Further data for the provisioning state.
          properties: {}
          type: object
        state:
          description: State of the QueuedResource request.
          enum:
          - STATE_UNSPECIFIED
          - CREATING
          - ACCEPTED
          - PROVISIONING
          - FAILED
          - DELETING
          - ACTIVE
          - SUSPENDING
          - SUSPENDED
          - WAITING_FOR_RESOURCES
          type: string
        stateInitiator:
          description: Output only. The initiator of the QueuedResources's current
            state. Used to indicate whether the SUSPENDING/SUSPENDED state was initiated
            by the user or the service.
          enum:
          - STATE_INITIATOR_UNSPECIFIED
          - USER
          - SERVICE
          readOnly: true
          type: string
        suspendedData:
          description: Further data for the suspended state.
          properties: {}
          type: object
        suspendingData:
          description: Further data for the suspending state.
          properties: {}
          type: object
      type: object
    QueueingPolicy:
      description: Defines the policy of the QueuedRequest.
      example:
        validAfterDuration: validAfterDuration
        validInterval:
          startTime: startTime
          endTime: endTime
        validUntilDuration: validUntilDuration
        validUntilTime: validUntilTime
        validAfterTime: validAfterTime
      properties:
        validAfterDuration:
          description: A relative time after which resources may be created.
          format: google-duration
          type: string
        validAfterTime:
          description: An absolute time at which resources may be created.
          format: google-datetime
          type: string
        validInterval:
          $ref: '#/components/schemas/Interval'
        validUntilDuration:
          description: A relative time after which resources should not be created.
            If the request cannot be fulfilled by this time the request will be failed.
          format: google-duration
          type: string
        validUntilTime:
          description: An absolute time after which resources should not be created.
            If the request cannot be fulfilled by this time the request will be failed.
          format: google-datetime
          type: string
      type: object
    Reservation:
      description: A reservation describes the amount of a resource 'allotted' for
        a defined period of time.
      example:
        standard:
          size: 0
          usage:
            total: total
          interval:
            startTime: startTime
            endTime: endTime
          capacityUnits: CAPACITY_UNITS_UNSPECIFIED
          resourceType: resourceType
        name: name
      properties:
        name:
          description: "The reservation name with the format: projects/{projectID}/locations/{location}/reservations/{reservationID}"
          type: string
        standard:
          $ref: '#/components/schemas/Standard'
      type: object
    ResetQueuedResourceRequest:
      description: Request for ResetQueuedResource.
      properties: {}
      type: object
    RuntimeVersion:
      description: A runtime version that a Node can be configured with.
      example:
        name: name
        version: version
      properties:
        name:
          description: The resource name.
          type: string
        version:
          description: The runtime version.
          type: string
      type: object
    SchedulingConfig:
      description: Sets the scheduling options for this node.
      example:
        preemptible: true
        reserved: true
        spot: true
      properties:
        preemptible:
          description: Defines whether the node is preemptible.
          type: boolean
        reserved:
          description: Whether the node is created under a reservation.
          type: boolean
        spot:
          description: Optional. Defines whether the node is Spot VM.
          type: boolean
      type: object
    ServiceAccount:
      description: A service account.
      example:
        scope:
        - scope
        - scope
        email: email
      properties:
        email:
          description: "Email address of the service account. If empty, default Compute\
            \ service account will be used."
          type: string
        scope:
          description: "The list of scopes to be made available for this service account.\
            \ If empty, access to all Cloud APIs will be allowed."
          items:
            type: string
          type: array
      type: object
    ServiceIdentity:
      description: The per-product per-project service identity for Cloud TPU service.
      example:
        email: email
      properties:
        email:
          description: The email address of the service identity.
          type: string
      type: object
    ShieldedInstanceConfig:
      description: A set of Shielded Instance options.
      example:
        enableSecureBoot: true
      properties:
        enableSecureBoot:
          description: Defines whether the instance has Secure Boot enabled.
          type: boolean
      type: object
    SimulateMaintenanceEventRequest:
      description: Request for SimulateMaintenanceEvent.
      example:
        workerIds:
        - workerIds
        - workerIds
      properties:
        workerIds:
          description: "The 0-based worker ID. If it is empty, worker ID 0 will be\
            \ selected for maintenance event simulation. A maintenance event will\
            \ only be fired on the first specified worker ID. Future implementations\
            \ may support firing on multiple workers."
          items:
            type: string
          type: array
      type: object
    Spot:
      description: Spot tier definition.
      properties: {}
      type: object
    Standard:
      example:
        size: 0
        usage:
          total: total
        interval:
          startTime: startTime
          endTime: endTime
        capacityUnits: CAPACITY_UNITS_UNSPECIFIED
        resourceType: resourceType
      properties:
        capacityUnits:
          enum:
          - CAPACITY_UNITS_UNSPECIFIED
          - CORES
          - CHIPS
          type: string
        interval:
          $ref: '#/components/schemas/Interval'
        resourceType:
          description: The resource type of the reservation.
          type: string
        size:
          description: "The size of the reservation, in the units specified in the\
            \ 'capacity_units' field."
          format: int32
          type: integer
        usage:
          $ref: '#/components/schemas/Usage'
      type: object
    StartNodeRequest:
      description: Request for StartNode.
      properties: {}
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 0
        details:
        - key: ""
        - key: ""
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of google.rpc.Code."
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the google.rpc.Status.details\
            \ field, or localized by the client."
          type: string
      type: object
    StopNodeRequest:
      description: Request for StopNode.
      properties: {}
      type: object
    SuspendedData:
      description: Further data for the suspended state.
      properties: {}
      type: object
    SuspendingData:
      description: Further data for the suspending state.
      properties: {}
      type: object
    Symptom:
      description: A Symptom instance.
      example:
        workerId: workerId
        createTime: createTime
        details: details
        symptomType: SYMPTOM_TYPE_UNSPECIFIED
      properties:
        createTime:
          description: Timestamp when the Symptom is created.
          format: google-datetime
          type: string
        details:
          description: Detailed information of the current Symptom.
          type: string
        symptomType:
          description: Type of the Symptom.
          enum:
          - SYMPTOM_TYPE_UNSPECIFIED
          - LOW_MEMORY
          - OUT_OF_MEMORY
          - EXECUTE_TIMED_OUT
          - MESH_BUILD_FAIL
          - HBM_OUT_OF_MEMORY
          - PROJECT_ABUSE
          type: string
        workerId:
          description: A string used to uniquely distinguish a worker within a TPU
            node.
          type: string
      type: object
    Tpu:
      description: Details of the TPU resource(s) being requested.
      example:
        nodeSpec:
        - node:
            metadata:
              key: metadata
            runtimeVersion: runtimeVersion
            description: description
            multisliceNode: true
            acceleratorType: acceleratorType
            apiVersion: API_VERSION_UNSPECIFIED
            id: id
            state: STATE_UNSPECIFIED
            schedulingConfig:
              preemptible: true
              reserved: true
              spot: true
            shieldedInstanceConfig:
              enableSecureBoot: true
            cidrBlock: cidrBlock
            networkConfig:
              queueCount: 0
              canIpForward: true
              enableExternalIps: true
              subnetwork: subnetwork
              network: network
            bootDiskConfig:
              enableConfidentialCompute: true
              customerEncryptionKey:
                kmsKeyName: kmsKeyName
            health: HEALTH_UNSPECIFIED
            serviceAccount:
              scope:
              - scope
              - scope
              email: email
            healthDescription: healthDescription
            autocheckpointEnabled: true
            labels:
              key: labels
            tags:
            - tags
            - tags
            symptoms:
            - workerId: workerId
              createTime: createTime
              details: details
              symptomType: SYMPTOM_TYPE_UNSPECIFIED
            - workerId: workerId
              createTime: createTime
              details: details
              symptomType: SYMPTOM_TYPE_UNSPECIFIED
            networkEndpoints:
            - port: 6
              ipAddress: ipAddress
              accessConfig:
                externalIp: externalIp
            - port: 6
              ipAddress: ipAddress
              accessConfig:
                externalIp: externalIp
            acceleratorConfig:
              topology: topology
              type: TYPE_UNSPECIFIED
            createTime: createTime
            name: name
            dataDisks:
            - mode: DISK_MODE_UNSPECIFIED
              sourceDisk: sourceDisk
            - mode: DISK_MODE_UNSPECIFIED
              sourceDisk: sourceDisk
            queuedResource: queuedResource
          parent: parent
          multiNodeParams:
            nodeIdPrefix: nodeIdPrefix
            nodeCount: 0
          nodeId: nodeId
        - node:
            metadata:
              key: metadata
            runtimeVersion: runtimeVersion
            description: description
            multisliceNode: true
            acceleratorType: acceleratorType
            apiVersion: API_VERSION_UNSPECIFIED
            id: id
            state: STATE_UNSPECIFIED
            schedulingConfig:
              preemptible: true
              reserved: true
              spot: true
            shieldedInstanceConfig:
              enableSecureBoot: true
            cidrBlock: cidrBlock
            networkConfig:
              queueCount: 0
              canIpForward: true
              enableExternalIps: true
              subnetwork: subnetwork
              network: network
            bootDiskConfig:
              enableConfidentialCompute: true
              customerEncryptionKey:
                kmsKeyName: kmsKeyName
            health: HEALTH_UNSPECIFIED
            serviceAccount:
              scope:
              - scope
              - scope
              email: email
            healthDescription: healthDescription
            autocheckpointEnabled: true
            labels:
              key: labels
            tags:
            - tags
            - tags
            symptoms:
            - workerId: workerId
              createTime: createTime
              details: details
              symptomType: SYMPTOM_TYPE_UNSPECIFIED
            - workerId: workerId
              createTime: createTime
              details: details
              symptomType: SYMPTOM_TYPE_UNSPECIFIED
            networkEndpoints:
            - port: 6
              ipAddress: ipAddress
              accessConfig:
                externalIp: externalIp
            - port: 6
              ipAddress: ipAddress
              accessConfig:
                externalIp: externalIp
            acceleratorConfig:
              topology: topology
              type: TYPE_UNSPECIFIED
            createTime: createTime
            name: name
            dataDisks:
            - mode: DISK_MODE_UNSPECIFIED
              sourceDisk: sourceDisk
            - mode: DISK_MODE_UNSPECIFIED
              sourceDisk: sourceDisk
            queuedResource: queuedResource
          parent: parent
          multiNodeParams:
            nodeIdPrefix: nodeIdPrefix
            nodeCount: 0
          nodeId: nodeId
      properties:
        nodeSpec:
          description: The TPU node(s) being requested.
          items:
            $ref: '#/components/schemas/NodeSpec'
          type: array
      type: object
    Usage:
      example:
        total: total
      properties:
        total:
          description: "The real-time value of usage within the reservation, with\
            \ the unit specified in field capacity_units."
          format: int64
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

