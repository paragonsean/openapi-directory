/**
 * Cloud TPU API
 * TPU API provides customers with access to Google TPU technology.
 *
 * The version of the OpenAPI document: v2alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkConfig.h
 *
 * Network related configurations.
 */

#ifndef OAINetworkConfig_H
#define OAINetworkConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkConfig : public OAIObject {
public:
    OAINetworkConfig();
    OAINetworkConfig(QString json);
    ~OAINetworkConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanIpForward() const;
    void setCanIpForward(const bool &can_ip_forward);
    bool is_can_ip_forward_Set() const;
    bool is_can_ip_forward_Valid() const;

    bool isEnableExternalIps() const;
    void setEnableExternalIps(const bool &enable_external_ips);
    bool is_enable_external_ips_Set() const;
    bool is_enable_external_ips_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    qint32 getQueueCount() const;
    void setQueueCount(const qint32 &queue_count);
    bool is_queue_count_Set() const;
    bool is_queue_count_Valid() const;

    QString getSubnetwork() const;
    void setSubnetwork(const QString &subnetwork);
    bool is_subnetwork_Set() const;
    bool is_subnetwork_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_ip_forward;
    bool m_can_ip_forward_isSet;
    bool m_can_ip_forward_isValid;

    bool m_enable_external_ips;
    bool m_enable_external_ips_isSet;
    bool m_enable_external_ips_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    qint32 m_queue_count;
    bool m_queue_count_isSet;
    bool m_queue_count_isValid;

    QString m_subnetwork;
    bool m_subnetwork_isSet;
    bool m_subnetwork_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkConfig)

#endif // OAINetworkConfig_H
