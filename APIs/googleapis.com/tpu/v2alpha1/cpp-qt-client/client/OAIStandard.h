/**
 * Cloud TPU API
 * TPU API provides customers with access to Google TPU technology.
 *
 * The version of the OpenAPI document: v2alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStandard.h
 *
 * 
 */

#ifndef OAIStandard_H
#define OAIStandard_H

#include <QJsonObject>

#include "OAIInterval.h"
#include "OAIUsage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInterval;
class OAIUsage;

class OAIStandard : public OAIObject {
public:
    OAIStandard();
    OAIStandard(QString json);
    ~OAIStandard() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCapacityUnits() const;
    void setCapacityUnits(const QString &capacity_units);
    bool is_capacity_units_Set() const;
    bool is_capacity_units_Valid() const;

    OAIInterval getInterval() const;
    void setInterval(const OAIInterval &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    OAIUsage getUsage() const;
    void setUsage(const OAIUsage &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_capacity_units;
    bool m_capacity_units_isSet;
    bool m_capacity_units_isValid;

    OAIInterval m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    OAIUsage m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStandard)

#endif // OAIStandard_H
