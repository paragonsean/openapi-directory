/**
 * Cloud TPU API
 * TPU API provides customers with access to Google TPU technology.
 *
 * The version of the OpenAPI document: v2alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueuedResourceState.h
 *
 * QueuedResourceState defines the details of the QueuedResource request.
 */

#ifndef OAIQueuedResourceState_H
#define OAIQueuedResourceState_H

#include <QJsonObject>

#include "OAIFailedData.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFailedData;

class OAIQueuedResourceState : public OAIObject {
public:
    OAIQueuedResourceState();
    OAIQueuedResourceState(QString json);
    ~OAIQueuedResourceState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getAcceptedData() const;
    void setAcceptedData(const OAIObject &accepted_data);
    bool is_accepted_data_Set() const;
    bool is_accepted_data_Valid() const;

    OAIObject getActiveData() const;
    void setActiveData(const OAIObject &active_data);
    bool is_active_data_Set() const;
    bool is_active_data_Valid() const;

    OAIObject getCreatingData() const;
    void setCreatingData(const OAIObject &creating_data);
    bool is_creating_data_Set() const;
    bool is_creating_data_Valid() const;

    OAIObject getDeletingData() const;
    void setDeletingData(const OAIObject &deleting_data);
    bool is_deleting_data_Set() const;
    bool is_deleting_data_Valid() const;

    OAIFailedData getFailedData() const;
    void setFailedData(const OAIFailedData &failed_data);
    bool is_failed_data_Set() const;
    bool is_failed_data_Valid() const;

    OAIObject getProvisioningData() const;
    void setProvisioningData(const OAIObject &provisioning_data);
    bool is_provisioning_data_Set() const;
    bool is_provisioning_data_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStateInitiator() const;
    void setStateInitiator(const QString &state_initiator);
    bool is_state_initiator_Set() const;
    bool is_state_initiator_Valid() const;

    OAIObject getSuspendedData() const;
    void setSuspendedData(const OAIObject &suspended_data);
    bool is_suspended_data_Set() const;
    bool is_suspended_data_Valid() const;

    OAIObject getSuspendingData() const;
    void setSuspendingData(const OAIObject &suspending_data);
    bool is_suspending_data_Set() const;
    bool is_suspending_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_accepted_data;
    bool m_accepted_data_isSet;
    bool m_accepted_data_isValid;

    OAIObject m_active_data;
    bool m_active_data_isSet;
    bool m_active_data_isValid;

    OAIObject m_creating_data;
    bool m_creating_data_isSet;
    bool m_creating_data_isValid;

    OAIObject m_deleting_data;
    bool m_deleting_data_isSet;
    bool m_deleting_data_isValid;

    OAIFailedData m_failed_data;
    bool m_failed_data_isSet;
    bool m_failed_data_isValid;

    OAIObject m_provisioning_data;
    bool m_provisioning_data_isSet;
    bool m_provisioning_data_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_state_initiator;
    bool m_state_initiator_isSet;
    bool m_state_initiator_isValid;

    OAIObject m_suspended_data;
    bool m_suspended_data_isSet;
    bool m_suspended_data_isValid;

    OAIObject m_suspending_data;
    bool m_suspending_data_isSet;
    bool m_suspending_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueuedResourceState)

#endif // OAIQueuedResourceState_H
