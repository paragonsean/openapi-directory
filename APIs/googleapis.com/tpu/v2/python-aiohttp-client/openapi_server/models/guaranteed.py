# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Guaranteed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_duration: str=None):
        """Guaranteed - a model defined in OpenAPI

        :param min_duration: The min_duration of this Guaranteed.
        """
        self.openapi_types = {
            'min_duration': str
        }

        self.attribute_map = {
            'min_duration': 'minDuration'
        }

        self._min_duration = min_duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Guaranteed':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Guaranteed of this Guaranteed.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_duration(self):
        """Gets the min_duration of this Guaranteed.

        Optional. Defines the minimum duration of the guarantee. If specified, the requested resources will only be provisioned if they can be allocated for at least the given duration.

        :return: The min_duration of this Guaranteed.
        :rtype: str
        """
        return self._min_duration

    @min_duration.setter
    def min_duration(self, min_duration):
        """Sets the min_duration of this Guaranteed.

        Optional. Defines the minimum duration of the guarantee. If specified, the requested resources will only be provisioned if they can be allocated for at least the given duration.

        :param min_duration: The min_duration of this Guaranteed.
        :type min_duration: str
        """

        self._min_duration = min_duration
