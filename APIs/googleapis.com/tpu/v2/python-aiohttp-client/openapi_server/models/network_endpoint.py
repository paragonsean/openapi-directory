# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.access_config import AccessConfig
from openapi_server import util


class NetworkEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_config: AccessConfig=None, ip_address: str=None, port: int=None):
        """NetworkEndpoint - a model defined in OpenAPI

        :param access_config: The access_config of this NetworkEndpoint.
        :param ip_address: The ip_address of this NetworkEndpoint.
        :param port: The port of this NetworkEndpoint.
        """
        self.openapi_types = {
            'access_config': AccessConfig,
            'ip_address': str,
            'port': int
        }

        self.attribute_map = {
            'access_config': 'accessConfig',
            'ip_address': 'ipAddress',
            'port': 'port'
        }

        self._access_config = access_config
        self._ip_address = ip_address
        self._port = port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkEndpoint of this NetworkEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_config(self):
        """Gets the access_config of this NetworkEndpoint.


        :return: The access_config of this NetworkEndpoint.
        :rtype: AccessConfig
        """
        return self._access_config

    @access_config.setter
    def access_config(self, access_config):
        """Sets the access_config of this NetworkEndpoint.


        :param access_config: The access_config of this NetworkEndpoint.
        :type access_config: AccessConfig
        """

        self._access_config = access_config

    @property
    def ip_address(self):
        """Gets the ip_address of this NetworkEndpoint.

        The internal IP address of this network endpoint.

        :return: The ip_address of this NetworkEndpoint.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this NetworkEndpoint.

        The internal IP address of this network endpoint.

        :param ip_address: The ip_address of this NetworkEndpoint.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def port(self):
        """Gets the port of this NetworkEndpoint.

        The port of this network endpoint.

        :return: The port of this NetworkEndpoint.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this NetworkEndpoint.

        The port of this network endpoint.

        :param port: The port of this NetworkEndpoint.
        :type port: int
        """

        self._port = port
