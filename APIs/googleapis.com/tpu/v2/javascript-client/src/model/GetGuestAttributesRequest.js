/**
 * Cloud TPU API
 * TPU API provides customers with access to Google TPU technology.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetGuestAttributesRequest model module.
 * @module model/GetGuestAttributesRequest
 * @version v2
 */
class GetGuestAttributesRequest {
    /**
     * Constructs a new <code>GetGuestAttributesRequest</code>.
     * Request for GetGuestAttributes.
     * @alias module:model/GetGuestAttributesRequest
     */
    constructor() { 
        
        GetGuestAttributesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetGuestAttributesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetGuestAttributesRequest} obj Optional instance to populate.
     * @return {module:model/GetGuestAttributesRequest} The populated <code>GetGuestAttributesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetGuestAttributesRequest();

            if (data.hasOwnProperty('queryPath')) {
                obj['queryPath'] = ApiClient.convertToType(data['queryPath'], 'String');
            }
            if (data.hasOwnProperty('workerIds')) {
                obj['workerIds'] = ApiClient.convertToType(data['workerIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetGuestAttributesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetGuestAttributesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['queryPath'] && !(typeof data['queryPath'] === 'string' || data['queryPath'] instanceof String)) {
            throw new Error("Expected the field `queryPath` to be a primitive type in the JSON string but got " + data['queryPath']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['workerIds'])) {
            throw new Error("Expected the field `workerIds` to be an array in the JSON data but got " + data['workerIds']);
        }

        return true;
    }


}



/**
 * The guest attributes path to be queried.
 * @member {String} queryPath
 */
GetGuestAttributesRequest.prototype['queryPath'] = undefined;

/**
 * The 0-based worker ID. If it is empty, all workers' GuestAttributes will be returned.
 * @member {Array.<String>} workerIds
 */
GetGuestAttributesRequest.prototype['workerIds'] = undefined;






export default GetGuestAttributesRequest;

