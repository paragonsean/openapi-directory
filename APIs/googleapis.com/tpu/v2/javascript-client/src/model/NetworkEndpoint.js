/**
 * Cloud TPU API
 * TPU API provides customers with access to Google TPU technology.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccessConfig from './AccessConfig';

/**
 * The NetworkEndpoint model module.
 * @module model/NetworkEndpoint
 * @version v2
 */
class NetworkEndpoint {
    /**
     * Constructs a new <code>NetworkEndpoint</code>.
     * A network endpoint over which a TPU worker can be reached.
     * @alias module:model/NetworkEndpoint
     */
    constructor() { 
        
        NetworkEndpoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkEndpoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkEndpoint} obj Optional instance to populate.
     * @return {module:model/NetworkEndpoint} The populated <code>NetworkEndpoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkEndpoint();

            if (data.hasOwnProperty('accessConfig')) {
                obj['accessConfig'] = AccessConfig.constructFromObject(data['accessConfig']);
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkEndpoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkEndpoint</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accessConfig`
        if (data['accessConfig']) { // data not null
          AccessConfig.validateJSON(data['accessConfig']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }

        return true;
    }


}



/**
 * @member {module:model/AccessConfig} accessConfig
 */
NetworkEndpoint.prototype['accessConfig'] = undefined;

/**
 * The internal IP address of this network endpoint.
 * @member {String} ipAddress
 */
NetworkEndpoint.prototype['ipAddress'] = undefined;

/**
 * The port of this network endpoint.
 * @member {Number} port
 */
NetworkEndpoint.prototype['port'] = undefined;






export default NetworkEndpoint;

