/**
 * Cloud TPU API
 * TPU API provides customers with access to Google TPU technology.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FailedData from './FailedData';

/**
 * The QueuedResourceState model module.
 * @module model/QueuedResourceState
 * @version v2
 */
class QueuedResourceState {
    /**
     * Constructs a new <code>QueuedResourceState</code>.
     * QueuedResourceState defines the details of the QueuedResource request.
     * @alias module:model/QueuedResourceState
     */
    constructor() { 
        
        QueuedResourceState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueuedResourceState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueuedResourceState} obj Optional instance to populate.
     * @return {module:model/QueuedResourceState} The populated <code>QueuedResourceState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueuedResourceState();

            if (data.hasOwnProperty('acceptedData')) {
                obj['acceptedData'] = ApiClient.convertToType(data['acceptedData'], Object);
            }
            if (data.hasOwnProperty('activeData')) {
                obj['activeData'] = ApiClient.convertToType(data['activeData'], Object);
            }
            if (data.hasOwnProperty('creatingData')) {
                obj['creatingData'] = ApiClient.convertToType(data['creatingData'], Object);
            }
            if (data.hasOwnProperty('deletingData')) {
                obj['deletingData'] = ApiClient.convertToType(data['deletingData'], Object);
            }
            if (data.hasOwnProperty('failedData')) {
                obj['failedData'] = FailedData.constructFromObject(data['failedData']);
            }
            if (data.hasOwnProperty('provisioningData')) {
                obj['provisioningData'] = ApiClient.convertToType(data['provisioningData'], Object);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stateInitiator')) {
                obj['stateInitiator'] = ApiClient.convertToType(data['stateInitiator'], 'String');
            }
            if (data.hasOwnProperty('suspendedData')) {
                obj['suspendedData'] = ApiClient.convertToType(data['suspendedData'], Object);
            }
            if (data.hasOwnProperty('suspendingData')) {
                obj['suspendingData'] = ApiClient.convertToType(data['suspendingData'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueuedResourceState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueuedResourceState</code>.
     */
    static validateJSON(data) {
        // validate the optional field `failedData`
        if (data['failedData']) { // data not null
          FailedData.validateJSON(data['failedData']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['stateInitiator'] && !(typeof data['stateInitiator'] === 'string' || data['stateInitiator'] instanceof String)) {
            throw new Error("Expected the field `stateInitiator` to be a primitive type in the JSON string but got " + data['stateInitiator']);
        }

        return true;
    }


}



/**
 * Further data for the accepted state.
 * @member {Object} acceptedData
 */
QueuedResourceState.prototype['acceptedData'] = undefined;

/**
 * Further data for the active state.
 * @member {Object} activeData
 */
QueuedResourceState.prototype['activeData'] = undefined;

/**
 * Further data for the creating state.
 * @member {Object} creatingData
 */
QueuedResourceState.prototype['creatingData'] = undefined;

/**
 * Further data for the deleting state.
 * @member {Object} deletingData
 */
QueuedResourceState.prototype['deletingData'] = undefined;

/**
 * @member {module:model/FailedData} failedData
 */
QueuedResourceState.prototype['failedData'] = undefined;

/**
 * Further data for the provisioning state.
 * @member {Object} provisioningData
 */
QueuedResourceState.prototype['provisioningData'] = undefined;

/**
 * Output only. State of the QueuedResource request.
 * @member {module:model/QueuedResourceState.StateEnum} state
 */
QueuedResourceState.prototype['state'] = undefined;

/**
 * Output only. The initiator of the QueuedResources's current state. Used to indicate whether the SUSPENDING/SUSPENDED state was initiated by the user or the service.
 * @member {module:model/QueuedResourceState.StateInitiatorEnum} stateInitiator
 */
QueuedResourceState.prototype['stateInitiator'] = undefined;

/**
 * Further data for the suspended state.
 * @member {Object} suspendedData
 */
QueuedResourceState.prototype['suspendedData'] = undefined;

/**
 * Further data for the suspending state.
 * @member {Object} suspendingData
 */
QueuedResourceState.prototype['suspendingData'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
QueuedResourceState['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "ACCEPTED"
     * @const
     */
    "ACCEPTED": "ACCEPTED",

    /**
     * value: "PROVISIONING"
     * @const
     */
    "PROVISIONING": "PROVISIONING",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "SUSPENDING"
     * @const
     */
    "SUSPENDING": "SUSPENDING",

    /**
     * value: "SUSPENDED"
     * @const
     */
    "SUSPENDED": "SUSPENDED",

    /**
     * value: "WAITING_FOR_RESOURCES"
     * @const
     */
    "WAITING_FOR_RESOURCES": "WAITING_FOR_RESOURCES"
};


/**
 * Allowed values for the <code>stateInitiator</code> property.
 * @enum {String}
 * @readonly
 */
QueuedResourceState['StateInitiatorEnum'] = {

    /**
     * value: "STATE_INITIATOR_UNSPECIFIED"
     * @const
     */
    "STATE_INITIATOR_UNSPECIFIED": "STATE_INITIATOR_UNSPECIFIED",

    /**
     * value: "USER"
     * @const
     */
    "USER": "USER",

    /**
     * value: "SERVICE"
     * @const
     */
    "SERVICE": "SERVICE"
};



export default QueuedResourceState;

