/**
 * Cloud TPU API
 * TPU API provides customers with access to Google TPU technology.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudTpuApi);
  }
}(this, function(expect, CloudTpuApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudTpuApi.Node();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Node', function() {
    it('should create an instance of Node', function() {
      // uncomment below and update the code to test Node
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be.a(CloudTpuApi.Node);
    });

    it('should have the property acceleratorConfig (base name: "acceleratorConfig")', function() {
      // uncomment below and update the code to test the property acceleratorConfig
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property acceleratorType (base name: "acceleratorType")', function() {
      // uncomment below and update the code to test the property acceleratorType
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property apiVersion (base name: "apiVersion")', function() {
      // uncomment below and update the code to test the property apiVersion
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property cidrBlock (base name: "cidrBlock")', function() {
      // uncomment below and update the code to test the property cidrBlock
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property dataDisks (base name: "dataDisks")', function() {
      // uncomment below and update the code to test the property dataDisks
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property health (base name: "health")', function() {
      // uncomment below and update the code to test the property health
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property healthDescription (base name: "healthDescription")', function() {
      // uncomment below and update the code to test the property healthDescription
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property multisliceNode (base name: "multisliceNode")', function() {
      // uncomment below and update the code to test the property multisliceNode
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property networkConfig (base name: "networkConfig")', function() {
      // uncomment below and update the code to test the property networkConfig
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property networkEndpoints (base name: "networkEndpoints")', function() {
      // uncomment below and update the code to test the property networkEndpoints
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property queuedResource (base name: "queuedResource")', function() {
      // uncomment below and update the code to test the property queuedResource
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property runtimeVersion (base name: "runtimeVersion")', function() {
      // uncomment below and update the code to test the property runtimeVersion
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property schedulingConfig (base name: "schedulingConfig")', function() {
      // uncomment below and update the code to test the property schedulingConfig
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property serviceAccount (base name: "serviceAccount")', function() {
      // uncomment below and update the code to test the property serviceAccount
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property shieldedInstanceConfig (base name: "shieldedInstanceConfig")', function() {
      // uncomment below and update the code to test the property shieldedInstanceConfig
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property symptoms (base name: "symptoms")', function() {
      // uncomment below and update the code to test the property symptoms
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new CloudTpuApi.Node();
      //expect(instance).to.be();
    });

  });

}));
