/**
 * Cloud TPU API
 * TPU API provides customers with access to Google TPU technology.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAcceleratorConfig.h
 *
 * A TPU accelerator configuration.
 */

#ifndef OAIAcceleratorConfig_H
#define OAIAcceleratorConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAcceleratorConfig : public OAIObject {
public:
    OAIAcceleratorConfig();
    OAIAcceleratorConfig(QString json);
    ~OAIAcceleratorConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTopology() const;
    void setTopology(const QString &topology);
    bool is_topology_Set() const;
    bool is_topology_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_topology;
    bool m_topology_isSet;
    bool m_topology_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAcceleratorConfig)

#endif // OAIAcceleratorConfig_H
