/**
 * Cloud TPU API
 * TPU API provides customers with access to Google TPU technology.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGuestAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGuestAttributes::OAIGuestAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGuestAttributes::OAIGuestAttributes() {
    this->initializeModel();
}

OAIGuestAttributes::~OAIGuestAttributes() {}

void OAIGuestAttributes::initializeModel() {

    m_query_path_isSet = false;
    m_query_path_isValid = false;

    m_query_value_isSet = false;
    m_query_value_isValid = false;
}

void OAIGuestAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGuestAttributes::fromJsonObject(QJsonObject json) {

    m_query_path_isValid = ::OpenAPI::fromJsonValue(m_query_path, json[QString("queryPath")]);
    m_query_path_isSet = !json[QString("queryPath")].isNull() && m_query_path_isValid;

    m_query_value_isValid = ::OpenAPI::fromJsonValue(m_query_value, json[QString("queryValue")]);
    m_query_value_isSet = !json[QString("queryValue")].isNull() && m_query_value_isValid;
}

QString OAIGuestAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGuestAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_query_path_isSet) {
        obj.insert(QString("queryPath"), ::OpenAPI::toJsonValue(m_query_path));
    }
    if (m_query_value.isSet()) {
        obj.insert(QString("queryValue"), ::OpenAPI::toJsonValue(m_query_value));
    }
    return obj;
}

QString OAIGuestAttributes::getQueryPath() const {
    return m_query_path;
}
void OAIGuestAttributes::setQueryPath(const QString &query_path) {
    m_query_path = query_path;
    m_query_path_isSet = true;
}

bool OAIGuestAttributes::is_query_path_Set() const{
    return m_query_path_isSet;
}

bool OAIGuestAttributes::is_query_path_Valid() const{
    return m_query_path_isValid;
}

OAIGuestAttributesValue OAIGuestAttributes::getQueryValue() const {
    return m_query_value;
}
void OAIGuestAttributes::setQueryValue(const OAIGuestAttributesValue &query_value) {
    m_query_value = query_value;
    m_query_value_isSet = true;
}

bool OAIGuestAttributes::is_query_value_Set() const{
    return m_query_value_isSet;
}

bool OAIGuestAttributes::is_query_value_Valid() const{
    return m_query_value_isValid;
}

bool OAIGuestAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_query_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGuestAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
