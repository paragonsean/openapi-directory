/**
 * API Keys API
 * Manages the API keys associated with developer projects.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV2AndroidApplication.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV2AndroidApplication::OAIV2AndroidApplication(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV2AndroidApplication::OAIV2AndroidApplication() {
    this->initializeModel();
}

OAIV2AndroidApplication::~OAIV2AndroidApplication() {}

void OAIV2AndroidApplication::initializeModel() {

    m_package_name_isSet = false;
    m_package_name_isValid = false;

    m_sha1_fingerprint_isSet = false;
    m_sha1_fingerprint_isValid = false;
}

void OAIV2AndroidApplication::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV2AndroidApplication::fromJsonObject(QJsonObject json) {

    m_package_name_isValid = ::OpenAPI::fromJsonValue(m_package_name, json[QString("packageName")]);
    m_package_name_isSet = !json[QString("packageName")].isNull() && m_package_name_isValid;

    m_sha1_fingerprint_isValid = ::OpenAPI::fromJsonValue(m_sha1_fingerprint, json[QString("sha1Fingerprint")]);
    m_sha1_fingerprint_isSet = !json[QString("sha1Fingerprint")].isNull() && m_sha1_fingerprint_isValid;
}

QString OAIV2AndroidApplication::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV2AndroidApplication::asJsonObject() const {
    QJsonObject obj;
    if (m_package_name_isSet) {
        obj.insert(QString("packageName"), ::OpenAPI::toJsonValue(m_package_name));
    }
    if (m_sha1_fingerprint_isSet) {
        obj.insert(QString("sha1Fingerprint"), ::OpenAPI::toJsonValue(m_sha1_fingerprint));
    }
    return obj;
}

QString OAIV2AndroidApplication::getPackageName() const {
    return m_package_name;
}
void OAIV2AndroidApplication::setPackageName(const QString &package_name) {
    m_package_name = package_name;
    m_package_name_isSet = true;
}

bool OAIV2AndroidApplication::is_package_name_Set() const{
    return m_package_name_isSet;
}

bool OAIV2AndroidApplication::is_package_name_Valid() const{
    return m_package_name_isValid;
}

QString OAIV2AndroidApplication::getSha1Fingerprint() const {
    return m_sha1_fingerprint;
}
void OAIV2AndroidApplication::setSha1Fingerprint(const QString &sha1_fingerprint) {
    m_sha1_fingerprint = sha1_fingerprint;
    m_sha1_fingerprint_isSet = true;
}

bool OAIV2AndroidApplication::is_sha1_fingerprint_Set() const{
    return m_sha1_fingerprint_isSet;
}

bool OAIV2AndroidApplication::is_sha1_fingerprint_Valid() const{
    return m_sha1_fingerprint_isValid;
}

bool OAIV2AndroidApplication::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_package_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sha1_fingerprint_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV2AndroidApplication::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
