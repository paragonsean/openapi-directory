/**
 * API Keys API
 * Manages the API keys associated with developer projects.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV2ServerKeyRestrictions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV2ServerKeyRestrictions::OAIV2ServerKeyRestrictions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV2ServerKeyRestrictions::OAIV2ServerKeyRestrictions() {
    this->initializeModel();
}

OAIV2ServerKeyRestrictions::~OAIV2ServerKeyRestrictions() {}

void OAIV2ServerKeyRestrictions::initializeModel() {

    m_allowed_ips_isSet = false;
    m_allowed_ips_isValid = false;
}

void OAIV2ServerKeyRestrictions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV2ServerKeyRestrictions::fromJsonObject(QJsonObject json) {

    m_allowed_ips_isValid = ::OpenAPI::fromJsonValue(m_allowed_ips, json[QString("allowedIps")]);
    m_allowed_ips_isSet = !json[QString("allowedIps")].isNull() && m_allowed_ips_isValid;
}

QString OAIV2ServerKeyRestrictions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV2ServerKeyRestrictions::asJsonObject() const {
    QJsonObject obj;
    if (m_allowed_ips.size() > 0) {
        obj.insert(QString("allowedIps"), ::OpenAPI::toJsonValue(m_allowed_ips));
    }
    return obj;
}

QList<QString> OAIV2ServerKeyRestrictions::getAllowedIps() const {
    return m_allowed_ips;
}
void OAIV2ServerKeyRestrictions::setAllowedIps(const QList<QString> &allowed_ips) {
    m_allowed_ips = allowed_ips;
    m_allowed_ips_isSet = true;
}

bool OAIV2ServerKeyRestrictions::is_allowed_ips_Set() const{
    return m_allowed_ips_isSet;
}

bool OAIV2ServerKeyRestrictions::is_allowed_ips_Valid() const{
    return m_allowed_ips_isValid;
}

bool OAIV2ServerKeyRestrictions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allowed_ips.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV2ServerKeyRestrictions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
