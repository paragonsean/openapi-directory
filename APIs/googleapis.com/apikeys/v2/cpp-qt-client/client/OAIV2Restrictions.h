/**
 * API Keys API
 * Manages the API keys associated with developer projects.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV2Restrictions.h
 *
 * Describes the restrictions on the key.
 */

#ifndef OAIV2Restrictions_H
#define OAIV2Restrictions_H

#include <QJsonObject>

#include "OAIV2AndroidKeyRestrictions.h"
#include "OAIV2ApiTarget.h"
#include "OAIV2BrowserKeyRestrictions.h"
#include "OAIV2IosKeyRestrictions.h"
#include "OAIV2ServerKeyRestrictions.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIV2AndroidKeyRestrictions;
class OAIV2ApiTarget;
class OAIV2BrowserKeyRestrictions;
class OAIV2IosKeyRestrictions;
class OAIV2ServerKeyRestrictions;

class OAIV2Restrictions : public OAIObject {
public:
    OAIV2Restrictions();
    OAIV2Restrictions(QString json);
    ~OAIV2Restrictions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIV2AndroidKeyRestrictions getAndroidKeyRestrictions() const;
    void setAndroidKeyRestrictions(const OAIV2AndroidKeyRestrictions &android_key_restrictions);
    bool is_android_key_restrictions_Set() const;
    bool is_android_key_restrictions_Valid() const;

    QList<OAIV2ApiTarget> getApiTargets() const;
    void setApiTargets(const QList<OAIV2ApiTarget> &api_targets);
    bool is_api_targets_Set() const;
    bool is_api_targets_Valid() const;

    OAIV2BrowserKeyRestrictions getBrowserKeyRestrictions() const;
    void setBrowserKeyRestrictions(const OAIV2BrowserKeyRestrictions &browser_key_restrictions);
    bool is_browser_key_restrictions_Set() const;
    bool is_browser_key_restrictions_Valid() const;

    OAIV2IosKeyRestrictions getIosKeyRestrictions() const;
    void setIosKeyRestrictions(const OAIV2IosKeyRestrictions &ios_key_restrictions);
    bool is_ios_key_restrictions_Set() const;
    bool is_ios_key_restrictions_Valid() const;

    OAIV2ServerKeyRestrictions getServerKeyRestrictions() const;
    void setServerKeyRestrictions(const OAIV2ServerKeyRestrictions &server_key_restrictions);
    bool is_server_key_restrictions_Set() const;
    bool is_server_key_restrictions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIV2AndroidKeyRestrictions m_android_key_restrictions;
    bool m_android_key_restrictions_isSet;
    bool m_android_key_restrictions_isValid;

    QList<OAIV2ApiTarget> m_api_targets;
    bool m_api_targets_isSet;
    bool m_api_targets_isValid;

    OAIV2BrowserKeyRestrictions m_browser_key_restrictions;
    bool m_browser_key_restrictions_isSet;
    bool m_browser_key_restrictions_isValid;

    OAIV2IosKeyRestrictions m_ios_key_restrictions;
    bool m_ios_key_restrictions_isSet;
    bool m_ios_key_restrictions_isValid;

    OAIV2ServerKeyRestrictions m_server_key_restrictions;
    bool m_server_key_restrictions_isSet;
    bool m_server_key_restrictions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV2Restrictions)

#endif // OAIV2Restrictions_H
