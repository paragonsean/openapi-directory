# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v2_android_key_restrictions import V2AndroidKeyRestrictions
from openapi_server.models.v2_api_target import V2ApiTarget
from openapi_server.models.v2_browser_key_restrictions import V2BrowserKeyRestrictions
from openapi_server.models.v2_ios_key_restrictions import V2IosKeyRestrictions
from openapi_server.models.v2_server_key_restrictions import V2ServerKeyRestrictions
from openapi_server import util


class V2Restrictions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, android_key_restrictions: V2AndroidKeyRestrictions=None, api_targets: List[V2ApiTarget]=None, browser_key_restrictions: V2BrowserKeyRestrictions=None, ios_key_restrictions: V2IosKeyRestrictions=None, server_key_restrictions: V2ServerKeyRestrictions=None):
        """V2Restrictions - a model defined in OpenAPI

        :param android_key_restrictions: The android_key_restrictions of this V2Restrictions.
        :param api_targets: The api_targets of this V2Restrictions.
        :param browser_key_restrictions: The browser_key_restrictions of this V2Restrictions.
        :param ios_key_restrictions: The ios_key_restrictions of this V2Restrictions.
        :param server_key_restrictions: The server_key_restrictions of this V2Restrictions.
        """
        self.openapi_types = {
            'android_key_restrictions': V2AndroidKeyRestrictions,
            'api_targets': List[V2ApiTarget],
            'browser_key_restrictions': V2BrowserKeyRestrictions,
            'ios_key_restrictions': V2IosKeyRestrictions,
            'server_key_restrictions': V2ServerKeyRestrictions
        }

        self.attribute_map = {
            'android_key_restrictions': 'androidKeyRestrictions',
            'api_targets': 'apiTargets',
            'browser_key_restrictions': 'browserKeyRestrictions',
            'ios_key_restrictions': 'iosKeyRestrictions',
            'server_key_restrictions': 'serverKeyRestrictions'
        }

        self._android_key_restrictions = android_key_restrictions
        self._api_targets = api_targets
        self._browser_key_restrictions = browser_key_restrictions
        self._ios_key_restrictions = ios_key_restrictions
        self._server_key_restrictions = server_key_restrictions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V2Restrictions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V2Restrictions of this V2Restrictions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def android_key_restrictions(self):
        """Gets the android_key_restrictions of this V2Restrictions.


        :return: The android_key_restrictions of this V2Restrictions.
        :rtype: V2AndroidKeyRestrictions
        """
        return self._android_key_restrictions

    @android_key_restrictions.setter
    def android_key_restrictions(self, android_key_restrictions):
        """Sets the android_key_restrictions of this V2Restrictions.


        :param android_key_restrictions: The android_key_restrictions of this V2Restrictions.
        :type android_key_restrictions: V2AndroidKeyRestrictions
        """

        self._android_key_restrictions = android_key_restrictions

    @property
    def api_targets(self):
        """Gets the api_targets of this V2Restrictions.

        A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.

        :return: The api_targets of this V2Restrictions.
        :rtype: List[V2ApiTarget]
        """
        return self._api_targets

    @api_targets.setter
    def api_targets(self, api_targets):
        """Sets the api_targets of this V2Restrictions.

        A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.

        :param api_targets: The api_targets of this V2Restrictions.
        :type api_targets: List[V2ApiTarget]
        """

        self._api_targets = api_targets

    @property
    def browser_key_restrictions(self):
        """Gets the browser_key_restrictions of this V2Restrictions.


        :return: The browser_key_restrictions of this V2Restrictions.
        :rtype: V2BrowserKeyRestrictions
        """
        return self._browser_key_restrictions

    @browser_key_restrictions.setter
    def browser_key_restrictions(self, browser_key_restrictions):
        """Sets the browser_key_restrictions of this V2Restrictions.


        :param browser_key_restrictions: The browser_key_restrictions of this V2Restrictions.
        :type browser_key_restrictions: V2BrowserKeyRestrictions
        """

        self._browser_key_restrictions = browser_key_restrictions

    @property
    def ios_key_restrictions(self):
        """Gets the ios_key_restrictions of this V2Restrictions.


        :return: The ios_key_restrictions of this V2Restrictions.
        :rtype: V2IosKeyRestrictions
        """
        return self._ios_key_restrictions

    @ios_key_restrictions.setter
    def ios_key_restrictions(self, ios_key_restrictions):
        """Sets the ios_key_restrictions of this V2Restrictions.


        :param ios_key_restrictions: The ios_key_restrictions of this V2Restrictions.
        :type ios_key_restrictions: V2IosKeyRestrictions
        """

        self._ios_key_restrictions = ios_key_restrictions

    @property
    def server_key_restrictions(self):
        """Gets the server_key_restrictions of this V2Restrictions.


        :return: The server_key_restrictions of this V2Restrictions.
        :rtype: V2ServerKeyRestrictions
        """
        return self._server_key_restrictions

    @server_key_restrictions.setter
    def server_key_restrictions(self, server_key_restrictions):
        """Sets the server_key_restrictions of this V2Restrictions.


        :param server_key_restrictions: The server_key_restrictions of this V2Restrictions.
        :type server_key_restrictions: V2ServerKeyRestrictions
        """

        self._server_key_restrictions = server_key_restrictions
