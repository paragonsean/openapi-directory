# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v2_restrictions import V2Restrictions
from openapi_server import util


class V2Key(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: Dict[str, str]=None, create_time: str=None, delete_time: str=None, display_name: str=None, etag: str=None, key_string: str=None, name: str=None, restrictions: V2Restrictions=None, uid: str=None, update_time: str=None):
        """V2Key - a model defined in OpenAPI

        :param annotations: The annotations of this V2Key.
        :param create_time: The create_time of this V2Key.
        :param delete_time: The delete_time of this V2Key.
        :param display_name: The display_name of this V2Key.
        :param etag: The etag of this V2Key.
        :param key_string: The key_string of this V2Key.
        :param name: The name of this V2Key.
        :param restrictions: The restrictions of this V2Key.
        :param uid: The uid of this V2Key.
        :param update_time: The update_time of this V2Key.
        """
        self.openapi_types = {
            'annotations': Dict[str, str],
            'create_time': str,
            'delete_time': str,
            'display_name': str,
            'etag': str,
            'key_string': str,
            'name': str,
            'restrictions': V2Restrictions,
            'uid': str,
            'update_time': str
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'create_time': 'createTime',
            'delete_time': 'deleteTime',
            'display_name': 'displayName',
            'etag': 'etag',
            'key_string': 'keyString',
            'name': 'name',
            'restrictions': 'restrictions',
            'uid': 'uid',
            'update_time': 'updateTime'
        }

        self._annotations = annotations
        self._create_time = create_time
        self._delete_time = delete_time
        self._display_name = display_name
        self._etag = etag
        self._key_string = key_string
        self._name = name
        self._restrictions = restrictions
        self._uid = uid
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V2Key':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V2Key of this V2Key.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this V2Key.

        Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.

        :return: The annotations of this V2Key.
        :rtype: Dict[str, str]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this V2Key.

        Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.

        :param annotations: The annotations of this V2Key.
        :type annotations: Dict[str, str]
        """

        self._annotations = annotations

    @property
    def create_time(self):
        """Gets the create_time of this V2Key.

        Output only. A timestamp identifying the time this key was originally created.

        :return: The create_time of this V2Key.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this V2Key.

        Output only. A timestamp identifying the time this key was originally created.

        :param create_time: The create_time of this V2Key.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def delete_time(self):
        """Gets the delete_time of this V2Key.

        Output only. A timestamp when this key was deleted. If the resource is not deleted, this must be empty.

        :return: The delete_time of this V2Key.
        :rtype: str
        """
        return self._delete_time

    @delete_time.setter
    def delete_time(self, delete_time):
        """Sets the delete_time of this V2Key.

        Output only. A timestamp when this key was deleted. If the resource is not deleted, this must be empty.

        :param delete_time: The delete_time of this V2Key.
        :type delete_time: str
        """

        self._delete_time = delete_time

    @property
    def display_name(self):
        """Gets the display_name of this V2Key.

        Human-readable display name of this key that you can modify. The maximum length is 63 characters.

        :return: The display_name of this V2Key.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this V2Key.

        Human-readable display name of this key that you can modify. The maximum length is 63 characters.

        :param display_name: The display_name of this V2Key.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def etag(self):
        """Gets the etag of this V2Key.

        Output only. A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.

        :return: The etag of this V2Key.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this V2Key.

        Output only. A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.

        :param etag: The etag of this V2Key.
        :type etag: str
        """

        self._etag = etag

    @property
    def key_string(self):
        """Gets the key_string of this V2Key.

        Output only. An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.

        :return: The key_string of this V2Key.
        :rtype: str
        """
        return self._key_string

    @key_string.setter
    def key_string(self, key_string):
        """Sets the key_string of this V2Key.

        Output only. An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.

        :param key_string: The key_string of this V2Key.
        :type key_string: str
        """

        self._key_string = key_string

    @property
    def name(self):
        """Gets the name of this V2Key.

        Output only. The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.

        :return: The name of this V2Key.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this V2Key.

        Output only. The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.

        :param name: The name of this V2Key.
        :type name: str
        """

        self._name = name

    @property
    def restrictions(self):
        """Gets the restrictions of this V2Key.


        :return: The restrictions of this V2Key.
        :rtype: V2Restrictions
        """
        return self._restrictions

    @restrictions.setter
    def restrictions(self, restrictions):
        """Sets the restrictions of this V2Key.


        :param restrictions: The restrictions of this V2Key.
        :type restrictions: V2Restrictions
        """

        self._restrictions = restrictions

    @property
    def uid(self):
        """Gets the uid of this V2Key.

        Output only. Unique id in UUID4 format.

        :return: The uid of this V2Key.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this V2Key.

        Output only. Unique id in UUID4 format.

        :param uid: The uid of this V2Key.
        :type uid: str
        """

        self._uid = uid

    @property
    def update_time(self):
        """Gets the update_time of this V2Key.

        Output only. A timestamp identifying the time this key was last updated.

        :return: The update_time of this V2Key.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this V2Key.

        Output only. A timestamp identifying the time this key was last updated.

        :param update_time: The update_time of this V2Key.
        :type update_time: str
        """

        self._update_time = update_time
