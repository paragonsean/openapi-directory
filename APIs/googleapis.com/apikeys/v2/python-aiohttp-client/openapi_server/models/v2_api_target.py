# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V2ApiTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, methods: List[str]=None, service: str=None):
        """V2ApiTarget - a model defined in OpenAPI

        :param methods: The methods of this V2ApiTarget.
        :param service: The service of this V2ApiTarget.
        """
        self.openapi_types = {
            'methods': List[str],
            'service': str
        }

        self.attribute_map = {
            'methods': 'methods',
            'service': 'service'
        }

        self._methods = methods
        self._service = service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V2ApiTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V2ApiTarget of this V2ApiTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def methods(self):
        """Gets the methods of this V2ApiTarget.

        Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`

        :return: The methods of this V2ApiTarget.
        :rtype: List[str]
        """
        return self._methods

    @methods.setter
    def methods(self, methods):
        """Sets the methods of this V2ApiTarget.

        Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`

        :param methods: The methods of this V2ApiTarget.
        :type methods: List[str]
        """

        self._methods = methods

    @property
    def service(self):
        """Gets the service of this V2ApiTarget.

        The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project.

        :return: The service of this V2ApiTarget.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this V2ApiTarget.

        The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project.

        :param service: The service of this V2ApiTarget.
        :type service: str
        """

        self._service = service
