/*
 * API Keys API
 * Manages the API keys associated with developer projects.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.V2GetKeyStringResponse;
import org.openapitools.client.model.V2Key;
import org.openapitools.client.model.V2ListKeysResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Creates a new API key. NOTE: Key is a global resource; hence the only supported value for location is &#x60;global&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apikeysProjectsLocationsKeysCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String keyId = null;
        V2Key v2Key = null;
        Operation response = api.apikeysProjectsLocationsKeysCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, keyId, v2Key);
        // TODO: test validations
    }

    /**
     * Deletes an API key. Deleted key can be retrieved within 30 days of deletion. Afterward, key will be purged from the project. NOTE: Key is a global resource; hence the only supported value for location is &#x60;global&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apikeysProjectsLocationsKeysDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String etag = null;
        Operation response = api.apikeysProjectsLocationsKeysDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, etag);
        // TODO: test validations
    }

    /**
     * Gets the metadata for an API key. The key string of the API key isn&#39;t included in the response. NOTE: Key is a global resource; hence the only supported value for location is &#x60;global&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apikeysProjectsLocationsKeysGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        V2Key response = api.apikeysProjectsLocationsKeysGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Get the key string for an API key. NOTE: Key is a global resource; hence the only supported value for location is &#x60;global&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apikeysProjectsLocationsKeysGetKeyStringTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        V2GetKeyStringResponse response = api.apikeysProjectsLocationsKeysGetKeyString(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lists the API keys owned by a project. The key string of the API key isn&#39;t included in the response. NOTE: Key is a global resource; hence the only supported value for location is &#x60;global&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apikeysProjectsLocationsKeysListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        Boolean showDeleted = null;
        V2ListKeysResponse response = api.apikeysProjectsLocationsKeysList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, showDeleted);
        // TODO: test validations
    }

    /**
     * Patches the modifiable fields of an API key. The key string of the API key isn&#39;t included in the response. NOTE: Key is a global resource; hence the only supported value for location is &#x60;global&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apikeysProjectsLocationsKeysPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        V2Key v2Key = null;
        Operation response = api.apikeysProjectsLocationsKeysPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, v2Key);
        // TODO: test validations
    }

    /**
     * Undeletes an API key which was deleted within 30 days. NOTE: Key is a global resource; hence the only supported value for location is &#x60;global&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apikeysProjectsLocationsKeysUndeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Operation response = api.apikeysProjectsLocationsKeysUndelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

}
