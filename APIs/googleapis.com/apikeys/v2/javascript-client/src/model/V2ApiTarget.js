/**
 * API Keys API
 * Manages the API keys associated with developer projects.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V2ApiTarget model module.
 * @module model/V2ApiTarget
 * @version v2
 */
class V2ApiTarget {
    /**
     * Constructs a new <code>V2ApiTarget</code>.
     * A restriction for a specific service and optionally one or multiple specific methods. Both fields are case insensitive.
     * @alias module:model/V2ApiTarget
     */
    constructor() { 
        
        V2ApiTarget.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V2ApiTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V2ApiTarget} obj Optional instance to populate.
     * @return {module:model/V2ApiTarget} The populated <code>V2ApiTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V2ApiTarget();

            if (data.hasOwnProperty('methods')) {
                obj['methods'] = ApiClient.convertToType(data['methods'], ['String']);
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V2ApiTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V2ApiTarget</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['methods'])) {
            throw new Error("Expected the field `methods` to be an array in the JSON data but got " + data['methods']);
        }
        // ensure the json data is a string
        if (data['service'] && !(typeof data['service'] === 'string' || data['service'] instanceof String)) {
            throw new Error("Expected the field `service` to be a primitive type in the JSON string but got " + data['service']);
        }

        return true;
    }


}



/**
 * Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`
 * @member {Array.<String>} methods
 */
V2ApiTarget.prototype['methods'] = undefined;

/**
 * The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project.
 * @member {String} service
 */
V2ApiTarget.prototype['service'] = undefined;






export default V2ApiTarget;

