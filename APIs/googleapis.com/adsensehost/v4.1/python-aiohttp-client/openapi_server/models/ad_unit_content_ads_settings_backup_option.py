# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdUnitContentAdsSettingsBackupOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color: str=None, type: str=None, url: str=None):
        """AdUnitContentAdsSettingsBackupOption - a model defined in OpenAPI

        :param color: The color of this AdUnitContentAdsSettingsBackupOption.
        :param type: The type of this AdUnitContentAdsSettingsBackupOption.
        :param url: The url of this AdUnitContentAdsSettingsBackupOption.
        """
        self.openapi_types = {
            'color': str,
            'type': str,
            'url': str
        }

        self.attribute_map = {
            'color': 'color',
            'type': 'type',
            'url': 'url'
        }

        self._color = color
        self._type = type
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdUnitContentAdsSettingsBackupOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdUnit_contentAdsSettings_backupOption of this AdUnitContentAdsSettingsBackupOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color(self):
        """Gets the color of this AdUnitContentAdsSettingsBackupOption.

        Color to use when type is set to COLOR. These are represented as six hexadecimal characters, similar to HTML color codes, but without the leading hash.

        :return: The color of this AdUnitContentAdsSettingsBackupOption.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this AdUnitContentAdsSettingsBackupOption.

        Color to use when type is set to COLOR. These are represented as six hexadecimal characters, similar to HTML color codes, but without the leading hash.

        :param color: The color of this AdUnitContentAdsSettingsBackupOption.
        :type color: str
        """

        self._color = color

    @property
    def type(self):
        """Gets the type of this AdUnitContentAdsSettingsBackupOption.

        Type of the backup option. Possible values are BLANK, COLOR and URL.

        :return: The type of this AdUnitContentAdsSettingsBackupOption.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AdUnitContentAdsSettingsBackupOption.

        Type of the backup option. Possible values are BLANK, COLOR and URL.

        :param type: The type of this AdUnitContentAdsSettingsBackupOption.
        :type type: str
        """

        self._type = type

    @property
    def url(self):
        """Gets the url of this AdUnitContentAdsSettingsBackupOption.

        URL to use when type is set to URL.

        :return: The url of this AdUnitContentAdsSettingsBackupOption.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AdUnitContentAdsSettingsBackupOption.

        URL to use when type is set to URL.

        :param url: The url of this AdUnitContentAdsSettingsBackupOption.
        :type url: str
        """

        self._url = url
