# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdClient(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arc_opt_in: bool=None, id: str=None, kind: str='adsensehost#adClient', product_code: str=None, supports_reporting: bool=None):
        """AdClient - a model defined in OpenAPI

        :param arc_opt_in: The arc_opt_in of this AdClient.
        :param id: The id of this AdClient.
        :param kind: The kind of this AdClient.
        :param product_code: The product_code of this AdClient.
        :param supports_reporting: The supports_reporting of this AdClient.
        """
        self.openapi_types = {
            'arc_opt_in': bool,
            'id': str,
            'kind': str,
            'product_code': str,
            'supports_reporting': bool
        }

        self.attribute_map = {
            'arc_opt_in': 'arcOptIn',
            'id': 'id',
            'kind': 'kind',
            'product_code': 'productCode',
            'supports_reporting': 'supportsReporting'
        }

        self._arc_opt_in = arc_opt_in
        self._id = id
        self._kind = kind
        self._product_code = product_code
        self._supports_reporting = supports_reporting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdClient':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdClient of this AdClient.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arc_opt_in(self):
        """Gets the arc_opt_in of this AdClient.

        Whether this ad client is opted in to ARC.

        :return: The arc_opt_in of this AdClient.
        :rtype: bool
        """
        return self._arc_opt_in

    @arc_opt_in.setter
    def arc_opt_in(self, arc_opt_in):
        """Sets the arc_opt_in of this AdClient.

        Whether this ad client is opted in to ARC.

        :param arc_opt_in: The arc_opt_in of this AdClient.
        :type arc_opt_in: bool
        """

        self._arc_opt_in = arc_opt_in

    @property
    def id(self):
        """Gets the id of this AdClient.

        Unique identifier of this ad client.

        :return: The id of this AdClient.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AdClient.

        Unique identifier of this ad client.

        :param id: The id of this AdClient.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this AdClient.

        Kind of resource this is, in this case adsensehost#adClient.

        :return: The kind of this AdClient.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this AdClient.

        Kind of resource this is, in this case adsensehost#adClient.

        :param kind: The kind of this AdClient.
        :type kind: str
        """

        self._kind = kind

    @property
    def product_code(self):
        """Gets the product_code of this AdClient.

        This ad client's product code, which corresponds to the PRODUCT_CODE report dimension.

        :return: The product_code of this AdClient.
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this AdClient.

        This ad client's product code, which corresponds to the PRODUCT_CODE report dimension.

        :param product_code: The product_code of this AdClient.
        :type product_code: str
        """

        self._product_code = product_code

    @property
    def supports_reporting(self):
        """Gets the supports_reporting of this AdClient.

        Whether this ad client supports being reported on.

        :return: The supports_reporting of this AdClient.
        :rtype: bool
        """
        return self._supports_reporting

    @supports_reporting.setter
    def supports_reporting(self, supports_reporting):
        """Sets the supports_reporting of this AdClient.

        Whether this ad client supports being reported on.

        :param supports_reporting: The supports_reporting of this AdClient.
        :type supports_reporting: bool
        """

        self._supports_reporting = supports_reporting
