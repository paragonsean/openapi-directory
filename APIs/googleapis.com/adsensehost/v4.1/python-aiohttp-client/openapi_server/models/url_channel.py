# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UrlChannel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, kind: str='adsensehost#urlChannel', url_pattern: str=None):
        """UrlChannel - a model defined in OpenAPI

        :param id: The id of this UrlChannel.
        :param kind: The kind of this UrlChannel.
        :param url_pattern: The url_pattern of this UrlChannel.
        """
        self.openapi_types = {
            'id': str,
            'kind': str,
            'url_pattern': str
        }

        self.attribute_map = {
            'id': 'id',
            'kind': 'kind',
            'url_pattern': 'urlPattern'
        }

        self._id = id
        self._kind = kind
        self._url_pattern = url_pattern

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UrlChannel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UrlChannel of this UrlChannel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UrlChannel.

        Unique identifier of this URL channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.

        :return: The id of this UrlChannel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UrlChannel.

        Unique identifier of this URL channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.

        :param id: The id of this UrlChannel.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this UrlChannel.

        Kind of resource this is, in this case adsensehost#urlChannel.

        :return: The kind of this UrlChannel.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this UrlChannel.

        Kind of resource this is, in this case adsensehost#urlChannel.

        :param kind: The kind of this UrlChannel.
        :type kind: str
        """

        self._kind = kind

    @property
    def url_pattern(self):
        """Gets the url_pattern of this UrlChannel.

        URL Pattern of this URL channel. Does not include \"http://\" or \"https://\". Example: www.example.com/home

        :return: The url_pattern of this UrlChannel.
        :rtype: str
        """
        return self._url_pattern

    @url_pattern.setter
    def url_pattern(self, url_pattern):
        """Sets the url_pattern of this UrlChannel.

        URL Pattern of this URL channel. Does not include \"http://\" or \"https://\". Example: www.example.com/home

        :param url_pattern: The url_pattern of this UrlChannel.
        :type url_pattern: str
        """

        self._url_pattern = url_pattern
