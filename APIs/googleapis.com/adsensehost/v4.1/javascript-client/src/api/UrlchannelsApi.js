/**
 * AdSense Host API
 * Generates performance reports, generates ad codes, and provides publisher management capabilities for AdSense Hosts.
 *
 * The version of the OpenAPI document: v4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UrlChannel from '../model/UrlChannel';
import UrlChannels from '../model/UrlChannels';

/**
* Urlchannels service.
* @module api/UrlchannelsApi
* @version v4.1
*/
export default class UrlchannelsApi {

    /**
    * Constructs a new UrlchannelsApi. 
    * @alias module:api/UrlchannelsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the adsensehostUrlchannelsDelete operation.
     * @callback module:api/UrlchannelsApi~adsensehostUrlchannelsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UrlChannel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a URL channel from the host AdSense account.
     * @param {String} adClientId Ad client from which to delete the URL channel.
     * @param {String} urlChannelId URL channel to delete.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:api/UrlchannelsApi~adsensehostUrlchannelsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UrlChannel}
     */
    adsensehostUrlchannelsDelete(adClientId, urlChannelId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adClientId' is set
      if (adClientId === undefined || adClientId === null) {
        throw new Error("Missing the required parameter 'adClientId' when calling adsensehostUrlchannelsDelete");
      }
      // verify the required parameter 'urlChannelId' is set
      if (urlChannelId === undefined || urlChannelId === null) {
        throw new Error("Missing the required parameter 'urlChannelId' when calling adsensehostUrlchannelsDelete");
      }

      let pathParams = {
        'adClientId': adClientId,
        'urlChannelId': urlChannelId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UrlChannel;
      return this.apiClient.callApi(
        '/adclients/{adClientId}/urlchannels/{urlChannelId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adsensehostUrlchannelsInsert operation.
     * @callback module:api/UrlchannelsApi~adsensehostUrlchannelsInsertCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UrlChannel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a new URL channel to the host AdSense account.
     * @param {String} adClientId Ad client to which the new URL channel will be added.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:model/UrlChannel} [urlChannel] 
     * @param {module:api/UrlchannelsApi~adsensehostUrlchannelsInsertCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UrlChannel}
     */
    adsensehostUrlchannelsInsert(adClientId, opts, callback) {
      opts = opts || {};
      let postBody = opts['urlChannel'];
      // verify the required parameter 'adClientId' is set
      if (adClientId === undefined || adClientId === null) {
        throw new Error("Missing the required parameter 'adClientId' when calling adsensehostUrlchannelsInsert");
      }

      let pathParams = {
        'adClientId': adClientId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UrlChannel;
      return this.apiClient.callApi(
        '/adclients/{adClientId}/urlchannels', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adsensehostUrlchannelsList operation.
     * @callback module:api/UrlchannelsApi~adsensehostUrlchannelsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UrlChannels} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all host URL channels in the host AdSense account.
     * @param {String} adClientId Ad client for which to list URL channels.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {Number} [maxResults] The maximum number of URL channels to include in the response, used for paging.
     * @param {String} [pageToken] A continuation token, used to page through URL channels. To retrieve the next page, set this parameter to the value of \"nextPageToken\" from the previous response.
     * @param {module:api/UrlchannelsApi~adsensehostUrlchannelsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UrlChannels}
     */
    adsensehostUrlchannelsList(adClientId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adClientId' is set
      if (adClientId === undefined || adClientId === null) {
        throw new Error("Missing the required parameter 'adClientId' when calling adsensehostUrlchannelsList");
      }

      let pathParams = {
        'adClientId': adClientId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'maxResults': opts['maxResults'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UrlChannels;
      return this.apiClient.callApi(
        '/adclients/{adClientId}/urlchannels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
