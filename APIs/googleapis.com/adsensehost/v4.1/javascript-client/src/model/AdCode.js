/**
 * AdSense Host API
 * Generates performance reports, generates ad codes, and provides publisher management capabilities for AdSense Hosts.
 *
 * The version of the OpenAPI document: v4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdCode model module.
 * @module model/AdCode
 * @version v4.1
 */
class AdCode {
    /**
     * Constructs a new <code>AdCode</code>.
     * @alias module:model/AdCode
     */
    constructor() { 
        
        AdCode.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'adsensehost#adCode';
    }

    /**
     * Constructs a <code>AdCode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdCode} obj Optional instance to populate.
     * @return {module:model/AdCode} The populated <code>AdCode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdCode();

            if (data.hasOwnProperty('adCode')) {
                obj['adCode'] = ApiClient.convertToType(data['adCode'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdCode</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdCode</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adCode'] && !(typeof data['adCode'] === 'string' || data['adCode'] instanceof String)) {
            throw new Error("Expected the field `adCode` to be a primitive type in the JSON string but got " + data['adCode']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * The ad code snippet.
 * @member {String} adCode
 */
AdCode.prototype['adCode'] = undefined;

/**
 * Kind this is, in this case adsensehost#adCode.
 * @member {String} kind
 * @default 'adsensehost#adCode'
 */
AdCode.prototype['kind'] = 'adsensehost#adCode';






export default AdCode;

