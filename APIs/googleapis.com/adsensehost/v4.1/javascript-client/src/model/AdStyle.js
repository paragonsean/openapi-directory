/**
 * AdSense Host API
 * Generates performance reports, generates ad codes, and provides publisher management capabilities for AdSense Hosts.
 *
 * The version of the OpenAPI document: v4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdStyleColors from './AdStyleColors';
import AdStyleFont from './AdStyleFont';

/**
 * The AdStyle model module.
 * @module model/AdStyle
 * @version v4.1
 */
class AdStyle {
    /**
     * Constructs a new <code>AdStyle</code>.
     * @alias module:model/AdStyle
     */
    constructor() { 
        
        AdStyle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'adsensehost#adStyle';
    }

    /**
     * Constructs a <code>AdStyle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdStyle} obj Optional instance to populate.
     * @return {module:model/AdStyle} The populated <code>AdStyle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdStyle();

            if (data.hasOwnProperty('colors')) {
                obj['colors'] = AdStyleColors.constructFromObject(data['colors']);
            }
            if (data.hasOwnProperty('corners')) {
                obj['corners'] = ApiClient.convertToType(data['corners'], 'String');
            }
            if (data.hasOwnProperty('font')) {
                obj['font'] = AdStyleFont.constructFromObject(data['font']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdStyle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdStyle</code>.
     */
    static validateJSON(data) {
        // validate the optional field `colors`
        if (data['colors']) { // data not null
          AdStyleColors.validateJSON(data['colors']);
        }
        // ensure the json data is a string
        if (data['corners'] && !(typeof data['corners'] === 'string' || data['corners'] instanceof String)) {
            throw new Error("Expected the field `corners` to be a primitive type in the JSON string but got " + data['corners']);
        }
        // validate the optional field `font`
        if (data['font']) { // data not null
          AdStyleFont.validateJSON(data['font']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdStyleColors} colors
 */
AdStyle.prototype['colors'] = undefined;

/**
 * The style of the corners in the ad (deprecated: never populated, ignored).
 * @member {String} corners
 */
AdStyle.prototype['corners'] = undefined;

/**
 * @member {module:model/AdStyleFont} font
 */
AdStyle.prototype['font'] = undefined;

/**
 * Kind this is, in this case adsensehost#adStyle.
 * @member {String} kind
 * @default 'adsensehost#adStyle'
 */
AdStyle.prototype['kind'] = 'adsensehost#adStyle';






export default AdStyle;

