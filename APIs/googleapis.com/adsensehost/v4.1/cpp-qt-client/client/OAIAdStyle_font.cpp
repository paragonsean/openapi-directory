/**
 * AdSense Host API
 * Generates performance reports, generates ad codes, and provides publisher management capabilities for AdSense Hosts.
 *
 * The version of the OpenAPI document: v4.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdStyle_font.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdStyle_font::OAIAdStyle_font(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdStyle_font::OAIAdStyle_font() {
    this->initializeModel();
}

OAIAdStyle_font::~OAIAdStyle_font() {}

void OAIAdStyle_font::initializeModel() {

    m_family_isSet = false;
    m_family_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIAdStyle_font::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdStyle_font::fromJsonObject(QJsonObject json) {

    m_family_isValid = ::OpenAPI::fromJsonValue(m_family, json[QString("family")]);
    m_family_isSet = !json[QString("family")].isNull() && m_family_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIAdStyle_font::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdStyle_font::asJsonObject() const {
    QJsonObject obj;
    if (m_family_isSet) {
        obj.insert(QString("family"), ::OpenAPI::toJsonValue(m_family));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

QString OAIAdStyle_font::getFamily() const {
    return m_family;
}
void OAIAdStyle_font::setFamily(const QString &family) {
    m_family = family;
    m_family_isSet = true;
}

bool OAIAdStyle_font::is_family_Set() const{
    return m_family_isSet;
}

bool OAIAdStyle_font::is_family_Valid() const{
    return m_family_isValid;
}

QString OAIAdStyle_font::getSize() const {
    return m_size;
}
void OAIAdStyle_font::setSize(const QString &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIAdStyle_font::is_size_Set() const{
    return m_size_isSet;
}

bool OAIAdStyle_font::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIAdStyle_font::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_family_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdStyle_font::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
