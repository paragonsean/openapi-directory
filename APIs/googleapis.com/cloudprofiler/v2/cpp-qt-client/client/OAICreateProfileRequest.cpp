/**
 * Cloud Profiler API
 * Manages continuous profiling information.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateProfileRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateProfileRequest::OAICreateProfileRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateProfileRequest::OAICreateProfileRequest() {
    this->initializeModel();
}

OAICreateProfileRequest::~OAICreateProfileRequest() {}

void OAICreateProfileRequest::initializeModel() {

    m_deployment_isSet = false;
    m_deployment_isValid = false;

    m_profile_type_isSet = false;
    m_profile_type_isValid = false;
}

void OAICreateProfileRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateProfileRequest::fromJsonObject(QJsonObject json) {

    m_deployment_isValid = ::OpenAPI::fromJsonValue(m_deployment, json[QString("deployment")]);
    m_deployment_isSet = !json[QString("deployment")].isNull() && m_deployment_isValid;

    m_profile_type_isValid = ::OpenAPI::fromJsonValue(m_profile_type, json[QString("profileType")]);
    m_profile_type_isSet = !json[QString("profileType")].isNull() && m_profile_type_isValid;
}

QString OAICreateProfileRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateProfileRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_deployment.isSet()) {
        obj.insert(QString("deployment"), ::OpenAPI::toJsonValue(m_deployment));
    }
    if (m_profile_type.size() > 0) {
        obj.insert(QString("profileType"), ::OpenAPI::toJsonValue(m_profile_type));
    }
    return obj;
}

OAIDeployment OAICreateProfileRequest::getDeployment() const {
    return m_deployment;
}
void OAICreateProfileRequest::setDeployment(const OAIDeployment &deployment) {
    m_deployment = deployment;
    m_deployment_isSet = true;
}

bool OAICreateProfileRequest::is_deployment_Set() const{
    return m_deployment_isSet;
}

bool OAICreateProfileRequest::is_deployment_Valid() const{
    return m_deployment_isValid;
}

QList<QString> OAICreateProfileRequest::getProfileType() const {
    return m_profile_type;
}
void OAICreateProfileRequest::setProfileType(const QList<QString> &profile_type) {
    m_profile_type = profile_type;
    m_profile_type_isSet = true;
}

bool OAICreateProfileRequest::is_profile_type_Set() const{
    return m_profile_type_isSet;
}

bool OAICreateProfileRequest::is_profile_type_Valid() const{
    return m_profile_type_isValid;
}

bool OAICreateProfileRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deployment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_type.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateProfileRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
