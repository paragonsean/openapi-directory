/**
 * Cloud Profiler API
 * Manages continuous profiling information.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Deployment from './Deployment';

/**
 * The CreateProfileRequest model module.
 * @module model/CreateProfileRequest
 * @version v2
 */
class CreateProfileRequest {
    /**
     * Constructs a new <code>CreateProfileRequest</code>.
     * CreateProfileRequest describes a profile resource online creation request. The deployment field must be populated. The profile_type specifies the list of profile types supported by the agent. The creation call will hang until a profile of one of these types needs to be collected. 
     * @alias module:model/CreateProfileRequest
     */
    constructor() { 
        
        CreateProfileRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateProfileRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateProfileRequest} obj Optional instance to populate.
     * @return {module:model/CreateProfileRequest} The populated <code>CreateProfileRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateProfileRequest();

            if (data.hasOwnProperty('deployment')) {
                obj['deployment'] = Deployment.constructFromObject(data['deployment']);
            }
            if (data.hasOwnProperty('profileType')) {
                obj['profileType'] = ApiClient.convertToType(data['profileType'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateProfileRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateProfileRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `deployment`
        if (data['deployment']) { // data not null
          Deployment.validateJSON(data['deployment']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['profileType'])) {
            throw new Error("Expected the field `profileType` to be an array in the JSON data but got " + data['profileType']);
        }

        return true;
    }


}



/**
 * @member {module:model/Deployment} deployment
 */
CreateProfileRequest.prototype['deployment'] = undefined;

/**
 * One or more profile types that the agent is capable of providing.
 * @member {Array.<module:model/CreateProfileRequest.ProfileTypeEnum>} profileType
 */
CreateProfileRequest.prototype['profileType'] = undefined;





/**
 * Allowed values for the <code>profileType</code> property.
 * @enum {String}
 * @readonly
 */
CreateProfileRequest['ProfileTypeEnum'] = {

    /**
     * value: "PROFILE_TYPE_UNSPECIFIED"
     * @const
     */
    "PROFILE_TYPE_UNSPECIFIED": "PROFILE_TYPE_UNSPECIFIED",

    /**
     * value: "CPU"
     * @const
     */
    "CPU": "CPU",

    /**
     * value: "WALL"
     * @const
     */
    "WALL": "WALL",

    /**
     * value: "HEAP"
     * @const
     */
    "HEAP": "HEAP",

    /**
     * value: "THREADS"
     * @const
     */
    "THREADS": "THREADS",

    /**
     * value: "CONTENTION"
     * @const
     */
    "CONTENTION": "CONTENTION",

    /**
     * value: "PEAK_HEAP"
     * @const
     */
    "PEAK_HEAP": "PEAK_HEAP",

    /**
     * value: "HEAP_ALLOC"
     * @const
     */
    "HEAP_ALLOC": "HEAP_ALLOC"
};



export default CreateProfileRequest;

