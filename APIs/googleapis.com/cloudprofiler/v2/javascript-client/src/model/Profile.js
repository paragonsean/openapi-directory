/**
 * Cloud Profiler API
 * Manages continuous profiling information.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Deployment from './Deployment';

/**
 * The Profile model module.
 * @module model/Profile
 * @version v2
 */
class Profile {
    /**
     * Constructs a new <code>Profile</code>.
     * Profile resource.
     * @alias module:model/Profile
     */
    constructor() { 
        
        Profile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Profile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Profile} obj Optional instance to populate.
     * @return {module:model/Profile} The populated <code>Profile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Profile();

            if (data.hasOwnProperty('deployment')) {
                obj['deployment'] = Deployment.constructFromObject(data['deployment']);
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('profileBytes')) {
                obj['profileBytes'] = ApiClient.convertToType(data['profileBytes'], 'Blob');
            }
            if (data.hasOwnProperty('profileType')) {
                obj['profileType'] = ApiClient.convertToType(data['profileType'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Profile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Profile</code>.
     */
    static validateJSON(data) {
        // validate the optional field `deployment`
        if (data['deployment']) { // data not null
          Deployment.validateJSON(data['deployment']);
        }
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['profileType'] && !(typeof data['profileType'] === 'string' || data['profileType'] instanceof String)) {
            throw new Error("Expected the field `profileType` to be a primitive type in the JSON string but got " + data['profileType']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/Deployment} deployment
 */
Profile.prototype['deployment'] = undefined;

/**
 * Duration of the profiling session. Input (for the offline mode) or output (for the online mode). The field represents requested profiling duration. It may slightly differ from the effective profiling duration, which is recorded in the profile data, in case the profiling can't be stopped immediately (e.g. in case stopping the profiling is handled asynchronously).
 * @member {String} duration
 */
Profile.prototype['duration'] = undefined;

/**
 * Input only. Labels associated to this specific profile. These labels will get merged with the deployment labels for the final data set. See documentation on deployment labels for validation rules and limits.
 * @member {Object.<String, String>} labels
 */
Profile.prototype['labels'] = undefined;

/**
 * Output only. Opaque, server-assigned, unique ID for this profile.
 * @member {String} name
 */
Profile.prototype['name'] = undefined;

/**
 * Input only. Profile bytes, as a gzip compressed serialized proto, the format is https://github.com/google/pprof/blob/master/proto/profile.proto.
 * @member {Blob} profileBytes
 */
Profile.prototype['profileBytes'] = undefined;

/**
 * Type of profile. For offline mode, this must be specified when creating the profile. For online mode it is assigned and returned by the server.
 * @member {module:model/Profile.ProfileTypeEnum} profileType
 */
Profile.prototype['profileType'] = undefined;

/**
 * Output only. Start time for the profile. This output is only present in response from the ListProfiles method.
 * @member {String} startTime
 */
Profile.prototype['startTime'] = undefined;





/**
 * Allowed values for the <code>profileType</code> property.
 * @enum {String}
 * @readonly
 */
Profile['ProfileTypeEnum'] = {

    /**
     * value: "PROFILE_TYPE_UNSPECIFIED"
     * @const
     */
    "PROFILE_TYPE_UNSPECIFIED": "PROFILE_TYPE_UNSPECIFIED",

    /**
     * value: "CPU"
     * @const
     */
    "CPU": "CPU",

    /**
     * value: "WALL"
     * @const
     */
    "WALL": "WALL",

    /**
     * value: "HEAP"
     * @const
     */
    "HEAP": "HEAP",

    /**
     * value: "THREADS"
     * @const
     */
    "THREADS": "THREADS",

    /**
     * value: "CONTENTION"
     * @const
     */
    "CONTENTION": "CONTENTION",

    /**
     * value: "PEAK_HEAP"
     * @const
     */
    "PEAK_HEAP": "PEAK_HEAP",

    /**
     * value: "HEAP_ALLOC"
     * @const
     */
    "HEAP_ALLOC": "HEAP_ALLOC"
};



export default Profile;

