# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.access_locations import AccessLocations
from openapi_server.models.access_reason import AccessReason
from openapi_server.models.approve_decision import ApproveDecision
from openapi_server.models.dismiss_decision import DismissDecision
from openapi_server.models.resource_properties import ResourceProperties
from openapi_server import util


class ApprovalRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approve: ApproveDecision=None, dismiss: DismissDecision=None, name: str=None, request_time: str=None, requested_duration: str=None, requested_expiration: str=None, requested_locations: AccessLocations=None, requested_reason: AccessReason=None, requested_resource_name: str=None, requested_resource_properties: ResourceProperties=None):
        """ApprovalRequest - a model defined in OpenAPI

        :param approve: The approve of this ApprovalRequest.
        :param dismiss: The dismiss of this ApprovalRequest.
        :param name: The name of this ApprovalRequest.
        :param request_time: The request_time of this ApprovalRequest.
        :param requested_duration: The requested_duration of this ApprovalRequest.
        :param requested_expiration: The requested_expiration of this ApprovalRequest.
        :param requested_locations: The requested_locations of this ApprovalRequest.
        :param requested_reason: The requested_reason of this ApprovalRequest.
        :param requested_resource_name: The requested_resource_name of this ApprovalRequest.
        :param requested_resource_properties: The requested_resource_properties of this ApprovalRequest.
        """
        self.openapi_types = {
            'approve': ApproveDecision,
            'dismiss': DismissDecision,
            'name': str,
            'request_time': str,
            'requested_duration': str,
            'requested_expiration': str,
            'requested_locations': AccessLocations,
            'requested_reason': AccessReason,
            'requested_resource_name': str,
            'requested_resource_properties': ResourceProperties
        }

        self.attribute_map = {
            'approve': 'approve',
            'dismiss': 'dismiss',
            'name': 'name',
            'request_time': 'requestTime',
            'requested_duration': 'requestedDuration',
            'requested_expiration': 'requestedExpiration',
            'requested_locations': 'requestedLocations',
            'requested_reason': 'requestedReason',
            'requested_resource_name': 'requestedResourceName',
            'requested_resource_properties': 'requestedResourceProperties'
        }

        self._approve = approve
        self._dismiss = dismiss
        self._name = name
        self._request_time = request_time
        self._requested_duration = requested_duration
        self._requested_expiration = requested_expiration
        self._requested_locations = requested_locations
        self._requested_reason = requested_reason
        self._requested_resource_name = requested_resource_name
        self._requested_resource_properties = requested_resource_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApprovalRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApprovalRequest of this ApprovalRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approve(self):
        """Gets the approve of this ApprovalRequest.


        :return: The approve of this ApprovalRequest.
        :rtype: ApproveDecision
        """
        return self._approve

    @approve.setter
    def approve(self, approve):
        """Sets the approve of this ApprovalRequest.


        :param approve: The approve of this ApprovalRequest.
        :type approve: ApproveDecision
        """

        self._approve = approve

    @property
    def dismiss(self):
        """Gets the dismiss of this ApprovalRequest.


        :return: The dismiss of this ApprovalRequest.
        :rtype: DismissDecision
        """
        return self._dismiss

    @dismiss.setter
    def dismiss(self, dismiss):
        """Sets the dismiss of this ApprovalRequest.


        :param dismiss: The dismiss of this ApprovalRequest.
        :type dismiss: DismissDecision
        """

        self._dismiss = dismiss

    @property
    def name(self):
        """Gets the name of this ApprovalRequest.

        The resource name of the request. Format is \"{projects|folders|organizations}/{id}/approvalRequests/{approval_request}\".

        :return: The name of this ApprovalRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApprovalRequest.

        The resource name of the request. Format is \"{projects|folders|organizations}/{id}/approvalRequests/{approval_request}\".

        :param name: The name of this ApprovalRequest.
        :type name: str
        """

        self._name = name

    @property
    def request_time(self):
        """Gets the request_time of this ApprovalRequest.

        The time at which approval was requested.

        :return: The request_time of this ApprovalRequest.
        :rtype: str
        """
        return self._request_time

    @request_time.setter
    def request_time(self, request_time):
        """Sets the request_time of this ApprovalRequest.

        The time at which approval was requested.

        :param request_time: The request_time of this ApprovalRequest.
        :type request_time: str
        """

        self._request_time = request_time

    @property
    def requested_duration(self):
        """Gets the requested_duration of this ApprovalRequest.

        The requested access duration.

        :return: The requested_duration of this ApprovalRequest.
        :rtype: str
        """
        return self._requested_duration

    @requested_duration.setter
    def requested_duration(self, requested_duration):
        """Sets the requested_duration of this ApprovalRequest.

        The requested access duration.

        :param requested_duration: The requested_duration of this ApprovalRequest.
        :type requested_duration: str
        """

        self._requested_duration = requested_duration

    @property
    def requested_expiration(self):
        """Gets the requested_expiration of this ApprovalRequest.

        The original requested expiration for the approval. Calculated by adding the requested_duration to the request_time.

        :return: The requested_expiration of this ApprovalRequest.
        :rtype: str
        """
        return self._requested_expiration

    @requested_expiration.setter
    def requested_expiration(self, requested_expiration):
        """Sets the requested_expiration of this ApprovalRequest.

        The original requested expiration for the approval. Calculated by adding the requested_duration to the request_time.

        :param requested_expiration: The requested_expiration of this ApprovalRequest.
        :type requested_expiration: str
        """

        self._requested_expiration = requested_expiration

    @property
    def requested_locations(self):
        """Gets the requested_locations of this ApprovalRequest.


        :return: The requested_locations of this ApprovalRequest.
        :rtype: AccessLocations
        """
        return self._requested_locations

    @requested_locations.setter
    def requested_locations(self, requested_locations):
        """Sets the requested_locations of this ApprovalRequest.


        :param requested_locations: The requested_locations of this ApprovalRequest.
        :type requested_locations: AccessLocations
        """

        self._requested_locations = requested_locations

    @property
    def requested_reason(self):
        """Gets the requested_reason of this ApprovalRequest.


        :return: The requested_reason of this ApprovalRequest.
        :rtype: AccessReason
        """
        return self._requested_reason

    @requested_reason.setter
    def requested_reason(self, requested_reason):
        """Sets the requested_reason of this ApprovalRequest.


        :param requested_reason: The requested_reason of this ApprovalRequest.
        :type requested_reason: AccessReason
        """

        self._requested_reason = requested_reason

    @property
    def requested_resource_name(self):
        """Gets the requested_resource_name of this ApprovalRequest.

        The resource for which approval is being requested. The format of the resource name is defined at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a \"full\" resource name (e.g. \"//library.googleapis.com/shelves/shelf1/books/book2\") or a \"relative\" resource name (e.g. \"shelves/shelf1/books/book2\") as described in the resource name specification.

        :return: The requested_resource_name of this ApprovalRequest.
        :rtype: str
        """
        return self._requested_resource_name

    @requested_resource_name.setter
    def requested_resource_name(self, requested_resource_name):
        """Sets the requested_resource_name of this ApprovalRequest.

        The resource for which approval is being requested. The format of the resource name is defined at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a \"full\" resource name (e.g. \"//library.googleapis.com/shelves/shelf1/books/book2\") or a \"relative\" resource name (e.g. \"shelves/shelf1/books/book2\") as described in the resource name specification.

        :param requested_resource_name: The requested_resource_name of this ApprovalRequest.
        :type requested_resource_name: str
        """

        self._requested_resource_name = requested_resource_name

    @property
    def requested_resource_properties(self):
        """Gets the requested_resource_properties of this ApprovalRequest.


        :return: The requested_resource_properties of this ApprovalRequest.
        :rtype: ResourceProperties
        """
        return self._requested_resource_properties

    @requested_resource_properties.setter
    def requested_resource_properties(self, requested_resource_properties):
        """Sets the requested_resource_properties of this ApprovalRequest.


        :param requested_resource_properties: The requested_resource_properties of this ApprovalRequest.
        :type requested_resource_properties: ResourceProperties
        """

        self._requested_resource_properties = requested_resource_properties
