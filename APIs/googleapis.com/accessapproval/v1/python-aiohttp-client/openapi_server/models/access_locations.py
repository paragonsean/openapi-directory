# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccessLocations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, principal_office_country: str=None, principal_physical_location_country: str=None):
        """AccessLocations - a model defined in OpenAPI

        :param principal_office_country: The principal_office_country of this AccessLocations.
        :param principal_physical_location_country: The principal_physical_location_country of this AccessLocations.
        """
        self.openapi_types = {
            'principal_office_country': str,
            'principal_physical_location_country': str
        }

        self.attribute_map = {
            'principal_office_country': 'principalOfficeCountry',
            'principal_physical_location_country': 'principalPhysicalLocationCountry'
        }

        self._principal_office_country = principal_office_country
        self._principal_physical_location_country = principal_physical_location_country

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessLocations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessLocations of this AccessLocations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def principal_office_country(self):
        """Gets the principal_office_country of this AccessLocations.

        The \"home office\" location of the principal. A two-letter country code (ISO 3166-1 alpha-2), such as \"US\", \"DE\" or \"GB\" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location

        :return: The principal_office_country of this AccessLocations.
        :rtype: str
        """
        return self._principal_office_country

    @principal_office_country.setter
    def principal_office_country(self, principal_office_country):
        """Sets the principal_office_country of this AccessLocations.

        The \"home office\" location of the principal. A two-letter country code (ISO 3166-1 alpha-2), such as \"US\", \"DE\" or \"GB\" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location

        :param principal_office_country: The principal_office_country of this AccessLocations.
        :type principal_office_country: str
        """

        self._principal_office_country = principal_office_country

    @property
    def principal_physical_location_country(self):
        """Gets the principal_physical_location_country of this AccessLocations.

        Physical location of the principal at the time of the access. A two-letter country code (ISO 3166-1 alpha-2), such as \"US\", \"DE\" or \"GB\" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location

        :return: The principal_physical_location_country of this AccessLocations.
        :rtype: str
        """
        return self._principal_physical_location_country

    @principal_physical_location_country.setter
    def principal_physical_location_country(self, principal_physical_location_country):
        """Sets the principal_physical_location_country of this AccessLocations.

        Physical location of the principal at the time of the access. A two-letter country code (ISO 3166-1 alpha-2), such as \"US\", \"DE\" or \"GB\" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location

        :param principal_physical_location_country: The principal_physical_location_country of this AccessLocations.
        :type principal_physical_location_country: str
        """

        self._principal_physical_location_country = principal_physical_location_country
