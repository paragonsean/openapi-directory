# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnrolledService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_product: str=None, enrollment_level: str=None):
        """EnrolledService - a model defined in OpenAPI

        :param cloud_product: The cloud_product of this EnrolledService.
        :param enrollment_level: The enrollment_level of this EnrolledService.
        """
        self.openapi_types = {
            'cloud_product': str,
            'enrollment_level': str
        }

        self.attribute_map = {
            'cloud_product': 'cloudProduct',
            'enrollment_level': 'enrollmentLevel'
        }

        self._cloud_product = cloud_product
        self._enrollment_level = enrollment_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnrolledService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnrolledService of this EnrolledService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_product(self):
        """Gets the cloud_product of this EnrolledService.

        The product for which Access Approval will be enrolled. Allowed values are listed below (case-sensitive): * all * GA * App Engine * Artifact Registry * BigQuery * Certificate Authority Service * Cloud Bigtable * Cloud Key Management Service * Compute Engine * Cloud Composer * Cloud Dataflow * Cloud Dataproc * Cloud DLP * Cloud EKM * Cloud Firestore * Cloud HSM * Cloud Identity and Access Management * Cloud Logging * Cloud NAT * Cloud Pub/Sub * Cloud Spanner * Cloud SQL * Cloud Storage * Eventarc * Google Kubernetes Engine * Organization Policy Serivice * Persistent Disk * Resource Manager * Secret Manager * Speaker ID Note: These values are supported as input for legacy purposes, but will not be returned from the API. * all * ga-only * appengine.googleapis.com * artifactregistry.googleapis.com * bigquery.googleapis.com * bigtable.googleapis.com * container.googleapis.com * cloudkms.googleapis.com * cloudresourcemanager.googleapis.com * cloudsql.googleapis.com * compute.googleapis.com * dataflow.googleapis.com * dataproc.googleapis.com * dlp.googleapis.com * iam.googleapis.com * logging.googleapis.com * orgpolicy.googleapis.com * pubsub.googleapis.com * spanner.googleapis.com * secretmanager.googleapis.com * speakerid.googleapis.com * storage.googleapis.com Calls to UpdateAccessApprovalSettings using 'all' or any of the XXX.googleapis.com will be translated to the associated product name ('all', 'App Engine', etc.). Note: 'all' will enroll the resource in all products supported at both 'GA' and 'Preview' levels. More information about levels of support is available at https://cloud.google.com/access-approval/docs/supported-services

        :return: The cloud_product of this EnrolledService.
        :rtype: str
        """
        return self._cloud_product

    @cloud_product.setter
    def cloud_product(self, cloud_product):
        """Sets the cloud_product of this EnrolledService.

        The product for which Access Approval will be enrolled. Allowed values are listed below (case-sensitive): * all * GA * App Engine * Artifact Registry * BigQuery * Certificate Authority Service * Cloud Bigtable * Cloud Key Management Service * Compute Engine * Cloud Composer * Cloud Dataflow * Cloud Dataproc * Cloud DLP * Cloud EKM * Cloud Firestore * Cloud HSM * Cloud Identity and Access Management * Cloud Logging * Cloud NAT * Cloud Pub/Sub * Cloud Spanner * Cloud SQL * Cloud Storage * Eventarc * Google Kubernetes Engine * Organization Policy Serivice * Persistent Disk * Resource Manager * Secret Manager * Speaker ID Note: These values are supported as input for legacy purposes, but will not be returned from the API. * all * ga-only * appengine.googleapis.com * artifactregistry.googleapis.com * bigquery.googleapis.com * bigtable.googleapis.com * container.googleapis.com * cloudkms.googleapis.com * cloudresourcemanager.googleapis.com * cloudsql.googleapis.com * compute.googleapis.com * dataflow.googleapis.com * dataproc.googleapis.com * dlp.googleapis.com * iam.googleapis.com * logging.googleapis.com * orgpolicy.googleapis.com * pubsub.googleapis.com * spanner.googleapis.com * secretmanager.googleapis.com * speakerid.googleapis.com * storage.googleapis.com Calls to UpdateAccessApprovalSettings using 'all' or any of the XXX.googleapis.com will be translated to the associated product name ('all', 'App Engine', etc.). Note: 'all' will enroll the resource in all products supported at both 'GA' and 'Preview' levels. More information about levels of support is available at https://cloud.google.com/access-approval/docs/supported-services

        :param cloud_product: The cloud_product of this EnrolledService.
        :type cloud_product: str
        """

        self._cloud_product = cloud_product

    @property
    def enrollment_level(self):
        """Gets the enrollment_level of this EnrolledService.

        The enrollment level of the service.

        :return: The enrollment_level of this EnrolledService.
        :rtype: str
        """
        return self._enrollment_level

    @enrollment_level.setter
    def enrollment_level(self, enrollment_level):
        """Sets the enrollment_level of this EnrolledService.

        The enrollment level of the service.

        :param enrollment_level: The enrollment_level of this EnrolledService.
        :type enrollment_level: str
        """
        allowed_values = ["ENROLLMENT_LEVEL_UNSPECIFIED", "BLOCK_ALL"]  # noqa: E501
        if enrollment_level not in allowed_values:
            raise ValueError(
                "Invalid value for `enrollment_level` ({0}), must be one of {1}"
                .format(enrollment_level, allowed_values)
            )

        self._enrollment_level = enrollment_level
