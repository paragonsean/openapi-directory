# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccessReason(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detail: str=None, type: str=None):
        """AccessReason - a model defined in OpenAPI

        :param detail: The detail of this AccessReason.
        :param type: The type of this AccessReason.
        """
        self.openapi_types = {
            'detail': str,
            'type': str
        }

        self.attribute_map = {
            'detail': 'detail',
            'type': 'type'
        }

        self._detail = detail
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessReason':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessReason of this AccessReason.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detail(self):
        """Gets the detail of this AccessReason.

        More detail about certain reason types. See comments for each type above.

        :return: The detail of this AccessReason.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this AccessReason.

        More detail about certain reason types. See comments for each type above.

        :param detail: The detail of this AccessReason.
        :type detail: str
        """

        self._detail = detail

    @property
    def type(self):
        """Gets the type of this AccessReason.

        Type of access justification.

        :return: The type of this AccessReason.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AccessReason.

        Type of access justification.

        :param type: The type of this AccessReason.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "CUSTOMER_INITIATED_SUPPORT", "GOOGLE_INITIATED_SERVICE", "GOOGLE_INITIATED_REVIEW", "THIRD_PARTY_DATA_REQUEST", "GOOGLE_RESPONSE_TO_PRODUCTION_ALERT", "CLOUD_INITIATED_ACCESS"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
