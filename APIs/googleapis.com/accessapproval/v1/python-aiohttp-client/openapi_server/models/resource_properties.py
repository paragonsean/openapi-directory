# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, excludes_descendants: bool=None):
        """ResourceProperties - a model defined in OpenAPI

        :param excludes_descendants: The excludes_descendants of this ResourceProperties.
        """
        self.openapi_types = {
            'excludes_descendants': bool
        }

        self.attribute_map = {
            'excludes_descendants': 'excludesDescendants'
        }

        self._excludes_descendants = excludes_descendants

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceProperties of this ResourceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def excludes_descendants(self):
        """Gets the excludes_descendants of this ResourceProperties.

        Whether an approval will exclude the descendants of the resource being requested.

        :return: The excludes_descendants of this ResourceProperties.
        :rtype: bool
        """
        return self._excludes_descendants

    @excludes_descendants.setter
    def excludes_descendants(self, excludes_descendants):
        """Sets the excludes_descendants of this ResourceProperties.

        Whether an approval will exclude the descendants of the resource being requested.

        :param excludes_descendants: The excludes_descendants of this ResourceProperties.
        :type excludes_descendants: bool
        """

        self._excludes_descendants = excludes_descendants
