/**
 * Access Approval API
 * An API for controlling access to data by Google personnel.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnrolledService.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnrolledService::OAIEnrolledService(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnrolledService::OAIEnrolledService() {
    this->initializeModel();
}

OAIEnrolledService::~OAIEnrolledService() {}

void OAIEnrolledService::initializeModel() {

    m_cloud_product_isSet = false;
    m_cloud_product_isValid = false;

    m_enrollment_level_isSet = false;
    m_enrollment_level_isValid = false;
}

void OAIEnrolledService::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnrolledService::fromJsonObject(QJsonObject json) {

    m_cloud_product_isValid = ::OpenAPI::fromJsonValue(m_cloud_product, json[QString("cloudProduct")]);
    m_cloud_product_isSet = !json[QString("cloudProduct")].isNull() && m_cloud_product_isValid;

    m_enrollment_level_isValid = ::OpenAPI::fromJsonValue(m_enrollment_level, json[QString("enrollmentLevel")]);
    m_enrollment_level_isSet = !json[QString("enrollmentLevel")].isNull() && m_enrollment_level_isValid;
}

QString OAIEnrolledService::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnrolledService::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_product_isSet) {
        obj.insert(QString("cloudProduct"), ::OpenAPI::toJsonValue(m_cloud_product));
    }
    if (m_enrollment_level_isSet) {
        obj.insert(QString("enrollmentLevel"), ::OpenAPI::toJsonValue(m_enrollment_level));
    }
    return obj;
}

QString OAIEnrolledService::getCloudProduct() const {
    return m_cloud_product;
}
void OAIEnrolledService::setCloudProduct(const QString &cloud_product) {
    m_cloud_product = cloud_product;
    m_cloud_product_isSet = true;
}

bool OAIEnrolledService::is_cloud_product_Set() const{
    return m_cloud_product_isSet;
}

bool OAIEnrolledService::is_cloud_product_Valid() const{
    return m_cloud_product_isValid;
}

QString OAIEnrolledService::getEnrollmentLevel() const {
    return m_enrollment_level;
}
void OAIEnrolledService::setEnrollmentLevel(const QString &enrollment_level) {
    m_enrollment_level = enrollment_level;
    m_enrollment_level_isSet = true;
}

bool OAIEnrolledService::is_enrollment_level_Set() const{
    return m_enrollment_level_isSet;
}

bool OAIEnrolledService::is_enrollment_level_Valid() const{
    return m_enrollment_level_isValid;
}

bool OAIEnrolledService::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_product_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enrollment_level_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnrolledService::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
