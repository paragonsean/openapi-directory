/**
 * Access Approval API
 * An API for controlling access to data by Google personnel.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISignatureInfo.h
 *
 * Information about the digital signature of the resource.
 */

#ifndef OAISignatureInfo_H
#define OAISignatureInfo_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISignatureInfo : public OAIObject {
public:
    OAISignatureInfo();
    OAISignatureInfo(QString json);
    ~OAISignatureInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCustomerKmsKeyVersion() const;
    void setCustomerKmsKeyVersion(const QString &customer_kms_key_version);
    bool is_customer_kms_key_version_Set() const;
    bool is_customer_kms_key_version_Valid() const;

    QString getGoogleKeyAlgorithm() const;
    void setGoogleKeyAlgorithm(const QString &google_key_algorithm);
    bool is_google_key_algorithm_Set() const;
    bool is_google_key_algorithm_Valid() const;

    QString getGooglePublicKeyPem() const;
    void setGooglePublicKeyPem(const QString &google_public_key_pem);
    bool is_google_public_key_pem_Set() const;
    bool is_google_public_key_pem_Valid() const;

    QByteArray getSerializedApprovalRequest() const;
    void setSerializedApprovalRequest(const QByteArray &serialized_approval_request);
    bool is_serialized_approval_request_Set() const;
    bool is_serialized_approval_request_Valid() const;

    QByteArray getSignature() const;
    void setSignature(const QByteArray &signature);
    bool is_signature_Set() const;
    bool is_signature_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_customer_kms_key_version;
    bool m_customer_kms_key_version_isSet;
    bool m_customer_kms_key_version_isValid;

    QString m_google_key_algorithm;
    bool m_google_key_algorithm_isSet;
    bool m_google_key_algorithm_isValid;

    QString m_google_public_key_pem;
    bool m_google_public_key_pem_isSet;
    bool m_google_public_key_pem_isValid;

    QByteArray m_serialized_approval_request;
    bool m_serialized_approval_request_isSet;
    bool m_serialized_approval_request_isValid;

    QByteArray m_signature;
    bool m_signature_isSet;
    bool m_signature_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISignatureInfo)

#endif // OAISignatureInfo_H
