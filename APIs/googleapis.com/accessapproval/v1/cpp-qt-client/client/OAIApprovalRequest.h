/**
 * Access Approval API
 * An API for controlling access to data by Google personnel.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApprovalRequest.h
 *
 * A request for the customer to approve access to a resource.
 */

#ifndef OAIApprovalRequest_H
#define OAIApprovalRequest_H

#include <QJsonObject>

#include "OAIAccessLocations.h"
#include "OAIAccessReason.h"
#include "OAIApproveDecision.h"
#include "OAIDismissDecision.h"
#include "OAIResourceProperties.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApproveDecision;
class OAIDismissDecision;
class OAIAccessLocations;
class OAIAccessReason;
class OAIResourceProperties;

class OAIApprovalRequest : public OAIObject {
public:
    OAIApprovalRequest();
    OAIApprovalRequest(QString json);
    ~OAIApprovalRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApproveDecision getApprove() const;
    void setApprove(const OAIApproveDecision &approve);
    bool is_approve_Set() const;
    bool is_approve_Valid() const;

    OAIDismissDecision getDismiss() const;
    void setDismiss(const OAIDismissDecision &dismiss);
    bool is_dismiss_Set() const;
    bool is_dismiss_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRequestTime() const;
    void setRequestTime(const QString &request_time);
    bool is_request_time_Set() const;
    bool is_request_time_Valid() const;

    QString getRequestedDuration() const;
    void setRequestedDuration(const QString &requested_duration);
    bool is_requested_duration_Set() const;
    bool is_requested_duration_Valid() const;

    QString getRequestedExpiration() const;
    void setRequestedExpiration(const QString &requested_expiration);
    bool is_requested_expiration_Set() const;
    bool is_requested_expiration_Valid() const;

    OAIAccessLocations getRequestedLocations() const;
    void setRequestedLocations(const OAIAccessLocations &requested_locations);
    bool is_requested_locations_Set() const;
    bool is_requested_locations_Valid() const;

    OAIAccessReason getRequestedReason() const;
    void setRequestedReason(const OAIAccessReason &requested_reason);
    bool is_requested_reason_Set() const;
    bool is_requested_reason_Valid() const;

    QString getRequestedResourceName() const;
    void setRequestedResourceName(const QString &requested_resource_name);
    bool is_requested_resource_name_Set() const;
    bool is_requested_resource_name_Valid() const;

    OAIResourceProperties getRequestedResourceProperties() const;
    void setRequestedResourceProperties(const OAIResourceProperties &requested_resource_properties);
    bool is_requested_resource_properties_Set() const;
    bool is_requested_resource_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApproveDecision m_approve;
    bool m_approve_isSet;
    bool m_approve_isValid;

    OAIDismissDecision m_dismiss;
    bool m_dismiss_isSet;
    bool m_dismiss_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_request_time;
    bool m_request_time_isSet;
    bool m_request_time_isValid;

    QString m_requested_duration;
    bool m_requested_duration_isSet;
    bool m_requested_duration_isValid;

    QString m_requested_expiration;
    bool m_requested_expiration_isSet;
    bool m_requested_expiration_isValid;

    OAIAccessLocations m_requested_locations;
    bool m_requested_locations_isSet;
    bool m_requested_locations_isValid;

    OAIAccessReason m_requested_reason;
    bool m_requested_reason_isSet;
    bool m_requested_reason_isValid;

    QString m_requested_resource_name;
    bool m_requested_resource_name_isSet;
    bool m_requested_resource_name_isValid;

    OAIResourceProperties m_requested_resource_properties;
    bool m_requested_resource_properties_isSet;
    bool m_requested_resource_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApprovalRequest)

#endif // OAIApprovalRequest_H
