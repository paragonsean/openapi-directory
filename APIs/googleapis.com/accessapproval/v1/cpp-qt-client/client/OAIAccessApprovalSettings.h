/**
 * Access Approval API
 * An API for controlling access to data by Google personnel.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessApprovalSettings.h
 *
 * Settings on a Project/Folder/Organization related to Access Approval.
 */

#ifndef OAIAccessApprovalSettings_H
#define OAIAccessApprovalSettings_H

#include <QJsonObject>

#include "OAIEnrolledService.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEnrolledService;

class OAIAccessApprovalSettings : public OAIObject {
public:
    OAIAccessApprovalSettings();
    OAIAccessApprovalSettings(QString json);
    ~OAIAccessApprovalSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveKeyVersion() const;
    void setActiveKeyVersion(const QString &active_key_version);
    bool is_active_key_version_Set() const;
    bool is_active_key_version_Valid() const;

    bool isAncestorHasActiveKeyVersion() const;
    void setAncestorHasActiveKeyVersion(const bool &ancestor_has_active_key_version);
    bool is_ancestor_has_active_key_version_Set() const;
    bool is_ancestor_has_active_key_version_Valid() const;

    bool isEnrolledAncestor() const;
    void setEnrolledAncestor(const bool &enrolled_ancestor);
    bool is_enrolled_ancestor_Set() const;
    bool is_enrolled_ancestor_Valid() const;

    QList<OAIEnrolledService> getEnrolledServices() const;
    void setEnrolledServices(const QList<OAIEnrolledService> &enrolled_services);
    bool is_enrolled_services_Set() const;
    bool is_enrolled_services_Valid() const;

    bool isInvalidKeyVersion() const;
    void setInvalidKeyVersion(const bool &invalid_key_version);
    bool is_invalid_key_version_Set() const;
    bool is_invalid_key_version_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getNotificationEmails() const;
    void setNotificationEmails(const QList<QString> &notification_emails);
    bool is_notification_emails_Set() const;
    bool is_notification_emails_Valid() const;

    QString getNotificationPubsubTopic() const;
    void setNotificationPubsubTopic(const QString &notification_pubsub_topic);
    bool is_notification_pubsub_topic_Set() const;
    bool is_notification_pubsub_topic_Valid() const;

    bool isPreferNoBroadApprovalRequests() const;
    void setPreferNoBroadApprovalRequests(const bool &prefer_no_broad_approval_requests);
    bool is_prefer_no_broad_approval_requests_Set() const;
    bool is_prefer_no_broad_approval_requests_Valid() const;

    qint32 getPreferredRequestExpirationDays() const;
    void setPreferredRequestExpirationDays(const qint32 &preferred_request_expiration_days);
    bool is_preferred_request_expiration_days_Set() const;
    bool is_preferred_request_expiration_days_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_key_version;
    bool m_active_key_version_isSet;
    bool m_active_key_version_isValid;

    bool m_ancestor_has_active_key_version;
    bool m_ancestor_has_active_key_version_isSet;
    bool m_ancestor_has_active_key_version_isValid;

    bool m_enrolled_ancestor;
    bool m_enrolled_ancestor_isSet;
    bool m_enrolled_ancestor_isValid;

    QList<OAIEnrolledService> m_enrolled_services;
    bool m_enrolled_services_isSet;
    bool m_enrolled_services_isValid;

    bool m_invalid_key_version;
    bool m_invalid_key_version_isSet;
    bool m_invalid_key_version_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_notification_emails;
    bool m_notification_emails_isSet;
    bool m_notification_emails_isValid;

    QString m_notification_pubsub_topic;
    bool m_notification_pubsub_topic_isSet;
    bool m_notification_pubsub_topic_isValid;

    bool m_prefer_no_broad_approval_requests;
    bool m_prefer_no_broad_approval_requests_isSet;
    bool m_prefer_no_broad_approval_requests_isValid;

    qint32 m_preferred_request_expiration_days;
    bool m_preferred_request_expiration_days_isSet;
    bool m_preferred_request_expiration_days_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessApprovalSettings)

#endif // OAIAccessApprovalSettings_H
