/**
 * Access Approval API
 * An API for controlling access to data by Google personnel.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SignatureInfo from './SignatureInfo';

/**
 * The ApproveDecision model module.
 * @module model/ApproveDecision
 * @version v1
 */
class ApproveDecision {
    /**
     * Constructs a new <code>ApproveDecision</code>.
     * A decision that has been made to approve access to a resource.
     * @alias module:model/ApproveDecision
     */
    constructor() { 
        
        ApproveDecision.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApproveDecision</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApproveDecision} obj Optional instance to populate.
     * @return {module:model/ApproveDecision} The populated <code>ApproveDecision</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApproveDecision();

            if (data.hasOwnProperty('approveTime')) {
                obj['approveTime'] = ApiClient.convertToType(data['approveTime'], 'String');
            }
            if (data.hasOwnProperty('autoApproved')) {
                obj['autoApproved'] = ApiClient.convertToType(data['autoApproved'], 'Boolean');
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('invalidateTime')) {
                obj['invalidateTime'] = ApiClient.convertToType(data['invalidateTime'], 'String');
            }
            if (data.hasOwnProperty('signatureInfo')) {
                obj['signatureInfo'] = SignatureInfo.constructFromObject(data['signatureInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApproveDecision</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApproveDecision</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['approveTime'] && !(typeof data['approveTime'] === 'string' || data['approveTime'] instanceof String)) {
            throw new Error("Expected the field `approveTime` to be a primitive type in the JSON string but got " + data['approveTime']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        // ensure the json data is a string
        if (data['invalidateTime'] && !(typeof data['invalidateTime'] === 'string' || data['invalidateTime'] instanceof String)) {
            throw new Error("Expected the field `invalidateTime` to be a primitive type in the JSON string but got " + data['invalidateTime']);
        }
        // validate the optional field `signatureInfo`
        if (data['signatureInfo']) { // data not null
          SignatureInfo.validateJSON(data['signatureInfo']);
        }

        return true;
    }


}



/**
 * The time at which approval was granted.
 * @member {String} approveTime
 */
ApproveDecision.prototype['approveTime'] = undefined;

/**
 * True when the request has been auto-approved.
 * @member {Boolean} autoApproved
 */
ApproveDecision.prototype['autoApproved'] = undefined;

/**
 * The time at which the approval expires.
 * @member {String} expireTime
 */
ApproveDecision.prototype['expireTime'] = undefined;

/**
 * If set, denotes the timestamp at which the approval is invalidated.
 * @member {String} invalidateTime
 */
ApproveDecision.prototype['invalidateTime'] = undefined;

/**
 * @member {module:model/SignatureInfo} signatureInfo
 */
ApproveDecision.prototype['signatureInfo'] = undefined;






export default ApproveDecision;

