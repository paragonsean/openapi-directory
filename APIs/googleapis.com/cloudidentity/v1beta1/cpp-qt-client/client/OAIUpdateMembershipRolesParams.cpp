/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateMembershipRolesParams.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateMembershipRolesParams::OAIUpdateMembershipRolesParams(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateMembershipRolesParams::OAIUpdateMembershipRolesParams() {
    this->initializeModel();
}

OAIUpdateMembershipRolesParams::~OAIUpdateMembershipRolesParams() {}

void OAIUpdateMembershipRolesParams::initializeModel() {

    m_field_mask_isSet = false;
    m_field_mask_isValid = false;

    m_membership_role_isSet = false;
    m_membership_role_isValid = false;
}

void OAIUpdateMembershipRolesParams::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateMembershipRolesParams::fromJsonObject(QJsonObject json) {

    m_field_mask_isValid = ::OpenAPI::fromJsonValue(m_field_mask, json[QString("fieldMask")]);
    m_field_mask_isSet = !json[QString("fieldMask")].isNull() && m_field_mask_isValid;

    m_membership_role_isValid = ::OpenAPI::fromJsonValue(m_membership_role, json[QString("membershipRole")]);
    m_membership_role_isSet = !json[QString("membershipRole")].isNull() && m_membership_role_isValid;
}

QString OAIUpdateMembershipRolesParams::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateMembershipRolesParams::asJsonObject() const {
    QJsonObject obj;
    if (m_field_mask_isSet) {
        obj.insert(QString("fieldMask"), ::OpenAPI::toJsonValue(m_field_mask));
    }
    if (m_membership_role.isSet()) {
        obj.insert(QString("membershipRole"), ::OpenAPI::toJsonValue(m_membership_role));
    }
    return obj;
}

QString OAIUpdateMembershipRolesParams::getFieldMask() const {
    return m_field_mask;
}
void OAIUpdateMembershipRolesParams::setFieldMask(const QString &field_mask) {
    m_field_mask = field_mask;
    m_field_mask_isSet = true;
}

bool OAIUpdateMembershipRolesParams::is_field_mask_Set() const{
    return m_field_mask_isSet;
}

bool OAIUpdateMembershipRolesParams::is_field_mask_Valid() const{
    return m_field_mask_isValid;
}

OAIMembershipRole OAIUpdateMembershipRolesParams::getMembershipRole() const {
    return m_membership_role;
}
void OAIUpdateMembershipRolesParams::setMembershipRole(const OAIMembershipRole &membership_role) {
    m_membership_role = membership_role;
    m_membership_role_isSet = true;
}

bool OAIUpdateMembershipRolesParams::is_membership_role_Set() const{
    return m_membership_role_isSet;
}

bool OAIUpdateMembershipRolesParams::is_membership_role_Valid() const{
    return m_membership_role_isValid;
}

bool OAIUpdateMembershipRolesParams::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_role.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateMembershipRolesParams::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
