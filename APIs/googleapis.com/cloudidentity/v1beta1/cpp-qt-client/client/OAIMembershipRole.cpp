/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMembershipRole.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMembershipRole::OAIMembershipRole(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMembershipRole::OAIMembershipRole() {
    this->initializeModel();
}

OAIMembershipRole::~OAIMembershipRole() {}

void OAIMembershipRole::initializeModel() {

    m_expiry_detail_isSet = false;
    m_expiry_detail_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_restriction_evaluations_isSet = false;
    m_restriction_evaluations_isValid = false;
}

void OAIMembershipRole::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMembershipRole::fromJsonObject(QJsonObject json) {

    m_expiry_detail_isValid = ::OpenAPI::fromJsonValue(m_expiry_detail, json[QString("expiryDetail")]);
    m_expiry_detail_isSet = !json[QString("expiryDetail")].isNull() && m_expiry_detail_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_restriction_evaluations_isValid = ::OpenAPI::fromJsonValue(m_restriction_evaluations, json[QString("restrictionEvaluations")]);
    m_restriction_evaluations_isSet = !json[QString("restrictionEvaluations")].isNull() && m_restriction_evaluations_isValid;
}

QString OAIMembershipRole::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMembershipRole::asJsonObject() const {
    QJsonObject obj;
    if (m_expiry_detail.isSet()) {
        obj.insert(QString("expiryDetail"), ::OpenAPI::toJsonValue(m_expiry_detail));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_restriction_evaluations.isSet()) {
        obj.insert(QString("restrictionEvaluations"), ::OpenAPI::toJsonValue(m_restriction_evaluations));
    }
    return obj;
}

OAIExpiryDetail OAIMembershipRole::getExpiryDetail() const {
    return m_expiry_detail;
}
void OAIMembershipRole::setExpiryDetail(const OAIExpiryDetail &expiry_detail) {
    m_expiry_detail = expiry_detail;
    m_expiry_detail_isSet = true;
}

bool OAIMembershipRole::is_expiry_detail_Set() const{
    return m_expiry_detail_isSet;
}

bool OAIMembershipRole::is_expiry_detail_Valid() const{
    return m_expiry_detail_isValid;
}

QString OAIMembershipRole::getName() const {
    return m_name;
}
void OAIMembershipRole::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIMembershipRole::is_name_Set() const{
    return m_name_isSet;
}

bool OAIMembershipRole::is_name_Valid() const{
    return m_name_isValid;
}

OAIRestrictionEvaluations OAIMembershipRole::getRestrictionEvaluations() const {
    return m_restriction_evaluations;
}
void OAIMembershipRole::setRestrictionEvaluations(const OAIRestrictionEvaluations &restriction_evaluations) {
    m_restriction_evaluations = restriction_evaluations;
    m_restriction_evaluations_isSet = true;
}

bool OAIMembershipRole::is_restriction_evaluations_Set() const{
    return m_restriction_evaluations_isSet;
}

bool OAIMembershipRole::is_restriction_evaluations_Valid() const{
    return m_restriction_evaluations_isValid;
}

bool OAIMembershipRole::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expiry_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restriction_evaluations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMembershipRole::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
