/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes() {
    this->initializeModel();
}

OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::~OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes() {}

void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::initializeModel() {

    m_cts_profile_match_isSet = false;
    m_cts_profile_match_isValid = false;

    m_enabled_unknown_sources_isSet = false;
    m_enabled_unknown_sources_isValid = false;

    m_has_potentially_harmful_apps_isSet = false;
    m_has_potentially_harmful_apps_isValid = false;

    m_owner_profile_account_isSet = false;
    m_owner_profile_account_isValid = false;

    m_ownership_privilege_isSet = false;
    m_ownership_privilege_isValid = false;

    m_supports_work_profile_isSet = false;
    m_supports_work_profile_isValid = false;

    m_verified_boot_isSet = false;
    m_verified_boot_isValid = false;

    m_verify_apps_enabled_isSet = false;
    m_verify_apps_enabled_isValid = false;
}

void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::fromJsonObject(QJsonObject json) {

    m_cts_profile_match_isValid = ::OpenAPI::fromJsonValue(m_cts_profile_match, json[QString("ctsProfileMatch")]);
    m_cts_profile_match_isSet = !json[QString("ctsProfileMatch")].isNull() && m_cts_profile_match_isValid;

    m_enabled_unknown_sources_isValid = ::OpenAPI::fromJsonValue(m_enabled_unknown_sources, json[QString("enabledUnknownSources")]);
    m_enabled_unknown_sources_isSet = !json[QString("enabledUnknownSources")].isNull() && m_enabled_unknown_sources_isValid;

    m_has_potentially_harmful_apps_isValid = ::OpenAPI::fromJsonValue(m_has_potentially_harmful_apps, json[QString("hasPotentiallyHarmfulApps")]);
    m_has_potentially_harmful_apps_isSet = !json[QString("hasPotentiallyHarmfulApps")].isNull() && m_has_potentially_harmful_apps_isValid;

    m_owner_profile_account_isValid = ::OpenAPI::fromJsonValue(m_owner_profile_account, json[QString("ownerProfileAccount")]);
    m_owner_profile_account_isSet = !json[QString("ownerProfileAccount")].isNull() && m_owner_profile_account_isValid;

    m_ownership_privilege_isValid = ::OpenAPI::fromJsonValue(m_ownership_privilege, json[QString("ownershipPrivilege")]);
    m_ownership_privilege_isSet = !json[QString("ownershipPrivilege")].isNull() && m_ownership_privilege_isValid;

    m_supports_work_profile_isValid = ::OpenAPI::fromJsonValue(m_supports_work_profile, json[QString("supportsWorkProfile")]);
    m_supports_work_profile_isSet = !json[QString("supportsWorkProfile")].isNull() && m_supports_work_profile_isValid;

    m_verified_boot_isValid = ::OpenAPI::fromJsonValue(m_verified_boot, json[QString("verifiedBoot")]);
    m_verified_boot_isSet = !json[QString("verifiedBoot")].isNull() && m_verified_boot_isValid;

    m_verify_apps_enabled_isValid = ::OpenAPI::fromJsonValue(m_verify_apps_enabled, json[QString("verifyAppsEnabled")]);
    m_verify_apps_enabled_isSet = !json[QString("verifyAppsEnabled")].isNull() && m_verify_apps_enabled_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_cts_profile_match_isSet) {
        obj.insert(QString("ctsProfileMatch"), ::OpenAPI::toJsonValue(m_cts_profile_match));
    }
    if (m_enabled_unknown_sources_isSet) {
        obj.insert(QString("enabledUnknownSources"), ::OpenAPI::toJsonValue(m_enabled_unknown_sources));
    }
    if (m_has_potentially_harmful_apps_isSet) {
        obj.insert(QString("hasPotentiallyHarmfulApps"), ::OpenAPI::toJsonValue(m_has_potentially_harmful_apps));
    }
    if (m_owner_profile_account_isSet) {
        obj.insert(QString("ownerProfileAccount"), ::OpenAPI::toJsonValue(m_owner_profile_account));
    }
    if (m_ownership_privilege_isSet) {
        obj.insert(QString("ownershipPrivilege"), ::OpenAPI::toJsonValue(m_ownership_privilege));
    }
    if (m_supports_work_profile_isSet) {
        obj.insert(QString("supportsWorkProfile"), ::OpenAPI::toJsonValue(m_supports_work_profile));
    }
    if (m_verified_boot_isSet) {
        obj.insert(QString("verifiedBoot"), ::OpenAPI::toJsonValue(m_verified_boot));
    }
    if (m_verify_apps_enabled_isSet) {
        obj.insert(QString("verifyAppsEnabled"), ::OpenAPI::toJsonValue(m_verify_apps_enabled));
    }
    return obj;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::isCtsProfileMatch() const {
    return m_cts_profile_match;
}
void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::setCtsProfileMatch(const bool &cts_profile_match) {
    m_cts_profile_match = cts_profile_match;
    m_cts_profile_match_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_cts_profile_match_Set() const{
    return m_cts_profile_match_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_cts_profile_match_Valid() const{
    return m_cts_profile_match_isValid;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::isEnabledUnknownSources() const {
    return m_enabled_unknown_sources;
}
void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::setEnabledUnknownSources(const bool &enabled_unknown_sources) {
    m_enabled_unknown_sources = enabled_unknown_sources;
    m_enabled_unknown_sources_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_enabled_unknown_sources_Set() const{
    return m_enabled_unknown_sources_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_enabled_unknown_sources_Valid() const{
    return m_enabled_unknown_sources_isValid;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::isHasPotentiallyHarmfulApps() const {
    return m_has_potentially_harmful_apps;
}
void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::setHasPotentiallyHarmfulApps(const bool &has_potentially_harmful_apps) {
    m_has_potentially_harmful_apps = has_potentially_harmful_apps;
    m_has_potentially_harmful_apps_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_has_potentially_harmful_apps_Set() const{
    return m_has_potentially_harmful_apps_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_has_potentially_harmful_apps_Valid() const{
    return m_has_potentially_harmful_apps_isValid;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::isOwnerProfileAccount() const {
    return m_owner_profile_account;
}
void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::setOwnerProfileAccount(const bool &owner_profile_account) {
    m_owner_profile_account = owner_profile_account;
    m_owner_profile_account_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_owner_profile_account_Set() const{
    return m_owner_profile_account_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_owner_profile_account_Valid() const{
    return m_owner_profile_account_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::getOwnershipPrivilege() const {
    return m_ownership_privilege;
}
void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::setOwnershipPrivilege(const QString &ownership_privilege) {
    m_ownership_privilege = ownership_privilege;
    m_ownership_privilege_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_ownership_privilege_Set() const{
    return m_ownership_privilege_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_ownership_privilege_Valid() const{
    return m_ownership_privilege_isValid;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::isSupportsWorkProfile() const {
    return m_supports_work_profile;
}
void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::setSupportsWorkProfile(const bool &supports_work_profile) {
    m_supports_work_profile = supports_work_profile;
    m_supports_work_profile_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_supports_work_profile_Set() const{
    return m_supports_work_profile_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_supports_work_profile_Valid() const{
    return m_supports_work_profile_isValid;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::isVerifiedBoot() const {
    return m_verified_boot;
}
void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::setVerifiedBoot(const bool &verified_boot) {
    m_verified_boot = verified_boot;
    m_verified_boot_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_verified_boot_Set() const{
    return m_verified_boot_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_verified_boot_Valid() const{
    return m_verified_boot_isValid;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::isVerifyAppsEnabled() const {
    return m_verify_apps_enabled;
}
void OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::setVerifyAppsEnabled(const bool &verify_apps_enabled) {
    m_verify_apps_enabled = verify_apps_enabled;
    m_verify_apps_enabled_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_verify_apps_enabled_Set() const{
    return m_verify_apps_enabled_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::is_verify_apps_enabled_Valid() const{
    return m_verify_apps_enabled_isValid;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cts_profile_match_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_unknown_sources_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_potentially_harmful_apps_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_profile_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ownership_privilege_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supports_work_profile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verified_boot_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verify_apps_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
