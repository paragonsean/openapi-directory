/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModifyMembershipRolesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModifyMembershipRolesRequest::OAIModifyMembershipRolesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModifyMembershipRolesRequest::OAIModifyMembershipRolesRequest() {
    this->initializeModel();
}

OAIModifyMembershipRolesRequest::~OAIModifyMembershipRolesRequest() {}

void OAIModifyMembershipRolesRequest::initializeModel() {

    m_add_roles_isSet = false;
    m_add_roles_isValid = false;

    m_remove_roles_isSet = false;
    m_remove_roles_isValid = false;

    m_update_roles_params_isSet = false;
    m_update_roles_params_isValid = false;
}

void OAIModifyMembershipRolesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModifyMembershipRolesRequest::fromJsonObject(QJsonObject json) {

    m_add_roles_isValid = ::OpenAPI::fromJsonValue(m_add_roles, json[QString("addRoles")]);
    m_add_roles_isSet = !json[QString("addRoles")].isNull() && m_add_roles_isValid;

    m_remove_roles_isValid = ::OpenAPI::fromJsonValue(m_remove_roles, json[QString("removeRoles")]);
    m_remove_roles_isSet = !json[QString("removeRoles")].isNull() && m_remove_roles_isValid;

    m_update_roles_params_isValid = ::OpenAPI::fromJsonValue(m_update_roles_params, json[QString("updateRolesParams")]);
    m_update_roles_params_isSet = !json[QString("updateRolesParams")].isNull() && m_update_roles_params_isValid;
}

QString OAIModifyMembershipRolesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModifyMembershipRolesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_add_roles.size() > 0) {
        obj.insert(QString("addRoles"), ::OpenAPI::toJsonValue(m_add_roles));
    }
    if (m_remove_roles.size() > 0) {
        obj.insert(QString("removeRoles"), ::OpenAPI::toJsonValue(m_remove_roles));
    }
    if (m_update_roles_params.size() > 0) {
        obj.insert(QString("updateRolesParams"), ::OpenAPI::toJsonValue(m_update_roles_params));
    }
    return obj;
}

QList<OAIMembershipRole> OAIModifyMembershipRolesRequest::getAddRoles() const {
    return m_add_roles;
}
void OAIModifyMembershipRolesRequest::setAddRoles(const QList<OAIMembershipRole> &add_roles) {
    m_add_roles = add_roles;
    m_add_roles_isSet = true;
}

bool OAIModifyMembershipRolesRequest::is_add_roles_Set() const{
    return m_add_roles_isSet;
}

bool OAIModifyMembershipRolesRequest::is_add_roles_Valid() const{
    return m_add_roles_isValid;
}

QList<QString> OAIModifyMembershipRolesRequest::getRemoveRoles() const {
    return m_remove_roles;
}
void OAIModifyMembershipRolesRequest::setRemoveRoles(const QList<QString> &remove_roles) {
    m_remove_roles = remove_roles;
    m_remove_roles_isSet = true;
}

bool OAIModifyMembershipRolesRequest::is_remove_roles_Set() const{
    return m_remove_roles_isSet;
}

bool OAIModifyMembershipRolesRequest::is_remove_roles_Valid() const{
    return m_remove_roles_isValid;
}

QList<OAIUpdateMembershipRolesParams> OAIModifyMembershipRolesRequest::getUpdateRolesParams() const {
    return m_update_roles_params;
}
void OAIModifyMembershipRolesRequest::setUpdateRolesParams(const QList<OAIUpdateMembershipRolesParams> &update_roles_params) {
    m_update_roles_params = update_roles_params;
    m_update_roles_params_isSet = true;
}

bool OAIModifyMembershipRolesRequest::is_update_roles_params_Set() const{
    return m_update_roles_params_isSet;
}

bool OAIModifyMembershipRolesRequest::is_update_roles_params_Valid() const{
    return m_update_roles_params_isValid;
}

bool OAIModifyMembershipRolesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_remove_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_roles_params.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModifyMembershipRolesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
