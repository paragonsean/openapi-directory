/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsCloudidentityDevicesV1ClientState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsCloudidentityDevicesV1ClientState::OAIGoogleAppsCloudidentityDevicesV1ClientState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsCloudidentityDevicesV1ClientState::OAIGoogleAppsCloudidentityDevicesV1ClientState() {
    this->initializeModel();
}

OAIGoogleAppsCloudidentityDevicesV1ClientState::~OAIGoogleAppsCloudidentityDevicesV1ClientState() {}

void OAIGoogleAppsCloudidentityDevicesV1ClientState::initializeModel() {

    m_asset_tags_isSet = false;
    m_asset_tags_isValid = false;

    m_compliance_state_isSet = false;
    m_compliance_state_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_custom_id_isSet = false;
    m_custom_id_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_health_score_isSet = false;
    m_health_score_isValid = false;

    m_key_value_pairs_isSet = false;
    m_key_value_pairs_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_managed_isSet = false;
    m_managed_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_owner_type_isSet = false;
    m_owner_type_isValid = false;

    m_score_reason_isSet = false;
    m_score_reason_isValid = false;
}

void OAIGoogleAppsCloudidentityDevicesV1ClientState::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsCloudidentityDevicesV1ClientState::fromJsonObject(QJsonObject json) {

    m_asset_tags_isValid = ::OpenAPI::fromJsonValue(m_asset_tags, json[QString("assetTags")]);
    m_asset_tags_isSet = !json[QString("assetTags")].isNull() && m_asset_tags_isValid;

    m_compliance_state_isValid = ::OpenAPI::fromJsonValue(m_compliance_state, json[QString("complianceState")]);
    m_compliance_state_isSet = !json[QString("complianceState")].isNull() && m_compliance_state_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_custom_id_isValid = ::OpenAPI::fromJsonValue(m_custom_id, json[QString("customId")]);
    m_custom_id_isSet = !json[QString("customId")].isNull() && m_custom_id_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_health_score_isValid = ::OpenAPI::fromJsonValue(m_health_score, json[QString("healthScore")]);
    m_health_score_isSet = !json[QString("healthScore")].isNull() && m_health_score_isValid;

    m_key_value_pairs_isValid = ::OpenAPI::fromJsonValue(m_key_value_pairs, json[QString("keyValuePairs")]);
    m_key_value_pairs_isSet = !json[QString("keyValuePairs")].isNull() && m_key_value_pairs_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_managed_isValid = ::OpenAPI::fromJsonValue(m_managed, json[QString("managed")]);
    m_managed_isSet = !json[QString("managed")].isNull() && m_managed_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_owner_type_isValid = ::OpenAPI::fromJsonValue(m_owner_type, json[QString("ownerType")]);
    m_owner_type_isSet = !json[QString("ownerType")].isNull() && m_owner_type_isValid;

    m_score_reason_isValid = ::OpenAPI::fromJsonValue(m_score_reason, json[QString("scoreReason")]);
    m_score_reason_isSet = !json[QString("scoreReason")].isNull() && m_score_reason_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsCloudidentityDevicesV1ClientState::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_tags.size() > 0) {
        obj.insert(QString("assetTags"), ::OpenAPI::toJsonValue(m_asset_tags));
    }
    if (m_compliance_state_isSet) {
        obj.insert(QString("complianceState"), ::OpenAPI::toJsonValue(m_compliance_state));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_custom_id_isSet) {
        obj.insert(QString("customId"), ::OpenAPI::toJsonValue(m_custom_id));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_health_score_isSet) {
        obj.insert(QString("healthScore"), ::OpenAPI::toJsonValue(m_health_score));
    }
    if (m_key_value_pairs.size() > 0) {
        obj.insert(QString("keyValuePairs"), ::OpenAPI::toJsonValue(m_key_value_pairs));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_managed_isSet) {
        obj.insert(QString("managed"), ::OpenAPI::toJsonValue(m_managed));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_owner_type_isSet) {
        obj.insert(QString("ownerType"), ::OpenAPI::toJsonValue(m_owner_type));
    }
    if (m_score_reason_isSet) {
        obj.insert(QString("scoreReason"), ::OpenAPI::toJsonValue(m_score_reason));
    }
    return obj;
}

QList<QString> OAIGoogleAppsCloudidentityDevicesV1ClientState::getAssetTags() const {
    return m_asset_tags;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setAssetTags(const QList<QString> &asset_tags) {
    m_asset_tags = asset_tags;
    m_asset_tags_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_asset_tags_Set() const{
    return m_asset_tags_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_asset_tags_Valid() const{
    return m_asset_tags_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::getComplianceState() const {
    return m_compliance_state;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setComplianceState(const QString &compliance_state) {
    m_compliance_state = compliance_state;
    m_compliance_state_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_compliance_state_Set() const{
    return m_compliance_state_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_compliance_state_Valid() const{
    return m_compliance_state_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::getCustomId() const {
    return m_custom_id;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setCustomId(const QString &custom_id) {
    m_custom_id = custom_id;
    m_custom_id_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_custom_id_Set() const{
    return m_custom_id_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_custom_id_Valid() const{
    return m_custom_id_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::getEtag() const {
    return m_etag;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::getHealthScore() const {
    return m_health_score;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setHealthScore(const QString &health_score) {
    m_health_score = health_score;
    m_health_score_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_health_score_Set() const{
    return m_health_score_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_health_score_Valid() const{
    return m_health_score_isValid;
}

QMap<QString, OAIGoogleAppsCloudidentityDevicesV1CustomAttributeValue> OAIGoogleAppsCloudidentityDevicesV1ClientState::getKeyValuePairs() const {
    return m_key_value_pairs;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setKeyValuePairs(const QMap<QString, OAIGoogleAppsCloudidentityDevicesV1CustomAttributeValue> &key_value_pairs) {
    m_key_value_pairs = key_value_pairs;
    m_key_value_pairs_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_key_value_pairs_Set() const{
    return m_key_value_pairs_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_key_value_pairs_Valid() const{
    return m_key_value_pairs_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setLastUpdateTime(const QString &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::getManaged() const {
    return m_managed;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setManaged(const QString &managed) {
    m_managed = managed;
    m_managed_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_managed_Set() const{
    return m_managed_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_managed_Valid() const{
    return m_managed_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::getName() const {
    return m_name;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::getOwnerType() const {
    return m_owner_type;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setOwnerType(const QString &owner_type) {
    m_owner_type = owner_type;
    m_owner_type_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_owner_type_Set() const{
    return m_owner_type_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_owner_type_Valid() const{
    return m_owner_type_isValid;
}

QString OAIGoogleAppsCloudidentityDevicesV1ClientState::getScoreReason() const {
    return m_score_reason;
}
void OAIGoogleAppsCloudidentityDevicesV1ClientState::setScoreReason(const QString &score_reason) {
    m_score_reason = score_reason;
    m_score_reason_isSet = true;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_score_reason_Set() const{
    return m_score_reason_isSet;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::is_score_reason_Valid() const{
    return m_score_reason_isValid;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_compliance_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_value_pairs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_managed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_reason_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsCloudidentityDevicesV1ClientState::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
