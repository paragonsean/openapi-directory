/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBrowserInfo.h
 *
 * Browser-specific fields reported by the Endpoint Verification extension. LINT.IfChange
 */

#ifndef OAIBrowserInfo_H
#define OAIBrowserInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBrowserInfo : public OAIObject {
public:
    OAIBrowserInfo();
    OAIBrowserInfo(QString json);
    ~OAIBrowserInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBrowserManagementState() const;
    void setBrowserManagementState(const QString &browser_management_state);
    bool is_browser_management_state_Set() const;
    bool is_browser_management_state_Valid() const;

    QString getBrowserVersion() const;
    void setBrowserVersion(const QString &browser_version);
    bool is_browser_version_Set() const;
    bool is_browser_version_Valid() const;

    bool isIsBuiltInDnsClientEnabled() const;
    void setIsBuiltInDnsClientEnabled(const bool &is_built_in_dns_client_enabled);
    bool is_is_built_in_dns_client_enabled_Set() const;
    bool is_is_built_in_dns_client_enabled_Valid() const;

    bool isIsBulkDataEntryAnalysisEnabled() const;
    void setIsBulkDataEntryAnalysisEnabled(const bool &is_bulk_data_entry_analysis_enabled);
    bool is_is_bulk_data_entry_analysis_enabled_Set() const;
    bool is_is_bulk_data_entry_analysis_enabled_Valid() const;

    bool isIsChromeCleanupEnabled() const;
    void setIsChromeCleanupEnabled(const bool &is_chrome_cleanup_enabled);
    bool is_is_chrome_cleanup_enabled_Set() const;
    bool is_is_chrome_cleanup_enabled_Valid() const;

    bool isIsChromeRemoteDesktopAppBlocked() const;
    void setIsChromeRemoteDesktopAppBlocked(const bool &is_chrome_remote_desktop_app_blocked);
    bool is_is_chrome_remote_desktop_app_blocked_Set() const;
    bool is_is_chrome_remote_desktop_app_blocked_Valid() const;

    bool isIsFileDownloadAnalysisEnabled() const;
    void setIsFileDownloadAnalysisEnabled(const bool &is_file_download_analysis_enabled);
    bool is_is_file_download_analysis_enabled_Set() const;
    bool is_is_file_download_analysis_enabled_Valid() const;

    bool isIsFileUploadAnalysisEnabled() const;
    void setIsFileUploadAnalysisEnabled(const bool &is_file_upload_analysis_enabled);
    bool is_is_file_upload_analysis_enabled_Set() const;
    bool is_is_file_upload_analysis_enabled_Valid() const;

    bool isIsRealtimeUrlCheckEnabled() const;
    void setIsRealtimeUrlCheckEnabled(const bool &is_realtime_url_check_enabled);
    bool is_is_realtime_url_check_enabled_Set() const;
    bool is_is_realtime_url_check_enabled_Valid() const;

    bool isIsSecurityEventAnalysisEnabled() const;
    void setIsSecurityEventAnalysisEnabled(const bool &is_security_event_analysis_enabled);
    bool is_is_security_event_analysis_enabled_Set() const;
    bool is_is_security_event_analysis_enabled_Valid() const;

    bool isIsSiteIsolationEnabled() const;
    void setIsSiteIsolationEnabled(const bool &is_site_isolation_enabled);
    bool is_is_site_isolation_enabled_Set() const;
    bool is_is_site_isolation_enabled_Valid() const;

    bool isIsThirdPartyBlockingEnabled() const;
    void setIsThirdPartyBlockingEnabled(const bool &is_third_party_blocking_enabled);
    bool is_is_third_party_blocking_enabled_Set() const;
    bool is_is_third_party_blocking_enabled_Valid() const;

    QString getPasswordProtectionWarningTrigger() const;
    void setPasswordProtectionWarningTrigger(const QString &password_protection_warning_trigger);
    bool is_password_protection_warning_trigger_Set() const;
    bool is_password_protection_warning_trigger_Valid() const;

    QString getSafeBrowsingProtectionLevel() const;
    void setSafeBrowsingProtectionLevel(const QString &safe_browsing_protection_level);
    bool is_safe_browsing_protection_level_Set() const;
    bool is_safe_browsing_protection_level_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_browser_management_state;
    bool m_browser_management_state_isSet;
    bool m_browser_management_state_isValid;

    QString m_browser_version;
    bool m_browser_version_isSet;
    bool m_browser_version_isValid;

    bool m_is_built_in_dns_client_enabled;
    bool m_is_built_in_dns_client_enabled_isSet;
    bool m_is_built_in_dns_client_enabled_isValid;

    bool m_is_bulk_data_entry_analysis_enabled;
    bool m_is_bulk_data_entry_analysis_enabled_isSet;
    bool m_is_bulk_data_entry_analysis_enabled_isValid;

    bool m_is_chrome_cleanup_enabled;
    bool m_is_chrome_cleanup_enabled_isSet;
    bool m_is_chrome_cleanup_enabled_isValid;

    bool m_is_chrome_remote_desktop_app_blocked;
    bool m_is_chrome_remote_desktop_app_blocked_isSet;
    bool m_is_chrome_remote_desktop_app_blocked_isValid;

    bool m_is_file_download_analysis_enabled;
    bool m_is_file_download_analysis_enabled_isSet;
    bool m_is_file_download_analysis_enabled_isValid;

    bool m_is_file_upload_analysis_enabled;
    bool m_is_file_upload_analysis_enabled_isSet;
    bool m_is_file_upload_analysis_enabled_isValid;

    bool m_is_realtime_url_check_enabled;
    bool m_is_realtime_url_check_enabled_isSet;
    bool m_is_realtime_url_check_enabled_isValid;

    bool m_is_security_event_analysis_enabled;
    bool m_is_security_event_analysis_enabled_isSet;
    bool m_is_security_event_analysis_enabled_isValid;

    bool m_is_site_isolation_enabled;
    bool m_is_site_isolation_enabled_isSet;
    bool m_is_site_isolation_enabled_isValid;

    bool m_is_third_party_blocking_enabled;
    bool m_is_third_party_blocking_enabled_isSet;
    bool m_is_third_party_blocking_enabled_isValid;

    QString m_password_protection_warning_trigger;
    bool m_password_protection_warning_trigger_isSet;
    bool m_password_protection_warning_trigger_isValid;

    QString m_safe_browsing_protection_level;
    bool m_safe_browsing_protection_level_isSet;
    bool m_safe_browsing_protection_level_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBrowserInfo)

#endif // OAIBrowserInfo_H
