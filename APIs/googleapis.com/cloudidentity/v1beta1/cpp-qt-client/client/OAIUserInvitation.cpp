/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserInvitation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserInvitation::OAIUserInvitation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserInvitation::OAIUserInvitation() {
    this->initializeModel();
}

OAIUserInvitation::~OAIUserInvitation() {}

void OAIUserInvitation::initializeModel() {

    m_mails_sent_count_isSet = false;
    m_mails_sent_count_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIUserInvitation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserInvitation::fromJsonObject(QJsonObject json) {

    m_mails_sent_count_isValid = ::OpenAPI::fromJsonValue(m_mails_sent_count, json[QString("mailsSentCount")]);
    m_mails_sent_count_isSet = !json[QString("mailsSentCount")].isNull() && m_mails_sent_count_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIUserInvitation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserInvitation::asJsonObject() const {
    QJsonObject obj;
    if (m_mails_sent_count_isSet) {
        obj.insert(QString("mailsSentCount"), ::OpenAPI::toJsonValue(m_mails_sent_count));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIUserInvitation::getMailsSentCount() const {
    return m_mails_sent_count;
}
void OAIUserInvitation::setMailsSentCount(const QString &mails_sent_count) {
    m_mails_sent_count = mails_sent_count;
    m_mails_sent_count_isSet = true;
}

bool OAIUserInvitation::is_mails_sent_count_Set() const{
    return m_mails_sent_count_isSet;
}

bool OAIUserInvitation::is_mails_sent_count_Valid() const{
    return m_mails_sent_count_isValid;
}

QString OAIUserInvitation::getName() const {
    return m_name;
}
void OAIUserInvitation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUserInvitation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUserInvitation::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUserInvitation::getState() const {
    return m_state;
}
void OAIUserInvitation::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIUserInvitation::is_state_Set() const{
    return m_state_isSet;
}

bool OAIUserInvitation::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIUserInvitation::getUpdateTime() const {
    return m_update_time;
}
void OAIUserInvitation::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIUserInvitation::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIUserInvitation::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIUserInvitation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mails_sent_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserInvitation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
