/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICancelWipeDeviceUserRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICancelWipeDeviceUserRequest::OAICancelWipeDeviceUserRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICancelWipeDeviceUserRequest::OAICancelWipeDeviceUserRequest() {
    this->initializeModel();
}

OAICancelWipeDeviceUserRequest::~OAICancelWipeDeviceUserRequest() {}

void OAICancelWipeDeviceUserRequest::initializeModel() {

    m_customer_isSet = false;
    m_customer_isValid = false;
}

void OAICancelWipeDeviceUserRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICancelWipeDeviceUserRequest::fromJsonObject(QJsonObject json) {

    m_customer_isValid = ::OpenAPI::fromJsonValue(m_customer, json[QString("customer")]);
    m_customer_isSet = !json[QString("customer")].isNull() && m_customer_isValid;
}

QString OAICancelWipeDeviceUserRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICancelWipeDeviceUserRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_isSet) {
        obj.insert(QString("customer"), ::OpenAPI::toJsonValue(m_customer));
    }
    return obj;
}

QString OAICancelWipeDeviceUserRequest::getCustomer() const {
    return m_customer;
}
void OAICancelWipeDeviceUserRequest::setCustomer(const QString &customer) {
    m_customer = customer;
    m_customer_isSet = true;
}

bool OAICancelWipeDeviceUserRequest::is_customer_Set() const{
    return m_customer_isSet;
}

bool OAICancelWipeDeviceUserRequest::is_customer_Valid() const{
    return m_customer_isValid;
}

bool OAICancelWipeDeviceUserRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICancelWipeDeviceUserRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
