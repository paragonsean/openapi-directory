/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWipeDeviceUserResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWipeDeviceUserResponse::OAIWipeDeviceUserResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWipeDeviceUserResponse::OAIWipeDeviceUserResponse() {
    this->initializeModel();
}

OAIWipeDeviceUserResponse::~OAIWipeDeviceUserResponse() {}

void OAIWipeDeviceUserResponse::initializeModel() {

    m_device_user_isSet = false;
    m_device_user_isValid = false;
}

void OAIWipeDeviceUserResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWipeDeviceUserResponse::fromJsonObject(QJsonObject json) {

    m_device_user_isValid = ::OpenAPI::fromJsonValue(m_device_user, json[QString("deviceUser")]);
    m_device_user_isSet = !json[QString("deviceUser")].isNull() && m_device_user_isValid;
}

QString OAIWipeDeviceUserResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWipeDeviceUserResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_device_user.isSet()) {
        obj.insert(QString("deviceUser"), ::OpenAPI::toJsonValue(m_device_user));
    }
    return obj;
}

OAIDeviceUser OAIWipeDeviceUserResponse::getDeviceUser() const {
    return m_device_user;
}
void OAIWipeDeviceUserResponse::setDeviceUser(const OAIDeviceUser &device_user) {
    m_device_user = device_user;
    m_device_user_isSet = true;
}

bool OAIWipeDeviceUserResponse::is_device_user_Set() const{
    return m_device_user_isSet;
}

bool OAIWipeDeviceUserResponse::is_device_user_Valid() const{
    return m_device_user_isValid;
}

bool OAIWipeDeviceUserResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_user.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWipeDeviceUserResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
