/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudIdentityApi);
  }
}(this, function(expect, CloudIdentityApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudIdentityApi.GroupsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GroupsApi', function() {
    describe('cloudidentityGroupsCreate', function() {
      it('should call cloudidentityGroupsCreate successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsCreate
        //instance.cloudidentityGroupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsList', function() {
      it('should call cloudidentityGroupsList successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsList
        //instance.cloudidentityGroupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsLookup', function() {
      it('should call cloudidentityGroupsLookup successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsLookup
        //instance.cloudidentityGroupsLookup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsMembershipsCheckTransitiveMembership', function() {
      it('should call cloudidentityGroupsMembershipsCheckTransitiveMembership successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsMembershipsCheckTransitiveMembership
        //instance.cloudidentityGroupsMembershipsCheckTransitiveMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsMembershipsCreate', function() {
      it('should call cloudidentityGroupsMembershipsCreate successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsMembershipsCreate
        //instance.cloudidentityGroupsMembershipsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsMembershipsGetMembershipGraph', function() {
      it('should call cloudidentityGroupsMembershipsGetMembershipGraph successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsMembershipsGetMembershipGraph
        //instance.cloudidentityGroupsMembershipsGetMembershipGraph(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsMembershipsLookup', function() {
      it('should call cloudidentityGroupsMembershipsLookup successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsMembershipsLookup
        //instance.cloudidentityGroupsMembershipsLookup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsMembershipsModifyMembershipRoles', function() {
      it('should call cloudidentityGroupsMembershipsModifyMembershipRoles successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsMembershipsModifyMembershipRoles
        //instance.cloudidentityGroupsMembershipsModifyMembershipRoles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsMembershipsSearchDirectGroups', function() {
      it('should call cloudidentityGroupsMembershipsSearchDirectGroups successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsMembershipsSearchDirectGroups
        //instance.cloudidentityGroupsMembershipsSearchDirectGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsMembershipsSearchTransitiveGroups', function() {
      it('should call cloudidentityGroupsMembershipsSearchTransitiveGroups successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsMembershipsSearchTransitiveGroups
        //instance.cloudidentityGroupsMembershipsSearchTransitiveGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsMembershipsSearchTransitiveMemberships', function() {
      it('should call cloudidentityGroupsMembershipsSearchTransitiveMemberships successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsMembershipsSearchTransitiveMemberships
        //instance.cloudidentityGroupsMembershipsSearchTransitiveMemberships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudidentityGroupsSearch', function() {
      it('should call cloudidentityGroupsSearch successfully', function(done) {
        //uncomment below and update the code to test cloudidentityGroupsSearch
        //instance.cloudidentityGroupsSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
