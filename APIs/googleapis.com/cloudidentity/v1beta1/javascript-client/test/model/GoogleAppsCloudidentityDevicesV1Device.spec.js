/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudIdentityApi);
  }
}(this, function(expect, CloudIdentityApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleAppsCloudidentityDevicesV1Device', function() {
    it('should create an instance of GoogleAppsCloudidentityDevicesV1Device', function() {
      // uncomment below and update the code to test GoogleAppsCloudidentityDevicesV1Device
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be.a(CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device);
    });

    it('should have the property androidSpecificAttributes (base name: "androidSpecificAttributes")', function() {
      // uncomment below and update the code to test the property androidSpecificAttributes
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property assetTag (base name: "assetTag")', function() {
      // uncomment below and update the code to test the property assetTag
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property basebandVersion (base name: "basebandVersion")', function() {
      // uncomment below and update the code to test the property basebandVersion
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property bootloaderVersion (base name: "bootloaderVersion")', function() {
      // uncomment below and update the code to test the property bootloaderVersion
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property buildNumber (base name: "buildNumber")', function() {
      // uncomment below and update the code to test the property buildNumber
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property compromisedState (base name: "compromisedState")', function() {
      // uncomment below and update the code to test the property compromisedState
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property deviceId (base name: "deviceId")', function() {
      // uncomment below and update the code to test the property deviceId
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property deviceType (base name: "deviceType")', function() {
      // uncomment below and update the code to test the property deviceType
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property enabledDeveloperOptions (base name: "enabledDeveloperOptions")', function() {
      // uncomment below and update the code to test the property enabledDeveloperOptions
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property enabledUsbDebugging (base name: "enabledUsbDebugging")', function() {
      // uncomment below and update the code to test the property enabledUsbDebugging
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property encryptionState (base name: "encryptionState")', function() {
      // uncomment below and update the code to test the property encryptionState
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property hostname (base name: "hostname")', function() {
      // uncomment below and update the code to test the property hostname
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property imei (base name: "imei")', function() {
      // uncomment below and update the code to test the property imei
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property kernelVersion (base name: "kernelVersion")', function() {
      // uncomment below and update the code to test the property kernelVersion
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property lastSyncTime (base name: "lastSyncTime")', function() {
      // uncomment below and update the code to test the property lastSyncTime
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property managementState (base name: "managementState")', function() {
      // uncomment below and update the code to test the property managementState
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property manufacturer (base name: "manufacturer")', function() {
      // uncomment below and update the code to test the property manufacturer
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property meid (base name: "meid")', function() {
      // uncomment below and update the code to test the property meid
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property model (base name: "model")', function() {
      // uncomment below and update the code to test the property model
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property networkOperator (base name: "networkOperator")', function() {
      // uncomment below and update the code to test the property networkOperator
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property osVersion (base name: "osVersion")', function() {
      // uncomment below and update the code to test the property osVersion
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property otherAccounts (base name: "otherAccounts")', function() {
      // uncomment below and update the code to test the property otherAccounts
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property ownerType (base name: "ownerType")', function() {
      // uncomment below and update the code to test the property ownerType
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property releaseVersion (base name: "releaseVersion")', function() {
      // uncomment below and update the code to test the property releaseVersion
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property securityPatchTime (base name: "securityPatchTime")', function() {
      // uncomment below and update the code to test the property securityPatchTime
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property serialNumber (base name: "serialNumber")', function() {
      // uncomment below and update the code to test the property serialNumber
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

    it('should have the property wifiMacAddresses (base name: "wifiMacAddresses")', function() {
      // uncomment below and update the code to test the property wifiMacAddresses
      //var instance = new CloudIdentityApi.GoogleAppsCloudidentityDevicesV1Device();
      //expect(instance).to.be();
    });

  });

}));
