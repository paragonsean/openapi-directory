/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MoveOrgMembershipRequest model module.
 * @module model/MoveOrgMembershipRequest
 * @version v1beta1
 */
class MoveOrgMembershipRequest {
    /**
     * Constructs a new <code>MoveOrgMembershipRequest</code>.
     * The request message for OrgMembershipsService.MoveOrgMembership.
     * @alias module:model/MoveOrgMembershipRequest
     */
    constructor() { 
        
        MoveOrgMembershipRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MoveOrgMembershipRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MoveOrgMembershipRequest} obj Optional instance to populate.
     * @return {module:model/MoveOrgMembershipRequest} The populated <code>MoveOrgMembershipRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MoveOrgMembershipRequest();

            if (data.hasOwnProperty('customer')) {
                obj['customer'] = ApiClient.convertToType(data['customer'], 'String');
            }
            if (data.hasOwnProperty('destinationOrgUnit')) {
                obj['destinationOrgUnit'] = ApiClient.convertToType(data['destinationOrgUnit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MoveOrgMembershipRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MoveOrgMembershipRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customer'] && !(typeof data['customer'] === 'string' || data['customer'] instanceof String)) {
            throw new Error("Expected the field `customer` to be a primitive type in the JSON string but got " + data['customer']);
        }
        // ensure the json data is a string
        if (data['destinationOrgUnit'] && !(typeof data['destinationOrgUnit'] === 'string' || data['destinationOrgUnit'] instanceof String)) {
            throw new Error("Expected the field `destinationOrgUnit` to be a primitive type in the JSON string but got " + data['destinationOrgUnit']);
        }

        return true;
    }


}



/**
 * Required. Immutable. Customer on whose membership change is made. All authorization will happen on the role assignments of this customer. Format: customers/{$customerId} where `$customerId` is the `id` from the [Admin SDK `Customer` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers). You may also use `customers/my_customer` to specify your own organization.
 * @member {String} customer
 */
MoveOrgMembershipRequest.prototype['customer'] = undefined;

/**
 * Required. Immutable. OrgUnit where the membership will be moved to. Format: orgUnits/{$orgUnitId} where `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits).
 * @member {String} destinationOrgUnit
 */
MoveOrgMembershipRequest.prototype['destinationOrgUnit'] = undefined;






export default MoveOrgMembershipRequest;

