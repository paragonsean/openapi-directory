/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BrowserInfo from './BrowserInfo';

/**
 * The BrowserAttributes model module.
 * @module model/BrowserAttributes
 * @version v1beta1
 */
class BrowserAttributes {
    /**
     * Constructs a new <code>BrowserAttributes</code>.
     * Contains information about browser profiles reported by the Endpoint Verification extension.
     * @alias module:model/BrowserAttributes
     */
    constructor() { 
        
        BrowserAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BrowserAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BrowserAttributes} obj Optional instance to populate.
     * @return {module:model/BrowserAttributes} The populated <code>BrowserAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrowserAttributes();

            if (data.hasOwnProperty('chromeBrowserInfo')) {
                obj['chromeBrowserInfo'] = BrowserInfo.constructFromObject(data['chromeBrowserInfo']);
            }
            if (data.hasOwnProperty('chromeProfileId')) {
                obj['chromeProfileId'] = ApiClient.convertToType(data['chromeProfileId'], 'String');
            }
            if (data.hasOwnProperty('lastProfileSyncTime')) {
                obj['lastProfileSyncTime'] = ApiClient.convertToType(data['lastProfileSyncTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BrowserAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BrowserAttributes</code>.
     */
    static validateJSON(data) {
        // validate the optional field `chromeBrowserInfo`
        if (data['chromeBrowserInfo']) { // data not null
          BrowserInfo.validateJSON(data['chromeBrowserInfo']);
        }
        // ensure the json data is a string
        if (data['chromeProfileId'] && !(typeof data['chromeProfileId'] === 'string' || data['chromeProfileId'] instanceof String)) {
            throw new Error("Expected the field `chromeProfileId` to be a primitive type in the JSON string but got " + data['chromeProfileId']);
        }
        // ensure the json data is a string
        if (data['lastProfileSyncTime'] && !(typeof data['lastProfileSyncTime'] === 'string' || data['lastProfileSyncTime'] instanceof String)) {
            throw new Error("Expected the field `lastProfileSyncTime` to be a primitive type in the JSON string but got " + data['lastProfileSyncTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/BrowserInfo} chromeBrowserInfo
 */
BrowserAttributes.prototype['chromeBrowserInfo'] = undefined;

/**
 * Chrome profile ID that is exposed by the Chrome API. It is unique for each device.
 * @member {String} chromeProfileId
 */
BrowserAttributes.prototype['chromeProfileId'] = undefined;

/**
 * Timestamp in milliseconds since Epoch when the profile/gcm id was last synced.
 * @member {String} lastProfileSyncTime
 */
BrowserAttributes.prototype['lastProfileSyncTime'] = undefined;






export default BrowserAttributes;

