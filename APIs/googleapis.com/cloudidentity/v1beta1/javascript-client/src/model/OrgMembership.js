/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrgMembership model module.
 * @module model/OrgMembership
 * @version v1beta1
 */
class OrgMembership {
    /**
     * Constructs a new <code>OrgMembership</code>.
     * A membership in an OrgUnit. An &#x60;OrgMembership&#x60; defines a relationship between an &#x60;OrgUnit&#x60; and an entity belonging to that &#x60;OrgUnit&#x60;, referred to as a \&quot;member\&quot;.
     * @alias module:model/OrgMembership
     */
    constructor() { 
        
        OrgMembership.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrgMembership</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgMembership} obj Optional instance to populate.
     * @return {module:model/OrgMembership} The populated <code>OrgMembership</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgMembership();

            if (data.hasOwnProperty('member')) {
                obj['member'] = ApiClient.convertToType(data['member'], 'String');
            }
            if (data.hasOwnProperty('memberUri')) {
                obj['memberUri'] = ApiClient.convertToType(data['memberUri'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrgMembership</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrgMembership</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['member'] && !(typeof data['member'] === 'string' || data['member'] instanceof String)) {
            throw new Error("Expected the field `member` to be a primitive type in the JSON string but got " + data['member']);
        }
        // ensure the json data is a string
        if (data['memberUri'] && !(typeof data['memberUri'] === 'string' || data['memberUri'] instanceof String)) {
            throw new Error("Expected the field `memberUri` to be a primitive type in the JSON string but got " + data['memberUri']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Immutable. Org member id as full resource name. Format for shared drive resource: //drive.googleapis.com/drives/{$memberId} where `$memberId` is the `id` from [Drive API (V3) `Drive` resource](https://developers.google.com/drive/api/v3/reference/drives#resource).
 * @member {String} member
 */
OrgMembership.prototype['member'] = undefined;

/**
 * Uri with which you can read the member. This follows https://aip.dev/122 Format for shared drive resource: https://drive.googleapis.com/drive/v3/drives/{$memberId} where `$memberId` is the `id` from [Drive API (V3) `Drive` resource](https://developers.google.com/drive/api/v3/reference/drives#resource).
 * @member {String} memberUri
 */
OrgMembership.prototype['memberUri'] = undefined;

/**
 * Required. Immutable. The [resource name](https://cloud.google.com/apis/design/resource_names) of the OrgMembership. Format: orgUnits/{$orgUnitId}/memberships/{$membership} The `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits). The `$membership` shall be of the form `{$entityType};{$memberId}`, where `$entityType` is the enum value of [OrgMembership.EntityType], and `memberId` is the `id` from [Drive API (V3) `Drive` resource](https://developers.google.com/drive/api/v3/reference/drives#resource) for OrgMembership.EntityType.SHARED_DRIVE.
 * @member {String} name
 */
OrgMembership.prototype['name'] = undefined;

/**
 * Immutable. Entity type for the org member.
 * @member {module:model/OrgMembership.TypeEnum} type
 */
OrgMembership.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
OrgMembership['TypeEnum'] = {

    /**
     * value: "ENTITY_TYPE_UNSPECIFIED"
     * @const
     */
    "ENTITY_TYPE_UNSPECIFIED": "ENTITY_TYPE_UNSPECIFIED",

    /**
     * value: "SHARED_DRIVE"
     * @const
     */
    "SHARED_DRIVE": "SHARED_DRIVE"
};



export default OrgMembership;

