/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BrowserAttributes from './BrowserAttributes';
import CertificateAttributes from './CertificateAttributes';

/**
 * The EndpointVerificationSpecificAttributes model module.
 * @module model/EndpointVerificationSpecificAttributes
 * @version v1beta1
 */
class EndpointVerificationSpecificAttributes {
    /**
     * Constructs a new <code>EndpointVerificationSpecificAttributes</code>.
     * Resource representing the [Endpoint Verification-specific attributes](https://cloud.google.com/endpoint-verification/docs/device-information) of a device.
     * @alias module:model/EndpointVerificationSpecificAttributes
     */
    constructor() { 
        
        EndpointVerificationSpecificAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EndpointVerificationSpecificAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EndpointVerificationSpecificAttributes} obj Optional instance to populate.
     * @return {module:model/EndpointVerificationSpecificAttributes} The populated <code>EndpointVerificationSpecificAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EndpointVerificationSpecificAttributes();

            if (data.hasOwnProperty('additionalSignals')) {
                obj['additionalSignals'] = ApiClient.convertToType(data['additionalSignals'], {'String': Object});
            }
            if (data.hasOwnProperty('browserAttributes')) {
                obj['browserAttributes'] = ApiClient.convertToType(data['browserAttributes'], [BrowserAttributes]);
            }
            if (data.hasOwnProperty('certificateAttributes')) {
                obj['certificateAttributes'] = ApiClient.convertToType(data['certificateAttributes'], [CertificateAttributes]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EndpointVerificationSpecificAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EndpointVerificationSpecificAttributes</code>.
     */
    static validateJSON(data) {
        if (data['browserAttributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['browserAttributes'])) {
                throw new Error("Expected the field `browserAttributes` to be an array in the JSON data but got " + data['browserAttributes']);
            }
            // validate the optional field `browserAttributes` (array)
            for (const item of data['browserAttributes']) {
                BrowserAttributes.validateJSON(item);
            };
        }
        if (data['certificateAttributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['certificateAttributes'])) {
                throw new Error("Expected the field `certificateAttributes` to be an array in the JSON data but got " + data['certificateAttributes']);
            }
            // validate the optional field `certificateAttributes` (array)
            for (const item of data['certificateAttributes']) {
                CertificateAttributes.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Additional signals reported by Endpoint Verification. It includes the following attributes: 1. Non-configurable attributes: hotfixes, av_installed, av_enabled, windows_domain_name, is_os_native_firewall_enabled, and is_secure_boot_enabled. 2. Configurable attributes: file_config, registry_config, and plist_config.
 * @member {Object.<String, Object>} additionalSignals
 */
EndpointVerificationSpecificAttributes.prototype['additionalSignals'] = undefined;

/**
 * Details of browser profiles reported by Endpoint Verification.
 * @member {Array.<module:model/BrowserAttributes>} browserAttributes
 */
EndpointVerificationSpecificAttributes.prototype['browserAttributes'] = undefined;

/**
 * Details of certificates.
 * @member {Array.<module:model/CertificateAttributes>} certificateAttributes
 */
EndpointVerificationSpecificAttributes.prototype['certificateAttributes'] = undefined;






export default EndpointVerificationSpecificAttributes;

