/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserInvitation model module.
 * @module model/UserInvitation
 * @version v1beta1
 */
class UserInvitation {
    /**
     * Constructs a new <code>UserInvitation</code>.
     * The &#x60;UserInvitation&#x60; resource represents an email that can be sent to an unmanaged user account inviting them to join the customer&#39;s Google Workspace or Cloud Identity account. An unmanaged account shares an email address domain with the Google Workspace or Cloud Identity account but is not managed by it yet. If the user accepts the &#x60;UserInvitation&#x60;, the user account will become managed.
     * @alias module:model/UserInvitation
     */
    constructor() { 
        
        UserInvitation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserInvitation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserInvitation} obj Optional instance to populate.
     * @return {module:model/UserInvitation} The populated <code>UserInvitation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserInvitation();

            if (data.hasOwnProperty('mailsSentCount')) {
                obj['mailsSentCount'] = ApiClient.convertToType(data['mailsSentCount'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserInvitation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserInvitation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mailsSentCount'] && !(typeof data['mailsSentCount'] === 'string' || data['mailsSentCount'] instanceof String)) {
            throw new Error("Expected the field `mailsSentCount` to be a primitive type in the JSON string but got " + data['mailsSentCount']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Number of invitation emails sent to the user.
 * @member {String} mailsSentCount
 */
UserInvitation.prototype['mailsSentCount'] = undefined;

/**
 * Shall be of the form `customers/{customer}/userinvitations/{user_email_address}`.
 * @member {String} name
 */
UserInvitation.prototype['name'] = undefined;

/**
 * State of the `UserInvitation`.
 * @member {module:model/UserInvitation.StateEnum} state
 */
UserInvitation.prototype['state'] = undefined;

/**
 * Time when the `UserInvitation` was last updated.
 * @member {String} updateTime
 */
UserInvitation.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
UserInvitation['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "NOT_YET_SENT"
     * @const
     */
    "NOT_YET_SENT": "NOT_YET_SENT",

    /**
     * value: "INVITED"
     * @const
     */
    "INVITED": "INVITED",

    /**
     * value: "ACCEPTED"
     * @const
     */
    "ACCEPTED": "ACCEPTED",

    /**
     * value: "DECLINED"
     * @const
     */
    "DECLINED": "DECLINED"
};



export default UserInvitation;

