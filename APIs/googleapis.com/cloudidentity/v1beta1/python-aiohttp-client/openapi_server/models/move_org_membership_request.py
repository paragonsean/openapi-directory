# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MoveOrgMembershipRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer: str=None, destination_org_unit: str=None):
        """MoveOrgMembershipRequest - a model defined in OpenAPI

        :param customer: The customer of this MoveOrgMembershipRequest.
        :param destination_org_unit: The destination_org_unit of this MoveOrgMembershipRequest.
        """
        self.openapi_types = {
            'customer': str,
            'destination_org_unit': str
        }

        self.attribute_map = {
            'customer': 'customer',
            'destination_org_unit': 'destinationOrgUnit'
        }

        self._customer = customer
        self._destination_org_unit = destination_org_unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MoveOrgMembershipRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MoveOrgMembershipRequest of this MoveOrgMembershipRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer(self):
        """Gets the customer of this MoveOrgMembershipRequest.

        Required. Immutable. Customer on whose membership change is made. All authorization will happen on the role assignments of this customer. Format: customers/{$customerId} where `$customerId` is the `id` from the [Admin SDK `Customer` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers). You may also use `customers/my_customer` to specify your own organization.

        :return: The customer of this MoveOrgMembershipRequest.
        :rtype: str
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """Sets the customer of this MoveOrgMembershipRequest.

        Required. Immutable. Customer on whose membership change is made. All authorization will happen on the role assignments of this customer. Format: customers/{$customerId} where `$customerId` is the `id` from the [Admin SDK `Customer` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers). You may also use `customers/my_customer` to specify your own organization.

        :param customer: The customer of this MoveOrgMembershipRequest.
        :type customer: str
        """

        self._customer = customer

    @property
    def destination_org_unit(self):
        """Gets the destination_org_unit of this MoveOrgMembershipRequest.

        Required. Immutable. OrgUnit where the membership will be moved to. Format: orgUnits/{$orgUnitId} where `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits).

        :return: The destination_org_unit of this MoveOrgMembershipRequest.
        :rtype: str
        """
        return self._destination_org_unit

    @destination_org_unit.setter
    def destination_org_unit(self, destination_org_unit):
        """Sets the destination_org_unit of this MoveOrgMembershipRequest.

        Required. Immutable. OrgUnit where the membership will be moved to. Format: orgUnits/{$orgUnitId} where `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits).

        :param destination_org_unit: The destination_org_unit of this MoveOrgMembershipRequest.
        :type destination_org_unit: str
        """

        self._destination_org_unit = destination_org_unit
