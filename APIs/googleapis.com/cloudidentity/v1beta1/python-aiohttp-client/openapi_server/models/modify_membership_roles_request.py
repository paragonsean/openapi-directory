# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.membership_role import MembershipRole
from openapi_server.models.update_membership_roles_params import UpdateMembershipRolesParams
from openapi_server import util


class ModifyMembershipRolesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_roles: List[MembershipRole]=None, remove_roles: List[str]=None, update_roles_params: List[UpdateMembershipRolesParams]=None):
        """ModifyMembershipRolesRequest - a model defined in OpenAPI

        :param add_roles: The add_roles of this ModifyMembershipRolesRequest.
        :param remove_roles: The remove_roles of this ModifyMembershipRolesRequest.
        :param update_roles_params: The update_roles_params of this ModifyMembershipRolesRequest.
        """
        self.openapi_types = {
            'add_roles': List[MembershipRole],
            'remove_roles': List[str],
            'update_roles_params': List[UpdateMembershipRolesParams]
        }

        self.attribute_map = {
            'add_roles': 'addRoles',
            'remove_roles': 'removeRoles',
            'update_roles_params': 'updateRolesParams'
        }

        self._add_roles = add_roles
        self._remove_roles = remove_roles
        self._update_roles_params = update_roles_params

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyMembershipRolesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyMembershipRolesRequest of this ModifyMembershipRolesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_roles(self):
        """Gets the add_roles of this ModifyMembershipRolesRequest.

        The `MembershipRole`s to be added. Adding or removing roles in the same request as updating roles is not supported. Must not be set if `update_roles_params` is set.

        :return: The add_roles of this ModifyMembershipRolesRequest.
        :rtype: List[MembershipRole]
        """
        return self._add_roles

    @add_roles.setter
    def add_roles(self, add_roles):
        """Sets the add_roles of this ModifyMembershipRolesRequest.

        The `MembershipRole`s to be added. Adding or removing roles in the same request as updating roles is not supported. Must not be set if `update_roles_params` is set.

        :param add_roles: The add_roles of this ModifyMembershipRolesRequest.
        :type add_roles: List[MembershipRole]
        """

        self._add_roles = add_roles

    @property
    def remove_roles(self):
        """Gets the remove_roles of this ModifyMembershipRolesRequest.

        The `name`s of the `MembershipRole`s to be removed. Adding or removing roles in the same request as updating roles is not supported. It is not possible to remove the `MEMBER` `MembershipRole`. If you wish to delete a `Membership`, call MembershipsService.DeleteMembership instead. Must not contain `MEMBER`. Must not be set if `update_roles_params` is set.

        :return: The remove_roles of this ModifyMembershipRolesRequest.
        :rtype: List[str]
        """
        return self._remove_roles

    @remove_roles.setter
    def remove_roles(self, remove_roles):
        """Sets the remove_roles of this ModifyMembershipRolesRequest.

        The `name`s of the `MembershipRole`s to be removed. Adding or removing roles in the same request as updating roles is not supported. It is not possible to remove the `MEMBER` `MembershipRole`. If you wish to delete a `Membership`, call MembershipsService.DeleteMembership instead. Must not contain `MEMBER`. Must not be set if `update_roles_params` is set.

        :param remove_roles: The remove_roles of this ModifyMembershipRolesRequest.
        :type remove_roles: List[str]
        """

        self._remove_roles = remove_roles

    @property
    def update_roles_params(self):
        """Gets the update_roles_params of this ModifyMembershipRolesRequest.

        The `MembershipRole`s to be updated. Updating roles in the same request as adding or removing roles is not supported. Must not be set if either `add_roles` or `remove_roles` is set.

        :return: The update_roles_params of this ModifyMembershipRolesRequest.
        :rtype: List[UpdateMembershipRolesParams]
        """
        return self._update_roles_params

    @update_roles_params.setter
    def update_roles_params(self, update_roles_params):
        """Sets the update_roles_params of this ModifyMembershipRolesRequest.

        The `MembershipRole`s to be updated. Updating roles in the same request as adding or removing roles is not supported. Must not be set if either `add_roles` or `remove_roles` is set.

        :param update_roles_params: The update_roles_params of this ModifyMembershipRolesRequest.
        :type update_roles_params: List[UpdateMembershipRolesParams]
        """

        self._update_roles_params = update_roles_params
