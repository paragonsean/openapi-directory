# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EntityKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, namespace: str=None):
        """EntityKey - a model defined in OpenAPI

        :param id: The id of this EntityKey.
        :param namespace: The namespace of this EntityKey.
        """
        self.openapi_types = {
            'id': str,
            'namespace': str
        }

        self.attribute_map = {
            'id': 'id',
            'namespace': 'namespace'
        }

        self._id = id
        self._namespace = namespace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityKey of this EntityKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this EntityKey.

        The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.

        :return: The id of this EntityKey.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EntityKey.

        The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.

        :param id: The id of this EntityKey.
        :type id: str
        """

        self._id = id

    @property
    def namespace(self):
        """Gets the namespace of this EntityKey.

        The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.

        :return: The namespace of this EntityKey.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this EntityKey.

        The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.

        :param namespace: The namespace of this EntityKey.
        :type namespace: str
        """

        self._namespace = namespace
