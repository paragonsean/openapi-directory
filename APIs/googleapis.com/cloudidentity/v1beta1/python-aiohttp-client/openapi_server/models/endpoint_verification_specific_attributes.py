# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.browser_attributes import BrowserAttributes
from openapi_server.models.certificate_attributes import CertificateAttributes
from openapi_server import util


class EndpointVerificationSpecificAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_signals: Dict[str, object]=None, browser_attributes: List[BrowserAttributes]=None, certificate_attributes: List[CertificateAttributes]=None):
        """EndpointVerificationSpecificAttributes - a model defined in OpenAPI

        :param additional_signals: The additional_signals of this EndpointVerificationSpecificAttributes.
        :param browser_attributes: The browser_attributes of this EndpointVerificationSpecificAttributes.
        :param certificate_attributes: The certificate_attributes of this EndpointVerificationSpecificAttributes.
        """
        self.openapi_types = {
            'additional_signals': Dict[str, object],
            'browser_attributes': List[BrowserAttributes],
            'certificate_attributes': List[CertificateAttributes]
        }

        self.attribute_map = {
            'additional_signals': 'additionalSignals',
            'browser_attributes': 'browserAttributes',
            'certificate_attributes': 'certificateAttributes'
        }

        self._additional_signals = additional_signals
        self._browser_attributes = browser_attributes
        self._certificate_attributes = certificate_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointVerificationSpecificAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndpointVerificationSpecificAttributes of this EndpointVerificationSpecificAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_signals(self):
        """Gets the additional_signals of this EndpointVerificationSpecificAttributes.

        Additional signals reported by Endpoint Verification. It includes the following attributes: 1. Non-configurable attributes: hotfixes, av_installed, av_enabled, windows_domain_name, is_os_native_firewall_enabled, and is_secure_boot_enabled. 2. Configurable attributes: file_config, registry_config, and plist_config.

        :return: The additional_signals of this EndpointVerificationSpecificAttributes.
        :rtype: Dict[str, object]
        """
        return self._additional_signals

    @additional_signals.setter
    def additional_signals(self, additional_signals):
        """Sets the additional_signals of this EndpointVerificationSpecificAttributes.

        Additional signals reported by Endpoint Verification. It includes the following attributes: 1. Non-configurable attributes: hotfixes, av_installed, av_enabled, windows_domain_name, is_os_native_firewall_enabled, and is_secure_boot_enabled. 2. Configurable attributes: file_config, registry_config, and plist_config.

        :param additional_signals: The additional_signals of this EndpointVerificationSpecificAttributes.
        :type additional_signals: Dict[str, object]
        """

        self._additional_signals = additional_signals

    @property
    def browser_attributes(self):
        """Gets the browser_attributes of this EndpointVerificationSpecificAttributes.

        Details of browser profiles reported by Endpoint Verification.

        :return: The browser_attributes of this EndpointVerificationSpecificAttributes.
        :rtype: List[BrowserAttributes]
        """
        return self._browser_attributes

    @browser_attributes.setter
    def browser_attributes(self, browser_attributes):
        """Sets the browser_attributes of this EndpointVerificationSpecificAttributes.

        Details of browser profiles reported by Endpoint Verification.

        :param browser_attributes: The browser_attributes of this EndpointVerificationSpecificAttributes.
        :type browser_attributes: List[BrowserAttributes]
        """

        self._browser_attributes = browser_attributes

    @property
    def certificate_attributes(self):
        """Gets the certificate_attributes of this EndpointVerificationSpecificAttributes.

        Details of certificates.

        :return: The certificate_attributes of this EndpointVerificationSpecificAttributes.
        :rtype: List[CertificateAttributes]
        """
        return self._certificate_attributes

    @certificate_attributes.setter
    def certificate_attributes(self, certificate_attributes):
        """Sets the certificate_attributes of this EndpointVerificationSpecificAttributes.

        Details of certificates.

        :param certificate_attributes: The certificate_attributes of this EndpointVerificationSpecificAttributes.
        :type certificate_attributes: List[CertificateAttributes]
        """

        self._certificate_attributes = certificate_attributes
