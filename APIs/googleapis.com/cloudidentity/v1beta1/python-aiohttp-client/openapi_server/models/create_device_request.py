# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device import Device
from openapi_server import util


class CreateDeviceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer: str=None, device: Device=None):
        """CreateDeviceRequest - a model defined in OpenAPI

        :param customer: The customer of this CreateDeviceRequest.
        :param device: The device of this CreateDeviceRequest.
        """
        self.openapi_types = {
            'customer': str,
            'device': Device
        }

        self.attribute_map = {
            'customer': 'customer',
            'device': 'device'
        }

        self._customer = customer
        self._device = device

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDeviceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDeviceRequest of this CreateDeviceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer(self):
        """Gets the customer of this CreateDeviceRequest.

        Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.

        :return: The customer of this CreateDeviceRequest.
        :rtype: str
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """Sets the customer of this CreateDeviceRequest.

        Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.

        :param customer: The customer of this CreateDeviceRequest.
        :type customer: str
        """

        self._customer = customer

    @property
    def device(self):
        """Gets the device of this CreateDeviceRequest.


        :return: The device of this CreateDeviceRequest.
        :rtype: Device
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this CreateDeviceRequest.


        :param device: The device of this CreateDeviceRequest.
        :type device: Device
        """

        self._device = device
