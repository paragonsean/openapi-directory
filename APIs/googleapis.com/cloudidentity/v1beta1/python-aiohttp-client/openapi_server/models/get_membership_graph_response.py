# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.group import Group
from openapi_server.models.membership_adjacency_list import MembershipAdjacencyList
from openapi_server import util


class GetMembershipGraphResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adjacency_list: List[MembershipAdjacencyList]=None, groups: List[Group]=None):
        """GetMembershipGraphResponse - a model defined in OpenAPI

        :param adjacency_list: The adjacency_list of this GetMembershipGraphResponse.
        :param groups: The groups of this GetMembershipGraphResponse.
        """
        self.openapi_types = {
            'adjacency_list': List[MembershipAdjacencyList],
            'groups': List[Group]
        }

        self.attribute_map = {
            'adjacency_list': 'adjacencyList',
            'groups': 'groups'
        }

        self._adjacency_list = adjacency_list
        self._groups = groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMembershipGraphResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMembershipGraphResponse of this GetMembershipGraphResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adjacency_list(self):
        """Gets the adjacency_list of this GetMembershipGraphResponse.

        The membership graph's path information represented as an adjacency list.

        :return: The adjacency_list of this GetMembershipGraphResponse.
        :rtype: List[MembershipAdjacencyList]
        """
        return self._adjacency_list

    @adjacency_list.setter
    def adjacency_list(self, adjacency_list):
        """Sets the adjacency_list of this GetMembershipGraphResponse.

        The membership graph's path information represented as an adjacency list.

        :param adjacency_list: The adjacency_list of this GetMembershipGraphResponse.
        :type adjacency_list: List[MembershipAdjacencyList]
        """

        self._adjacency_list = adjacency_list

    @property
    def groups(self):
        """Gets the groups of this GetMembershipGraphResponse.

        The resources representing each group in the adjacency list. Each group in this list can be correlated to a 'group' of the MembershipAdjacencyList using the 'name' of the Group resource.

        :return: The groups of this GetMembershipGraphResponse.
        :rtype: List[Group]
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this GetMembershipGraphResponse.

        The resources representing each group in the adjacency list. Each group in this list can be correlated to a 'group' of the MembershipAdjacencyList using the 'name' of the Group resource.

        :param groups: The groups of this GetMembershipGraphResponse.
        :type groups: List[Group]
        """

        self._groups = groups
