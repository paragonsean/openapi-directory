/*
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.IsInvitableUserResponse;
import org.openapitools.client.model.ListUserInvitationsResponse;
import org.openapitools.client.model.Operation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Disabled
public class CustomersApiTest {

    private final CustomersApi api = new CustomersApi();

    /**
     * Cancels a UserInvitation that was already sent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityCustomersUserinvitationsCancelTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Operation response = api.cloudidentityCustomersUserinvitationsCancel(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Verifies whether a user account is eligible to receive a UserInvitation (is an unmanaged account). Eligibility is based on the following criteria: * the email address is a consumer account and it&#39;s the primary email address of the account, and * the domain of the email address matches an existing verified Google Workspace or Cloud Identity domain If both conditions are met, the user is eligible. **Note:** This method is not supported for Workspace Essentials customers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityCustomersUserinvitationsIsInvitableUserTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        IsInvitableUserResponse response = api.cloudidentityCustomersUserinvitationsIsInvitableUser(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Retrieves a list of UserInvitation resources. **Note:** New consumer accounts with the customer&#39;s verified domain created within the previous 48 hours will not appear in the result. This delay also applies to newly-verified domains.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityCustomersUserinvitationsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        ListUserInvitationsResponse response = api.cloudidentityCustomersUserinvitationsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Sends a UserInvitation to email. If the &#x60;UserInvitation&#x60; does not exist for this request and it is a valid request, the request creates a &#x60;UserInvitation&#x60;. **Note:** The &#x60;get&#x60; and &#x60;list&#x60; methods have a 48-hour delay where newly-created consumer accounts will not appear in the results. You can still send a &#x60;UserInvitation&#x60; to those accounts if you know the unmanaged email address and IsInvitableUser&#x3D;&#x3D;True.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityCustomersUserinvitationsSendTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Operation response = api.cloudidentityCustomersUserinvitationsSend(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

}
