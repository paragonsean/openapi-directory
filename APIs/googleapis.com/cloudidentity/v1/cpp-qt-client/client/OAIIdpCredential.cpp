/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIdpCredential.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIdpCredential::OAIIdpCredential(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIdpCredential::OAIIdpCredential() {
    this->initializeModel();
}

OAIIdpCredential::~OAIIdpCredential() {}

void OAIIdpCredential::initializeModel() {

    m_dsa_key_info_isSet = false;
    m_dsa_key_info_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_rsa_key_info_isSet = false;
    m_rsa_key_info_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIIdpCredential::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIdpCredential::fromJsonObject(QJsonObject json) {

    m_dsa_key_info_isValid = ::OpenAPI::fromJsonValue(m_dsa_key_info, json[QString("dsaKeyInfo")]);
    m_dsa_key_info_isSet = !json[QString("dsaKeyInfo")].isNull() && m_dsa_key_info_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_rsa_key_info_isValid = ::OpenAPI::fromJsonValue(m_rsa_key_info, json[QString("rsaKeyInfo")]);
    m_rsa_key_info_isSet = !json[QString("rsaKeyInfo")].isNull() && m_rsa_key_info_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIIdpCredential::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIdpCredential::asJsonObject() const {
    QJsonObject obj;
    if (m_dsa_key_info.isSet()) {
        obj.insert(QString("dsaKeyInfo"), ::OpenAPI::toJsonValue(m_dsa_key_info));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_rsa_key_info.isSet()) {
        obj.insert(QString("rsaKeyInfo"), ::OpenAPI::toJsonValue(m_rsa_key_info));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

OAIDsaPublicKeyInfo OAIIdpCredential::getDsaKeyInfo() const {
    return m_dsa_key_info;
}
void OAIIdpCredential::setDsaKeyInfo(const OAIDsaPublicKeyInfo &dsa_key_info) {
    m_dsa_key_info = dsa_key_info;
    m_dsa_key_info_isSet = true;
}

bool OAIIdpCredential::is_dsa_key_info_Set() const{
    return m_dsa_key_info_isSet;
}

bool OAIIdpCredential::is_dsa_key_info_Valid() const{
    return m_dsa_key_info_isValid;
}

QString OAIIdpCredential::getName() const {
    return m_name;
}
void OAIIdpCredential::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIIdpCredential::is_name_Set() const{
    return m_name_isSet;
}

bool OAIIdpCredential::is_name_Valid() const{
    return m_name_isValid;
}

OAIRsaPublicKeyInfo OAIIdpCredential::getRsaKeyInfo() const {
    return m_rsa_key_info;
}
void OAIIdpCredential::setRsaKeyInfo(const OAIRsaPublicKeyInfo &rsa_key_info) {
    m_rsa_key_info = rsa_key_info;
    m_rsa_key_info_isSet = true;
}

bool OAIIdpCredential::is_rsa_key_info_Set() const{
    return m_rsa_key_info_isSet;
}

bool OAIIdpCredential::is_rsa_key_info_Valid() const{
    return m_rsa_key_info_isValid;
}

QString OAIIdpCredential::getUpdateTime() const {
    return m_update_time;
}
void OAIIdpCredential::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIIdpCredential::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIIdpCredential::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIIdpCredential::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dsa_key_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rsa_key_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIdpCredential::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
