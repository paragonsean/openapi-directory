/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRsaPublicKeyInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRsaPublicKeyInfo::OAIRsaPublicKeyInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRsaPublicKeyInfo::OAIRsaPublicKeyInfo() {
    this->initializeModel();
}

OAIRsaPublicKeyInfo::~OAIRsaPublicKeyInfo() {}

void OAIRsaPublicKeyInfo::initializeModel() {

    m_key_size_isSet = false;
    m_key_size_isValid = false;
}

void OAIRsaPublicKeyInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRsaPublicKeyInfo::fromJsonObject(QJsonObject json) {

    m_key_size_isValid = ::OpenAPI::fromJsonValue(m_key_size, json[QString("keySize")]);
    m_key_size_isSet = !json[QString("keySize")].isNull() && m_key_size_isValid;
}

QString OAIRsaPublicKeyInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRsaPublicKeyInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_key_size_isSet) {
        obj.insert(QString("keySize"), ::OpenAPI::toJsonValue(m_key_size));
    }
    return obj;
}

qint32 OAIRsaPublicKeyInfo::getKeySize() const {
    return m_key_size;
}
void OAIRsaPublicKeyInfo::setKeySize(const qint32 &key_size) {
    m_key_size = key_size;
    m_key_size_isSet = true;
}

bool OAIRsaPublicKeyInfo::is_key_size_Set() const{
    return m_key_size_isSet;
}

bool OAIRsaPublicKeyInfo::is_key_size_Valid() const{
    return m_key_size_isValid;
}

bool OAIRsaPublicKeyInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRsaPublicKeyInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
