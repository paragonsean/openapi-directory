/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAppsCloudidentityDevicesV1Device.h
 *
 *  A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
 */

#ifndef OAIGoogleAppsCloudidentityDevicesV1Device_H
#define OAIGoogleAppsCloudidentityDevicesV1Device_H

#include <QJsonObject>

#include "OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes;

class OAIGoogleAppsCloudidentityDevicesV1Device : public OAIObject {
public:
    OAIGoogleAppsCloudidentityDevicesV1Device();
    OAIGoogleAppsCloudidentityDevicesV1Device(QString json);
    ~OAIGoogleAppsCloudidentityDevicesV1Device() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes getAndroidSpecificAttributes() const;
    void setAndroidSpecificAttributes(const OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes &android_specific_attributes);
    bool is_android_specific_attributes_Set() const;
    bool is_android_specific_attributes_Valid() const;

    QString getAssetTag() const;
    void setAssetTag(const QString &asset_tag);
    bool is_asset_tag_Set() const;
    bool is_asset_tag_Valid() const;

    QString getBasebandVersion() const;
    void setBasebandVersion(const QString &baseband_version);
    bool is_baseband_version_Set() const;
    bool is_baseband_version_Valid() const;

    QString getBootloaderVersion() const;
    void setBootloaderVersion(const QString &bootloader_version);
    bool is_bootloader_version_Set() const;
    bool is_bootloader_version_Valid() const;

    QString getBrand() const;
    void setBrand(const QString &brand);
    bool is_brand_Set() const;
    bool is_brand_Valid() const;

    QString getBuildNumber() const;
    void setBuildNumber(const QString &build_number);
    bool is_build_number_Set() const;
    bool is_build_number_Valid() const;

    QString getCompromisedState() const;
    void setCompromisedState(const QString &compromised_state);
    bool is_compromised_state_Set() const;
    bool is_compromised_state_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDeviceId() const;
    void setDeviceId(const QString &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    QString getDeviceType() const;
    void setDeviceType(const QString &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    bool isEnabledDeveloperOptions() const;
    void setEnabledDeveloperOptions(const bool &enabled_developer_options);
    bool is_enabled_developer_options_Set() const;
    bool is_enabled_developer_options_Valid() const;

    bool isEnabledUsbDebugging() const;
    void setEnabledUsbDebugging(const bool &enabled_usb_debugging);
    bool is_enabled_usb_debugging_Set() const;
    bool is_enabled_usb_debugging_Valid() const;

    QString getEncryptionState() const;
    void setEncryptionState(const QString &encryption_state);
    bool is_encryption_state_Set() const;
    bool is_encryption_state_Valid() const;

    QString getHostname() const;
    void setHostname(const QString &hostname);
    bool is_hostname_Set() const;
    bool is_hostname_Valid() const;

    QString getImei() const;
    void setImei(const QString &imei);
    bool is_imei_Set() const;
    bool is_imei_Valid() const;

    QString getKernelVersion() const;
    void setKernelVersion(const QString &kernel_version);
    bool is_kernel_version_Set() const;
    bool is_kernel_version_Valid() const;

    QString getLastSyncTime() const;
    void setLastSyncTime(const QString &last_sync_time);
    bool is_last_sync_time_Set() const;
    bool is_last_sync_time_Valid() const;

    QString getManagementState() const;
    void setManagementState(const QString &management_state);
    bool is_management_state_Set() const;
    bool is_management_state_Valid() const;

    QString getManufacturer() const;
    void setManufacturer(const QString &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    QString getMeid() const;
    void setMeid(const QString &meid);
    bool is_meid_Set() const;
    bool is_meid_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNetworkOperator() const;
    void setNetworkOperator(const QString &network_operator);
    bool is_network_operator_Set() const;
    bool is_network_operator_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    QList<QString> getOtherAccounts() const;
    void setOtherAccounts(const QList<QString> &other_accounts);
    bool is_other_accounts_Set() const;
    bool is_other_accounts_Valid() const;

    QString getOwnerType() const;
    void setOwnerType(const QString &owner_type);
    bool is_owner_type_Set() const;
    bool is_owner_type_Valid() const;

    QString getReleaseVersion() const;
    void setReleaseVersion(const QString &release_version);
    bool is_release_version_Set() const;
    bool is_release_version_Valid() const;

    QString getSecurityPatchTime() const;
    void setSecurityPatchTime(const QString &security_patch_time);
    bool is_security_patch_time_Set() const;
    bool is_security_patch_time_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QList<QString> getWifiMacAddresses() const;
    void setWifiMacAddresses(const QList<QString> &wifi_mac_addresses);
    bool is_wifi_mac_addresses_Set() const;
    bool is_wifi_mac_addresses_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleAppsCloudidentityDevicesV1AndroidAttributes m_android_specific_attributes;
    bool m_android_specific_attributes_isSet;
    bool m_android_specific_attributes_isValid;

    QString m_asset_tag;
    bool m_asset_tag_isSet;
    bool m_asset_tag_isValid;

    QString m_baseband_version;
    bool m_baseband_version_isSet;
    bool m_baseband_version_isValid;

    QString m_bootloader_version;
    bool m_bootloader_version_isSet;
    bool m_bootloader_version_isValid;

    QString m_brand;
    bool m_brand_isSet;
    bool m_brand_isValid;

    QString m_build_number;
    bool m_build_number_isSet;
    bool m_build_number_isValid;

    QString m_compromised_state;
    bool m_compromised_state_isSet;
    bool m_compromised_state_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    QString m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    bool m_enabled_developer_options;
    bool m_enabled_developer_options_isSet;
    bool m_enabled_developer_options_isValid;

    bool m_enabled_usb_debugging;
    bool m_enabled_usb_debugging_isSet;
    bool m_enabled_usb_debugging_isValid;

    QString m_encryption_state;
    bool m_encryption_state_isSet;
    bool m_encryption_state_isValid;

    QString m_hostname;
    bool m_hostname_isSet;
    bool m_hostname_isValid;

    QString m_imei;
    bool m_imei_isSet;
    bool m_imei_isValid;

    QString m_kernel_version;
    bool m_kernel_version_isSet;
    bool m_kernel_version_isValid;

    QString m_last_sync_time;
    bool m_last_sync_time_isSet;
    bool m_last_sync_time_isValid;

    QString m_management_state;
    bool m_management_state_isSet;
    bool m_management_state_isValid;

    QString m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    QString m_meid;
    bool m_meid_isSet;
    bool m_meid_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_network_operator;
    bool m_network_operator_isSet;
    bool m_network_operator_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    QList<QString> m_other_accounts;
    bool m_other_accounts_isSet;
    bool m_other_accounts_isValid;

    QString m_owner_type;
    bool m_owner_type_isSet;
    bool m_owner_type_isValid;

    QString m_release_version;
    bool m_release_version_isSet;
    bool m_release_version_isValid;

    QString m_security_patch_time;
    bool m_security_patch_time_isSet;
    bool m_security_patch_time_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QList<QString> m_wifi_mac_addresses;
    bool m_wifi_mac_addresses_isSet;
    bool m_wifi_mac_addresses_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAppsCloudidentityDevicesV1Device)

#endif // OAIGoogleAppsCloudidentityDevicesV1Device_H
