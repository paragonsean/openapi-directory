/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInboundSamlSsoProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInboundSamlSsoProfile::OAIInboundSamlSsoProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInboundSamlSsoProfile::OAIInboundSamlSsoProfile() {
    this->initializeModel();
}

OAIInboundSamlSsoProfile::~OAIInboundSamlSsoProfile() {}

void OAIInboundSamlSsoProfile::initializeModel() {

    m_customer_isSet = false;
    m_customer_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_idp_config_isSet = false;
    m_idp_config_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_sp_config_isSet = false;
    m_sp_config_isValid = false;
}

void OAIInboundSamlSsoProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInboundSamlSsoProfile::fromJsonObject(QJsonObject json) {

    m_customer_isValid = ::OpenAPI::fromJsonValue(m_customer, json[QString("customer")]);
    m_customer_isSet = !json[QString("customer")].isNull() && m_customer_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_idp_config_isValid = ::OpenAPI::fromJsonValue(m_idp_config, json[QString("idpConfig")]);
    m_idp_config_isSet = !json[QString("idpConfig")].isNull() && m_idp_config_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_sp_config_isValid = ::OpenAPI::fromJsonValue(m_sp_config, json[QString("spConfig")]);
    m_sp_config_isSet = !json[QString("spConfig")].isNull() && m_sp_config_isValid;
}

QString OAIInboundSamlSsoProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInboundSamlSsoProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_isSet) {
        obj.insert(QString("customer"), ::OpenAPI::toJsonValue(m_customer));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_idp_config.isSet()) {
        obj.insert(QString("idpConfig"), ::OpenAPI::toJsonValue(m_idp_config));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_sp_config.isSet()) {
        obj.insert(QString("spConfig"), ::OpenAPI::toJsonValue(m_sp_config));
    }
    return obj;
}

QString OAIInboundSamlSsoProfile::getCustomer() const {
    return m_customer;
}
void OAIInboundSamlSsoProfile::setCustomer(const QString &customer) {
    m_customer = customer;
    m_customer_isSet = true;
}

bool OAIInboundSamlSsoProfile::is_customer_Set() const{
    return m_customer_isSet;
}

bool OAIInboundSamlSsoProfile::is_customer_Valid() const{
    return m_customer_isValid;
}

QString OAIInboundSamlSsoProfile::getDisplayName() const {
    return m_display_name;
}
void OAIInboundSamlSsoProfile::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIInboundSamlSsoProfile::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIInboundSamlSsoProfile::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAISamlIdpConfig OAIInboundSamlSsoProfile::getIdpConfig() const {
    return m_idp_config;
}
void OAIInboundSamlSsoProfile::setIdpConfig(const OAISamlIdpConfig &idp_config) {
    m_idp_config = idp_config;
    m_idp_config_isSet = true;
}

bool OAIInboundSamlSsoProfile::is_idp_config_Set() const{
    return m_idp_config_isSet;
}

bool OAIInboundSamlSsoProfile::is_idp_config_Valid() const{
    return m_idp_config_isValid;
}

QString OAIInboundSamlSsoProfile::getName() const {
    return m_name;
}
void OAIInboundSamlSsoProfile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIInboundSamlSsoProfile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIInboundSamlSsoProfile::is_name_Valid() const{
    return m_name_isValid;
}

OAISamlSpConfig OAIInboundSamlSsoProfile::getSpConfig() const {
    return m_sp_config;
}
void OAIInboundSamlSsoProfile::setSpConfig(const OAISamlSpConfig &sp_config) {
    m_sp_config = sp_config;
    m_sp_config_isSet = true;
}

bool OAIInboundSamlSsoProfile::is_sp_config_Set() const{
    return m_sp_config_isSet;
}

bool OAIInboundSamlSsoProfile::is_sp_config_Valid() const{
    return m_sp_config_isValid;
}

bool OAIInboundSamlSsoProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_idp_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sp_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInboundSamlSsoProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
