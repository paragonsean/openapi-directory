/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetMembershipGraphResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetMembershipGraphResponse::OAIGetMembershipGraphResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetMembershipGraphResponse::OAIGetMembershipGraphResponse() {
    this->initializeModel();
}

OAIGetMembershipGraphResponse::~OAIGetMembershipGraphResponse() {}

void OAIGetMembershipGraphResponse::initializeModel() {

    m_adjacency_list_isSet = false;
    m_adjacency_list_isValid = false;

    m_groups_isSet = false;
    m_groups_isValid = false;
}

void OAIGetMembershipGraphResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetMembershipGraphResponse::fromJsonObject(QJsonObject json) {

    m_adjacency_list_isValid = ::OpenAPI::fromJsonValue(m_adjacency_list, json[QString("adjacencyList")]);
    m_adjacency_list_isSet = !json[QString("adjacencyList")].isNull() && m_adjacency_list_isValid;

    m_groups_isValid = ::OpenAPI::fromJsonValue(m_groups, json[QString("groups")]);
    m_groups_isSet = !json[QString("groups")].isNull() && m_groups_isValid;
}

QString OAIGetMembershipGraphResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetMembershipGraphResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_adjacency_list.size() > 0) {
        obj.insert(QString("adjacencyList"), ::OpenAPI::toJsonValue(m_adjacency_list));
    }
    if (m_groups.size() > 0) {
        obj.insert(QString("groups"), ::OpenAPI::toJsonValue(m_groups));
    }
    return obj;
}

QList<OAIMembershipAdjacencyList> OAIGetMembershipGraphResponse::getAdjacencyList() const {
    return m_adjacency_list;
}
void OAIGetMembershipGraphResponse::setAdjacencyList(const QList<OAIMembershipAdjacencyList> &adjacency_list) {
    m_adjacency_list = adjacency_list;
    m_adjacency_list_isSet = true;
}

bool OAIGetMembershipGraphResponse::is_adjacency_list_Set() const{
    return m_adjacency_list_isSet;
}

bool OAIGetMembershipGraphResponse::is_adjacency_list_Valid() const{
    return m_adjacency_list_isValid;
}

QList<OAIGroup> OAIGetMembershipGraphResponse::getGroups() const {
    return m_groups;
}
void OAIGetMembershipGraphResponse::setGroups(const QList<OAIGroup> &groups) {
    m_groups = groups;
    m_groups_isSet = true;
}

bool OAIGetMembershipGraphResponse::is_groups_Set() const{
    return m_groups_isSet;
}

bool OAIGetMembershipGraphResponse::is_groups_Valid() const{
    return m_groups_isValid;
}

bool OAIGetMembershipGraphResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adjacency_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetMembershipGraphResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
