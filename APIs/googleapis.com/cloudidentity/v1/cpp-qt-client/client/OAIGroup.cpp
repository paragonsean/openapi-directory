/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroup::OAIGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroup::OAIGroup() {
    this->initializeModel();
}

OAIGroup::~OAIGroup() {}

void OAIGroup::initializeModel() {

    m_additional_group_keys_isSet = false;
    m_additional_group_keys_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_dynamic_group_metadata_isSet = false;
    m_dynamic_group_metadata_isValid = false;

    m_group_key_isSet = false;
    m_group_key_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroup::fromJsonObject(QJsonObject json) {

    m_additional_group_keys_isValid = ::OpenAPI::fromJsonValue(m_additional_group_keys, json[QString("additionalGroupKeys")]);
    m_additional_group_keys_isSet = !json[QString("additionalGroupKeys")].isNull() && m_additional_group_keys_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_dynamic_group_metadata_isValid = ::OpenAPI::fromJsonValue(m_dynamic_group_metadata, json[QString("dynamicGroupMetadata")]);
    m_dynamic_group_metadata_isSet = !json[QString("dynamicGroupMetadata")].isNull() && m_dynamic_group_metadata_isValid;

    m_group_key_isValid = ::OpenAPI::fromJsonValue(m_group_key, json[QString("groupKey")]);
    m_group_key_isSet = !json[QString("groupKey")].isNull() && m_group_key_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_group_keys.size() > 0) {
        obj.insert(QString("additionalGroupKeys"), ::OpenAPI::toJsonValue(m_additional_group_keys));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_dynamic_group_metadata.isSet()) {
        obj.insert(QString("dynamicGroupMetadata"), ::OpenAPI::toJsonValue(m_dynamic_group_metadata));
    }
    if (m_group_key.isSet()) {
        obj.insert(QString("groupKey"), ::OpenAPI::toJsonValue(m_group_key));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QList<OAIEntityKey> OAIGroup::getAdditionalGroupKeys() const {
    return m_additional_group_keys;
}
void OAIGroup::setAdditionalGroupKeys(const QList<OAIEntityKey> &additional_group_keys) {
    m_additional_group_keys = additional_group_keys;
    m_additional_group_keys_isSet = true;
}

bool OAIGroup::is_additional_group_keys_Set() const{
    return m_additional_group_keys_isSet;
}

bool OAIGroup::is_additional_group_keys_Valid() const{
    return m_additional_group_keys_isValid;
}

QString OAIGroup::getCreateTime() const {
    return m_create_time;
}
void OAIGroup::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGroup::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGroup::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGroup::getDescription() const {
    return m_description;
}
void OAIGroup::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGroup::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGroup::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGroup::getDisplayName() const {
    return m_display_name;
}
void OAIGroup::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGroup::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGroup::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIDynamicGroupMetadata OAIGroup::getDynamicGroupMetadata() const {
    return m_dynamic_group_metadata;
}
void OAIGroup::setDynamicGroupMetadata(const OAIDynamicGroupMetadata &dynamic_group_metadata) {
    m_dynamic_group_metadata = dynamic_group_metadata;
    m_dynamic_group_metadata_isSet = true;
}

bool OAIGroup::is_dynamic_group_metadata_Set() const{
    return m_dynamic_group_metadata_isSet;
}

bool OAIGroup::is_dynamic_group_metadata_Valid() const{
    return m_dynamic_group_metadata_isValid;
}

OAIEntityKey OAIGroup::getGroupKey() const {
    return m_group_key;
}
void OAIGroup::setGroupKey(const OAIEntityKey &group_key) {
    m_group_key = group_key;
    m_group_key_isSet = true;
}

bool OAIGroup::is_group_key_Set() const{
    return m_group_key_isSet;
}

bool OAIGroup::is_group_key_Valid() const{
    return m_group_key_isValid;
}

QMap<QString, QString> OAIGroup::getLabels() const {
    return m_labels;
}
void OAIGroup::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGroup::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGroup::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGroup::getName() const {
    return m_name;
}
void OAIGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGroup::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGroup::getParent() const {
    return m_parent;
}
void OAIGroup::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGroup::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGroup::is_parent_Valid() const{
    return m_parent_isValid;
}

QString OAIGroup::getUpdateTime() const {
    return m_update_time;
}
void OAIGroup::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGroup::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGroup::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_group_keys.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dynamic_group_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_key.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
