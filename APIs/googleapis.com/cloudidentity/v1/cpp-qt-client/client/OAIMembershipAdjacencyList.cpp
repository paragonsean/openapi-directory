/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMembershipAdjacencyList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMembershipAdjacencyList::OAIMembershipAdjacencyList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMembershipAdjacencyList::OAIMembershipAdjacencyList() {
    this->initializeModel();
}

OAIMembershipAdjacencyList::~OAIMembershipAdjacencyList() {}

void OAIMembershipAdjacencyList::initializeModel() {

    m_edges_isSet = false;
    m_edges_isValid = false;

    m_group_isSet = false;
    m_group_isValid = false;
}

void OAIMembershipAdjacencyList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMembershipAdjacencyList::fromJsonObject(QJsonObject json) {

    m_edges_isValid = ::OpenAPI::fromJsonValue(m_edges, json[QString("edges")]);
    m_edges_isSet = !json[QString("edges")].isNull() && m_edges_isValid;

    m_group_isValid = ::OpenAPI::fromJsonValue(m_group, json[QString("group")]);
    m_group_isSet = !json[QString("group")].isNull() && m_group_isValid;
}

QString OAIMembershipAdjacencyList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMembershipAdjacencyList::asJsonObject() const {
    QJsonObject obj;
    if (m_edges.size() > 0) {
        obj.insert(QString("edges"), ::OpenAPI::toJsonValue(m_edges));
    }
    if (m_group_isSet) {
        obj.insert(QString("group"), ::OpenAPI::toJsonValue(m_group));
    }
    return obj;
}

QList<OAIMembership> OAIMembershipAdjacencyList::getEdges() const {
    return m_edges;
}
void OAIMembershipAdjacencyList::setEdges(const QList<OAIMembership> &edges) {
    m_edges = edges;
    m_edges_isSet = true;
}

bool OAIMembershipAdjacencyList::is_edges_Set() const{
    return m_edges_isSet;
}

bool OAIMembershipAdjacencyList::is_edges_Valid() const{
    return m_edges_isValid;
}

QString OAIMembershipAdjacencyList::getGroup() const {
    return m_group;
}
void OAIMembershipAdjacencyList::setGroup(const QString &group) {
    m_group = group;
    m_group_isSet = true;
}

bool OAIMembershipAdjacencyList::is_group_Set() const{
    return m_group_isSet;
}

bool OAIMembershipAdjacencyList::is_group_Valid() const{
    return m_group_isValid;
}

bool OAIMembershipAdjacencyList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_edges.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMembershipAdjacencyList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
