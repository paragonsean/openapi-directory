# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CheckTransitiveMembershipResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_membership: bool=None):
        """CheckTransitiveMembershipResponse - a model defined in OpenAPI

        :param has_membership: The has_membership of this CheckTransitiveMembershipResponse.
        """
        self.openapi_types = {
            'has_membership': bool
        }

        self.attribute_map = {
            'has_membership': 'hasMembership'
        }

        self._has_membership = has_membership

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckTransitiveMembershipResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckTransitiveMembershipResponse of this CheckTransitiveMembershipResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_membership(self):
        """Gets the has_membership of this CheckTransitiveMembershipResponse.

        Response does not include the possible roles of a member since the behavior of this rpc is not all-or-nothing unlike the other rpcs. So, it may not be possible to list all the roles definitively, due to possible lack of authorization in some of the paths.

        :return: The has_membership of this CheckTransitiveMembershipResponse.
        :rtype: bool
        """
        return self._has_membership

    @has_membership.setter
    def has_membership(self, has_membership):
        """Sets the has_membership of this CheckTransitiveMembershipResponse.

        Response does not include the possible roles of a member since the behavior of this rpc is not all-or-nothing unlike the other rpcs. So, it may not be possible to list all the roles definitively, due to possible lack of authorization in some of the paths.

        :param has_membership: The has_membership of this CheckTransitiveMembershipResponse.
        :type has_membership: bool
        """

        self._has_membership = has_membership
