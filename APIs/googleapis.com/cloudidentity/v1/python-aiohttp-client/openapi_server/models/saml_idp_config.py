# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SamlIdpConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, change_password_uri: str=None, entity_id: str=None, logout_redirect_uri: str=None, single_sign_on_service_uri: str=None):
        """SamlIdpConfig - a model defined in OpenAPI

        :param change_password_uri: The change_password_uri of this SamlIdpConfig.
        :param entity_id: The entity_id of this SamlIdpConfig.
        :param logout_redirect_uri: The logout_redirect_uri of this SamlIdpConfig.
        :param single_sign_on_service_uri: The single_sign_on_service_uri of this SamlIdpConfig.
        """
        self.openapi_types = {
            'change_password_uri': str,
            'entity_id': str,
            'logout_redirect_uri': str,
            'single_sign_on_service_uri': str
        }

        self.attribute_map = {
            'change_password_uri': 'changePasswordUri',
            'entity_id': 'entityId',
            'logout_redirect_uri': 'logoutRedirectUri',
            'single_sign_on_service_uri': 'singleSignOnServiceUri'
        }

        self._change_password_uri = change_password_uri
        self._entity_id = entity_id
        self._logout_redirect_uri = logout_redirect_uri
        self._single_sign_on_service_uri = single_sign_on_service_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SamlIdpConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SamlIdpConfig of this SamlIdpConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_password_uri(self):
        """Gets the change_password_uri of this SamlIdpConfig.

        The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.

        :return: The change_password_uri of this SamlIdpConfig.
        :rtype: str
        """
        return self._change_password_uri

    @change_password_uri.setter
    def change_password_uri(self, change_password_uri):
        """Sets the change_password_uri of this SamlIdpConfig.

        The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.

        :param change_password_uri: The change_password_uri of this SamlIdpConfig.
        :type change_password_uri: str
        """

        self._change_password_uri = change_password_uri

    @property
    def entity_id(self):
        """Gets the entity_id of this SamlIdpConfig.

        Required. The SAML **Entity ID** of the identity provider.

        :return: The entity_id of this SamlIdpConfig.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this SamlIdpConfig.

        Required. The SAML **Entity ID** of the identity provider.

        :param entity_id: The entity_id of this SamlIdpConfig.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def logout_redirect_uri(self):
        """Gets the logout_redirect_uri of this SamlIdpConfig.

        The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is not supported. Must use `HTTPS`.

        :return: The logout_redirect_uri of this SamlIdpConfig.
        :rtype: str
        """
        return self._logout_redirect_uri

    @logout_redirect_uri.setter
    def logout_redirect_uri(self, logout_redirect_uri):
        """Sets the logout_redirect_uri of this SamlIdpConfig.

        The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is not supported. Must use `HTTPS`.

        :param logout_redirect_uri: The logout_redirect_uri of this SamlIdpConfig.
        :type logout_redirect_uri: str
        """

        self._logout_redirect_uri = logout_redirect_uri

    @property
    def single_sign_on_service_uri(self):
        """Gets the single_sign_on_service_uri of this SamlIdpConfig.

        Required. The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the `HTTP-Redirect` binding.

        :return: The single_sign_on_service_uri of this SamlIdpConfig.
        :rtype: str
        """
        return self._single_sign_on_service_uri

    @single_sign_on_service_uri.setter
    def single_sign_on_service_uri(self, single_sign_on_service_uri):
        """Sets the single_sign_on_service_uri of this SamlIdpConfig.

        Required. The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the `HTTP-Redirect` binding.

        :param single_sign_on_service_uri: The single_sign_on_service_uri of this SamlIdpConfig.
        :type single_sign_on_service_uri: str
        """

        self._single_sign_on_service_uri = single_sign_on_service_uri
