# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_cloudidentity_devices_v1_custom_attribute_value import GoogleAppsCloudidentityDevicesV1CustomAttributeValue
from openapi_server import util


class GoogleAppsCloudidentityDevicesV1ClientState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_tags: List[str]=None, compliance_state: str=None, create_time: str=None, custom_id: str=None, etag: str=None, health_score: str=None, key_value_pairs: Dict[str, GoogleAppsCloudidentityDevicesV1CustomAttributeValue]=None, last_update_time: str=None, managed: str=None, name: str=None, owner_type: str=None, score_reason: str=None):
        """GoogleAppsCloudidentityDevicesV1ClientState - a model defined in OpenAPI

        :param asset_tags: The asset_tags of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param compliance_state: The compliance_state of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param create_time: The create_time of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param custom_id: The custom_id of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param etag: The etag of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param health_score: The health_score of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param key_value_pairs: The key_value_pairs of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param last_update_time: The last_update_time of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param managed: The managed of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param name: The name of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param owner_type: The owner_type of this GoogleAppsCloudidentityDevicesV1ClientState.
        :param score_reason: The score_reason of this GoogleAppsCloudidentityDevicesV1ClientState.
        """
        self.openapi_types = {
            'asset_tags': List[str],
            'compliance_state': str,
            'create_time': str,
            'custom_id': str,
            'etag': str,
            'health_score': str,
            'key_value_pairs': Dict[str, GoogleAppsCloudidentityDevicesV1CustomAttributeValue],
            'last_update_time': str,
            'managed': str,
            'name': str,
            'owner_type': str,
            'score_reason': str
        }

        self.attribute_map = {
            'asset_tags': 'assetTags',
            'compliance_state': 'complianceState',
            'create_time': 'createTime',
            'custom_id': 'customId',
            'etag': 'etag',
            'health_score': 'healthScore',
            'key_value_pairs': 'keyValuePairs',
            'last_update_time': 'lastUpdateTime',
            'managed': 'managed',
            'name': 'name',
            'owner_type': 'ownerType',
            'score_reason': 'scoreReason'
        }

        self._asset_tags = asset_tags
        self._compliance_state = compliance_state
        self._create_time = create_time
        self._custom_id = custom_id
        self._etag = etag
        self._health_score = health_score
        self._key_value_pairs = key_value_pairs
        self._last_update_time = last_update_time
        self._managed = managed
        self._name = name
        self._owner_type = owner_type
        self._score_reason = score_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsCloudidentityDevicesV1ClientState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsCloudidentityDevicesV1ClientState of this GoogleAppsCloudidentityDevicesV1ClientState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_tags(self):
        """Gets the asset_tags of this GoogleAppsCloudidentityDevicesV1ClientState.

        The caller can specify asset tags for this resource

        :return: The asset_tags of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: List[str]
        """
        return self._asset_tags

    @asset_tags.setter
    def asset_tags(self, asset_tags):
        """Sets the asset_tags of this GoogleAppsCloudidentityDevicesV1ClientState.

        The caller can specify asset tags for this resource

        :param asset_tags: The asset_tags of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type asset_tags: List[str]
        """

        self._asset_tags = asset_tags

    @property
    def compliance_state(self):
        """Gets the compliance_state of this GoogleAppsCloudidentityDevicesV1ClientState.

        The compliance state of the resource as specified by the API client.

        :return: The compliance_state of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: str
        """
        return self._compliance_state

    @compliance_state.setter
    def compliance_state(self, compliance_state):
        """Sets the compliance_state of this GoogleAppsCloudidentityDevicesV1ClientState.

        The compliance state of the resource as specified by the API client.

        :param compliance_state: The compliance_state of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type compliance_state: str
        """
        allowed_values = ["COMPLIANCE_STATE_UNSPECIFIED", "COMPLIANT", "NON_COMPLIANT"]  # noqa: E501
        if compliance_state not in allowed_values:
            raise ValueError(
                "Invalid value for `compliance_state` ({0}), must be one of {1}"
                .format(compliance_state, allowed_values)
            )

        self._compliance_state = compliance_state

    @property
    def create_time(self):
        """Gets the create_time of this GoogleAppsCloudidentityDevicesV1ClientState.

        Output only. The time the client state data was created.

        :return: The create_time of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleAppsCloudidentityDevicesV1ClientState.

        Output only. The time the client state data was created.

        :param create_time: The create_time of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def custom_id(self):
        """Gets the custom_id of this GoogleAppsCloudidentityDevicesV1ClientState.

        This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field.

        :return: The custom_id of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: str
        """
        return self._custom_id

    @custom_id.setter
    def custom_id(self, custom_id):
        """Sets the custom_id of this GoogleAppsCloudidentityDevicesV1ClientState.

        This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field.

        :param custom_id: The custom_id of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type custom_id: str
        """

        self._custom_id = custom_id

    @property
    def etag(self):
        """Gets the etag of this GoogleAppsCloudidentityDevicesV1ClientState.

        The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest

        :return: The etag of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleAppsCloudidentityDevicesV1ClientState.

        The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest

        :param etag: The etag of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type etag: str
        """

        self._etag = etag

    @property
    def health_score(self):
        """Gets the health_score of this GoogleAppsCloudidentityDevicesV1ClientState.

        The Health score of the resource. The Health score is the callers specification of the condition of the device from a usability point of view. For example, a third-party device management provider may specify a health score based on its compliance with organizational policies.

        :return: The health_score of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: str
        """
        return self._health_score

    @health_score.setter
    def health_score(self, health_score):
        """Sets the health_score of this GoogleAppsCloudidentityDevicesV1ClientState.

        The Health score of the resource. The Health score is the callers specification of the condition of the device from a usability point of view. For example, a third-party device management provider may specify a health score based on its compliance with organizational policies.

        :param health_score: The health_score of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type health_score: str
        """
        allowed_values = ["HEALTH_SCORE_UNSPECIFIED", "VERY_POOR", "POOR", "NEUTRAL", "GOOD", "VERY_GOOD"]  # noqa: E501
        if health_score not in allowed_values:
            raise ValueError(
                "Invalid value for `health_score` ({0}), must be one of {1}"
                .format(health_score, allowed_values)
            )

        self._health_score = health_score

    @property
    def key_value_pairs(self):
        """Gets the key_value_pairs of this GoogleAppsCloudidentityDevicesV1ClientState.

        The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.

        :return: The key_value_pairs of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: Dict[str, GoogleAppsCloudidentityDevicesV1CustomAttributeValue]
        """
        return self._key_value_pairs

    @key_value_pairs.setter
    def key_value_pairs(self, key_value_pairs):
        """Sets the key_value_pairs of this GoogleAppsCloudidentityDevicesV1ClientState.

        The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.

        :param key_value_pairs: The key_value_pairs of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type key_value_pairs: Dict[str, GoogleAppsCloudidentityDevicesV1CustomAttributeValue]
        """

        self._key_value_pairs = key_value_pairs

    @property
    def last_update_time(self):
        """Gets the last_update_time of this GoogleAppsCloudidentityDevicesV1ClientState.

        Output only. The time the client state data was last updated.

        :return: The last_update_time of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: str
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this GoogleAppsCloudidentityDevicesV1ClientState.

        Output only. The time the client state data was last updated.

        :param last_update_time: The last_update_time of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type last_update_time: str
        """

        self._last_update_time = last_update_time

    @property
    def managed(self):
        """Gets the managed of this GoogleAppsCloudidentityDevicesV1ClientState.

        The management state of the resource as specified by the API client.

        :return: The managed of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: str
        """
        return self._managed

    @managed.setter
    def managed(self, managed):
        """Sets the managed of this GoogleAppsCloudidentityDevicesV1ClientState.

        The management state of the resource as specified by the API client.

        :param managed: The managed of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type managed: str
        """
        allowed_values = ["MANAGED_STATE_UNSPECIFIED", "MANAGED", "UNMANAGED"]  # noqa: E501
        if managed not in allowed_values:
            raise ValueError(
                "Invalid value for `managed` ({0}), must be one of {1}"
                .format(managed, allowed_values)
            )

        self._managed = managed

    @property
    def name(self):
        """Gets the name of this GoogleAppsCloudidentityDevicesV1ClientState.

        Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device}/deviceUsers/{device_user}/clientState/{partner}`, where partner corresponds to the partner storing the data. For partners belonging to the \"BeyondCorp Alliance\", this is the partner ID specified to you by Google. For all other callers, this is a string of the form: `{customer}-suffix`, where `customer` is your customer ID. The *suffix* is any string the caller specifies. This string will be displayed verbatim in the administration console. This suffix is used in setting up Custom Access Levels in Context-Aware Access. Your organization's customer ID can be obtained from the URL: `GET https://www.googleapis.com/admin/directory/v1/customers/my_customer` The `id` field in the response contains the customer ID starting with the letter 'C'. The customer ID to be used in this API is the string after the letter 'C' (not including 'C')

        :return: The name of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAppsCloudidentityDevicesV1ClientState.

        Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device}/deviceUsers/{device_user}/clientState/{partner}`, where partner corresponds to the partner storing the data. For partners belonging to the \"BeyondCorp Alliance\", this is the partner ID specified to you by Google. For all other callers, this is a string of the form: `{customer}-suffix`, where `customer` is your customer ID. The *suffix* is any string the caller specifies. This string will be displayed verbatim in the administration console. This suffix is used in setting up Custom Access Levels in Context-Aware Access. Your organization's customer ID can be obtained from the URL: `GET https://www.googleapis.com/admin/directory/v1/customers/my_customer` The `id` field in the response contains the customer ID starting with the letter 'C'. The customer ID to be used in this API is the string after the letter 'C' (not including 'C')

        :param name: The name of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type name: str
        """

        self._name = name

    @property
    def owner_type(self):
        """Gets the owner_type of this GoogleAppsCloudidentityDevicesV1ClientState.

        Output only. The owner of the ClientState

        :return: The owner_type of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: str
        """
        return self._owner_type

    @owner_type.setter
    def owner_type(self, owner_type):
        """Sets the owner_type of this GoogleAppsCloudidentityDevicesV1ClientState.

        Output only. The owner of the ClientState

        :param owner_type: The owner_type of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type owner_type: str
        """
        allowed_values = ["OWNER_TYPE_UNSPECIFIED", "OWNER_TYPE_CUSTOMER", "OWNER_TYPE_PARTNER"]  # noqa: E501
        if owner_type not in allowed_values:
            raise ValueError(
                "Invalid value for `owner_type` ({0}), must be one of {1}"
                .format(owner_type, allowed_values)
            )

        self._owner_type = owner_type

    @property
    def score_reason(self):
        """Gets the score_reason of this GoogleAppsCloudidentityDevicesV1ClientState.

        A descriptive cause of the health score.

        :return: The score_reason of this GoogleAppsCloudidentityDevicesV1ClientState.
        :rtype: str
        """
        return self._score_reason

    @score_reason.setter
    def score_reason(self, score_reason):
        """Sets the score_reason of this GoogleAppsCloudidentityDevicesV1ClientState.

        A descriptive cause of the health score.

        :param score_reason: The score_reason of this GoogleAppsCloudidentityDevicesV1ClientState.
        :type score_reason: str
        """

        self._score_reason = score_reason
