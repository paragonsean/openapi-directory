# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dynamic_group_query import DynamicGroupQuery
from openapi_server.models.dynamic_group_status import DynamicGroupStatus
from openapi_server import util


class DynamicGroupMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queries: List[DynamicGroupQuery]=None, status: DynamicGroupStatus=None):
        """DynamicGroupMetadata - a model defined in OpenAPI

        :param queries: The queries of this DynamicGroupMetadata.
        :param status: The status of this DynamicGroupMetadata.
        """
        self.openapi_types = {
            'queries': List[DynamicGroupQuery],
            'status': DynamicGroupStatus
        }

        self.attribute_map = {
            'queries': 'queries',
            'status': 'status'
        }

        self._queries = queries
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DynamicGroupMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DynamicGroupMetadata of this DynamicGroupMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queries(self):
        """Gets the queries of this DynamicGroupMetadata.

        Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 500 dynamic groups.

        :return: The queries of this DynamicGroupMetadata.
        :rtype: List[DynamicGroupQuery]
        """
        return self._queries

    @queries.setter
    def queries(self, queries):
        """Sets the queries of this DynamicGroupMetadata.

        Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 500 dynamic groups.

        :param queries: The queries of this DynamicGroupMetadata.
        :type queries: List[DynamicGroupQuery]
        """

        self._queries = queries

    @property
    def status(self):
        """Gets the status of this DynamicGroupMetadata.


        :return: The status of this DynamicGroupMetadata.
        :rtype: DynamicGroupStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DynamicGroupMetadata.


        :param status: The status of this DynamicGroupMetadata.
        :type status: DynamicGroupStatus
        """

        self._status = status
