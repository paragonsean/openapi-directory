/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAppsCloudidentityDevicesV1AndroidAttributes from './GoogleAppsCloudidentityDevicesV1AndroidAttributes';

/**
 * The GoogleAppsCloudidentityDevicesV1Device model module.
 * @module model/GoogleAppsCloudidentityDevicesV1Device
 * @version v1
 */
class GoogleAppsCloudidentityDevicesV1Device {
    /**
     * Constructs a new <code>GoogleAppsCloudidentityDevicesV1Device</code>.
     *  A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
     * @alias module:model/GoogleAppsCloudidentityDevicesV1Device
     */
    constructor() { 
        
        GoogleAppsCloudidentityDevicesV1Device.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCloudidentityDevicesV1Device</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCloudidentityDevicesV1Device} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCloudidentityDevicesV1Device} The populated <code>GoogleAppsCloudidentityDevicesV1Device</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCloudidentityDevicesV1Device();

            if (data.hasOwnProperty('androidSpecificAttributes')) {
                obj['androidSpecificAttributes'] = GoogleAppsCloudidentityDevicesV1AndroidAttributes.constructFromObject(data['androidSpecificAttributes']);
            }
            if (data.hasOwnProperty('assetTag')) {
                obj['assetTag'] = ApiClient.convertToType(data['assetTag'], 'String');
            }
            if (data.hasOwnProperty('basebandVersion')) {
                obj['basebandVersion'] = ApiClient.convertToType(data['basebandVersion'], 'String');
            }
            if (data.hasOwnProperty('bootloaderVersion')) {
                obj['bootloaderVersion'] = ApiClient.convertToType(data['bootloaderVersion'], 'String');
            }
            if (data.hasOwnProperty('brand')) {
                obj['brand'] = ApiClient.convertToType(data['brand'], 'String');
            }
            if (data.hasOwnProperty('buildNumber')) {
                obj['buildNumber'] = ApiClient.convertToType(data['buildNumber'], 'String');
            }
            if (data.hasOwnProperty('compromisedState')) {
                obj['compromisedState'] = ApiClient.convertToType(data['compromisedState'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('deviceId')) {
                obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'String');
            }
            if (data.hasOwnProperty('deviceType')) {
                obj['deviceType'] = ApiClient.convertToType(data['deviceType'], 'String');
            }
            if (data.hasOwnProperty('enabledDeveloperOptions')) {
                obj['enabledDeveloperOptions'] = ApiClient.convertToType(data['enabledDeveloperOptions'], 'Boolean');
            }
            if (data.hasOwnProperty('enabledUsbDebugging')) {
                obj['enabledUsbDebugging'] = ApiClient.convertToType(data['enabledUsbDebugging'], 'Boolean');
            }
            if (data.hasOwnProperty('encryptionState')) {
                obj['encryptionState'] = ApiClient.convertToType(data['encryptionState'], 'String');
            }
            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('imei')) {
                obj['imei'] = ApiClient.convertToType(data['imei'], 'String');
            }
            if (data.hasOwnProperty('kernelVersion')) {
                obj['kernelVersion'] = ApiClient.convertToType(data['kernelVersion'], 'String');
            }
            if (data.hasOwnProperty('lastSyncTime')) {
                obj['lastSyncTime'] = ApiClient.convertToType(data['lastSyncTime'], 'String');
            }
            if (data.hasOwnProperty('managementState')) {
                obj['managementState'] = ApiClient.convertToType(data['managementState'], 'String');
            }
            if (data.hasOwnProperty('manufacturer')) {
                obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
            }
            if (data.hasOwnProperty('meid')) {
                obj['meid'] = ApiClient.convertToType(data['meid'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('networkOperator')) {
                obj['networkOperator'] = ApiClient.convertToType(data['networkOperator'], 'String');
            }
            if (data.hasOwnProperty('osVersion')) {
                obj['osVersion'] = ApiClient.convertToType(data['osVersion'], 'String');
            }
            if (data.hasOwnProperty('otherAccounts')) {
                obj['otherAccounts'] = ApiClient.convertToType(data['otherAccounts'], ['String']);
            }
            if (data.hasOwnProperty('ownerType')) {
                obj['ownerType'] = ApiClient.convertToType(data['ownerType'], 'String');
            }
            if (data.hasOwnProperty('releaseVersion')) {
                obj['releaseVersion'] = ApiClient.convertToType(data['releaseVersion'], 'String');
            }
            if (data.hasOwnProperty('securityPatchTime')) {
                obj['securityPatchTime'] = ApiClient.convertToType(data['securityPatchTime'], 'String');
            }
            if (data.hasOwnProperty('serialNumber')) {
                obj['serialNumber'] = ApiClient.convertToType(data['serialNumber'], 'String');
            }
            if (data.hasOwnProperty('wifiMacAddresses')) {
                obj['wifiMacAddresses'] = ApiClient.convertToType(data['wifiMacAddresses'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCloudidentityDevicesV1Device</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCloudidentityDevicesV1Device</code>.
     */
    static validateJSON(data) {
        // validate the optional field `androidSpecificAttributes`
        if (data['androidSpecificAttributes']) { // data not null
          GoogleAppsCloudidentityDevicesV1AndroidAttributes.validateJSON(data['androidSpecificAttributes']);
        }
        // ensure the json data is a string
        if (data['assetTag'] && !(typeof data['assetTag'] === 'string' || data['assetTag'] instanceof String)) {
            throw new Error("Expected the field `assetTag` to be a primitive type in the JSON string but got " + data['assetTag']);
        }
        // ensure the json data is a string
        if (data['basebandVersion'] && !(typeof data['basebandVersion'] === 'string' || data['basebandVersion'] instanceof String)) {
            throw new Error("Expected the field `basebandVersion` to be a primitive type in the JSON string but got " + data['basebandVersion']);
        }
        // ensure the json data is a string
        if (data['bootloaderVersion'] && !(typeof data['bootloaderVersion'] === 'string' || data['bootloaderVersion'] instanceof String)) {
            throw new Error("Expected the field `bootloaderVersion` to be a primitive type in the JSON string but got " + data['bootloaderVersion']);
        }
        // ensure the json data is a string
        if (data['brand'] && !(typeof data['brand'] === 'string' || data['brand'] instanceof String)) {
            throw new Error("Expected the field `brand` to be a primitive type in the JSON string but got " + data['brand']);
        }
        // ensure the json data is a string
        if (data['buildNumber'] && !(typeof data['buildNumber'] === 'string' || data['buildNumber'] instanceof String)) {
            throw new Error("Expected the field `buildNumber` to be a primitive type in the JSON string but got " + data['buildNumber']);
        }
        // ensure the json data is a string
        if (data['compromisedState'] && !(typeof data['compromisedState'] === 'string' || data['compromisedState'] instanceof String)) {
            throw new Error("Expected the field `compromisedState` to be a primitive type in the JSON string but got " + data['compromisedState']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['deviceId'] && !(typeof data['deviceId'] === 'string' || data['deviceId'] instanceof String)) {
            throw new Error("Expected the field `deviceId` to be a primitive type in the JSON string but got " + data['deviceId']);
        }
        // ensure the json data is a string
        if (data['deviceType'] && !(typeof data['deviceType'] === 'string' || data['deviceType'] instanceof String)) {
            throw new Error("Expected the field `deviceType` to be a primitive type in the JSON string but got " + data['deviceType']);
        }
        // ensure the json data is a string
        if (data['encryptionState'] && !(typeof data['encryptionState'] === 'string' || data['encryptionState'] instanceof String)) {
            throw new Error("Expected the field `encryptionState` to be a primitive type in the JSON string but got " + data['encryptionState']);
        }
        // ensure the json data is a string
        if (data['hostname'] && !(typeof data['hostname'] === 'string' || data['hostname'] instanceof String)) {
            throw new Error("Expected the field `hostname` to be a primitive type in the JSON string but got " + data['hostname']);
        }
        // ensure the json data is a string
        if (data['imei'] && !(typeof data['imei'] === 'string' || data['imei'] instanceof String)) {
            throw new Error("Expected the field `imei` to be a primitive type in the JSON string but got " + data['imei']);
        }
        // ensure the json data is a string
        if (data['kernelVersion'] && !(typeof data['kernelVersion'] === 'string' || data['kernelVersion'] instanceof String)) {
            throw new Error("Expected the field `kernelVersion` to be a primitive type in the JSON string but got " + data['kernelVersion']);
        }
        // ensure the json data is a string
        if (data['lastSyncTime'] && !(typeof data['lastSyncTime'] === 'string' || data['lastSyncTime'] instanceof String)) {
            throw new Error("Expected the field `lastSyncTime` to be a primitive type in the JSON string but got " + data['lastSyncTime']);
        }
        // ensure the json data is a string
        if (data['managementState'] && !(typeof data['managementState'] === 'string' || data['managementState'] instanceof String)) {
            throw new Error("Expected the field `managementState` to be a primitive type in the JSON string but got " + data['managementState']);
        }
        // ensure the json data is a string
        if (data['manufacturer'] && !(typeof data['manufacturer'] === 'string' || data['manufacturer'] instanceof String)) {
            throw new Error("Expected the field `manufacturer` to be a primitive type in the JSON string but got " + data['manufacturer']);
        }
        // ensure the json data is a string
        if (data['meid'] && !(typeof data['meid'] === 'string' || data['meid'] instanceof String)) {
            throw new Error("Expected the field `meid` to be a primitive type in the JSON string but got " + data['meid']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['networkOperator'] && !(typeof data['networkOperator'] === 'string' || data['networkOperator'] instanceof String)) {
            throw new Error("Expected the field `networkOperator` to be a primitive type in the JSON string but got " + data['networkOperator']);
        }
        // ensure the json data is a string
        if (data['osVersion'] && !(typeof data['osVersion'] === 'string' || data['osVersion'] instanceof String)) {
            throw new Error("Expected the field `osVersion` to be a primitive type in the JSON string but got " + data['osVersion']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['otherAccounts'])) {
            throw new Error("Expected the field `otherAccounts` to be an array in the JSON data but got " + data['otherAccounts']);
        }
        // ensure the json data is a string
        if (data['ownerType'] && !(typeof data['ownerType'] === 'string' || data['ownerType'] instanceof String)) {
            throw new Error("Expected the field `ownerType` to be a primitive type in the JSON string but got " + data['ownerType']);
        }
        // ensure the json data is a string
        if (data['releaseVersion'] && !(typeof data['releaseVersion'] === 'string' || data['releaseVersion'] instanceof String)) {
            throw new Error("Expected the field `releaseVersion` to be a primitive type in the JSON string but got " + data['releaseVersion']);
        }
        // ensure the json data is a string
        if (data['securityPatchTime'] && !(typeof data['securityPatchTime'] === 'string' || data['securityPatchTime'] instanceof String)) {
            throw new Error("Expected the field `securityPatchTime` to be a primitive type in the JSON string but got " + data['securityPatchTime']);
        }
        // ensure the json data is a string
        if (data['serialNumber'] && !(typeof data['serialNumber'] === 'string' || data['serialNumber'] instanceof String)) {
            throw new Error("Expected the field `serialNumber` to be a primitive type in the JSON string but got " + data['serialNumber']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['wifiMacAddresses'])) {
            throw new Error("Expected the field `wifiMacAddresses` to be an array in the JSON data but got " + data['wifiMacAddresses']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleAppsCloudidentityDevicesV1AndroidAttributes} androidSpecificAttributes
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['androidSpecificAttributes'] = undefined;

/**
 * Asset tag of the device.
 * @member {String} assetTag
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['assetTag'] = undefined;

/**
 * Output only. Baseband version of the device.
 * @member {String} basebandVersion
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['basebandVersion'] = undefined;

/**
 * Output only. Device bootloader version. Example: 0.6.7.
 * @member {String} bootloaderVersion
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['bootloaderVersion'] = undefined;

/**
 * Output only. Device brand. Example: Samsung.
 * @member {String} brand
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['brand'] = undefined;

/**
 * Output only. Build number of the device.
 * @member {String} buildNumber
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['buildNumber'] = undefined;

/**
 * Output only. Represents whether the Device is compromised.
 * @member {module:model/GoogleAppsCloudidentityDevicesV1Device.CompromisedStateEnum} compromisedState
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['compromisedState'] = undefined;

/**
 * Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
 * @member {String} createTime
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['createTime'] = undefined;

/**
 * Unique identifier for the device.
 * @member {String} deviceId
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['deviceId'] = undefined;

/**
 * Output only. Type of device.
 * @member {module:model/GoogleAppsCloudidentityDevicesV1Device.DeviceTypeEnum} deviceType
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['deviceType'] = undefined;

/**
 * Output only. Whether developer options is enabled on device.
 * @member {Boolean} enabledDeveloperOptions
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['enabledDeveloperOptions'] = undefined;

/**
 * Output only. Whether USB debugging is enabled on device.
 * @member {Boolean} enabledUsbDebugging
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['enabledUsbDebugging'] = undefined;

/**
 * Output only. Device encryption state.
 * @member {module:model/GoogleAppsCloudidentityDevicesV1Device.EncryptionStateEnum} encryptionState
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['encryptionState'] = undefined;

/**
 * Host name of the device.
 * @member {String} hostname
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['hostname'] = undefined;

/**
 * Output only. IMEI number of device if GSM device; empty otherwise.
 * @member {String} imei
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['imei'] = undefined;

/**
 * Output only. Kernel version of the device.
 * @member {String} kernelVersion
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['kernelVersion'] = undefined;

/**
 * Most recent time when device synced with this service.
 * @member {String} lastSyncTime
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['lastSyncTime'] = undefined;

/**
 * Output only. Management state of the device
 * @member {module:model/GoogleAppsCloudidentityDevicesV1Device.ManagementStateEnum} managementState
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['managementState'] = undefined;

/**
 * Output only. Device manufacturer. Example: Motorola.
 * @member {String} manufacturer
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['manufacturer'] = undefined;

/**
 * Output only. MEID number of device if CDMA device; empty otherwise.
 * @member {String} meid
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['meid'] = undefined;

/**
 * Output only. Model name of device. Example: Pixel 3.
 * @member {String} model
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['model'] = undefined;

/**
 * Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device}`, where device is the unique id assigned to the Device.
 * @member {String} name
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['name'] = undefined;

/**
 * Output only. Mobile or network operator of device, if available.
 * @member {String} networkOperator
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['networkOperator'] = undefined;

/**
 * Output only. OS version of the device. Example: Android 8.1.0.
 * @member {String} osVersion
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['osVersion'] = undefined;

/**
 * Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: \"com.example\", \"xyz.com\".
 * @member {Array.<String>} otherAccounts
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['otherAccounts'] = undefined;

/**
 * Output only. Whether the device is owned by the company or an individual
 * @member {module:model/GoogleAppsCloudidentityDevicesV1Device.OwnerTypeEnum} ownerType
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['ownerType'] = undefined;

/**
 * Output only. OS release version. Example: 6.0.
 * @member {String} releaseVersion
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['releaseVersion'] = undefined;

/**
 * Output only. OS security patch update time on device.
 * @member {String} securityPatchTime
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['securityPatchTime'] = undefined;

/**
 * Serial Number of device. Example: HT82V1A01076.
 * @member {String} serialNumber
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['serialNumber'] = undefined;

/**
 * WiFi MAC addresses of device.
 * @member {Array.<String>} wifiMacAddresses
 */
GoogleAppsCloudidentityDevicesV1Device.prototype['wifiMacAddresses'] = undefined;





/**
 * Allowed values for the <code>compromisedState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsCloudidentityDevicesV1Device['CompromisedStateEnum'] = {

    /**
     * value: "COMPROMISED_STATE_UNSPECIFIED"
     * @const
     */
    "COMPROMISED_STATE_UNSPECIFIED": "COMPROMISED_STATE_UNSPECIFIED",

    /**
     * value: "COMPROMISED"
     * @const
     */
    "COMPROMISED": "COMPROMISED",

    /**
     * value: "UNCOMPROMISED"
     * @const
     */
    "UNCOMPROMISED": "UNCOMPROMISED"
};


/**
 * Allowed values for the <code>deviceType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsCloudidentityDevicesV1Device['DeviceTypeEnum'] = {

    /**
     * value: "DEVICE_TYPE_UNSPECIFIED"
     * @const
     */
    "DEVICE_TYPE_UNSPECIFIED": "DEVICE_TYPE_UNSPECIFIED",

    /**
     * value: "ANDROID"
     * @const
     */
    "ANDROID": "ANDROID",

    /**
     * value: "IOS"
     * @const
     */
    "IOS": "IOS",

    /**
     * value: "GOOGLE_SYNC"
     * @const
     */
    "GOOGLE_SYNC": "GOOGLE_SYNC",

    /**
     * value: "WINDOWS"
     * @const
     */
    "WINDOWS": "WINDOWS",

    /**
     * value: "MAC_OS"
     * @const
     */
    "MAC_OS": "MAC_OS",

    /**
     * value: "LINUX"
     * @const
     */
    "LINUX": "LINUX",

    /**
     * value: "CHROME_OS"
     * @const
     */
    "CHROME_OS": "CHROME_OS"
};


/**
 * Allowed values for the <code>encryptionState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsCloudidentityDevicesV1Device['EncryptionStateEnum'] = {

    /**
     * value: "ENCRYPTION_STATE_UNSPECIFIED"
     * @const
     */
    "ENCRYPTION_STATE_UNSPECIFIED": "ENCRYPTION_STATE_UNSPECIFIED",

    /**
     * value: "UNSUPPORTED_BY_DEVICE"
     * @const
     */
    "UNSUPPORTED_BY_DEVICE": "UNSUPPORTED_BY_DEVICE",

    /**
     * value: "ENCRYPTED"
     * @const
     */
    "ENCRYPTED": "ENCRYPTED",

    /**
     * value: "NOT_ENCRYPTED"
     * @const
     */
    "NOT_ENCRYPTED": "NOT_ENCRYPTED"
};


/**
 * Allowed values for the <code>managementState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsCloudidentityDevicesV1Device['ManagementStateEnum'] = {

    /**
     * value: "MANAGEMENT_STATE_UNSPECIFIED"
     * @const
     */
    "MANAGEMENT_STATE_UNSPECIFIED": "MANAGEMENT_STATE_UNSPECIFIED",

    /**
     * value: "APPROVED"
     * @const
     */
    "APPROVED": "APPROVED",

    /**
     * value: "BLOCKED"
     * @const
     */
    "BLOCKED": "BLOCKED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "UNPROVISIONED"
     * @const
     */
    "UNPROVISIONED": "UNPROVISIONED",

    /**
     * value: "WIPING"
     * @const
     */
    "WIPING": "WIPING",

    /**
     * value: "WIPED"
     * @const
     */
    "WIPED": "WIPED"
};


/**
 * Allowed values for the <code>ownerType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsCloudidentityDevicesV1Device['OwnerTypeEnum'] = {

    /**
     * value: "DEVICE_OWNERSHIP_UNSPECIFIED"
     * @const
     */
    "DEVICE_OWNERSHIP_UNSPECIFIED": "DEVICE_OWNERSHIP_UNSPECIFIED",

    /**
     * value: "COMPANY"
     * @const
     */
    "COMPANY": "COMPANY",

    /**
     * value: "BYOD"
     * @const
     */
    "BYOD": "BYOD"
};



export default GoogleAppsCloudidentityDevicesV1Device;

