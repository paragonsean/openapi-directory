/**
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAppsCloudidentityDevicesV1AndroidAttributes model module.
 * @module model/GoogleAppsCloudidentityDevicesV1AndroidAttributes
 * @version v1
 */
class GoogleAppsCloudidentityDevicesV1AndroidAttributes {
    /**
     * Constructs a new <code>GoogleAppsCloudidentityDevicesV1AndroidAttributes</code>.
     * Resource representing the Android specific attributes of a Device.
     * @alias module:model/GoogleAppsCloudidentityDevicesV1AndroidAttributes
     */
    constructor() { 
        
        GoogleAppsCloudidentityDevicesV1AndroidAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAppsCloudidentityDevicesV1AndroidAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAppsCloudidentityDevicesV1AndroidAttributes} obj Optional instance to populate.
     * @return {module:model/GoogleAppsCloudidentityDevicesV1AndroidAttributes} The populated <code>GoogleAppsCloudidentityDevicesV1AndroidAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAppsCloudidentityDevicesV1AndroidAttributes();

            if (data.hasOwnProperty('ctsProfileMatch')) {
                obj['ctsProfileMatch'] = ApiClient.convertToType(data['ctsProfileMatch'], 'Boolean');
            }
            if (data.hasOwnProperty('enabledUnknownSources')) {
                obj['enabledUnknownSources'] = ApiClient.convertToType(data['enabledUnknownSources'], 'Boolean');
            }
            if (data.hasOwnProperty('hasPotentiallyHarmfulApps')) {
                obj['hasPotentiallyHarmfulApps'] = ApiClient.convertToType(data['hasPotentiallyHarmfulApps'], 'Boolean');
            }
            if (data.hasOwnProperty('ownerProfileAccount')) {
                obj['ownerProfileAccount'] = ApiClient.convertToType(data['ownerProfileAccount'], 'Boolean');
            }
            if (data.hasOwnProperty('ownershipPrivilege')) {
                obj['ownershipPrivilege'] = ApiClient.convertToType(data['ownershipPrivilege'], 'String');
            }
            if (data.hasOwnProperty('supportsWorkProfile')) {
                obj['supportsWorkProfile'] = ApiClient.convertToType(data['supportsWorkProfile'], 'Boolean');
            }
            if (data.hasOwnProperty('verifiedBoot')) {
                obj['verifiedBoot'] = ApiClient.convertToType(data['verifiedBoot'], 'Boolean');
            }
            if (data.hasOwnProperty('verifyAppsEnabled')) {
                obj['verifyAppsEnabled'] = ApiClient.convertToType(data['verifyAppsEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAppsCloudidentityDevicesV1AndroidAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAppsCloudidentityDevicesV1AndroidAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ownershipPrivilege'] && !(typeof data['ownershipPrivilege'] === 'string' || data['ownershipPrivilege'] instanceof String)) {
            throw new Error("Expected the field `ownershipPrivilege` to be a primitive type in the JSON string but got " + data['ownershipPrivilege']);
        }

        return true;
    }


}



/**
 * Whether the device passes Android CTS compliance.
 * @member {Boolean} ctsProfileMatch
 */
GoogleAppsCloudidentityDevicesV1AndroidAttributes.prototype['ctsProfileMatch'] = undefined;

/**
 * Whether applications from unknown sources can be installed on device.
 * @member {Boolean} enabledUnknownSources
 */
GoogleAppsCloudidentityDevicesV1AndroidAttributes.prototype['enabledUnknownSources'] = undefined;

/**
 * Whether any potentially harmful apps were detected on the device.
 * @member {Boolean} hasPotentiallyHarmfulApps
 */
GoogleAppsCloudidentityDevicesV1AndroidAttributes.prototype['hasPotentiallyHarmfulApps'] = undefined;

/**
 * Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
 * @member {Boolean} ownerProfileAccount
 */
GoogleAppsCloudidentityDevicesV1AndroidAttributes.prototype['ownerProfileAccount'] = undefined;

/**
 * Ownership privileges on device.
 * @member {module:model/GoogleAppsCloudidentityDevicesV1AndroidAttributes.OwnershipPrivilegeEnum} ownershipPrivilege
 */
GoogleAppsCloudidentityDevicesV1AndroidAttributes.prototype['ownershipPrivilege'] = undefined;

/**
 * Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the \"Enforce Work Profile\" policy.
 * @member {Boolean} supportsWorkProfile
 */
GoogleAppsCloudidentityDevicesV1AndroidAttributes.prototype['supportsWorkProfile'] = undefined;

/**
 * Whether Android verified boot status is GREEN.
 * @member {Boolean} verifiedBoot
 */
GoogleAppsCloudidentityDevicesV1AndroidAttributes.prototype['verifiedBoot'] = undefined;

/**
 * Whether Google Play Protect Verify Apps is enabled.
 * @member {Boolean} verifyAppsEnabled
 */
GoogleAppsCloudidentityDevicesV1AndroidAttributes.prototype['verifyAppsEnabled'] = undefined;





/**
 * Allowed values for the <code>ownershipPrivilege</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAppsCloudidentityDevicesV1AndroidAttributes['OwnershipPrivilegeEnum'] = {

    /**
     * value: "OWNERSHIP_PRIVILEGE_UNSPECIFIED"
     * @const
     */
    "OWNERSHIP_PRIVILEGE_UNSPECIFIED": "OWNERSHIP_PRIVILEGE_UNSPECIFIED",

    /**
     * value: "DEVICE_ADMINISTRATOR"
     * @const
     */
    "DEVICE_ADMINISTRATOR": "DEVICE_ADMINISTRATOR",

    /**
     * value: "PROFILE_OWNER"
     * @const
     */
    "PROFILE_OWNER": "PROFILE_OWNER",

    /**
     * value: "DEVICE_OWNER"
     * @const
     */
    "DEVICE_OWNER": "DEVICE_OWNER"
};



export default GoogleAppsCloudidentityDevicesV1AndroidAttributes;

