/*
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Resource representing the Android specific attributes of a Device.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:32.546626-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAppsCloudidentityDevicesV1AndroidAttributes {
  public static final String SERIALIZED_NAME_CTS_PROFILE_MATCH = "ctsProfileMatch";
  @SerializedName(SERIALIZED_NAME_CTS_PROFILE_MATCH)
  private Boolean ctsProfileMatch;

  public static final String SERIALIZED_NAME_ENABLED_UNKNOWN_SOURCES = "enabledUnknownSources";
  @SerializedName(SERIALIZED_NAME_ENABLED_UNKNOWN_SOURCES)
  private Boolean enabledUnknownSources;

  public static final String SERIALIZED_NAME_HAS_POTENTIALLY_HARMFUL_APPS = "hasPotentiallyHarmfulApps";
  @SerializedName(SERIALIZED_NAME_HAS_POTENTIALLY_HARMFUL_APPS)
  private Boolean hasPotentiallyHarmfulApps;

  public static final String SERIALIZED_NAME_OWNER_PROFILE_ACCOUNT = "ownerProfileAccount";
  @SerializedName(SERIALIZED_NAME_OWNER_PROFILE_ACCOUNT)
  private Boolean ownerProfileAccount;

  /**
   * Ownership privileges on device.
   */
  @JsonAdapter(OwnershipPrivilegeEnum.Adapter.class)
  public enum OwnershipPrivilegeEnum {
    OWNERSHIP_PRIVILEGE_UNSPECIFIED("OWNERSHIP_PRIVILEGE_UNSPECIFIED"),
    
    DEVICE_ADMINISTRATOR("DEVICE_ADMINISTRATOR"),
    
    PROFILE_OWNER("PROFILE_OWNER"),
    
    DEVICE_OWNER("DEVICE_OWNER");

    private String value;

    OwnershipPrivilegeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OwnershipPrivilegeEnum fromValue(String value) {
      for (OwnershipPrivilegeEnum b : OwnershipPrivilegeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OwnershipPrivilegeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OwnershipPrivilegeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OwnershipPrivilegeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OwnershipPrivilegeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OwnershipPrivilegeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OWNERSHIP_PRIVILEGE = "ownershipPrivilege";
  @SerializedName(SERIALIZED_NAME_OWNERSHIP_PRIVILEGE)
  private OwnershipPrivilegeEnum ownershipPrivilege;

  public static final String SERIALIZED_NAME_SUPPORTS_WORK_PROFILE = "supportsWorkProfile";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_WORK_PROFILE)
  private Boolean supportsWorkProfile;

  public static final String SERIALIZED_NAME_VERIFIED_BOOT = "verifiedBoot";
  @SerializedName(SERIALIZED_NAME_VERIFIED_BOOT)
  private Boolean verifiedBoot;

  public static final String SERIALIZED_NAME_VERIFY_APPS_ENABLED = "verifyAppsEnabled";
  @SerializedName(SERIALIZED_NAME_VERIFY_APPS_ENABLED)
  private Boolean verifyAppsEnabled;

  public GoogleAppsCloudidentityDevicesV1AndroidAttributes() {
  }

  public GoogleAppsCloudidentityDevicesV1AndroidAttributes ctsProfileMatch(Boolean ctsProfileMatch) {
    this.ctsProfileMatch = ctsProfileMatch;
    return this;
  }

  /**
   * Whether the device passes Android CTS compliance.
   * @return ctsProfileMatch
   */
  @javax.annotation.Nullable
  public Boolean getCtsProfileMatch() {
    return ctsProfileMatch;
  }

  public void setCtsProfileMatch(Boolean ctsProfileMatch) {
    this.ctsProfileMatch = ctsProfileMatch;
  }


  public GoogleAppsCloudidentityDevicesV1AndroidAttributes enabledUnknownSources(Boolean enabledUnknownSources) {
    this.enabledUnknownSources = enabledUnknownSources;
    return this;
  }

  /**
   * Whether applications from unknown sources can be installed on device.
   * @return enabledUnknownSources
   */
  @javax.annotation.Nullable
  public Boolean getEnabledUnknownSources() {
    return enabledUnknownSources;
  }

  public void setEnabledUnknownSources(Boolean enabledUnknownSources) {
    this.enabledUnknownSources = enabledUnknownSources;
  }


  public GoogleAppsCloudidentityDevicesV1AndroidAttributes hasPotentiallyHarmfulApps(Boolean hasPotentiallyHarmfulApps) {
    this.hasPotentiallyHarmfulApps = hasPotentiallyHarmfulApps;
    return this;
  }

  /**
   * Whether any potentially harmful apps were detected on the device.
   * @return hasPotentiallyHarmfulApps
   */
  @javax.annotation.Nullable
  public Boolean getHasPotentiallyHarmfulApps() {
    return hasPotentiallyHarmfulApps;
  }

  public void setHasPotentiallyHarmfulApps(Boolean hasPotentiallyHarmfulApps) {
    this.hasPotentiallyHarmfulApps = hasPotentiallyHarmfulApps;
  }


  public GoogleAppsCloudidentityDevicesV1AndroidAttributes ownerProfileAccount(Boolean ownerProfileAccount) {
    this.ownerProfileAccount = ownerProfileAccount;
    return this;
  }

  /**
   * Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
   * @return ownerProfileAccount
   */
  @javax.annotation.Nullable
  public Boolean getOwnerProfileAccount() {
    return ownerProfileAccount;
  }

  public void setOwnerProfileAccount(Boolean ownerProfileAccount) {
    this.ownerProfileAccount = ownerProfileAccount;
  }


  public GoogleAppsCloudidentityDevicesV1AndroidAttributes ownershipPrivilege(OwnershipPrivilegeEnum ownershipPrivilege) {
    this.ownershipPrivilege = ownershipPrivilege;
    return this;
  }

  /**
   * Ownership privileges on device.
   * @return ownershipPrivilege
   */
  @javax.annotation.Nullable
  public OwnershipPrivilegeEnum getOwnershipPrivilege() {
    return ownershipPrivilege;
  }

  public void setOwnershipPrivilege(OwnershipPrivilegeEnum ownershipPrivilege) {
    this.ownershipPrivilege = ownershipPrivilege;
  }


  public GoogleAppsCloudidentityDevicesV1AndroidAttributes supportsWorkProfile(Boolean supportsWorkProfile) {
    this.supportsWorkProfile = supportsWorkProfile;
    return this;
  }

  /**
   * Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the \&quot;Enforce Work Profile\&quot; policy.
   * @return supportsWorkProfile
   */
  @javax.annotation.Nullable
  public Boolean getSupportsWorkProfile() {
    return supportsWorkProfile;
  }

  public void setSupportsWorkProfile(Boolean supportsWorkProfile) {
    this.supportsWorkProfile = supportsWorkProfile;
  }


  public GoogleAppsCloudidentityDevicesV1AndroidAttributes verifiedBoot(Boolean verifiedBoot) {
    this.verifiedBoot = verifiedBoot;
    return this;
  }

  /**
   * Whether Android verified boot status is GREEN.
   * @return verifiedBoot
   */
  @javax.annotation.Nullable
  public Boolean getVerifiedBoot() {
    return verifiedBoot;
  }

  public void setVerifiedBoot(Boolean verifiedBoot) {
    this.verifiedBoot = verifiedBoot;
  }


  public GoogleAppsCloudidentityDevicesV1AndroidAttributes verifyAppsEnabled(Boolean verifyAppsEnabled) {
    this.verifyAppsEnabled = verifyAppsEnabled;
    return this;
  }

  /**
   * Whether Google Play Protect Verify Apps is enabled.
   * @return verifyAppsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getVerifyAppsEnabled() {
    return verifyAppsEnabled;
  }

  public void setVerifyAppsEnabled(Boolean verifyAppsEnabled) {
    this.verifyAppsEnabled = verifyAppsEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAppsCloudidentityDevicesV1AndroidAttributes googleAppsCloudidentityDevicesV1AndroidAttributes = (GoogleAppsCloudidentityDevicesV1AndroidAttributes) o;
    return Objects.equals(this.ctsProfileMatch, googleAppsCloudidentityDevicesV1AndroidAttributes.ctsProfileMatch) &&
        Objects.equals(this.enabledUnknownSources, googleAppsCloudidentityDevicesV1AndroidAttributes.enabledUnknownSources) &&
        Objects.equals(this.hasPotentiallyHarmfulApps, googleAppsCloudidentityDevicesV1AndroidAttributes.hasPotentiallyHarmfulApps) &&
        Objects.equals(this.ownerProfileAccount, googleAppsCloudidentityDevicesV1AndroidAttributes.ownerProfileAccount) &&
        Objects.equals(this.ownershipPrivilege, googleAppsCloudidentityDevicesV1AndroidAttributes.ownershipPrivilege) &&
        Objects.equals(this.supportsWorkProfile, googleAppsCloudidentityDevicesV1AndroidAttributes.supportsWorkProfile) &&
        Objects.equals(this.verifiedBoot, googleAppsCloudidentityDevicesV1AndroidAttributes.verifiedBoot) &&
        Objects.equals(this.verifyAppsEnabled, googleAppsCloudidentityDevicesV1AndroidAttributes.verifyAppsEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ctsProfileMatch, enabledUnknownSources, hasPotentiallyHarmfulApps, ownerProfileAccount, ownershipPrivilege, supportsWorkProfile, verifiedBoot, verifyAppsEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAppsCloudidentityDevicesV1AndroidAttributes {\n");
    sb.append("    ctsProfileMatch: ").append(toIndentedString(ctsProfileMatch)).append("\n");
    sb.append("    enabledUnknownSources: ").append(toIndentedString(enabledUnknownSources)).append("\n");
    sb.append("    hasPotentiallyHarmfulApps: ").append(toIndentedString(hasPotentiallyHarmfulApps)).append("\n");
    sb.append("    ownerProfileAccount: ").append(toIndentedString(ownerProfileAccount)).append("\n");
    sb.append("    ownershipPrivilege: ").append(toIndentedString(ownershipPrivilege)).append("\n");
    sb.append("    supportsWorkProfile: ").append(toIndentedString(supportsWorkProfile)).append("\n");
    sb.append("    verifiedBoot: ").append(toIndentedString(verifiedBoot)).append("\n");
    sb.append("    verifyAppsEnabled: ").append(toIndentedString(verifyAppsEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ctsProfileMatch");
    openapiFields.add("enabledUnknownSources");
    openapiFields.add("hasPotentiallyHarmfulApps");
    openapiFields.add("ownerProfileAccount");
    openapiFields.add("ownershipPrivilege");
    openapiFields.add("supportsWorkProfile");
    openapiFields.add("verifiedBoot");
    openapiFields.add("verifyAppsEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAppsCloudidentityDevicesV1AndroidAttributes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAppsCloudidentityDevicesV1AndroidAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAppsCloudidentityDevicesV1AndroidAttributes is not found in the empty JSON string", GoogleAppsCloudidentityDevicesV1AndroidAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAppsCloudidentityDevicesV1AndroidAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAppsCloudidentityDevicesV1AndroidAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ownershipPrivilege") != null && !jsonObj.get("ownershipPrivilege").isJsonNull()) && !jsonObj.get("ownershipPrivilege").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownershipPrivilege` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownershipPrivilege").toString()));
      }
      // validate the optional field `ownershipPrivilege`
      if (jsonObj.get("ownershipPrivilege") != null && !jsonObj.get("ownershipPrivilege").isJsonNull()) {
        OwnershipPrivilegeEnum.validateJsonElement(jsonObj.get("ownershipPrivilege"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAppsCloudidentityDevicesV1AndroidAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAppsCloudidentityDevicesV1AndroidAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAppsCloudidentityDevicesV1AndroidAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAppsCloudidentityDevicesV1AndroidAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAppsCloudidentityDevicesV1AndroidAttributes>() {
           @Override
           public void write(JsonWriter out, GoogleAppsCloudidentityDevicesV1AndroidAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAppsCloudidentityDevicesV1AndroidAttributes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAppsCloudidentityDevicesV1AndroidAttributes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAppsCloudidentityDevicesV1AndroidAttributes
   * @throws IOException if the JSON string is invalid with respect to GoogleAppsCloudidentityDevicesV1AndroidAttributes
   */
  public static GoogleAppsCloudidentityDevicesV1AndroidAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAppsCloudidentityDevicesV1AndroidAttributes.class);
  }

  /**
   * Convert an instance of GoogleAppsCloudidentityDevicesV1AndroidAttributes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

