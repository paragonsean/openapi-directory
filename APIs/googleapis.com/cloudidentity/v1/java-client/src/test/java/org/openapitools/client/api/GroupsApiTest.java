/*
 * Cloud Identity API
 * API for provisioning and managing identity resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CheckTransitiveMembershipResponse;
import org.openapitools.client.model.Group;
import org.openapitools.client.model.ListGroupsResponse;
import org.openapitools.client.model.ListMembershipsResponse;
import org.openapitools.client.model.LookupGroupNameResponse;
import org.openapitools.client.model.LookupMembershipNameResponse;
import org.openapitools.client.model.Membership;
import org.openapitools.client.model.ModifyMembershipRolesRequest;
import org.openapitools.client.model.ModifyMembershipRolesResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.SearchDirectGroupsResponse;
import org.openapitools.client.model.SearchGroupsResponse;
import org.openapitools.client.model.SearchTransitiveGroupsResponse;
import org.openapitools.client.model.SearchTransitiveMembershipsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupsApi
 */
@Disabled
public class GroupsApiTest {

    private final GroupsApi api = new GroupsApi();

    /**
     * Creates a Group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String initialGroupConfig = null;
        Group group = null;
        Operation response = api.cloudidentityGroupsCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, initialGroupConfig, group);
        // TODO: test validations
    }

    /**
     * Lists the &#x60;Group&#x60; resources under a customer or namespace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String parent = null;
        String view = null;
        ListGroupsResponse response = api.cloudidentityGroupsList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, parent, view);
        // TODO: test validations
    }

    /**
     * Looks up the [resource name](https://cloud.google.com/apis/design/resource_names) of a &#x60;Group&#x60; by its &#x60;EntityKey&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsLookupTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String groupKeyId = null;
        String groupKeyNamespace = null;
        LookupGroupNameResponse response = api.cloudidentityGroupsLookup($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, groupKeyId, groupKeyNamespace);
        // TODO: test validations
    }

    /**
     * Check a potential member for membership in a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A member has membership to a group as long as there is a single viewable transitive membership between the group and the member. The actor must have view permissions to at least one transitive membership between the member and group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsMembershipsCheckTransitiveMembershipTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String query = null;
        CheckTransitiveMembershipResponse response = api.cloudidentityGroupsMembershipsCheckTransitiveMembership(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, query);
        // TODO: test validations
    }

    /**
     * Creates a &#x60;Membership&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsMembershipsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Membership membership = null;
        Operation response = api.cloudidentityGroupsMembershipsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, membership);
        // TODO: test validations
    }

    /**
     * Get a membership graph of just a member or both a member and a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. Given a member, the response will contain all membership paths from the member. Given both a group and a member, the response will contain all membership paths between the group and the member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsMembershipsGetMembershipGraphTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String query = null;
        Operation response = api.cloudidentityGroupsMembershipsGetMembershipGraph(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, query);
        // TODO: test validations
    }

    /**
     * Lists the &#x60;Membership&#x60;s within a &#x60;Group&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsMembershipsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String view = null;
        ListMembershipsResponse response = api.cloudidentityGroupsMembershipsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, view);
        // TODO: test validations
    }

    /**
     * Looks up the [resource name](https://cloud.google.com/apis/design/resource_names) of a &#x60;Membership&#x60; by its &#x60;EntityKey&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsMembershipsLookupTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String memberKeyId = null;
        String memberKeyNamespace = null;
        LookupMembershipNameResponse response = api.cloudidentityGroupsMembershipsLookup(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, memberKeyId, memberKeyNamespace);
        // TODO: test validations
    }

    /**
     * Modifies the &#x60;MembershipRole&#x60;s of a &#x60;Membership&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsMembershipsModifyMembershipRolesTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ModifyMembershipRolesRequest modifyMembershipRolesRequest = null;
        ModifyMembershipRolesResponse response = api.cloudidentityGroupsMembershipsModifyMembershipRoles(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, modifyMembershipRolesRequest);
        // TODO: test validations
    }

    /**
     * Searches direct groups of a member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsMembershipsSearchDirectGroupsTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String query = null;
        SearchDirectGroupsResponse response = api.cloudidentityGroupsMembershipsSearchDirectGroups(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, orderBy, pageSize, pageToken, query);
        // TODO: test validations
    }

    /**
     * Search transitive groups of a member. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive group is any group that has a direct or indirect membership to the member. Actor must have view permissions all transitive groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsMembershipsSearchTransitiveGroupsTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String query = null;
        SearchTransitiveGroupsResponse response = api.cloudidentityGroupsMembershipsSearchTransitiveGroups(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, query);
        // TODO: test validations
    }

    /**
     * Search transitive memberships of a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the group is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive membership is any direct or indirect membership of a group. Actor must have view permissions to all transitive memberships.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsMembershipsSearchTransitiveMembershipsTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        SearchTransitiveMembershipsResponse response = api.cloudidentityGroupsMembershipsSearchTransitiveMemberships(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Searches for &#x60;Group&#x60; resources matching a specified query.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudidentityGroupsSearchTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String query = null;
        String view = null;
        SearchGroupsResponse response = api.cloudidentityGroupsSearch($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, query, view);
        // TODO: test validations
    }

}
