/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DefaultClusterConfig from './DefaultClusterConfig';
import FleetLifecycleState from './FleetLifecycleState';

/**
 * The Fleet model module.
 * @module model/Fleet
 * @version v1
 */
class Fleet {
    /**
     * Constructs a new <code>Fleet</code>.
     * Fleet contains the Fleet-wide metadata and configuration.
     * @alias module:model/Fleet
     */
    constructor() { 
        
        Fleet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Fleet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Fleet} obj Optional instance to populate.
     * @return {module:model/Fleet} The populated <code>Fleet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Fleet();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('defaultClusterConfig')) {
                obj['defaultClusterConfig'] = DefaultClusterConfig.constructFromObject(data['defaultClusterConfig']);
            }
            if (data.hasOwnProperty('deleteTime')) {
                obj['deleteTime'] = ApiClient.convertToType(data['deleteTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = FleetLifecycleState.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Fleet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Fleet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `defaultClusterConfig`
        if (data['defaultClusterConfig']) { // data not null
          DefaultClusterConfig.validateJSON(data['defaultClusterConfig']);
        }
        // ensure the json data is a string
        if (data['deleteTime'] && !(typeof data['deleteTime'] === 'string' || data['deleteTime'] instanceof String)) {
            throw new Error("Expected the field `deleteTime` to be a primitive type in the JSON string but got " + data['deleteTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          FleetLifecycleState.validateJSON(data['state']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. When the Fleet was created.
 * @member {String} createTime
 */
Fleet.prototype['createTime'] = undefined;

/**
 * @member {module:model/DefaultClusterConfig} defaultClusterConfig
 */
Fleet.prototype['defaultClusterConfig'] = undefined;

/**
 * Output only. When the Fleet was deleted.
 * @member {String} deleteTime
 */
Fleet.prototype['deleteTime'] = undefined;

/**
 * Optional. A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `Production Fleet`
 * @member {String} displayName
 */
Fleet.prototype['displayName'] = undefined;

/**
 * Optional. Labels for this Fleet.
 * @member {Object.<String, String>} labels
 */
Fleet.prototype['labels'] = undefined;

/**
 * Output only. The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each Google Cloud project can have at most one fleet resource, named \"default\".
 * @member {String} name
 */
Fleet.prototype['name'] = undefined;

/**
 * @member {module:model/FleetLifecycleState} state
 */
Fleet.prototype['state'] = undefined;

/**
 * Output only. Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and another resource with the same name is created, it gets a different uid.
 * @member {String} uid
 */
Fleet.prototype['uid'] = undefined;

/**
 * Output only. When the Fleet was last updated.
 * @member {String} updateTime
 */
Fleet.prototype['updateTime'] = undefined;






export default Fleet;

