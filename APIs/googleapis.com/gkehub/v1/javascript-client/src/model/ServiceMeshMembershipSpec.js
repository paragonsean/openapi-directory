/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceMeshMembershipSpec model module.
 * @module model/ServiceMeshMembershipSpec
 * @version v1
 */
class ServiceMeshMembershipSpec {
    /**
     * Constructs a new <code>ServiceMeshMembershipSpec</code>.
     * **Service Mesh**: Spec for a single Membership for the servicemesh feature
     * @alias module:model/ServiceMeshMembershipSpec
     */
    constructor() { 
        
        ServiceMeshMembershipSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceMeshMembershipSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceMeshMembershipSpec} obj Optional instance to populate.
     * @return {module:model/ServiceMeshMembershipSpec} The populated <code>ServiceMeshMembershipSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceMeshMembershipSpec();

            if (data.hasOwnProperty('controlPlane')) {
                obj['controlPlane'] = ApiClient.convertToType(data['controlPlane'], 'String');
            }
            if (data.hasOwnProperty('management')) {
                obj['management'] = ApiClient.convertToType(data['management'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceMeshMembershipSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceMeshMembershipSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['controlPlane'] && !(typeof data['controlPlane'] === 'string' || data['controlPlane'] instanceof String)) {
            throw new Error("Expected the field `controlPlane` to be a primitive type in the JSON string but got " + data['controlPlane']);
        }
        // ensure the json data is a string
        if (data['management'] && !(typeof data['management'] === 'string' || data['management'] instanceof String)) {
            throw new Error("Expected the field `management` to be a primitive type in the JSON string but got " + data['management']);
        }

        return true;
    }


}



/**
 * Deprecated: use `management` instead Enables automatic control plane management.
 * @member {module:model/ServiceMeshMembershipSpec.ControlPlaneEnum} controlPlane
 */
ServiceMeshMembershipSpec.prototype['controlPlane'] = undefined;

/**
 * Enables automatic Service Mesh management.
 * @member {module:model/ServiceMeshMembershipSpec.ManagementEnum} management
 */
ServiceMeshMembershipSpec.prototype['management'] = undefined;





/**
 * Allowed values for the <code>controlPlane</code> property.
 * @enum {String}
 * @readonly
 */
ServiceMeshMembershipSpec['ControlPlaneEnum'] = {

    /**
     * value: "CONTROL_PLANE_MANAGEMENT_UNSPECIFIED"
     * @const
     */
    "CONTROL_PLANE_MANAGEMENT_UNSPECIFIED": "CONTROL_PLANE_MANAGEMENT_UNSPECIFIED",

    /**
     * value: "AUTOMATIC"
     * @const
     */
    "AUTOMATIC": "AUTOMATIC",

    /**
     * value: "MANUAL"
     * @const
     */
    "MANUAL": "MANUAL"
};


/**
 * Allowed values for the <code>management</code> property.
 * @enum {String}
 * @readonly
 */
ServiceMeshMembershipSpec['ManagementEnum'] = {

    /**
     * value: "MANAGEMENT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "MANAGEMENT_UNSPECIFIED",

    /**
     * value: "MANAGEMENT_AUTOMATIC"
     * @const
     */
    "AUTOMATIC": "MANAGEMENT_AUTOMATIC",

    /**
     * value: "MANAGEMENT_MANUAL"
     * @const
     */
    "MANUAL": "MANAGEMENT_MANUAL"
};



export default ServiceMeshMembershipSpec;

