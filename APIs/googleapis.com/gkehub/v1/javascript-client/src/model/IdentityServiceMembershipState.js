/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IdentityServiceMembershipSpec from './IdentityServiceMembershipSpec';

/**
 * The IdentityServiceMembershipState model module.
 * @module model/IdentityServiceMembershipState
 * @version v1
 */
class IdentityServiceMembershipState {
    /**
     * Constructs a new <code>IdentityServiceMembershipState</code>.
     * **Anthos Identity Service**: State for a single Membership.
     * @alias module:model/IdentityServiceMembershipState
     */
    constructor() { 
        
        IdentityServiceMembershipState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IdentityServiceMembershipState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityServiceMembershipState} obj Optional instance to populate.
     * @return {module:model/IdentityServiceMembershipState} The populated <code>IdentityServiceMembershipState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityServiceMembershipState();

            if (data.hasOwnProperty('failureReason')) {
                obj['failureReason'] = ApiClient.convertToType(data['failureReason'], 'String');
            }
            if (data.hasOwnProperty('installedVersion')) {
                obj['installedVersion'] = ApiClient.convertToType(data['installedVersion'], 'String');
            }
            if (data.hasOwnProperty('memberConfig')) {
                obj['memberConfig'] = IdentityServiceMembershipSpec.constructFromObject(data['memberConfig']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityServiceMembershipState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityServiceMembershipState</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['failureReason'] && !(typeof data['failureReason'] === 'string' || data['failureReason'] instanceof String)) {
            throw new Error("Expected the field `failureReason` to be a primitive type in the JSON string but got " + data['failureReason']);
        }
        // ensure the json data is a string
        if (data['installedVersion'] && !(typeof data['installedVersion'] === 'string' || data['installedVersion'] instanceof String)) {
            throw new Error("Expected the field `installedVersion` to be a primitive type in the JSON string but got " + data['installedVersion']);
        }
        // validate the optional field `memberConfig`
        if (data['memberConfig']) { // data not null
          IdentityServiceMembershipSpec.validateJSON(data['memberConfig']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * The reason of the failure.
 * @member {String} failureReason
 */
IdentityServiceMembershipState.prototype['failureReason'] = undefined;

/**
 * Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.
 * @member {String} installedVersion
 */
IdentityServiceMembershipState.prototype['installedVersion'] = undefined;

/**
 * @member {module:model/IdentityServiceMembershipSpec} memberConfig
 */
IdentityServiceMembershipState.prototype['memberConfig'] = undefined;

/**
 * Deployment state on this member
 * @member {module:model/IdentityServiceMembershipState.StateEnum} state
 */
IdentityServiceMembershipState.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
IdentityServiceMembershipState['StateEnum'] = {

    /**
     * value: "DEPLOYMENT_STATE_UNSPECIFIED"
     * @const
     */
    "DEPLOYMENT_STATE_UNSPECIFIED": "DEPLOYMENT_STATE_UNSPECIFIED",

    /**
     * value: "OK"
     * @const
     */
    "OK": "OK",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR"
};



export default IdentityServiceMembershipState;

