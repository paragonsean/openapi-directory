# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_upgrade_gke_upgrade import ClusterUpgradeGKEUpgrade
from openapi_server.models.cluster_upgrade_post_conditions import ClusterUpgradePostConditions
from openapi_server import util


class ClusterUpgradeGKEUpgradeOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, post_conditions: ClusterUpgradePostConditions=None, upgrade: ClusterUpgradeGKEUpgrade=None):
        """ClusterUpgradeGKEUpgradeOverride - a model defined in OpenAPI

        :param post_conditions: The post_conditions of this ClusterUpgradeGKEUpgradeOverride.
        :param upgrade: The upgrade of this ClusterUpgradeGKEUpgradeOverride.
        """
        self.openapi_types = {
            'post_conditions': ClusterUpgradePostConditions,
            'upgrade': ClusterUpgradeGKEUpgrade
        }

        self.attribute_map = {
            'post_conditions': 'postConditions',
            'upgrade': 'upgrade'
        }

        self._post_conditions = post_conditions
        self._upgrade = upgrade

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterUpgradeGKEUpgradeOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterUpgradeGKEUpgradeOverride of this ClusterUpgradeGKEUpgradeOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def post_conditions(self):
        """Gets the post_conditions of this ClusterUpgradeGKEUpgradeOverride.


        :return: The post_conditions of this ClusterUpgradeGKEUpgradeOverride.
        :rtype: ClusterUpgradePostConditions
        """
        return self._post_conditions

    @post_conditions.setter
    def post_conditions(self, post_conditions):
        """Sets the post_conditions of this ClusterUpgradeGKEUpgradeOverride.


        :param post_conditions: The post_conditions of this ClusterUpgradeGKEUpgradeOverride.
        :type post_conditions: ClusterUpgradePostConditions
        """

        self._post_conditions = post_conditions

    @property
    def upgrade(self):
        """Gets the upgrade of this ClusterUpgradeGKEUpgradeOverride.


        :return: The upgrade of this ClusterUpgradeGKEUpgradeOverride.
        :rtype: ClusterUpgradeGKEUpgrade
        """
        return self._upgrade

    @upgrade.setter
    def upgrade(self, upgrade):
        """Sets the upgrade of this ClusterUpgradeGKEUpgradeOverride.


        :param upgrade: The upgrade of this ClusterUpgradeGKEUpgradeOverride.
        :type upgrade: ClusterUpgradeGKEUpgrade
        """

        self._upgrade = upgrade
