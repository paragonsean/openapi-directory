# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterUpgradeIgnoredMembership(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ignored_time: str=None, reason: str=None):
        """ClusterUpgradeIgnoredMembership - a model defined in OpenAPI

        :param ignored_time: The ignored_time of this ClusterUpgradeIgnoredMembership.
        :param reason: The reason of this ClusterUpgradeIgnoredMembership.
        """
        self.openapi_types = {
            'ignored_time': str,
            'reason': str
        }

        self.attribute_map = {
            'ignored_time': 'ignoredTime',
            'reason': 'reason'
        }

        self._ignored_time = ignored_time
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterUpgradeIgnoredMembership':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterUpgradeIgnoredMembership of this ClusterUpgradeIgnoredMembership.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ignored_time(self):
        """Gets the ignored_time of this ClusterUpgradeIgnoredMembership.

        Time when the membership was first set to ignored.

        :return: The ignored_time of this ClusterUpgradeIgnoredMembership.
        :rtype: str
        """
        return self._ignored_time

    @ignored_time.setter
    def ignored_time(self, ignored_time):
        """Sets the ignored_time of this ClusterUpgradeIgnoredMembership.

        Time when the membership was first set to ignored.

        :param ignored_time: The ignored_time of this ClusterUpgradeIgnoredMembership.
        :type ignored_time: str
        """

        self._ignored_time = ignored_time

    @property
    def reason(self):
        """Gets the reason of this ClusterUpgradeIgnoredMembership.

        Reason why the membership is ignored.

        :return: The reason of this ClusterUpgradeIgnoredMembership.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this ClusterUpgradeIgnoredMembership.

        Reason why the membership is ignored.

        :param reason: The reason of this ClusterUpgradeIgnoredMembership.
        :type reason: str
        """

        self._reason = reason
