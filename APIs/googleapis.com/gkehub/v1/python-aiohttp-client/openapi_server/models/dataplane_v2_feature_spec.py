# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataplaneV2FeatureSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_encryption: bool=None):
        """DataplaneV2FeatureSpec - a model defined in OpenAPI

        :param enable_encryption: The enable_encryption of this DataplaneV2FeatureSpec.
        """
        self.openapi_types = {
            'enable_encryption': bool
        }

        self.attribute_map = {
            'enable_encryption': 'enableEncryption'
        }

        self._enable_encryption = enable_encryption

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataplaneV2FeatureSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataplaneV2FeatureSpec of this DataplaneV2FeatureSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_encryption(self):
        """Gets the enable_encryption of this DataplaneV2FeatureSpec.

        Enable dataplane-v2 based encryption for multiple clusters.

        :return: The enable_encryption of this DataplaneV2FeatureSpec.
        :rtype: bool
        """
        return self._enable_encryption

    @enable_encryption.setter
    def enable_encryption(self, enable_encryption):
        """Sets the enable_encryption of this DataplaneV2FeatureSpec.

        Enable dataplane-v2 based encryption for multiple clusters.

        :param enable_encryption: The enable_encryption of this DataplaneV2FeatureSpec.
        :type enable_encryption: bool
        """

        self._enable_encryption = enable_encryption
