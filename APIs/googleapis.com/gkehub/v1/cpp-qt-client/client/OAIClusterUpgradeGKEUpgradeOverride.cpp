/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterUpgradeGKEUpgradeOverride.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterUpgradeGKEUpgradeOverride::OAIClusterUpgradeGKEUpgradeOverride(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterUpgradeGKEUpgradeOverride::OAIClusterUpgradeGKEUpgradeOverride() {
    this->initializeModel();
}

OAIClusterUpgradeGKEUpgradeOverride::~OAIClusterUpgradeGKEUpgradeOverride() {}

void OAIClusterUpgradeGKEUpgradeOverride::initializeModel() {

    m_post_conditions_isSet = false;
    m_post_conditions_isValid = false;

    m_upgrade_isSet = false;
    m_upgrade_isValid = false;
}

void OAIClusterUpgradeGKEUpgradeOverride::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterUpgradeGKEUpgradeOverride::fromJsonObject(QJsonObject json) {

    m_post_conditions_isValid = ::OpenAPI::fromJsonValue(m_post_conditions, json[QString("postConditions")]);
    m_post_conditions_isSet = !json[QString("postConditions")].isNull() && m_post_conditions_isValid;

    m_upgrade_isValid = ::OpenAPI::fromJsonValue(m_upgrade, json[QString("upgrade")]);
    m_upgrade_isSet = !json[QString("upgrade")].isNull() && m_upgrade_isValid;
}

QString OAIClusterUpgradeGKEUpgradeOverride::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterUpgradeGKEUpgradeOverride::asJsonObject() const {
    QJsonObject obj;
    if (m_post_conditions.isSet()) {
        obj.insert(QString("postConditions"), ::OpenAPI::toJsonValue(m_post_conditions));
    }
    if (m_upgrade.isSet()) {
        obj.insert(QString("upgrade"), ::OpenAPI::toJsonValue(m_upgrade));
    }
    return obj;
}

OAIClusterUpgradePostConditions OAIClusterUpgradeGKEUpgradeOverride::getPostConditions() const {
    return m_post_conditions;
}
void OAIClusterUpgradeGKEUpgradeOverride::setPostConditions(const OAIClusterUpgradePostConditions &post_conditions) {
    m_post_conditions = post_conditions;
    m_post_conditions_isSet = true;
}

bool OAIClusterUpgradeGKEUpgradeOverride::is_post_conditions_Set() const{
    return m_post_conditions_isSet;
}

bool OAIClusterUpgradeGKEUpgradeOverride::is_post_conditions_Valid() const{
    return m_post_conditions_isValid;
}

OAIClusterUpgradeGKEUpgrade OAIClusterUpgradeGKEUpgradeOverride::getUpgrade() const {
    return m_upgrade;
}
void OAIClusterUpgradeGKEUpgradeOverride::setUpgrade(const OAIClusterUpgradeGKEUpgrade &upgrade) {
    m_upgrade = upgrade;
    m_upgrade_isSet = true;
}

bool OAIClusterUpgradeGKEUpgradeOverride::is_upgrade_Set() const{
    return m_upgrade_isSet;
}

bool OAIClusterUpgradeGKEUpgradeOverride::is_upgrade_Valid() const{
    return m_upgrade_isValid;
}

bool OAIClusterUpgradeGKEUpgradeOverride::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_post_conditions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_upgrade.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterUpgradeGKEUpgradeOverride::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
