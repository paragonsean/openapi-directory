/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListMembershipBindingsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListMembershipBindingsResponse::OAIListMembershipBindingsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListMembershipBindingsResponse::OAIListMembershipBindingsResponse() {
    this->initializeModel();
}

OAIListMembershipBindingsResponse::~OAIListMembershipBindingsResponse() {}

void OAIListMembershipBindingsResponse::initializeModel() {

    m_membership_bindings_isSet = false;
    m_membership_bindings_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListMembershipBindingsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListMembershipBindingsResponse::fromJsonObject(QJsonObject json) {

    m_membership_bindings_isValid = ::OpenAPI::fromJsonValue(m_membership_bindings, json[QString("membershipBindings")]);
    m_membership_bindings_isSet = !json[QString("membershipBindings")].isNull() && m_membership_bindings_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListMembershipBindingsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListMembershipBindingsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_membership_bindings.size() > 0) {
        obj.insert(QString("membershipBindings"), ::OpenAPI::toJsonValue(m_membership_bindings));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIMembershipBinding> OAIListMembershipBindingsResponse::getMembershipBindings() const {
    return m_membership_bindings;
}
void OAIListMembershipBindingsResponse::setMembershipBindings(const QList<OAIMembershipBinding> &membership_bindings) {
    m_membership_bindings = membership_bindings;
    m_membership_bindings_isSet = true;
}

bool OAIListMembershipBindingsResponse::is_membership_bindings_Set() const{
    return m_membership_bindings_isSet;
}

bool OAIListMembershipBindingsResponse::is_membership_bindings_Valid() const{
    return m_membership_bindings_isValid;
}

QString OAIListMembershipBindingsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListMembershipBindingsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListMembershipBindingsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListMembershipBindingsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListMembershipBindingsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_membership_bindings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListMembershipBindingsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
