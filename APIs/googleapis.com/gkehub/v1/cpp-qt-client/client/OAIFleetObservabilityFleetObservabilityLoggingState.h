/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFleetObservabilityFleetObservabilityLoggingState.h
 *
 * Feature state for logging feature.
 */

#ifndef OAIFleetObservabilityFleetObservabilityLoggingState_H
#define OAIFleetObservabilityFleetObservabilityLoggingState_H

#include <QJsonObject>

#include "OAIFleetObservabilityFleetObservabilityBaseFeatureState.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFleetObservabilityFleetObservabilityBaseFeatureState;

class OAIFleetObservabilityFleetObservabilityLoggingState : public OAIObject {
public:
    OAIFleetObservabilityFleetObservabilityLoggingState();
    OAIFleetObservabilityFleetObservabilityLoggingState(QString json);
    ~OAIFleetObservabilityFleetObservabilityLoggingState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFleetObservabilityFleetObservabilityBaseFeatureState getDefaultLog() const;
    void setDefaultLog(const OAIFleetObservabilityFleetObservabilityBaseFeatureState &default_log);
    bool is_default_log_Set() const;
    bool is_default_log_Valid() const;

    OAIFleetObservabilityFleetObservabilityBaseFeatureState getScopeLog() const;
    void setScopeLog(const OAIFleetObservabilityFleetObservabilityBaseFeatureState &scope_log);
    bool is_scope_log_Set() const;
    bool is_scope_log_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFleetObservabilityFleetObservabilityBaseFeatureState m_default_log;
    bool m_default_log_isSet;
    bool m_default_log_isValid;

    OAIFleetObservabilityFleetObservabilityBaseFeatureState m_scope_log;
    bool m_scope_log_isSet;
    bool m_scope_log_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFleetObservabilityFleetObservabilityLoggingState)

#endif // OAIFleetObservabilityFleetObservabilityLoggingState_H
