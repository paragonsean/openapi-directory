/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeatureResourceState.h
 *
 * FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See &#x60;FeatureState&#x60; for the \&quot;running state\&quot; of the Feature in the Hub and across Memberships.
 */

#ifndef OAIFeatureResourceState_H
#define OAIFeatureResourceState_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFeatureResourceState : public OAIObject {
public:
    OAIFeatureResourceState();
    OAIFeatureResourceState(QString json);
    ~OAIFeatureResourceState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeatureResourceState)

#endif // OAIFeatureResourceState_H
