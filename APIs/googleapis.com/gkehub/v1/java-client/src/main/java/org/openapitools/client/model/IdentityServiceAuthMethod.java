/*
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IdentityServiceAzureADConfig;
import org.openapitools.client.model.IdentityServiceGoogleConfig;
import org.openapitools.client.model.IdentityServiceOidcConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configuration of an auth method for a member/cluster. Only one authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:03.748693-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IdentityServiceAuthMethod {
  public static final String SERIALIZED_NAME_AZUREAD_CONFIG = "azureadConfig";
  @SerializedName(SERIALIZED_NAME_AZUREAD_CONFIG)
  private IdentityServiceAzureADConfig azureadConfig;

  public static final String SERIALIZED_NAME_GOOGLE_CONFIG = "googleConfig";
  @SerializedName(SERIALIZED_NAME_GOOGLE_CONFIG)
  private IdentityServiceGoogleConfig googleConfig;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OIDC_CONFIG = "oidcConfig";
  @SerializedName(SERIALIZED_NAME_OIDC_CONFIG)
  private IdentityServiceOidcConfig oidcConfig;

  public static final String SERIALIZED_NAME_PROXY = "proxy";
  @SerializedName(SERIALIZED_NAME_PROXY)
  private String proxy;

  public IdentityServiceAuthMethod() {
  }

  public IdentityServiceAuthMethod azureadConfig(IdentityServiceAzureADConfig azureadConfig) {
    this.azureadConfig = azureadConfig;
    return this;
  }

  /**
   * Get azureadConfig
   * @return azureadConfig
   */
  @javax.annotation.Nullable
  public IdentityServiceAzureADConfig getAzureadConfig() {
    return azureadConfig;
  }

  public void setAzureadConfig(IdentityServiceAzureADConfig azureadConfig) {
    this.azureadConfig = azureadConfig;
  }


  public IdentityServiceAuthMethod googleConfig(IdentityServiceGoogleConfig googleConfig) {
    this.googleConfig = googleConfig;
    return this;
  }

  /**
   * Get googleConfig
   * @return googleConfig
   */
  @javax.annotation.Nullable
  public IdentityServiceGoogleConfig getGoogleConfig() {
    return googleConfig;
  }

  public void setGoogleConfig(IdentityServiceGoogleConfig googleConfig) {
    this.googleConfig = googleConfig;
  }


  public IdentityServiceAuthMethod name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Identifier for auth config.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public IdentityServiceAuthMethod oidcConfig(IdentityServiceOidcConfig oidcConfig) {
    this.oidcConfig = oidcConfig;
    return this;
  }

  /**
   * Get oidcConfig
   * @return oidcConfig
   */
  @javax.annotation.Nullable
  public IdentityServiceOidcConfig getOidcConfig() {
    return oidcConfig;
  }

  public void setOidcConfig(IdentityServiceOidcConfig oidcConfig) {
    this.oidcConfig = oidcConfig;
  }


  public IdentityServiceAuthMethod proxy(String proxy) {
    this.proxy = proxy;
    return this;
  }

  /**
   * Proxy server address to use for auth method.
   * @return proxy
   */
  @javax.annotation.Nullable
  public String getProxy() {
    return proxy;
  }

  public void setProxy(String proxy) {
    this.proxy = proxy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityServiceAuthMethod identityServiceAuthMethod = (IdentityServiceAuthMethod) o;
    return Objects.equals(this.azureadConfig, identityServiceAuthMethod.azureadConfig) &&
        Objects.equals(this.googleConfig, identityServiceAuthMethod.googleConfig) &&
        Objects.equals(this.name, identityServiceAuthMethod.name) &&
        Objects.equals(this.oidcConfig, identityServiceAuthMethod.oidcConfig) &&
        Objects.equals(this.proxy, identityServiceAuthMethod.proxy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(azureadConfig, googleConfig, name, oidcConfig, proxy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityServiceAuthMethod {\n");
    sb.append("    azureadConfig: ").append(toIndentedString(azureadConfig)).append("\n");
    sb.append("    googleConfig: ").append(toIndentedString(googleConfig)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    oidcConfig: ").append(toIndentedString(oidcConfig)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("azureadConfig");
    openapiFields.add("googleConfig");
    openapiFields.add("name");
    openapiFields.add("oidcConfig");
    openapiFields.add("proxy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IdentityServiceAuthMethod
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IdentityServiceAuthMethod.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IdentityServiceAuthMethod is not found in the empty JSON string", IdentityServiceAuthMethod.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IdentityServiceAuthMethod.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IdentityServiceAuthMethod` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `azureadConfig`
      if (jsonObj.get("azureadConfig") != null && !jsonObj.get("azureadConfig").isJsonNull()) {
        IdentityServiceAzureADConfig.validateJsonElement(jsonObj.get("azureadConfig"));
      }
      // validate the optional field `googleConfig`
      if (jsonObj.get("googleConfig") != null && !jsonObj.get("googleConfig").isJsonNull()) {
        IdentityServiceGoogleConfig.validateJsonElement(jsonObj.get("googleConfig"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `oidcConfig`
      if (jsonObj.get("oidcConfig") != null && !jsonObj.get("oidcConfig").isJsonNull()) {
        IdentityServiceOidcConfig.validateJsonElement(jsonObj.get("oidcConfig"));
      }
      if ((jsonObj.get("proxy") != null && !jsonObj.get("proxy").isJsonNull()) && !jsonObj.get("proxy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proxy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proxy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IdentityServiceAuthMethod.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IdentityServiceAuthMethod' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IdentityServiceAuthMethod> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IdentityServiceAuthMethod.class));

       return (TypeAdapter<T>) new TypeAdapter<IdentityServiceAuthMethod>() {
           @Override
           public void write(JsonWriter out, IdentityServiceAuthMethod value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IdentityServiceAuthMethod read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IdentityServiceAuthMethod given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IdentityServiceAuthMethod
   * @throws IOException if the JSON string is invalid with respect to IdentityServiceAuthMethod
   */
  public static IdentityServiceAuthMethod fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IdentityServiceAuthMethod.class);
  }

  /**
   * Convert an instance of IdentityServiceAuthMethod to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

