# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.membership_spec import MembershipSpec
from openapi_server import util


class FeatureSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_config: MembershipSpec=None, provision_google_ca: str=None):
        """FeatureSpec - a model defined in OpenAPI

        :param default_config: The default_config of this FeatureSpec.
        :param provision_google_ca: The provision_google_ca of this FeatureSpec.
        """
        self.openapi_types = {
            'default_config': MembershipSpec,
            'provision_google_ca': str
        }

        self.attribute_map = {
            'default_config': 'defaultConfig',
            'provision_google_ca': 'provisionGoogleCa'
        }

        self._default_config = default_config
        self._provision_google_ca = provision_google_ca

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeatureSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeatureSpec of this FeatureSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_config(self):
        """Gets the default_config of this FeatureSpec.


        :return: The default_config of this FeatureSpec.
        :rtype: MembershipSpec
        """
        return self._default_config

    @default_config.setter
    def default_config(self, default_config):
        """Sets the default_config of this FeatureSpec.


        :param default_config: The default_config of this FeatureSpec.
        :type default_config: MembershipSpec
        """

        self._default_config = default_config

    @property
    def provision_google_ca(self):
        """Gets the provision_google_ca of this FeatureSpec.

        Immutable. Specifies CA configuration.

        :return: The provision_google_ca of this FeatureSpec.
        :rtype: str
        """
        return self._provision_google_ca

    @provision_google_ca.setter
    def provision_google_ca(self, provision_google_ca):
        """Sets the provision_google_ca of this FeatureSpec.

        Immutable. Specifies CA configuration.

        :param provision_google_ca: The provision_google_ca of this FeatureSpec.
        :type provision_google_ca: str
        """
        allowed_values = ["GOOGLE_CA_PROVISIONING_UNSPECIFIED", "DISABLED", "ENABLED", "ENABLED_WITH_MANAGED_CA", "ENABLED_WITH_DEFAULT_CA"]  # noqa: E501
        if provision_google_ca not in allowed_values:
            raise ValueError(
                "Invalid value for `provision_google_ca` ({0}), must be one of {1}"
                .format(provision_google_ca, allowed_values)
            )

        self._provision_google_ca = provision_google_ca
