# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Role(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, predefined_role: str=None):
        """Role - a model defined in OpenAPI

        :param predefined_role: The predefined_role of this Role.
        """
        self.openapi_types = {
            'predefined_role': str
        }

        self.attribute_map = {
            'predefined_role': 'predefinedRole'
        }

        self._predefined_role = predefined_role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Role':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Role of this Role.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def predefined_role(self):
        """Gets the predefined_role of this Role.

        predefined_role is the Kubernetes default role to use

        :return: The predefined_role of this Role.
        :rtype: str
        """
        return self._predefined_role

    @predefined_role.setter
    def predefined_role(self, predefined_role):
        """Sets the predefined_role of this Role.

        predefined_role is the Kubernetes default role to use

        :param predefined_role: The predefined_role of this Role.
        :type predefined_role: str
        """
        allowed_values = ["UNKNOWN", "ADMIN", "EDIT", "VIEW", "ANTHOS_SUPPORT"]  # noqa: E501
        if predefined_role not in allowed_values:
            raise ValueError(
                "Invalid value for `predefined_role` ({0}), must be one of {1}"
                .format(predefined_role, allowed_values)
            )

        self._predefined_role = predefined_role
