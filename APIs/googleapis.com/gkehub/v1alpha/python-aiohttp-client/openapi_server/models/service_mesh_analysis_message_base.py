# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_mesh_type import ServiceMeshType
from openapi_server import util


class ServiceMeshAnalysisMessageBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documentation_url: str=None, level: str=None, type: ServiceMeshType=None):
        """ServiceMeshAnalysisMessageBase - a model defined in OpenAPI

        :param documentation_url: The documentation_url of this ServiceMeshAnalysisMessageBase.
        :param level: The level of this ServiceMeshAnalysisMessageBase.
        :param type: The type of this ServiceMeshAnalysisMessageBase.
        """
        self.openapi_types = {
            'documentation_url': str,
            'level': str,
            'type': ServiceMeshType
        }

        self.attribute_map = {
            'documentation_url': 'documentationUrl',
            'level': 'level',
            'type': 'type'
        }

        self._documentation_url = documentation_url
        self._level = level
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceMeshAnalysisMessageBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceMeshAnalysisMessageBase of this ServiceMeshAnalysisMessageBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documentation_url(self):
        """Gets the documentation_url of this ServiceMeshAnalysisMessageBase.

        A url pointing to the Service Mesh or Istio documentation for this specific error type.

        :return: The documentation_url of this ServiceMeshAnalysisMessageBase.
        :rtype: str
        """
        return self._documentation_url

    @documentation_url.setter
    def documentation_url(self, documentation_url):
        """Sets the documentation_url of this ServiceMeshAnalysisMessageBase.

        A url pointing to the Service Mesh or Istio documentation for this specific error type.

        :param documentation_url: The documentation_url of this ServiceMeshAnalysisMessageBase.
        :type documentation_url: str
        """

        self._documentation_url = documentation_url

    @property
    def level(self):
        """Gets the level of this ServiceMeshAnalysisMessageBase.

        Represents how severe a message is.

        :return: The level of this ServiceMeshAnalysisMessageBase.
        :rtype: str
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this ServiceMeshAnalysisMessageBase.

        Represents how severe a message is.

        :param level: The level of this ServiceMeshAnalysisMessageBase.
        :type level: str
        """
        allowed_values = ["LEVEL_UNSPECIFIED", "ERROR", "WARNING", "INFO"]  # noqa: E501
        if level not in allowed_values:
            raise ValueError(
                "Invalid value for `level` ({0}), must be one of {1}"
                .format(level, allowed_values)
            )

        self._level = level

    @property
    def type(self):
        """Gets the type of this ServiceMeshAnalysisMessageBase.


        :return: The type of this ServiceMeshAnalysisMessageBase.
        :rtype: ServiceMeshType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ServiceMeshAnalysisMessageBase.


        :param type: The type of this ServiceMeshAnalysisMessageBase.
        :type type: ServiceMeshType
        """

        self._type = type
