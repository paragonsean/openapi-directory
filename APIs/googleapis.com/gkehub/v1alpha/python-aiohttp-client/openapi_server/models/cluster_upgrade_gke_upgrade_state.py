# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_upgrade_gke_upgrade import ClusterUpgradeGKEUpgrade
from openapi_server.models.cluster_upgrade_upgrade_status import ClusterUpgradeUpgradeStatus
from openapi_server import util


class ClusterUpgradeGKEUpgradeState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stats: Dict[str, str]=None, status: ClusterUpgradeUpgradeStatus=None, upgrade: ClusterUpgradeGKEUpgrade=None):
        """ClusterUpgradeGKEUpgradeState - a model defined in OpenAPI

        :param stats: The stats of this ClusterUpgradeGKEUpgradeState.
        :param status: The status of this ClusterUpgradeGKEUpgradeState.
        :param upgrade: The upgrade of this ClusterUpgradeGKEUpgradeState.
        """
        self.openapi_types = {
            'stats': Dict[str, str],
            'status': ClusterUpgradeUpgradeStatus,
            'upgrade': ClusterUpgradeGKEUpgrade
        }

        self.attribute_map = {
            'stats': 'stats',
            'status': 'status',
            'upgrade': 'upgrade'
        }

        self._stats = stats
        self._status = status
        self._upgrade = upgrade

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterUpgradeGKEUpgradeState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterUpgradeGKEUpgradeState of this ClusterUpgradeGKEUpgradeState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stats(self):
        """Gets the stats of this ClusterUpgradeGKEUpgradeState.

        Number of GKE clusters in each status code.

        :return: The stats of this ClusterUpgradeGKEUpgradeState.
        :rtype: Dict[str, str]
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this ClusterUpgradeGKEUpgradeState.

        Number of GKE clusters in each status code.

        :param stats: The stats of this ClusterUpgradeGKEUpgradeState.
        :type stats: Dict[str, str]
        """

        self._stats = stats

    @property
    def status(self):
        """Gets the status of this ClusterUpgradeGKEUpgradeState.


        :return: The status of this ClusterUpgradeGKEUpgradeState.
        :rtype: ClusterUpgradeUpgradeStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ClusterUpgradeGKEUpgradeState.


        :param status: The status of this ClusterUpgradeGKEUpgradeState.
        :type status: ClusterUpgradeUpgradeStatus
        """

        self._status = status

    @property
    def upgrade(self):
        """Gets the upgrade of this ClusterUpgradeGKEUpgradeState.


        :return: The upgrade of this ClusterUpgradeGKEUpgradeState.
        :rtype: ClusterUpgradeGKEUpgrade
        """
        return self._upgrade

    @upgrade.setter
    def upgrade(self, upgrade):
        """Sets the upgrade of this ClusterUpgradeGKEUpgradeState.


        :param upgrade: The upgrade of this ClusterUpgradeGKEUpgradeState.
        :type upgrade: ClusterUpgradeGKEUpgrade
        """

        self._upgrade = upgrade
