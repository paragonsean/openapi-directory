# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.identity_service_azure_ad_config import IdentityServiceAzureADConfig
from openapi_server.models.identity_service_google_config import IdentityServiceGoogleConfig
from openapi_server.models.identity_service_oidc_config import IdentityServiceOidcConfig
from openapi_server import util


class IdentityServiceAuthMethod(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, azuread_config: IdentityServiceAzureADConfig=None, google_config: IdentityServiceGoogleConfig=None, name: str=None, oidc_config: IdentityServiceOidcConfig=None, proxy: str=None):
        """IdentityServiceAuthMethod - a model defined in OpenAPI

        :param azuread_config: The azuread_config of this IdentityServiceAuthMethod.
        :param google_config: The google_config of this IdentityServiceAuthMethod.
        :param name: The name of this IdentityServiceAuthMethod.
        :param oidc_config: The oidc_config of this IdentityServiceAuthMethod.
        :param proxy: The proxy of this IdentityServiceAuthMethod.
        """
        self.openapi_types = {
            'azuread_config': IdentityServiceAzureADConfig,
            'google_config': IdentityServiceGoogleConfig,
            'name': str,
            'oidc_config': IdentityServiceOidcConfig,
            'proxy': str
        }

        self.attribute_map = {
            'azuread_config': 'azureadConfig',
            'google_config': 'googleConfig',
            'name': 'name',
            'oidc_config': 'oidcConfig',
            'proxy': 'proxy'
        }

        self._azuread_config = azuread_config
        self._google_config = google_config
        self._name = name
        self._oidc_config = oidc_config
        self._proxy = proxy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentityServiceAuthMethod':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentityServiceAuthMethod of this IdentityServiceAuthMethod.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def azuread_config(self):
        """Gets the azuread_config of this IdentityServiceAuthMethod.


        :return: The azuread_config of this IdentityServiceAuthMethod.
        :rtype: IdentityServiceAzureADConfig
        """
        return self._azuread_config

    @azuread_config.setter
    def azuread_config(self, azuread_config):
        """Sets the azuread_config of this IdentityServiceAuthMethod.


        :param azuread_config: The azuread_config of this IdentityServiceAuthMethod.
        :type azuread_config: IdentityServiceAzureADConfig
        """

        self._azuread_config = azuread_config

    @property
    def google_config(self):
        """Gets the google_config of this IdentityServiceAuthMethod.


        :return: The google_config of this IdentityServiceAuthMethod.
        :rtype: IdentityServiceGoogleConfig
        """
        return self._google_config

    @google_config.setter
    def google_config(self, google_config):
        """Sets the google_config of this IdentityServiceAuthMethod.


        :param google_config: The google_config of this IdentityServiceAuthMethod.
        :type google_config: IdentityServiceGoogleConfig
        """

        self._google_config = google_config

    @property
    def name(self):
        """Gets the name of this IdentityServiceAuthMethod.

        Identifier for auth config.

        :return: The name of this IdentityServiceAuthMethod.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IdentityServiceAuthMethod.

        Identifier for auth config.

        :param name: The name of this IdentityServiceAuthMethod.
        :type name: str
        """

        self._name = name

    @property
    def oidc_config(self):
        """Gets the oidc_config of this IdentityServiceAuthMethod.


        :return: The oidc_config of this IdentityServiceAuthMethod.
        :rtype: IdentityServiceOidcConfig
        """
        return self._oidc_config

    @oidc_config.setter
    def oidc_config(self, oidc_config):
        """Sets the oidc_config of this IdentityServiceAuthMethod.


        :param oidc_config: The oidc_config of this IdentityServiceAuthMethod.
        :type oidc_config: IdentityServiceOidcConfig
        """

        self._oidc_config = oidc_config

    @property
    def proxy(self):
        """Gets the proxy of this IdentityServiceAuthMethod.

        Proxy server address to use for auth method.

        :return: The proxy of this IdentityServiceAuthMethod.
        :rtype: str
        """
        return self._proxy

    @proxy.setter
    def proxy(self, proxy):
        """Sets the proxy of this IdentityServiceAuthMethod.

        Proxy server address to use for auth method.

        :param proxy: The proxy of this IdentityServiceAuthMethod.
        :type proxy: str
        """

        self._proxy = proxy
