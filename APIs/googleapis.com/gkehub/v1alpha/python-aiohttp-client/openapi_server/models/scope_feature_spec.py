# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_upgrade_scope_spec import ClusterUpgradeScopeSpec
from openapi_server import util


class ScopeFeatureSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clusterupgrade: ClusterUpgradeScopeSpec=None):
        """ScopeFeatureSpec - a model defined in OpenAPI

        :param clusterupgrade: The clusterupgrade of this ScopeFeatureSpec.
        """
        self.openapi_types = {
            'clusterupgrade': ClusterUpgradeScopeSpec
        }

        self.attribute_map = {
            'clusterupgrade': 'clusterupgrade'
        }

        self._clusterupgrade = clusterupgrade

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScopeFeatureSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScopeFeatureSpec of this ScopeFeatureSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clusterupgrade(self):
        """Gets the clusterupgrade of this ScopeFeatureSpec.


        :return: The clusterupgrade of this ScopeFeatureSpec.
        :rtype: ClusterUpgradeScopeSpec
        """
        return self._clusterupgrade

    @clusterupgrade.setter
    def clusterupgrade(self, clusterupgrade):
        """Sets the clusterupgrade of this ScopeFeatureSpec.


        :param clusterupgrade: The clusterupgrade of this ScopeFeatureSpec.
        :type clusterupgrade: ClusterUpgradeScopeSpec
        """

        self._clusterupgrade = clusterupgrade
