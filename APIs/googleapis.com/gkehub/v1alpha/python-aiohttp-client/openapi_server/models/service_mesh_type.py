# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceMeshType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, display_name: str=None):
        """ServiceMeshType - a model defined in OpenAPI

        :param code: The code of this ServiceMeshType.
        :param display_name: The display_name of this ServiceMeshType.
        """
        self.openapi_types = {
            'code': str,
            'display_name': str
        }

        self.attribute_map = {
            'code': 'code',
            'display_name': 'displayName'
        }

        self._code = code
        self._display_name = display_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceMeshType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceMeshType of this ServiceMeshType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this ServiceMeshType.

        A 7 character code matching `^IST[0-9]{4}$` or `^ASM[0-9]{4}$`, intended to uniquely identify the message type. (e.g. \"IST0001\" is mapped to the \"InternalError\" message type.)

        :return: The code of this ServiceMeshType.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this ServiceMeshType.

        A 7 character code matching `^IST[0-9]{4}$` or `^ASM[0-9]{4}$`, intended to uniquely identify the message type. (e.g. \"IST0001\" is mapped to the \"InternalError\" message type.)

        :param code: The code of this ServiceMeshType.
        :type code: str
        """

        self._code = code

    @property
    def display_name(self):
        """Gets the display_name of this ServiceMeshType.

        A human-readable name for the message type. e.g. \"InternalError\", \"PodMissingProxy\". This should be the same for all messages of the same type. (This corresponds to the `name` field in open-source Istio.)

        :return: The display_name of this ServiceMeshType.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ServiceMeshType.

        A human-readable name for the message type. e.g. \"InternalError\", \"PodMissingProxy\". This should be the same for all messages of the same type. (This corresponds to the `name` field in open-source Istio.)

        :param display_name: The display_name of this ServiceMeshType.
        :type display_name: str
        """

        self._display_name = display_name
