# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigManagementHierarchyControllerVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extension: str=None, hnc: str=None):
        """ConfigManagementHierarchyControllerVersion - a model defined in OpenAPI

        :param extension: The extension of this ConfigManagementHierarchyControllerVersion.
        :param hnc: The hnc of this ConfigManagementHierarchyControllerVersion.
        """
        self.openapi_types = {
            'extension': str,
            'hnc': str
        }

        self.attribute_map = {
            'extension': 'extension',
            'hnc': 'hnc'
        }

        self._extension = extension
        self._hnc = hnc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigManagementHierarchyControllerVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigManagementHierarchyControllerVersion of this ConfigManagementHierarchyControllerVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extension(self):
        """Gets the extension of this ConfigManagementHierarchyControllerVersion.

        Version for Hierarchy Controller extension

        :return: The extension of this ConfigManagementHierarchyControllerVersion.
        :rtype: str
        """
        return self._extension

    @extension.setter
    def extension(self, extension):
        """Sets the extension of this ConfigManagementHierarchyControllerVersion.

        Version for Hierarchy Controller extension

        :param extension: The extension of this ConfigManagementHierarchyControllerVersion.
        :type extension: str
        """

        self._extension = extension

    @property
    def hnc(self):
        """Gets the hnc of this ConfigManagementHierarchyControllerVersion.

        Version for open source HNC

        :return: The hnc of this ConfigManagementHierarchyControllerVersion.
        :rtype: str
        """
        return self._hnc

    @hnc.setter
    def hnc(self, hnc):
        """Sets the hnc of this ConfigManagementHierarchyControllerVersion.

        Version for open source HNC

        :param hnc: The hnc of this ConfigManagementHierarchyControllerVersion.
        :type hnc: str
        """

        self._hnc = hnc
