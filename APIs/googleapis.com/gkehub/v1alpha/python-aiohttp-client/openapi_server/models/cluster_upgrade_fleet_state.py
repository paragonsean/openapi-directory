# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_upgrade_gke_upgrade_feature_state import ClusterUpgradeGKEUpgradeFeatureState
from openapi_server.models.cluster_upgrade_ignored_membership import ClusterUpgradeIgnoredMembership
from openapi_server import util


class ClusterUpgradeFleetState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, downstream_fleets: List[str]=None, gke_state: ClusterUpgradeGKEUpgradeFeatureState=None, ignored: Dict[str, ClusterUpgradeIgnoredMembership]=None):
        """ClusterUpgradeFleetState - a model defined in OpenAPI

        :param downstream_fleets: The downstream_fleets of this ClusterUpgradeFleetState.
        :param gke_state: The gke_state of this ClusterUpgradeFleetState.
        :param ignored: The ignored of this ClusterUpgradeFleetState.
        """
        self.openapi_types = {
            'downstream_fleets': List[str],
            'gke_state': ClusterUpgradeGKEUpgradeFeatureState,
            'ignored': Dict[str, ClusterUpgradeIgnoredMembership]
        }

        self.attribute_map = {
            'downstream_fleets': 'downstreamFleets',
            'gke_state': 'gkeState',
            'ignored': 'ignored'
        }

        self._downstream_fleets = downstream_fleets
        self._gke_state = gke_state
        self._ignored = ignored

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterUpgradeFleetState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterUpgradeFleetState of this ClusterUpgradeFleetState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def downstream_fleets(self):
        """Gets the downstream_fleets of this ClusterUpgradeFleetState.

        This fleets whose upstream_fleets contain the current fleet. The fleet name should be either fleet project number or id.

        :return: The downstream_fleets of this ClusterUpgradeFleetState.
        :rtype: List[str]
        """
        return self._downstream_fleets

    @downstream_fleets.setter
    def downstream_fleets(self, downstream_fleets):
        """Sets the downstream_fleets of this ClusterUpgradeFleetState.

        This fleets whose upstream_fleets contain the current fleet. The fleet name should be either fleet project number or id.

        :param downstream_fleets: The downstream_fleets of this ClusterUpgradeFleetState.
        :type downstream_fleets: List[str]
        """

        self._downstream_fleets = downstream_fleets

    @property
    def gke_state(self):
        """Gets the gke_state of this ClusterUpgradeFleetState.


        :return: The gke_state of this ClusterUpgradeFleetState.
        :rtype: ClusterUpgradeGKEUpgradeFeatureState
        """
        return self._gke_state

    @gke_state.setter
    def gke_state(self, gke_state):
        """Sets the gke_state of this ClusterUpgradeFleetState.


        :param gke_state: The gke_state of this ClusterUpgradeFleetState.
        :type gke_state: ClusterUpgradeGKEUpgradeFeatureState
        """

        self._gke_state = gke_state

    @property
    def ignored(self):
        """Gets the ignored of this ClusterUpgradeFleetState.

        A list of memberships ignored by the feature. For example, manually upgraded clusters can be ignored if they are newer than the default versions of its release channel. The membership resource is in the format: `projects/{p}/locations/{l}/membership/{m}`.

        :return: The ignored of this ClusterUpgradeFleetState.
        :rtype: Dict[str, ClusterUpgradeIgnoredMembership]
        """
        return self._ignored

    @ignored.setter
    def ignored(self, ignored):
        """Sets the ignored of this ClusterUpgradeFleetState.

        A list of memberships ignored by the feature. For example, manually upgraded clusters can be ignored if they are newer than the default versions of its release channel. The membership resource is in the format: `projects/{p}/locations/{l}/membership/{m}`.

        :param ignored: The ignored of this ClusterUpgradeFleetState.
        :type ignored: Dict[str, ClusterUpgradeIgnoredMembership]
        """

        self._ignored = ignored
