/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnthosObservabilityFeatureSpec from './AnthosObservabilityFeatureSpec';
import CloudAuditLoggingFeatureSpec from './CloudAuditLoggingFeatureSpec';
import ClusterUpgradeFleetSpec from './ClusterUpgradeFleetSpec';
import DataplaneV2FeatureSpec from './DataplaneV2FeatureSpec';
import FeatureSpec from './FeatureSpec';
import FleetObservabilityFeatureSpec from './FleetObservabilityFeatureSpec';
import MultiClusterIngressFeatureSpec from './MultiClusterIngressFeatureSpec';
import NamespaceActuationFeatureSpec from './NamespaceActuationFeatureSpec';

/**
 * The CommonFeatureSpec model module.
 * @module model/CommonFeatureSpec
 * @version v1alpha
 */
class CommonFeatureSpec {
    /**
     * Constructs a new <code>CommonFeatureSpec</code>.
     * CommonFeatureSpec contains Hub-wide configuration information
     * @alias module:model/CommonFeatureSpec
     */
    constructor() { 
        
        CommonFeatureSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommonFeatureSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommonFeatureSpec} obj Optional instance to populate.
     * @return {module:model/CommonFeatureSpec} The populated <code>CommonFeatureSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommonFeatureSpec();

            if (data.hasOwnProperty('anthosobservability')) {
                obj['anthosobservability'] = AnthosObservabilityFeatureSpec.constructFromObject(data['anthosobservability']);
            }
            if (data.hasOwnProperty('appdevexperience')) {
                obj['appdevexperience'] = ApiClient.convertToType(data['appdevexperience'], Object);
            }
            if (data.hasOwnProperty('cloudauditlogging')) {
                obj['cloudauditlogging'] = CloudAuditLoggingFeatureSpec.constructFromObject(data['cloudauditlogging']);
            }
            if (data.hasOwnProperty('clusterupgrade')) {
                obj['clusterupgrade'] = ClusterUpgradeFleetSpec.constructFromObject(data['clusterupgrade']);
            }
            if (data.hasOwnProperty('dataplanev2')) {
                obj['dataplanev2'] = DataplaneV2FeatureSpec.constructFromObject(data['dataplanev2']);
            }
            if (data.hasOwnProperty('fleetobservability')) {
                obj['fleetobservability'] = FleetObservabilityFeatureSpec.constructFromObject(data['fleetobservability']);
            }
            if (data.hasOwnProperty('multiclusteringress')) {
                obj['multiclusteringress'] = MultiClusterIngressFeatureSpec.constructFromObject(data['multiclusteringress']);
            }
            if (data.hasOwnProperty('namespaceactuation')) {
                obj['namespaceactuation'] = NamespaceActuationFeatureSpec.constructFromObject(data['namespaceactuation']);
            }
            if (data.hasOwnProperty('workloadcertificate')) {
                obj['workloadcertificate'] = FeatureSpec.constructFromObject(data['workloadcertificate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommonFeatureSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommonFeatureSpec</code>.
     */
    static validateJSON(data) {
        // validate the optional field `anthosobservability`
        if (data['anthosobservability']) { // data not null
          AnthosObservabilityFeatureSpec.validateJSON(data['anthosobservability']);
        }
        // validate the optional field `cloudauditlogging`
        if (data['cloudauditlogging']) { // data not null
          CloudAuditLoggingFeatureSpec.validateJSON(data['cloudauditlogging']);
        }
        // validate the optional field `clusterupgrade`
        if (data['clusterupgrade']) { // data not null
          ClusterUpgradeFleetSpec.validateJSON(data['clusterupgrade']);
        }
        // validate the optional field `dataplanev2`
        if (data['dataplanev2']) { // data not null
          DataplaneV2FeatureSpec.validateJSON(data['dataplanev2']);
        }
        // validate the optional field `fleetobservability`
        if (data['fleetobservability']) { // data not null
          FleetObservabilityFeatureSpec.validateJSON(data['fleetobservability']);
        }
        // validate the optional field `multiclusteringress`
        if (data['multiclusteringress']) { // data not null
          MultiClusterIngressFeatureSpec.validateJSON(data['multiclusteringress']);
        }
        // validate the optional field `namespaceactuation`
        if (data['namespaceactuation']) { // data not null
          NamespaceActuationFeatureSpec.validateJSON(data['namespaceactuation']);
        }
        // validate the optional field `workloadcertificate`
        if (data['workloadcertificate']) { // data not null
          FeatureSpec.validateJSON(data['workloadcertificate']);
        }

        return true;
    }


}



/**
 * @member {module:model/AnthosObservabilityFeatureSpec} anthosobservability
 */
CommonFeatureSpec.prototype['anthosobservability'] = undefined;

/**
 * Spec for App Dev Experience Feature.
 * @member {Object} appdevexperience
 */
CommonFeatureSpec.prototype['appdevexperience'] = undefined;

/**
 * @member {module:model/CloudAuditLoggingFeatureSpec} cloudauditlogging
 */
CommonFeatureSpec.prototype['cloudauditlogging'] = undefined;

/**
 * @member {module:model/ClusterUpgradeFleetSpec} clusterupgrade
 */
CommonFeatureSpec.prototype['clusterupgrade'] = undefined;

/**
 * @member {module:model/DataplaneV2FeatureSpec} dataplanev2
 */
CommonFeatureSpec.prototype['dataplanev2'] = undefined;

/**
 * @member {module:model/FleetObservabilityFeatureSpec} fleetobservability
 */
CommonFeatureSpec.prototype['fleetobservability'] = undefined;

/**
 * @member {module:model/MultiClusterIngressFeatureSpec} multiclusteringress
 */
CommonFeatureSpec.prototype['multiclusteringress'] = undefined;

/**
 * @member {module:model/NamespaceActuationFeatureSpec} namespaceactuation
 */
CommonFeatureSpec.prototype['namespaceactuation'] = undefined;

/**
 * @member {module:model/FeatureSpec} workloadcertificate
 */
CommonFeatureSpec.prototype['workloadcertificate'] = undefined;






export default CommonFeatureSpec;

