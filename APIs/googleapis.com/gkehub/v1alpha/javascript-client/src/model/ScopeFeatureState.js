/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClusterUpgradeScopeState from './ClusterUpgradeScopeState';
import FeatureState from './FeatureState';

/**
 * The ScopeFeatureState model module.
 * @module model/ScopeFeatureState
 * @version v1alpha
 */
class ScopeFeatureState {
    /**
     * Constructs a new <code>ScopeFeatureState</code>.
     * ScopeFeatureState contains Scope-wide Feature status information.
     * @alias module:model/ScopeFeatureState
     */
    constructor() { 
        
        ScopeFeatureState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScopeFeatureState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScopeFeatureState} obj Optional instance to populate.
     * @return {module:model/ScopeFeatureState} The populated <code>ScopeFeatureState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScopeFeatureState();

            if (data.hasOwnProperty('clusterupgrade')) {
                obj['clusterupgrade'] = ClusterUpgradeScopeState.constructFromObject(data['clusterupgrade']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = FeatureState.constructFromObject(data['state']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScopeFeatureState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScopeFeatureState</code>.
     */
    static validateJSON(data) {
        // validate the optional field `clusterupgrade`
        if (data['clusterupgrade']) { // data not null
          ClusterUpgradeScopeState.validateJSON(data['clusterupgrade']);
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          FeatureState.validateJSON(data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/ClusterUpgradeScopeState} clusterupgrade
 */
ScopeFeatureState.prototype['clusterupgrade'] = undefined;

/**
 * @member {module:model/FeatureState} state
 */
ScopeFeatureState.prototype['state'] = undefined;






export default ScopeFeatureState;

