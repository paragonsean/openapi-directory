/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NamespaceActuationFeatureSpec model module.
 * @module model/NamespaceActuationFeatureSpec
 * @version v1alpha
 */
class NamespaceActuationFeatureSpec {
    /**
     * Constructs a new <code>NamespaceActuationFeatureSpec</code>.
     * An empty spec for actuation feature. This is required since Feature proto requires a spec.
     * @alias module:model/NamespaceActuationFeatureSpec
     */
    constructor() { 
        
        NamespaceActuationFeatureSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NamespaceActuationFeatureSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NamespaceActuationFeatureSpec} obj Optional instance to populate.
     * @return {module:model/NamespaceActuationFeatureSpec} The populated <code>NamespaceActuationFeatureSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NamespaceActuationFeatureSpec();

            if (data.hasOwnProperty('actuationMode')) {
                obj['actuationMode'] = ApiClient.convertToType(data['actuationMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NamespaceActuationFeatureSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NamespaceActuationFeatureSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['actuationMode'] && !(typeof data['actuationMode'] === 'string' || data['actuationMode'] instanceof String)) {
            throw new Error("Expected the field `actuationMode` to be a primitive type in the JSON string but got " + data['actuationMode']);
        }

        return true;
    }


}



/**
 * actuation_mode controls the behavior of the controller
 * @member {module:model/NamespaceActuationFeatureSpec.ActuationModeEnum} actuationMode
 */
NamespaceActuationFeatureSpec.prototype['actuationMode'] = undefined;





/**
 * Allowed values for the <code>actuationMode</code> property.
 * @enum {String}
 * @readonly
 */
NamespaceActuationFeatureSpec['ActuationModeEnum'] = {

    /**
     * value: "ACTUATION_MODE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ACTUATION_MODE_UNSPECIFIED",

    /**
     * value: "ACTUATION_MODE_CREATE_AND_DELETE_IF_CREATED"
     * @const
     */
    "CREATE_AND_DELETE_IF_CREATED": "ACTUATION_MODE_CREATE_AND_DELETE_IF_CREATED",

    /**
     * value: "ACTUATION_MODE_ADD_AND_REMOVE_FLEET_LABELS"
     * @const
     */
    "ADD_AND_REMOVE_FLEET_LABELS": "ACTUATION_MODE_ADD_AND_REMOVE_FLEET_LABELS"
};



export default NamespaceActuationFeatureSpec;

