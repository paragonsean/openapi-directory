/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppDevExperienceFeatureState from './AppDevExperienceFeatureState';
import ClusterUpgradeFleetState from './ClusterUpgradeFleetState';
import FeatureState from './FeatureState';
import FleetObservabilityFeatureState from './FleetObservabilityFeatureState';
import ServiceMeshFeatureState from './ServiceMeshFeatureState';

/**
 * The CommonFeatureState model module.
 * @module model/CommonFeatureState
 * @version v1alpha
 */
class CommonFeatureState {
    /**
     * Constructs a new <code>CommonFeatureState</code>.
     * CommonFeatureState contains Hub-wide Feature status information.
     * @alias module:model/CommonFeatureState
     */
    constructor() { 
        
        CommonFeatureState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommonFeatureState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommonFeatureState} obj Optional instance to populate.
     * @return {module:model/CommonFeatureState} The populated <code>CommonFeatureState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommonFeatureState();

            if (data.hasOwnProperty('appdevexperience')) {
                obj['appdevexperience'] = AppDevExperienceFeatureState.constructFromObject(data['appdevexperience']);
            }
            if (data.hasOwnProperty('clusterupgrade')) {
                obj['clusterupgrade'] = ClusterUpgradeFleetState.constructFromObject(data['clusterupgrade']);
            }
            if (data.hasOwnProperty('fleetobservability')) {
                obj['fleetobservability'] = FleetObservabilityFeatureState.constructFromObject(data['fleetobservability']);
            }
            if (data.hasOwnProperty('namespaceactuation')) {
                obj['namespaceactuation'] = ApiClient.convertToType(data['namespaceactuation'], Object);
            }
            if (data.hasOwnProperty('servicemesh')) {
                obj['servicemesh'] = ServiceMeshFeatureState.constructFromObject(data['servicemesh']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = FeatureState.constructFromObject(data['state']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommonFeatureState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommonFeatureState</code>.
     */
    static validateJSON(data) {
        // validate the optional field `appdevexperience`
        if (data['appdevexperience']) { // data not null
          AppDevExperienceFeatureState.validateJSON(data['appdevexperience']);
        }
        // validate the optional field `clusterupgrade`
        if (data['clusterupgrade']) { // data not null
          ClusterUpgradeFleetState.validateJSON(data['clusterupgrade']);
        }
        // validate the optional field `fleetobservability`
        if (data['fleetobservability']) { // data not null
          FleetObservabilityFeatureState.validateJSON(data['fleetobservability']);
        }
        // validate the optional field `servicemesh`
        if (data['servicemesh']) { // data not null
          ServiceMeshFeatureState.validateJSON(data['servicemesh']);
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          FeatureState.validateJSON(data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppDevExperienceFeatureState} appdevexperience
 */
CommonFeatureState.prototype['appdevexperience'] = undefined;

/**
 * @member {module:model/ClusterUpgradeFleetState} clusterupgrade
 */
CommonFeatureState.prototype['clusterupgrade'] = undefined;

/**
 * @member {module:model/FleetObservabilityFeatureState} fleetobservability
 */
CommonFeatureState.prototype['fleetobservability'] = undefined;

/**
 * NamespaceActuation Feature State.
 * @member {Object} namespaceactuation
 */
CommonFeatureState.prototype['namespaceactuation'] = undefined;

/**
 * @member {module:model/ServiceMeshFeatureState} servicemesh
 */
CommonFeatureState.prototype['servicemesh'] = undefined;

/**
 * @member {module:model/FeatureState} state
 */
CommonFeatureState.prototype['state'] = undefined;






export default CommonFeatureState;

