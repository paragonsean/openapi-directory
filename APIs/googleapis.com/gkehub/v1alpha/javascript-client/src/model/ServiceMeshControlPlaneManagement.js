/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceMeshStatusDetails from './ServiceMeshStatusDetails';

/**
 * The ServiceMeshControlPlaneManagement model module.
 * @module model/ServiceMeshControlPlaneManagement
 * @version v1alpha
 */
class ServiceMeshControlPlaneManagement {
    /**
     * Constructs a new <code>ServiceMeshControlPlaneManagement</code>.
     * Status of control plane management.
     * @alias module:model/ServiceMeshControlPlaneManagement
     */
    constructor() { 
        
        ServiceMeshControlPlaneManagement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceMeshControlPlaneManagement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceMeshControlPlaneManagement} obj Optional instance to populate.
     * @return {module:model/ServiceMeshControlPlaneManagement} The populated <code>ServiceMeshControlPlaneManagement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceMeshControlPlaneManagement();

            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], [ServiceMeshStatusDetails]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceMeshControlPlaneManagement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceMeshControlPlaneManagement</code>.
     */
    static validateJSON(data) {
        if (data['details']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['details'])) {
                throw new Error("Expected the field `details` to be an array in the JSON data but got " + data['details']);
            }
            // validate the optional field `details` (array)
            for (const item of data['details']) {
                ServiceMeshStatusDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * Explanation of state.
 * @member {Array.<module:model/ServiceMeshStatusDetails>} details
 */
ServiceMeshControlPlaneManagement.prototype['details'] = undefined;

/**
 * LifecycleState of control plane management.
 * @member {module:model/ServiceMeshControlPlaneManagement.StateEnum} state
 */
ServiceMeshControlPlaneManagement.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ServiceMeshControlPlaneManagement['StateEnum'] = {

    /**
     * value: "LIFECYCLE_STATE_UNSPECIFIED"
     * @const
     */
    "LIFECYCLE_STATE_UNSPECIFIED": "LIFECYCLE_STATE_UNSPECIFIED",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED",

    /**
     * value: "FAILED_PRECONDITION"
     * @const
     */
    "FAILED_PRECONDITION": "FAILED_PRECONDITION",

    /**
     * value: "PROVISIONING"
     * @const
     */
    "PROVISIONING": "PROVISIONING",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "STALLED"
     * @const
     */
    "STALLED": "STALLED",

    /**
     * value: "NEEDS_ATTENTION"
     * @const
     */
    "NEEDS_ATTENTION": "NEEDS_ATTENTION",

    /**
     * value: "DEGRADED"
     * @const
     */
    "DEGRADED": "DEGRADED"
};



export default ServiceMeshControlPlaneManagement;

