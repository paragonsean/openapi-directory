/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PolicyBinding from './PolicyBinding';

/**
 * The BinaryAuthorizationConfig model module.
 * @module model/BinaryAuthorizationConfig
 * @version v1alpha
 */
class BinaryAuthorizationConfig {
    /**
     * Constructs a new <code>BinaryAuthorizationConfig</code>.
     * BinaryAuthorizationConfig defines the fleet level configuration of binary authorization feature.
     * @alias module:model/BinaryAuthorizationConfig
     */
    constructor() { 
        
        BinaryAuthorizationConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BinaryAuthorizationConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BinaryAuthorizationConfig} obj Optional instance to populate.
     * @return {module:model/BinaryAuthorizationConfig} The populated <code>BinaryAuthorizationConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BinaryAuthorizationConfig();

            if (data.hasOwnProperty('evaluationMode')) {
                obj['evaluationMode'] = ApiClient.convertToType(data['evaluationMode'], 'String');
            }
            if (data.hasOwnProperty('policyBindings')) {
                obj['policyBindings'] = ApiClient.convertToType(data['policyBindings'], [PolicyBinding]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BinaryAuthorizationConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BinaryAuthorizationConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['evaluationMode'] && !(typeof data['evaluationMode'] === 'string' || data['evaluationMode'] instanceof String)) {
            throw new Error("Expected the field `evaluationMode` to be a primitive type in the JSON string but got " + data['evaluationMode']);
        }
        if (data['policyBindings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['policyBindings'])) {
                throw new Error("Expected the field `policyBindings` to be an array in the JSON data but got " + data['policyBindings']);
            }
            // validate the optional field `policyBindings` (array)
            for (const item of data['policyBindings']) {
                PolicyBinding.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Optional. Mode of operation for binauthz policy evaluation.
 * @member {module:model/BinaryAuthorizationConfig.EvaluationModeEnum} evaluationMode
 */
BinaryAuthorizationConfig.prototype['evaluationMode'] = undefined;

/**
 * Optional. Binauthz policies that apply to this cluster.
 * @member {Array.<module:model/PolicyBinding>} policyBindings
 */
BinaryAuthorizationConfig.prototype['policyBindings'] = undefined;





/**
 * Allowed values for the <code>evaluationMode</code> property.
 * @enum {String}
 * @readonly
 */
BinaryAuthorizationConfig['EvaluationModeEnum'] = {

    /**
     * value: "EVALUATION_MODE_UNSPECIFIED"
     * @const
     */
    "EVALUATION_MODE_UNSPECIFIED": "EVALUATION_MODE_UNSPECIFIED",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED",

    /**
     * value: "POLICY_BINDINGS"
     * @const
     */
    "POLICY_BINDINGS": "POLICY_BINDINGS"
};



export default BinaryAuthorizationConfig;

