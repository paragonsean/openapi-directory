/*
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ApplianceCluster;
import org.openapitools.client.model.EdgeCluster;
import org.openapitools.client.model.GkeCluster;
import org.openapitools.client.model.KubernetesMetadata;
import org.openapitools.client.model.KubernetesResource;
import org.openapitools.client.model.MultiCloudCluster;
import org.openapitools.client.model.OnPremCluster;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:59.609206-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MembershipEndpoint {
  public static final String SERIALIZED_NAME_APPLIANCE_CLUSTER = "applianceCluster";
  @SerializedName(SERIALIZED_NAME_APPLIANCE_CLUSTER)
  private ApplianceCluster applianceCluster;

  public static final String SERIALIZED_NAME_EDGE_CLUSTER = "edgeCluster";
  @SerializedName(SERIALIZED_NAME_EDGE_CLUSTER)
  private EdgeCluster edgeCluster;

  public static final String SERIALIZED_NAME_GKE_CLUSTER = "gkeCluster";
  @SerializedName(SERIALIZED_NAME_GKE_CLUSTER)
  private GkeCluster gkeCluster;

  public static final String SERIALIZED_NAME_GOOGLE_MANAGED = "googleManaged";
  @SerializedName(SERIALIZED_NAME_GOOGLE_MANAGED)
  private Boolean googleManaged;

  public static final String SERIALIZED_NAME_KUBERNETES_METADATA = "kubernetesMetadata";
  @SerializedName(SERIALIZED_NAME_KUBERNETES_METADATA)
  private KubernetesMetadata kubernetesMetadata;

  public static final String SERIALIZED_NAME_KUBERNETES_RESOURCE = "kubernetesResource";
  @SerializedName(SERIALIZED_NAME_KUBERNETES_RESOURCE)
  private KubernetesResource kubernetesResource;

  public static final String SERIALIZED_NAME_MULTI_CLOUD_CLUSTER = "multiCloudCluster";
  @SerializedName(SERIALIZED_NAME_MULTI_CLOUD_CLUSTER)
  private MultiCloudCluster multiCloudCluster;

  public static final String SERIALIZED_NAME_ON_PREM_CLUSTER = "onPremCluster";
  @SerializedName(SERIALIZED_NAME_ON_PREM_CLUSTER)
  private OnPremCluster onPremCluster;

  public MembershipEndpoint() {
  }

  public MembershipEndpoint(
     Boolean googleManaged
  ) {
    this();
    this.googleManaged = googleManaged;
  }

  public MembershipEndpoint applianceCluster(ApplianceCluster applianceCluster) {
    this.applianceCluster = applianceCluster;
    return this;
  }

  /**
   * Get applianceCluster
   * @return applianceCluster
   */
  @javax.annotation.Nullable
  public ApplianceCluster getApplianceCluster() {
    return applianceCluster;
  }

  public void setApplianceCluster(ApplianceCluster applianceCluster) {
    this.applianceCluster = applianceCluster;
  }


  public MembershipEndpoint edgeCluster(EdgeCluster edgeCluster) {
    this.edgeCluster = edgeCluster;
    return this;
  }

  /**
   * Get edgeCluster
   * @return edgeCluster
   */
  @javax.annotation.Nullable
  public EdgeCluster getEdgeCluster() {
    return edgeCluster;
  }

  public void setEdgeCluster(EdgeCluster edgeCluster) {
    this.edgeCluster = edgeCluster;
  }


  public MembershipEndpoint gkeCluster(GkeCluster gkeCluster) {
    this.gkeCluster = gkeCluster;
    return this;
  }

  /**
   * Get gkeCluster
   * @return gkeCluster
   */
  @javax.annotation.Nullable
  public GkeCluster getGkeCluster() {
    return gkeCluster;
  }

  public void setGkeCluster(GkeCluster gkeCluster) {
    this.gkeCluster = gkeCluster;
  }


  /**
   * Output only. Whether the lifecycle of this membership is managed by a google cluster platform service.
   * @return googleManaged
   */
  @javax.annotation.Nullable
  public Boolean getGoogleManaged() {
    return googleManaged;
  }



  public MembershipEndpoint kubernetesMetadata(KubernetesMetadata kubernetesMetadata) {
    this.kubernetesMetadata = kubernetesMetadata;
    return this;
  }

  /**
   * Get kubernetesMetadata
   * @return kubernetesMetadata
   */
  @javax.annotation.Nullable
  public KubernetesMetadata getKubernetesMetadata() {
    return kubernetesMetadata;
  }

  public void setKubernetesMetadata(KubernetesMetadata kubernetesMetadata) {
    this.kubernetesMetadata = kubernetesMetadata;
  }


  public MembershipEndpoint kubernetesResource(KubernetesResource kubernetesResource) {
    this.kubernetesResource = kubernetesResource;
    return this;
  }

  /**
   * Get kubernetesResource
   * @return kubernetesResource
   */
  @javax.annotation.Nullable
  public KubernetesResource getKubernetesResource() {
    return kubernetesResource;
  }

  public void setKubernetesResource(KubernetesResource kubernetesResource) {
    this.kubernetesResource = kubernetesResource;
  }


  public MembershipEndpoint multiCloudCluster(MultiCloudCluster multiCloudCluster) {
    this.multiCloudCluster = multiCloudCluster;
    return this;
  }

  /**
   * Get multiCloudCluster
   * @return multiCloudCluster
   */
  @javax.annotation.Nullable
  public MultiCloudCluster getMultiCloudCluster() {
    return multiCloudCluster;
  }

  public void setMultiCloudCluster(MultiCloudCluster multiCloudCluster) {
    this.multiCloudCluster = multiCloudCluster;
  }


  public MembershipEndpoint onPremCluster(OnPremCluster onPremCluster) {
    this.onPremCluster = onPremCluster;
    return this;
  }

  /**
   * Get onPremCluster
   * @return onPremCluster
   */
  @javax.annotation.Nullable
  public OnPremCluster getOnPremCluster() {
    return onPremCluster;
  }

  public void setOnPremCluster(OnPremCluster onPremCluster) {
    this.onPremCluster = onPremCluster;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MembershipEndpoint membershipEndpoint = (MembershipEndpoint) o;
    return Objects.equals(this.applianceCluster, membershipEndpoint.applianceCluster) &&
        Objects.equals(this.edgeCluster, membershipEndpoint.edgeCluster) &&
        Objects.equals(this.gkeCluster, membershipEndpoint.gkeCluster) &&
        Objects.equals(this.googleManaged, membershipEndpoint.googleManaged) &&
        Objects.equals(this.kubernetesMetadata, membershipEndpoint.kubernetesMetadata) &&
        Objects.equals(this.kubernetesResource, membershipEndpoint.kubernetesResource) &&
        Objects.equals(this.multiCloudCluster, membershipEndpoint.multiCloudCluster) &&
        Objects.equals(this.onPremCluster, membershipEndpoint.onPremCluster);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applianceCluster, edgeCluster, gkeCluster, googleManaged, kubernetesMetadata, kubernetesResource, multiCloudCluster, onPremCluster);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MembershipEndpoint {\n");
    sb.append("    applianceCluster: ").append(toIndentedString(applianceCluster)).append("\n");
    sb.append("    edgeCluster: ").append(toIndentedString(edgeCluster)).append("\n");
    sb.append("    gkeCluster: ").append(toIndentedString(gkeCluster)).append("\n");
    sb.append("    googleManaged: ").append(toIndentedString(googleManaged)).append("\n");
    sb.append("    kubernetesMetadata: ").append(toIndentedString(kubernetesMetadata)).append("\n");
    sb.append("    kubernetesResource: ").append(toIndentedString(kubernetesResource)).append("\n");
    sb.append("    multiCloudCluster: ").append(toIndentedString(multiCloudCluster)).append("\n");
    sb.append("    onPremCluster: ").append(toIndentedString(onPremCluster)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("applianceCluster");
    openapiFields.add("edgeCluster");
    openapiFields.add("gkeCluster");
    openapiFields.add("googleManaged");
    openapiFields.add("kubernetesMetadata");
    openapiFields.add("kubernetesResource");
    openapiFields.add("multiCloudCluster");
    openapiFields.add("onPremCluster");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MembershipEndpoint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MembershipEndpoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MembershipEndpoint is not found in the empty JSON string", MembershipEndpoint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MembershipEndpoint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MembershipEndpoint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `applianceCluster`
      if (jsonObj.get("applianceCluster") != null && !jsonObj.get("applianceCluster").isJsonNull()) {
        ApplianceCluster.validateJsonElement(jsonObj.get("applianceCluster"));
      }
      // validate the optional field `edgeCluster`
      if (jsonObj.get("edgeCluster") != null && !jsonObj.get("edgeCluster").isJsonNull()) {
        EdgeCluster.validateJsonElement(jsonObj.get("edgeCluster"));
      }
      // validate the optional field `gkeCluster`
      if (jsonObj.get("gkeCluster") != null && !jsonObj.get("gkeCluster").isJsonNull()) {
        GkeCluster.validateJsonElement(jsonObj.get("gkeCluster"));
      }
      // validate the optional field `kubernetesMetadata`
      if (jsonObj.get("kubernetesMetadata") != null && !jsonObj.get("kubernetesMetadata").isJsonNull()) {
        KubernetesMetadata.validateJsonElement(jsonObj.get("kubernetesMetadata"));
      }
      // validate the optional field `kubernetesResource`
      if (jsonObj.get("kubernetesResource") != null && !jsonObj.get("kubernetesResource").isJsonNull()) {
        KubernetesResource.validateJsonElement(jsonObj.get("kubernetesResource"));
      }
      // validate the optional field `multiCloudCluster`
      if (jsonObj.get("multiCloudCluster") != null && !jsonObj.get("multiCloudCluster").isJsonNull()) {
        MultiCloudCluster.validateJsonElement(jsonObj.get("multiCloudCluster"));
      }
      // validate the optional field `onPremCluster`
      if (jsonObj.get("onPremCluster") != null && !jsonObj.get("onPremCluster").isJsonNull()) {
        OnPremCluster.validateJsonElement(jsonObj.get("onPremCluster"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MembershipEndpoint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MembershipEndpoint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MembershipEndpoint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MembershipEndpoint.class));

       return (TypeAdapter<T>) new TypeAdapter<MembershipEndpoint>() {
           @Override
           public void write(JsonWriter out, MembershipEndpoint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MembershipEndpoint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MembershipEndpoint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MembershipEndpoint
   * @throws IOException if the JSON string is invalid with respect to MembershipEndpoint
   */
  public static MembershipEndpoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MembershipEndpoint.class);
  }

  /**
   * Convert an instance of MembershipEndpoint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

