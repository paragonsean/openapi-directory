/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigManagementHierarchyControllerState.h
 *
 * State for Hierarchy Controller
 */

#ifndef OAIConfigManagementHierarchyControllerState_H
#define OAIConfigManagementHierarchyControllerState_H

#include <QJsonObject>

#include "OAIConfigManagementHierarchyControllerDeploymentState.h"
#include "OAIConfigManagementHierarchyControllerVersion.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConfigManagementHierarchyControllerDeploymentState;
class OAIConfigManagementHierarchyControllerVersion;

class OAIConfigManagementHierarchyControllerState : public OAIObject {
public:
    OAIConfigManagementHierarchyControllerState();
    OAIConfigManagementHierarchyControllerState(QString json);
    ~OAIConfigManagementHierarchyControllerState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigManagementHierarchyControllerDeploymentState getState() const;
    void setState(const OAIConfigManagementHierarchyControllerDeploymentState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIConfigManagementHierarchyControllerVersion getVersion() const;
    void setVersion(const OAIConfigManagementHierarchyControllerVersion &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConfigManagementHierarchyControllerDeploymentState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIConfigManagementHierarchyControllerVersion m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigManagementHierarchyControllerState)

#endif // OAIConfigManagementHierarchyControllerState_H
