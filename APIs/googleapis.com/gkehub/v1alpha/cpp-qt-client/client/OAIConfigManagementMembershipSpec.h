/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigManagementMembershipSpec.h
 *
 * **Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.
 */

#ifndef OAIConfigManagementMembershipSpec_H
#define OAIConfigManagementMembershipSpec_H

#include <QJsonObject>

#include "OAIConfigManagementBinauthzConfig.h"
#include "OAIConfigManagementConfigSync.h"
#include "OAIConfigManagementHierarchyControllerConfig.h"
#include "OAIConfigManagementPolicyController.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConfigManagementBinauthzConfig;
class OAIConfigManagementConfigSync;
class OAIConfigManagementHierarchyControllerConfig;
class OAIConfigManagementPolicyController;

class OAIConfigManagementMembershipSpec : public OAIObject {
public:
    OAIConfigManagementMembershipSpec();
    OAIConfigManagementMembershipSpec(QString json);
    ~OAIConfigManagementMembershipSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigManagementBinauthzConfig getBinauthz() const;
    void setBinauthz(const OAIConfigManagementBinauthzConfig &binauthz);
    bool is_binauthz_Set() const;
    bool is_binauthz_Valid() const;

    QString getCluster() const;
    void setCluster(const QString &cluster);
    bool is_cluster_Set() const;
    bool is_cluster_Valid() const;

    OAIConfigManagementConfigSync getConfigSync() const;
    void setConfigSync(const OAIConfigManagementConfigSync &config_sync);
    bool is_config_sync_Set() const;
    bool is_config_sync_Valid() const;

    OAIConfigManagementHierarchyControllerConfig getHierarchyController() const;
    void setHierarchyController(const OAIConfigManagementHierarchyControllerConfig &hierarchy_controller);
    bool is_hierarchy_controller_Set() const;
    bool is_hierarchy_controller_Valid() const;

    QString getManagement() const;
    void setManagement(const QString &management);
    bool is_management_Set() const;
    bool is_management_Valid() const;

    OAIConfigManagementPolicyController getPolicyController() const;
    void setPolicyController(const OAIConfigManagementPolicyController &policy_controller);
    bool is_policy_controller_Set() const;
    bool is_policy_controller_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConfigManagementBinauthzConfig m_binauthz;
    bool m_binauthz_isSet;
    bool m_binauthz_isValid;

    QString m_cluster;
    bool m_cluster_isSet;
    bool m_cluster_isValid;

    OAIConfigManagementConfigSync m_config_sync;
    bool m_config_sync_isSet;
    bool m_config_sync_isValid;

    OAIConfigManagementHierarchyControllerConfig m_hierarchy_controller;
    bool m_hierarchy_controller_isSet;
    bool m_hierarchy_controller_isValid;

    QString m_management;
    bool m_management_isSet;
    bool m_management_isValid;

    OAIConfigManagementPolicyController m_policy_controller;
    bool m_policy_controller_isSet;
    bool m_policy_controller_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigManagementMembershipSpec)

#endif // OAIConfigManagementMembershipSpec_H
