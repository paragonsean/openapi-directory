/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentityServiceOidcConfig.h
 *
 * Configuration for OIDC Auth flow.
 */

#ifndef OAIIdentityServiceOidcConfig_H
#define OAIIdentityServiceOidcConfig_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdentityServiceOidcConfig : public OAIObject {
public:
    OAIIdentityServiceOidcConfig();
    OAIIdentityServiceOidcConfig(QString json);
    ~OAIIdentityServiceOidcConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertificateAuthorityData() const;
    void setCertificateAuthorityData(const QString &certificate_authority_data);
    bool is_certificate_authority_data_Set() const;
    bool is_certificate_authority_data_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getClientSecret() const;
    void setClientSecret(const QString &client_secret);
    bool is_client_secret_Set() const;
    bool is_client_secret_Valid() const;

    bool isDeployCloudConsoleProxy() const;
    void setDeployCloudConsoleProxy(const bool &deploy_cloud_console_proxy);
    bool is_deploy_cloud_console_proxy_Set() const;
    bool is_deploy_cloud_console_proxy_Valid() const;

    bool isEnableAccessToken() const;
    void setEnableAccessToken(const bool &enable_access_token);
    bool is_enable_access_token_Set() const;
    bool is_enable_access_token_Valid() const;

    QByteArray getEncryptedClientSecret() const;
    void setEncryptedClientSecret(const QByteArray &encrypted_client_secret);
    bool is_encrypted_client_secret_Set() const;
    bool is_encrypted_client_secret_Valid() const;

    QString getExtraParams() const;
    void setExtraParams(const QString &extra_params);
    bool is_extra_params_Set() const;
    bool is_extra_params_Valid() const;

    QString getGroupPrefix() const;
    void setGroupPrefix(const QString &group_prefix);
    bool is_group_prefix_Set() const;
    bool is_group_prefix_Valid() const;

    QString getGroupsClaim() const;
    void setGroupsClaim(const QString &groups_claim);
    bool is_groups_claim_Set() const;
    bool is_groups_claim_Valid() const;

    QString getIssuerUri() const;
    void setIssuerUri(const QString &issuer_uri);
    bool is_issuer_uri_Set() const;
    bool is_issuer_uri_Valid() const;

    QString getKubectlRedirectUri() const;
    void setKubectlRedirectUri(const QString &kubectl_redirect_uri);
    bool is_kubectl_redirect_uri_Set() const;
    bool is_kubectl_redirect_uri_Valid() const;

    QString getScopes() const;
    void setScopes(const QString &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    QString getUserClaim() const;
    void setUserClaim(const QString &user_claim);
    bool is_user_claim_Set() const;
    bool is_user_claim_Valid() const;

    QString getUserPrefix() const;
    void setUserPrefix(const QString &user_prefix);
    bool is_user_prefix_Set() const;
    bool is_user_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_certificate_authority_data;
    bool m_certificate_authority_data_isSet;
    bool m_certificate_authority_data_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_client_secret;
    bool m_client_secret_isSet;
    bool m_client_secret_isValid;

    bool m_deploy_cloud_console_proxy;
    bool m_deploy_cloud_console_proxy_isSet;
    bool m_deploy_cloud_console_proxy_isValid;

    bool m_enable_access_token;
    bool m_enable_access_token_isSet;
    bool m_enable_access_token_isValid;

    QByteArray m_encrypted_client_secret;
    bool m_encrypted_client_secret_isSet;
    bool m_encrypted_client_secret_isValid;

    QString m_extra_params;
    bool m_extra_params_isSet;
    bool m_extra_params_isValid;

    QString m_group_prefix;
    bool m_group_prefix_isSet;
    bool m_group_prefix_isValid;

    QString m_groups_claim;
    bool m_groups_claim_isSet;
    bool m_groups_claim_isValid;

    QString m_issuer_uri;
    bool m_issuer_uri_isSet;
    bool m_issuer_uri_isValid;

    QString m_kubectl_redirect_uri;
    bool m_kubectl_redirect_uri_isSet;
    bool m_kubectl_redirect_uri_isValid;

    QString m_scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;

    QString m_user_claim;
    bool m_user_claim_isSet;
    bool m_user_claim_isValid;

    QString m_user_prefix;
    bool m_user_prefix_isSet;
    bool m_user_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentityServiceOidcConfig)

#endif // OAIIdentityServiceOidcConfig_H
