/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPolicyControllerMonitoringConfig.h
 *
 * MonitoringConfig specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\&quot;cloudmonitoring\&quot;, \&quot;prometheus\&quot;]
 */

#ifndef OAIPolicyControllerMonitoringConfig_H
#define OAIPolicyControllerMonitoringConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPolicyControllerMonitoringConfig : public OAIObject {
public:
    OAIPolicyControllerMonitoringConfig();
    OAIPolicyControllerMonitoringConfig(QString json);
    ~OAIPolicyControllerMonitoringConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getBackends() const;
    void setBackends(const QList<QString> &backends);
    bool is_backends_Set() const;
    bool is_backends_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_backends;
    bool m_backends_isSet;
    bool m_backends_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPolicyControllerMonitoringConfig)

#endif // OAIPolicyControllerMonitoringConfig_H
