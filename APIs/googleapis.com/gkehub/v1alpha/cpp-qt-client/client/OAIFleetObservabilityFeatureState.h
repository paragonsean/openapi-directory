/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFleetObservabilityFeatureState.h
 *
 * **FleetObservability**: Hub-wide Feature for FleetObservability feature. state.
 */

#ifndef OAIFleetObservabilityFeatureState_H
#define OAIFleetObservabilityFeatureState_H

#include <QJsonObject>

#include "OAIFleetObservabilityFleetObservabilityLoggingState.h"
#include "OAIFleetObservabilityFleetObservabilityMonitoringState.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFleetObservabilityFleetObservabilityLoggingState;
class OAIFleetObservabilityFleetObservabilityMonitoringState;

class OAIFleetObservabilityFeatureState : public OAIObject {
public:
    OAIFleetObservabilityFeatureState();
    OAIFleetObservabilityFeatureState(QString json);
    ~OAIFleetObservabilityFeatureState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFleetObservabilityFleetObservabilityLoggingState getLogging() const;
    void setLogging(const OAIFleetObservabilityFleetObservabilityLoggingState &logging);
    bool is_logging_Set() const;
    bool is_logging_Valid() const;

    OAIFleetObservabilityFleetObservabilityMonitoringState getMonitoring() const;
    void setMonitoring(const OAIFleetObservabilityFleetObservabilityMonitoringState &monitoring);
    bool is_monitoring_Set() const;
    bool is_monitoring_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFleetObservabilityFleetObservabilityLoggingState m_logging;
    bool m_logging_isSet;
    bool m_logging_isValid;

    OAIFleetObservabilityFleetObservabilityMonitoringState m_monitoring;
    bool m_monitoring_isSet;
    bool m_monitoring_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFleetObservabilityFeatureState)

#endif // OAIFleetObservabilityFeatureState_H
