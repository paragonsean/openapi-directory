/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKubernetesMetadata.h
 *
 * KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
 */

#ifndef OAIKubernetesMetadata_H
#define OAIKubernetesMetadata_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKubernetesMetadata : public OAIObject {
public:
    OAIKubernetesMetadata();
    OAIKubernetesMetadata(QString json);
    ~OAIKubernetesMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKubernetesApiServerVersion() const;
    void setKubernetesApiServerVersion(const QString &kubernetes_api_server_version);
    bool is_kubernetes_api_server_version_Set() const;
    bool is_kubernetes_api_server_version_Valid() const;

    qint32 getMemoryMb() const;
    void setMemoryMb(const qint32 &memory_mb);
    bool is_memory_mb_Set() const;
    bool is_memory_mb_Valid() const;

    qint32 getNodeCount() const;
    void setNodeCount(const qint32 &node_count);
    bool is_node_count_Set() const;
    bool is_node_count_Valid() const;

    QString getNodeProviderId() const;
    void setNodeProviderId(const QString &node_provider_id);
    bool is_node_provider_id_Set() const;
    bool is_node_provider_id_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    qint32 getVcpuCount() const;
    void setVcpuCount(const qint32 &vcpu_count);
    bool is_vcpu_count_Set() const;
    bool is_vcpu_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_kubernetes_api_server_version;
    bool m_kubernetes_api_server_version_isSet;
    bool m_kubernetes_api_server_version_isValid;

    qint32 m_memory_mb;
    bool m_memory_mb_isSet;
    bool m_memory_mb_isValid;

    qint32 m_node_count;
    bool m_node_count_isSet;
    bool m_node_count_isValid;

    QString m_node_provider_id;
    bool m_node_provider_id_isSet;
    bool m_node_provider_id_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    qint32 m_vcpu_count;
    bool m_vcpu_count_isSet;
    bool m_vcpu_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKubernetesMetadata)

#endif // OAIKubernetesMetadata_H
