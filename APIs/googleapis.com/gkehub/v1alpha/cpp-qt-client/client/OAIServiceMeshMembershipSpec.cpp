/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceMeshMembershipSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceMeshMembershipSpec::OAIServiceMeshMembershipSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceMeshMembershipSpec::OAIServiceMeshMembershipSpec() {
    this->initializeModel();
}

OAIServiceMeshMembershipSpec::~OAIServiceMeshMembershipSpec() {}

void OAIServiceMeshMembershipSpec::initializeModel() {

    m_control_plane_isSet = false;
    m_control_plane_isValid = false;

    m_default_channel_isSet = false;
    m_default_channel_isValid = false;

    m_management_isSet = false;
    m_management_isValid = false;
}

void OAIServiceMeshMembershipSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceMeshMembershipSpec::fromJsonObject(QJsonObject json) {

    m_control_plane_isValid = ::OpenAPI::fromJsonValue(m_control_plane, json[QString("controlPlane")]);
    m_control_plane_isSet = !json[QString("controlPlane")].isNull() && m_control_plane_isValid;

    m_default_channel_isValid = ::OpenAPI::fromJsonValue(m_default_channel, json[QString("defaultChannel")]);
    m_default_channel_isSet = !json[QString("defaultChannel")].isNull() && m_default_channel_isValid;

    m_management_isValid = ::OpenAPI::fromJsonValue(m_management, json[QString("management")]);
    m_management_isSet = !json[QString("management")].isNull() && m_management_isValid;
}

QString OAIServiceMeshMembershipSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceMeshMembershipSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_control_plane_isSet) {
        obj.insert(QString("controlPlane"), ::OpenAPI::toJsonValue(m_control_plane));
    }
    if (m_default_channel_isSet) {
        obj.insert(QString("defaultChannel"), ::OpenAPI::toJsonValue(m_default_channel));
    }
    if (m_management_isSet) {
        obj.insert(QString("management"), ::OpenAPI::toJsonValue(m_management));
    }
    return obj;
}

QString OAIServiceMeshMembershipSpec::getControlPlane() const {
    return m_control_plane;
}
void OAIServiceMeshMembershipSpec::setControlPlane(const QString &control_plane) {
    m_control_plane = control_plane;
    m_control_plane_isSet = true;
}

bool OAIServiceMeshMembershipSpec::is_control_plane_Set() const{
    return m_control_plane_isSet;
}

bool OAIServiceMeshMembershipSpec::is_control_plane_Valid() const{
    return m_control_plane_isValid;
}

QString OAIServiceMeshMembershipSpec::getDefaultChannel() const {
    return m_default_channel;
}
void OAIServiceMeshMembershipSpec::setDefaultChannel(const QString &default_channel) {
    m_default_channel = default_channel;
    m_default_channel_isSet = true;
}

bool OAIServiceMeshMembershipSpec::is_default_channel_Set() const{
    return m_default_channel_isSet;
}

bool OAIServiceMeshMembershipSpec::is_default_channel_Valid() const{
    return m_default_channel_isValid;
}

QString OAIServiceMeshMembershipSpec::getManagement() const {
    return m_management;
}
void OAIServiceMeshMembershipSpec::setManagement(const QString &management) {
    m_management = management;
    m_management_isSet = true;
}

bool OAIServiceMeshMembershipSpec::is_management_Set() const{
    return m_management_isSet;
}

bool OAIServiceMeshMembershipSpec::is_management_Valid() const{
    return m_management_isValid;
}

bool OAIServiceMeshMembershipSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_control_plane_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_channel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_management_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceMeshMembershipSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
