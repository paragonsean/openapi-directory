/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigManagementGatekeeperDeploymentState.h
 *
 * State of Policy Controller installation.
 */

#ifndef OAIConfigManagementGatekeeperDeploymentState_H
#define OAIConfigManagementGatekeeperDeploymentState_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConfigManagementGatekeeperDeploymentState : public OAIObject {
public:
    OAIConfigManagementGatekeeperDeploymentState();
    OAIConfigManagementGatekeeperDeploymentState(QString json);
    ~OAIConfigManagementGatekeeperDeploymentState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGatekeeperAudit() const;
    void setGatekeeperAudit(const QString &gatekeeper_audit);
    bool is_gatekeeper_audit_Set() const;
    bool is_gatekeeper_audit_Valid() const;

    QString getGatekeeperControllerManagerState() const;
    void setGatekeeperControllerManagerState(const QString &gatekeeper_controller_manager_state);
    bool is_gatekeeper_controller_manager_state_Set() const;
    bool is_gatekeeper_controller_manager_state_Valid() const;

    QString getGatekeeperMutation() const;
    void setGatekeeperMutation(const QString &gatekeeper_mutation);
    bool is_gatekeeper_mutation_Set() const;
    bool is_gatekeeper_mutation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gatekeeper_audit;
    bool m_gatekeeper_audit_isSet;
    bool m_gatekeeper_audit_isValid;

    QString m_gatekeeper_controller_manager_state;
    bool m_gatekeeper_controller_manager_state_isSet;
    bool m_gatekeeper_controller_manager_state_isValid;

    QString m_gatekeeper_mutation;
    bool m_gatekeeper_mutation_isSet;
    bool m_gatekeeper_mutation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigManagementGatekeeperDeploymentState)

#endif // OAIConfigManagementGatekeeperDeploymentState_H
