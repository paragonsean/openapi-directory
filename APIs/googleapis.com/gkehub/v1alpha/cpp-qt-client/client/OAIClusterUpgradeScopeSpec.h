/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterUpgradeScopeSpec.h
 *
 * **ClusterUpgrade**: The configuration for the scope-level ClusterUpgrade feature.
 */

#ifndef OAIClusterUpgradeScopeSpec_H
#define OAIClusterUpgradeScopeSpec_H

#include <QJsonObject>

#include "OAIClusterUpgradeGKEUpgradeOverride.h"
#include "OAIClusterUpgradePostConditions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClusterUpgradeGKEUpgradeOverride;
class OAIClusterUpgradePostConditions;

class OAIClusterUpgradeScopeSpec : public OAIObject {
public:
    OAIClusterUpgradeScopeSpec();
    OAIClusterUpgradeScopeSpec(QString json);
    ~OAIClusterUpgradeScopeSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIClusterUpgradeGKEUpgradeOverride> getGkeUpgradeOverrides() const;
    void setGkeUpgradeOverrides(const QList<OAIClusterUpgradeGKEUpgradeOverride> &gke_upgrade_overrides);
    bool is_gke_upgrade_overrides_Set() const;
    bool is_gke_upgrade_overrides_Valid() const;

    OAIClusterUpgradePostConditions getPostConditions() const;
    void setPostConditions(const OAIClusterUpgradePostConditions &post_conditions);
    bool is_post_conditions_Set() const;
    bool is_post_conditions_Valid() const;

    QList<QString> getUpstreamScopes() const;
    void setUpstreamScopes(const QList<QString> &upstream_scopes);
    bool is_upstream_scopes_Set() const;
    bool is_upstream_scopes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIClusterUpgradeGKEUpgradeOverride> m_gke_upgrade_overrides;
    bool m_gke_upgrade_overrides_isSet;
    bool m_gke_upgrade_overrides_isValid;

    OAIClusterUpgradePostConditions m_post_conditions;
    bool m_post_conditions_isSet;
    bool m_post_conditions_isValid;

    QList<QString> m_upstream_scopes;
    bool m_upstream_scopes_isSet;
    bool m_upstream_scopes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterUpgradeScopeSpec)

#endif // OAIClusterUpgradeScopeSpec_H
