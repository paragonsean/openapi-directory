# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fleet_observability_fleet_observability_base_feature_state import FleetObservabilityFleetObservabilityBaseFeatureState
from openapi_server import util


class FleetObservabilityFleetObservabilityLoggingState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_log: FleetObservabilityFleetObservabilityBaseFeatureState=None, scope_log: FleetObservabilityFleetObservabilityBaseFeatureState=None):
        """FleetObservabilityFleetObservabilityLoggingState - a model defined in OpenAPI

        :param default_log: The default_log of this FleetObservabilityFleetObservabilityLoggingState.
        :param scope_log: The scope_log of this FleetObservabilityFleetObservabilityLoggingState.
        """
        self.openapi_types = {
            'default_log': FleetObservabilityFleetObservabilityBaseFeatureState,
            'scope_log': FleetObservabilityFleetObservabilityBaseFeatureState
        }

        self.attribute_map = {
            'default_log': 'defaultLog',
            'scope_log': 'scopeLog'
        }

        self._default_log = default_log
        self._scope_log = scope_log

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FleetObservabilityFleetObservabilityLoggingState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FleetObservabilityFleetObservabilityLoggingState of this FleetObservabilityFleetObservabilityLoggingState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_log(self):
        """Gets the default_log of this FleetObservabilityFleetObservabilityLoggingState.


        :return: The default_log of this FleetObservabilityFleetObservabilityLoggingState.
        :rtype: FleetObservabilityFleetObservabilityBaseFeatureState
        """
        return self._default_log

    @default_log.setter
    def default_log(self, default_log):
        """Sets the default_log of this FleetObservabilityFleetObservabilityLoggingState.


        :param default_log: The default_log of this FleetObservabilityFleetObservabilityLoggingState.
        :type default_log: FleetObservabilityFleetObservabilityBaseFeatureState
        """

        self._default_log = default_log

    @property
    def scope_log(self):
        """Gets the scope_log of this FleetObservabilityFleetObservabilityLoggingState.


        :return: The scope_log of this FleetObservabilityFleetObservabilityLoggingState.
        :rtype: FleetObservabilityFleetObservabilityBaseFeatureState
        """
        return self._scope_log

    @scope_log.setter
    def scope_log(self, scope_log):
        """Sets the scope_log of this FleetObservabilityFleetObservabilityLoggingState.


        :param scope_log: The scope_log of this FleetObservabilityFleetObservabilityLoggingState.
        :type scope_log: FleetObservabilityFleetObservabilityBaseFeatureState
        """

        self._scope_log = scope_log
