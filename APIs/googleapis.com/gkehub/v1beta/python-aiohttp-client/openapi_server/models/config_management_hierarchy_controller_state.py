# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.config_management_hierarchy_controller_deployment_state import ConfigManagementHierarchyControllerDeploymentState
from openapi_server.models.config_management_hierarchy_controller_version import ConfigManagementHierarchyControllerVersion
from openapi_server import util


class ConfigManagementHierarchyControllerState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state: ConfigManagementHierarchyControllerDeploymentState=None, version: ConfigManagementHierarchyControllerVersion=None):
        """ConfigManagementHierarchyControllerState - a model defined in OpenAPI

        :param state: The state of this ConfigManagementHierarchyControllerState.
        :param version: The version of this ConfigManagementHierarchyControllerState.
        """
        self.openapi_types = {
            'state': ConfigManagementHierarchyControllerDeploymentState,
            'version': ConfigManagementHierarchyControllerVersion
        }

        self.attribute_map = {
            'state': 'state',
            'version': 'version'
        }

        self._state = state
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigManagementHierarchyControllerState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigManagementHierarchyControllerState of this ConfigManagementHierarchyControllerState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state(self):
        """Gets the state of this ConfigManagementHierarchyControllerState.


        :return: The state of this ConfigManagementHierarchyControllerState.
        :rtype: ConfigManagementHierarchyControllerDeploymentState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ConfigManagementHierarchyControllerState.


        :param state: The state of this ConfigManagementHierarchyControllerState.
        :type state: ConfigManagementHierarchyControllerDeploymentState
        """

        self._state = state

    @property
    def version(self):
        """Gets the version of this ConfigManagementHierarchyControllerState.


        :return: The version of this ConfigManagementHierarchyControllerState.
        :rtype: ConfigManagementHierarchyControllerVersion
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ConfigManagementHierarchyControllerState.


        :param version: The version of this ConfigManagementHierarchyControllerState.
        :type version: ConfigManagementHierarchyControllerVersion
        """

        self._version = version
