# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigManagementBinauthzVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, webhook_version: str=None):
        """ConfigManagementBinauthzVersion - a model defined in OpenAPI

        :param webhook_version: The webhook_version of this ConfigManagementBinauthzVersion.
        """
        self.openapi_types = {
            'webhook_version': str
        }

        self.attribute_map = {
            'webhook_version': 'webhookVersion'
        }

        self._webhook_version = webhook_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigManagementBinauthzVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigManagementBinauthzVersion of this ConfigManagementBinauthzVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def webhook_version(self):
        """Gets the webhook_version of this ConfigManagementBinauthzVersion.

        The version of the binauthz webhook.

        :return: The webhook_version of this ConfigManagementBinauthzVersion.
        :rtype: str
        """
        return self._webhook_version

    @webhook_version.setter
    def webhook_version(self, webhook_version):
        """Sets the webhook_version of this ConfigManagementBinauthzVersion.

        The version of the binauthz webhook.

        :param webhook_version: The webhook_version of this ConfigManagementBinauthzVersion.
        :type webhook_version: str
        """

        self._webhook_version = webhook_version
