# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.config_management_group_version_kind import ConfigManagementGroupVersionKind
from openapi_server import util


class ConfigManagementErrorResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_gvk: ConfigManagementGroupVersionKind=None, resource_name: str=None, resource_namespace: str=None, source_path: str=None):
        """ConfigManagementErrorResource - a model defined in OpenAPI

        :param resource_gvk: The resource_gvk of this ConfigManagementErrorResource.
        :param resource_name: The resource_name of this ConfigManagementErrorResource.
        :param resource_namespace: The resource_namespace of this ConfigManagementErrorResource.
        :param source_path: The source_path of this ConfigManagementErrorResource.
        """
        self.openapi_types = {
            'resource_gvk': ConfigManagementGroupVersionKind,
            'resource_name': str,
            'resource_namespace': str,
            'source_path': str
        }

        self.attribute_map = {
            'resource_gvk': 'resourceGvk',
            'resource_name': 'resourceName',
            'resource_namespace': 'resourceNamespace',
            'source_path': 'sourcePath'
        }

        self._resource_gvk = resource_gvk
        self._resource_name = resource_name
        self._resource_namespace = resource_namespace
        self._source_path = source_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigManagementErrorResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigManagementErrorResource of this ConfigManagementErrorResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_gvk(self):
        """Gets the resource_gvk of this ConfigManagementErrorResource.


        :return: The resource_gvk of this ConfigManagementErrorResource.
        :rtype: ConfigManagementGroupVersionKind
        """
        return self._resource_gvk

    @resource_gvk.setter
    def resource_gvk(self, resource_gvk):
        """Sets the resource_gvk of this ConfigManagementErrorResource.


        :param resource_gvk: The resource_gvk of this ConfigManagementErrorResource.
        :type resource_gvk: ConfigManagementGroupVersionKind
        """

        self._resource_gvk = resource_gvk

    @property
    def resource_name(self):
        """Gets the resource_name of this ConfigManagementErrorResource.

        Metadata name of the resource that is causing an error

        :return: The resource_name of this ConfigManagementErrorResource.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this ConfigManagementErrorResource.

        Metadata name of the resource that is causing an error

        :param resource_name: The resource_name of this ConfigManagementErrorResource.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def resource_namespace(self):
        """Gets the resource_namespace of this ConfigManagementErrorResource.

        Namespace of the resource that is causing an error

        :return: The resource_namespace of this ConfigManagementErrorResource.
        :rtype: str
        """
        return self._resource_namespace

    @resource_namespace.setter
    def resource_namespace(self, resource_namespace):
        """Sets the resource_namespace of this ConfigManagementErrorResource.

        Namespace of the resource that is causing an error

        :param resource_namespace: The resource_namespace of this ConfigManagementErrorResource.
        :type resource_namespace: str
        """

        self._resource_namespace = resource_namespace

    @property
    def source_path(self):
        """Gets the source_path of this ConfigManagementErrorResource.

        Path in the git repo of the erroneous config

        :return: The source_path of this ConfigManagementErrorResource.
        :rtype: str
        """
        return self._source_path

    @source_path.setter
    def source_path(self, source_path):
        """Sets the source_path of this ConfigManagementErrorResource.

        Path in the git repo of the erroneous config

        :param source_path: The source_path of this ConfigManagementErrorResource.
        :type source_path: str
        """

        self._source_path = source_path
