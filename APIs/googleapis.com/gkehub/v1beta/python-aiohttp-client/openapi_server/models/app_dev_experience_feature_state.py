# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class AppDevExperienceFeatureState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, networking_install_succeeded: Status=None):
        """AppDevExperienceFeatureState - a model defined in OpenAPI

        :param networking_install_succeeded: The networking_install_succeeded of this AppDevExperienceFeatureState.
        """
        self.openapi_types = {
            'networking_install_succeeded': Status
        }

        self.attribute_map = {
            'networking_install_succeeded': 'networkingInstallSucceeded'
        }

        self._networking_install_succeeded = networking_install_succeeded

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppDevExperienceFeatureState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppDevExperienceFeatureState of this AppDevExperienceFeatureState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def networking_install_succeeded(self):
        """Gets the networking_install_succeeded of this AppDevExperienceFeatureState.


        :return: The networking_install_succeeded of this AppDevExperienceFeatureState.
        :rtype: Status
        """
        return self._networking_install_succeeded

    @networking_install_succeeded.setter
    def networking_install_succeeded(self, networking_install_succeeded):
        """Sets the networking_install_succeeded of this AppDevExperienceFeatureState.


        :param networking_install_succeeded: The networking_install_succeeded of this AppDevExperienceFeatureState.
        :type networking_install_succeeded: Status
        """

        self._networking_install_succeeded = networking_install_succeeded
