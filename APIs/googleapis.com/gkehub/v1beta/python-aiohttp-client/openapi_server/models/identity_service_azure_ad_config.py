# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentityServiceAzureADConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, client_secret: str=None, encrypted_client_secret: str=None, kubectl_redirect_uri: str=None, tenant: str=None):
        """IdentityServiceAzureADConfig - a model defined in OpenAPI

        :param client_id: The client_id of this IdentityServiceAzureADConfig.
        :param client_secret: The client_secret of this IdentityServiceAzureADConfig.
        :param encrypted_client_secret: The encrypted_client_secret of this IdentityServiceAzureADConfig.
        :param kubectl_redirect_uri: The kubectl_redirect_uri of this IdentityServiceAzureADConfig.
        :param tenant: The tenant of this IdentityServiceAzureADConfig.
        """
        self.openapi_types = {
            'client_id': str,
            'client_secret': str,
            'encrypted_client_secret': str,
            'kubectl_redirect_uri': str,
            'tenant': str
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'client_secret': 'clientSecret',
            'encrypted_client_secret': 'encryptedClientSecret',
            'kubectl_redirect_uri': 'kubectlRedirectUri',
            'tenant': 'tenant'
        }

        self._client_id = client_id
        self._client_secret = client_secret
        self._encrypted_client_secret = encrypted_client_secret
        self._kubectl_redirect_uri = kubectl_redirect_uri
        self._tenant = tenant

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentityServiceAzureADConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentityServiceAzureADConfig of this IdentityServiceAzureADConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this IdentityServiceAzureADConfig.

        ID for the registered client application that makes authentication requests to the Azure AD identity provider.

        :return: The client_id of this IdentityServiceAzureADConfig.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this IdentityServiceAzureADConfig.

        ID for the registered client application that makes authentication requests to the Azure AD identity provider.

        :param client_id: The client_id of this IdentityServiceAzureADConfig.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def client_secret(self):
        """Gets the client_secret of this IdentityServiceAzureADConfig.

        Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH.

        :return: The client_secret of this IdentityServiceAzureADConfig.
        :rtype: str
        """
        return self._client_secret

    @client_secret.setter
    def client_secret(self, client_secret):
        """Sets the client_secret of this IdentityServiceAzureADConfig.

        Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH.

        :param client_secret: The client_secret of this IdentityServiceAzureADConfig.
        :type client_secret: str
        """

        self._client_secret = client_secret

    @property
    def encrypted_client_secret(self):
        """Gets the encrypted_client_secret of this IdentityServiceAzureADConfig.

        Output only. Encrypted AzureAD client secret.

        :return: The encrypted_client_secret of this IdentityServiceAzureADConfig.
        :rtype: str
        """
        return self._encrypted_client_secret

    @encrypted_client_secret.setter
    def encrypted_client_secret(self, encrypted_client_secret):
        """Sets the encrypted_client_secret of this IdentityServiceAzureADConfig.

        Output only. Encrypted AzureAD client secret.

        :param encrypted_client_secret: The encrypted_client_secret of this IdentityServiceAzureADConfig.
        :type encrypted_client_secret: str
        """

        self._encrypted_client_secret = encrypted_client_secret

    @property
    def kubectl_redirect_uri(self):
        """Gets the kubectl_redirect_uri of this IdentityServiceAzureADConfig.

        The redirect URL that kubectl uses for authorization.

        :return: The kubectl_redirect_uri of this IdentityServiceAzureADConfig.
        :rtype: str
        """
        return self._kubectl_redirect_uri

    @kubectl_redirect_uri.setter
    def kubectl_redirect_uri(self, kubectl_redirect_uri):
        """Sets the kubectl_redirect_uri of this IdentityServiceAzureADConfig.

        The redirect URL that kubectl uses for authorization.

        :param kubectl_redirect_uri: The kubectl_redirect_uri of this IdentityServiceAzureADConfig.
        :type kubectl_redirect_uri: str
        """

        self._kubectl_redirect_uri = kubectl_redirect_uri

    @property
    def tenant(self):
        """Gets the tenant of this IdentityServiceAzureADConfig.

        Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant.

        :return: The tenant of this IdentityServiceAzureADConfig.
        :rtype: str
        """
        return self._tenant

    @tenant.setter
    def tenant(self, tenant):
        """Sets the tenant of this IdentityServiceAzureADConfig.

        Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant.

        :param tenant: The tenant of this IdentityServiceAzureADConfig.
        :type tenant: str
        """

        self._tenant = tenant
