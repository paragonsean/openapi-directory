# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PolicyControllerTemplateLibraryConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, installation: str=None):
        """PolicyControllerTemplateLibraryConfig - a model defined in OpenAPI

        :param installation: The installation of this PolicyControllerTemplateLibraryConfig.
        """
        self.openapi_types = {
            'installation': str
        }

        self.attribute_map = {
            'installation': 'installation'
        }

        self._installation = installation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyControllerTemplateLibraryConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyControllerTemplateLibraryConfig of this PolicyControllerTemplateLibraryConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def installation(self):
        """Gets the installation of this PolicyControllerTemplateLibraryConfig.

        Configures the manner in which the template library is installed on the cluster.

        :return: The installation of this PolicyControllerTemplateLibraryConfig.
        :rtype: str
        """
        return self._installation

    @installation.setter
    def installation(self, installation):
        """Sets the installation of this PolicyControllerTemplateLibraryConfig.

        Configures the manner in which the template library is installed on the cluster.

        :param installation: The installation of this PolicyControllerTemplateLibraryConfig.
        :type installation: str
        """
        allowed_values = ["INSTALLATION_UNSPECIFIED", "NOT_INSTALLED", "ALL"]  # noqa: E501
        if installation not in allowed_values:
            raise ValueError(
                "Invalid value for `installation` ({0}), must be one of {1}"
                .format(installation, allowed_values)
            )

        self._installation = installation
