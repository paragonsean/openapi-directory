# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OnPremCluster(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_cluster: bool=None, cluster_missing: bool=None, cluster_type: str=None, resource_link: str=None):
        """OnPremCluster - a model defined in OpenAPI

        :param admin_cluster: The admin_cluster of this OnPremCluster.
        :param cluster_missing: The cluster_missing of this OnPremCluster.
        :param cluster_type: The cluster_type of this OnPremCluster.
        :param resource_link: The resource_link of this OnPremCluster.
        """
        self.openapi_types = {
            'admin_cluster': bool,
            'cluster_missing': bool,
            'cluster_type': str,
            'resource_link': str
        }

        self.attribute_map = {
            'admin_cluster': 'adminCluster',
            'cluster_missing': 'clusterMissing',
            'cluster_type': 'clusterType',
            'resource_link': 'resourceLink'
        }

        self._admin_cluster = admin_cluster
        self._cluster_missing = cluster_missing
        self._cluster_type = cluster_type
        self._resource_link = resource_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnPremCluster':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OnPremCluster of this OnPremCluster.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_cluster(self):
        """Gets the admin_cluster of this OnPremCluster.

        Immutable. Whether the cluster is an admin cluster.

        :return: The admin_cluster of this OnPremCluster.
        :rtype: bool
        """
        return self._admin_cluster

    @admin_cluster.setter
    def admin_cluster(self, admin_cluster):
        """Sets the admin_cluster of this OnPremCluster.

        Immutable. Whether the cluster is an admin cluster.

        :param admin_cluster: The admin_cluster of this OnPremCluster.
        :type admin_cluster: bool
        """

        self._admin_cluster = admin_cluster

    @property
    def cluster_missing(self):
        """Gets the cluster_missing of this OnPremCluster.

        Output only. If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.

        :return: The cluster_missing of this OnPremCluster.
        :rtype: bool
        """
        return self._cluster_missing

    @cluster_missing.setter
    def cluster_missing(self, cluster_missing):
        """Sets the cluster_missing of this OnPremCluster.

        Output only. If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.

        :param cluster_missing: The cluster_missing of this OnPremCluster.
        :type cluster_missing: bool
        """

        self._cluster_missing = cluster_missing

    @property
    def cluster_type(self):
        """Gets the cluster_type of this OnPremCluster.

        Immutable. The on prem cluster's type.

        :return: The cluster_type of this OnPremCluster.
        :rtype: str
        """
        return self._cluster_type

    @cluster_type.setter
    def cluster_type(self, cluster_type):
        """Sets the cluster_type of this OnPremCluster.

        Immutable. The on prem cluster's type.

        :param cluster_type: The cluster_type of this OnPremCluster.
        :type cluster_type: str
        """
        allowed_values = ["CLUSTERTYPE_UNSPECIFIED", "BOOTSTRAP", "HYBRID", "STANDALONE", "USER"]  # noqa: E501
        if cluster_type not in allowed_values:
            raise ValueError(
                "Invalid value for `cluster_type` ({0}), must be one of {1}"
                .format(cluster_type, allowed_values)
            )

        self._cluster_type = cluster_type

    @property
    def resource_link(self):
        """Gets the resource_link of this OnPremCluster.

        Immutable. Self-link of the Google Cloud resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster

        :return: The resource_link of this OnPremCluster.
        :rtype: str
        """
        return self._resource_link

    @resource_link.setter
    def resource_link(self, resource_link):
        """Sets the resource_link of this OnPremCluster.

        Immutable. Self-link of the Google Cloud resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster

        :param resource_link: The resource_link of this OnPremCluster.
        :type resource_link: str
        """

        self._resource_link = resource_link
