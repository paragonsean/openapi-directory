# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterUpgradePostConditions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, soaking: str=None):
        """ClusterUpgradePostConditions - a model defined in OpenAPI

        :param soaking: The soaking of this ClusterUpgradePostConditions.
        """
        self.openapi_types = {
            'soaking': str
        }

        self.attribute_map = {
            'soaking': 'soaking'
        }

        self._soaking = soaking

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterUpgradePostConditions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterUpgradePostConditions of this ClusterUpgradePostConditions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def soaking(self):
        """Gets the soaking of this ClusterUpgradePostConditions.

        Required. Amount of time to \"soak\" after a rollout has been finished before marking it COMPLETE. Cannot exceed 30 days. Required.

        :return: The soaking of this ClusterUpgradePostConditions.
        :rtype: str
        """
        return self._soaking

    @soaking.setter
    def soaking(self, soaking):
        """Sets the soaking of this ClusterUpgradePostConditions.

        Required. Amount of time to \"soak\" after a rollout has been finished before marking it COMPLETE. Cannot exceed 30 days. Required.

        :param soaking: The soaking of this ClusterUpgradePostConditions.
        :type soaking: str
        """

        self._soaking = soaking
