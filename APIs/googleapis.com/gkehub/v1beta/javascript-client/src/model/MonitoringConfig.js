/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MonitoringConfig model module.
 * @module model/MonitoringConfig
 * @version v1beta
 */
class MonitoringConfig {
    /**
     * Constructs a new <code>MonitoringConfig</code>.
     * MonitoringConfig informs Fleet-based applications/services/UIs how the metrics for the underlying cluster is reported to cloud monitoring services. It can be set from empty to non-empty, but can&#39;t be mutated directly to prevent accidentally breaking the constinousty of metrics.
     * @alias module:model/MonitoringConfig
     */
    constructor() { 
        
        MonitoringConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MonitoringConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MonitoringConfig} obj Optional instance to populate.
     * @return {module:model/MonitoringConfig} The populated <code>MonitoringConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MonitoringConfig();

            if (data.hasOwnProperty('cluster')) {
                obj['cluster'] = ApiClient.convertToType(data['cluster'], 'String');
            }
            if (data.hasOwnProperty('clusterHash')) {
                obj['clusterHash'] = ApiClient.convertToType(data['clusterHash'], 'String');
            }
            if (data.hasOwnProperty('kubernetesMetricsPrefix')) {
                obj['kubernetesMetricsPrefix'] = ApiClient.convertToType(data['kubernetesMetricsPrefix'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MonitoringConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MonitoringConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cluster'] && !(typeof data['cluster'] === 'string' || data['cluster'] instanceof String)) {
            throw new Error("Expected the field `cluster` to be a primitive type in the JSON string but got " + data['cluster']);
        }
        // ensure the json data is a string
        if (data['clusterHash'] && !(typeof data['clusterHash'] === 'string' || data['clusterHash'] instanceof String)) {
            throw new Error("Expected the field `clusterHash` to be a primitive type in the JSON string but got " + data['clusterHash']);
        }
        // ensure the json data is a string
        if (data['kubernetesMetricsPrefix'] && !(typeof data['kubernetesMetricsPrefix'] === 'string' || data['kubernetesMetricsPrefix'] instanceof String)) {
            throw new Error("Expected the field `kubernetesMetricsPrefix` to be a primitive type in the JSON string but got " + data['kubernetesMetricsPrefix']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['projectId'] && !(typeof data['projectId'] === 'string' || data['projectId'] instanceof String)) {
            throw new Error("Expected the field `projectId` to be a primitive type in the JSON string but got " + data['projectId']);
        }

        return true;
    }


}



/**
 * Optional. Cluster name used to report metrics. For Anthos on VMWare/Baremetal/MultiCloud clusters, it would be in format {cluster_type}/{cluster_name}, e.g., \"awsClusters/cluster_1\".
 * @member {String} cluster
 */
MonitoringConfig.prototype['cluster'] = undefined;

/**
 * Optional. For GKE and Multicloud clusters, this is the UUID of the cluster resource. For VMWare and Baremetal clusters, this is the kube-system UID.
 * @member {String} clusterHash
 */
MonitoringConfig.prototype['clusterHash'] = undefined;

/**
 * Optional. Kubernetes system metrics, if available, are written to this prefix. This defaults to kubernetes.io for GKE, and kubernetes.io/anthos for Anthos eventually. Noted: Anthos MultiCloud will have kubernetes.io prefix today but will migration to be under kubernetes.io/anthos.
 * @member {String} kubernetesMetricsPrefix
 */
MonitoringConfig.prototype['kubernetesMetricsPrefix'] = undefined;

/**
 * Optional. Location used to report Metrics
 * @member {String} location
 */
MonitoringConfig.prototype['location'] = undefined;

/**
 * Optional. Project used to report Metrics
 * @member {String} projectId
 */
MonitoringConfig.prototype['projectId'] = undefined;






export default MonitoringConfig;

