/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceOptions::OAIResourceOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceOptions::OAIResourceOptions() {
    this->initializeModel();
}

OAIResourceOptions::~OAIResourceOptions() {}

void OAIResourceOptions::initializeModel() {

    m_connect_version_isSet = false;
    m_connect_version_isValid = false;

    m_k8s_version_isSet = false;
    m_k8s_version_isValid = false;

    m_v1beta1_crd_isSet = false;
    m_v1beta1_crd_isValid = false;
}

void OAIResourceOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceOptions::fromJsonObject(QJsonObject json) {

    m_connect_version_isValid = ::OpenAPI::fromJsonValue(m_connect_version, json[QString("connectVersion")]);
    m_connect_version_isSet = !json[QString("connectVersion")].isNull() && m_connect_version_isValid;

    m_k8s_version_isValid = ::OpenAPI::fromJsonValue(m_k8s_version, json[QString("k8sVersion")]);
    m_k8s_version_isSet = !json[QString("k8sVersion")].isNull() && m_k8s_version_isValid;

    m_v1beta1_crd_isValid = ::OpenAPI::fromJsonValue(m_v1beta1_crd, json[QString("v1beta1Crd")]);
    m_v1beta1_crd_isSet = !json[QString("v1beta1Crd")].isNull() && m_v1beta1_crd_isValid;
}

QString OAIResourceOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_connect_version_isSet) {
        obj.insert(QString("connectVersion"), ::OpenAPI::toJsonValue(m_connect_version));
    }
    if (m_k8s_version_isSet) {
        obj.insert(QString("k8sVersion"), ::OpenAPI::toJsonValue(m_k8s_version));
    }
    if (m_v1beta1_crd_isSet) {
        obj.insert(QString("v1beta1Crd"), ::OpenAPI::toJsonValue(m_v1beta1_crd));
    }
    return obj;
}

QString OAIResourceOptions::getConnectVersion() const {
    return m_connect_version;
}
void OAIResourceOptions::setConnectVersion(const QString &connect_version) {
    m_connect_version = connect_version;
    m_connect_version_isSet = true;
}

bool OAIResourceOptions::is_connect_version_Set() const{
    return m_connect_version_isSet;
}

bool OAIResourceOptions::is_connect_version_Valid() const{
    return m_connect_version_isValid;
}

QString OAIResourceOptions::getK8sVersion() const {
    return m_k8s_version;
}
void OAIResourceOptions::setK8sVersion(const QString &k8s_version) {
    m_k8s_version = k8s_version;
    m_k8s_version_isSet = true;
}

bool OAIResourceOptions::is_k8s_version_Set() const{
    return m_k8s_version_isSet;
}

bool OAIResourceOptions::is_k8s_version_Valid() const{
    return m_k8s_version_isValid;
}

bool OAIResourceOptions::isV1beta1Crd() const {
    return m_v1beta1_crd;
}
void OAIResourceOptions::setV1beta1Crd(const bool &v1beta1_crd) {
    m_v1beta1_crd = v1beta1_crd;
    m_v1beta1_crd_isSet = true;
}

bool OAIResourceOptions::is_v1beta1_crd_Set() const{
    return m_v1beta1_crd_isSet;
}

bool OAIResourceOptions::is_v1beta1_crd_Valid() const{
    return m_v1beta1_crd_isValid;
}

bool OAIResourceOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connect_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_k8s_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_v1beta1_crd_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
