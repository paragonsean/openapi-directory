/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPolicyControllerMembershipState.h
 *
 * **Policy Controller**: State for a single cluster.
 */

#ifndef OAIPolicyControllerMembershipState_H
#define OAIPolicyControllerMembershipState_H

#include <QJsonObject>

#include "OAIPolicyControllerOnClusterState.h"
#include "OAIPolicyControllerPolicyContentState.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPolicyControllerOnClusterState;
class OAIPolicyControllerPolicyContentState;

class OAIPolicyControllerMembershipState : public OAIObject {
public:
    OAIPolicyControllerMembershipState();
    OAIPolicyControllerMembershipState(QString json);
    ~OAIPolicyControllerMembershipState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAIPolicyControllerOnClusterState> getComponentStates() const;
    void setComponentStates(const QMap<QString, OAIPolicyControllerOnClusterState> &component_states);
    bool is_component_states_Set() const;
    bool is_component_states_Valid() const;

    OAIPolicyControllerPolicyContentState getPolicyContentState() const;
    void setPolicyContentState(const OAIPolicyControllerPolicyContentState &policy_content_state);
    bool is_policy_content_state_Set() const;
    bool is_policy_content_state_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAIPolicyControllerOnClusterState> m_component_states;
    bool m_component_states_isSet;
    bool m_component_states_isValid;

    OAIPolicyControllerPolicyContentState m_policy_content_state;
    bool m_policy_content_state_isSet;
    bool m_policy_content_state_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPolicyControllerMembershipState)

#endif // OAIPolicyControllerMembershipState_H
