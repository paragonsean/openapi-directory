/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceMeshMembershipState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceMeshMembershipState::OAIServiceMeshMembershipState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceMeshMembershipState::OAIServiceMeshMembershipState() {
    this->initializeModel();
}

OAIServiceMeshMembershipState::~OAIServiceMeshMembershipState() {}

void OAIServiceMeshMembershipState::initializeModel() {

    m_control_plane_management_isSet = false;
    m_control_plane_management_isValid = false;

    m_data_plane_management_isSet = false;
    m_data_plane_management_isValid = false;
}

void OAIServiceMeshMembershipState::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceMeshMembershipState::fromJsonObject(QJsonObject json) {

    m_control_plane_management_isValid = ::OpenAPI::fromJsonValue(m_control_plane_management, json[QString("controlPlaneManagement")]);
    m_control_plane_management_isSet = !json[QString("controlPlaneManagement")].isNull() && m_control_plane_management_isValid;

    m_data_plane_management_isValid = ::OpenAPI::fromJsonValue(m_data_plane_management, json[QString("dataPlaneManagement")]);
    m_data_plane_management_isSet = !json[QString("dataPlaneManagement")].isNull() && m_data_plane_management_isValid;
}

QString OAIServiceMeshMembershipState::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceMeshMembershipState::asJsonObject() const {
    QJsonObject obj;
    if (m_control_plane_management.isSet()) {
        obj.insert(QString("controlPlaneManagement"), ::OpenAPI::toJsonValue(m_control_plane_management));
    }
    if (m_data_plane_management.isSet()) {
        obj.insert(QString("dataPlaneManagement"), ::OpenAPI::toJsonValue(m_data_plane_management));
    }
    return obj;
}

OAIServiceMeshControlPlaneManagement OAIServiceMeshMembershipState::getControlPlaneManagement() const {
    return m_control_plane_management;
}
void OAIServiceMeshMembershipState::setControlPlaneManagement(const OAIServiceMeshControlPlaneManagement &control_plane_management) {
    m_control_plane_management = control_plane_management;
    m_control_plane_management_isSet = true;
}

bool OAIServiceMeshMembershipState::is_control_plane_management_Set() const{
    return m_control_plane_management_isSet;
}

bool OAIServiceMeshMembershipState::is_control_plane_management_Valid() const{
    return m_control_plane_management_isValid;
}

OAIServiceMeshDataPlaneManagement OAIServiceMeshMembershipState::getDataPlaneManagement() const {
    return m_data_plane_management;
}
void OAIServiceMeshMembershipState::setDataPlaneManagement(const OAIServiceMeshDataPlaneManagement &data_plane_management) {
    m_data_plane_management = data_plane_management;
    m_data_plane_management_isSet = true;
}

bool OAIServiceMeshMembershipState::is_data_plane_management_Set() const{
    return m_data_plane_management_isSet;
}

bool OAIServiceMeshMembershipState::is_data_plane_management_Valid() const{
    return m_data_plane_management_isValid;
}

bool OAIServiceMeshMembershipState::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_control_plane_management.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_plane_management.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceMeshMembershipState::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
