/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthority.h
 *
 * Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
 */

#ifndef OAIAuthority_H
#define OAIAuthority_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthority : public OAIObject {
public:
    OAIAuthority();
    OAIAuthority(QString json);
    ~OAIAuthority() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIdentityProvider() const;
    void setIdentityProvider(const QString &identity_provider);
    bool is_identity_provider_Set() const;
    bool is_identity_provider_Valid() const;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QByteArray getOidcJwks() const;
    void setOidcJwks(const QByteArray &oidc_jwks);
    bool is_oidc_jwks_Set() const;
    bool is_oidc_jwks_Valid() const;

    QString getWorkloadIdentityPool() const;
    void setWorkloadIdentityPool(const QString &workload_identity_pool);
    bool is_workload_identity_pool_Set() const;
    bool is_workload_identity_pool_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_identity_provider;
    bool m_identity_provider_isSet;
    bool m_identity_provider_isValid;

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QByteArray m_oidc_jwks;
    bool m_oidc_jwks_isSet;
    bool m_oidc_jwks_isValid;

    QString m_workload_identity_pool;
    bool m_workload_identity_pool_isSet;
    bool m_workload_identity_pool_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthority)

#endif // OAIAuthority_H
