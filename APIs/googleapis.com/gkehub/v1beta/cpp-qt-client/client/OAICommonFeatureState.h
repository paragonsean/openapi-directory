/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommonFeatureState.h
 *
 * CommonFeatureState contains Hub-wide Feature status information.
 */

#ifndef OAICommonFeatureState_H
#define OAICommonFeatureState_H

#include <QJsonObject>

#include "OAIAppDevExperienceFeatureState.h"
#include "OAIClusterUpgradeFleetState.h"
#include "OAIFeatureState.h"
#include "OAIFleetObservabilityFeatureState.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppDevExperienceFeatureState;
class OAIClusterUpgradeFleetState;
class OAIFleetObservabilityFeatureState;
class OAIFeatureState;

class OAICommonFeatureState : public OAIObject {
public:
    OAICommonFeatureState();
    OAICommonFeatureState(QString json);
    ~OAICommonFeatureState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAppDevExperienceFeatureState getAppdevexperience() const;
    void setAppdevexperience(const OAIAppDevExperienceFeatureState &appdevexperience);
    bool is_appdevexperience_Set() const;
    bool is_appdevexperience_Valid() const;

    OAIClusterUpgradeFleetState getClusterupgrade() const;
    void setClusterupgrade(const OAIClusterUpgradeFleetState &clusterupgrade);
    bool is_clusterupgrade_Set() const;
    bool is_clusterupgrade_Valid() const;

    OAIFleetObservabilityFeatureState getFleetobservability() const;
    void setFleetobservability(const OAIFleetObservabilityFeatureState &fleetobservability);
    bool is_fleetobservability_Set() const;
    bool is_fleetobservability_Valid() const;

    OAIFeatureState getState() const;
    void setState(const OAIFeatureState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAppDevExperienceFeatureState m_appdevexperience;
    bool m_appdevexperience_isSet;
    bool m_appdevexperience_isValid;

    OAIClusterUpgradeFleetState m_clusterupgrade;
    bool m_clusterupgrade_isSet;
    bool m_clusterupgrade_isValid;

    OAIFleetObservabilityFeatureState m_fleetobservability;
    bool m_fleetobservability_isSet;
    bool m_fleetobservability_isValid;

    OAIFeatureState m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommonFeatureState)

#endif // OAICommonFeatureState_H
