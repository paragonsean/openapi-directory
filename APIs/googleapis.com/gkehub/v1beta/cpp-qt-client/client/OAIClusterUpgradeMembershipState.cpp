/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterUpgradeMembershipState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterUpgradeMembershipState::OAIClusterUpgradeMembershipState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterUpgradeMembershipState::OAIClusterUpgradeMembershipState() {
    this->initializeModel();
}

OAIClusterUpgradeMembershipState::~OAIClusterUpgradeMembershipState() {}

void OAIClusterUpgradeMembershipState::initializeModel() {

    m_ignored_isSet = false;
    m_ignored_isValid = false;

    m_upgrades_isSet = false;
    m_upgrades_isValid = false;
}

void OAIClusterUpgradeMembershipState::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterUpgradeMembershipState::fromJsonObject(QJsonObject json) {

    m_ignored_isValid = ::OpenAPI::fromJsonValue(m_ignored, json[QString("ignored")]);
    m_ignored_isSet = !json[QString("ignored")].isNull() && m_ignored_isValid;

    m_upgrades_isValid = ::OpenAPI::fromJsonValue(m_upgrades, json[QString("upgrades")]);
    m_upgrades_isSet = !json[QString("upgrades")].isNull() && m_upgrades_isValid;
}

QString OAIClusterUpgradeMembershipState::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterUpgradeMembershipState::asJsonObject() const {
    QJsonObject obj;
    if (m_ignored.isSet()) {
        obj.insert(QString("ignored"), ::OpenAPI::toJsonValue(m_ignored));
    }
    if (m_upgrades.size() > 0) {
        obj.insert(QString("upgrades"), ::OpenAPI::toJsonValue(m_upgrades));
    }
    return obj;
}

OAIClusterUpgradeIgnoredMembership OAIClusterUpgradeMembershipState::getIgnored() const {
    return m_ignored;
}
void OAIClusterUpgradeMembershipState::setIgnored(const OAIClusterUpgradeIgnoredMembership &ignored) {
    m_ignored = ignored;
    m_ignored_isSet = true;
}

bool OAIClusterUpgradeMembershipState::is_ignored_Set() const{
    return m_ignored_isSet;
}

bool OAIClusterUpgradeMembershipState::is_ignored_Valid() const{
    return m_ignored_isValid;
}

QList<OAIClusterUpgradeMembershipGKEUpgradeState> OAIClusterUpgradeMembershipState::getUpgrades() const {
    return m_upgrades;
}
void OAIClusterUpgradeMembershipState::setUpgrades(const QList<OAIClusterUpgradeMembershipGKEUpgradeState> &upgrades) {
    m_upgrades = upgrades;
    m_upgrades_isSet = true;
}

bool OAIClusterUpgradeMembershipState::is_upgrades_Set() const{
    return m_upgrades_isSet;
}

bool OAIClusterUpgradeMembershipState::is_upgrades_Valid() const{
    return m_upgrades_isValid;
}

bool OAIClusterUpgradeMembershipState::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ignored.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_upgrades.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterUpgradeMembershipState::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
