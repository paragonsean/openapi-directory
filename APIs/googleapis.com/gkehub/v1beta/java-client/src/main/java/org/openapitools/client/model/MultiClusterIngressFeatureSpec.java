/*
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:31:02.202070-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MultiClusterIngressFeatureSpec {
  /**
   * Deprecated: This field will be ignored and should not be set. Customer&#39;s billing structure.
   */
  @JsonAdapter(BillingEnum.Adapter.class)
  public enum BillingEnum {
    BILLING_UNSPECIFIED("BILLING_UNSPECIFIED"),
    
    PAY_AS_YOU_GO("PAY_AS_YOU_GO"),
    
    ANTHOS_LICENSE("ANTHOS_LICENSE");

    private String value;

    BillingEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BillingEnum fromValue(String value) {
      for (BillingEnum b : BillingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BillingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BillingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BillingEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BillingEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      BillingEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_BILLING = "billing";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_BILLING)
  private BillingEnum billing;

  public static final String SERIALIZED_NAME_CONFIG_MEMBERSHIP = "configMembership";
  @SerializedName(SERIALIZED_NAME_CONFIG_MEMBERSHIP)
  private String configMembership;

  public MultiClusterIngressFeatureSpec() {
  }

  @Deprecated
  public MultiClusterIngressFeatureSpec billing(BillingEnum billing) {
    this.billing = billing;
    return this;
  }

  /**
   * Deprecated: This field will be ignored and should not be set. Customer&#39;s billing structure.
   * @return billing
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public BillingEnum getBilling() {
    return billing;
  }

  @Deprecated
  public void setBilling(BillingEnum billing) {
    this.billing = billing;
  }


  public MultiClusterIngressFeatureSpec configMembership(String configMembership) {
    this.configMembership = configMembership;
    return this;
  }

  /**
   * Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: &#x60;projects/foo-proj/locations/global/memberships/bar&#x60;
   * @return configMembership
   */
  @javax.annotation.Nullable
  public String getConfigMembership() {
    return configMembership;
  }

  public void setConfigMembership(String configMembership) {
    this.configMembership = configMembership;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultiClusterIngressFeatureSpec multiClusterIngressFeatureSpec = (MultiClusterIngressFeatureSpec) o;
    return Objects.equals(this.billing, multiClusterIngressFeatureSpec.billing) &&
        Objects.equals(this.configMembership, multiClusterIngressFeatureSpec.configMembership);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billing, configMembership);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultiClusterIngressFeatureSpec {\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    configMembership: ").append(toIndentedString(configMembership)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("billing");
    openapiFields.add("configMembership");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MultiClusterIngressFeatureSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MultiClusterIngressFeatureSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MultiClusterIngressFeatureSpec is not found in the empty JSON string", MultiClusterIngressFeatureSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MultiClusterIngressFeatureSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MultiClusterIngressFeatureSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("billing") != null && !jsonObj.get("billing").isJsonNull()) && !jsonObj.get("billing").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing").toString()));
      }
      // validate the optional field `billing`
      if (jsonObj.get("billing") != null && !jsonObj.get("billing").isJsonNull()) {
        BillingEnum.validateJsonElement(jsonObj.get("billing"));
      }
      if ((jsonObj.get("configMembership") != null && !jsonObj.get("configMembership").isJsonNull()) && !jsonObj.get("configMembership").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `configMembership` to be a primitive type in the JSON string but got `%s`", jsonObj.get("configMembership").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MultiClusterIngressFeatureSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MultiClusterIngressFeatureSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MultiClusterIngressFeatureSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MultiClusterIngressFeatureSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<MultiClusterIngressFeatureSpec>() {
           @Override
           public void write(JsonWriter out, MultiClusterIngressFeatureSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MultiClusterIngressFeatureSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MultiClusterIngressFeatureSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MultiClusterIngressFeatureSpec
   * @throws IOException if the JSON string is invalid with respect to MultiClusterIngressFeatureSpec
   */
  public static MultiClusterIngressFeatureSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MultiClusterIngressFeatureSpec.class);
  }

  /**
   * Convert an instance of MultiClusterIngressFeatureSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

