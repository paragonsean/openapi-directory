/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GenerateExclusivityManifestResponse model module.
 * @module model/GenerateExclusivityManifestResponse
 * @version v1beta1
 */
class GenerateExclusivityManifestResponse {
    /**
     * Constructs a new <code>GenerateExclusivityManifestResponse</code>.
     * The response of the exclusivity artifacts manifests for the client to apply.
     * @alias module:model/GenerateExclusivityManifestResponse
     */
    constructor() { 
        
        GenerateExclusivityManifestResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GenerateExclusivityManifestResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenerateExclusivityManifestResponse} obj Optional instance to populate.
     * @return {module:model/GenerateExclusivityManifestResponse} The populated <code>GenerateExclusivityManifestResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenerateExclusivityManifestResponse();

            if (data.hasOwnProperty('crManifest')) {
                obj['crManifest'] = ApiClient.convertToType(data['crManifest'], 'String');
            }
            if (data.hasOwnProperty('crdManifest')) {
                obj['crdManifest'] = ApiClient.convertToType(data['crdManifest'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GenerateExclusivityManifestResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GenerateExclusivityManifestResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['crManifest'] && !(typeof data['crManifest'] === 'string' || data['crManifest'] instanceof String)) {
            throw new Error("Expected the field `crManifest` to be a primitive type in the JSON string but got " + data['crManifest']);
        }
        // ensure the json data is a string
        if (data['crdManifest'] && !(typeof data['crdManifest'] === 'string' || data['crdManifest'] instanceof String)) {
            throw new Error("Expected the field `crdManifest` to be a primitive type in the JSON string but got " + data['crdManifest']);
        }

        return true;
    }


}



/**
 * The YAML manifest of the membership CR to apply if a new version of the CR is available. Empty if no update needs to be applied.
 * @member {String} crManifest
 */
GenerateExclusivityManifestResponse.prototype['crManifest'] = undefined;

/**
 * The YAML manifest of the membership CRD to apply if a newer version of the CRD is available. Empty if no update needs to be applied.
 * @member {String} crdManifest
 */
GenerateExclusivityManifestResponse.prototype['crdManifest'] = undefined;






export default GenerateExclusivityManifestResponse;

