/**
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInitializeHubResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInitializeHubResponse::OAIInitializeHubResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInitializeHubResponse::OAIInitializeHubResponse() {
    this->initializeModel();
}

OAIInitializeHubResponse::~OAIInitializeHubResponse() {}

void OAIInitializeHubResponse::initializeModel() {

    m_service_identity_isSet = false;
    m_service_identity_isValid = false;

    m_workload_identity_pool_isSet = false;
    m_workload_identity_pool_isValid = false;
}

void OAIInitializeHubResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInitializeHubResponse::fromJsonObject(QJsonObject json) {

    m_service_identity_isValid = ::OpenAPI::fromJsonValue(m_service_identity, json[QString("serviceIdentity")]);
    m_service_identity_isSet = !json[QString("serviceIdentity")].isNull() && m_service_identity_isValid;

    m_workload_identity_pool_isValid = ::OpenAPI::fromJsonValue(m_workload_identity_pool, json[QString("workloadIdentityPool")]);
    m_workload_identity_pool_isSet = !json[QString("workloadIdentityPool")].isNull() && m_workload_identity_pool_isValid;
}

QString OAIInitializeHubResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInitializeHubResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_service_identity_isSet) {
        obj.insert(QString("serviceIdentity"), ::OpenAPI::toJsonValue(m_service_identity));
    }
    if (m_workload_identity_pool_isSet) {
        obj.insert(QString("workloadIdentityPool"), ::OpenAPI::toJsonValue(m_workload_identity_pool));
    }
    return obj;
}

QString OAIInitializeHubResponse::getServiceIdentity() const {
    return m_service_identity;
}
void OAIInitializeHubResponse::setServiceIdentity(const QString &service_identity) {
    m_service_identity = service_identity;
    m_service_identity_isSet = true;
}

bool OAIInitializeHubResponse::is_service_identity_Set() const{
    return m_service_identity_isSet;
}

bool OAIInitializeHubResponse::is_service_identity_Valid() const{
    return m_service_identity_isValid;
}

QString OAIInitializeHubResponse::getWorkloadIdentityPool() const {
    return m_workload_identity_pool;
}
void OAIInitializeHubResponse::setWorkloadIdentityPool(const QString &workload_identity_pool) {
    m_workload_identity_pool = workload_identity_pool;
    m_workload_identity_pool_isSet = true;
}

bool OAIInitializeHubResponse::is_workload_identity_pool_Set() const{
    return m_workload_identity_pool_isSet;
}

bool OAIInitializeHubResponse::is_workload_identity_pool_Valid() const{
    return m_workload_identity_pool_isValid;
}

bool OAIInitializeHubResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_identity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workload_identity_pool_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInitializeHubResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
