/*
 * GKE Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * KubernetesMetadata provides informational metadata for Memberships that are created from Kubernetes Endpoints (currently, these are equivalent to Kubernetes clusters).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:53.504276-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class KubernetesMetadata {
  public static final String SERIALIZED_NAME_KUBERNETES_API_SERVER_VERSION = "kubernetesApiServerVersion";
  @SerializedName(SERIALIZED_NAME_KUBERNETES_API_SERVER_VERSION)
  private String kubernetesApiServerVersion;

  public static final String SERIALIZED_NAME_MEMORY_MB = "memoryMb";
  @SerializedName(SERIALIZED_NAME_MEMORY_MB)
  private Integer memoryMb;

  public static final String SERIALIZED_NAME_NODE_COUNT = "nodeCount";
  @SerializedName(SERIALIZED_NAME_NODE_COUNT)
  private Integer nodeCount;

  public static final String SERIALIZED_NAME_NODE_PROVIDER_ID = "nodeProviderId";
  @SerializedName(SERIALIZED_NAME_NODE_PROVIDER_ID)
  private String nodeProviderId;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_VCPU_COUNT = "vcpuCount";
  @SerializedName(SERIALIZED_NAME_VCPU_COUNT)
  private Integer vcpuCount;

  public KubernetesMetadata() {
  }

  public KubernetesMetadata(
     String kubernetesApiServerVersion, 
     Integer memoryMb, 
     Integer nodeCount, 
     String nodeProviderId, 
     String updateTime, 
     Integer vcpuCount
  ) {
    this();
    this.kubernetesApiServerVersion = kubernetesApiServerVersion;
    this.memoryMb = memoryMb;
    this.nodeCount = nodeCount;
    this.nodeProviderId = nodeProviderId;
    this.updateTime = updateTime;
    this.vcpuCount = vcpuCount;
  }

  /**
   * Output only. Kubernetes API server version string as reported by &#39;/version&#39;.
   * @return kubernetesApiServerVersion
   */
  @javax.annotation.Nullable
  public String getKubernetesApiServerVersion() {
    return kubernetesApiServerVersion;
  }



  /**
   * Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
   * @return memoryMb
   */
  @javax.annotation.Nullable
  public Integer getMemoryMb() {
    return memoryMb;
  }



  /**
   * Output only. Node count as reported by Kubernetes nodes resources.
   * @return nodeCount
   */
  @javax.annotation.Nullable
  public Integer getNodeCount() {
    return nodeCount;
  }



  /**
   * Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
   * @return nodeProviderId
   */
  @javax.annotation.Nullable
  public String getNodeProviderId() {
    return nodeProviderId;
  }



  /**
   * Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  /**
   * Output only. vCPU count as reported by Kubernetes nodes resources.
   * @return vcpuCount
   */
  @javax.annotation.Nullable
  public Integer getVcpuCount() {
    return vcpuCount;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KubernetesMetadata kubernetesMetadata = (KubernetesMetadata) o;
    return Objects.equals(this.kubernetesApiServerVersion, kubernetesMetadata.kubernetesApiServerVersion) &&
        Objects.equals(this.memoryMb, kubernetesMetadata.memoryMb) &&
        Objects.equals(this.nodeCount, kubernetesMetadata.nodeCount) &&
        Objects.equals(this.nodeProviderId, kubernetesMetadata.nodeProviderId) &&
        Objects.equals(this.updateTime, kubernetesMetadata.updateTime) &&
        Objects.equals(this.vcpuCount, kubernetesMetadata.vcpuCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kubernetesApiServerVersion, memoryMb, nodeCount, nodeProviderId, updateTime, vcpuCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KubernetesMetadata {\n");
    sb.append("    kubernetesApiServerVersion: ").append(toIndentedString(kubernetesApiServerVersion)).append("\n");
    sb.append("    memoryMb: ").append(toIndentedString(memoryMb)).append("\n");
    sb.append("    nodeCount: ").append(toIndentedString(nodeCount)).append("\n");
    sb.append("    nodeProviderId: ").append(toIndentedString(nodeProviderId)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    vcpuCount: ").append(toIndentedString(vcpuCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("kubernetesApiServerVersion");
    openapiFields.add("memoryMb");
    openapiFields.add("nodeCount");
    openapiFields.add("nodeProviderId");
    openapiFields.add("updateTime");
    openapiFields.add("vcpuCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to KubernetesMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!KubernetesMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KubernetesMetadata is not found in the empty JSON string", KubernetesMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!KubernetesMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KubernetesMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("kubernetesApiServerVersion") != null && !jsonObj.get("kubernetesApiServerVersion").isJsonNull()) && !jsonObj.get("kubernetesApiServerVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kubernetesApiServerVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kubernetesApiServerVersion").toString()));
      }
      if ((jsonObj.get("nodeProviderId") != null && !jsonObj.get("nodeProviderId").isJsonNull()) && !jsonObj.get("nodeProviderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nodeProviderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nodeProviderId").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KubernetesMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KubernetesMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KubernetesMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KubernetesMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<KubernetesMetadata>() {
           @Override
           public void write(JsonWriter out, KubernetesMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KubernetesMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of KubernetesMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of KubernetesMetadata
   * @throws IOException if the JSON string is invalid with respect to KubernetesMetadata
   */
  public static KubernetesMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KubernetesMetadata.class);
  }

  /**
   * Convert an instance of KubernetesMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

