# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_manifest import ResourceManifest
from openapi_server.models.resource_options import ResourceOptions
from openapi_server import util


class KubernetesResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connect_resources: List[ResourceManifest]=None, membership_cr_manifest: str=None, membership_resources: List[ResourceManifest]=None, resource_options: ResourceOptions=None):
        """KubernetesResource - a model defined in OpenAPI

        :param connect_resources: The connect_resources of this KubernetesResource.
        :param membership_cr_manifest: The membership_cr_manifest of this KubernetesResource.
        :param membership_resources: The membership_resources of this KubernetesResource.
        :param resource_options: The resource_options of this KubernetesResource.
        """
        self.openapi_types = {
            'connect_resources': List[ResourceManifest],
            'membership_cr_manifest': str,
            'membership_resources': List[ResourceManifest],
            'resource_options': ResourceOptions
        }

        self.attribute_map = {
            'connect_resources': 'connectResources',
            'membership_cr_manifest': 'membershipCrManifest',
            'membership_resources': 'membershipResources',
            'resource_options': 'resourceOptions'
        }

        self._connect_resources = connect_resources
        self._membership_cr_manifest = membership_cr_manifest
        self._membership_resources = membership_resources
        self._resource_options = resource_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KubernetesResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KubernetesResource of this KubernetesResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connect_resources(self):
        """Gets the connect_resources of this KubernetesResource.

        Output only. The Kubernetes resources for installing the GKE Connect agent. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.

        :return: The connect_resources of this KubernetesResource.
        :rtype: List[ResourceManifest]
        """
        return self._connect_resources

    @connect_resources.setter
    def connect_resources(self, connect_resources):
        """Sets the connect_resources of this KubernetesResource.

        Output only. The Kubernetes resources for installing the GKE Connect agent. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.

        :param connect_resources: The connect_resources of this KubernetesResource.
        :type connect_resources: List[ResourceManifest]
        """

        self._connect_resources = connect_resources

    @property
    def membership_cr_manifest(self):
        """Gets the membership_cr_manifest of this KubernetesResource.

        Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during Create or Update, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.

        :return: The membership_cr_manifest of this KubernetesResource.
        :rtype: str
        """
        return self._membership_cr_manifest

    @membership_cr_manifest.setter
    def membership_cr_manifest(self, membership_cr_manifest):
        """Sets the membership_cr_manifest of this KubernetesResource.

        Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during Create or Update, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.

        :param membership_cr_manifest: The membership_cr_manifest of this KubernetesResource.
        :type membership_cr_manifest: str
        """

        self._membership_cr_manifest = membership_cr_manifest

    @property
    def membership_resources(self):
        """Gets the membership_resources of this KubernetesResource.

        Output only. Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.

        :return: The membership_resources of this KubernetesResource.
        :rtype: List[ResourceManifest]
        """
        return self._membership_resources

    @membership_resources.setter
    def membership_resources(self, membership_resources):
        """Sets the membership_resources of this KubernetesResource.

        Output only. Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.

        :param membership_resources: The membership_resources of this KubernetesResource.
        :type membership_resources: List[ResourceManifest]
        """

        self._membership_resources = membership_resources

    @property
    def resource_options(self):
        """Gets the resource_options of this KubernetesResource.


        :return: The resource_options of this KubernetesResource.
        :rtype: ResourceOptions
        """
        return self._resource_options

    @resource_options.setter
    def resource_options(self, resource_options):
        """Sets the resource_options of this KubernetesResource.


        :param resource_options: The resource_options of this KubernetesResource.
        :type resource_options: ResourceOptions
        """

        self._resource_options = resource_options
