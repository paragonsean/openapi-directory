# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SetupTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stop_on_setup_failure: bool=None, tag_name: str=None):
        """SetupTag - a model defined in OpenAPI

        :param stop_on_setup_failure: The stop_on_setup_failure of this SetupTag.
        :param tag_name: The tag_name of this SetupTag.
        """
        self.openapi_types = {
            'stop_on_setup_failure': bool,
            'tag_name': str
        }

        self.attribute_map = {
            'stop_on_setup_failure': 'stopOnSetupFailure',
            'tag_name': 'tagName'
        }

        self._stop_on_setup_failure = stop_on_setup_failure
        self._tag_name = tag_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetupTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetupTag of this SetupTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stop_on_setup_failure(self):
        """Gets the stop_on_setup_failure of this SetupTag.

        If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status.

        :return: The stop_on_setup_failure of this SetupTag.
        :rtype: bool
        """
        return self._stop_on_setup_failure

    @stop_on_setup_failure.setter
    def stop_on_setup_failure(self, stop_on_setup_failure):
        """Sets the stop_on_setup_failure of this SetupTag.

        If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status.

        :param stop_on_setup_failure: The stop_on_setup_failure of this SetupTag.
        :type stop_on_setup_failure: bool
        """

        self._stop_on_setup_failure = stop_on_setup_failure

    @property
    def tag_name(self):
        """Gets the tag_name of this SetupTag.

        The name of the setup tag.

        :return: The tag_name of this SetupTag.
        :rtype: str
        """
        return self._tag_name

    @tag_name.setter
    def tag_name(self, tag_name):
        """Sets the tag_name of this SetupTag.

        The name of the setup tag.

        :param tag_name: The tag_name of this SetupTag.
        :type tag_name: str
        """

        self._tag_name = tag_name
