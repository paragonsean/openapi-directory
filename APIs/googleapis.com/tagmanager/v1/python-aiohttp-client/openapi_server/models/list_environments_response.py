# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.environment import Environment
from openapi_server import util


class ListEnvironmentsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environments: List[Environment]=None):
        """ListEnvironmentsResponse - a model defined in OpenAPI

        :param environments: The environments of this ListEnvironmentsResponse.
        """
        self.openapi_types = {
            'environments': List[Environment]
        }

        self.attribute_map = {
            'environments': 'environments'
        }

        self._environments = environments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListEnvironmentsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListEnvironmentsResponse of this ListEnvironmentsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environments(self):
        """Gets the environments of this ListEnvironmentsResponse.

        All Environments of a GTM Container.

        :return: The environments of this ListEnvironmentsResponse.
        :rtype: List[Environment]
        """
        return self._environments

    @environments.setter
    def environments(self, environments):
        """Sets the environments of this ListEnvironmentsResponse.

        All Environments of a GTM Container.

        :param environments: The environments of this ListEnvironmentsResponse.
        :type environments: List[Environment]
        """

        self._environments = environments
