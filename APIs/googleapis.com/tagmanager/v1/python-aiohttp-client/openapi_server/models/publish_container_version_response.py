# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.container_version import ContainerVersion
from openapi_server import util


class PublishContainerVersionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compiler_error: bool=None, container_version: ContainerVersion=None):
        """PublishContainerVersionResponse - a model defined in OpenAPI

        :param compiler_error: The compiler_error of this PublishContainerVersionResponse.
        :param container_version: The container_version of this PublishContainerVersionResponse.
        """
        self.openapi_types = {
            'compiler_error': bool,
            'container_version': ContainerVersion
        }

        self.attribute_map = {
            'compiler_error': 'compilerError',
            'container_version': 'containerVersion'
        }

        self._compiler_error = compiler_error
        self._container_version = container_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishContainerVersionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishContainerVersionResponse of this PublishContainerVersionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compiler_error(self):
        """Gets the compiler_error of this PublishContainerVersionResponse.

        Compiler errors or not.

        :return: The compiler_error of this PublishContainerVersionResponse.
        :rtype: bool
        """
        return self._compiler_error

    @compiler_error.setter
    def compiler_error(self, compiler_error):
        """Sets the compiler_error of this PublishContainerVersionResponse.

        Compiler errors or not.

        :param compiler_error: The compiler_error of this PublishContainerVersionResponse.
        :type compiler_error: bool
        """

        self._compiler_error = compiler_error

    @property
    def container_version(self):
        """Gets the container_version of this PublishContainerVersionResponse.


        :return: The container_version of this PublishContainerVersionResponse.
        :rtype: ContainerVersion
        """
        return self._container_version

    @container_version.setter
    def container_version(self, container_version):
        """Sets the container_version of this PublishContainerVersionResponse.


        :param container_version: The container_version of this PublishContainerVersionResponse.
        :type container_version: ContainerVersion
        """

        self._container_version = container_version
