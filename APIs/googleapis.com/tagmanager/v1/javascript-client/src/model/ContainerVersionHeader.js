/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContainerVersionHeader model module.
 * @module model/ContainerVersionHeader
 * @version v1
 */
class ContainerVersionHeader {
    /**
     * Constructs a new <code>ContainerVersionHeader</code>.
     * Represents a Google Tag Manager Container Version Header.
     * @alias module:model/ContainerVersionHeader
     */
    constructor() { 
        
        ContainerVersionHeader.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContainerVersionHeader</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerVersionHeader} obj Optional instance to populate.
     * @return {module:model/ContainerVersionHeader} The populated <code>ContainerVersionHeader</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerVersionHeader();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('containerId')) {
                obj['containerId'] = ApiClient.convertToType(data['containerId'], 'String');
            }
            if (data.hasOwnProperty('containerVersionId')) {
                obj['containerVersionId'] = ApiClient.convertToType(data['containerVersionId'], 'String');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('numMacros')) {
                obj['numMacros'] = ApiClient.convertToType(data['numMacros'], 'String');
            }
            if (data.hasOwnProperty('numRules')) {
                obj['numRules'] = ApiClient.convertToType(data['numRules'], 'String');
            }
            if (data.hasOwnProperty('numTags')) {
                obj['numTags'] = ApiClient.convertToType(data['numTags'], 'String');
            }
            if (data.hasOwnProperty('numTriggers')) {
                obj['numTriggers'] = ApiClient.convertToType(data['numTriggers'], 'String');
            }
            if (data.hasOwnProperty('numVariables')) {
                obj['numVariables'] = ApiClient.convertToType(data['numVariables'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerVersionHeader</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerVersionHeader</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['containerId'] && !(typeof data['containerId'] === 'string' || data['containerId'] instanceof String)) {
            throw new Error("Expected the field `containerId` to be a primitive type in the JSON string but got " + data['containerId']);
        }
        // ensure the json data is a string
        if (data['containerVersionId'] && !(typeof data['containerVersionId'] === 'string' || data['containerVersionId'] instanceof String)) {
            throw new Error("Expected the field `containerVersionId` to be a primitive type in the JSON string but got " + data['containerVersionId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['numMacros'] && !(typeof data['numMacros'] === 'string' || data['numMacros'] instanceof String)) {
            throw new Error("Expected the field `numMacros` to be a primitive type in the JSON string but got " + data['numMacros']);
        }
        // ensure the json data is a string
        if (data['numRules'] && !(typeof data['numRules'] === 'string' || data['numRules'] instanceof String)) {
            throw new Error("Expected the field `numRules` to be a primitive type in the JSON string but got " + data['numRules']);
        }
        // ensure the json data is a string
        if (data['numTags'] && !(typeof data['numTags'] === 'string' || data['numTags'] instanceof String)) {
            throw new Error("Expected the field `numTags` to be a primitive type in the JSON string but got " + data['numTags']);
        }
        // ensure the json data is a string
        if (data['numTriggers'] && !(typeof data['numTriggers'] === 'string' || data['numTriggers'] instanceof String)) {
            throw new Error("Expected the field `numTriggers` to be a primitive type in the JSON string but got " + data['numTriggers']);
        }
        // ensure the json data is a string
        if (data['numVariables'] && !(typeof data['numVariables'] === 'string' || data['numVariables'] instanceof String)) {
            throw new Error("Expected the field `numVariables` to be a primitive type in the JSON string but got " + data['numVariables']);
        }

        return true;
    }


}



/**
 * GTM Account ID.
 * @member {String} accountId
 */
ContainerVersionHeader.prototype['accountId'] = undefined;

/**
 * GTM Container ID.
 * @member {String} containerId
 */
ContainerVersionHeader.prototype['containerId'] = undefined;

/**
 * The Container Version ID uniquely identifies the GTM Container Version.
 * @member {String} containerVersionId
 */
ContainerVersionHeader.prototype['containerVersionId'] = undefined;

/**
 * A value of true indicates this container version has been deleted.
 * @member {Boolean} deleted
 */
ContainerVersionHeader.prototype['deleted'] = undefined;

/**
 * Container version display name.
 * @member {String} name
 */
ContainerVersionHeader.prototype['name'] = undefined;

/**
 * Number of macros in the container version.
 * @member {String} numMacros
 */
ContainerVersionHeader.prototype['numMacros'] = undefined;

/**
 * Number of rules in the container version.
 * @member {String} numRules
 */
ContainerVersionHeader.prototype['numRules'] = undefined;

/**
 * Number of tags in the container version.
 * @member {String} numTags
 */
ContainerVersionHeader.prototype['numTags'] = undefined;

/**
 * Number of triggers in the container version.
 * @member {String} numTriggers
 */
ContainerVersionHeader.prototype['numTriggers'] = undefined;

/**
 * Number of variables in the container version.
 * @member {String} numVariables
 */
ContainerVersionHeader.prototype['numVariables'] = undefined;






export default ContainerVersionHeader;

