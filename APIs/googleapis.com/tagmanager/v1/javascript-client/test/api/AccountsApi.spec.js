/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TagManagerApi);
  }
}(this, function(expect, TagManagerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TagManagerApi.AccountsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountsApi', function() {
    describe('tagmanagerAccountsContainersCreate', function() {
      it('should call tagmanagerAccountsContainersCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersCreate
        //instance.tagmanagerAccountsContainersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersDelete', function() {
      it('should call tagmanagerAccountsContainersDelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersDelete
        //instance.tagmanagerAccountsContainersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersEnvironmentsCreate', function() {
      it('should call tagmanagerAccountsContainersEnvironmentsCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersEnvironmentsCreate
        //instance.tagmanagerAccountsContainersEnvironmentsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersEnvironmentsDelete', function() {
      it('should call tagmanagerAccountsContainersEnvironmentsDelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersEnvironmentsDelete
        //instance.tagmanagerAccountsContainersEnvironmentsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersEnvironmentsGet', function() {
      it('should call tagmanagerAccountsContainersEnvironmentsGet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersEnvironmentsGet
        //instance.tagmanagerAccountsContainersEnvironmentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersEnvironmentsList', function() {
      it('should call tagmanagerAccountsContainersEnvironmentsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersEnvironmentsList
        //instance.tagmanagerAccountsContainersEnvironmentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersEnvironmentsUpdate', function() {
      it('should call tagmanagerAccountsContainersEnvironmentsUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersEnvironmentsUpdate
        //instance.tagmanagerAccountsContainersEnvironmentsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersFoldersCreate', function() {
      it('should call tagmanagerAccountsContainersFoldersCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersFoldersCreate
        //instance.tagmanagerAccountsContainersFoldersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersFoldersDelete', function() {
      it('should call tagmanagerAccountsContainersFoldersDelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersFoldersDelete
        //instance.tagmanagerAccountsContainersFoldersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersFoldersEntitiesList', function() {
      it('should call tagmanagerAccountsContainersFoldersEntitiesList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersFoldersEntitiesList
        //instance.tagmanagerAccountsContainersFoldersEntitiesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersFoldersGet', function() {
      it('should call tagmanagerAccountsContainersFoldersGet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersFoldersGet
        //instance.tagmanagerAccountsContainersFoldersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersFoldersList', function() {
      it('should call tagmanagerAccountsContainersFoldersList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersFoldersList
        //instance.tagmanagerAccountsContainersFoldersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersFoldersUpdate', function() {
      it('should call tagmanagerAccountsContainersFoldersUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersFoldersUpdate
        //instance.tagmanagerAccountsContainersFoldersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersGet', function() {
      it('should call tagmanagerAccountsContainersGet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersGet
        //instance.tagmanagerAccountsContainersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersList', function() {
      it('should call tagmanagerAccountsContainersList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersList
        //instance.tagmanagerAccountsContainersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersMoveFoldersUpdate', function() {
      it('should call tagmanagerAccountsContainersMoveFoldersUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersMoveFoldersUpdate
        //instance.tagmanagerAccountsContainersMoveFoldersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersReauthorizeEnvironmentsUpdate', function() {
      it('should call tagmanagerAccountsContainersReauthorizeEnvironmentsUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersReauthorizeEnvironmentsUpdate
        //instance.tagmanagerAccountsContainersReauthorizeEnvironmentsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersTagsCreate', function() {
      it('should call tagmanagerAccountsContainersTagsCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersTagsCreate
        //instance.tagmanagerAccountsContainersTagsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersTagsDelete', function() {
      it('should call tagmanagerAccountsContainersTagsDelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersTagsDelete
        //instance.tagmanagerAccountsContainersTagsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersTagsGet', function() {
      it('should call tagmanagerAccountsContainersTagsGet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersTagsGet
        //instance.tagmanagerAccountsContainersTagsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersTagsList', function() {
      it('should call tagmanagerAccountsContainersTagsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersTagsList
        //instance.tagmanagerAccountsContainersTagsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersTagsUpdate', function() {
      it('should call tagmanagerAccountsContainersTagsUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersTagsUpdate
        //instance.tagmanagerAccountsContainersTagsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersTriggersCreate', function() {
      it('should call tagmanagerAccountsContainersTriggersCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersTriggersCreate
        //instance.tagmanagerAccountsContainersTriggersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersTriggersDelete', function() {
      it('should call tagmanagerAccountsContainersTriggersDelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersTriggersDelete
        //instance.tagmanagerAccountsContainersTriggersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersTriggersGet', function() {
      it('should call tagmanagerAccountsContainersTriggersGet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersTriggersGet
        //instance.tagmanagerAccountsContainersTriggersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersTriggersList', function() {
      it('should call tagmanagerAccountsContainersTriggersList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersTriggersList
        //instance.tagmanagerAccountsContainersTriggersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersTriggersUpdate', function() {
      it('should call tagmanagerAccountsContainersTriggersUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersTriggersUpdate
        //instance.tagmanagerAccountsContainersTriggersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersUpdate', function() {
      it('should call tagmanagerAccountsContainersUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersUpdate
        //instance.tagmanagerAccountsContainersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVariablesCreate', function() {
      it('should call tagmanagerAccountsContainersVariablesCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVariablesCreate
        //instance.tagmanagerAccountsContainersVariablesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVariablesDelete', function() {
      it('should call tagmanagerAccountsContainersVariablesDelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVariablesDelete
        //instance.tagmanagerAccountsContainersVariablesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVariablesGet', function() {
      it('should call tagmanagerAccountsContainersVariablesGet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVariablesGet
        //instance.tagmanagerAccountsContainersVariablesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVariablesList', function() {
      it('should call tagmanagerAccountsContainersVariablesList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVariablesList
        //instance.tagmanagerAccountsContainersVariablesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVariablesUpdate', function() {
      it('should call tagmanagerAccountsContainersVariablesUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVariablesUpdate
        //instance.tagmanagerAccountsContainersVariablesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsCreate', function() {
      it('should call tagmanagerAccountsContainersVersionsCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsCreate
        //instance.tagmanagerAccountsContainersVersionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsDelete', function() {
      it('should call tagmanagerAccountsContainersVersionsDelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsDelete
        //instance.tagmanagerAccountsContainersVersionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsGet', function() {
      it('should call tagmanagerAccountsContainersVersionsGet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsGet
        //instance.tagmanagerAccountsContainersVersionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsList', function() {
      it('should call tagmanagerAccountsContainersVersionsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsList
        //instance.tagmanagerAccountsContainersVersionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsPublish', function() {
      it('should call tagmanagerAccountsContainersVersionsPublish successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsPublish
        //instance.tagmanagerAccountsContainersVersionsPublish(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsRestore', function() {
      it('should call tagmanagerAccountsContainersVersionsRestore successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsRestore
        //instance.tagmanagerAccountsContainersVersionsRestore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsUndelete', function() {
      it('should call tagmanagerAccountsContainersVersionsUndelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsUndelete
        //instance.tagmanagerAccountsContainersVersionsUndelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsUpdate', function() {
      it('should call tagmanagerAccountsContainersVersionsUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsUpdate
        //instance.tagmanagerAccountsContainersVersionsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsGet', function() {
      it('should call tagmanagerAccountsGet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsGet
        //instance.tagmanagerAccountsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsList', function() {
      it('should call tagmanagerAccountsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsList
        //instance.tagmanagerAccountsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsPermissionsCreate', function() {
      it('should call tagmanagerAccountsPermissionsCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsPermissionsCreate
        //instance.tagmanagerAccountsPermissionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsPermissionsDelete', function() {
      it('should call tagmanagerAccountsPermissionsDelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsPermissionsDelete
        //instance.tagmanagerAccountsPermissionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsPermissionsGet', function() {
      it('should call tagmanagerAccountsPermissionsGet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsPermissionsGet
        //instance.tagmanagerAccountsPermissionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsPermissionsList', function() {
      it('should call tagmanagerAccountsPermissionsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsPermissionsList
        //instance.tagmanagerAccountsPermissionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsPermissionsUpdate', function() {
      it('should call tagmanagerAccountsPermissionsUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsPermissionsUpdate
        //instance.tagmanagerAccountsPermissionsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsUpdate', function() {
      it('should call tagmanagerAccountsUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsUpdate
        //instance.tagmanagerAccountsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
