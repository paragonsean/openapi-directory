/*
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Condition;
import org.openapitools.client.model.Parameter;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Trigger
 */
public class TriggerTest {
    private final Trigger model = new Trigger();

    /**
     * Model tests for Trigger
     */
    @Test
    public void testTrigger() {
        // TODO: test Trigger
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'autoEventFilter'
     */
    @Test
    public void autoEventFilterTest() {
        // TODO: test autoEventFilter
    }

    /**
     * Test the property 'checkValidation'
     */
    @Test
    public void checkValidationTest() {
        // TODO: test checkValidation
    }

    /**
     * Test the property 'containerId'
     */
    @Test
    public void containerIdTest() {
        // TODO: test containerId
    }

    /**
     * Test the property 'continuousTimeMinMilliseconds'
     */
    @Test
    public void continuousTimeMinMillisecondsTest() {
        // TODO: test continuousTimeMinMilliseconds
    }

    /**
     * Test the property 'customEventFilter'
     */
    @Test
    public void customEventFilterTest() {
        // TODO: test customEventFilter
    }

    /**
     * Test the property 'eventName'
     */
    @Test
    public void eventNameTest() {
        // TODO: test eventName
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'fingerprint'
     */
    @Test
    public void fingerprintTest() {
        // TODO: test fingerprint
    }

    /**
     * Test the property 'horizontalScrollPercentageList'
     */
    @Test
    public void horizontalScrollPercentageListTest() {
        // TODO: test horizontalScrollPercentageList
    }

    /**
     * Test the property 'interval'
     */
    @Test
    public void intervalTest() {
        // TODO: test interval
    }

    /**
     * Test the property 'intervalSeconds'
     */
    @Test
    public void intervalSecondsTest() {
        // TODO: test intervalSeconds
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

    /**
     * Test the property 'maxTimerLengthSeconds'
     */
    @Test
    public void maxTimerLengthSecondsTest() {
        // TODO: test maxTimerLengthSeconds
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'parameter'
     */
    @Test
    public void parameterTest() {
        // TODO: test parameter
    }

    /**
     * Test the property 'parentFolderId'
     */
    @Test
    public void parentFolderIdTest() {
        // TODO: test parentFolderId
    }

    /**
     * Test the property 'selector'
     */
    @Test
    public void selectorTest() {
        // TODO: test selector
    }

    /**
     * Test the property 'totalTimeMinMilliseconds'
     */
    @Test
    public void totalTimeMinMillisecondsTest() {
        // TODO: test totalTimeMinMilliseconds
    }

    /**
     * Test the property 'triggerId'
     */
    @Test
    public void triggerIdTest() {
        // TODO: test triggerId
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'uniqueTriggerId'
     */
    @Test
    public void uniqueTriggerIdTest() {
        // TODO: test uniqueTriggerId
    }

    /**
     * Test the property 'verticalScrollPercentageList'
     */
    @Test
    public void verticalScrollPercentageListTest() {
        // TODO: test verticalScrollPercentageList
    }

    /**
     * Test the property 'visibilitySelector'
     */
    @Test
    public void visibilitySelectorTest() {
        // TODO: test visibilitySelector
    }

    /**
     * Test the property 'visiblePercentageMax'
     */
    @Test
    public void visiblePercentageMaxTest() {
        // TODO: test visiblePercentageMax
    }

    /**
     * Test the property 'visiblePercentageMin'
     */
    @Test
    public void visiblePercentageMinTest() {
        // TODO: test visiblePercentageMin
    }

    /**
     * Test the property 'waitForTags'
     */
    @Test
    public void waitForTagsTest() {
        // TODO: test waitForTags
    }

    /**
     * Test the property 'waitForTagsTimeout'
     */
    @Test
    public void waitForTagsTimeoutTest() {
        // TODO: test waitForTagsTimeout
    }

}
