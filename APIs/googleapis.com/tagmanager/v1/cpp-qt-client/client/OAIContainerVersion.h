/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerVersion.h
 *
 * Represents a Google Tag Manager Container Version.
 */

#ifndef OAIContainerVersion_H
#define OAIContainerVersion_H

#include <QJsonObject>

#include "OAIContainer.h"
#include "OAIFolder.h"
#include "OAIMacro.h"
#include "OAIRule.h"
#include "OAITag.h"
#include "OAITrigger.h"
#include "OAIVariable.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContainer;
class OAIFolder;
class OAIMacro;
class OAIRule;
class OAITag;
class OAITrigger;
class OAIVariable;

class OAIContainerVersion : public OAIObject {
public:
    OAIContainerVersion();
    OAIContainerVersion(QString json);
    ~OAIContainerVersion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAIContainer getContainer() const;
    void setContainer(const OAIContainer &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    QString getContainerId() const;
    void setContainerId(const QString &container_id);
    bool is_container_id_Set() const;
    bool is_container_id_Valid() const;

    QString getContainerVersionId() const;
    void setContainerVersionId(const QString &container_version_id);
    bool is_container_version_id_Set() const;
    bool is_container_version_id_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getFingerprint() const;
    void setFingerprint(const QString &fingerprint);
    bool is_fingerprint_Set() const;
    bool is_fingerprint_Valid() const;

    QList<OAIFolder> getFolder() const;
    void setFolder(const QList<OAIFolder> &folder);
    bool is_folder_Set() const;
    bool is_folder_Valid() const;

    Q_DECL_DEPRECATED QList<OAIMacro> getMacro() const;
    Q_DECL_DEPRECATED void setMacro(const QList<OAIMacro> &macro);
    Q_DECL_DEPRECATED bool is_macro_Set() const;
    Q_DECL_DEPRECATED bool is_macro_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    Q_DECL_DEPRECATED QList<OAIRule> getRule() const;
    Q_DECL_DEPRECATED void setRule(const QList<OAIRule> &rule);
    Q_DECL_DEPRECATED bool is_rule_Set() const;
    Q_DECL_DEPRECATED bool is_rule_Valid() const;

    QList<OAITag> getTag() const;
    void setTag(const QList<OAITag> &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    QList<OAITrigger> getTrigger() const;
    void setTrigger(const QList<OAITrigger> &trigger);
    bool is_trigger_Set() const;
    bool is_trigger_Valid() const;

    QList<OAIVariable> getVariable() const;
    void setVariable(const QList<OAIVariable> &variable);
    bool is_variable_Set() const;
    bool is_variable_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAIContainer m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    QString m_container_id;
    bool m_container_id_isSet;
    bool m_container_id_isValid;

    QString m_container_version_id;
    bool m_container_version_id_isSet;
    bool m_container_version_id_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_fingerprint;
    bool m_fingerprint_isSet;
    bool m_fingerprint_isValid;

    QList<OAIFolder> m_folder;
    bool m_folder_isSet;
    bool m_folder_isValid;

    QList<OAIMacro> m_macro;
    bool m_macro_isSet;
    bool m_macro_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QList<OAIRule> m_rule;
    bool m_rule_isSet;
    bool m_rule_isValid;

    QList<OAITag> m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;

    QList<OAITrigger> m_trigger;
    bool m_trigger_isSet;
    bool m_trigger_isValid;

    QList<OAIVariable> m_variable;
    bool m_variable_isSet;
    bool m_variable_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerVersion)

#endif // OAIContainerVersion_H
