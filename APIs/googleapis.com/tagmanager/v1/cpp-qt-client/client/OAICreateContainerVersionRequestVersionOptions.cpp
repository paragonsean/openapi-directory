/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateContainerVersionRequestVersionOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateContainerVersionRequestVersionOptions::OAICreateContainerVersionRequestVersionOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateContainerVersionRequestVersionOptions::OAICreateContainerVersionRequestVersionOptions() {
    this->initializeModel();
}

OAICreateContainerVersionRequestVersionOptions::~OAICreateContainerVersionRequestVersionOptions() {}

void OAICreateContainerVersionRequestVersionOptions::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_quick_preview_isSet = false;
    m_quick_preview_isValid = false;
}

void OAICreateContainerVersionRequestVersionOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateContainerVersionRequestVersionOptions::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;

    m_quick_preview_isValid = ::OpenAPI::fromJsonValue(m_quick_preview, json[QString("quickPreview")]);
    m_quick_preview_isSet = !json[QString("quickPreview")].isNull() && m_quick_preview_isValid;
}

QString OAICreateContainerVersionRequestVersionOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateContainerVersionRequestVersionOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_notes_isSet) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_quick_preview_isSet) {
        obj.insert(QString("quickPreview"), ::OpenAPI::toJsonValue(m_quick_preview));
    }
    return obj;
}

QString OAICreateContainerVersionRequestVersionOptions::getName() const {
    return m_name;
}
void OAICreateContainerVersionRequestVersionOptions::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateContainerVersionRequestVersionOptions::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateContainerVersionRequestVersionOptions::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateContainerVersionRequestVersionOptions::getNotes() const {
    return m_notes;
}
void OAICreateContainerVersionRequestVersionOptions::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAICreateContainerVersionRequestVersionOptions::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAICreateContainerVersionRequestVersionOptions::is_notes_Valid() const{
    return m_notes_isValid;
}

bool OAICreateContainerVersionRequestVersionOptions::isQuickPreview() const {
    return m_quick_preview;
}
void OAICreateContainerVersionRequestVersionOptions::setQuickPreview(const bool &quick_preview) {
    m_quick_preview = quick_preview;
    m_quick_preview_isSet = true;
}

bool OAICreateContainerVersionRequestVersionOptions::is_quick_preview_Set() const{
    return m_quick_preview_isSet;
}

bool OAICreateContainerVersionRequestVersionOptions::is_quick_preview_Valid() const{
    return m_quick_preview_isValid;
}

bool OAICreateContainerVersionRequestVersionOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quick_preview_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateContainerVersionRequestVersionOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
