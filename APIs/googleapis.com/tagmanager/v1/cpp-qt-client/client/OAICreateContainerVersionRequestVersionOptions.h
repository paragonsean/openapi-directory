/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateContainerVersionRequestVersionOptions.h
 *
 * Options for new container versions.
 */

#ifndef OAICreateContainerVersionRequestVersionOptions_H
#define OAICreateContainerVersionRequestVersionOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateContainerVersionRequestVersionOptions : public OAIObject {
public:
    OAICreateContainerVersionRequestVersionOptions();
    OAICreateContainerVersionRequestVersionOptions(QString json);
    ~OAICreateContainerVersionRequestVersionOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    bool isQuickPreview() const;
    void setQuickPreview(const bool &quick_preview);
    bool is_quick_preview_Set() const;
    bool is_quick_preview_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    bool m_quick_preview;
    bool m_quick_preview_isSet;
    bool m_quick_preview_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateContainerVersionRequestVersionOptions)

#endif // OAICreateContainerVersionRequestVersionOptions_H
