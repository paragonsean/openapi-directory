/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserAccess.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserAccess::OAIUserAccess(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserAccess::OAIUserAccess() {
    this->initializeModel();
}

OAIUserAccess::~OAIUserAccess() {}

void OAIUserAccess::initializeModel() {

    m_account_access_isSet = false;
    m_account_access_isValid = false;

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_container_access_isSet = false;
    m_container_access_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_permission_id_isSet = false;
    m_permission_id_isValid = false;
}

void OAIUserAccess::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserAccess::fromJsonObject(QJsonObject json) {

    m_account_access_isValid = ::OpenAPI::fromJsonValue(m_account_access, json[QString("accountAccess")]);
    m_account_access_isSet = !json[QString("accountAccess")].isNull() && m_account_access_isValid;

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_container_access_isValid = ::OpenAPI::fromJsonValue(m_container_access, json[QString("containerAccess")]);
    m_container_access_isSet = !json[QString("containerAccess")].isNull() && m_container_access_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("emailAddress")]);
    m_email_address_isSet = !json[QString("emailAddress")].isNull() && m_email_address_isValid;

    m_permission_id_isValid = ::OpenAPI::fromJsonValue(m_permission_id, json[QString("permissionId")]);
    m_permission_id_isSet = !json[QString("permissionId")].isNull() && m_permission_id_isValid;
}

QString OAIUserAccess::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserAccess::asJsonObject() const {
    QJsonObject obj;
    if (m_account_access.isSet()) {
        obj.insert(QString("accountAccess"), ::OpenAPI::toJsonValue(m_account_access));
    }
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_container_access.size() > 0) {
        obj.insert(QString("containerAccess"), ::OpenAPI::toJsonValue(m_container_access));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("emailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_permission_id_isSet) {
        obj.insert(QString("permissionId"), ::OpenAPI::toJsonValue(m_permission_id));
    }
    return obj;
}

OAIAccountAccess OAIUserAccess::getAccountAccess() const {
    return m_account_access;
}
void OAIUserAccess::setAccountAccess(const OAIAccountAccess &account_access) {
    m_account_access = account_access;
    m_account_access_isSet = true;
}

bool OAIUserAccess::is_account_access_Set() const{
    return m_account_access_isSet;
}

bool OAIUserAccess::is_account_access_Valid() const{
    return m_account_access_isValid;
}

QString OAIUserAccess::getAccountId() const {
    return m_account_id;
}
void OAIUserAccess::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIUserAccess::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIUserAccess::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QList<OAIContainerAccess> OAIUserAccess::getContainerAccess() const {
    return m_container_access;
}
void OAIUserAccess::setContainerAccess(const QList<OAIContainerAccess> &container_access) {
    m_container_access = container_access;
    m_container_access_isSet = true;
}

bool OAIUserAccess::is_container_access_Set() const{
    return m_container_access_isSet;
}

bool OAIUserAccess::is_container_access_Valid() const{
    return m_container_access_isValid;
}

QString OAIUserAccess::getEmailAddress() const {
    return m_email_address;
}
void OAIUserAccess::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIUserAccess::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIUserAccess::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAIUserAccess::getPermissionId() const {
    return m_permission_id;
}
void OAIUserAccess::setPermissionId(const QString &permission_id) {
    m_permission_id = permission_id;
    m_permission_id_isSet = true;
}

bool OAIUserAccess::is_permission_id_Set() const{
    return m_permission_id_isSet;
}

bool OAIUserAccess::is_permission_id_Valid() const{
    return m_permission_id_isValid;
}

bool OAIUserAccess::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_access.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_container_access.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permission_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserAccess::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
