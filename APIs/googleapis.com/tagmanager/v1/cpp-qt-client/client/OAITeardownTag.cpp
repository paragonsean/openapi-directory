/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeardownTag.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeardownTag::OAITeardownTag(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeardownTag::OAITeardownTag() {
    this->initializeModel();
}

OAITeardownTag::~OAITeardownTag() {}

void OAITeardownTag::initializeModel() {

    m_stop_teardown_on_failure_isSet = false;
    m_stop_teardown_on_failure_isValid = false;

    m_tag_name_isSet = false;
    m_tag_name_isValid = false;
}

void OAITeardownTag::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeardownTag::fromJsonObject(QJsonObject json) {

    m_stop_teardown_on_failure_isValid = ::OpenAPI::fromJsonValue(m_stop_teardown_on_failure, json[QString("stopTeardownOnFailure")]);
    m_stop_teardown_on_failure_isSet = !json[QString("stopTeardownOnFailure")].isNull() && m_stop_teardown_on_failure_isValid;

    m_tag_name_isValid = ::OpenAPI::fromJsonValue(m_tag_name, json[QString("tagName")]);
    m_tag_name_isSet = !json[QString("tagName")].isNull() && m_tag_name_isValid;
}

QString OAITeardownTag::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeardownTag::asJsonObject() const {
    QJsonObject obj;
    if (m_stop_teardown_on_failure_isSet) {
        obj.insert(QString("stopTeardownOnFailure"), ::OpenAPI::toJsonValue(m_stop_teardown_on_failure));
    }
    if (m_tag_name_isSet) {
        obj.insert(QString("tagName"), ::OpenAPI::toJsonValue(m_tag_name));
    }
    return obj;
}

bool OAITeardownTag::isStopTeardownOnFailure() const {
    return m_stop_teardown_on_failure;
}
void OAITeardownTag::setStopTeardownOnFailure(const bool &stop_teardown_on_failure) {
    m_stop_teardown_on_failure = stop_teardown_on_failure;
    m_stop_teardown_on_failure_isSet = true;
}

bool OAITeardownTag::is_stop_teardown_on_failure_Set() const{
    return m_stop_teardown_on_failure_isSet;
}

bool OAITeardownTag::is_stop_teardown_on_failure_Valid() const{
    return m_stop_teardown_on_failure_isValid;
}

QString OAITeardownTag::getTagName() const {
    return m_tag_name;
}
void OAITeardownTag::setTagName(const QString &tag_name) {
    m_tag_name = tag_name;
    m_tag_name_isSet = true;
}

bool OAITeardownTag::is_tag_name_Set() const{
    return m_tag_name_isSet;
}

bool OAITeardownTag::is_tag_name_Valid() const{
    return m_tag_name_isValid;
}

bool OAITeardownTag::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_stop_teardown_on_failure_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeardownTag::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
