/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVariable.h
 *
 * Represents a Google Tag Manager Variable.
 */

#ifndef OAIVariable_H
#define OAIVariable_H

#include <QJsonObject>

#include "OAIParameter.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParameter;

class OAIVariable : public OAIObject {
public:
    OAIVariable();
    OAIVariable(QString json);
    ~OAIVariable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getContainerId() const;
    void setContainerId(const QString &container_id);
    bool is_container_id_Set() const;
    bool is_container_id_Valid() const;

    QList<QString> getDisablingTriggerId() const;
    void setDisablingTriggerId(const QList<QString> &disabling_trigger_id);
    bool is_disabling_trigger_id_Set() const;
    bool is_disabling_trigger_id_Valid() const;

    QList<QString> getEnablingTriggerId() const;
    void setEnablingTriggerId(const QList<QString> &enabling_trigger_id);
    bool is_enabling_trigger_id_Set() const;
    bool is_enabling_trigger_id_Valid() const;

    QString getFingerprint() const;
    void setFingerprint(const QString &fingerprint);
    bool is_fingerprint_Set() const;
    bool is_fingerprint_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QList<OAIParameter> getParameter() const;
    void setParameter(const QList<OAIParameter> &parameter);
    bool is_parameter_Set() const;
    bool is_parameter_Valid() const;

    QString getParentFolderId() const;
    void setParentFolderId(const QString &parent_folder_id);
    bool is_parent_folder_id_Set() const;
    bool is_parent_folder_id_Valid() const;

    QString getScheduleEndMs() const;
    void setScheduleEndMs(const QString &schedule_end_ms);
    bool is_schedule_end_ms_Set() const;
    bool is_schedule_end_ms_Valid() const;

    QString getScheduleStartMs() const;
    void setScheduleStartMs(const QString &schedule_start_ms);
    bool is_schedule_start_ms_Set() const;
    bool is_schedule_start_ms_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getVariableId() const;
    void setVariableId(const QString &variable_id);
    bool is_variable_id_Set() const;
    bool is_variable_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_container_id;
    bool m_container_id_isSet;
    bool m_container_id_isValid;

    QList<QString> m_disabling_trigger_id;
    bool m_disabling_trigger_id_isSet;
    bool m_disabling_trigger_id_isValid;

    QList<QString> m_enabling_trigger_id;
    bool m_enabling_trigger_id_isSet;
    bool m_enabling_trigger_id_isValid;

    QString m_fingerprint;
    bool m_fingerprint_isSet;
    bool m_fingerprint_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QList<OAIParameter> m_parameter;
    bool m_parameter_isSet;
    bool m_parameter_isValid;

    QString m_parent_folder_id;
    bool m_parent_folder_id_isSet;
    bool m_parent_folder_id_isValid;

    QString m_schedule_end_ms;
    bool m_schedule_end_ms_isSet;
    bool m_schedule_end_ms_isValid;

    QString m_schedule_start_ms;
    bool m_schedule_start_ms_isSet;
    bool m_schedule_start_ms_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_variable_id;
    bool m_variable_id_isSet;
    bool m_variable_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVariable)

#endif // OAIVariable_H
