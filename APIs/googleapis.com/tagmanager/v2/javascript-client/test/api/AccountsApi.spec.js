/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TagManagerApi);
  }
}(this, function(expect, TagManagerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TagManagerApi.AccountsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountsApi', function() {
    describe('tagmanagerAccountsContainersCombine', function() {
      it('should call tagmanagerAccountsContainersCombine successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersCombine
        //instance.tagmanagerAccountsContainersCombine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersCreate', function() {
      it('should call tagmanagerAccountsContainersCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersCreate
        //instance.tagmanagerAccountsContainersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersDestinationsLink', function() {
      it('should call tagmanagerAccountsContainersDestinationsLink successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersDestinationsLink
        //instance.tagmanagerAccountsContainersDestinationsLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersDestinationsList', function() {
      it('should call tagmanagerAccountsContainersDestinationsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersDestinationsList
        //instance.tagmanagerAccountsContainersDestinationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersEnvironmentsCreate', function() {
      it('should call tagmanagerAccountsContainersEnvironmentsCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersEnvironmentsCreate
        //instance.tagmanagerAccountsContainersEnvironmentsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersEnvironmentsList', function() {
      it('should call tagmanagerAccountsContainersEnvironmentsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersEnvironmentsList
        //instance.tagmanagerAccountsContainersEnvironmentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersEnvironmentsReauthorize', function() {
      it('should call tagmanagerAccountsContainersEnvironmentsReauthorize successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersEnvironmentsReauthorize
        //instance.tagmanagerAccountsContainersEnvironmentsReauthorize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersList', function() {
      it('should call tagmanagerAccountsContainersList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersList
        //instance.tagmanagerAccountsContainersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersLookup', function() {
      it('should call tagmanagerAccountsContainersLookup successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersLookup
        //instance.tagmanagerAccountsContainersLookup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersMoveTagId', function() {
      it('should call tagmanagerAccountsContainersMoveTagId successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersMoveTagId
        //instance.tagmanagerAccountsContainersMoveTagId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersSnippet', function() {
      it('should call tagmanagerAccountsContainersSnippet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersSnippet
        //instance.tagmanagerAccountsContainersSnippet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionHeadersLatest', function() {
      it('should call tagmanagerAccountsContainersVersionHeadersLatest successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionHeadersLatest
        //instance.tagmanagerAccountsContainersVersionHeadersLatest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionHeadersList', function() {
      it('should call tagmanagerAccountsContainersVersionHeadersList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionHeadersList
        //instance.tagmanagerAccountsContainersVersionHeadersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsLive', function() {
      it('should call tagmanagerAccountsContainersVersionsLive successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsLive
        //instance.tagmanagerAccountsContainersVersionsLive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsPublish', function() {
      it('should call tagmanagerAccountsContainersVersionsPublish successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsPublish
        //instance.tagmanagerAccountsContainersVersionsPublish(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsSetLatest', function() {
      it('should call tagmanagerAccountsContainersVersionsSetLatest successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsSetLatest
        //instance.tagmanagerAccountsContainersVersionsSetLatest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersVersionsUndelete', function() {
      it('should call tagmanagerAccountsContainersVersionsUndelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersVersionsUndelete
        //instance.tagmanagerAccountsContainersVersionsUndelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesBuiltInVariablesCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesBuiltInVariablesCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesBuiltInVariablesCreate
        //instance.tagmanagerAccountsContainersWorkspacesBuiltInVariablesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesBuiltInVariablesList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesBuiltInVariablesList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesBuiltInVariablesList
        //instance.tagmanagerAccountsContainersWorkspacesBuiltInVariablesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesBuiltInVariablesRevert', function() {
      it('should call tagmanagerAccountsContainersWorkspacesBuiltInVariablesRevert successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesBuiltInVariablesRevert
        //instance.tagmanagerAccountsContainersWorkspacesBuiltInVariablesRevert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesClientsCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesClientsCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesClientsCreate
        //instance.tagmanagerAccountsContainersWorkspacesClientsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesClientsList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesClientsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesClientsList
        //instance.tagmanagerAccountsContainersWorkspacesClientsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesCreate
        //instance.tagmanagerAccountsContainersWorkspacesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesCreateVersion', function() {
      it('should call tagmanagerAccountsContainersWorkspacesCreateVersion successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesCreateVersion
        //instance.tagmanagerAccountsContainersWorkspacesCreateVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesFoldersCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesFoldersCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesFoldersCreate
        //instance.tagmanagerAccountsContainersWorkspacesFoldersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesFoldersEntities', function() {
      it('should call tagmanagerAccountsContainersWorkspacesFoldersEntities successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesFoldersEntities
        //instance.tagmanagerAccountsContainersWorkspacesFoldersEntities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesFoldersList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesFoldersList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesFoldersList
        //instance.tagmanagerAccountsContainersWorkspacesFoldersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolder', function() {
      it('should call tagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolder successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolder
        //instance.tagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesGetStatus', function() {
      it('should call tagmanagerAccountsContainersWorkspacesGetStatus successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesGetStatus
        //instance.tagmanagerAccountsContainersWorkspacesGetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesGtagConfigCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesGtagConfigCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesGtagConfigCreate
        //instance.tagmanagerAccountsContainersWorkspacesGtagConfigCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesGtagConfigList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesGtagConfigList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesGtagConfigList
        //instance.tagmanagerAccountsContainersWorkspacesGtagConfigList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesList
        //instance.tagmanagerAccountsContainersWorkspacesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesQuickPreview', function() {
      it('should call tagmanagerAccountsContainersWorkspacesQuickPreview successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesQuickPreview
        //instance.tagmanagerAccountsContainersWorkspacesQuickPreview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesResolveConflict', function() {
      it('should call tagmanagerAccountsContainersWorkspacesResolveConflict successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesResolveConflict
        //instance.tagmanagerAccountsContainersWorkspacesResolveConflict(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesSync', function() {
      it('should call tagmanagerAccountsContainersWorkspacesSync successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesSync
        //instance.tagmanagerAccountsContainersWorkspacesSync(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesTagsCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesTagsCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesTagsCreate
        //instance.tagmanagerAccountsContainersWorkspacesTagsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesTagsList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesTagsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesTagsList
        //instance.tagmanagerAccountsContainersWorkspacesTagsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesTemplatesCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesTemplatesCreate
        //instance.tagmanagerAccountsContainersWorkspacesTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesTemplatesList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesTemplatesList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesTemplatesList
        //instance.tagmanagerAccountsContainersWorkspacesTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesTransformationsCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesTransformationsCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesTransformationsCreate
        //instance.tagmanagerAccountsContainersWorkspacesTransformationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesTransformationsList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesTransformationsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesTransformationsList
        //instance.tagmanagerAccountsContainersWorkspacesTransformationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesTriggersCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesTriggersCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesTriggersCreate
        //instance.tagmanagerAccountsContainersWorkspacesTriggersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesTriggersList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesTriggersList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesTriggersList
        //instance.tagmanagerAccountsContainersWorkspacesTriggersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesVariablesCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesVariablesCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesVariablesCreate
        //instance.tagmanagerAccountsContainersWorkspacesVariablesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesVariablesList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesVariablesList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesVariablesList
        //instance.tagmanagerAccountsContainersWorkspacesVariablesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesZonesCreate', function() {
      it('should call tagmanagerAccountsContainersWorkspacesZonesCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesZonesCreate
        //instance.tagmanagerAccountsContainersWorkspacesZonesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesZonesList', function() {
      it('should call tagmanagerAccountsContainersWorkspacesZonesList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesZonesList
        //instance.tagmanagerAccountsContainersWorkspacesZonesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsContainersWorkspacesZonesRevert', function() {
      it('should call tagmanagerAccountsContainersWorkspacesZonesRevert successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsContainersWorkspacesZonesRevert
        //instance.tagmanagerAccountsContainersWorkspacesZonesRevert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsList', function() {
      it('should call tagmanagerAccountsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsList
        //instance.tagmanagerAccountsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsUserPermissionsCreate', function() {
      it('should call tagmanagerAccountsUserPermissionsCreate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsUserPermissionsCreate
        //instance.tagmanagerAccountsUserPermissionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsUserPermissionsDelete', function() {
      it('should call tagmanagerAccountsUserPermissionsDelete successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsUserPermissionsDelete
        //instance.tagmanagerAccountsUserPermissionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsUserPermissionsGet', function() {
      it('should call tagmanagerAccountsUserPermissionsGet successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsUserPermissionsGet
        //instance.tagmanagerAccountsUserPermissionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsUserPermissionsList', function() {
      it('should call tagmanagerAccountsUserPermissionsList successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsUserPermissionsList
        //instance.tagmanagerAccountsUserPermissionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagmanagerAccountsUserPermissionsUpdate', function() {
      it('should call tagmanagerAccountsUserPermissionsUpdate successfully', function(done) {
        //uncomment below and update the code to test tagmanagerAccountsUserPermissionsUpdate
        //instance.tagmanagerAccountsUserPermissionsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
