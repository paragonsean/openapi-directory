/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BuiltInVariable model module.
 * @module model/BuiltInVariable
 * @version v2
 */
class BuiltInVariable {
    /**
     * Constructs a new <code>BuiltInVariable</code>.
     * Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing properties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.
     * @alias module:model/BuiltInVariable
     */
    constructor() { 
        
        BuiltInVariable.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuiltInVariable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuiltInVariable} obj Optional instance to populate.
     * @return {module:model/BuiltInVariable} The populated <code>BuiltInVariable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuiltInVariable();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('containerId')) {
                obj['containerId'] = ApiClient.convertToType(data['containerId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('workspaceId')) {
                obj['workspaceId'] = ApiClient.convertToType(data['workspaceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuiltInVariable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuiltInVariable</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['containerId'] && !(typeof data['containerId'] === 'string' || data['containerId'] instanceof String)) {
            throw new Error("Expected the field `containerId` to be a primitive type in the JSON string but got " + data['containerId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['workspaceId'] && !(typeof data['workspaceId'] === 'string' || data['workspaceId'] instanceof String)) {
            throw new Error("Expected the field `workspaceId` to be a primitive type in the JSON string but got " + data['workspaceId']);
        }

        return true;
    }


}



/**
 * GTM Account ID.
 * @member {String} accountId
 */
BuiltInVariable.prototype['accountId'] = undefined;

/**
 * GTM Container ID.
 * @member {String} containerId
 */
BuiltInVariable.prototype['containerId'] = undefined;

/**
 * Name of the built-in variable to be used to refer to the built-in variable.
 * @member {String} name
 */
BuiltInVariable.prototype['name'] = undefined;

/**
 * GTM BuiltInVariable's API relative path.
 * @member {String} path
 */
BuiltInVariable.prototype['path'] = undefined;

/**
 * Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update
 * @member {module:model/BuiltInVariable.TypeEnum} type
 */
BuiltInVariable.prototype['type'] = undefined;

/**
 * GTM Workspace ID.
 * @member {String} workspaceId
 */
BuiltInVariable.prototype['workspaceId'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
BuiltInVariable['TypeEnum'] = {

    /**
     * value: "builtInVariableTypeUnspecified"
     * @const
     */
    "builtInVariableTypeUnspecified": "builtInVariableTypeUnspecified",

    /**
     * value: "pageUrl"
     * @const
     */
    "pageUrl": "pageUrl",

    /**
     * value: "pageHostname"
     * @const
     */
    "pageHostname": "pageHostname",

    /**
     * value: "pagePath"
     * @const
     */
    "pagePath": "pagePath",

    /**
     * value: "referrer"
     * @const
     */
    "referrer": "referrer",

    /**
     * value: "event"
     * @const
     */
    "event": "event",

    /**
     * value: "clickElement"
     * @const
     */
    "clickElement": "clickElement",

    /**
     * value: "clickClasses"
     * @const
     */
    "clickClasses": "clickClasses",

    /**
     * value: "clickId"
     * @const
     */
    "clickId": "clickId",

    /**
     * value: "clickTarget"
     * @const
     */
    "clickTarget": "clickTarget",

    /**
     * value: "clickUrl"
     * @const
     */
    "clickUrl": "clickUrl",

    /**
     * value: "clickText"
     * @const
     */
    "clickText": "clickText",

    /**
     * value: "firstPartyServingUrl"
     * @const
     */
    "firstPartyServingUrl": "firstPartyServingUrl",

    /**
     * value: "formElement"
     * @const
     */
    "formElement": "formElement",

    /**
     * value: "formClasses"
     * @const
     */
    "formClasses": "formClasses",

    /**
     * value: "formId"
     * @const
     */
    "formId": "formId",

    /**
     * value: "formTarget"
     * @const
     */
    "formTarget": "formTarget",

    /**
     * value: "formUrl"
     * @const
     */
    "formUrl": "formUrl",

    /**
     * value: "formText"
     * @const
     */
    "formText": "formText",

    /**
     * value: "errorMessage"
     * @const
     */
    "errorMessage": "errorMessage",

    /**
     * value: "errorUrl"
     * @const
     */
    "errorUrl": "errorUrl",

    /**
     * value: "errorLine"
     * @const
     */
    "errorLine": "errorLine",

    /**
     * value: "newHistoryUrl"
     * @const
     */
    "newHistoryUrl": "newHistoryUrl",

    /**
     * value: "oldHistoryUrl"
     * @const
     */
    "oldHistoryUrl": "oldHistoryUrl",

    /**
     * value: "newHistoryFragment"
     * @const
     */
    "newHistoryFragment": "newHistoryFragment",

    /**
     * value: "oldHistoryFragment"
     * @const
     */
    "oldHistoryFragment": "oldHistoryFragment",

    /**
     * value: "newHistoryState"
     * @const
     */
    "newHistoryState": "newHistoryState",

    /**
     * value: "oldHistoryState"
     * @const
     */
    "oldHistoryState": "oldHistoryState",

    /**
     * value: "historySource"
     * @const
     */
    "historySource": "historySource",

    /**
     * value: "containerVersion"
     * @const
     */
    "containerVersion": "containerVersion",

    /**
     * value: "debugMode"
     * @const
     */
    "debugMode": "debugMode",

    /**
     * value: "randomNumber"
     * @const
     */
    "randomNumber": "randomNumber",

    /**
     * value: "containerId"
     * @const
     */
    "containerId": "containerId",

    /**
     * value: "appId"
     * @const
     */
    "appId": "appId",

    /**
     * value: "appName"
     * @const
     */
    "appName": "appName",

    /**
     * value: "appVersionCode"
     * @const
     */
    "appVersionCode": "appVersionCode",

    /**
     * value: "appVersionName"
     * @const
     */
    "appVersionName": "appVersionName",

    /**
     * value: "language"
     * @const
     */
    "language": "language",

    /**
     * value: "osVersion"
     * @const
     */
    "osVersion": "osVersion",

    /**
     * value: "platform"
     * @const
     */
    "platform": "platform",

    /**
     * value: "sdkVersion"
     * @const
     */
    "sdkVersion": "sdkVersion",

    /**
     * value: "deviceName"
     * @const
     */
    "deviceName": "deviceName",

    /**
     * value: "resolution"
     * @const
     */
    "resolution": "resolution",

    /**
     * value: "advertiserId"
     * @const
     */
    "advertiserId": "advertiserId",

    /**
     * value: "advertisingTrackingEnabled"
     * @const
     */
    "advertisingTrackingEnabled": "advertisingTrackingEnabled",

    /**
     * value: "htmlId"
     * @const
     */
    "htmlId": "htmlId",

    /**
     * value: "environmentName"
     * @const
     */
    "environmentName": "environmentName",

    /**
     * value: "ampBrowserLanguage"
     * @const
     */
    "ampBrowserLanguage": "ampBrowserLanguage",

    /**
     * value: "ampCanonicalPath"
     * @const
     */
    "ampCanonicalPath": "ampCanonicalPath",

    /**
     * value: "ampCanonicalUrl"
     * @const
     */
    "ampCanonicalUrl": "ampCanonicalUrl",

    /**
     * value: "ampCanonicalHost"
     * @const
     */
    "ampCanonicalHost": "ampCanonicalHost",

    /**
     * value: "ampReferrer"
     * @const
     */
    "ampReferrer": "ampReferrer",

    /**
     * value: "ampTitle"
     * @const
     */
    "ampTitle": "ampTitle",

    /**
     * value: "ampClientId"
     * @const
     */
    "ampClientId": "ampClientId",

    /**
     * value: "ampClientTimezone"
     * @const
     */
    "ampClientTimezone": "ampClientTimezone",

    /**
     * value: "ampClientTimestamp"
     * @const
     */
    "ampClientTimestamp": "ampClientTimestamp",

    /**
     * value: "ampClientScreenWidth"
     * @const
     */
    "ampClientScreenWidth": "ampClientScreenWidth",

    /**
     * value: "ampClientScreenHeight"
     * @const
     */
    "ampClientScreenHeight": "ampClientScreenHeight",

    /**
     * value: "ampClientScrollX"
     * @const
     */
    "ampClientScrollX": "ampClientScrollX",

    /**
     * value: "ampClientScrollY"
     * @const
     */
    "ampClientScrollY": "ampClientScrollY",

    /**
     * value: "ampClientMaxScrollX"
     * @const
     */
    "ampClientMaxScrollX": "ampClientMaxScrollX",

    /**
     * value: "ampClientMaxScrollY"
     * @const
     */
    "ampClientMaxScrollY": "ampClientMaxScrollY",

    /**
     * value: "ampTotalEngagedTime"
     * @const
     */
    "ampTotalEngagedTime": "ampTotalEngagedTime",

    /**
     * value: "ampPageViewId"
     * @const
     */
    "ampPageViewId": "ampPageViewId",

    /**
     * value: "ampPageLoadTime"
     * @const
     */
    "ampPageLoadTime": "ampPageLoadTime",

    /**
     * value: "ampPageDownloadTime"
     * @const
     */
    "ampPageDownloadTime": "ampPageDownloadTime",

    /**
     * value: "ampGtmEvent"
     * @const
     */
    "ampGtmEvent": "ampGtmEvent",

    /**
     * value: "eventName"
     * @const
     */
    "eventName": "eventName",

    /**
     * value: "firebaseEventParameterCampaign"
     * @const
     */
    "firebaseEventParameterCampaign": "firebaseEventParameterCampaign",

    /**
     * value: "firebaseEventParameterCampaignAclid"
     * @const
     */
    "firebaseEventParameterCampaignAclid": "firebaseEventParameterCampaignAclid",

    /**
     * value: "firebaseEventParameterCampaignAnid"
     * @const
     */
    "firebaseEventParameterCampaignAnid": "firebaseEventParameterCampaignAnid",

    /**
     * value: "firebaseEventParameterCampaignClickTimestamp"
     * @const
     */
    "firebaseEventParameterCampaignClickTimestamp": "firebaseEventParameterCampaignClickTimestamp",

    /**
     * value: "firebaseEventParameterCampaignContent"
     * @const
     */
    "firebaseEventParameterCampaignContent": "firebaseEventParameterCampaignContent",

    /**
     * value: "firebaseEventParameterCampaignCp1"
     * @const
     */
    "firebaseEventParameterCampaignCp1": "firebaseEventParameterCampaignCp1",

    /**
     * value: "firebaseEventParameterCampaignGclid"
     * @const
     */
    "firebaseEventParameterCampaignGclid": "firebaseEventParameterCampaignGclid",

    /**
     * value: "firebaseEventParameterCampaignSource"
     * @const
     */
    "firebaseEventParameterCampaignSource": "firebaseEventParameterCampaignSource",

    /**
     * value: "firebaseEventParameterCampaignTerm"
     * @const
     */
    "firebaseEventParameterCampaignTerm": "firebaseEventParameterCampaignTerm",

    /**
     * value: "firebaseEventParameterCurrency"
     * @const
     */
    "firebaseEventParameterCurrency": "firebaseEventParameterCurrency",

    /**
     * value: "firebaseEventParameterDynamicLinkAcceptTime"
     * @const
     */
    "firebaseEventParameterDynamicLinkAcceptTime": "firebaseEventParameterDynamicLinkAcceptTime",

    /**
     * value: "firebaseEventParameterDynamicLinkLinkid"
     * @const
     */
    "firebaseEventParameterDynamicLinkLinkid": "firebaseEventParameterDynamicLinkLinkid",

    /**
     * value: "firebaseEventParameterNotificationMessageDeviceTime"
     * @const
     */
    "firebaseEventParameterNotificationMessageDeviceTime": "firebaseEventParameterNotificationMessageDeviceTime",

    /**
     * value: "firebaseEventParameterNotificationMessageId"
     * @const
     */
    "firebaseEventParameterNotificationMessageId": "firebaseEventParameterNotificationMessageId",

    /**
     * value: "firebaseEventParameterNotificationMessageName"
     * @const
     */
    "firebaseEventParameterNotificationMessageName": "firebaseEventParameterNotificationMessageName",

    /**
     * value: "firebaseEventParameterNotificationMessageTime"
     * @const
     */
    "firebaseEventParameterNotificationMessageTime": "firebaseEventParameterNotificationMessageTime",

    /**
     * value: "firebaseEventParameterNotificationTopic"
     * @const
     */
    "firebaseEventParameterNotificationTopic": "firebaseEventParameterNotificationTopic",

    /**
     * value: "firebaseEventParameterPreviousAppVersion"
     * @const
     */
    "firebaseEventParameterPreviousAppVersion": "firebaseEventParameterPreviousAppVersion",

    /**
     * value: "firebaseEventParameterPreviousOsVersion"
     * @const
     */
    "firebaseEventParameterPreviousOsVersion": "firebaseEventParameterPreviousOsVersion",

    /**
     * value: "firebaseEventParameterPrice"
     * @const
     */
    "firebaseEventParameterPrice": "firebaseEventParameterPrice",

    /**
     * value: "firebaseEventParameterProductId"
     * @const
     */
    "firebaseEventParameterProductId": "firebaseEventParameterProductId",

    /**
     * value: "firebaseEventParameterQuantity"
     * @const
     */
    "firebaseEventParameterQuantity": "firebaseEventParameterQuantity",

    /**
     * value: "firebaseEventParameterValue"
     * @const
     */
    "firebaseEventParameterValue": "firebaseEventParameterValue",

    /**
     * value: "videoProvider"
     * @const
     */
    "videoProvider": "videoProvider",

    /**
     * value: "videoUrl"
     * @const
     */
    "videoUrl": "videoUrl",

    /**
     * value: "videoTitle"
     * @const
     */
    "videoTitle": "videoTitle",

    /**
     * value: "videoDuration"
     * @const
     */
    "videoDuration": "videoDuration",

    /**
     * value: "videoPercent"
     * @const
     */
    "videoPercent": "videoPercent",

    /**
     * value: "videoVisible"
     * @const
     */
    "videoVisible": "videoVisible",

    /**
     * value: "videoStatus"
     * @const
     */
    "videoStatus": "videoStatus",

    /**
     * value: "videoCurrentTime"
     * @const
     */
    "videoCurrentTime": "videoCurrentTime",

    /**
     * value: "scrollDepthThreshold"
     * @const
     */
    "scrollDepthThreshold": "scrollDepthThreshold",

    /**
     * value: "scrollDepthUnits"
     * @const
     */
    "scrollDepthUnits": "scrollDepthUnits",

    /**
     * value: "scrollDepthDirection"
     * @const
     */
    "scrollDepthDirection": "scrollDepthDirection",

    /**
     * value: "elementVisibilityRatio"
     * @const
     */
    "elementVisibilityRatio": "elementVisibilityRatio",

    /**
     * value: "elementVisibilityTime"
     * @const
     */
    "elementVisibilityTime": "elementVisibilityTime",

    /**
     * value: "elementVisibilityFirstTime"
     * @const
     */
    "elementVisibilityFirstTime": "elementVisibilityFirstTime",

    /**
     * value: "elementVisibilityRecentTime"
     * @const
     */
    "elementVisibilityRecentTime": "elementVisibilityRecentTime",

    /**
     * value: "requestPath"
     * @const
     */
    "requestPath": "requestPath",

    /**
     * value: "requestMethod"
     * @const
     */
    "requestMethod": "requestMethod",

    /**
     * value: "clientName"
     * @const
     */
    "clientName": "clientName",

    /**
     * value: "queryString"
     * @const
     */
    "queryString": "queryString",

    /**
     * value: "serverPageLocationUrl"
     * @const
     */
    "serverPageLocationUrl": "serverPageLocationUrl",

    /**
     * value: "serverPageLocationPath"
     * @const
     */
    "serverPageLocationPath": "serverPageLocationPath",

    /**
     * value: "serverPageLocationHostname"
     * @const
     */
    "serverPageLocationHostname": "serverPageLocationHostname",

    /**
     * value: "visitorRegion"
     * @const
     */
    "visitorRegion": "visitorRegion"
};



export default BuiltInVariable;

