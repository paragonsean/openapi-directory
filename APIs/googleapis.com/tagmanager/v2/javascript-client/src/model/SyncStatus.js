/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SyncStatus model module.
 * @module model/SyncStatus
 * @version v2
 */
class SyncStatus {
    /**
     * Constructs a new <code>SyncStatus</code>.
     * The status of a workspace after synchronization.
     * @alias module:model/SyncStatus
     */
    constructor() { 
        
        SyncStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SyncStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SyncStatus} obj Optional instance to populate.
     * @return {module:model/SyncStatus} The populated <code>SyncStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SyncStatus();

            if (data.hasOwnProperty('mergeConflict')) {
                obj['mergeConflict'] = ApiClient.convertToType(data['mergeConflict'], 'Boolean');
            }
            if (data.hasOwnProperty('syncError')) {
                obj['syncError'] = ApiClient.convertToType(data['syncError'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SyncStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SyncStatus</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Synchornization operation detected a merge conflict.
 * @member {Boolean} mergeConflict
 */
SyncStatus.prototype['mergeConflict'] = undefined;

/**
 * An error occurred during the synchronization operation.
 * @member {Boolean} syncError
 */
SyncStatus.prototype['syncError'] = undefined;






export default SyncStatus;

