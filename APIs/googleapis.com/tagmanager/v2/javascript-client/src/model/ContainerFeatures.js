/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContainerFeatures model module.
 * @module model/ContainerFeatures
 * @version v2
 */
class ContainerFeatures {
    /**
     * Constructs a new <code>ContainerFeatures</code>.
     * @alias module:model/ContainerFeatures
     */
    constructor() { 
        
        ContainerFeatures.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContainerFeatures</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerFeatures} obj Optional instance to populate.
     * @return {module:model/ContainerFeatures} The populated <code>ContainerFeatures</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerFeatures();

            if (data.hasOwnProperty('supportBuiltInVariables')) {
                obj['supportBuiltInVariables'] = ApiClient.convertToType(data['supportBuiltInVariables'], 'Boolean');
            }
            if (data.hasOwnProperty('supportClients')) {
                obj['supportClients'] = ApiClient.convertToType(data['supportClients'], 'Boolean');
            }
            if (data.hasOwnProperty('supportEnvironments')) {
                obj['supportEnvironments'] = ApiClient.convertToType(data['supportEnvironments'], 'Boolean');
            }
            if (data.hasOwnProperty('supportFolders')) {
                obj['supportFolders'] = ApiClient.convertToType(data['supportFolders'], 'Boolean');
            }
            if (data.hasOwnProperty('supportGtagConfigs')) {
                obj['supportGtagConfigs'] = ApiClient.convertToType(data['supportGtagConfigs'], 'Boolean');
            }
            if (data.hasOwnProperty('supportTags')) {
                obj['supportTags'] = ApiClient.convertToType(data['supportTags'], 'Boolean');
            }
            if (data.hasOwnProperty('supportTemplates')) {
                obj['supportTemplates'] = ApiClient.convertToType(data['supportTemplates'], 'Boolean');
            }
            if (data.hasOwnProperty('supportTransformations')) {
                obj['supportTransformations'] = ApiClient.convertToType(data['supportTransformations'], 'Boolean');
            }
            if (data.hasOwnProperty('supportTriggers')) {
                obj['supportTriggers'] = ApiClient.convertToType(data['supportTriggers'], 'Boolean');
            }
            if (data.hasOwnProperty('supportUserPermissions')) {
                obj['supportUserPermissions'] = ApiClient.convertToType(data['supportUserPermissions'], 'Boolean');
            }
            if (data.hasOwnProperty('supportVariables')) {
                obj['supportVariables'] = ApiClient.convertToType(data['supportVariables'], 'Boolean');
            }
            if (data.hasOwnProperty('supportVersions')) {
                obj['supportVersions'] = ApiClient.convertToType(data['supportVersions'], 'Boolean');
            }
            if (data.hasOwnProperty('supportWorkspaces')) {
                obj['supportWorkspaces'] = ApiClient.convertToType(data['supportWorkspaces'], 'Boolean');
            }
            if (data.hasOwnProperty('supportZones')) {
                obj['supportZones'] = ApiClient.convertToType(data['supportZones'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerFeatures</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerFeatures</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Whether this Container supports built-in variables
 * @member {Boolean} supportBuiltInVariables
 */
ContainerFeatures.prototype['supportBuiltInVariables'] = undefined;

/**
 * Whether this Container supports clients.
 * @member {Boolean} supportClients
 */
ContainerFeatures.prototype['supportClients'] = undefined;

/**
 * Whether this Container supports environments.
 * @member {Boolean} supportEnvironments
 */
ContainerFeatures.prototype['supportEnvironments'] = undefined;

/**
 * Whether this Container supports folders.
 * @member {Boolean} supportFolders
 */
ContainerFeatures.prototype['supportFolders'] = undefined;

/**
 * Whether this Container supports Google tag config.
 * @member {Boolean} supportGtagConfigs
 */
ContainerFeatures.prototype['supportGtagConfigs'] = undefined;

/**
 * Whether this Container supports tags.
 * @member {Boolean} supportTags
 */
ContainerFeatures.prototype['supportTags'] = undefined;

/**
 * Whether this Container supports templates.
 * @member {Boolean} supportTemplates
 */
ContainerFeatures.prototype['supportTemplates'] = undefined;

/**
 * Whether this Container supports transformations.
 * @member {Boolean} supportTransformations
 */
ContainerFeatures.prototype['supportTransformations'] = undefined;

/**
 * Whether this Container supports triggers.
 * @member {Boolean} supportTriggers
 */
ContainerFeatures.prototype['supportTriggers'] = undefined;

/**
 * Whether this Container supports user permissions managed by GTM.
 * @member {Boolean} supportUserPermissions
 */
ContainerFeatures.prototype['supportUserPermissions'] = undefined;

/**
 * Whether this Container supports variables.
 * @member {Boolean} supportVariables
 */
ContainerFeatures.prototype['supportVariables'] = undefined;

/**
 * Whether this Container supports Container versions.
 * @member {Boolean} supportVersions
 */
ContainerFeatures.prototype['supportVersions'] = undefined;

/**
 * Whether this Container supports workspaces.
 * @member {Boolean} supportWorkspaces
 */
ContainerFeatures.prototype['supportWorkspaces'] = undefined;

/**
 * Whether this Container supports zones.
 * @member {Boolean} supportZones
 */
ContainerFeatures.prototype['supportZones'] = undefined;






export default ContainerFeatures;

