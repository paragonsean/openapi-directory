/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Destination model module.
 * @module model/Destination
 * @version v2
 */
class Destination {
    /**
     * Constructs a new <code>Destination</code>.
     * Represents a Google Tag Destination.
     * @alias module:model/Destination
     */
    constructor() { 
        
        Destination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Destination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Destination} obj Optional instance to populate.
     * @return {module:model/Destination} The populated <code>Destination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Destination();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('containerId')) {
                obj['containerId'] = ApiClient.convertToType(data['containerId'], 'String');
            }
            if (data.hasOwnProperty('destinationId')) {
                obj['destinationId'] = ApiClient.convertToType(data['destinationId'], 'String');
            }
            if (data.hasOwnProperty('destinationLinkId')) {
                obj['destinationLinkId'] = ApiClient.convertToType(data['destinationLinkId'], 'String');
            }
            if (data.hasOwnProperty('fingerprint')) {
                obj['fingerprint'] = ApiClient.convertToType(data['fingerprint'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('tagManagerUrl')) {
                obj['tagManagerUrl'] = ApiClient.convertToType(data['tagManagerUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Destination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Destination</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['containerId'] && !(typeof data['containerId'] === 'string' || data['containerId'] instanceof String)) {
            throw new Error("Expected the field `containerId` to be a primitive type in the JSON string but got " + data['containerId']);
        }
        // ensure the json data is a string
        if (data['destinationId'] && !(typeof data['destinationId'] === 'string' || data['destinationId'] instanceof String)) {
            throw new Error("Expected the field `destinationId` to be a primitive type in the JSON string but got " + data['destinationId']);
        }
        // ensure the json data is a string
        if (data['destinationLinkId'] && !(typeof data['destinationLinkId'] === 'string' || data['destinationLinkId'] instanceof String)) {
            throw new Error("Expected the field `destinationLinkId` to be a primitive type in the JSON string but got " + data['destinationLinkId']);
        }
        // ensure the json data is a string
        if (data['fingerprint'] && !(typeof data['fingerprint'] === 'string' || data['fingerprint'] instanceof String)) {
            throw new Error("Expected the field `fingerprint` to be a primitive type in the JSON string but got " + data['fingerprint']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['tagManagerUrl'] && !(typeof data['tagManagerUrl'] === 'string' || data['tagManagerUrl'] instanceof String)) {
            throw new Error("Expected the field `tagManagerUrl` to be a primitive type in the JSON string but got " + data['tagManagerUrl']);
        }

        return true;
    }


}



/**
 * GTM Account ID.
 * @member {String} accountId
 */
Destination.prototype['accountId'] = undefined;

/**
 * GTM Container ID.
 * @member {String} containerId
 */
Destination.prototype['containerId'] = undefined;

/**
 * Destination ID.
 * @member {String} destinationId
 */
Destination.prototype['destinationId'] = undefined;

/**
 * The Destination link ID uniquely identifies the Destination.
 * @member {String} destinationLinkId
 */
Destination.prototype['destinationLinkId'] = undefined;

/**
 * The fingerprint of the Google Tag Destination as computed at storage time. This value is recomputed whenever the destination is modified.
 * @member {String} fingerprint
 */
Destination.prototype['fingerprint'] = undefined;

/**
 * Destination display name.
 * @member {String} name
 */
Destination.prototype['name'] = undefined;

/**
 * Destination's API relative path.
 * @member {String} path
 */
Destination.prototype['path'] = undefined;

/**
 * Auto generated link to the tag manager UI.
 * @member {String} tagManagerUrl
 */
Destination.prototype['tagManagerUrl'] = undefined;






export default Destination;

