/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ZoneTypeRestriction model module.
 * @module model/ZoneTypeRestriction
 * @version v2
 */
class ZoneTypeRestriction {
    /**
     * Constructs a new <code>ZoneTypeRestriction</code>.
     * Represents a Zone&#39;s type restrictions.
     * @alias module:model/ZoneTypeRestriction
     */
    constructor() { 
        
        ZoneTypeRestriction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ZoneTypeRestriction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ZoneTypeRestriction} obj Optional instance to populate.
     * @return {module:model/ZoneTypeRestriction} The populated <code>ZoneTypeRestriction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ZoneTypeRestriction();

            if (data.hasOwnProperty('enable')) {
                obj['enable'] = ApiClient.convertToType(data['enable'], 'Boolean');
            }
            if (data.hasOwnProperty('whitelistedTypeId')) {
                obj['whitelistedTypeId'] = ApiClient.convertToType(data['whitelistedTypeId'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ZoneTypeRestriction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ZoneTypeRestriction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['whitelistedTypeId'])) {
            throw new Error("Expected the field `whitelistedTypeId` to be an array in the JSON data but got " + data['whitelistedTypeId']);
        }

        return true;
    }


}



/**
 * True if type restrictions have been enabled for this Zone.
 * @member {Boolean} enable
 */
ZoneTypeRestriction.prototype['enable'] = undefined;

/**
 * List of type public ids that have been whitelisted for use in this Zone.
 * @member {Array.<String>} whitelistedTypeId
 */
ZoneTypeRestriction.prototype['whitelistedTypeId'] = undefined;






export default ZoneTypeRestriction;

