# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SyncStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, merge_conflict: bool=None, sync_error: bool=None):
        """SyncStatus - a model defined in OpenAPI

        :param merge_conflict: The merge_conflict of this SyncStatus.
        :param sync_error: The sync_error of this SyncStatus.
        """
        self.openapi_types = {
            'merge_conflict': bool,
            'sync_error': bool
        }

        self.attribute_map = {
            'merge_conflict': 'mergeConflict',
            'sync_error': 'syncError'
        }

        self._merge_conflict = merge_conflict
        self._sync_error = sync_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyncStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SyncStatus of this SyncStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def merge_conflict(self):
        """Gets the merge_conflict of this SyncStatus.

        Synchornization operation detected a merge conflict.

        :return: The merge_conflict of this SyncStatus.
        :rtype: bool
        """
        return self._merge_conflict

    @merge_conflict.setter
    def merge_conflict(self, merge_conflict):
        """Sets the merge_conflict of this SyncStatus.

        Synchornization operation detected a merge conflict.

        :param merge_conflict: The merge_conflict of this SyncStatus.
        :type merge_conflict: bool
        """

        self._merge_conflict = merge_conflict

    @property
    def sync_error(self):
        """Gets the sync_error of this SyncStatus.

        An error occurred during the synchronization operation.

        :return: The sync_error of this SyncStatus.
        :rtype: bool
        """
        return self._sync_error

    @sync_error.setter
    def sync_error(self, sync_error):
        """Sets the sync_error of this SyncStatus.

        An error occurred during the synchronization operation.

        :param sync_error: The sync_error of this SyncStatus.
        :type sync_error: bool
        """

        self._sync_error = sync_error
