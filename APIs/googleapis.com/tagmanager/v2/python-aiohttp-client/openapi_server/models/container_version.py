# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.built_in_variable import BuiltInVariable
from openapi_server.models.client import Client
from openapi_server.models.container import Container
from openapi_server.models.custom_template import CustomTemplate
from openapi_server.models.folder import Folder
from openapi_server.models.gtag_config import GtagConfig
from openapi_server.models.tag import Tag
from openapi_server.models.transformation import Transformation
from openapi_server.models.trigger import Trigger
from openapi_server.models.variable import Variable
from openapi_server.models.zone import Zone
from openapi_server import util


class ContainerVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, built_in_variable: List[BuiltInVariable]=None, client: List[Client]=None, container: Container=None, container_id: str=None, container_version_id: str=None, custom_template: List[CustomTemplate]=None, deleted: bool=None, description: str=None, fingerprint: str=None, folder: List[Folder]=None, gtag_config: List[GtagConfig]=None, name: str=None, path: str=None, tag: List[Tag]=None, tag_manager_url: str=None, transformation: List[Transformation]=None, trigger: List[Trigger]=None, variable: List[Variable]=None, zone: List[Zone]=None):
        """ContainerVersion - a model defined in OpenAPI

        :param account_id: The account_id of this ContainerVersion.
        :param built_in_variable: The built_in_variable of this ContainerVersion.
        :param client: The client of this ContainerVersion.
        :param container: The container of this ContainerVersion.
        :param container_id: The container_id of this ContainerVersion.
        :param container_version_id: The container_version_id of this ContainerVersion.
        :param custom_template: The custom_template of this ContainerVersion.
        :param deleted: The deleted of this ContainerVersion.
        :param description: The description of this ContainerVersion.
        :param fingerprint: The fingerprint of this ContainerVersion.
        :param folder: The folder of this ContainerVersion.
        :param gtag_config: The gtag_config of this ContainerVersion.
        :param name: The name of this ContainerVersion.
        :param path: The path of this ContainerVersion.
        :param tag: The tag of this ContainerVersion.
        :param tag_manager_url: The tag_manager_url of this ContainerVersion.
        :param transformation: The transformation of this ContainerVersion.
        :param trigger: The trigger of this ContainerVersion.
        :param variable: The variable of this ContainerVersion.
        :param zone: The zone of this ContainerVersion.
        """
        self.openapi_types = {
            'account_id': str,
            'built_in_variable': List[BuiltInVariable],
            'client': List[Client],
            'container': Container,
            'container_id': str,
            'container_version_id': str,
            'custom_template': List[CustomTemplate],
            'deleted': bool,
            'description': str,
            'fingerprint': str,
            'folder': List[Folder],
            'gtag_config': List[GtagConfig],
            'name': str,
            'path': str,
            'tag': List[Tag],
            'tag_manager_url': str,
            'transformation': List[Transformation],
            'trigger': List[Trigger],
            'variable': List[Variable],
            'zone': List[Zone]
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'built_in_variable': 'builtInVariable',
            'client': 'client',
            'container': 'container',
            'container_id': 'containerId',
            'container_version_id': 'containerVersionId',
            'custom_template': 'customTemplate',
            'deleted': 'deleted',
            'description': 'description',
            'fingerprint': 'fingerprint',
            'folder': 'folder',
            'gtag_config': 'gtagConfig',
            'name': 'name',
            'path': 'path',
            'tag': 'tag',
            'tag_manager_url': 'tagManagerUrl',
            'transformation': 'transformation',
            'trigger': 'trigger',
            'variable': 'variable',
            'zone': 'zone'
        }

        self._account_id = account_id
        self._built_in_variable = built_in_variable
        self._client = client
        self._container = container
        self._container_id = container_id
        self._container_version_id = container_version_id
        self._custom_template = custom_template
        self._deleted = deleted
        self._description = description
        self._fingerprint = fingerprint
        self._folder = folder
        self._gtag_config = gtag_config
        self._name = name
        self._path = path
        self._tag = tag
        self._tag_manager_url = tag_manager_url
        self._transformation = transformation
        self._trigger = trigger
        self._variable = variable
        self._zone = zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerVersion of this ContainerVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this ContainerVersion.

        GTM Account ID.

        :return: The account_id of this ContainerVersion.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this ContainerVersion.

        GTM Account ID.

        :param account_id: The account_id of this ContainerVersion.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def built_in_variable(self):
        """Gets the built_in_variable of this ContainerVersion.

        The built-in variables in the container that this version was taken from.

        :return: The built_in_variable of this ContainerVersion.
        :rtype: List[BuiltInVariable]
        """
        return self._built_in_variable

    @built_in_variable.setter
    def built_in_variable(self, built_in_variable):
        """Sets the built_in_variable of this ContainerVersion.

        The built-in variables in the container that this version was taken from.

        :param built_in_variable: The built_in_variable of this ContainerVersion.
        :type built_in_variable: List[BuiltInVariable]
        """

        self._built_in_variable = built_in_variable

    @property
    def client(self):
        """Gets the client of this ContainerVersion.

        The clients in the container that this version was taken from.

        :return: The client of this ContainerVersion.
        :rtype: List[Client]
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this ContainerVersion.

        The clients in the container that this version was taken from.

        :param client: The client of this ContainerVersion.
        :type client: List[Client]
        """

        self._client = client

    @property
    def container(self):
        """Gets the container of this ContainerVersion.


        :return: The container of this ContainerVersion.
        :rtype: Container
        """
        return self._container

    @container.setter
    def container(self, container):
        """Sets the container of this ContainerVersion.


        :param container: The container of this ContainerVersion.
        :type container: Container
        """

        self._container = container

    @property
    def container_id(self):
        """Gets the container_id of this ContainerVersion.

        GTM Container ID.

        :return: The container_id of this ContainerVersion.
        :rtype: str
        """
        return self._container_id

    @container_id.setter
    def container_id(self, container_id):
        """Sets the container_id of this ContainerVersion.

        GTM Container ID.

        :param container_id: The container_id of this ContainerVersion.
        :type container_id: str
        """

        self._container_id = container_id

    @property
    def container_version_id(self):
        """Gets the container_version_id of this ContainerVersion.

        The Container Version ID uniquely identifies the GTM Container Version.

        :return: The container_version_id of this ContainerVersion.
        :rtype: str
        """
        return self._container_version_id

    @container_version_id.setter
    def container_version_id(self, container_version_id):
        """Sets the container_version_id of this ContainerVersion.

        The Container Version ID uniquely identifies the GTM Container Version.

        :param container_version_id: The container_version_id of this ContainerVersion.
        :type container_version_id: str
        """

        self._container_version_id = container_version_id

    @property
    def custom_template(self):
        """Gets the custom_template of this ContainerVersion.

        The custom templates in the container that this version was taken from.

        :return: The custom_template of this ContainerVersion.
        :rtype: List[CustomTemplate]
        """
        return self._custom_template

    @custom_template.setter
    def custom_template(self, custom_template):
        """Sets the custom_template of this ContainerVersion.

        The custom templates in the container that this version was taken from.

        :param custom_template: The custom_template of this ContainerVersion.
        :type custom_template: List[CustomTemplate]
        """

        self._custom_template = custom_template

    @property
    def deleted(self):
        """Gets the deleted of this ContainerVersion.

        A value of true indicates this container version has been deleted.

        :return: The deleted of this ContainerVersion.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this ContainerVersion.

        A value of true indicates this container version has been deleted.

        :param deleted: The deleted of this ContainerVersion.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def description(self):
        """Gets the description of this ContainerVersion.

        Container version description. @mutable tagmanager.accounts.containers.versions.update

        :return: The description of this ContainerVersion.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ContainerVersion.

        Container version description. @mutable tagmanager.accounts.containers.versions.update

        :param description: The description of this ContainerVersion.
        :type description: str
        """

        self._description = description

    @property
    def fingerprint(self):
        """Gets the fingerprint of this ContainerVersion.

        The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.

        :return: The fingerprint of this ContainerVersion.
        :rtype: str
        """
        return self._fingerprint

    @fingerprint.setter
    def fingerprint(self, fingerprint):
        """Sets the fingerprint of this ContainerVersion.

        The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.

        :param fingerprint: The fingerprint of this ContainerVersion.
        :type fingerprint: str
        """

        self._fingerprint = fingerprint

    @property
    def folder(self):
        """Gets the folder of this ContainerVersion.

        The folders in the container that this version was taken from.

        :return: The folder of this ContainerVersion.
        :rtype: List[Folder]
        """
        return self._folder

    @folder.setter
    def folder(self, folder):
        """Sets the folder of this ContainerVersion.

        The folders in the container that this version was taken from.

        :param folder: The folder of this ContainerVersion.
        :type folder: List[Folder]
        """

        self._folder = folder

    @property
    def gtag_config(self):
        """Gets the gtag_config of this ContainerVersion.

        The Google tag configs in the container that this version was taken from.

        :return: The gtag_config of this ContainerVersion.
        :rtype: List[GtagConfig]
        """
        return self._gtag_config

    @gtag_config.setter
    def gtag_config(self, gtag_config):
        """Sets the gtag_config of this ContainerVersion.

        The Google tag configs in the container that this version was taken from.

        :param gtag_config: The gtag_config of this ContainerVersion.
        :type gtag_config: List[GtagConfig]
        """

        self._gtag_config = gtag_config

    @property
    def name(self):
        """Gets the name of this ContainerVersion.

        Container version display name. @mutable tagmanager.accounts.containers.versions.update

        :return: The name of this ContainerVersion.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContainerVersion.

        Container version display name. @mutable tagmanager.accounts.containers.versions.update

        :param name: The name of this ContainerVersion.
        :type name: str
        """

        self._name = name

    @property
    def path(self):
        """Gets the path of this ContainerVersion.

        GTM Container Version's API relative path.

        :return: The path of this ContainerVersion.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ContainerVersion.

        GTM Container Version's API relative path.

        :param path: The path of this ContainerVersion.
        :type path: str
        """

        self._path = path

    @property
    def tag(self):
        """Gets the tag of this ContainerVersion.

        The tags in the container that this version was taken from.

        :return: The tag of this ContainerVersion.
        :rtype: List[Tag]
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this ContainerVersion.

        The tags in the container that this version was taken from.

        :param tag: The tag of this ContainerVersion.
        :type tag: List[Tag]
        """

        self._tag = tag

    @property
    def tag_manager_url(self):
        """Gets the tag_manager_url of this ContainerVersion.

        Auto generated link to the tag manager UI

        :return: The tag_manager_url of this ContainerVersion.
        :rtype: str
        """
        return self._tag_manager_url

    @tag_manager_url.setter
    def tag_manager_url(self, tag_manager_url):
        """Sets the tag_manager_url of this ContainerVersion.

        Auto generated link to the tag manager UI

        :param tag_manager_url: The tag_manager_url of this ContainerVersion.
        :type tag_manager_url: str
        """

        self._tag_manager_url = tag_manager_url

    @property
    def transformation(self):
        """Gets the transformation of this ContainerVersion.

        The transformations in the container that this version was taken from.

        :return: The transformation of this ContainerVersion.
        :rtype: List[Transformation]
        """
        return self._transformation

    @transformation.setter
    def transformation(self, transformation):
        """Sets the transformation of this ContainerVersion.

        The transformations in the container that this version was taken from.

        :param transformation: The transformation of this ContainerVersion.
        :type transformation: List[Transformation]
        """

        self._transformation = transformation

    @property
    def trigger(self):
        """Gets the trigger of this ContainerVersion.

        The triggers in the container that this version was taken from.

        :return: The trigger of this ContainerVersion.
        :rtype: List[Trigger]
        """
        return self._trigger

    @trigger.setter
    def trigger(self, trigger):
        """Sets the trigger of this ContainerVersion.

        The triggers in the container that this version was taken from.

        :param trigger: The trigger of this ContainerVersion.
        :type trigger: List[Trigger]
        """

        self._trigger = trigger

    @property
    def variable(self):
        """Gets the variable of this ContainerVersion.

        The variables in the container that this version was taken from.

        :return: The variable of this ContainerVersion.
        :rtype: List[Variable]
        """
        return self._variable

    @variable.setter
    def variable(self, variable):
        """Sets the variable of this ContainerVersion.

        The variables in the container that this version was taken from.

        :param variable: The variable of this ContainerVersion.
        :type variable: List[Variable]
        """

        self._variable = variable

    @property
    def zone(self):
        """Gets the zone of this ContainerVersion.

        The zones in the container that this version was taken from.

        :return: The zone of this ContainerVersion.
        :rtype: List[Zone]
        """
        return self._zone

    @zone.setter
    def zone(self, zone):
        """Sets the zone of this ContainerVersion.

        The zones in the container that this version was taken from.

        :param zone: The zone of this ContainerVersion.
        :type zone: List[Zone]
        """

        self._zone = zone
