# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GalleryReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host: str=None, is_modified: bool=None, owner: str=None, repository: str=None, signature: str=None, version: str=None):
        """GalleryReference - a model defined in OpenAPI

        :param host: The host of this GalleryReference.
        :param is_modified: The is_modified of this GalleryReference.
        :param owner: The owner of this GalleryReference.
        :param repository: The repository of this GalleryReference.
        :param signature: The signature of this GalleryReference.
        :param version: The version of this GalleryReference.
        """
        self.openapi_types = {
            'host': str,
            'is_modified': bool,
            'owner': str,
            'repository': str,
            'signature': str,
            'version': str
        }

        self.attribute_map = {
            'host': 'host',
            'is_modified': 'isModified',
            'owner': 'owner',
            'repository': 'repository',
            'signature': 'signature',
            'version': 'version'
        }

        self._host = host
        self._is_modified = is_modified
        self._owner = owner
        self._repository = repository
        self._signature = signature
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GalleryReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GalleryReference of this GalleryReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host(self):
        """Gets the host of this GalleryReference.

        The name of the host for the community gallery template.

        :return: The host of this GalleryReference.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this GalleryReference.

        The name of the host for the community gallery template.

        :param host: The host of this GalleryReference.
        :type host: str
        """

        self._host = host

    @property
    def is_modified(self):
        """Gets the is_modified of this GalleryReference.

        If a user has manually edited the community gallery template.

        :return: The is_modified of this GalleryReference.
        :rtype: bool
        """
        return self._is_modified

    @is_modified.setter
    def is_modified(self, is_modified):
        """Sets the is_modified of this GalleryReference.

        If a user has manually edited the community gallery template.

        :param is_modified: The is_modified of this GalleryReference.
        :type is_modified: bool
        """

        self._is_modified = is_modified

    @property
    def owner(self):
        """Gets the owner of this GalleryReference.

        The name of the owner for the community gallery template.

        :return: The owner of this GalleryReference.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this GalleryReference.

        The name of the owner for the community gallery template.

        :param owner: The owner of this GalleryReference.
        :type owner: str
        """

        self._owner = owner

    @property
    def repository(self):
        """Gets the repository of this GalleryReference.

        The name of the repository for the community gallery template.

        :return: The repository of this GalleryReference.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this GalleryReference.

        The name of the repository for the community gallery template.

        :param repository: The repository of this GalleryReference.
        :type repository: str
        """

        self._repository = repository

    @property
    def signature(self):
        """Gets the signature of this GalleryReference.

        The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery.

        :return: The signature of this GalleryReference.
        :rtype: str
        """
        return self._signature

    @signature.setter
    def signature(self, signature):
        """Sets the signature of this GalleryReference.

        The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery.

        :param signature: The signature of this GalleryReference.
        :type signature: str
        """

        self._signature = signature

    @property
    def version(self):
        """Gets the version of this GalleryReference.

        The version of the community gallery template.

        :return: The version of this GalleryReference.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GalleryReference.

        The version of the community gallery template.

        :param version: The version of this GalleryReference.
        :type version: str
        """

        self._version = version
