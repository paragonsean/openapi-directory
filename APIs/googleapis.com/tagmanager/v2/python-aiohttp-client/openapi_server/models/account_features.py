# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountFeatures(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, support_multiple_containers: bool=None, support_user_permissions: bool=None):
        """AccountFeatures - a model defined in OpenAPI

        :param support_multiple_containers: The support_multiple_containers of this AccountFeatures.
        :param support_user_permissions: The support_user_permissions of this AccountFeatures.
        """
        self.openapi_types = {
            'support_multiple_containers': bool,
            'support_user_permissions': bool
        }

        self.attribute_map = {
            'support_multiple_containers': 'supportMultipleContainers',
            'support_user_permissions': 'supportUserPermissions'
        }

        self._support_multiple_containers = support_multiple_containers
        self._support_user_permissions = support_user_permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountFeatures':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountFeatures of this AccountFeatures.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def support_multiple_containers(self):
        """Gets the support_multiple_containers of this AccountFeatures.

        Whether this Account supports multiple Containers.

        :return: The support_multiple_containers of this AccountFeatures.
        :rtype: bool
        """
        return self._support_multiple_containers

    @support_multiple_containers.setter
    def support_multiple_containers(self, support_multiple_containers):
        """Sets the support_multiple_containers of this AccountFeatures.

        Whether this Account supports multiple Containers.

        :param support_multiple_containers: The support_multiple_containers of this AccountFeatures.
        :type support_multiple_containers: bool
        """

        self._support_multiple_containers = support_multiple_containers

    @property
    def support_user_permissions(self):
        """Gets the support_user_permissions of this AccountFeatures.

        Whether this Account supports user permissions managed by GTM.

        :return: The support_user_permissions of this AccountFeatures.
        :rtype: bool
        """
        return self._support_user_permissions

    @support_user_permissions.setter
    def support_user_permissions(self, support_user_permissions):
        """Sets the support_user_permissions of this AccountFeatures.

        Whether this Account supports user permissions managed by GTM.

        :param support_user_permissions: The support_user_permissions of this AccountFeatures.
        :type support_user_permissions: bool
        """

        self._support_user_permissions = support_user_permissions
