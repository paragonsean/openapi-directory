# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_access import AccountAccess
from openapi_server.models.container_access import ContainerAccess
from openapi_server import util


class UserPermission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_access: AccountAccess=None, account_id: str=None, container_access: List[ContainerAccess]=None, email_address: str=None, path: str=None):
        """UserPermission - a model defined in OpenAPI

        :param account_access: The account_access of this UserPermission.
        :param account_id: The account_id of this UserPermission.
        :param container_access: The container_access of this UserPermission.
        :param email_address: The email_address of this UserPermission.
        :param path: The path of this UserPermission.
        """
        self.openapi_types = {
            'account_access': AccountAccess,
            'account_id': str,
            'container_access': List[ContainerAccess],
            'email_address': str,
            'path': str
        }

        self.attribute_map = {
            'account_access': 'accountAccess',
            'account_id': 'accountId',
            'container_access': 'containerAccess',
            'email_address': 'emailAddress',
            'path': 'path'
        }

        self._account_access = account_access
        self._account_id = account_id
        self._container_access = container_access
        self._email_address = email_address
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserPermission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserPermission of this UserPermission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_access(self):
        """Gets the account_access of this UserPermission.


        :return: The account_access of this UserPermission.
        :rtype: AccountAccess
        """
        return self._account_access

    @account_access.setter
    def account_access(self, account_access):
        """Sets the account_access of this UserPermission.


        :param account_access: The account_access of this UserPermission.
        :type account_access: AccountAccess
        """

        self._account_access = account_access

    @property
    def account_id(self):
        """Gets the account_id of this UserPermission.

        The Account ID uniquely identifies the GTM Account.

        :return: The account_id of this UserPermission.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this UserPermission.

        The Account ID uniquely identifies the GTM Account.

        :param account_id: The account_id of this UserPermission.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def container_access(self):
        """Gets the container_access of this UserPermission.

        GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update

        :return: The container_access of this UserPermission.
        :rtype: List[ContainerAccess]
        """
        return self._container_access

    @container_access.setter
    def container_access(self, container_access):
        """Sets the container_access of this UserPermission.

        GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update

        :param container_access: The container_access of this UserPermission.
        :type container_access: List[ContainerAccess]
        """

        self._container_access = container_access

    @property
    def email_address(self):
        """Gets the email_address of this UserPermission.

        User's email address. @mutable tagmanager.accounts.permissions.create

        :return: The email_address of this UserPermission.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this UserPermission.

        User's email address. @mutable tagmanager.accounts.permissions.create

        :param email_address: The email_address of this UserPermission.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def path(self):
        """Gets the path of this UserPermission.

        GTM UserPermission's API relative path.

        :return: The path of this UserPermission.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this UserPermission.

        GTM UserPermission's API relative path.

        :param path: The path of this UserPermission.
        :type path: str
        """

        self._path = path
