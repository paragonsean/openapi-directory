# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entity import Entity
from openapi_server.models.merge_conflict import MergeConflict
from openapi_server import util


class GetWorkspaceStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, merge_conflict: List[MergeConflict]=None, workspace_change: List[Entity]=None):
        """GetWorkspaceStatusResponse - a model defined in OpenAPI

        :param merge_conflict: The merge_conflict of this GetWorkspaceStatusResponse.
        :param workspace_change: The workspace_change of this GetWorkspaceStatusResponse.
        """
        self.openapi_types = {
            'merge_conflict': List[MergeConflict],
            'workspace_change': List[Entity]
        }

        self.attribute_map = {
            'merge_conflict': 'mergeConflict',
            'workspace_change': 'workspaceChange'
        }

        self._merge_conflict = merge_conflict
        self._workspace_change = workspace_change

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetWorkspaceStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetWorkspaceStatusResponse of this GetWorkspaceStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def merge_conflict(self):
        """Gets the merge_conflict of this GetWorkspaceStatusResponse.

        The merge conflict after sync.

        :return: The merge_conflict of this GetWorkspaceStatusResponse.
        :rtype: List[MergeConflict]
        """
        return self._merge_conflict

    @merge_conflict.setter
    def merge_conflict(self, merge_conflict):
        """Sets the merge_conflict of this GetWorkspaceStatusResponse.

        The merge conflict after sync.

        :param merge_conflict: The merge_conflict of this GetWorkspaceStatusResponse.
        :type merge_conflict: List[MergeConflict]
        """

        self._merge_conflict = merge_conflict

    @property
    def workspace_change(self):
        """Gets the workspace_change of this GetWorkspaceStatusResponse.

        Entities that have been changed in the workspace.

        :return: The workspace_change of this GetWorkspaceStatusResponse.
        :rtype: List[Entity]
        """
        return self._workspace_change

    @workspace_change.setter
    def workspace_change(self, workspace_change):
        """Sets the workspace_change of this GetWorkspaceStatusResponse.

        Entities that have been changed in the workspace.

        :param workspace_change: The workspace_change of this GetWorkspaceStatusResponse.
        :type workspace_change: List[Entity]
        """

        self._workspace_change = workspace_change
