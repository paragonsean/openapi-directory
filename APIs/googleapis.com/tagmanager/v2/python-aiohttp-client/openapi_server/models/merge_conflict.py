# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entity import Entity
from openapi_server import util


class MergeConflict(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_in_base_version: Entity=None, entity_in_workspace: Entity=None):
        """MergeConflict - a model defined in OpenAPI

        :param entity_in_base_version: The entity_in_base_version of this MergeConflict.
        :param entity_in_workspace: The entity_in_workspace of this MergeConflict.
        """
        self.openapi_types = {
            'entity_in_base_version': Entity,
            'entity_in_workspace': Entity
        }

        self.attribute_map = {
            'entity_in_base_version': 'entityInBaseVersion',
            'entity_in_workspace': 'entityInWorkspace'
        }

        self._entity_in_base_version = entity_in_base_version
        self._entity_in_workspace = entity_in_workspace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MergeConflict':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MergeConflict of this MergeConflict.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_in_base_version(self):
        """Gets the entity_in_base_version of this MergeConflict.


        :return: The entity_in_base_version of this MergeConflict.
        :rtype: Entity
        """
        return self._entity_in_base_version

    @entity_in_base_version.setter
    def entity_in_base_version(self, entity_in_base_version):
        """Sets the entity_in_base_version of this MergeConflict.


        :param entity_in_base_version: The entity_in_base_version of this MergeConflict.
        :type entity_in_base_version: Entity
        """

        self._entity_in_base_version = entity_in_base_version

    @property
    def entity_in_workspace(self):
        """Gets the entity_in_workspace of this MergeConflict.


        :return: The entity_in_workspace of this MergeConflict.
        :rtype: Entity
        """
        return self._entity_in_workspace

    @entity_in_workspace.setter
    def entity_in_workspace(self, entity_in_workspace):
        """Sets the entity_in_workspace of this MergeConflict.


        :param entity_in_workspace: The entity_in_workspace of this MergeConflict.
        :type entity_in_workspace: Entity
        """

        self._entity_in_workspace = entity_in_workspace
