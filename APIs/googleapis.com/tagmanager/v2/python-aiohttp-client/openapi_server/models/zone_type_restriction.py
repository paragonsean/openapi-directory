# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ZoneTypeRestriction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable: bool=None, whitelisted_type_id: List[str]=None):
        """ZoneTypeRestriction - a model defined in OpenAPI

        :param enable: The enable of this ZoneTypeRestriction.
        :param whitelisted_type_id: The whitelisted_type_id of this ZoneTypeRestriction.
        """
        self.openapi_types = {
            'enable': bool,
            'whitelisted_type_id': List[str]
        }

        self.attribute_map = {
            'enable': 'enable',
            'whitelisted_type_id': 'whitelistedTypeId'
        }

        self._enable = enable
        self._whitelisted_type_id = whitelisted_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ZoneTypeRestriction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ZoneTypeRestriction of this ZoneTypeRestriction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable(self):
        """Gets the enable of this ZoneTypeRestriction.

        True if type restrictions have been enabled for this Zone.

        :return: The enable of this ZoneTypeRestriction.
        :rtype: bool
        """
        return self._enable

    @enable.setter
    def enable(self, enable):
        """Sets the enable of this ZoneTypeRestriction.

        True if type restrictions have been enabled for this Zone.

        :param enable: The enable of this ZoneTypeRestriction.
        :type enable: bool
        """

        self._enable = enable

    @property
    def whitelisted_type_id(self):
        """Gets the whitelisted_type_id of this ZoneTypeRestriction.

        List of type public ids that have been whitelisted for use in this Zone.

        :return: The whitelisted_type_id of this ZoneTypeRestriction.
        :rtype: List[str]
        """
        return self._whitelisted_type_id

    @whitelisted_type_id.setter
    def whitelisted_type_id(self, whitelisted_type_id):
        """Sets the whitelisted_type_id of this ZoneTypeRestriction.

        List of type public ids that have been whitelisted for use in this Zone.

        :param whitelisted_type_id: The whitelisted_type_id of this ZoneTypeRestriction.
        :type whitelisted_type_id: List[str]
        """

        self._whitelisted_type_id = whitelisted_type_id
