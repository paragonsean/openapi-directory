# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeardownTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stop_teardown_on_failure: bool=None, tag_name: str=None):
        """TeardownTag - a model defined in OpenAPI

        :param stop_teardown_on_failure: The stop_teardown_on_failure of this TeardownTag.
        :param tag_name: The tag_name of this TeardownTag.
        """
        self.openapi_types = {
            'stop_teardown_on_failure': bool,
            'tag_name': str
        }

        self.attribute_map = {
            'stop_teardown_on_failure': 'stopTeardownOnFailure',
            'tag_name': 'tagName'
        }

        self._stop_teardown_on_failure = stop_teardown_on_failure
        self._tag_name = tag_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeardownTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeardownTag of this TeardownTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stop_teardown_on_failure(self):
        """Gets the stop_teardown_on_failure of this TeardownTag.

        If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.

        :return: The stop_teardown_on_failure of this TeardownTag.
        :rtype: bool
        """
        return self._stop_teardown_on_failure

    @stop_teardown_on_failure.setter
    def stop_teardown_on_failure(self, stop_teardown_on_failure):
        """Sets the stop_teardown_on_failure of this TeardownTag.

        If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.

        :param stop_teardown_on_failure: The stop_teardown_on_failure of this TeardownTag.
        :type stop_teardown_on_failure: bool
        """

        self._stop_teardown_on_failure = stop_teardown_on_failure

    @property
    def tag_name(self):
        """Gets the tag_name of this TeardownTag.

        The name of the teardown tag.

        :return: The tag_name of this TeardownTag.
        :rtype: str
        """
        return self._tag_name

    @tag_name.setter
    def tag_name(self, tag_name):
        """Sets the tag_name of this TeardownTag.

        The name of the teardown tag.

        :param tag_name: The tag_name of this TeardownTag.
        :type tag_name: str
        """

        self._tag_name = tag_name
