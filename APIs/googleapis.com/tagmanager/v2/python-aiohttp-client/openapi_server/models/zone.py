# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.zone_boundary import ZoneBoundary
from openapi_server.models.zone_child_container import ZoneChildContainer
from openapi_server.models.zone_type_restriction import ZoneTypeRestriction
from openapi_server import util


class Zone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, boundary: ZoneBoundary=None, child_container: List[ZoneChildContainer]=None, container_id: str=None, fingerprint: str=None, name: str=None, notes: str=None, path: str=None, tag_manager_url: str=None, type_restriction: ZoneTypeRestriction=None, workspace_id: str=None, zone_id: str=None):
        """Zone - a model defined in OpenAPI

        :param account_id: The account_id of this Zone.
        :param boundary: The boundary of this Zone.
        :param child_container: The child_container of this Zone.
        :param container_id: The container_id of this Zone.
        :param fingerprint: The fingerprint of this Zone.
        :param name: The name of this Zone.
        :param notes: The notes of this Zone.
        :param path: The path of this Zone.
        :param tag_manager_url: The tag_manager_url of this Zone.
        :param type_restriction: The type_restriction of this Zone.
        :param workspace_id: The workspace_id of this Zone.
        :param zone_id: The zone_id of this Zone.
        """
        self.openapi_types = {
            'account_id': str,
            'boundary': ZoneBoundary,
            'child_container': List[ZoneChildContainer],
            'container_id': str,
            'fingerprint': str,
            'name': str,
            'notes': str,
            'path': str,
            'tag_manager_url': str,
            'type_restriction': ZoneTypeRestriction,
            'workspace_id': str,
            'zone_id': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'boundary': 'boundary',
            'child_container': 'childContainer',
            'container_id': 'containerId',
            'fingerprint': 'fingerprint',
            'name': 'name',
            'notes': 'notes',
            'path': 'path',
            'tag_manager_url': 'tagManagerUrl',
            'type_restriction': 'typeRestriction',
            'workspace_id': 'workspaceId',
            'zone_id': 'zoneId'
        }

        self._account_id = account_id
        self._boundary = boundary
        self._child_container = child_container
        self._container_id = container_id
        self._fingerprint = fingerprint
        self._name = name
        self._notes = notes
        self._path = path
        self._tag_manager_url = tag_manager_url
        self._type_restriction = type_restriction
        self._workspace_id = workspace_id
        self._zone_id = zone_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Zone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Zone of this Zone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this Zone.

        GTM Account ID.

        :return: The account_id of this Zone.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Zone.

        GTM Account ID.

        :param account_id: The account_id of this Zone.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def boundary(self):
        """Gets the boundary of this Zone.


        :return: The boundary of this Zone.
        :rtype: ZoneBoundary
        """
        return self._boundary

    @boundary.setter
    def boundary(self, boundary):
        """Sets the boundary of this Zone.


        :param boundary: The boundary of this Zone.
        :type boundary: ZoneBoundary
        """

        self._boundary = boundary

    @property
    def child_container(self):
        """Gets the child_container of this Zone.

        Containers that are children of this Zone.

        :return: The child_container of this Zone.
        :rtype: List[ZoneChildContainer]
        """
        return self._child_container

    @child_container.setter
    def child_container(self, child_container):
        """Sets the child_container of this Zone.

        Containers that are children of this Zone.

        :param child_container: The child_container of this Zone.
        :type child_container: List[ZoneChildContainer]
        """

        self._child_container = child_container

    @property
    def container_id(self):
        """Gets the container_id of this Zone.

        GTM Container ID.

        :return: The container_id of this Zone.
        :rtype: str
        """
        return self._container_id

    @container_id.setter
    def container_id(self, container_id):
        """Sets the container_id of this Zone.

        GTM Container ID.

        :param container_id: The container_id of this Zone.
        :type container_id: str
        """

        self._container_id = container_id

    @property
    def fingerprint(self):
        """Gets the fingerprint of this Zone.

        The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified.

        :return: The fingerprint of this Zone.
        :rtype: str
        """
        return self._fingerprint

    @fingerprint.setter
    def fingerprint(self, fingerprint):
        """Sets the fingerprint of this Zone.

        The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified.

        :param fingerprint: The fingerprint of this Zone.
        :type fingerprint: str
        """

        self._fingerprint = fingerprint

    @property
    def name(self):
        """Gets the name of this Zone.

        Zone display name.

        :return: The name of this Zone.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Zone.

        Zone display name.

        :param name: The name of this Zone.
        :type name: str
        """

        self._name = name

    @property
    def notes(self):
        """Gets the notes of this Zone.

        User notes on how to apply this zone in the container.

        :return: The notes of this Zone.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Zone.

        User notes on how to apply this zone in the container.

        :param notes: The notes of this Zone.
        :type notes: str
        """

        self._notes = notes

    @property
    def path(self):
        """Gets the path of this Zone.

        GTM Zone's API relative path.

        :return: The path of this Zone.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this Zone.

        GTM Zone's API relative path.

        :param path: The path of this Zone.
        :type path: str
        """

        self._path = path

    @property
    def tag_manager_url(self):
        """Gets the tag_manager_url of this Zone.

        Auto generated link to the tag manager UI

        :return: The tag_manager_url of this Zone.
        :rtype: str
        """
        return self._tag_manager_url

    @tag_manager_url.setter
    def tag_manager_url(self, tag_manager_url):
        """Sets the tag_manager_url of this Zone.

        Auto generated link to the tag manager UI

        :param tag_manager_url: The tag_manager_url of this Zone.
        :type tag_manager_url: str
        """

        self._tag_manager_url = tag_manager_url

    @property
    def type_restriction(self):
        """Gets the type_restriction of this Zone.


        :return: The type_restriction of this Zone.
        :rtype: ZoneTypeRestriction
        """
        return self._type_restriction

    @type_restriction.setter
    def type_restriction(self, type_restriction):
        """Sets the type_restriction of this Zone.


        :param type_restriction: The type_restriction of this Zone.
        :type type_restriction: ZoneTypeRestriction
        """

        self._type_restriction = type_restriction

    @property
    def workspace_id(self):
        """Gets the workspace_id of this Zone.

        GTM Workspace ID.

        :return: The workspace_id of this Zone.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this Zone.

        GTM Workspace ID.

        :param workspace_id: The workspace_id of this Zone.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def zone_id(self):
        """Gets the zone_id of this Zone.

        The Zone ID uniquely identifies the GTM Zone.

        :return: The zone_id of this Zone.
        :rtype: str
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id):
        """Sets the zone_id of this Zone.

        The Zone ID uniquely identifies the GTM Zone.

        :param zone_id: The zone_id of this Zone.
        :type zone_id: str
        """

        self._zone_id = zone_id
