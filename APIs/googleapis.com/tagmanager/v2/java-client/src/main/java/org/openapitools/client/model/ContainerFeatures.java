/*
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContainerFeatures
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:34:30.823247-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ContainerFeatures {
  public static final String SERIALIZED_NAME_SUPPORT_BUILT_IN_VARIABLES = "supportBuiltInVariables";
  @SerializedName(SERIALIZED_NAME_SUPPORT_BUILT_IN_VARIABLES)
  private Boolean supportBuiltInVariables;

  public static final String SERIALIZED_NAME_SUPPORT_CLIENTS = "supportClients";
  @SerializedName(SERIALIZED_NAME_SUPPORT_CLIENTS)
  private Boolean supportClients;

  public static final String SERIALIZED_NAME_SUPPORT_ENVIRONMENTS = "supportEnvironments";
  @SerializedName(SERIALIZED_NAME_SUPPORT_ENVIRONMENTS)
  private Boolean supportEnvironments;

  public static final String SERIALIZED_NAME_SUPPORT_FOLDERS = "supportFolders";
  @SerializedName(SERIALIZED_NAME_SUPPORT_FOLDERS)
  private Boolean supportFolders;

  public static final String SERIALIZED_NAME_SUPPORT_GTAG_CONFIGS = "supportGtagConfigs";
  @SerializedName(SERIALIZED_NAME_SUPPORT_GTAG_CONFIGS)
  private Boolean supportGtagConfigs;

  public static final String SERIALIZED_NAME_SUPPORT_TAGS = "supportTags";
  @SerializedName(SERIALIZED_NAME_SUPPORT_TAGS)
  private Boolean supportTags;

  public static final String SERIALIZED_NAME_SUPPORT_TEMPLATES = "supportTemplates";
  @SerializedName(SERIALIZED_NAME_SUPPORT_TEMPLATES)
  private Boolean supportTemplates;

  public static final String SERIALIZED_NAME_SUPPORT_TRANSFORMATIONS = "supportTransformations";
  @SerializedName(SERIALIZED_NAME_SUPPORT_TRANSFORMATIONS)
  private Boolean supportTransformations;

  public static final String SERIALIZED_NAME_SUPPORT_TRIGGERS = "supportTriggers";
  @SerializedName(SERIALIZED_NAME_SUPPORT_TRIGGERS)
  private Boolean supportTriggers;

  public static final String SERIALIZED_NAME_SUPPORT_USER_PERMISSIONS = "supportUserPermissions";
  @SerializedName(SERIALIZED_NAME_SUPPORT_USER_PERMISSIONS)
  private Boolean supportUserPermissions;

  public static final String SERIALIZED_NAME_SUPPORT_VARIABLES = "supportVariables";
  @SerializedName(SERIALIZED_NAME_SUPPORT_VARIABLES)
  private Boolean supportVariables;

  public static final String SERIALIZED_NAME_SUPPORT_VERSIONS = "supportVersions";
  @SerializedName(SERIALIZED_NAME_SUPPORT_VERSIONS)
  private Boolean supportVersions;

  public static final String SERIALIZED_NAME_SUPPORT_WORKSPACES = "supportWorkspaces";
  @SerializedName(SERIALIZED_NAME_SUPPORT_WORKSPACES)
  private Boolean supportWorkspaces;

  public static final String SERIALIZED_NAME_SUPPORT_ZONES = "supportZones";
  @SerializedName(SERIALIZED_NAME_SUPPORT_ZONES)
  private Boolean supportZones;

  public ContainerFeatures() {
  }

  public ContainerFeatures supportBuiltInVariables(Boolean supportBuiltInVariables) {
    this.supportBuiltInVariables = supportBuiltInVariables;
    return this;
  }

  /**
   * Whether this Container supports built-in variables
   * @return supportBuiltInVariables
   */
  @javax.annotation.Nullable
  public Boolean getSupportBuiltInVariables() {
    return supportBuiltInVariables;
  }

  public void setSupportBuiltInVariables(Boolean supportBuiltInVariables) {
    this.supportBuiltInVariables = supportBuiltInVariables;
  }


  public ContainerFeatures supportClients(Boolean supportClients) {
    this.supportClients = supportClients;
    return this;
  }

  /**
   * Whether this Container supports clients.
   * @return supportClients
   */
  @javax.annotation.Nullable
  public Boolean getSupportClients() {
    return supportClients;
  }

  public void setSupportClients(Boolean supportClients) {
    this.supportClients = supportClients;
  }


  public ContainerFeatures supportEnvironments(Boolean supportEnvironments) {
    this.supportEnvironments = supportEnvironments;
    return this;
  }

  /**
   * Whether this Container supports environments.
   * @return supportEnvironments
   */
  @javax.annotation.Nullable
  public Boolean getSupportEnvironments() {
    return supportEnvironments;
  }

  public void setSupportEnvironments(Boolean supportEnvironments) {
    this.supportEnvironments = supportEnvironments;
  }


  public ContainerFeatures supportFolders(Boolean supportFolders) {
    this.supportFolders = supportFolders;
    return this;
  }

  /**
   * Whether this Container supports folders.
   * @return supportFolders
   */
  @javax.annotation.Nullable
  public Boolean getSupportFolders() {
    return supportFolders;
  }

  public void setSupportFolders(Boolean supportFolders) {
    this.supportFolders = supportFolders;
  }


  public ContainerFeatures supportGtagConfigs(Boolean supportGtagConfigs) {
    this.supportGtagConfigs = supportGtagConfigs;
    return this;
  }

  /**
   * Whether this Container supports Google tag config.
   * @return supportGtagConfigs
   */
  @javax.annotation.Nullable
  public Boolean getSupportGtagConfigs() {
    return supportGtagConfigs;
  }

  public void setSupportGtagConfigs(Boolean supportGtagConfigs) {
    this.supportGtagConfigs = supportGtagConfigs;
  }


  public ContainerFeatures supportTags(Boolean supportTags) {
    this.supportTags = supportTags;
    return this;
  }

  /**
   * Whether this Container supports tags.
   * @return supportTags
   */
  @javax.annotation.Nullable
  public Boolean getSupportTags() {
    return supportTags;
  }

  public void setSupportTags(Boolean supportTags) {
    this.supportTags = supportTags;
  }


  public ContainerFeatures supportTemplates(Boolean supportTemplates) {
    this.supportTemplates = supportTemplates;
    return this;
  }

  /**
   * Whether this Container supports templates.
   * @return supportTemplates
   */
  @javax.annotation.Nullable
  public Boolean getSupportTemplates() {
    return supportTemplates;
  }

  public void setSupportTemplates(Boolean supportTemplates) {
    this.supportTemplates = supportTemplates;
  }


  public ContainerFeatures supportTransformations(Boolean supportTransformations) {
    this.supportTransformations = supportTransformations;
    return this;
  }

  /**
   * Whether this Container supports transformations.
   * @return supportTransformations
   */
  @javax.annotation.Nullable
  public Boolean getSupportTransformations() {
    return supportTransformations;
  }

  public void setSupportTransformations(Boolean supportTransformations) {
    this.supportTransformations = supportTransformations;
  }


  public ContainerFeatures supportTriggers(Boolean supportTriggers) {
    this.supportTriggers = supportTriggers;
    return this;
  }

  /**
   * Whether this Container supports triggers.
   * @return supportTriggers
   */
  @javax.annotation.Nullable
  public Boolean getSupportTriggers() {
    return supportTriggers;
  }

  public void setSupportTriggers(Boolean supportTriggers) {
    this.supportTriggers = supportTriggers;
  }


  public ContainerFeatures supportUserPermissions(Boolean supportUserPermissions) {
    this.supportUserPermissions = supportUserPermissions;
    return this;
  }

  /**
   * Whether this Container supports user permissions managed by GTM.
   * @return supportUserPermissions
   */
  @javax.annotation.Nullable
  public Boolean getSupportUserPermissions() {
    return supportUserPermissions;
  }

  public void setSupportUserPermissions(Boolean supportUserPermissions) {
    this.supportUserPermissions = supportUserPermissions;
  }


  public ContainerFeatures supportVariables(Boolean supportVariables) {
    this.supportVariables = supportVariables;
    return this;
  }

  /**
   * Whether this Container supports variables.
   * @return supportVariables
   */
  @javax.annotation.Nullable
  public Boolean getSupportVariables() {
    return supportVariables;
  }

  public void setSupportVariables(Boolean supportVariables) {
    this.supportVariables = supportVariables;
  }


  public ContainerFeatures supportVersions(Boolean supportVersions) {
    this.supportVersions = supportVersions;
    return this;
  }

  /**
   * Whether this Container supports Container versions.
   * @return supportVersions
   */
  @javax.annotation.Nullable
  public Boolean getSupportVersions() {
    return supportVersions;
  }

  public void setSupportVersions(Boolean supportVersions) {
    this.supportVersions = supportVersions;
  }


  public ContainerFeatures supportWorkspaces(Boolean supportWorkspaces) {
    this.supportWorkspaces = supportWorkspaces;
    return this;
  }

  /**
   * Whether this Container supports workspaces.
   * @return supportWorkspaces
   */
  @javax.annotation.Nullable
  public Boolean getSupportWorkspaces() {
    return supportWorkspaces;
  }

  public void setSupportWorkspaces(Boolean supportWorkspaces) {
    this.supportWorkspaces = supportWorkspaces;
  }


  public ContainerFeatures supportZones(Boolean supportZones) {
    this.supportZones = supportZones;
    return this;
  }

  /**
   * Whether this Container supports zones.
   * @return supportZones
   */
  @javax.annotation.Nullable
  public Boolean getSupportZones() {
    return supportZones;
  }

  public void setSupportZones(Boolean supportZones) {
    this.supportZones = supportZones;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContainerFeatures containerFeatures = (ContainerFeatures) o;
    return Objects.equals(this.supportBuiltInVariables, containerFeatures.supportBuiltInVariables) &&
        Objects.equals(this.supportClients, containerFeatures.supportClients) &&
        Objects.equals(this.supportEnvironments, containerFeatures.supportEnvironments) &&
        Objects.equals(this.supportFolders, containerFeatures.supportFolders) &&
        Objects.equals(this.supportGtagConfigs, containerFeatures.supportGtagConfigs) &&
        Objects.equals(this.supportTags, containerFeatures.supportTags) &&
        Objects.equals(this.supportTemplates, containerFeatures.supportTemplates) &&
        Objects.equals(this.supportTransformations, containerFeatures.supportTransformations) &&
        Objects.equals(this.supportTriggers, containerFeatures.supportTriggers) &&
        Objects.equals(this.supportUserPermissions, containerFeatures.supportUserPermissions) &&
        Objects.equals(this.supportVariables, containerFeatures.supportVariables) &&
        Objects.equals(this.supportVersions, containerFeatures.supportVersions) &&
        Objects.equals(this.supportWorkspaces, containerFeatures.supportWorkspaces) &&
        Objects.equals(this.supportZones, containerFeatures.supportZones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supportBuiltInVariables, supportClients, supportEnvironments, supportFolders, supportGtagConfigs, supportTags, supportTemplates, supportTransformations, supportTriggers, supportUserPermissions, supportVariables, supportVersions, supportWorkspaces, supportZones);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContainerFeatures {\n");
    sb.append("    supportBuiltInVariables: ").append(toIndentedString(supportBuiltInVariables)).append("\n");
    sb.append("    supportClients: ").append(toIndentedString(supportClients)).append("\n");
    sb.append("    supportEnvironments: ").append(toIndentedString(supportEnvironments)).append("\n");
    sb.append("    supportFolders: ").append(toIndentedString(supportFolders)).append("\n");
    sb.append("    supportGtagConfigs: ").append(toIndentedString(supportGtagConfigs)).append("\n");
    sb.append("    supportTags: ").append(toIndentedString(supportTags)).append("\n");
    sb.append("    supportTemplates: ").append(toIndentedString(supportTemplates)).append("\n");
    sb.append("    supportTransformations: ").append(toIndentedString(supportTransformations)).append("\n");
    sb.append("    supportTriggers: ").append(toIndentedString(supportTriggers)).append("\n");
    sb.append("    supportUserPermissions: ").append(toIndentedString(supportUserPermissions)).append("\n");
    sb.append("    supportVariables: ").append(toIndentedString(supportVariables)).append("\n");
    sb.append("    supportVersions: ").append(toIndentedString(supportVersions)).append("\n");
    sb.append("    supportWorkspaces: ").append(toIndentedString(supportWorkspaces)).append("\n");
    sb.append("    supportZones: ").append(toIndentedString(supportZones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("supportBuiltInVariables");
    openapiFields.add("supportClients");
    openapiFields.add("supportEnvironments");
    openapiFields.add("supportFolders");
    openapiFields.add("supportGtagConfigs");
    openapiFields.add("supportTags");
    openapiFields.add("supportTemplates");
    openapiFields.add("supportTransformations");
    openapiFields.add("supportTriggers");
    openapiFields.add("supportUserPermissions");
    openapiFields.add("supportVariables");
    openapiFields.add("supportVersions");
    openapiFields.add("supportWorkspaces");
    openapiFields.add("supportZones");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContainerFeatures
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContainerFeatures.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContainerFeatures is not found in the empty JSON string", ContainerFeatures.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContainerFeatures.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContainerFeatures` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContainerFeatures.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContainerFeatures' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContainerFeatures> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContainerFeatures.class));

       return (TypeAdapter<T>) new TypeAdapter<ContainerFeatures>() {
           @Override
           public void write(JsonWriter out, ContainerFeatures value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContainerFeatures read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContainerFeatures given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContainerFeatures
   * @throws IOException if the JSON string is invalid with respect to ContainerFeatures
   */
  public static ContainerFeatures fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContainerFeatures.class);
  }

  /**
   * Convert an instance of ContainerFeatures to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

