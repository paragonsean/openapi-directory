/*
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a Google Tag Manager Container Version Header.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:34:30.823247-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ContainerVersionHeader {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_CONTAINER_ID = "containerId";
  @SerializedName(SERIALIZED_NAME_CONTAINER_ID)
  private String containerId;

  public static final String SERIALIZED_NAME_CONTAINER_VERSION_ID = "containerVersionId";
  @SerializedName(SERIALIZED_NAME_CONTAINER_VERSION_ID)
  private String containerVersionId;

  public static final String SERIALIZED_NAME_DELETED = "deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  private Boolean deleted;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NUM_CLIENTS = "numClients";
  @SerializedName(SERIALIZED_NAME_NUM_CLIENTS)
  private String numClients;

  public static final String SERIALIZED_NAME_NUM_CUSTOM_TEMPLATES = "numCustomTemplates";
  @SerializedName(SERIALIZED_NAME_NUM_CUSTOM_TEMPLATES)
  private String numCustomTemplates;

  public static final String SERIALIZED_NAME_NUM_GTAG_CONFIGS = "numGtagConfigs";
  @SerializedName(SERIALIZED_NAME_NUM_GTAG_CONFIGS)
  private String numGtagConfigs;

  public static final String SERIALIZED_NAME_NUM_MACROS = "numMacros";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_NUM_MACROS)
  private String numMacros;

  public static final String SERIALIZED_NAME_NUM_RULES = "numRules";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_NUM_RULES)
  private String numRules;

  public static final String SERIALIZED_NAME_NUM_TAGS = "numTags";
  @SerializedName(SERIALIZED_NAME_NUM_TAGS)
  private String numTags;

  public static final String SERIALIZED_NAME_NUM_TRANSFORMATIONS = "numTransformations";
  @SerializedName(SERIALIZED_NAME_NUM_TRANSFORMATIONS)
  private String numTransformations;

  public static final String SERIALIZED_NAME_NUM_TRIGGERS = "numTriggers";
  @SerializedName(SERIALIZED_NAME_NUM_TRIGGERS)
  private String numTriggers;

  public static final String SERIALIZED_NAME_NUM_VARIABLES = "numVariables";
  @SerializedName(SERIALIZED_NAME_NUM_VARIABLES)
  private String numVariables;

  public static final String SERIALIZED_NAME_NUM_ZONES = "numZones";
  @SerializedName(SERIALIZED_NAME_NUM_ZONES)
  private String numZones;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public ContainerVersionHeader() {
  }

  public ContainerVersionHeader accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * GTM Account ID.
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public ContainerVersionHeader containerId(String containerId) {
    this.containerId = containerId;
    return this;
  }

  /**
   * GTM Container ID.
   * @return containerId
   */
  @javax.annotation.Nullable
  public String getContainerId() {
    return containerId;
  }

  public void setContainerId(String containerId) {
    this.containerId = containerId;
  }


  public ContainerVersionHeader containerVersionId(String containerVersionId) {
    this.containerVersionId = containerVersionId;
    return this;
  }

  /**
   * The Container Version ID uniquely identifies the GTM Container Version.
   * @return containerVersionId
   */
  @javax.annotation.Nullable
  public String getContainerVersionId() {
    return containerVersionId;
  }

  public void setContainerVersionId(String containerVersionId) {
    this.containerVersionId = containerVersionId;
  }


  public ContainerVersionHeader deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

  /**
   * A value of true indicates this container version has been deleted.
   * @return deleted
   */
  @javax.annotation.Nullable
  public Boolean getDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public ContainerVersionHeader name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Container version display name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ContainerVersionHeader numClients(String numClients) {
    this.numClients = numClients;
    return this;
  }

  /**
   * Number of clients in the container version.
   * @return numClients
   */
  @javax.annotation.Nullable
  public String getNumClients() {
    return numClients;
  }

  public void setNumClients(String numClients) {
    this.numClients = numClients;
  }


  public ContainerVersionHeader numCustomTemplates(String numCustomTemplates) {
    this.numCustomTemplates = numCustomTemplates;
    return this;
  }

  /**
   * Number of custom templates in the container version.
   * @return numCustomTemplates
   */
  @javax.annotation.Nullable
  public String getNumCustomTemplates() {
    return numCustomTemplates;
  }

  public void setNumCustomTemplates(String numCustomTemplates) {
    this.numCustomTemplates = numCustomTemplates;
  }


  public ContainerVersionHeader numGtagConfigs(String numGtagConfigs) {
    this.numGtagConfigs = numGtagConfigs;
    return this;
  }

  /**
   * Number of Google tag configs in the container version.
   * @return numGtagConfigs
   */
  @javax.annotation.Nullable
  public String getNumGtagConfigs() {
    return numGtagConfigs;
  }

  public void setNumGtagConfigs(String numGtagConfigs) {
    this.numGtagConfigs = numGtagConfigs;
  }


  @Deprecated
  public ContainerVersionHeader numMacros(String numMacros) {
    this.numMacros = numMacros;
    return this;
  }

  /**
   * Number of macros in the container version.
   * @return numMacros
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getNumMacros() {
    return numMacros;
  }

  @Deprecated
  public void setNumMacros(String numMacros) {
    this.numMacros = numMacros;
  }


  @Deprecated
  public ContainerVersionHeader numRules(String numRules) {
    this.numRules = numRules;
    return this;
  }

  /**
   * Number of rules in the container version.
   * @return numRules
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getNumRules() {
    return numRules;
  }

  @Deprecated
  public void setNumRules(String numRules) {
    this.numRules = numRules;
  }


  public ContainerVersionHeader numTags(String numTags) {
    this.numTags = numTags;
    return this;
  }

  /**
   * Number of tags in the container version.
   * @return numTags
   */
  @javax.annotation.Nullable
  public String getNumTags() {
    return numTags;
  }

  public void setNumTags(String numTags) {
    this.numTags = numTags;
  }


  public ContainerVersionHeader numTransformations(String numTransformations) {
    this.numTransformations = numTransformations;
    return this;
  }

  /**
   * Number of transformations in the container version.
   * @return numTransformations
   */
  @javax.annotation.Nullable
  public String getNumTransformations() {
    return numTransformations;
  }

  public void setNumTransformations(String numTransformations) {
    this.numTransformations = numTransformations;
  }


  public ContainerVersionHeader numTriggers(String numTriggers) {
    this.numTriggers = numTriggers;
    return this;
  }

  /**
   * Number of triggers in the container version.
   * @return numTriggers
   */
  @javax.annotation.Nullable
  public String getNumTriggers() {
    return numTriggers;
  }

  public void setNumTriggers(String numTriggers) {
    this.numTriggers = numTriggers;
  }


  public ContainerVersionHeader numVariables(String numVariables) {
    this.numVariables = numVariables;
    return this;
  }

  /**
   * Number of variables in the container version.
   * @return numVariables
   */
  @javax.annotation.Nullable
  public String getNumVariables() {
    return numVariables;
  }

  public void setNumVariables(String numVariables) {
    this.numVariables = numVariables;
  }


  public ContainerVersionHeader numZones(String numZones) {
    this.numZones = numZones;
    return this;
  }

  /**
   * Number of zones in the container version.
   * @return numZones
   */
  @javax.annotation.Nullable
  public String getNumZones() {
    return numZones;
  }

  public void setNumZones(String numZones) {
    this.numZones = numZones;
  }


  public ContainerVersionHeader path(String path) {
    this.path = path;
    return this;
  }

  /**
   * GTM Container Version&#39;s API relative path.
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContainerVersionHeader containerVersionHeader = (ContainerVersionHeader) o;
    return Objects.equals(this.accountId, containerVersionHeader.accountId) &&
        Objects.equals(this.containerId, containerVersionHeader.containerId) &&
        Objects.equals(this.containerVersionId, containerVersionHeader.containerVersionId) &&
        Objects.equals(this.deleted, containerVersionHeader.deleted) &&
        Objects.equals(this.name, containerVersionHeader.name) &&
        Objects.equals(this.numClients, containerVersionHeader.numClients) &&
        Objects.equals(this.numCustomTemplates, containerVersionHeader.numCustomTemplates) &&
        Objects.equals(this.numGtagConfigs, containerVersionHeader.numGtagConfigs) &&
        Objects.equals(this.numMacros, containerVersionHeader.numMacros) &&
        Objects.equals(this.numRules, containerVersionHeader.numRules) &&
        Objects.equals(this.numTags, containerVersionHeader.numTags) &&
        Objects.equals(this.numTransformations, containerVersionHeader.numTransformations) &&
        Objects.equals(this.numTriggers, containerVersionHeader.numTriggers) &&
        Objects.equals(this.numVariables, containerVersionHeader.numVariables) &&
        Objects.equals(this.numZones, containerVersionHeader.numZones) &&
        Objects.equals(this.path, containerVersionHeader.path);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, containerId, containerVersionId, deleted, name, numClients, numCustomTemplates, numGtagConfigs, numMacros, numRules, numTags, numTransformations, numTriggers, numVariables, numZones, path);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContainerVersionHeader {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    containerId: ").append(toIndentedString(containerId)).append("\n");
    sb.append("    containerVersionId: ").append(toIndentedString(containerVersionId)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numClients: ").append(toIndentedString(numClients)).append("\n");
    sb.append("    numCustomTemplates: ").append(toIndentedString(numCustomTemplates)).append("\n");
    sb.append("    numGtagConfigs: ").append(toIndentedString(numGtagConfigs)).append("\n");
    sb.append("    numMacros: ").append(toIndentedString(numMacros)).append("\n");
    sb.append("    numRules: ").append(toIndentedString(numRules)).append("\n");
    sb.append("    numTags: ").append(toIndentedString(numTags)).append("\n");
    sb.append("    numTransformations: ").append(toIndentedString(numTransformations)).append("\n");
    sb.append("    numTriggers: ").append(toIndentedString(numTriggers)).append("\n");
    sb.append("    numVariables: ").append(toIndentedString(numVariables)).append("\n");
    sb.append("    numZones: ").append(toIndentedString(numZones)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountId");
    openapiFields.add("containerId");
    openapiFields.add("containerVersionId");
    openapiFields.add("deleted");
    openapiFields.add("name");
    openapiFields.add("numClients");
    openapiFields.add("numCustomTemplates");
    openapiFields.add("numGtagConfigs");
    openapiFields.add("numMacros");
    openapiFields.add("numRules");
    openapiFields.add("numTags");
    openapiFields.add("numTransformations");
    openapiFields.add("numTriggers");
    openapiFields.add("numVariables");
    openapiFields.add("numZones");
    openapiFields.add("path");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContainerVersionHeader
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContainerVersionHeader.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContainerVersionHeader is not found in the empty JSON string", ContainerVersionHeader.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContainerVersionHeader.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContainerVersionHeader` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountId") != null && !jsonObj.get("accountId").isJsonNull()) && !jsonObj.get("accountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountId").toString()));
      }
      if ((jsonObj.get("containerId") != null && !jsonObj.get("containerId").isJsonNull()) && !jsonObj.get("containerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `containerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("containerId").toString()));
      }
      if ((jsonObj.get("containerVersionId") != null && !jsonObj.get("containerVersionId").isJsonNull()) && !jsonObj.get("containerVersionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `containerVersionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("containerVersionId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("numClients") != null && !jsonObj.get("numClients").isJsonNull()) && !jsonObj.get("numClients").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numClients` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numClients").toString()));
      }
      if ((jsonObj.get("numCustomTemplates") != null && !jsonObj.get("numCustomTemplates").isJsonNull()) && !jsonObj.get("numCustomTemplates").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numCustomTemplates` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numCustomTemplates").toString()));
      }
      if ((jsonObj.get("numGtagConfigs") != null && !jsonObj.get("numGtagConfigs").isJsonNull()) && !jsonObj.get("numGtagConfigs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numGtagConfigs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numGtagConfigs").toString()));
      }
      if ((jsonObj.get("numMacros") != null && !jsonObj.get("numMacros").isJsonNull()) && !jsonObj.get("numMacros").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numMacros` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numMacros").toString()));
      }
      if ((jsonObj.get("numRules") != null && !jsonObj.get("numRules").isJsonNull()) && !jsonObj.get("numRules").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numRules` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numRules").toString()));
      }
      if ((jsonObj.get("numTags") != null && !jsonObj.get("numTags").isJsonNull()) && !jsonObj.get("numTags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numTags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numTags").toString()));
      }
      if ((jsonObj.get("numTransformations") != null && !jsonObj.get("numTransformations").isJsonNull()) && !jsonObj.get("numTransformations").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numTransformations` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numTransformations").toString()));
      }
      if ((jsonObj.get("numTriggers") != null && !jsonObj.get("numTriggers").isJsonNull()) && !jsonObj.get("numTriggers").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numTriggers` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numTriggers").toString()));
      }
      if ((jsonObj.get("numVariables") != null && !jsonObj.get("numVariables").isJsonNull()) && !jsonObj.get("numVariables").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numVariables` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numVariables").toString()));
      }
      if ((jsonObj.get("numZones") != null && !jsonObj.get("numZones").isJsonNull()) && !jsonObj.get("numZones").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numZones` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numZones").toString()));
      }
      if ((jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContainerVersionHeader.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContainerVersionHeader' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContainerVersionHeader> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContainerVersionHeader.class));

       return (TypeAdapter<T>) new TypeAdapter<ContainerVersionHeader>() {
           @Override
           public void write(JsonWriter out, ContainerVersionHeader value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContainerVersionHeader read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContainerVersionHeader given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContainerVersionHeader
   * @throws IOException if the JSON string is invalid with respect to ContainerVersionHeader
   */
  public static ContainerVersionHeader fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContainerVersionHeader.class);
  }

  /**
   * Convert an instance of ContainerVersionHeader to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

