/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRevertTriggerResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRevertTriggerResponse::OAIRevertTriggerResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRevertTriggerResponse::OAIRevertTriggerResponse() {
    this->initializeModel();
}

OAIRevertTriggerResponse::~OAIRevertTriggerResponse() {}

void OAIRevertTriggerResponse::initializeModel() {

    m_trigger_isSet = false;
    m_trigger_isValid = false;
}

void OAIRevertTriggerResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRevertTriggerResponse::fromJsonObject(QJsonObject json) {

    m_trigger_isValid = ::OpenAPI::fromJsonValue(m_trigger, json[QString("trigger")]);
    m_trigger_isSet = !json[QString("trigger")].isNull() && m_trigger_isValid;
}

QString OAIRevertTriggerResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRevertTriggerResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_trigger.isSet()) {
        obj.insert(QString("trigger"), ::OpenAPI::toJsonValue(m_trigger));
    }
    return obj;
}

OAITrigger OAIRevertTriggerResponse::getTrigger() const {
    return m_trigger;
}
void OAIRevertTriggerResponse::setTrigger(const OAITrigger &trigger) {
    m_trigger = trigger;
    m_trigger_isSet = true;
}

bool OAIRevertTriggerResponse::is_trigger_Set() const{
    return m_trigger_isSet;
}

bool OAIRevertTriggerResponse::is_trigger_Valid() const{
    return m_trigger_isValid;
}

bool OAIRevertTriggerResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_trigger.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRevertTriggerResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
