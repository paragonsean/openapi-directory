/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRevertClientResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRevertClientResponse::OAIRevertClientResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRevertClientResponse::OAIRevertClientResponse() {
    this->initializeModel();
}

OAIRevertClientResponse::~OAIRevertClientResponse() {}

void OAIRevertClientResponse::initializeModel() {

    m_client_isSet = false;
    m_client_isValid = false;
}

void OAIRevertClientResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRevertClientResponse::fromJsonObject(QJsonObject json) {

    m_client_isValid = ::OpenAPI::fromJsonValue(m_client, json[QString("client")]);
    m_client_isSet = !json[QString("client")].isNull() && m_client_isValid;
}

QString OAIRevertClientResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRevertClientResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_client.isSet()) {
        obj.insert(QString("client"), ::OpenAPI::toJsonValue(m_client));
    }
    return obj;
}

OAIClient OAIRevertClientResponse::getClient() const {
    return m_client;
}
void OAIRevertClientResponse::setClient(const OAIClient &client) {
    m_client = client;
    m_client_isSet = true;
}

bool OAIRevertClientResponse::is_client_Set() const{
    return m_client_isSet;
}

bool OAIRevertClientResponse::is_client_Valid() const{
    return m_client_isValid;
}

bool OAIRevertClientResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRevertClientResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
