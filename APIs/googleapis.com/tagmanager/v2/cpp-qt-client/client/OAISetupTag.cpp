/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISetupTag.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISetupTag::OAISetupTag(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISetupTag::OAISetupTag() {
    this->initializeModel();
}

OAISetupTag::~OAISetupTag() {}

void OAISetupTag::initializeModel() {

    m_stop_on_setup_failure_isSet = false;
    m_stop_on_setup_failure_isValid = false;

    m_tag_name_isSet = false;
    m_tag_name_isValid = false;
}

void OAISetupTag::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISetupTag::fromJsonObject(QJsonObject json) {

    m_stop_on_setup_failure_isValid = ::OpenAPI::fromJsonValue(m_stop_on_setup_failure, json[QString("stopOnSetupFailure")]);
    m_stop_on_setup_failure_isSet = !json[QString("stopOnSetupFailure")].isNull() && m_stop_on_setup_failure_isValid;

    m_tag_name_isValid = ::OpenAPI::fromJsonValue(m_tag_name, json[QString("tagName")]);
    m_tag_name_isSet = !json[QString("tagName")].isNull() && m_tag_name_isValid;
}

QString OAISetupTag::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISetupTag::asJsonObject() const {
    QJsonObject obj;
    if (m_stop_on_setup_failure_isSet) {
        obj.insert(QString("stopOnSetupFailure"), ::OpenAPI::toJsonValue(m_stop_on_setup_failure));
    }
    if (m_tag_name_isSet) {
        obj.insert(QString("tagName"), ::OpenAPI::toJsonValue(m_tag_name));
    }
    return obj;
}

bool OAISetupTag::isStopOnSetupFailure() const {
    return m_stop_on_setup_failure;
}
void OAISetupTag::setStopOnSetupFailure(const bool &stop_on_setup_failure) {
    m_stop_on_setup_failure = stop_on_setup_failure;
    m_stop_on_setup_failure_isSet = true;
}

bool OAISetupTag::is_stop_on_setup_failure_Set() const{
    return m_stop_on_setup_failure_isSet;
}

bool OAISetupTag::is_stop_on_setup_failure_Valid() const{
    return m_stop_on_setup_failure_isValid;
}

QString OAISetupTag::getTagName() const {
    return m_tag_name;
}
void OAISetupTag::setTagName(const QString &tag_name) {
    m_tag_name = tag_name;
    m_tag_name_isSet = true;
}

bool OAISetupTag::is_tag_name_Set() const{
    return m_tag_name_isSet;
}

bool OAISetupTag::is_tag_name_Valid() const{
    return m_tag_name_isValid;
}

bool OAISetupTag::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_stop_on_setup_failure_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISetupTag::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
