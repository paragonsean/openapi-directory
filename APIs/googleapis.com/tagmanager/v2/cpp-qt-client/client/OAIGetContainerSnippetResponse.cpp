/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetContainerSnippetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetContainerSnippetResponse::OAIGetContainerSnippetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetContainerSnippetResponse::OAIGetContainerSnippetResponse() {
    this->initializeModel();
}

OAIGetContainerSnippetResponse::~OAIGetContainerSnippetResponse() {}

void OAIGetContainerSnippetResponse::initializeModel() {

    m_snippet_isSet = false;
    m_snippet_isValid = false;
}

void OAIGetContainerSnippetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetContainerSnippetResponse::fromJsonObject(QJsonObject json) {

    m_snippet_isValid = ::OpenAPI::fromJsonValue(m_snippet, json[QString("snippet")]);
    m_snippet_isSet = !json[QString("snippet")].isNull() && m_snippet_isValid;
}

QString OAIGetContainerSnippetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetContainerSnippetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_snippet_isSet) {
        obj.insert(QString("snippet"), ::OpenAPI::toJsonValue(m_snippet));
    }
    return obj;
}

QString OAIGetContainerSnippetResponse::getSnippet() const {
    return m_snippet;
}
void OAIGetContainerSnippetResponse::setSnippet(const QString &snippet) {
    m_snippet = snippet;
    m_snippet_isSet = true;
}

bool OAIGetContainerSnippetResponse::is_snippet_Set() const{
    return m_snippet_isSet;
}

bool OAIGetContainerSnippetResponse::is_snippet_Valid() const{
    return m_snippet_isValid;
}

bool OAIGetContainerSnippetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_snippet_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetContainerSnippetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
