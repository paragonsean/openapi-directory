/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRevertFolderResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRevertFolderResponse::OAIRevertFolderResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRevertFolderResponse::OAIRevertFolderResponse() {
    this->initializeModel();
}

OAIRevertFolderResponse::~OAIRevertFolderResponse() {}

void OAIRevertFolderResponse::initializeModel() {

    m_folder_isSet = false;
    m_folder_isValid = false;
}

void OAIRevertFolderResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRevertFolderResponse::fromJsonObject(QJsonObject json) {

    m_folder_isValid = ::OpenAPI::fromJsonValue(m_folder, json[QString("folder")]);
    m_folder_isSet = !json[QString("folder")].isNull() && m_folder_isValid;
}

QString OAIRevertFolderResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRevertFolderResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_folder.isSet()) {
        obj.insert(QString("folder"), ::OpenAPI::toJsonValue(m_folder));
    }
    return obj;
}

OAIFolder OAIRevertFolderResponse::getFolder() const {
    return m_folder;
}
void OAIRevertFolderResponse::setFolder(const OAIFolder &folder) {
    m_folder = folder;
    m_folder_isSet = true;
}

bool OAIRevertFolderResponse::is_folder_Set() const{
    return m_folder_isSet;
}

bool OAIRevertFolderResponse::is_folder_Valid() const{
    return m_folder_isValid;
}

bool OAIRevertFolderResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_folder.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRevertFolderResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
