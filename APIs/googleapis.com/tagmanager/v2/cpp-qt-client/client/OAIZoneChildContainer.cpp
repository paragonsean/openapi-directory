/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIZoneChildContainer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIZoneChildContainer::OAIZoneChildContainer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIZoneChildContainer::OAIZoneChildContainer() {
    this->initializeModel();
}

OAIZoneChildContainer::~OAIZoneChildContainer() {}

void OAIZoneChildContainer::initializeModel() {

    m_nickname_isSet = false;
    m_nickname_isValid = false;

    m_public_id_isSet = false;
    m_public_id_isValid = false;
}

void OAIZoneChildContainer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIZoneChildContainer::fromJsonObject(QJsonObject json) {

    m_nickname_isValid = ::OpenAPI::fromJsonValue(m_nickname, json[QString("nickname")]);
    m_nickname_isSet = !json[QString("nickname")].isNull() && m_nickname_isValid;

    m_public_id_isValid = ::OpenAPI::fromJsonValue(m_public_id, json[QString("publicId")]);
    m_public_id_isSet = !json[QString("publicId")].isNull() && m_public_id_isValid;
}

QString OAIZoneChildContainer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIZoneChildContainer::asJsonObject() const {
    QJsonObject obj;
    if (m_nickname_isSet) {
        obj.insert(QString("nickname"), ::OpenAPI::toJsonValue(m_nickname));
    }
    if (m_public_id_isSet) {
        obj.insert(QString("publicId"), ::OpenAPI::toJsonValue(m_public_id));
    }
    return obj;
}

QString OAIZoneChildContainer::getNickname() const {
    return m_nickname;
}
void OAIZoneChildContainer::setNickname(const QString &nickname) {
    m_nickname = nickname;
    m_nickname_isSet = true;
}

bool OAIZoneChildContainer::is_nickname_Set() const{
    return m_nickname_isSet;
}

bool OAIZoneChildContainer::is_nickname_Valid() const{
    return m_nickname_isValid;
}

QString OAIZoneChildContainer::getPublicId() const {
    return m_public_id;
}
void OAIZoneChildContainer::setPublicId(const QString &public_id) {
    m_public_id = public_id;
    m_public_id_isSet = true;
}

bool OAIZoneChildContainer::is_public_id_Set() const{
    return m_public_id_isSet;
}

bool OAIZoneChildContainer::is_public_id_Valid() const{
    return m_public_id_isValid;
}

bool OAIZoneChildContainer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_nickname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIZoneChildContainer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
