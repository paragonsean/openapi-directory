/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITag.h
 *
 * Represents a Google Tag Manager Tag.
 */

#ifndef OAITag_H
#define OAITag_H

#include <QJsonObject>

#include "OAIParameter.h"
#include "OAISetupTag.h"
#include "OAITagConsentSetting.h"
#include "OAITeardownTag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITagConsentSetting;
class OAIParameter;
class OAISetupTag;
class OAITeardownTag;

class OAITag : public OAIObject {
public:
    OAITag();
    OAITag(QString json);
    ~OAITag() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    Q_DECL_DEPRECATED QList<QString> getBlockingRuleId() const;
    Q_DECL_DEPRECATED void setBlockingRuleId(const QList<QString> &blocking_rule_id);
    Q_DECL_DEPRECATED bool is_blocking_rule_id_Set() const;
    Q_DECL_DEPRECATED bool is_blocking_rule_id_Valid() const;

    QList<QString> getBlockingTriggerId() const;
    void setBlockingTriggerId(const QList<QString> &blocking_trigger_id);
    bool is_blocking_trigger_id_Set() const;
    bool is_blocking_trigger_id_Valid() const;

    OAITagConsentSetting getConsentSettings() const;
    void setConsentSettings(const OAITagConsentSetting &consent_settings);
    bool is_consent_settings_Set() const;
    bool is_consent_settings_Valid() const;

    QString getContainerId() const;
    void setContainerId(const QString &container_id);
    bool is_container_id_Set() const;
    bool is_container_id_Valid() const;

    QString getFingerprint() const;
    void setFingerprint(const QString &fingerprint);
    bool is_fingerprint_Set() const;
    bool is_fingerprint_Valid() const;

    Q_DECL_DEPRECATED QList<QString> getFiringRuleId() const;
    Q_DECL_DEPRECATED void setFiringRuleId(const QList<QString> &firing_rule_id);
    Q_DECL_DEPRECATED bool is_firing_rule_id_Set() const;
    Q_DECL_DEPRECATED bool is_firing_rule_id_Valid() const;

    QList<QString> getFiringTriggerId() const;
    void setFiringTriggerId(const QList<QString> &firing_trigger_id);
    bool is_firing_trigger_id_Set() const;
    bool is_firing_trigger_id_Valid() const;

    bool isLiveOnly() const;
    void setLiveOnly(const bool &live_only);
    bool is_live_only_Set() const;
    bool is_live_only_Valid() const;

    OAIParameter getMonitoringMetadata() const;
    void setMonitoringMetadata(const OAIParameter &monitoring_metadata);
    bool is_monitoring_metadata_Set() const;
    bool is_monitoring_metadata_Valid() const;

    QString getMonitoringMetadataTagNameKey() const;
    void setMonitoringMetadataTagNameKey(const QString &monitoring_metadata_tag_name_key);
    bool is_monitoring_metadata_tag_name_key_Set() const;
    bool is_monitoring_metadata_tag_name_key_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QList<OAIParameter> getParameter() const;
    void setParameter(const QList<OAIParameter> &parameter);
    bool is_parameter_Set() const;
    bool is_parameter_Valid() const;

    QString getParentFolderId() const;
    void setParentFolderId(const QString &parent_folder_id);
    bool is_parent_folder_id_Set() const;
    bool is_parent_folder_id_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    bool isPaused() const;
    void setPaused(const bool &paused);
    bool is_paused_Set() const;
    bool is_paused_Valid() const;

    OAIParameter getPriority() const;
    void setPriority(const OAIParameter &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getScheduleEndMs() const;
    void setScheduleEndMs(const QString &schedule_end_ms);
    bool is_schedule_end_ms_Set() const;
    bool is_schedule_end_ms_Valid() const;

    QString getScheduleStartMs() const;
    void setScheduleStartMs(const QString &schedule_start_ms);
    bool is_schedule_start_ms_Set() const;
    bool is_schedule_start_ms_Valid() const;

    QList<OAISetupTag> getSetupTag() const;
    void setSetupTag(const QList<OAISetupTag> &setup_tag);
    bool is_setup_tag_Set() const;
    bool is_setup_tag_Valid() const;

    QString getTagFiringOption() const;
    void setTagFiringOption(const QString &tag_firing_option);
    bool is_tag_firing_option_Set() const;
    bool is_tag_firing_option_Valid() const;

    QString getTagId() const;
    void setTagId(const QString &tag_id);
    bool is_tag_id_Set() const;
    bool is_tag_id_Valid() const;

    QString getTagManagerUrl() const;
    void setTagManagerUrl(const QString &tag_manager_url);
    bool is_tag_manager_url_Set() const;
    bool is_tag_manager_url_Valid() const;

    QList<OAITeardownTag> getTeardownTag() const;
    void setTeardownTag(const QList<OAITeardownTag> &teardown_tag);
    bool is_teardown_tag_Set() const;
    bool is_teardown_tag_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getWorkspaceId() const;
    void setWorkspaceId(const QString &workspace_id);
    bool is_workspace_id_Set() const;
    bool is_workspace_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QList<QString> m_blocking_rule_id;
    bool m_blocking_rule_id_isSet;
    bool m_blocking_rule_id_isValid;

    QList<QString> m_blocking_trigger_id;
    bool m_blocking_trigger_id_isSet;
    bool m_blocking_trigger_id_isValid;

    OAITagConsentSetting m_consent_settings;
    bool m_consent_settings_isSet;
    bool m_consent_settings_isValid;

    QString m_container_id;
    bool m_container_id_isSet;
    bool m_container_id_isValid;

    QString m_fingerprint;
    bool m_fingerprint_isSet;
    bool m_fingerprint_isValid;

    QList<QString> m_firing_rule_id;
    bool m_firing_rule_id_isSet;
    bool m_firing_rule_id_isValid;

    QList<QString> m_firing_trigger_id;
    bool m_firing_trigger_id_isSet;
    bool m_firing_trigger_id_isValid;

    bool m_live_only;
    bool m_live_only_isSet;
    bool m_live_only_isValid;

    OAIParameter m_monitoring_metadata;
    bool m_monitoring_metadata_isSet;
    bool m_monitoring_metadata_isValid;

    QString m_monitoring_metadata_tag_name_key;
    bool m_monitoring_metadata_tag_name_key_isSet;
    bool m_monitoring_metadata_tag_name_key_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QList<OAIParameter> m_parameter;
    bool m_parameter_isSet;
    bool m_parameter_isValid;

    QString m_parent_folder_id;
    bool m_parent_folder_id_isSet;
    bool m_parent_folder_id_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    bool m_paused;
    bool m_paused_isSet;
    bool m_paused_isValid;

    OAIParameter m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_schedule_end_ms;
    bool m_schedule_end_ms_isSet;
    bool m_schedule_end_ms_isValid;

    QString m_schedule_start_ms;
    bool m_schedule_start_ms_isSet;
    bool m_schedule_start_ms_isValid;

    QList<OAISetupTag> m_setup_tag;
    bool m_setup_tag_isSet;
    bool m_setup_tag_isValid;

    QString m_tag_firing_option;
    bool m_tag_firing_option_isSet;
    bool m_tag_firing_option_isValid;

    QString m_tag_id;
    bool m_tag_id_isSet;
    bool m_tag_id_isValid;

    QString m_tag_manager_url;
    bool m_tag_manager_url_isSet;
    bool m_tag_manager_url_isValid;

    QList<OAITeardownTag> m_teardown_tag;
    bool m_teardown_tag_isSet;
    bool m_teardown_tag_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_workspace_id;
    bool m_workspace_id_isSet;
    bool m_workspace_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITag)

#endif // OAITag_H
