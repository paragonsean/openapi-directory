/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntity.h
 *
 * A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.
 */

#ifndef OAIEntity_H
#define OAIEntity_H

#include <QJsonObject>

#include "OAIBuiltInVariable.h"
#include "OAIClient.h"
#include "OAICustomTemplate.h"
#include "OAIFolder.h"
#include "OAIGtagConfig.h"
#include "OAITag.h"
#include "OAITransformation.h"
#include "OAITrigger.h"
#include "OAIVariable.h"
#include "OAIZone.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBuiltInVariable;
class OAIClient;
class OAICustomTemplate;
class OAIFolder;
class OAIGtagConfig;
class OAITag;
class OAITransformation;
class OAITrigger;
class OAIVariable;
class OAIZone;

class OAIEntity : public OAIObject {
public:
    OAIEntity();
    OAIEntity(QString json);
    ~OAIEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBuiltInVariable getBuiltInVariable() const;
    void setBuiltInVariable(const OAIBuiltInVariable &built_in_variable);
    bool is_built_in_variable_Set() const;
    bool is_built_in_variable_Valid() const;

    QString getChangeStatus() const;
    void setChangeStatus(const QString &change_status);
    bool is_change_status_Set() const;
    bool is_change_status_Valid() const;

    OAIClient getClient() const;
    void setClient(const OAIClient &client);
    bool is_client_Set() const;
    bool is_client_Valid() const;

    OAICustomTemplate getCustomTemplate() const;
    void setCustomTemplate(const OAICustomTemplate &custom_template);
    bool is_custom_template_Set() const;
    bool is_custom_template_Valid() const;

    OAIFolder getFolder() const;
    void setFolder(const OAIFolder &folder);
    bool is_folder_Set() const;
    bool is_folder_Valid() const;

    OAIGtagConfig getGtagConfig() const;
    void setGtagConfig(const OAIGtagConfig &gtag_config);
    bool is_gtag_config_Set() const;
    bool is_gtag_config_Valid() const;

    OAITag getTag() const;
    void setTag(const OAITag &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    OAITransformation getTransformation() const;
    void setTransformation(const OAITransformation &transformation);
    bool is_transformation_Set() const;
    bool is_transformation_Valid() const;

    OAITrigger getTrigger() const;
    void setTrigger(const OAITrigger &trigger);
    bool is_trigger_Set() const;
    bool is_trigger_Valid() const;

    OAIVariable getVariable() const;
    void setVariable(const OAIVariable &variable);
    bool is_variable_Set() const;
    bool is_variable_Valid() const;

    OAIZone getZone() const;
    void setZone(const OAIZone &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBuiltInVariable m_built_in_variable;
    bool m_built_in_variable_isSet;
    bool m_built_in_variable_isValid;

    QString m_change_status;
    bool m_change_status_isSet;
    bool m_change_status_isValid;

    OAIClient m_client;
    bool m_client_isSet;
    bool m_client_isValid;

    OAICustomTemplate m_custom_template;
    bool m_custom_template_isSet;
    bool m_custom_template_isValid;

    OAIFolder m_folder;
    bool m_folder_isSet;
    bool m_folder_isValid;

    OAIGtagConfig m_gtag_config;
    bool m_gtag_config_isSet;
    bool m_gtag_config_isValid;

    OAITag m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;

    OAITransformation m_transformation;
    bool m_transformation_isSet;
    bool m_transformation_isValid;

    OAITrigger m_trigger;
    bool m_trigger_isSet;
    bool m_trigger_isValid;

    OAIVariable m_variable;
    bool m_variable_isSet;
    bool m_variable_isValid;

    OAIZone m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntity)

#endif // OAIEntity_H
