/**
 * Tag Manager API
 * This API allows clients to access and modify container and tag configuration.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIZone.h
 *
 * Represents a Google Tag Manager Zone&#39;s contents.
 */

#ifndef OAIZone_H
#define OAIZone_H

#include <QJsonObject>

#include "OAIZoneBoundary.h"
#include "OAIZoneChildContainer.h"
#include "OAIZoneTypeRestriction.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIZoneBoundary;
class OAIZoneChildContainer;
class OAIZoneTypeRestriction;

class OAIZone : public OAIObject {
public:
    OAIZone();
    OAIZone(QString json);
    ~OAIZone() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAIZoneBoundary getBoundary() const;
    void setBoundary(const OAIZoneBoundary &boundary);
    bool is_boundary_Set() const;
    bool is_boundary_Valid() const;

    QList<OAIZoneChildContainer> getChildContainer() const;
    void setChildContainer(const QList<OAIZoneChildContainer> &child_container);
    bool is_child_container_Set() const;
    bool is_child_container_Valid() const;

    QString getContainerId() const;
    void setContainerId(const QString &container_id);
    bool is_container_id_Set() const;
    bool is_container_id_Valid() const;

    QString getFingerprint() const;
    void setFingerprint(const QString &fingerprint);
    bool is_fingerprint_Set() const;
    bool is_fingerprint_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getTagManagerUrl() const;
    void setTagManagerUrl(const QString &tag_manager_url);
    bool is_tag_manager_url_Set() const;
    bool is_tag_manager_url_Valid() const;

    OAIZoneTypeRestriction getTypeRestriction() const;
    void setTypeRestriction(const OAIZoneTypeRestriction &type_restriction);
    bool is_type_restriction_Set() const;
    bool is_type_restriction_Valid() const;

    QString getWorkspaceId() const;
    void setWorkspaceId(const QString &workspace_id);
    bool is_workspace_id_Set() const;
    bool is_workspace_id_Valid() const;

    QString getZoneId() const;
    void setZoneId(const QString &zone_id);
    bool is_zone_id_Set() const;
    bool is_zone_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAIZoneBoundary m_boundary;
    bool m_boundary_isSet;
    bool m_boundary_isValid;

    QList<OAIZoneChildContainer> m_child_container;
    bool m_child_container_isSet;
    bool m_child_container_isValid;

    QString m_container_id;
    bool m_container_id_isSet;
    bool m_container_id_isValid;

    QString m_fingerprint;
    bool m_fingerprint_isSet;
    bool m_fingerprint_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_tag_manager_url;
    bool m_tag_manager_url_isSet;
    bool m_tag_manager_url_isValid;

    OAIZoneTypeRestriction m_type_restriction;
    bool m_type_restriction_isSet;
    bool m_type_restriction_isValid;

    QString m_workspace_id;
    bool m_workspace_id_isSet;
    bool m_workspace_id_isValid;

    QString m_zone_id;
    bool m_zone_id_isSet;
    bool m_zone_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIZone)

#endif // OAIZone_H
