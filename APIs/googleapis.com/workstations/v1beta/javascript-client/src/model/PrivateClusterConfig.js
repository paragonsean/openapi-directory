/**
 * Cloud Workstations API
 * Allows administrators to create managed developer environments in the cloud. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PrivateClusterConfig model module.
 * @module model/PrivateClusterConfig
 * @version v1beta
 */
class PrivateClusterConfig {
    /**
     * Constructs a new <code>PrivateClusterConfig</code>.
     * Configuration options for private workstation clusters.
     * @alias module:model/PrivateClusterConfig
     */
    constructor() { 
        
        PrivateClusterConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PrivateClusterConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrivateClusterConfig} obj Optional instance to populate.
     * @return {module:model/PrivateClusterConfig} The populated <code>PrivateClusterConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrivateClusterConfig();

            if (data.hasOwnProperty('allowedProjects')) {
                obj['allowedProjects'] = ApiClient.convertToType(data['allowedProjects'], ['String']);
            }
            if (data.hasOwnProperty('clusterHostname')) {
                obj['clusterHostname'] = ApiClient.convertToType(data['clusterHostname'], 'String');
            }
            if (data.hasOwnProperty('enablePrivateEndpoint')) {
                obj['enablePrivateEndpoint'] = ApiClient.convertToType(data['enablePrivateEndpoint'], 'Boolean');
            }
            if (data.hasOwnProperty('serviceAttachmentUri')) {
                obj['serviceAttachmentUri'] = ApiClient.convertToType(data['serviceAttachmentUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrivateClusterConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrivateClusterConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedProjects'])) {
            throw new Error("Expected the field `allowedProjects` to be an array in the JSON data but got " + data['allowedProjects']);
        }
        // ensure the json data is a string
        if (data['clusterHostname'] && !(typeof data['clusterHostname'] === 'string' || data['clusterHostname'] instanceof String)) {
            throw new Error("Expected the field `clusterHostname` to be a primitive type in the JSON string but got " + data['clusterHostname']);
        }
        // ensure the json data is a string
        if (data['serviceAttachmentUri'] && !(typeof data['serviceAttachmentUri'] === 'string' || data['serviceAttachmentUri'] instanceof String)) {
            throw new Error("Expected the field `serviceAttachmentUri` to be a primitive type in the JSON string but got " + data['serviceAttachmentUri']);
        }

        return true;
    }


}



/**
 * Optional. Additional projects that are allowed to attach to the workstation cluster's service attachment. By default, the workstation cluster's project and the VPC host project (if different) are allowed.
 * @member {Array.<String>} allowedProjects
 */
PrivateClusterConfig.prototype['allowedProjects'] = undefined;

/**
 * Output only. Hostname for the workstation cluster. This field will be populated only when private endpoint is enabled. To access workstations in the workstation cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.
 * @member {String} clusterHostname
 */
PrivateClusterConfig.prototype['clusterHostname'] = undefined;

/**
 * Immutable. Whether Workstations endpoint is private.
 * @member {Boolean} enablePrivateEndpoint
 */
PrivateClusterConfig.prototype['enablePrivateEndpoint'] = undefined;

/**
 * Output only. Service attachment URI for the workstation cluster. The service attachemnt is created when private endpoint is enabled. To access workstations in the workstation cluster, configure access to the managed service using [Private Service Connect](https://cloud.google.com/vpc/docs/configure-private-service-connect-services).
 * @member {String} serviceAttachmentUri
 */
PrivateClusterConfig.prototype['serviceAttachmentUri'] = undefined;






export default PrivateClusterConfig;

