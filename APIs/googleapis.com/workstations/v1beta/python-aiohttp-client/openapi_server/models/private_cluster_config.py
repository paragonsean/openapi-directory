# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrivateClusterConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_projects: List[str]=None, cluster_hostname: str=None, enable_private_endpoint: bool=None, service_attachment_uri: str=None):
        """PrivateClusterConfig - a model defined in OpenAPI

        :param allowed_projects: The allowed_projects of this PrivateClusterConfig.
        :param cluster_hostname: The cluster_hostname of this PrivateClusterConfig.
        :param enable_private_endpoint: The enable_private_endpoint of this PrivateClusterConfig.
        :param service_attachment_uri: The service_attachment_uri of this PrivateClusterConfig.
        """
        self.openapi_types = {
            'allowed_projects': List[str],
            'cluster_hostname': str,
            'enable_private_endpoint': bool,
            'service_attachment_uri': str
        }

        self.attribute_map = {
            'allowed_projects': 'allowedProjects',
            'cluster_hostname': 'clusterHostname',
            'enable_private_endpoint': 'enablePrivateEndpoint',
            'service_attachment_uri': 'serviceAttachmentUri'
        }

        self._allowed_projects = allowed_projects
        self._cluster_hostname = cluster_hostname
        self._enable_private_endpoint = enable_private_endpoint
        self._service_attachment_uri = service_attachment_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateClusterConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateClusterConfig of this PrivateClusterConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_projects(self):
        """Gets the allowed_projects of this PrivateClusterConfig.

        Optional. Additional projects that are allowed to attach to the workstation cluster's service attachment. By default, the workstation cluster's project and the VPC host project (if different) are allowed.

        :return: The allowed_projects of this PrivateClusterConfig.
        :rtype: List[str]
        """
        return self._allowed_projects

    @allowed_projects.setter
    def allowed_projects(self, allowed_projects):
        """Sets the allowed_projects of this PrivateClusterConfig.

        Optional. Additional projects that are allowed to attach to the workstation cluster's service attachment. By default, the workstation cluster's project and the VPC host project (if different) are allowed.

        :param allowed_projects: The allowed_projects of this PrivateClusterConfig.
        :type allowed_projects: List[str]
        """

        self._allowed_projects = allowed_projects

    @property
    def cluster_hostname(self):
        """Gets the cluster_hostname of this PrivateClusterConfig.

        Output only. Hostname for the workstation cluster. This field will be populated only when private endpoint is enabled. To access workstations in the workstation cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.

        :return: The cluster_hostname of this PrivateClusterConfig.
        :rtype: str
        """
        return self._cluster_hostname

    @cluster_hostname.setter
    def cluster_hostname(self, cluster_hostname):
        """Sets the cluster_hostname of this PrivateClusterConfig.

        Output only. Hostname for the workstation cluster. This field will be populated only when private endpoint is enabled. To access workstations in the workstation cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.

        :param cluster_hostname: The cluster_hostname of this PrivateClusterConfig.
        :type cluster_hostname: str
        """

        self._cluster_hostname = cluster_hostname

    @property
    def enable_private_endpoint(self):
        """Gets the enable_private_endpoint of this PrivateClusterConfig.

        Immutable. Whether Workstations endpoint is private.

        :return: The enable_private_endpoint of this PrivateClusterConfig.
        :rtype: bool
        """
        return self._enable_private_endpoint

    @enable_private_endpoint.setter
    def enable_private_endpoint(self, enable_private_endpoint):
        """Sets the enable_private_endpoint of this PrivateClusterConfig.

        Immutable. Whether Workstations endpoint is private.

        :param enable_private_endpoint: The enable_private_endpoint of this PrivateClusterConfig.
        :type enable_private_endpoint: bool
        """

        self._enable_private_endpoint = enable_private_endpoint

    @property
    def service_attachment_uri(self):
        """Gets the service_attachment_uri of this PrivateClusterConfig.

        Output only. Service attachment URI for the workstation cluster. The service attachemnt is created when private endpoint is enabled. To access workstations in the workstation cluster, configure access to the managed service using [Private Service Connect](https://cloud.google.com/vpc/docs/configure-private-service-connect-services).

        :return: The service_attachment_uri of this PrivateClusterConfig.
        :rtype: str
        """
        return self._service_attachment_uri

    @service_attachment_uri.setter
    def service_attachment_uri(self, service_attachment_uri):
        """Sets the service_attachment_uri of this PrivateClusterConfig.

        Output only. Service attachment URI for the workstation cluster. The service attachemnt is created when private endpoint is enabled. To access workstations in the workstation cluster, configure access to the managed service using [Private Service Connect](https://cloud.google.com/vpc/docs/configure-private-service-connect-services).

        :param service_attachment_uri: The service_attachment_uri of this PrivateClusterConfig.
        :type service_attachment_uri: str
        """

        self._service_attachment_uri = service_attachment_uri
