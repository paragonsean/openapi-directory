# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Accelerator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, type: str=None):
        """Accelerator - a model defined in OpenAPI

        :param count: The count of this Accelerator.
        :param type: The type of this Accelerator.
        """
        self.openapi_types = {
            'count': int,
            'type': str
        }

        self.attribute_map = {
            'count': 'count',
            'type': 'type'
        }

        self._count = count
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Accelerator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Accelerator of this Accelerator.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this Accelerator.

        Optional. Number of accelerator cards exposed to the instance.

        :return: The count of this Accelerator.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this Accelerator.

        Optional. Number of accelerator cards exposed to the instance.

        :param count: The count of this Accelerator.
        :type count: int
        """

        self._count = count

    @property
    def type(self):
        """Gets the type of this Accelerator.

        Optional. Type of accelerator resource to attach to the instance, for example, `\"nvidia-tesla-p100\"`.

        :return: The type of this Accelerator.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Accelerator.

        Optional. Type of accelerator resource to attach to the instance, for example, `\"nvidia-tesla-p100\"`.

        :param type: The type of this Accelerator.
        :type type: str
        """

        self._type = type
