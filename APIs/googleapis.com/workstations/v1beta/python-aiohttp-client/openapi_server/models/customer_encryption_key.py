# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomerEncryptionKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kms_key: str=None, kms_key_service_account: str=None):
        """CustomerEncryptionKey - a model defined in OpenAPI

        :param kms_key: The kms_key of this CustomerEncryptionKey.
        :param kms_key_service_account: The kms_key_service_account of this CustomerEncryptionKey.
        """
        self.openapi_types = {
            'kms_key': str,
            'kms_key_service_account': str
        }

        self.attribute_map = {
            'kms_key': 'kmsKey',
            'kms_key_service_account': 'kmsKeyServiceAccount'
        }

        self._kms_key = kms_key
        self._kms_key_service_account = kms_key_service_account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerEncryptionKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerEncryptionKey of this CustomerEncryptionKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kms_key(self):
        """Gets the kms_key of this CustomerEncryptionKey.

        Immutable. The name of the Google Cloud KMS encryption key. For example, `\"projects/PROJECT_ID/locations/REGION/keyRings/KEY_RING/cryptoKeys/KEY_NAME\"`. The key must be in the same region as the workstation configuration.

        :return: The kms_key of this CustomerEncryptionKey.
        :rtype: str
        """
        return self._kms_key

    @kms_key.setter
    def kms_key(self, kms_key):
        """Sets the kms_key of this CustomerEncryptionKey.

        Immutable. The name of the Google Cloud KMS encryption key. For example, `\"projects/PROJECT_ID/locations/REGION/keyRings/KEY_RING/cryptoKeys/KEY_NAME\"`. The key must be in the same region as the workstation configuration.

        :param kms_key: The kms_key of this CustomerEncryptionKey.
        :type kms_key: str
        """

        self._kms_key = kms_key

    @property
    def kms_key_service_account(self):
        """Gets the kms_key_service_account of this CustomerEncryptionKey.

        Immutable. The service account to use with the specified KMS key. We recommend that you use a separate service account and follow KMS best practices. For more information, see [Separation of duties](https://cloud.google.com/kms/docs/separation-of-duties) and `gcloud kms keys add-iam-policy-binding` [`--member`](https://cloud.google.com/sdk/gcloud/reference/kms/keys/add-iam-policy-binding#--member).

        :return: The kms_key_service_account of this CustomerEncryptionKey.
        :rtype: str
        """
        return self._kms_key_service_account

    @kms_key_service_account.setter
    def kms_key_service_account(self, kms_key_service_account):
        """Sets the kms_key_service_account of this CustomerEncryptionKey.

        Immutable. The service account to use with the specified KMS key. We recommend that you use a separate service account and follow KMS best practices. For more information, see [Separation of duties](https://cloud.google.com/kms/docs/separation-of-duties) and `gcloud kms keys add-iam-policy-binding` [`--member`](https://cloud.google.com/sdk/gcloud/reference/kms/keys/add-iam-policy-binding#--member).

        :param kms_key_service_account: The kms_key_service_account of this CustomerEncryptionKey.
        :type kms_key_service_account: str
        """

        self._kms_key_service_account = kms_key_service_account
