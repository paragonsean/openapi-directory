/**
 * Cloud Workstations API
 * Allows administrators to create managed developer environments in the cloud. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainer.h
 *
 * A Docker container.
 */

#ifndef OAIContainer_H
#define OAIContainer_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContainer : public OAIObject {
public:
    OAIContainer();
    OAIContainer(QString json);
    ~OAIContainer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getArgs() const;
    void setArgs(const QList<QString> &args);
    bool is_args_Set() const;
    bool is_args_Valid() const;

    QList<QString> getCommand() const;
    void setCommand(const QList<QString> &command);
    bool is_command_Set() const;
    bool is_command_Valid() const;

    QMap<QString, QString> getEnv() const;
    void setEnv(const QMap<QString, QString> &env);
    bool is_env_Set() const;
    bool is_env_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    qint32 getRunAsUser() const;
    void setRunAsUser(const qint32 &run_as_user);
    bool is_run_as_user_Set() const;
    bool is_run_as_user_Valid() const;

    QString getWorkingDir() const;
    void setWorkingDir(const QString &working_dir);
    bool is_working_dir_Set() const;
    bool is_working_dir_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_args;
    bool m_args_isSet;
    bool m_args_isValid;

    QList<QString> m_command;
    bool m_command_isSet;
    bool m_command_isValid;

    QMap<QString, QString> m_env;
    bool m_env_isSet;
    bool m_env_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    qint32 m_run_as_user;
    bool m_run_as_user_isSet;
    bool m_run_as_user_isValid;

    QString m_working_dir;
    bool m_working_dir_isSet;
    bool m_working_dir_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainer)

#endif // OAIContainer_H
