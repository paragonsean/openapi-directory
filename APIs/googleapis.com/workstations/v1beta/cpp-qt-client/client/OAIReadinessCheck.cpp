/**
 * Cloud Workstations API
 * Allows administrators to create managed developer environments in the cloud. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReadinessCheck.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReadinessCheck::OAIReadinessCheck(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReadinessCheck::OAIReadinessCheck() {
    this->initializeModel();
}

OAIReadinessCheck::~OAIReadinessCheck() {}

void OAIReadinessCheck::initializeModel() {

    m_path_isSet = false;
    m_path_isValid = false;

    m_port_isSet = false;
    m_port_isValid = false;
}

void OAIReadinessCheck::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReadinessCheck::fromJsonObject(QJsonObject json) {

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_port_isValid = ::OpenAPI::fromJsonValue(m_port, json[QString("port")]);
    m_port_isSet = !json[QString("port")].isNull() && m_port_isValid;
}

QString OAIReadinessCheck::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReadinessCheck::asJsonObject() const {
    QJsonObject obj;
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_port_isSet) {
        obj.insert(QString("port"), ::OpenAPI::toJsonValue(m_port));
    }
    return obj;
}

QString OAIReadinessCheck::getPath() const {
    return m_path;
}
void OAIReadinessCheck::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIReadinessCheck::is_path_Set() const{
    return m_path_isSet;
}

bool OAIReadinessCheck::is_path_Valid() const{
    return m_path_isValid;
}

qint32 OAIReadinessCheck::getPort() const {
    return m_port;
}
void OAIReadinessCheck::setPort(const qint32 &port) {
    m_port = port;
    m_port_isSet = true;
}

bool OAIReadinessCheck::is_port_Set() const{
    return m_port_isSet;
}

bool OAIReadinessCheck::is_port_Valid() const{
    return m_port_isValid;
}

bool OAIReadinessCheck::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_port_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReadinessCheck::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
