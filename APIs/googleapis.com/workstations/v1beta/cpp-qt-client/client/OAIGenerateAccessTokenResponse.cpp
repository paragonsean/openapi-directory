/**
 * Cloud Workstations API
 * Allows administrators to create managed developer environments in the cloud. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGenerateAccessTokenResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGenerateAccessTokenResponse::OAIGenerateAccessTokenResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGenerateAccessTokenResponse::OAIGenerateAccessTokenResponse() {
    this->initializeModel();
}

OAIGenerateAccessTokenResponse::~OAIGenerateAccessTokenResponse() {}

void OAIGenerateAccessTokenResponse::initializeModel() {

    m_access_token_isSet = false;
    m_access_token_isValid = false;

    m_expire_time_isSet = false;
    m_expire_time_isValid = false;
}

void OAIGenerateAccessTokenResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGenerateAccessTokenResponse::fromJsonObject(QJsonObject json) {

    m_access_token_isValid = ::OpenAPI::fromJsonValue(m_access_token, json[QString("accessToken")]);
    m_access_token_isSet = !json[QString("accessToken")].isNull() && m_access_token_isValid;

    m_expire_time_isValid = ::OpenAPI::fromJsonValue(m_expire_time, json[QString("expireTime")]);
    m_expire_time_isSet = !json[QString("expireTime")].isNull() && m_expire_time_isValid;
}

QString OAIGenerateAccessTokenResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGenerateAccessTokenResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_access_token_isSet) {
        obj.insert(QString("accessToken"), ::OpenAPI::toJsonValue(m_access_token));
    }
    if (m_expire_time_isSet) {
        obj.insert(QString("expireTime"), ::OpenAPI::toJsonValue(m_expire_time));
    }
    return obj;
}

QString OAIGenerateAccessTokenResponse::getAccessToken() const {
    return m_access_token;
}
void OAIGenerateAccessTokenResponse::setAccessToken(const QString &access_token) {
    m_access_token = access_token;
    m_access_token_isSet = true;
}

bool OAIGenerateAccessTokenResponse::is_access_token_Set() const{
    return m_access_token_isSet;
}

bool OAIGenerateAccessTokenResponse::is_access_token_Valid() const{
    return m_access_token_isValid;
}

QString OAIGenerateAccessTokenResponse::getExpireTime() const {
    return m_expire_time;
}
void OAIGenerateAccessTokenResponse::setExpireTime(const QString &expire_time) {
    m_expire_time = expire_time;
    m_expire_time_isSet = true;
}

bool OAIGenerateAccessTokenResponse::is_expire_time_Set() const{
    return m_expire_time_isSet;
}

bool OAIGenerateAccessTokenResponse::is_expire_time_Valid() const{
    return m_expire_time_isValid;
}

bool OAIGenerateAccessTokenResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expire_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGenerateAccessTokenResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
