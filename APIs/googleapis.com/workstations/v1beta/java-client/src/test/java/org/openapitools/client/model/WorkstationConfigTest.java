/*
 * Cloud Workstations API
 * Allows administrators to create managed developer environments in the cloud. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.Container;
import org.openapitools.client.model.CustomerEncryptionKey;
import org.openapitools.client.model.EphemeralDirectory;
import org.openapitools.client.model.Host;
import org.openapitools.client.model.PersistentDirectory;
import org.openapitools.client.model.ReadinessCheck;
import org.openapitools.client.model.Status;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WorkstationConfig
 */
public class WorkstationConfigTest {
    private final WorkstationConfig model = new WorkstationConfig();

    /**
     * Model tests for WorkstationConfig
     */
    @Test
    public void testWorkstationConfig() {
        // TODO: test WorkstationConfig
    }

    /**
     * Test the property 'annotations'
     */
    @Test
    public void annotationsTest() {
        // TODO: test annotations
    }

    /**
     * Test the property 'conditions'
     */
    @Test
    public void conditionsTest() {
        // TODO: test conditions
    }

    /**
     * Test the property 'container'
     */
    @Test
    public void containerTest() {
        // TODO: test container
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'degraded'
     */
    @Test
    public void degradedTest() {
        // TODO: test degraded
    }

    /**
     * Test the property 'deleteTime'
     */
    @Test
    public void deleteTimeTest() {
        // TODO: test deleteTime
    }

    /**
     * Test the property 'disableTcpConnections'
     */
    @Test
    public void disableTcpConnectionsTest() {
        // TODO: test disableTcpConnections
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'enableAuditAgent'
     */
    @Test
    public void enableAuditAgentTest() {
        // TODO: test enableAuditAgent
    }

    /**
     * Test the property 'encryptionKey'
     */
    @Test
    public void encryptionKeyTest() {
        // TODO: test encryptionKey
    }

    /**
     * Test the property 'ephemeralDirectories'
     */
    @Test
    public void ephemeralDirectoriesTest() {
        // TODO: test ephemeralDirectories
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'host'
     */
    @Test
    public void hostTest() {
        // TODO: test host
    }

    /**
     * Test the property 'idleTimeout'
     */
    @Test
    public void idleTimeoutTest() {
        // TODO: test idleTimeout
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'persistentDirectories'
     */
    @Test
    public void persistentDirectoriesTest() {
        // TODO: test persistentDirectories
    }

    /**
     * Test the property 'readinessChecks'
     */
    @Test
    public void readinessChecksTest() {
        // TODO: test readinessChecks
    }

    /**
     * Test the property 'reconciling'
     */
    @Test
    public void reconcilingTest() {
        // TODO: test reconciling
    }

    /**
     * Test the property 'replicaZones'
     */
    @Test
    public void replicaZonesTest() {
        // TODO: test replicaZones
    }

    /**
     * Test the property 'runningTimeout'
     */
    @Test
    public void runningTimeoutTest() {
        // TODO: test runningTimeout
    }

    /**
     * Test the property 'uid'
     */
    @Test
    public void uidTest() {
        // TODO: test uid
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

}
