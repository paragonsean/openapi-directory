/**
 * Cloud Workstations API
 * Allows administrators to create managed developer environments in the cloud. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkstationCluster.h
 *
 * A workstation cluster resource in the Cloud Workstations API. Defines a group of workstations in a particular region and the VPC network they&#39;re attached to.
 */

#ifndef OAIWorkstationCluster_H
#define OAIWorkstationCluster_H

#include <QJsonObject>

#include "OAIDomainConfig.h"
#include "OAIPrivateClusterConfig.h"
#include "OAIStatus.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus;
class OAIDomainConfig;
class OAIPrivateClusterConfig;

class OAIWorkstationCluster : public OAIObject {
public:
    OAIWorkstationCluster();
    OAIWorkstationCluster(QString json);
    ~OAIWorkstationCluster() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAnnotations() const;
    void setAnnotations(const QMap<QString, QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    QList<OAIStatus> getConditions() const;
    void setConditions(const QList<OAIStatus> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    QString getControlPlaneIp() const;
    void setControlPlaneIp(const QString &control_plane_ip);
    bool is_control_plane_ip_Set() const;
    bool is_control_plane_ip_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    bool isDegraded() const;
    void setDegraded(const bool &degraded);
    bool is_degraded_Set() const;
    bool is_degraded_Valid() const;

    QString getDeleteTime() const;
    void setDeleteTime(const QString &delete_time);
    bool is_delete_time_Set() const;
    bool is_delete_time_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIDomainConfig getDomainConfig() const;
    void setDomainConfig(const OAIDomainConfig &domain_config);
    bool is_domain_config_Set() const;
    bool is_domain_config_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    OAIPrivateClusterConfig getPrivateClusterConfig() const;
    void setPrivateClusterConfig(const OAIPrivateClusterConfig &private_cluster_config);
    bool is_private_cluster_config_Set() const;
    bool is_private_cluster_config_Valid() const;

    bool isReconciling() const;
    void setReconciling(const bool &reconciling);
    bool is_reconciling_Set() const;
    bool is_reconciling_Valid() const;

    QString getSubnetwork() const;
    void setSubnetwork(const QString &subnetwork);
    bool is_subnetwork_Set() const;
    bool is_subnetwork_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    QList<OAIStatus> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    QString m_control_plane_ip;
    bool m_control_plane_ip_isSet;
    bool m_control_plane_ip_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    bool m_degraded;
    bool m_degraded_isSet;
    bool m_degraded_isValid;

    QString m_delete_time;
    bool m_delete_time_isSet;
    bool m_delete_time_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIDomainConfig m_domain_config;
    bool m_domain_config_isSet;
    bool m_domain_config_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    OAIPrivateClusterConfig m_private_cluster_config;
    bool m_private_cluster_config_isSet;
    bool m_private_cluster_config_isValid;

    bool m_reconciling;
    bool m_reconciling_isSet;
    bool m_reconciling_isValid;

    QString m_subnetwork;
    bool m_subnetwork_isSet;
    bool m_subnetwork_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkstationCluster)

#endif // OAIWorkstationCluster_H
