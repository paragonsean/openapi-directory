# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gce_instance import GceInstance
from openapi_server import util


class Host(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gce_instance: GceInstance=None):
        """Host - a model defined in OpenAPI

        :param gce_instance: The gce_instance of this Host.
        """
        self.openapi_types = {
            'gce_instance': GceInstance
        }

        self.attribute_map = {
            'gce_instance': 'gceInstance'
        }

        self._gce_instance = gce_instance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Host':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Host of this Host.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gce_instance(self):
        """Gets the gce_instance of this Host.


        :return: The gce_instance of this Host.
        :rtype: GceInstance
        """
        return self._gce_instance

    @gce_instance.setter
    def gce_instance(self, gce_instance):
        """Sets the gce_instance of this Host.


        :param gce_instance: The gce_instance of this Host.
        :type gce_instance: GceInstance
        """

        self._gce_instance = gce_instance
