/**
 * Custom Search API
 * Searches over a website or collection of websites
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearch.h
 *
 * Response to a custom search request.
 */

#ifndef OAISearch_H
#define OAISearch_H

#include <QJsonObject>

#include "OAIPromotion.h"
#include "OAIResult.h"
#include "OAISearch_queries.h"
#include "OAISearch_searchInformation.h"
#include "OAISearch_spelling.h"
#include "OAISearch_url.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResult;
class OAIPromotion;
class OAISearch_queries;
class OAISearch_searchInformation;
class OAISearch_spelling;
class OAISearch_url;

class OAISearch : public OAIObject {
public:
    OAISearch();
    OAISearch(QString json);
    ~OAISearch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getContext() const;
    void setContext(const QMap<QString, QJsonValue> &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    QList<OAIResult> getItems() const;
    void setItems(const QList<OAIResult> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QList<OAIPromotion> getPromotions() const;
    void setPromotions(const QList<OAIPromotion> &promotions);
    bool is_promotions_Set() const;
    bool is_promotions_Valid() const;

    OAISearch_queries getQueries() const;
    void setQueries(const OAISearch_queries &queries);
    bool is_queries_Set() const;
    bool is_queries_Valid() const;

    OAISearch_searchInformation getSearchInformation() const;
    void setSearchInformation(const OAISearch_searchInformation &search_information);
    bool is_search_information_Set() const;
    bool is_search_information_Valid() const;

    OAISearch_spelling getSpelling() const;
    void setSpelling(const OAISearch_spelling &spelling);
    bool is_spelling_Set() const;
    bool is_spelling_Valid() const;

    OAISearch_url getUrl() const;
    void setUrl(const OAISearch_url &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    QList<OAIResult> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QList<OAIPromotion> m_promotions;
    bool m_promotions_isSet;
    bool m_promotions_isValid;

    OAISearch_queries m_queries;
    bool m_queries_isSet;
    bool m_queries_isValid;

    OAISearch_searchInformation m_search_information;
    bool m_search_information_isSet;
    bool m_search_information_isValid;

    OAISearch_spelling m_spelling;
    bool m_spelling_isSet;
    bool m_spelling_isValid;

    OAISearch_url m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearch)

#endif // OAISearch_H
