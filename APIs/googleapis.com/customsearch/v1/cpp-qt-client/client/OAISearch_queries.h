/**
 * Custom Search API
 * Searches over a website or collection of websites
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearch_queries.h
 *
 * Query metadata for the previous, current, and next pages of results.
 */

#ifndef OAISearch_queries_H
#define OAISearch_queries_H

#include <QJsonObject>

#include "OAISearch_queries_nextPage_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISearch_queries_nextPage_inner;

class OAISearch_queries : public OAIObject {
public:
    OAISearch_queries();
    OAISearch_queries(QString json);
    ~OAISearch_queries() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISearch_queries_nextPage_inner> getNextPage() const;
    void setNextPage(const QList<OAISearch_queries_nextPage_inner> &next_page);
    bool is_next_page_Set() const;
    bool is_next_page_Valid() const;

    QList<OAISearch_queries_nextPage_inner> getPreviousPage() const;
    void setPreviousPage(const QList<OAISearch_queries_nextPage_inner> &previous_page);
    bool is_previous_page_Set() const;
    bool is_previous_page_Valid() const;

    QList<OAISearch_queries_nextPage_inner> getRequest() const;
    void setRequest(const QList<OAISearch_queries_nextPage_inner> &request);
    bool is_request_Set() const;
    bool is_request_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISearch_queries_nextPage_inner> m_next_page;
    bool m_next_page_isSet;
    bool m_next_page_isValid;

    QList<OAISearch_queries_nextPage_inner> m_previous_page;
    bool m_previous_page_isSet;
    bool m_previous_page_isValid;

    QList<OAISearch_queries_nextPage_inner> m_request;
    bool m_request_isSet;
    bool m_request_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearch_queries)

#endif // OAISearch_queries_H
