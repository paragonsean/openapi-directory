# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResultImage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, byte_size: int=None, context_link: str=None, height: int=None, thumbnail_height: int=None, thumbnail_link: str=None, thumbnail_width: int=None, width: int=None):
        """ResultImage - a model defined in OpenAPI

        :param byte_size: The byte_size of this ResultImage.
        :param context_link: The context_link of this ResultImage.
        :param height: The height of this ResultImage.
        :param thumbnail_height: The thumbnail_height of this ResultImage.
        :param thumbnail_link: The thumbnail_link of this ResultImage.
        :param thumbnail_width: The thumbnail_width of this ResultImage.
        :param width: The width of this ResultImage.
        """
        self.openapi_types = {
            'byte_size': int,
            'context_link': str,
            'height': int,
            'thumbnail_height': int,
            'thumbnail_link': str,
            'thumbnail_width': int,
            'width': int
        }

        self.attribute_map = {
            'byte_size': 'byteSize',
            'context_link': 'contextLink',
            'height': 'height',
            'thumbnail_height': 'thumbnailHeight',
            'thumbnail_link': 'thumbnailLink',
            'thumbnail_width': 'thumbnailWidth',
            'width': 'width'
        }

        self._byte_size = byte_size
        self._context_link = context_link
        self._height = height
        self._thumbnail_height = thumbnail_height
        self._thumbnail_link = thumbnail_link
        self._thumbnail_width = thumbnail_width
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResultImage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Result_image of this ResultImage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def byte_size(self):
        """Gets the byte_size of this ResultImage.

        The size of the image, in bytes.

        :return: The byte_size of this ResultImage.
        :rtype: int
        """
        return self._byte_size

    @byte_size.setter
    def byte_size(self, byte_size):
        """Sets the byte_size of this ResultImage.

        The size of the image, in bytes.

        :param byte_size: The byte_size of this ResultImage.
        :type byte_size: int
        """

        self._byte_size = byte_size

    @property
    def context_link(self):
        """Gets the context_link of this ResultImage.

        A URL pointing to the webpage hosting the image.

        :return: The context_link of this ResultImage.
        :rtype: str
        """
        return self._context_link

    @context_link.setter
    def context_link(self, context_link):
        """Sets the context_link of this ResultImage.

        A URL pointing to the webpage hosting the image.

        :param context_link: The context_link of this ResultImage.
        :type context_link: str
        """

        self._context_link = context_link

    @property
    def height(self):
        """Gets the height of this ResultImage.

        The height of the image, in pixels.

        :return: The height of this ResultImage.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this ResultImage.

        The height of the image, in pixels.

        :param height: The height of this ResultImage.
        :type height: int
        """

        self._height = height

    @property
    def thumbnail_height(self):
        """Gets the thumbnail_height of this ResultImage.

        The height of the thumbnail image, in pixels.

        :return: The thumbnail_height of this ResultImage.
        :rtype: int
        """
        return self._thumbnail_height

    @thumbnail_height.setter
    def thumbnail_height(self, thumbnail_height):
        """Sets the thumbnail_height of this ResultImage.

        The height of the thumbnail image, in pixels.

        :param thumbnail_height: The thumbnail_height of this ResultImage.
        :type thumbnail_height: int
        """

        self._thumbnail_height = thumbnail_height

    @property
    def thumbnail_link(self):
        """Gets the thumbnail_link of this ResultImage.

        A URL to the thumbnail image.

        :return: The thumbnail_link of this ResultImage.
        :rtype: str
        """
        return self._thumbnail_link

    @thumbnail_link.setter
    def thumbnail_link(self, thumbnail_link):
        """Sets the thumbnail_link of this ResultImage.

        A URL to the thumbnail image.

        :param thumbnail_link: The thumbnail_link of this ResultImage.
        :type thumbnail_link: str
        """

        self._thumbnail_link = thumbnail_link

    @property
    def thumbnail_width(self):
        """Gets the thumbnail_width of this ResultImage.

        The width of the thumbnail image, in pixels.

        :return: The thumbnail_width of this ResultImage.
        :rtype: int
        """
        return self._thumbnail_width

    @thumbnail_width.setter
    def thumbnail_width(self, thumbnail_width):
        """Sets the thumbnail_width of this ResultImage.

        The width of the thumbnail image, in pixels.

        :param thumbnail_width: The thumbnail_width of this ResultImage.
        :type thumbnail_width: int
        """

        self._thumbnail_width = thumbnail_width

    @property
    def width(self):
        """Gets the width of this ResultImage.

        The width of the image, in pixels.

        :return: The width of this ResultImage.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this ResultImage.

        The width of the image, in pixels.

        :param width: The width of this ResultImage.
        :type width: int
        """

        self._width = width
