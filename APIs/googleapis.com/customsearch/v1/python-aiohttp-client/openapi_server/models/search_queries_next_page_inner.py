# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchQueriesNextPageInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, cr: str=None, cx: str=None, date_restrict: str=None, disable_cn_tw_translation: str=None, exact_terms: str=None, exclude_terms: str=None, file_type: str=None, filter: str=None, gl: str=None, google_host: str=None, high_range: str=None, hl: str=None, hq: str=None, img_color_type: str=None, img_dominant_color: str=None, img_size: str=None, img_type: str=None, input_encoding: str=None, language: str=None, link_site: str=None, low_range: str=None, or_terms: str=None, output_encoding: str=None, related_site: str=None, rights: str=None, safe: str=None, search_terms: str=None, search_type: str=None, site_search: str=None, site_search_filter: str=None, sort: str=None, start_index: int=None, start_page: int=None, title: str=None, total_results: str=None):
        """SearchQueriesNextPageInner - a model defined in OpenAPI

        :param count: The count of this SearchQueriesNextPageInner.
        :param cr: The cr of this SearchQueriesNextPageInner.
        :param cx: The cx of this SearchQueriesNextPageInner.
        :param date_restrict: The date_restrict of this SearchQueriesNextPageInner.
        :param disable_cn_tw_translation: The disable_cn_tw_translation of this SearchQueriesNextPageInner.
        :param exact_terms: The exact_terms of this SearchQueriesNextPageInner.
        :param exclude_terms: The exclude_terms of this SearchQueriesNextPageInner.
        :param file_type: The file_type of this SearchQueriesNextPageInner.
        :param filter: The filter of this SearchQueriesNextPageInner.
        :param gl: The gl of this SearchQueriesNextPageInner.
        :param google_host: The google_host of this SearchQueriesNextPageInner.
        :param high_range: The high_range of this SearchQueriesNextPageInner.
        :param hl: The hl of this SearchQueriesNextPageInner.
        :param hq: The hq of this SearchQueriesNextPageInner.
        :param img_color_type: The img_color_type of this SearchQueriesNextPageInner.
        :param img_dominant_color: The img_dominant_color of this SearchQueriesNextPageInner.
        :param img_size: The img_size of this SearchQueriesNextPageInner.
        :param img_type: The img_type of this SearchQueriesNextPageInner.
        :param input_encoding: The input_encoding of this SearchQueriesNextPageInner.
        :param language: The language of this SearchQueriesNextPageInner.
        :param link_site: The link_site of this SearchQueriesNextPageInner.
        :param low_range: The low_range of this SearchQueriesNextPageInner.
        :param or_terms: The or_terms of this SearchQueriesNextPageInner.
        :param output_encoding: The output_encoding of this SearchQueriesNextPageInner.
        :param related_site: The related_site of this SearchQueriesNextPageInner.
        :param rights: The rights of this SearchQueriesNextPageInner.
        :param safe: The safe of this SearchQueriesNextPageInner.
        :param search_terms: The search_terms of this SearchQueriesNextPageInner.
        :param search_type: The search_type of this SearchQueriesNextPageInner.
        :param site_search: The site_search of this SearchQueriesNextPageInner.
        :param site_search_filter: The site_search_filter of this SearchQueriesNextPageInner.
        :param sort: The sort of this SearchQueriesNextPageInner.
        :param start_index: The start_index of this SearchQueriesNextPageInner.
        :param start_page: The start_page of this SearchQueriesNextPageInner.
        :param title: The title of this SearchQueriesNextPageInner.
        :param total_results: The total_results of this SearchQueriesNextPageInner.
        """
        self.openapi_types = {
            'count': int,
            'cr': str,
            'cx': str,
            'date_restrict': str,
            'disable_cn_tw_translation': str,
            'exact_terms': str,
            'exclude_terms': str,
            'file_type': str,
            'filter': str,
            'gl': str,
            'google_host': str,
            'high_range': str,
            'hl': str,
            'hq': str,
            'img_color_type': str,
            'img_dominant_color': str,
            'img_size': str,
            'img_type': str,
            'input_encoding': str,
            'language': str,
            'link_site': str,
            'low_range': str,
            'or_terms': str,
            'output_encoding': str,
            'related_site': str,
            'rights': str,
            'safe': str,
            'search_terms': str,
            'search_type': str,
            'site_search': str,
            'site_search_filter': str,
            'sort': str,
            'start_index': int,
            'start_page': int,
            'title': str,
            'total_results': str
        }

        self.attribute_map = {
            'count': 'count',
            'cr': 'cr',
            'cx': 'cx',
            'date_restrict': 'dateRestrict',
            'disable_cn_tw_translation': 'disableCnTwTranslation',
            'exact_terms': 'exactTerms',
            'exclude_terms': 'excludeTerms',
            'file_type': 'fileType',
            'filter': 'filter',
            'gl': 'gl',
            'google_host': 'googleHost',
            'high_range': 'highRange',
            'hl': 'hl',
            'hq': 'hq',
            'img_color_type': 'imgColorType',
            'img_dominant_color': 'imgDominantColor',
            'img_size': 'imgSize',
            'img_type': 'imgType',
            'input_encoding': 'inputEncoding',
            'language': 'language',
            'link_site': 'linkSite',
            'low_range': 'lowRange',
            'or_terms': 'orTerms',
            'output_encoding': 'outputEncoding',
            'related_site': 'relatedSite',
            'rights': 'rights',
            'safe': 'safe',
            'search_terms': 'searchTerms',
            'search_type': 'searchType',
            'site_search': 'siteSearch',
            'site_search_filter': 'siteSearchFilter',
            'sort': 'sort',
            'start_index': 'startIndex',
            'start_page': 'startPage',
            'title': 'title',
            'total_results': 'totalResults'
        }

        self._count = count
        self._cr = cr
        self._cx = cx
        self._date_restrict = date_restrict
        self._disable_cn_tw_translation = disable_cn_tw_translation
        self._exact_terms = exact_terms
        self._exclude_terms = exclude_terms
        self._file_type = file_type
        self._filter = filter
        self._gl = gl
        self._google_host = google_host
        self._high_range = high_range
        self._hl = hl
        self._hq = hq
        self._img_color_type = img_color_type
        self._img_dominant_color = img_dominant_color
        self._img_size = img_size
        self._img_type = img_type
        self._input_encoding = input_encoding
        self._language = language
        self._link_site = link_site
        self._low_range = low_range
        self._or_terms = or_terms
        self._output_encoding = output_encoding
        self._related_site = related_site
        self._rights = rights
        self._safe = safe
        self._search_terms = search_terms
        self._search_type = search_type
        self._site_search = site_search
        self._site_search_filter = site_search_filter
        self._sort = sort
        self._start_index = start_index
        self._start_page = start_page
        self._title = title
        self._total_results = total_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchQueriesNextPageInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Search_queries_nextPage_inner of this SearchQueriesNextPageInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this SearchQueriesNextPageInner.

        Number of search results returned in this set.

        :return: The count of this SearchQueriesNextPageInner.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this SearchQueriesNextPageInner.

        Number of search results returned in this set.

        :param count: The count of this SearchQueriesNextPageInner.
        :type count: int
        """

        self._count = count

    @property
    def cr(self):
        """Gets the cr of this SearchQueriesNextPageInner.

        Restricts search results to documents originating in a particular country. You may use [Boolean operators](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) in the `cr` parameter's value. Google WebSearch determines the country of a document by analyzing the following: * The top-level domain (TLD) of the document's URL. * The geographic location of the web server's IP address. See [Country (cr) Parameter Values](https://developers.google.com/custom-search/docs/json_api_reference#countryCollections) for a list of valid values for this parameter.

        :return: The cr of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._cr

    @cr.setter
    def cr(self, cr):
        """Sets the cr of this SearchQueriesNextPageInner.

        Restricts search results to documents originating in a particular country. You may use [Boolean operators](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) in the `cr` parameter's value. Google WebSearch determines the country of a document by analyzing the following: * The top-level domain (TLD) of the document's URL. * The geographic location of the web server's IP address. See [Country (cr) Parameter Values](https://developers.google.com/custom-search/docs/json_api_reference#countryCollections) for a list of valid values for this parameter.

        :param cr: The cr of this SearchQueriesNextPageInner.
        :type cr: str
        """

        self._cr = cr

    @property
    def cx(self):
        """Gets the cx of this SearchQueriesNextPageInner.

        The identifier of an engine created using the Programmable Search Engine [Control Panel](https://programmablesearchengine.google.com/). This is a custom property not defined in the OpenSearch spec. This parameter is **required**.

        :return: The cx of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._cx

    @cx.setter
    def cx(self, cx):
        """Sets the cx of this SearchQueriesNextPageInner.

        The identifier of an engine created using the Programmable Search Engine [Control Panel](https://programmablesearchengine.google.com/). This is a custom property not defined in the OpenSearch spec. This parameter is **required**.

        :param cx: The cx of this SearchQueriesNextPageInner.
        :type cx: str
        """

        self._cx = cx

    @property
    def date_restrict(self):
        """Gets the date_restrict of this SearchQueriesNextPageInner.

        Restricts results to URLs based on date. Supported values include: * `d[number]`: requests results from the specified number of past days. * `w[number]`: requests results from the specified number of past weeks. * `m[number]`: requests results from the specified number of past months. * `y[number]`: requests results from the specified number of past years.

        :return: The date_restrict of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._date_restrict

    @date_restrict.setter
    def date_restrict(self, date_restrict):
        """Sets the date_restrict of this SearchQueriesNextPageInner.

        Restricts results to URLs based on date. Supported values include: * `d[number]`: requests results from the specified number of past days. * `w[number]`: requests results from the specified number of past weeks. * `m[number]`: requests results from the specified number of past months. * `y[number]`: requests results from the specified number of past years.

        :param date_restrict: The date_restrict of this SearchQueriesNextPageInner.
        :type date_restrict: str
        """

        self._date_restrict = date_restrict

    @property
    def disable_cn_tw_translation(self):
        """Gets the disable_cn_tw_translation of this SearchQueriesNextPageInner.

        Enables or disables the [Simplified and Traditional Chinese Search](https://developers.google.com/custom-search/docs/json_api_reference#chineseSearch) feature. Supported values are: * `0`: enabled (default) * `1`: disabled

        :return: The disable_cn_tw_translation of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._disable_cn_tw_translation

    @disable_cn_tw_translation.setter
    def disable_cn_tw_translation(self, disable_cn_tw_translation):
        """Sets the disable_cn_tw_translation of this SearchQueriesNextPageInner.

        Enables or disables the [Simplified and Traditional Chinese Search](https://developers.google.com/custom-search/docs/json_api_reference#chineseSearch) feature. Supported values are: * `0`: enabled (default) * `1`: disabled

        :param disable_cn_tw_translation: The disable_cn_tw_translation of this SearchQueriesNextPageInner.
        :type disable_cn_tw_translation: str
        """

        self._disable_cn_tw_translation = disable_cn_tw_translation

    @property
    def exact_terms(self):
        """Gets the exact_terms of this SearchQueriesNextPageInner.

        Identifies a phrase that all documents in the search results must contain.

        :return: The exact_terms of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._exact_terms

    @exact_terms.setter
    def exact_terms(self, exact_terms):
        """Sets the exact_terms of this SearchQueriesNextPageInner.

        Identifies a phrase that all documents in the search results must contain.

        :param exact_terms: The exact_terms of this SearchQueriesNextPageInner.
        :type exact_terms: str
        """

        self._exact_terms = exact_terms

    @property
    def exclude_terms(self):
        """Gets the exclude_terms of this SearchQueriesNextPageInner.

        Identifies a word or phrase that should not appear in any documents in the search results.

        :return: The exclude_terms of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._exclude_terms

    @exclude_terms.setter
    def exclude_terms(self, exclude_terms):
        """Sets the exclude_terms of this SearchQueriesNextPageInner.

        Identifies a word or phrase that should not appear in any documents in the search results.

        :param exclude_terms: The exclude_terms of this SearchQueriesNextPageInner.
        :type exclude_terms: str
        """

        self._exclude_terms = exclude_terms

    @property
    def file_type(self):
        """Gets the file_type of this SearchQueriesNextPageInner.

        Restricts results to files of a specified extension. Filetypes supported by Google include: * Adobe Portable Document Format (`pdf`) * Adobe PostScript (`ps`) * Lotus 1-2-3 (`wk1`, `wk2`, `wk3`, `wk4`, `wk5`, `wki`, `wks`, `wku`) * Lotus WordPro (`lwp`) * Macwrite (`mw`) * Microsoft Excel (`xls`) * Microsoft PowerPoint (`ppt`) * Microsoft Word (`doc`) * Microsoft Works (`wks`, `wps`, `wdb`) * Microsoft Write (`wri`) * Rich Text Format (`rtf`) * Shockwave Flash (`swf`) * Text (`ans`, `txt`). Additional filetypes may be added in the future. An up-to-date list can always be found in Google's [file type FAQ](https://support.google.com/webmasters/answer/35287).

        :return: The file_type of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._file_type

    @file_type.setter
    def file_type(self, file_type):
        """Sets the file_type of this SearchQueriesNextPageInner.

        Restricts results to files of a specified extension. Filetypes supported by Google include: * Adobe Portable Document Format (`pdf`) * Adobe PostScript (`ps`) * Lotus 1-2-3 (`wk1`, `wk2`, `wk3`, `wk4`, `wk5`, `wki`, `wks`, `wku`) * Lotus WordPro (`lwp`) * Macwrite (`mw`) * Microsoft Excel (`xls`) * Microsoft PowerPoint (`ppt`) * Microsoft Word (`doc`) * Microsoft Works (`wks`, `wps`, `wdb`) * Microsoft Write (`wri`) * Rich Text Format (`rtf`) * Shockwave Flash (`swf`) * Text (`ans`, `txt`). Additional filetypes may be added in the future. An up-to-date list can always be found in Google's [file type FAQ](https://support.google.com/webmasters/answer/35287).

        :param file_type: The file_type of this SearchQueriesNextPageInner.
        :type file_type: str
        """

        self._file_type = file_type

    @property
    def filter(self):
        """Gets the filter of this SearchQueriesNextPageInner.

        Activates or deactivates the automatic filtering of Google search results. See [Automatic Filtering](https://developers.google.com/custom-search/docs/json_api_reference#automaticFiltering) for more information about Google's search results filters. Valid values for this parameter are: * `0`: Disabled * `1`: Enabled (default) **Note**: By default, Google applies filtering to all search results to improve the quality of those results.

        :return: The filter of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this SearchQueriesNextPageInner.

        Activates or deactivates the automatic filtering of Google search results. See [Automatic Filtering](https://developers.google.com/custom-search/docs/json_api_reference#automaticFiltering) for more information about Google's search results filters. Valid values for this parameter are: * `0`: Disabled * `1`: Enabled (default) **Note**: By default, Google applies filtering to all search results to improve the quality of those results.

        :param filter: The filter of this SearchQueriesNextPageInner.
        :type filter: str
        """

        self._filter = filter

    @property
    def gl(self):
        """Gets the gl of this SearchQueriesNextPageInner.

        Boosts search results whose country of origin matches the parameter value. See [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) for a list of valid values. Specifying a `gl` parameter value in WebSearch requests should improve the relevance of results. This is particularly true for international customers and, even more specifically, for customers in English-speaking countries other than the United States.

        :return: The gl of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._gl

    @gl.setter
    def gl(self, gl):
        """Sets the gl of this SearchQueriesNextPageInner.

        Boosts search results whose country of origin matches the parameter value. See [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) for a list of valid values. Specifying a `gl` parameter value in WebSearch requests should improve the relevance of results. This is particularly true for international customers and, even more specifically, for customers in English-speaking countries other than the United States.

        :param gl: The gl of this SearchQueriesNextPageInner.
        :type gl: str
        """

        self._gl = gl

    @property
    def google_host(self):
        """Gets the google_host of this SearchQueriesNextPageInner.

        Specifies the Google domain (for example, google.com, google.de, or google.fr) to which the search should be limited.

        :return: The google_host of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._google_host

    @google_host.setter
    def google_host(self, google_host):
        """Sets the google_host of this SearchQueriesNextPageInner.

        Specifies the Google domain (for example, google.com, google.de, or google.fr) to which the search should be limited.

        :param google_host: The google_host of this SearchQueriesNextPageInner.
        :type google_host: str
        """

        self._google_host = google_host

    @property
    def high_range(self):
        """Gets the high_range of this SearchQueriesNextPageInner.

        Specifies the ending value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.

        :return: The high_range of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._high_range

    @high_range.setter
    def high_range(self, high_range):
        """Sets the high_range of this SearchQueriesNextPageInner.

        Specifies the ending value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.

        :param high_range: The high_range of this SearchQueriesNextPageInner.
        :type high_range: str
        """

        self._high_range = high_range

    @property
    def hl(self):
        """Gets the hl of this SearchQueriesNextPageInner.

        Specifies the interface language (host language) of your user interface. Explicitly setting this parameter improves the performance and the quality of your search results. See the [Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#wsInterfaceLanguages) section of [Internationalizing Queries and Results Presentation](https://developers.google.com/custom-search/docs/json_api_reference#wsInternationalizing) for more information, and [Supported Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#interfaceLanguages) for a list of supported languages.

        :return: The hl of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._hl

    @hl.setter
    def hl(self, hl):
        """Sets the hl of this SearchQueriesNextPageInner.

        Specifies the interface language (host language) of your user interface. Explicitly setting this parameter improves the performance and the quality of your search results. See the [Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#wsInterfaceLanguages) section of [Internationalizing Queries and Results Presentation](https://developers.google.com/custom-search/docs/json_api_reference#wsInternationalizing) for more information, and [Supported Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#interfaceLanguages) for a list of supported languages.

        :param hl: The hl of this SearchQueriesNextPageInner.
        :type hl: str
        """

        self._hl = hl

    @property
    def hq(self):
        """Gets the hq of this SearchQueriesNextPageInner.

        Appends the specified query terms to the query, as if they were combined with a logical `AND` operator.

        :return: The hq of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._hq

    @hq.setter
    def hq(self, hq):
        """Sets the hq of this SearchQueriesNextPageInner.

        Appends the specified query terms to the query, as if they were combined with a logical `AND` operator.

        :param hq: The hq of this SearchQueriesNextPageInner.
        :type hq: str
        """

        self._hq = hq

    @property
    def img_color_type(self):
        """Gets the img_color_type of this SearchQueriesNextPageInner.

        Restricts results to images of a specified color type. Supported values are: * `mono` (black and white) * `gray` (grayscale) * `color` (color)

        :return: The img_color_type of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._img_color_type

    @img_color_type.setter
    def img_color_type(self, img_color_type):
        """Sets the img_color_type of this SearchQueriesNextPageInner.

        Restricts results to images of a specified color type. Supported values are: * `mono` (black and white) * `gray` (grayscale) * `color` (color)

        :param img_color_type: The img_color_type of this SearchQueriesNextPageInner.
        :type img_color_type: str
        """

        self._img_color_type = img_color_type

    @property
    def img_dominant_color(self):
        """Gets the img_dominant_color of this SearchQueriesNextPageInner.

        Restricts results to images with a specific dominant color. Supported values are: * `red` * `orange` * `yellow` * `green` * `teal` * `blue` * `purple` * `pink` * `white` * `gray` * `black` * `brown`

        :return: The img_dominant_color of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._img_dominant_color

    @img_dominant_color.setter
    def img_dominant_color(self, img_dominant_color):
        """Sets the img_dominant_color of this SearchQueriesNextPageInner.

        Restricts results to images with a specific dominant color. Supported values are: * `red` * `orange` * `yellow` * `green` * `teal` * `blue` * `purple` * `pink` * `white` * `gray` * `black` * `brown`

        :param img_dominant_color: The img_dominant_color of this SearchQueriesNextPageInner.
        :type img_dominant_color: str
        """

        self._img_dominant_color = img_dominant_color

    @property
    def img_size(self):
        """Gets the img_size of this SearchQueriesNextPageInner.

        Restricts results to images of a specified size. Supported values are: * `icon` (small) * `small | medium | large | xlarge` (medium) * `xxlarge` (large) * `huge` (extra-large)

        :return: The img_size of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._img_size

    @img_size.setter
    def img_size(self, img_size):
        """Sets the img_size of this SearchQueriesNextPageInner.

        Restricts results to images of a specified size. Supported values are: * `icon` (small) * `small | medium | large | xlarge` (medium) * `xxlarge` (large) * `huge` (extra-large)

        :param img_size: The img_size of this SearchQueriesNextPageInner.
        :type img_size: str
        """

        self._img_size = img_size

    @property
    def img_type(self):
        """Gets the img_type of this SearchQueriesNextPageInner.

        Restricts results to images of a specified type. Supported values are: * `clipart` (Clip art) * `face` (Face) * `lineart` (Line drawing) * `photo` (Photo) * `animated` (Animated) * `stock` (Stock)

        :return: The img_type of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._img_type

    @img_type.setter
    def img_type(self, img_type):
        """Sets the img_type of this SearchQueriesNextPageInner.

        Restricts results to images of a specified type. Supported values are: * `clipart` (Clip art) * `face` (Face) * `lineart` (Line drawing) * `photo` (Photo) * `animated` (Animated) * `stock` (Stock)

        :param img_type: The img_type of this SearchQueriesNextPageInner.
        :type img_type: str
        """

        self._img_type = img_type

    @property
    def input_encoding(self):
        """Gets the input_encoding of this SearchQueriesNextPageInner.

        The character encoding supported for search requests.

        :return: The input_encoding of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._input_encoding

    @input_encoding.setter
    def input_encoding(self, input_encoding):
        """Sets the input_encoding of this SearchQueriesNextPageInner.

        The character encoding supported for search requests.

        :param input_encoding: The input_encoding of this SearchQueriesNextPageInner.
        :type input_encoding: str
        """

        self._input_encoding = input_encoding

    @property
    def language(self):
        """Gets the language of this SearchQueriesNextPageInner.

        The language of the search results.

        :return: The language of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this SearchQueriesNextPageInner.

        The language of the search results.

        :param language: The language of this SearchQueriesNextPageInner.
        :type language: str
        """

        self._language = language

    @property
    def link_site(self):
        """Gets the link_site of this SearchQueriesNextPageInner.

        Specifies that all results should contain a link to a specific URL.

        :return: The link_site of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._link_site

    @link_site.setter
    def link_site(self, link_site):
        """Sets the link_site of this SearchQueriesNextPageInner.

        Specifies that all results should contain a link to a specific URL.

        :param link_site: The link_site of this SearchQueriesNextPageInner.
        :type link_site: str
        """

        self._link_site = link_site

    @property
    def low_range(self):
        """Gets the low_range of this SearchQueriesNextPageInner.

        Specifies the starting value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.

        :return: The low_range of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._low_range

    @low_range.setter
    def low_range(self, low_range):
        """Sets the low_range of this SearchQueriesNextPageInner.

        Specifies the starting value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.

        :param low_range: The low_range of this SearchQueriesNextPageInner.
        :type low_range: str
        """

        self._low_range = low_range

    @property
    def or_terms(self):
        """Gets the or_terms of this SearchQueriesNextPageInner.

        Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms. You can also use the [Boolean OR](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) query term for this type of query.

        :return: The or_terms of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._or_terms

    @or_terms.setter
    def or_terms(self, or_terms):
        """Sets the or_terms of this SearchQueriesNextPageInner.

        Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms. You can also use the [Boolean OR](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) query term for this type of query.

        :param or_terms: The or_terms of this SearchQueriesNextPageInner.
        :type or_terms: str
        """

        self._or_terms = or_terms

    @property
    def output_encoding(self):
        """Gets the output_encoding of this SearchQueriesNextPageInner.

        The character encoding supported for search results.

        :return: The output_encoding of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._output_encoding

    @output_encoding.setter
    def output_encoding(self, output_encoding):
        """Sets the output_encoding of this SearchQueriesNextPageInner.

        The character encoding supported for search results.

        :param output_encoding: The output_encoding of this SearchQueriesNextPageInner.
        :type output_encoding: str
        """

        self._output_encoding = output_encoding

    @property
    def related_site(self):
        """Gets the related_site of this SearchQueriesNextPageInner.

        Specifies that all search results should be pages that are related to the specified URL. The parameter value should be a URL.

        :return: The related_site of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._related_site

    @related_site.setter
    def related_site(self, related_site):
        """Sets the related_site of this SearchQueriesNextPageInner.

        Specifies that all search results should be pages that are related to the specified URL. The parameter value should be a URL.

        :param related_site: The related_site of this SearchQueriesNextPageInner.
        :type related_site: str
        """

        self._related_site = related_site

    @property
    def rights(self):
        """Gets the rights of this SearchQueriesNextPageInner.

        Filters based on licensing. Supported values include: * `cc_publicdomain` * `cc_attribute` * `cc_sharealike` * `cc_noncommercial` * `cc_nonderived`

        :return: The rights of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._rights

    @rights.setter
    def rights(self, rights):
        """Sets the rights of this SearchQueriesNextPageInner.

        Filters based on licensing. Supported values include: * `cc_publicdomain` * `cc_attribute` * `cc_sharealike` * `cc_noncommercial` * `cc_nonderived`

        :param rights: The rights of this SearchQueriesNextPageInner.
        :type rights: str
        """

        self._rights = rights

    @property
    def safe(self):
        """Gets the safe of this SearchQueriesNextPageInner.

        Specifies the [SafeSearch level](https://developers.google.com/custom-search/docs/json_api_reference#safeSearchLevels) used for filtering out adult results. This is a custom property not defined in the OpenSearch spec. Valid parameter values are: * `\"off\"`: Disable SafeSearch * `\"active\"`: Enable SafeSearch

        :return: The safe of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._safe

    @safe.setter
    def safe(self, safe):
        """Sets the safe of this SearchQueriesNextPageInner.

        Specifies the [SafeSearch level](https://developers.google.com/custom-search/docs/json_api_reference#safeSearchLevels) used for filtering out adult results. This is a custom property not defined in the OpenSearch spec. Valid parameter values are: * `\"off\"`: Disable SafeSearch * `\"active\"`: Enable SafeSearch

        :param safe: The safe of this SearchQueriesNextPageInner.
        :type safe: str
        """

        self._safe = safe

    @property
    def search_terms(self):
        """Gets the search_terms of this SearchQueriesNextPageInner.

        The search terms entered by the user.

        :return: The search_terms of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._search_terms

    @search_terms.setter
    def search_terms(self, search_terms):
        """Sets the search_terms of this SearchQueriesNextPageInner.

        The search terms entered by the user.

        :param search_terms: The search_terms of this SearchQueriesNextPageInner.
        :type search_terms: str
        """

        self._search_terms = search_terms

    @property
    def search_type(self):
        """Gets the search_type of this SearchQueriesNextPageInner.

        Allowed values are `web` or `image`. If unspecified, results are limited to webpages.

        :return: The search_type of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._search_type

    @search_type.setter
    def search_type(self, search_type):
        """Sets the search_type of this SearchQueriesNextPageInner.

        Allowed values are `web` or `image`. If unspecified, results are limited to webpages.

        :param search_type: The search_type of this SearchQueriesNextPageInner.
        :type search_type: str
        """

        self._search_type = search_type

    @property
    def site_search(self):
        """Gets the site_search of this SearchQueriesNextPageInner.

        Restricts results to URLs from a specified site.

        :return: The site_search of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._site_search

    @site_search.setter
    def site_search(self, site_search):
        """Sets the site_search of this SearchQueriesNextPageInner.

        Restricts results to URLs from a specified site.

        :param site_search: The site_search of this SearchQueriesNextPageInner.
        :type site_search: str
        """

        self._site_search = site_search

    @property
    def site_search_filter(self):
        """Gets the site_search_filter of this SearchQueriesNextPageInner.

        Specifies whether to include or exclude results from the site named in the `sitesearch` parameter. Supported values are: * `i`: include content from site * `e`: exclude content from site

        :return: The site_search_filter of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._site_search_filter

    @site_search_filter.setter
    def site_search_filter(self, site_search_filter):
        """Sets the site_search_filter of this SearchQueriesNextPageInner.

        Specifies whether to include or exclude results from the site named in the `sitesearch` parameter. Supported values are: * `i`: include content from site * `e`: exclude content from site

        :param site_search_filter: The site_search_filter of this SearchQueriesNextPageInner.
        :type site_search_filter: str
        """

        self._site_search_filter = site_search_filter

    @property
    def sort(self):
        """Gets the sort of this SearchQueriesNextPageInner.

        Specifies that results should be sorted according to the specified expression. For example, sort by date.

        :return: The sort of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._sort

    @sort.setter
    def sort(self, sort):
        """Sets the sort of this SearchQueriesNextPageInner.

        Specifies that results should be sorted according to the specified expression. For example, sort by date.

        :param sort: The sort of this SearchQueriesNextPageInner.
        :type sort: str
        """

        self._sort = sort

    @property
    def start_index(self):
        """Gets the start_index of this SearchQueriesNextPageInner.

        The index of the current set of search results into the total set of results, where the index of the first result is 1.

        :return: The start_index of this SearchQueriesNextPageInner.
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index):
        """Sets the start_index of this SearchQueriesNextPageInner.

        The index of the current set of search results into the total set of results, where the index of the first result is 1.

        :param start_index: The start_index of this SearchQueriesNextPageInner.
        :type start_index: int
        """

        self._start_index = start_index

    @property
    def start_page(self):
        """Gets the start_page of this SearchQueriesNextPageInner.

        The page number of this set of results, where the page length is set by the `count` property.

        :return: The start_page of this SearchQueriesNextPageInner.
        :rtype: int
        """
        return self._start_page

    @start_page.setter
    def start_page(self, start_page):
        """Sets the start_page of this SearchQueriesNextPageInner.

        The page number of this set of results, where the page length is set by the `count` property.

        :param start_page: The start_page of this SearchQueriesNextPageInner.
        :type start_page: int
        """

        self._start_page = start_page

    @property
    def title(self):
        """Gets the title of this SearchQueriesNextPageInner.

        A description of the query.

        :return: The title of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SearchQueriesNextPageInner.

        A description of the query.

        :param title: The title of this SearchQueriesNextPageInner.
        :type title: str
        """

        self._title = title

    @property
    def total_results(self):
        """Gets the total_results of this SearchQueriesNextPageInner.

        Estimated number of total search results. May not be accurate.

        :return: The total_results of this SearchQueriesNextPageInner.
        :rtype: str
        """
        return self._total_results

    @total_results.setter
    def total_results(self, total_results):
        """Sets the total_results of this SearchQueriesNextPageInner.

        Estimated number of total search results. May not be accurate.

        :param total_results: The total_results of this SearchQueriesNextPageInner.
        :type total_results: str
        """

        self._total_results = total_results
