# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PromotionBodyLinesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, html_title: str=None, link: str=None, title: str=None, url: str=None):
        """PromotionBodyLinesInner - a model defined in OpenAPI

        :param html_title: The html_title of this PromotionBodyLinesInner.
        :param link: The link of this PromotionBodyLinesInner.
        :param title: The title of this PromotionBodyLinesInner.
        :param url: The url of this PromotionBodyLinesInner.
        """
        self.openapi_types = {
            'html_title': str,
            'link': str,
            'title': str,
            'url': str
        }

        self.attribute_map = {
            'html_title': 'htmlTitle',
            'link': 'link',
            'title': 'title',
            'url': 'url'
        }

        self._html_title = html_title
        self._link = link
        self._title = title
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PromotionBodyLinesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Promotion_bodyLines_inner of this PromotionBodyLinesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def html_title(self):
        """Gets the html_title of this PromotionBodyLinesInner.

        The block object's text in HTML, if it has text.

        :return: The html_title of this PromotionBodyLinesInner.
        :rtype: str
        """
        return self._html_title

    @html_title.setter
    def html_title(self, html_title):
        """Sets the html_title of this PromotionBodyLinesInner.

        The block object's text in HTML, if it has text.

        :param html_title: The html_title of this PromotionBodyLinesInner.
        :type html_title: str
        """

        self._html_title = html_title

    @property
    def link(self):
        """Gets the link of this PromotionBodyLinesInner.

        The anchor text of the block object's link, if it has a link.

        :return: The link of this PromotionBodyLinesInner.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this PromotionBodyLinesInner.

        The anchor text of the block object's link, if it has a link.

        :param link: The link of this PromotionBodyLinesInner.
        :type link: str
        """

        self._link = link

    @property
    def title(self):
        """Gets the title of this PromotionBodyLinesInner.

        The block object's text, if it has text.

        :return: The title of this PromotionBodyLinesInner.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PromotionBodyLinesInner.

        The block object's text, if it has text.

        :param title: The title of this PromotionBodyLinesInner.
        :type title: str
        """

        self._title = title

    @property
    def url(self):
        """Gets the url of this PromotionBodyLinesInner.

        The URL of the block object's link, if it has one.

        :return: The url of this PromotionBodyLinesInner.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PromotionBodyLinesInner.

        The URL of the block object's link, if it has one.

        :param url: The url of this PromotionBodyLinesInner.
        :type url: str
        """

        self._url = url
