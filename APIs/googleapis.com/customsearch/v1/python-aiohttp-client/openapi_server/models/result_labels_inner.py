# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResultLabelsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, label_with_op: str=None, name: str=None):
        """ResultLabelsInner - a model defined in OpenAPI

        :param display_name: The display_name of this ResultLabelsInner.
        :param label_with_op: The label_with_op of this ResultLabelsInner.
        :param name: The name of this ResultLabelsInner.
        """
        self.openapi_types = {
            'display_name': str,
            'label_with_op': str,
            'name': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'label_with_op': 'label_with_op',
            'name': 'name'
        }

        self._display_name = display_name
        self._label_with_op = label_with_op
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResultLabelsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Result_labels_inner of this ResultLabelsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this ResultLabelsInner.

        The display name of a refinement label. This is the name you should display in your user interface.

        :return: The display_name of this ResultLabelsInner.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ResultLabelsInner.

        The display name of a refinement label. This is the name you should display in your user interface.

        :param display_name: The display_name of this ResultLabelsInner.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def label_with_op(self):
        """Gets the label_with_op of this ResultLabelsInner.

        Refinement label and the associated refinement operation.

        :return: The label_with_op of this ResultLabelsInner.
        :rtype: str
        """
        return self._label_with_op

    @label_with_op.setter
    def label_with_op(self, label_with_op):
        """Sets the label_with_op of this ResultLabelsInner.

        Refinement label and the associated refinement operation.

        :param label_with_op: The label_with_op of this ResultLabelsInner.
        :type label_with_op: str
        """

        self._label_with_op = label_with_op

    @property
    def name(self):
        """Gets the name of this ResultLabelsInner.

        The name of a refinement label, which you can use to refine searches. Don't display this in your user interface; instead, use displayName.

        :return: The name of this ResultLabelsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ResultLabelsInner.

        The name of a refinement label, which you can use to refine searches. Don't display this in your user interface; instead, use displayName.

        :param name: The name of this ResultLabelsInner.
        :type name: str
        """

        self._name = name
