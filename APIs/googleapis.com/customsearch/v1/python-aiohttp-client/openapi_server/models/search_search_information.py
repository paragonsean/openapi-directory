# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchSearchInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, formatted_search_time: str=None, formatted_total_results: str=None, search_time: float=None, total_results: str=None):
        """SearchSearchInformation - a model defined in OpenAPI

        :param formatted_search_time: The formatted_search_time of this SearchSearchInformation.
        :param formatted_total_results: The formatted_total_results of this SearchSearchInformation.
        :param search_time: The search_time of this SearchSearchInformation.
        :param total_results: The total_results of this SearchSearchInformation.
        """
        self.openapi_types = {
            'formatted_search_time': str,
            'formatted_total_results': str,
            'search_time': float,
            'total_results': str
        }

        self.attribute_map = {
            'formatted_search_time': 'formattedSearchTime',
            'formatted_total_results': 'formattedTotalResults',
            'search_time': 'searchTime',
            'total_results': 'totalResults'
        }

        self._formatted_search_time = formatted_search_time
        self._formatted_total_results = formatted_total_results
        self._search_time = search_time
        self._total_results = total_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchSearchInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Search_searchInformation of this SearchSearchInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def formatted_search_time(self):
        """Gets the formatted_search_time of this SearchSearchInformation.

        The time taken for the server to return search results, formatted according to locale style.

        :return: The formatted_search_time of this SearchSearchInformation.
        :rtype: str
        """
        return self._formatted_search_time

    @formatted_search_time.setter
    def formatted_search_time(self, formatted_search_time):
        """Sets the formatted_search_time of this SearchSearchInformation.

        The time taken for the server to return search results, formatted according to locale style.

        :param formatted_search_time: The formatted_search_time of this SearchSearchInformation.
        :type formatted_search_time: str
        """

        self._formatted_search_time = formatted_search_time

    @property
    def formatted_total_results(self):
        """Gets the formatted_total_results of this SearchSearchInformation.

        The total number of search results, formatted according to locale style.

        :return: The formatted_total_results of this SearchSearchInformation.
        :rtype: str
        """
        return self._formatted_total_results

    @formatted_total_results.setter
    def formatted_total_results(self, formatted_total_results):
        """Sets the formatted_total_results of this SearchSearchInformation.

        The total number of search results, formatted according to locale style.

        :param formatted_total_results: The formatted_total_results of this SearchSearchInformation.
        :type formatted_total_results: str
        """

        self._formatted_total_results = formatted_total_results

    @property
    def search_time(self):
        """Gets the search_time of this SearchSearchInformation.

        The time taken for the server to return search results.

        :return: The search_time of this SearchSearchInformation.
        :rtype: float
        """
        return self._search_time

    @search_time.setter
    def search_time(self, search_time):
        """Sets the search_time of this SearchSearchInformation.

        The time taken for the server to return search results.

        :param search_time: The search_time of this SearchSearchInformation.
        :type search_time: float
        """

        self._search_time = search_time

    @property
    def total_results(self):
        """Gets the total_results of this SearchSearchInformation.

        The total number of search results returned by the query.

        :return: The total_results of this SearchSearchInformation.
        :rtype: str
        """
        return self._total_results

    @total_results.setter
    def total_results(self, total_results):
        """Sets the total_results of this SearchSearchInformation.

        The total number of search results returned by the query.

        :param total_results: The total_results of this SearchSearchInformation.
        :type total_results: str
        """

        self._total_results = total_results
