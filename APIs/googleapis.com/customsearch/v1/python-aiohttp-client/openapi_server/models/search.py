# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.promotion import Promotion
from openapi_server.models.result import Result
from openapi_server.models.search_queries import SearchQueries
from openapi_server.models.search_search_information import SearchSearchInformation
from openapi_server.models.search_spelling import SearchSpelling
from openapi_server.models.search_url import SearchUrl
from openapi_server import util


class Search(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: Dict[str, object]=None, items: List[Result]=None, kind: str=None, promotions: List[Promotion]=None, queries: SearchQueries=None, search_information: SearchSearchInformation=None, spelling: SearchSpelling=None, url: SearchUrl=None):
        """Search - a model defined in OpenAPI

        :param context: The context of this Search.
        :param items: The items of this Search.
        :param kind: The kind of this Search.
        :param promotions: The promotions of this Search.
        :param queries: The queries of this Search.
        :param search_information: The search_information of this Search.
        :param spelling: The spelling of this Search.
        :param url: The url of this Search.
        """
        self.openapi_types = {
            'context': Dict[str, object],
            'items': List[Result],
            'kind': str,
            'promotions': List[Promotion],
            'queries': SearchQueries,
            'search_information': SearchSearchInformation,
            'spelling': SearchSpelling,
            'url': SearchUrl
        }

        self.attribute_map = {
            'context': 'context',
            'items': 'items',
            'kind': 'kind',
            'promotions': 'promotions',
            'queries': 'queries',
            'search_information': 'searchInformation',
            'spelling': 'spelling',
            'url': 'url'
        }

        self._context = context
        self._items = items
        self._kind = kind
        self._promotions = promotions
        self._queries = queries
        self._search_information = search_information
        self._spelling = spelling
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Search':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Search of this Search.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this Search.

        Metadata and refinements associated with the given search engine, including: * The name of the search engine that was used for the query. * A set of [facet objects](https://developers.google.com/custom-search/docs/refinements#create) (refinements) you can use for refining a search.

        :return: The context of this Search.
        :rtype: Dict[str, object]
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this Search.

        Metadata and refinements associated with the given search engine, including: * The name of the search engine that was used for the query. * A set of [facet objects](https://developers.google.com/custom-search/docs/refinements#create) (refinements) you can use for refining a search.

        :param context: The context of this Search.
        :type context: Dict[str, object]
        """

        self._context = context

    @property
    def items(self):
        """Gets the items of this Search.

        The current set of custom search results.

        :return: The items of this Search.
        :rtype: List[Result]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Search.

        The current set of custom search results.

        :param items: The items of this Search.
        :type items: List[Result]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this Search.

        Unique identifier for the type of current object. For this API, it is customsearch#search.

        :return: The kind of this Search.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Search.

        Unique identifier for the type of current object. For this API, it is customsearch#search.

        :param kind: The kind of this Search.
        :type kind: str
        """

        self._kind = kind

    @property
    def promotions(self):
        """Gets the promotions of this Search.

        The set of [promotions](https://developers.google.com/custom-search/docs/promotions). Present only if the custom search engine's configuration files define any promotions for the given query.

        :return: The promotions of this Search.
        :rtype: List[Promotion]
        """
        return self._promotions

    @promotions.setter
    def promotions(self, promotions):
        """Sets the promotions of this Search.

        The set of [promotions](https://developers.google.com/custom-search/docs/promotions). Present only if the custom search engine's configuration files define any promotions for the given query.

        :param promotions: The promotions of this Search.
        :type promotions: List[Promotion]
        """

        self._promotions = promotions

    @property
    def queries(self):
        """Gets the queries of this Search.


        :return: The queries of this Search.
        :rtype: SearchQueries
        """
        return self._queries

    @queries.setter
    def queries(self, queries):
        """Sets the queries of this Search.


        :param queries: The queries of this Search.
        :type queries: SearchQueries
        """

        self._queries = queries

    @property
    def search_information(self):
        """Gets the search_information of this Search.


        :return: The search_information of this Search.
        :rtype: SearchSearchInformation
        """
        return self._search_information

    @search_information.setter
    def search_information(self, search_information):
        """Sets the search_information of this Search.


        :param search_information: The search_information of this Search.
        :type search_information: SearchSearchInformation
        """

        self._search_information = search_information

    @property
    def spelling(self):
        """Gets the spelling of this Search.


        :return: The spelling of this Search.
        :rtype: SearchSpelling
        """
        return self._spelling

    @spelling.setter
    def spelling(self, spelling):
        """Sets the spelling of this Search.


        :param spelling: The spelling of this Search.
        :type spelling: SearchSpelling
        """

        self._spelling = spelling

    @property
    def url(self):
        """Gets the url of this Search.


        :return: The url of this Search.
        :rtype: SearchUrl
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Search.


        :param url: The url of this Search.
        :type url: SearchUrl
        """

        self._url = url
