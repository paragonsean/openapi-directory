# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.promotion_body_lines_inner import PromotionBodyLinesInner
from openapi_server.models.promotion_image import PromotionImage
from openapi_server import util


class Promotion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body_lines: List[PromotionBodyLinesInner]=None, display_link: str=None, html_title: str=None, image: PromotionImage=None, link: str=None, title: str=None):
        """Promotion - a model defined in OpenAPI

        :param body_lines: The body_lines of this Promotion.
        :param display_link: The display_link of this Promotion.
        :param html_title: The html_title of this Promotion.
        :param image: The image of this Promotion.
        :param link: The link of this Promotion.
        :param title: The title of this Promotion.
        """
        self.openapi_types = {
            'body_lines': List[PromotionBodyLinesInner],
            'display_link': str,
            'html_title': str,
            'image': PromotionImage,
            'link': str,
            'title': str
        }

        self.attribute_map = {
            'body_lines': 'bodyLines',
            'display_link': 'displayLink',
            'html_title': 'htmlTitle',
            'image': 'image',
            'link': 'link',
            'title': 'title'
        }

        self._body_lines = body_lines
        self._display_link = display_link
        self._html_title = html_title
        self._image = image
        self._link = link
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Promotion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Promotion of this Promotion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body_lines(self):
        """Gets the body_lines of this Promotion.

        An array of block objects for this promotion.

        :return: The body_lines of this Promotion.
        :rtype: List[PromotionBodyLinesInner]
        """
        return self._body_lines

    @body_lines.setter
    def body_lines(self, body_lines):
        """Sets the body_lines of this Promotion.

        An array of block objects for this promotion.

        :param body_lines: The body_lines of this Promotion.
        :type body_lines: List[PromotionBodyLinesInner]
        """

        self._body_lines = body_lines

    @property
    def display_link(self):
        """Gets the display_link of this Promotion.

        An abridged version of this search's result URL, e.g. www.example.com.

        :return: The display_link of this Promotion.
        :rtype: str
        """
        return self._display_link

    @display_link.setter
    def display_link(self, display_link):
        """Sets the display_link of this Promotion.

        An abridged version of this search's result URL, e.g. www.example.com.

        :param display_link: The display_link of this Promotion.
        :type display_link: str
        """

        self._display_link = display_link

    @property
    def html_title(self):
        """Gets the html_title of this Promotion.

        The title of the promotion, in HTML.

        :return: The html_title of this Promotion.
        :rtype: str
        """
        return self._html_title

    @html_title.setter
    def html_title(self, html_title):
        """Sets the html_title of this Promotion.

        The title of the promotion, in HTML.

        :param html_title: The html_title of this Promotion.
        :type html_title: str
        """

        self._html_title = html_title

    @property
    def image(self):
        """Gets the image of this Promotion.


        :return: The image of this Promotion.
        :rtype: PromotionImage
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this Promotion.


        :param image: The image of this Promotion.
        :type image: PromotionImage
        """

        self._image = image

    @property
    def link(self):
        """Gets the link of this Promotion.

        The URL of the promotion.

        :return: The link of this Promotion.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this Promotion.

        The URL of the promotion.

        :param link: The link of this Promotion.
        :type link: str
        """

        self._link = link

    @property
    def title(self):
        """Gets the title of this Promotion.

        The title of the promotion.

        :return: The title of this Promotion.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Promotion.

        The title of the promotion.

        :param title: The title of this Promotion.
        :type title: str
        """

        self._title = title
