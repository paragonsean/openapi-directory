/**
 * Custom Search API
 * Searches over a website or collection of websites
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CustomSearchApi);
  }
}(this, function(expect, CustomSearchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CustomSearchApi.SearchQueriesNextPageInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SearchQueriesNextPageInner', function() {
    it('should create an instance of SearchQueriesNextPageInner', function() {
      // uncomment below and update the code to test SearchQueriesNextPageInner
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be.a(CustomSearchApi.SearchQueriesNextPageInner);
    });

    it('should have the property count (base name: "count")', function() {
      // uncomment below and update the code to test the property count
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property cr (base name: "cr")', function() {
      // uncomment below and update the code to test the property cr
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property cx (base name: "cx")', function() {
      // uncomment below and update the code to test the property cx
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property dateRestrict (base name: "dateRestrict")', function() {
      // uncomment below and update the code to test the property dateRestrict
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property disableCnTwTranslation (base name: "disableCnTwTranslation")', function() {
      // uncomment below and update the code to test the property disableCnTwTranslation
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property exactTerms (base name: "exactTerms")', function() {
      // uncomment below and update the code to test the property exactTerms
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property excludeTerms (base name: "excludeTerms")', function() {
      // uncomment below and update the code to test the property excludeTerms
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property fileType (base name: "fileType")', function() {
      // uncomment below and update the code to test the property fileType
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property filter (base name: "filter")', function() {
      // uncomment below and update the code to test the property filter
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property gl (base name: "gl")', function() {
      // uncomment below and update the code to test the property gl
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property googleHost (base name: "googleHost")', function() {
      // uncomment below and update the code to test the property googleHost
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property highRange (base name: "highRange")', function() {
      // uncomment below and update the code to test the property highRange
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property hl (base name: "hl")', function() {
      // uncomment below and update the code to test the property hl
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property hq (base name: "hq")', function() {
      // uncomment below and update the code to test the property hq
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property imgColorType (base name: "imgColorType")', function() {
      // uncomment below and update the code to test the property imgColorType
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property imgDominantColor (base name: "imgDominantColor")', function() {
      // uncomment below and update the code to test the property imgDominantColor
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property imgSize (base name: "imgSize")', function() {
      // uncomment below and update the code to test the property imgSize
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property imgType (base name: "imgType")', function() {
      // uncomment below and update the code to test the property imgType
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property inputEncoding (base name: "inputEncoding")', function() {
      // uncomment below and update the code to test the property inputEncoding
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property linkSite (base name: "linkSite")', function() {
      // uncomment below and update the code to test the property linkSite
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property lowRange (base name: "lowRange")', function() {
      // uncomment below and update the code to test the property lowRange
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property orTerms (base name: "orTerms")', function() {
      // uncomment below and update the code to test the property orTerms
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property outputEncoding (base name: "outputEncoding")', function() {
      // uncomment below and update the code to test the property outputEncoding
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property relatedSite (base name: "relatedSite")', function() {
      // uncomment below and update the code to test the property relatedSite
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property rights (base name: "rights")', function() {
      // uncomment below and update the code to test the property rights
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property safe (base name: "safe")', function() {
      // uncomment below and update the code to test the property safe
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property searchTerms (base name: "searchTerms")', function() {
      // uncomment below and update the code to test the property searchTerms
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property searchType (base name: "searchType")', function() {
      // uncomment below and update the code to test the property searchType
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property siteSearch (base name: "siteSearch")', function() {
      // uncomment below and update the code to test the property siteSearch
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property siteSearchFilter (base name: "siteSearchFilter")', function() {
      // uncomment below and update the code to test the property siteSearchFilter
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property sort (base name: "sort")', function() {
      // uncomment below and update the code to test the property sort
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property startIndex (base name: "startIndex")', function() {
      // uncomment below and update the code to test the property startIndex
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property startPage (base name: "startPage")', function() {
      // uncomment below and update the code to test the property startPage
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

    it('should have the property totalResults (base name: "totalResults")', function() {
      // uncomment below and update the code to test the property totalResults
      //var instance = new CustomSearchApi.SearchQueriesNextPageInner();
      //expect(instance).to.be();
    });

  });

}));
