/**
 * Custom Search API
 * Searches over a website or collection of websites
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Promotion from './model/Promotion';
import PromotionBodyLinesInner from './model/PromotionBodyLinesInner';
import PromotionImage from './model/PromotionImage';
import Result from './model/Result';
import ResultImage from './model/ResultImage';
import ResultLabelsInner from './model/ResultLabelsInner';
import Search from './model/Search';
import SearchQueries from './model/SearchQueries';
import SearchQueriesNextPageInner from './model/SearchQueriesNextPageInner';
import SearchSearchInformation from './model/SearchSearchInformation';
import SearchSpelling from './model/SearchSpelling';
import SearchUrl from './model/SearchUrl';
import CseApi from './api/CseApi';


/**
* Searches over a website or collection of websites.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CustomSearchApi = require('index'); // See note below*.
* var xxxSvc = new CustomSearchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CustomSearchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CustomSearchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CustomSearchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Promotion model constructor.
     * @property {module:model/Promotion}
     */
    Promotion,

    /**
     * The PromotionBodyLinesInner model constructor.
     * @property {module:model/PromotionBodyLinesInner}
     */
    PromotionBodyLinesInner,

    /**
     * The PromotionImage model constructor.
     * @property {module:model/PromotionImage}
     */
    PromotionImage,

    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result,

    /**
     * The ResultImage model constructor.
     * @property {module:model/ResultImage}
     */
    ResultImage,

    /**
     * The ResultLabelsInner model constructor.
     * @property {module:model/ResultLabelsInner}
     */
    ResultLabelsInner,

    /**
     * The Search model constructor.
     * @property {module:model/Search}
     */
    Search,

    /**
     * The SearchQueries model constructor.
     * @property {module:model/SearchQueries}
     */
    SearchQueries,

    /**
     * The SearchQueriesNextPageInner model constructor.
     * @property {module:model/SearchQueriesNextPageInner}
     */
    SearchQueriesNextPageInner,

    /**
     * The SearchSearchInformation model constructor.
     * @property {module:model/SearchSearchInformation}
     */
    SearchSearchInformation,

    /**
     * The SearchSpelling model constructor.
     * @property {module:model/SearchSpelling}
     */
    SearchSpelling,

    /**
     * The SearchUrl model constructor.
     * @property {module:model/SearchUrl}
     */
    SearchUrl,

    /**
    * The CseApi service constructor.
    * @property {module:api/CseApi}
    */
    CseApi
};
