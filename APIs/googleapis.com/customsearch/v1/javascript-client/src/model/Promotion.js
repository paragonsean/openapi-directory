/**
 * Custom Search API
 * Searches over a website or collection of websites
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PromotionBodyLinesInner from './PromotionBodyLinesInner';
import PromotionImage from './PromotionImage';

/**
 * The Promotion model module.
 * @module model/Promotion
 * @version v1
 */
class Promotion {
    /**
     * Constructs a new <code>Promotion</code>.
     * Promotion result.
     * @alias module:model/Promotion
     */
    constructor() { 
        
        Promotion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Promotion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Promotion} obj Optional instance to populate.
     * @return {module:model/Promotion} The populated <code>Promotion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Promotion();

            if (data.hasOwnProperty('bodyLines')) {
                obj['bodyLines'] = ApiClient.convertToType(data['bodyLines'], [PromotionBodyLinesInner]);
            }
            if (data.hasOwnProperty('displayLink')) {
                obj['displayLink'] = ApiClient.convertToType(data['displayLink'], 'String');
            }
            if (data.hasOwnProperty('htmlTitle')) {
                obj['htmlTitle'] = ApiClient.convertToType(data['htmlTitle'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = PromotionImage.constructFromObject(data['image']);
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Promotion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Promotion</code>.
     */
    static validateJSON(data) {
        if (data['bodyLines']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bodyLines'])) {
                throw new Error("Expected the field `bodyLines` to be an array in the JSON data but got " + data['bodyLines']);
            }
            // validate the optional field `bodyLines` (array)
            for (const item of data['bodyLines']) {
                PromotionBodyLinesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['displayLink'] && !(typeof data['displayLink'] === 'string' || data['displayLink'] instanceof String)) {
            throw new Error("Expected the field `displayLink` to be a primitive type in the JSON string but got " + data['displayLink']);
        }
        // ensure the json data is a string
        if (data['htmlTitle'] && !(typeof data['htmlTitle'] === 'string' || data['htmlTitle'] instanceof String)) {
            throw new Error("Expected the field `htmlTitle` to be a primitive type in the JSON string but got " + data['htmlTitle']);
        }
        // validate the optional field `image`
        if (data['image']) { // data not null
          PromotionImage.validateJSON(data['image']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * An array of block objects for this promotion.
 * @member {Array.<module:model/PromotionBodyLinesInner>} bodyLines
 */
Promotion.prototype['bodyLines'] = undefined;

/**
 * An abridged version of this search's result URL, e.g. www.example.com.
 * @member {String} displayLink
 */
Promotion.prototype['displayLink'] = undefined;

/**
 * The title of the promotion, in HTML.
 * @member {String} htmlTitle
 */
Promotion.prototype['htmlTitle'] = undefined;

/**
 * @member {module:model/PromotionImage} image
 */
Promotion.prototype['image'] = undefined;

/**
 * The URL of the promotion.
 * @member {String} link
 */
Promotion.prototype['link'] = undefined;

/**
 * The title of the promotion.
 * @member {String} title
 */
Promotion.prototype['title'] = undefined;






export default Promotion;

