/**
 * Security Token Service API
 * The Security Token Service exchanges Google or third-party credentials for a short-lived access token to Google Cloud resources.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleIdentityStsV1betaExchangeTokenResponse model module.
 * @module model/GoogleIdentityStsV1betaExchangeTokenResponse
 * @version v1beta
 */
class GoogleIdentityStsV1betaExchangeTokenResponse {
    /**
     * Constructs a new <code>GoogleIdentityStsV1betaExchangeTokenResponse</code>.
     * Response message for ExchangeToken.
     * @alias module:model/GoogleIdentityStsV1betaExchangeTokenResponse
     */
    constructor() { 
        
        GoogleIdentityStsV1betaExchangeTokenResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleIdentityStsV1betaExchangeTokenResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleIdentityStsV1betaExchangeTokenResponse} obj Optional instance to populate.
     * @return {module:model/GoogleIdentityStsV1betaExchangeTokenResponse} The populated <code>GoogleIdentityStsV1betaExchangeTokenResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleIdentityStsV1betaExchangeTokenResponse();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('expires_in')) {
                obj['expires_in'] = ApiClient.convertToType(data['expires_in'], 'Number');
            }
            if (data.hasOwnProperty('issued_token_type')) {
                obj['issued_token_type'] = ApiClient.convertToType(data['issued_token_type'], 'String');
            }
            if (data.hasOwnProperty('token_type')) {
                obj['token_type'] = ApiClient.convertToType(data['token_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleIdentityStsV1betaExchangeTokenResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleIdentityStsV1betaExchangeTokenResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['issued_token_type'] && !(typeof data['issued_token_type'] === 'string' || data['issued_token_type'] instanceof String)) {
            throw new Error("Expected the field `issued_token_type` to be a primitive type in the JSON string but got " + data['issued_token_type']);
        }
        // ensure the json data is a string
        if (data['token_type'] && !(typeof data['token_type'] === 'string' || data['token_type'] instanceof String)) {
            throw new Error("Expected the field `token_type` to be a primitive type in the JSON string but got " + data['token_type']);
        }

        return true;
    }


}



/**
 * An OAuth 2.0 security token, issued by Google, in response to the token exchange request. Tokens can vary in size, depending in part on the size of mapped claims, up to a maximum of 12288 bytes (12 KB). Google reserves the right to change the token size and the maximum length at any time.
 * @member {String} access_token
 */
GoogleIdentityStsV1betaExchangeTokenResponse.prototype['access_token'] = undefined;

/**
 * The amount of time, in seconds, between the time when the access token was issued and the time when the access token will expire. This field is absent when the `subject_token` in the request is a Google-issued, short-lived access token. In this case, the access token has the same expiration time as the `subject_token`.
 * @member {Number} expires_in
 */
GoogleIdentityStsV1betaExchangeTokenResponse.prototype['expires_in'] = undefined;

/**
 * The token type. Always matches the value of `requested_token_type` from the request.
 * @member {String} issued_token_type
 */
GoogleIdentityStsV1betaExchangeTokenResponse.prototype['issued_token_type'] = undefined;

/**
 * The type of access token. Always has the value `Bearer`.
 * @member {String} token_type
 */
GoogleIdentityStsV1betaExchangeTokenResponse.prototype['token_type'] = undefined;






export default GoogleIdentityStsV1betaExchangeTokenResponse;

