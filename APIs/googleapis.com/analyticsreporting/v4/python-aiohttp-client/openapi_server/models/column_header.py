# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric_header import MetricHeader
from openapi_server import util


class ColumnHeader(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimensions: List[str]=None, metric_header: MetricHeader=None):
        """ColumnHeader - a model defined in OpenAPI

        :param dimensions: The dimensions of this ColumnHeader.
        :param metric_header: The metric_header of this ColumnHeader.
        """
        self.openapi_types = {
            'dimensions': List[str],
            'metric_header': MetricHeader
        }

        self.attribute_map = {
            'dimensions': 'dimensions',
            'metric_header': 'metricHeader'
        }

        self._dimensions = dimensions
        self._metric_header = metric_header

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ColumnHeader':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ColumnHeader of this ColumnHeader.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimensions(self):
        """Gets the dimensions of this ColumnHeader.

        The dimension names in the response.

        :return: The dimensions of this ColumnHeader.
        :rtype: List[str]
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this ColumnHeader.

        The dimension names in the response.

        :param dimensions: The dimensions of this ColumnHeader.
        :type dimensions: List[str]
        """

        self._dimensions = dimensions

    @property
    def metric_header(self):
        """Gets the metric_header of this ColumnHeader.


        :return: The metric_header of this ColumnHeader.
        :rtype: MetricHeader
        """
        return self._metric_header

    @metric_header.setter
    def metric_header(self, metric_header):
        """Sets the metric_header of this ColumnHeader.


        :param metric_header: The metric_header of this ColumnHeader.
        :type metric_header: MetricHeader
        """

        self._metric_header = metric_header
