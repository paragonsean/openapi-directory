# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.segment_definition import SegmentDefinition
from openapi_server import util


class DynamicSegment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, session_segment: SegmentDefinition=None, user_segment: SegmentDefinition=None):
        """DynamicSegment - a model defined in OpenAPI

        :param name: The name of this DynamicSegment.
        :param session_segment: The session_segment of this DynamicSegment.
        :param user_segment: The user_segment of this DynamicSegment.
        """
        self.openapi_types = {
            'name': str,
            'session_segment': SegmentDefinition,
            'user_segment': SegmentDefinition
        }

        self.attribute_map = {
            'name': 'name',
            'session_segment': 'sessionSegment',
            'user_segment': 'userSegment'
        }

        self._name = name
        self._session_segment = session_segment
        self._user_segment = user_segment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DynamicSegment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DynamicSegment of this DynamicSegment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DynamicSegment.

        The name of the dynamic segment.

        :return: The name of this DynamicSegment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DynamicSegment.

        The name of the dynamic segment.

        :param name: The name of this DynamicSegment.
        :type name: str
        """

        self._name = name

    @property
    def session_segment(self):
        """Gets the session_segment of this DynamicSegment.


        :return: The session_segment of this DynamicSegment.
        :rtype: SegmentDefinition
        """
        return self._session_segment

    @session_segment.setter
    def session_segment(self, session_segment):
        """Sets the session_segment of this DynamicSegment.


        :param session_segment: The session_segment of this DynamicSegment.
        :type session_segment: SegmentDefinition
        """

        self._session_segment = session_segment

    @property
    def user_segment(self):
        """Gets the user_segment of this DynamicSegment.


        :return: The user_segment of this DynamicSegment.
        :rtype: SegmentDefinition
        """
        return self._user_segment

    @user_segment.setter
    def user_segment(self, user_segment):
        """Sets the user_segment of this DynamicSegment.


        :param user_segment: The user_segment of this DynamicSegment.
        :type user_segment: SegmentDefinition
        """

        self._user_segment = user_segment
