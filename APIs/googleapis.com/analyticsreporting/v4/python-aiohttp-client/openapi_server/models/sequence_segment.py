# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.segment_sequence_step import SegmentSequenceStep
from openapi_server import util


class SequenceSegment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_step_should_match_first_hit: bool=None, segment_sequence_steps: List[SegmentSequenceStep]=None):
        """SequenceSegment - a model defined in OpenAPI

        :param first_step_should_match_first_hit: The first_step_should_match_first_hit of this SequenceSegment.
        :param segment_sequence_steps: The segment_sequence_steps of this SequenceSegment.
        """
        self.openapi_types = {
            'first_step_should_match_first_hit': bool,
            'segment_sequence_steps': List[SegmentSequenceStep]
        }

        self.attribute_map = {
            'first_step_should_match_first_hit': 'firstStepShouldMatchFirstHit',
            'segment_sequence_steps': 'segmentSequenceSteps'
        }

        self._first_step_should_match_first_hit = first_step_should_match_first_hit
        self._segment_sequence_steps = segment_sequence_steps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SequenceSegment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SequenceSegment of this SequenceSegment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_step_should_match_first_hit(self):
        """Gets the first_step_should_match_first_hit of this SequenceSegment.

        If set, first step condition must match the first hit of the visitor (in the date range).

        :return: The first_step_should_match_first_hit of this SequenceSegment.
        :rtype: bool
        """
        return self._first_step_should_match_first_hit

    @first_step_should_match_first_hit.setter
    def first_step_should_match_first_hit(self, first_step_should_match_first_hit):
        """Sets the first_step_should_match_first_hit of this SequenceSegment.

        If set, first step condition must match the first hit of the visitor (in the date range).

        :param first_step_should_match_first_hit: The first_step_should_match_first_hit of this SequenceSegment.
        :type first_step_should_match_first_hit: bool
        """

        self._first_step_should_match_first_hit = first_step_should_match_first_hit

    @property
    def segment_sequence_steps(self):
        """Gets the segment_sequence_steps of this SequenceSegment.

        The list of steps in the sequence.

        :return: The segment_sequence_steps of this SequenceSegment.
        :rtype: List[SegmentSequenceStep]
        """
        return self._segment_sequence_steps

    @segment_sequence_steps.setter
    def segment_sequence_steps(self, segment_sequence_steps):
        """Sets the segment_sequence_steps of this SequenceSegment.

        The list of steps in the sequence.

        :param segment_sequence_steps: The segment_sequence_steps of this SequenceSegment.
        :type segment_sequence_steps: List[SegmentSequenceStep]
        """

        self._segment_sequence_steps = segment_sequence_steps
