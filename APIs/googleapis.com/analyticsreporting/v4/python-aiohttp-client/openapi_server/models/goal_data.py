# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoalData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, goal_completion_location: str=None, goal_completions: str=None, goal_index: int=None, goal_name: str=None, goal_previous_step1: str=None, goal_previous_step2: str=None, goal_previous_step3: str=None, goal_value: float=None):
        """GoalData - a model defined in OpenAPI

        :param goal_completion_location: The goal_completion_location of this GoalData.
        :param goal_completions: The goal_completions of this GoalData.
        :param goal_index: The goal_index of this GoalData.
        :param goal_name: The goal_name of this GoalData.
        :param goal_previous_step1: The goal_previous_step1 of this GoalData.
        :param goal_previous_step2: The goal_previous_step2 of this GoalData.
        :param goal_previous_step3: The goal_previous_step3 of this GoalData.
        :param goal_value: The goal_value of this GoalData.
        """
        self.openapi_types = {
            'goal_completion_location': str,
            'goal_completions': str,
            'goal_index': int,
            'goal_name': str,
            'goal_previous_step1': str,
            'goal_previous_step2': str,
            'goal_previous_step3': str,
            'goal_value': float
        }

        self.attribute_map = {
            'goal_completion_location': 'goalCompletionLocation',
            'goal_completions': 'goalCompletions',
            'goal_index': 'goalIndex',
            'goal_name': 'goalName',
            'goal_previous_step1': 'goalPreviousStep1',
            'goal_previous_step2': 'goalPreviousStep2',
            'goal_previous_step3': 'goalPreviousStep3',
            'goal_value': 'goalValue'
        }

        self._goal_completion_location = goal_completion_location
        self._goal_completions = goal_completions
        self._goal_index = goal_index
        self._goal_name = goal_name
        self._goal_previous_step1 = goal_previous_step1
        self._goal_previous_step2 = goal_previous_step2
        self._goal_previous_step3 = goal_previous_step3
        self._goal_value = goal_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoalData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoalData of this GoalData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def goal_completion_location(self):
        """Gets the goal_completion_location of this GoalData.

        URL of the page where this goal was completed.

        :return: The goal_completion_location of this GoalData.
        :rtype: str
        """
        return self._goal_completion_location

    @goal_completion_location.setter
    def goal_completion_location(self, goal_completion_location):
        """Sets the goal_completion_location of this GoalData.

        URL of the page where this goal was completed.

        :param goal_completion_location: The goal_completion_location of this GoalData.
        :type goal_completion_location: str
        """

        self._goal_completion_location = goal_completion_location

    @property
    def goal_completions(self):
        """Gets the goal_completions of this GoalData.

        Total number of goal completions in this activity.

        :return: The goal_completions of this GoalData.
        :rtype: str
        """
        return self._goal_completions

    @goal_completions.setter
    def goal_completions(self, goal_completions):
        """Sets the goal_completions of this GoalData.

        Total number of goal completions in this activity.

        :param goal_completions: The goal_completions of this GoalData.
        :type goal_completions: str
        """

        self._goal_completions = goal_completions

    @property
    def goal_index(self):
        """Gets the goal_index of this GoalData.

        This identifies the goal as configured for the profile.

        :return: The goal_index of this GoalData.
        :rtype: int
        """
        return self._goal_index

    @goal_index.setter
    def goal_index(self, goal_index):
        """Sets the goal_index of this GoalData.

        This identifies the goal as configured for the profile.

        :param goal_index: The goal_index of this GoalData.
        :type goal_index: int
        """

        self._goal_index = goal_index

    @property
    def goal_name(self):
        """Gets the goal_name of this GoalData.

        Name of the goal.

        :return: The goal_name of this GoalData.
        :rtype: str
        """
        return self._goal_name

    @goal_name.setter
    def goal_name(self, goal_name):
        """Sets the goal_name of this GoalData.

        Name of the goal.

        :param goal_name: The goal_name of this GoalData.
        :type goal_name: str
        """

        self._goal_name = goal_name

    @property
    def goal_previous_step1(self):
        """Gets the goal_previous_step1 of this GoalData.

        URL of the page one step prior to the goal completion.

        :return: The goal_previous_step1 of this GoalData.
        :rtype: str
        """
        return self._goal_previous_step1

    @goal_previous_step1.setter
    def goal_previous_step1(self, goal_previous_step1):
        """Sets the goal_previous_step1 of this GoalData.

        URL of the page one step prior to the goal completion.

        :param goal_previous_step1: The goal_previous_step1 of this GoalData.
        :type goal_previous_step1: str
        """

        self._goal_previous_step1 = goal_previous_step1

    @property
    def goal_previous_step2(self):
        """Gets the goal_previous_step2 of this GoalData.

        URL of the page two steps prior to the goal completion.

        :return: The goal_previous_step2 of this GoalData.
        :rtype: str
        """
        return self._goal_previous_step2

    @goal_previous_step2.setter
    def goal_previous_step2(self, goal_previous_step2):
        """Sets the goal_previous_step2 of this GoalData.

        URL of the page two steps prior to the goal completion.

        :param goal_previous_step2: The goal_previous_step2 of this GoalData.
        :type goal_previous_step2: str
        """

        self._goal_previous_step2 = goal_previous_step2

    @property
    def goal_previous_step3(self):
        """Gets the goal_previous_step3 of this GoalData.

        URL of the page three steps prior to the goal completion.

        :return: The goal_previous_step3 of this GoalData.
        :rtype: str
        """
        return self._goal_previous_step3

    @goal_previous_step3.setter
    def goal_previous_step3(self, goal_previous_step3):
        """Sets the goal_previous_step3 of this GoalData.

        URL of the page three steps prior to the goal completion.

        :param goal_previous_step3: The goal_previous_step3 of this GoalData.
        :type goal_previous_step3: str
        """

        self._goal_previous_step3 = goal_previous_step3

    @property
    def goal_value(self):
        """Gets the goal_value of this GoalData.

        Value in this goal.

        :return: The goal_value of this GoalData.
        :rtype: float
        """
        return self._goal_value

    @goal_value.setter
    def goal_value(self, goal_value):
        """Sets the goal_value of this GoalData.

        Value in this goal.

        :param goal_value: The goal_value of this GoalData.
        :type goal_value: float
        """

        self._goal_value = goal_value
