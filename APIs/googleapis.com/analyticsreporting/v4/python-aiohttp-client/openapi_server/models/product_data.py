# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item_revenue: float=None, product_name: str=None, product_quantity: str=None, product_sku: str=None):
        """ProductData - a model defined in OpenAPI

        :param item_revenue: The item_revenue of this ProductData.
        :param product_name: The product_name of this ProductData.
        :param product_quantity: The product_quantity of this ProductData.
        :param product_sku: The product_sku of this ProductData.
        """
        self.openapi_types = {
            'item_revenue': float,
            'product_name': str,
            'product_quantity': str,
            'product_sku': str
        }

        self.attribute_map = {
            'item_revenue': 'itemRevenue',
            'product_name': 'productName',
            'product_quantity': 'productQuantity',
            'product_sku': 'productSku'
        }

        self._item_revenue = item_revenue
        self._product_name = product_name
        self._product_quantity = product_quantity
        self._product_sku = product_sku

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductData of this ProductData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_revenue(self):
        """Gets the item_revenue of this ProductData.

        The total revenue from purchased product items.

        :return: The item_revenue of this ProductData.
        :rtype: float
        """
        return self._item_revenue

    @item_revenue.setter
    def item_revenue(self, item_revenue):
        """Sets the item_revenue of this ProductData.

        The total revenue from purchased product items.

        :param item_revenue: The item_revenue of this ProductData.
        :type item_revenue: float
        """

        self._item_revenue = item_revenue

    @property
    def product_name(self):
        """Gets the product_name of this ProductData.

        The product name, supplied by the e-commerce tracking application, for the purchased items.

        :return: The product_name of this ProductData.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this ProductData.

        The product name, supplied by the e-commerce tracking application, for the purchased items.

        :param product_name: The product_name of this ProductData.
        :type product_name: str
        """

        self._product_name = product_name

    @property
    def product_quantity(self):
        """Gets the product_quantity of this ProductData.

        Total number of this product units in the transaction.

        :return: The product_quantity of this ProductData.
        :rtype: str
        """
        return self._product_quantity

    @product_quantity.setter
    def product_quantity(self, product_quantity):
        """Sets the product_quantity of this ProductData.

        Total number of this product units in the transaction.

        :param product_quantity: The product_quantity of this ProductData.
        :type product_quantity: str
        """

        self._product_quantity = product_quantity

    @property
    def product_sku(self):
        """Gets the product_sku of this ProductData.

        Unique code that represents the product.

        :return: The product_sku of this ProductData.
        :rtype: str
        """
        return self._product_sku

    @product_sku.setter
    def product_sku(self, product_sku):
        """Sets the product_sku of this ProductData.

        Unique code that represents the product.

        :param product_sku: The product_sku of this ProductData.
        :type product_sku: str
        """

        self._product_sku = product_sku
