# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.column_header import ColumnHeader
from openapi_server.models.report_data import ReportData
from openapi_server import util


class Report(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_header: ColumnHeader=None, data: ReportData=None, next_page_token: str=None):
        """Report - a model defined in OpenAPI

        :param column_header: The column_header of this Report.
        :param data: The data of this Report.
        :param next_page_token: The next_page_token of this Report.
        """
        self.openapi_types = {
            'column_header': ColumnHeader,
            'data': ReportData,
            'next_page_token': str
        }

        self.attribute_map = {
            'column_header': 'columnHeader',
            'data': 'data',
            'next_page_token': 'nextPageToken'
        }

        self._column_header = column_header
        self._data = data
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Report':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Report of this Report.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_header(self):
        """Gets the column_header of this Report.


        :return: The column_header of this Report.
        :rtype: ColumnHeader
        """
        return self._column_header

    @column_header.setter
    def column_header(self, column_header):
        """Sets the column_header of this Report.


        :param column_header: The column_header of this Report.
        :type column_header: ColumnHeader
        """

        self._column_header = column_header

    @property
    def data(self):
        """Gets the data of this Report.


        :return: The data of this Report.
        :rtype: ReportData
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this Report.


        :param data: The data of this Report.
        :type data: ReportData
        """

        self._data = data

    @property
    def next_page_token(self):
        """Gets the next_page_token of this Report.

        Page token to retrieve the next page of results in the list.

        :return: The next_page_token of this Report.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this Report.

        Page token to retrieve the next page of results in the list.

        :param next_page_token: The next_page_token of this Report.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
