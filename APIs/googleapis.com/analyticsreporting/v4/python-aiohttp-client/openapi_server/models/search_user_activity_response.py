# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_activity_session import UserActivitySession
from openapi_server import util


class SearchUserActivityResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, sample_rate: float=None, sessions: List[UserActivitySession]=None, total_rows: int=None):
        """SearchUserActivityResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this SearchUserActivityResponse.
        :param sample_rate: The sample_rate of this SearchUserActivityResponse.
        :param sessions: The sessions of this SearchUserActivityResponse.
        :param total_rows: The total_rows of this SearchUserActivityResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'sample_rate': float,
            'sessions': List[UserActivitySession],
            'total_rows': int
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'sample_rate': 'sampleRate',
            'sessions': 'sessions',
            'total_rows': 'totalRows'
        }

        self._next_page_token = next_page_token
        self._sample_rate = sample_rate
        self._sessions = sessions
        self._total_rows = total_rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchUserActivityResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchUserActivityResponse of this SearchUserActivityResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this SearchUserActivityResponse.

        This token should be passed to [SearchUserActivityRequest](#SearchUserActivityRequest) to retrieve the next page.

        :return: The next_page_token of this SearchUserActivityResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this SearchUserActivityResponse.

        This token should be passed to [SearchUserActivityRequest](#SearchUserActivityRequest) to retrieve the next page.

        :param next_page_token: The next_page_token of this SearchUserActivityResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def sample_rate(self):
        """Gets the sample_rate of this SearchUserActivityResponse.

        This field represents the [sampling rate](https://support.google.com/analytics/answer/2637192) for the given request and is a number between 0.0 to 1.0. See [developer guide](/analytics/devguides/reporting/core/v4/basics#sampling) for details.

        :return: The sample_rate of this SearchUserActivityResponse.
        :rtype: float
        """
        return self._sample_rate

    @sample_rate.setter
    def sample_rate(self, sample_rate):
        """Sets the sample_rate of this SearchUserActivityResponse.

        This field represents the [sampling rate](https://support.google.com/analytics/answer/2637192) for the given request and is a number between 0.0 to 1.0. See [developer guide](/analytics/devguides/reporting/core/v4/basics#sampling) for details.

        :param sample_rate: The sample_rate of this SearchUserActivityResponse.
        :type sample_rate: float
        """

        self._sample_rate = sample_rate

    @property
    def sessions(self):
        """Gets the sessions of this SearchUserActivityResponse.

        Each record represents a session (device details, duration, etc).

        :return: The sessions of this SearchUserActivityResponse.
        :rtype: List[UserActivitySession]
        """
        return self._sessions

    @sessions.setter
    def sessions(self, sessions):
        """Sets the sessions of this SearchUserActivityResponse.

        Each record represents a session (device details, duration, etc).

        :param sessions: The sessions of this SearchUserActivityResponse.
        :type sessions: List[UserActivitySession]
        """

        self._sessions = sessions

    @property
    def total_rows(self):
        """Gets the total_rows of this SearchUserActivityResponse.

        Total rows returned by this query (across different pages).

        :return: The total_rows of this SearchUserActivityResponse.
        :rtype: int
        """
        return self._total_rows

    @total_rows.setter
    def total_rows(self, total_rows):
        """Sets the total_rows of this SearchUserActivityResponse.

        Total rows returned by this query (across different pages).

        :param total_rows: The total_rows of this SearchUserActivityResponse.
        :type total_rows: int
        """

        self._total_rows = total_rows
