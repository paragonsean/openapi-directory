/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventData.h
 *
 * Represents all the details pertaining to an event.
 */

#ifndef OAIEventData_H
#define OAIEventData_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventData : public OAIObject {
public:
    OAIEventData();
    OAIEventData(QString json);
    ~OAIEventData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventAction() const;
    void setEventAction(const QString &event_action);
    bool is_event_action_Set() const;
    bool is_event_action_Valid() const;

    QString getEventCategory() const;
    void setEventCategory(const QString &event_category);
    bool is_event_category_Set() const;
    bool is_event_category_Valid() const;

    QString getEventCount() const;
    void setEventCount(const QString &event_count);
    bool is_event_count_Set() const;
    bool is_event_count_Valid() const;

    QString getEventLabel() const;
    void setEventLabel(const QString &event_label);
    bool is_event_label_Set() const;
    bool is_event_label_Valid() const;

    QString getEventValue() const;
    void setEventValue(const QString &event_value);
    bool is_event_value_Set() const;
    bool is_event_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_action;
    bool m_event_action_isSet;
    bool m_event_action_isValid;

    QString m_event_category;
    bool m_event_category_isSet;
    bool m_event_category_isValid;

    QString m_event_count;
    bool m_event_count_isSet;
    bool m_event_count_isValid;

    QString m_event_label;
    bool m_event_label_isSet;
    bool m_event_label_isValid;

    QString m_event_value;
    bool m_event_value_isSet;
    bool m_event_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventData)

#endif // OAIEventData_H
