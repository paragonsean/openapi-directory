/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchUserActivityResponse.h
 *
 * The response from &#x60;userActivity:get&#x60; call.
 */

#ifndef OAISearchUserActivityResponse_H
#define OAISearchUserActivityResponse_H

#include <QJsonObject>

#include "OAIUserActivitySession.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserActivitySession;

class OAISearchUserActivityResponse : public OAIObject {
public:
    OAISearchUserActivityResponse();
    OAISearchUserActivityResponse(QString json);
    ~OAISearchUserActivityResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    double getSampleRate() const;
    void setSampleRate(const double &sample_rate);
    bool is_sample_rate_Set() const;
    bool is_sample_rate_Valid() const;

    QList<OAIUserActivitySession> getSessions() const;
    void setSessions(const QList<OAIUserActivitySession> &sessions);
    bool is_sessions_Set() const;
    bool is_sessions_Valid() const;

    qint32 getTotalRows() const;
    void setTotalRows(const qint32 &total_rows);
    bool is_total_rows_Set() const;
    bool is_total_rows_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    double m_sample_rate;
    bool m_sample_rate_isSet;
    bool m_sample_rate_isValid;

    QList<OAIUserActivitySession> m_sessions;
    bool m_sessions_isSet;
    bool m_sessions_isValid;

    qint32 m_total_rows;
    bool m_total_rows_isSet;
    bool m_total_rows_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchUserActivityResponse)

#endif // OAISearchUserActivityResponse_H
