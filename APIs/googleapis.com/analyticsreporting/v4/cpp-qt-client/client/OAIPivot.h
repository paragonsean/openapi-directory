/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPivot.h
 *
 * The Pivot describes the pivot section in the request. The Pivot helps rearrange the information in the table for certain reports by pivoting your data on a second dimension.
 */

#ifndef OAIPivot_H
#define OAIPivot_H

#include <QJsonObject>

#include "OAIDimension.h"
#include "OAIDimensionFilterClause.h"
#include "OAIMetric.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionFilterClause;
class OAIDimension;
class OAIMetric;

class OAIPivot : public OAIObject {
public:
    OAIPivot();
    OAIPivot(QString json);
    ~OAIPivot() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDimensionFilterClause> getDimensionFilterClauses() const;
    void setDimensionFilterClauses(const QList<OAIDimensionFilterClause> &dimension_filter_clauses);
    bool is_dimension_filter_clauses_Set() const;
    bool is_dimension_filter_clauses_Valid() const;

    QList<OAIDimension> getDimensions() const;
    void setDimensions(const QList<OAIDimension> &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    qint32 getMaxGroupCount() const;
    void setMaxGroupCount(const qint32 &max_group_count);
    bool is_max_group_count_Set() const;
    bool is_max_group_count_Valid() const;

    QList<OAIMetric> getMetrics() const;
    void setMetrics(const QList<OAIMetric> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    qint32 getStartGroup() const;
    void setStartGroup(const qint32 &start_group);
    bool is_start_group_Set() const;
    bool is_start_group_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDimensionFilterClause> m_dimension_filter_clauses;
    bool m_dimension_filter_clauses_isSet;
    bool m_dimension_filter_clauses_isValid;

    QList<OAIDimension> m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    qint32 m_max_group_count;
    bool m_max_group_count_isSet;
    bool m_max_group_count_isValid;

    QList<OAIMetric> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    qint32 m_start_group;
    bool m_start_group_isSet;
    bool m_start_group_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPivot)

#endif // OAIPivot_H
