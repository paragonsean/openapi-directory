/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderBy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderBy::OAIOrderBy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderBy::OAIOrderBy() {
    this->initializeModel();
}

OAIOrderBy::~OAIOrderBy() {}

void OAIOrderBy::initializeModel() {

    m_field_name_isSet = false;
    m_field_name_isValid = false;

    m_order_type_isSet = false;
    m_order_type_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;
}

void OAIOrderBy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderBy::fromJsonObject(QJsonObject json) {

    m_field_name_isValid = ::OpenAPI::fromJsonValue(m_field_name, json[QString("fieldName")]);
    m_field_name_isSet = !json[QString("fieldName")].isNull() && m_field_name_isValid;

    m_order_type_isValid = ::OpenAPI::fromJsonValue(m_order_type, json[QString("orderType")]);
    m_order_type_isSet = !json[QString("orderType")].isNull() && m_order_type_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sortOrder")]);
    m_sort_order_isSet = !json[QString("sortOrder")].isNull() && m_sort_order_isValid;
}

QString OAIOrderBy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderBy::asJsonObject() const {
    QJsonObject obj;
    if (m_field_name_isSet) {
        obj.insert(QString("fieldName"), ::OpenAPI::toJsonValue(m_field_name));
    }
    if (m_order_type_isSet) {
        obj.insert(QString("orderType"), ::OpenAPI::toJsonValue(m_order_type));
    }
    if (m_sort_order_isSet) {
        obj.insert(QString("sortOrder"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    return obj;
}

QString OAIOrderBy::getFieldName() const {
    return m_field_name;
}
void OAIOrderBy::setFieldName(const QString &field_name) {
    m_field_name = field_name;
    m_field_name_isSet = true;
}

bool OAIOrderBy::is_field_name_Set() const{
    return m_field_name_isSet;
}

bool OAIOrderBy::is_field_name_Valid() const{
    return m_field_name_isValid;
}

QString OAIOrderBy::getOrderType() const {
    return m_order_type;
}
void OAIOrderBy::setOrderType(const QString &order_type) {
    m_order_type = order_type;
    m_order_type_isSet = true;
}

bool OAIOrderBy::is_order_type_Set() const{
    return m_order_type_isSet;
}

bool OAIOrderBy::is_order_type_Valid() const{
    return m_order_type_isValid;
}

QString OAIOrderBy::getSortOrder() const {
    return m_sort_order;
}
void OAIOrderBy::setSortOrder(const QString &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIOrderBy::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIOrderBy::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

bool OAIOrderBy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderBy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
