/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDimension.h
 *
 * [Dimensions](https://support.google.com/analytics/answer/1033861) are attributes of your data. For example, the dimension &#x60;ga:city&#x60; indicates the city, for example, \&quot;Paris\&quot; or \&quot;New York\&quot;, from which a session originates.
 */

#ifndef OAIDimension_H
#define OAIDimension_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDimension : public OAIObject {
public:
    OAIDimension();
    OAIDimension(QString json);
    ~OAIDimension() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getHistogramBuckets() const;
    void setHistogramBuckets(const QList<QString> &histogram_buckets);
    bool is_histogram_buckets_Set() const;
    bool is_histogram_buckets_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_histogram_buckets;
    bool m_histogram_buckets_isSet;
    bool m_histogram_buckets_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDimension)

#endif // OAIDimension_H
