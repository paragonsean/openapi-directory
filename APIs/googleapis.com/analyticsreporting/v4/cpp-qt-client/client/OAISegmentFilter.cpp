/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISegmentFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISegmentFilter::OAISegmentFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISegmentFilter::OAISegmentFilter() {
    this->initializeModel();
}

OAISegmentFilter::~OAISegmentFilter() {}

void OAISegmentFilter::initializeModel() {

    m_r_not_isSet = false;
    m_r_not_isValid = false;

    m_sequence_segment_isSet = false;
    m_sequence_segment_isValid = false;

    m_simple_segment_isSet = false;
    m_simple_segment_isValid = false;
}

void OAISegmentFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISegmentFilter::fromJsonObject(QJsonObject json) {

    m_r_not_isValid = ::OpenAPI::fromJsonValue(m_r_not, json[QString("not")]);
    m_r_not_isSet = !json[QString("not")].isNull() && m_r_not_isValid;

    m_sequence_segment_isValid = ::OpenAPI::fromJsonValue(m_sequence_segment, json[QString("sequenceSegment")]);
    m_sequence_segment_isSet = !json[QString("sequenceSegment")].isNull() && m_sequence_segment_isValid;

    m_simple_segment_isValid = ::OpenAPI::fromJsonValue(m_simple_segment, json[QString("simpleSegment")]);
    m_simple_segment_isSet = !json[QString("simpleSegment")].isNull() && m_simple_segment_isValid;
}

QString OAISegmentFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISegmentFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_r_not_isSet) {
        obj.insert(QString("not"), ::OpenAPI::toJsonValue(m_r_not));
    }
    if (m_sequence_segment.isSet()) {
        obj.insert(QString("sequenceSegment"), ::OpenAPI::toJsonValue(m_sequence_segment));
    }
    if (m_simple_segment.isSet()) {
        obj.insert(QString("simpleSegment"), ::OpenAPI::toJsonValue(m_simple_segment));
    }
    return obj;
}

bool OAISegmentFilter::isRNot() const {
    return m_r_not;
}
void OAISegmentFilter::setRNot(const bool &r_not) {
    m_r_not = r_not;
    m_r_not_isSet = true;
}

bool OAISegmentFilter::is_r_not_Set() const{
    return m_r_not_isSet;
}

bool OAISegmentFilter::is_r_not_Valid() const{
    return m_r_not_isValid;
}

OAISequenceSegment OAISegmentFilter::getSequenceSegment() const {
    return m_sequence_segment;
}
void OAISegmentFilter::setSequenceSegment(const OAISequenceSegment &sequence_segment) {
    m_sequence_segment = sequence_segment;
    m_sequence_segment_isSet = true;
}

bool OAISegmentFilter::is_sequence_segment_Set() const{
    return m_sequence_segment_isSet;
}

bool OAISegmentFilter::is_sequence_segment_Valid() const{
    return m_sequence_segment_isValid;
}

OAISimpleSegment OAISegmentFilter::getSimpleSegment() const {
    return m_simple_segment;
}
void OAISegmentFilter::setSimpleSegment(const OAISimpleSegment &simple_segment) {
    m_simple_segment = simple_segment;
    m_simple_segment_isSet = true;
}

bool OAISegmentFilter::is_simple_segment_Set() const{
    return m_simple_segment_isSet;
}

bool OAISegmentFilter::is_simple_segment_Valid() const{
    return m_simple_segment_isValid;
}

bool OAISegmentFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_not_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sequence_segment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_simple_segment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISegmentFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
