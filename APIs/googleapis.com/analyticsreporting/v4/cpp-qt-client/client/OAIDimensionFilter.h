/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDimensionFilter.h
 *
 * Dimension filter specifies the filtering options on a dimension.
 */

#ifndef OAIDimensionFilter_H
#define OAIDimensionFilter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDimensionFilter : public OAIObject {
public:
    OAIDimensionFilter();
    OAIDimensionFilter(QString json);
    ~OAIDimensionFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCaseSensitive() const;
    void setCaseSensitive(const bool &case_sensitive);
    bool is_case_sensitive_Set() const;
    bool is_case_sensitive_Valid() const;

    QString getDimensionName() const;
    void setDimensionName(const QString &dimension_name);
    bool is_dimension_name_Set() const;
    bool is_dimension_name_Valid() const;

    QList<QString> getExpressions() const;
    void setExpressions(const QList<QString> &expressions);
    bool is_expressions_Set() const;
    bool is_expressions_Valid() const;

    bool isRNot() const;
    void setRNot(const bool &r_not);
    bool is_r_not_Set() const;
    bool is_r_not_Valid() const;

    QString getROperator() const;
    void setROperator(const QString &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_case_sensitive;
    bool m_case_sensitive_isSet;
    bool m_case_sensitive_isValid;

    QString m_dimension_name;
    bool m_dimension_name_isSet;
    bool m_dimension_name_isValid;

    QList<QString> m_expressions;
    bool m_expressions_isSet;
    bool m_expressions_isValid;

    bool m_r_not;
    bool m_r_not_isSet;
    bool m_r_not_isValid;

    QString m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDimensionFilter)

#endif // OAIDimensionFilter_H
