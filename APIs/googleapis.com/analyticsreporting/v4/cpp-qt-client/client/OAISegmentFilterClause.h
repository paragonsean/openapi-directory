/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISegmentFilterClause.h
 *
 * Filter Clause to be used in a segment definition, can be wither a metric or a dimension filter.
 */

#ifndef OAISegmentFilterClause_H
#define OAISegmentFilterClause_H

#include <QJsonObject>

#include "OAISegmentDimensionFilter.h"
#include "OAISegmentMetricFilter.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISegmentDimensionFilter;
class OAISegmentMetricFilter;

class OAISegmentFilterClause : public OAIObject {
public:
    OAISegmentFilterClause();
    OAISegmentFilterClause(QString json);
    ~OAISegmentFilterClause() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISegmentDimensionFilter getDimensionFilter() const;
    void setDimensionFilter(const OAISegmentDimensionFilter &dimension_filter);
    bool is_dimension_filter_Set() const;
    bool is_dimension_filter_Valid() const;

    OAISegmentMetricFilter getMetricFilter() const;
    void setMetricFilter(const OAISegmentMetricFilter &metric_filter);
    bool is_metric_filter_Set() const;
    bool is_metric_filter_Valid() const;

    bool isRNot() const;
    void setRNot(const bool &r_not);
    bool is_r_not_Set() const;
    bool is_r_not_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISegmentDimensionFilter m_dimension_filter;
    bool m_dimension_filter_isSet;
    bool m_dimension_filter_isValid;

    OAISegmentMetricFilter m_metric_filter;
    bool m_metric_filter_isSet;
    bool m_metric_filter_isValid;

    bool m_r_not;
    bool m_r_not_isSet;
    bool m_r_not_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISegmentFilterClause)

#endif // OAISegmentFilterClause_H
