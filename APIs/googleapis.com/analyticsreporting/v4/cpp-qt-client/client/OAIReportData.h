/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportData.h
 *
 * The data part of the report.
 */

#ifndef OAIReportData_H
#define OAIReportData_H

#include <QJsonObject>

#include "OAIDateRangeValues.h"
#include "OAIReportRow.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDateRangeValues;
class OAIReportRow;

class OAIReportData : public OAIObject {
public:
    OAIReportData();
    OAIReportData(QString json);
    ~OAIReportData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataLastRefreshed() const;
    void setDataLastRefreshed(const QString &data_last_refreshed);
    bool is_data_last_refreshed_Set() const;
    bool is_data_last_refreshed_Valid() const;

    QString getEmptyReason() const;
    void setEmptyReason(const QString &empty_reason);
    bool is_empty_reason_Set() const;
    bool is_empty_reason_Valid() const;

    bool isIsDataGolden() const;
    void setIsDataGolden(const bool &is_data_golden);
    bool is_is_data_golden_Set() const;
    bool is_is_data_golden_Valid() const;

    QList<OAIDateRangeValues> getMaximums() const;
    void setMaximums(const QList<OAIDateRangeValues> &maximums);
    bool is_maximums_Set() const;
    bool is_maximums_Valid() const;

    QList<OAIDateRangeValues> getMinimums() const;
    void setMinimums(const QList<OAIDateRangeValues> &minimums);
    bool is_minimums_Set() const;
    bool is_minimums_Valid() const;

    qint32 getRowCount() const;
    void setRowCount(const qint32 &row_count);
    bool is_row_count_Set() const;
    bool is_row_count_Valid() const;

    QList<OAIReportRow> getRows() const;
    void setRows(const QList<OAIReportRow> &rows);
    bool is_rows_Set() const;
    bool is_rows_Valid() const;

    QList<QString> getSamplesReadCounts() const;
    void setSamplesReadCounts(const QList<QString> &samples_read_counts);
    bool is_samples_read_counts_Set() const;
    bool is_samples_read_counts_Valid() const;

    QList<QString> getSamplingSpaceSizes() const;
    void setSamplingSpaceSizes(const QList<QString> &sampling_space_sizes);
    bool is_sampling_space_sizes_Set() const;
    bool is_sampling_space_sizes_Valid() const;

    QList<OAIDateRangeValues> getTotals() const;
    void setTotals(const QList<OAIDateRangeValues> &totals);
    bool is_totals_Set() const;
    bool is_totals_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_last_refreshed;
    bool m_data_last_refreshed_isSet;
    bool m_data_last_refreshed_isValid;

    QString m_empty_reason;
    bool m_empty_reason_isSet;
    bool m_empty_reason_isValid;

    bool m_is_data_golden;
    bool m_is_data_golden_isSet;
    bool m_is_data_golden_isValid;

    QList<OAIDateRangeValues> m_maximums;
    bool m_maximums_isSet;
    bool m_maximums_isValid;

    QList<OAIDateRangeValues> m_minimums;
    bool m_minimums_isSet;
    bool m_minimums_isValid;

    qint32 m_row_count;
    bool m_row_count_isSet;
    bool m_row_count_isValid;

    QList<OAIReportRow> m_rows;
    bool m_rows_isSet;
    bool m_rows_isValid;

    QList<QString> m_samples_read_counts;
    bool m_samples_read_counts_isSet;
    bool m_samples_read_counts_isValid;

    QList<QString> m_sampling_space_sizes;
    bool m_sampling_space_sizes_isSet;
    bool m_sampling_space_sizes_isValid;

    QList<OAIDateRangeValues> m_totals;
    bool m_totals_isSet;
    bool m_totals_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportData)

#endif // OAIReportData_H
