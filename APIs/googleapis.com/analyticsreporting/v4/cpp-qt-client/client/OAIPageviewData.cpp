/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPageviewData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPageviewData::OAIPageviewData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPageviewData::OAIPageviewData() {
    this->initializeModel();
}

OAIPageviewData::~OAIPageviewData() {}

void OAIPageviewData::initializeModel() {

    m_page_path_isSet = false;
    m_page_path_isValid = false;

    m_page_title_isSet = false;
    m_page_title_isValid = false;
}

void OAIPageviewData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPageviewData::fromJsonObject(QJsonObject json) {

    m_page_path_isValid = ::OpenAPI::fromJsonValue(m_page_path, json[QString("pagePath")]);
    m_page_path_isSet = !json[QString("pagePath")].isNull() && m_page_path_isValid;

    m_page_title_isValid = ::OpenAPI::fromJsonValue(m_page_title, json[QString("pageTitle")]);
    m_page_title_isSet = !json[QString("pageTitle")].isNull() && m_page_title_isValid;
}

QString OAIPageviewData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPageviewData::asJsonObject() const {
    QJsonObject obj;
    if (m_page_path_isSet) {
        obj.insert(QString("pagePath"), ::OpenAPI::toJsonValue(m_page_path));
    }
    if (m_page_title_isSet) {
        obj.insert(QString("pageTitle"), ::OpenAPI::toJsonValue(m_page_title));
    }
    return obj;
}

QString OAIPageviewData::getPagePath() const {
    return m_page_path;
}
void OAIPageviewData::setPagePath(const QString &page_path) {
    m_page_path = page_path;
    m_page_path_isSet = true;
}

bool OAIPageviewData::is_page_path_Set() const{
    return m_page_path_isSet;
}

bool OAIPageviewData::is_page_path_Valid() const{
    return m_page_path_isValid;
}

QString OAIPageviewData::getPageTitle() const {
    return m_page_title;
}
void OAIPageviewData::setPageTitle(const QString &page_title) {
    m_page_title = page_title;
    m_page_title_isSet = true;
}

bool OAIPageviewData::is_page_title_Set() const{
    return m_page_title_isSet;
}

bool OAIPageviewData::is_page_title_Valid() const{
    return m_page_title_isValid;
}

bool OAIPageviewData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_page_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPageviewData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
