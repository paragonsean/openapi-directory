/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISimpleSegment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISimpleSegment::OAISimpleSegment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISimpleSegment::OAISimpleSegment() {
    this->initializeModel();
}

OAISimpleSegment::~OAISimpleSegment() {}

void OAISimpleSegment::initializeModel() {

    m_or_filters_for_segment_isSet = false;
    m_or_filters_for_segment_isValid = false;
}

void OAISimpleSegment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISimpleSegment::fromJsonObject(QJsonObject json) {

    m_or_filters_for_segment_isValid = ::OpenAPI::fromJsonValue(m_or_filters_for_segment, json[QString("orFiltersForSegment")]);
    m_or_filters_for_segment_isSet = !json[QString("orFiltersForSegment")].isNull() && m_or_filters_for_segment_isValid;
}

QString OAISimpleSegment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISimpleSegment::asJsonObject() const {
    QJsonObject obj;
    if (m_or_filters_for_segment.size() > 0) {
        obj.insert(QString("orFiltersForSegment"), ::OpenAPI::toJsonValue(m_or_filters_for_segment));
    }
    return obj;
}

QList<OAIOrFiltersForSegment> OAISimpleSegment::getOrFiltersForSegment() const {
    return m_or_filters_for_segment;
}
void OAISimpleSegment::setOrFiltersForSegment(const QList<OAIOrFiltersForSegment> &or_filters_for_segment) {
    m_or_filters_for_segment = or_filters_for_segment;
    m_or_filters_for_segment_isSet = true;
}

bool OAISimpleSegment::is_or_filters_for_segment_Set() const{
    return m_or_filters_for_segment_isSet;
}

bool OAISimpleSegment::is_or_filters_for_segment_Valid() const{
    return m_or_filters_for_segment_isValid;
}

bool OAISimpleSegment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_or_filters_for_segment.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISimpleSegment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
