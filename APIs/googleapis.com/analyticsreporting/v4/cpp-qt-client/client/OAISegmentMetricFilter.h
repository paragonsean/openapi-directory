/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISegmentMetricFilter.h
 *
 * Metric filter to be used in a segment filter clause.
 */

#ifndef OAISegmentMetricFilter_H
#define OAISegmentMetricFilter_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISegmentMetricFilter : public OAIObject {
public:
    OAISegmentMetricFilter();
    OAISegmentMetricFilter(QString json);
    ~OAISegmentMetricFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComparisonValue() const;
    void setComparisonValue(const QString &comparison_value);
    bool is_comparison_value_Set() const;
    bool is_comparison_value_Valid() const;

    QString getMaxComparisonValue() const;
    void setMaxComparisonValue(const QString &max_comparison_value);
    bool is_max_comparison_value_Set() const;
    bool is_max_comparison_value_Valid() const;

    QString getMetricName() const;
    void setMetricName(const QString &metric_name);
    bool is_metric_name_Set() const;
    bool is_metric_name_Valid() const;

    QString getROperator() const;
    void setROperator(const QString &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_comparison_value;
    bool m_comparison_value_isSet;
    bool m_comparison_value_isValid;

    QString m_max_comparison_value;
    bool m_max_comparison_value_isSet;
    bool m_max_comparison_value_isValid;

    QString m_metric_name;
    bool m_metric_name_isSet;
    bool m_metric_name_isValid;

    QString m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISegmentMetricFilter)

#endif // OAISegmentMetricFilter_H
