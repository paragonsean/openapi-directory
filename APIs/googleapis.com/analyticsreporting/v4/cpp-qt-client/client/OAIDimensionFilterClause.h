/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDimensionFilterClause.h
 *
 * A group of dimension filters. Set the operator value to specify how the filters are logically combined.
 */

#ifndef OAIDimensionFilterClause_H
#define OAIDimensionFilterClause_H

#include <QJsonObject>

#include "OAIDimensionFilter.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensionFilter;

class OAIDimensionFilterClause : public OAIObject {
public:
    OAIDimensionFilterClause();
    OAIDimensionFilterClause(QString json);
    ~OAIDimensionFilterClause() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDimensionFilter> getFilters() const;
    void setFilters(const QList<OAIDimensionFilter> &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    QString getROperator() const;
    void setROperator(const QString &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDimensionFilter> m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    QString m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDimensionFilterClause)

#endif // OAIDimensionFilterClause_H
