/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoalData.h
 *
 * Represents all the details pertaining to a goal.
 */

#ifndef OAIGoalData_H
#define OAIGoalData_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoalData : public OAIObject {
public:
    OAIGoalData();
    OAIGoalData(QString json);
    ~OAIGoalData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGoalCompletionLocation() const;
    void setGoalCompletionLocation(const QString &goal_completion_location);
    bool is_goal_completion_location_Set() const;
    bool is_goal_completion_location_Valid() const;

    QString getGoalCompletions() const;
    void setGoalCompletions(const QString &goal_completions);
    bool is_goal_completions_Set() const;
    bool is_goal_completions_Valid() const;

    qint32 getGoalIndex() const;
    void setGoalIndex(const qint32 &goal_index);
    bool is_goal_index_Set() const;
    bool is_goal_index_Valid() const;

    QString getGoalName() const;
    void setGoalName(const QString &goal_name);
    bool is_goal_name_Set() const;
    bool is_goal_name_Valid() const;

    QString getGoalPreviousStep1() const;
    void setGoalPreviousStep1(const QString &goal_previous_step1);
    bool is_goal_previous_step1_Set() const;
    bool is_goal_previous_step1_Valid() const;

    QString getGoalPreviousStep2() const;
    void setGoalPreviousStep2(const QString &goal_previous_step2);
    bool is_goal_previous_step2_Set() const;
    bool is_goal_previous_step2_Valid() const;

    QString getGoalPreviousStep3() const;
    void setGoalPreviousStep3(const QString &goal_previous_step3);
    bool is_goal_previous_step3_Set() const;
    bool is_goal_previous_step3_Valid() const;

    double getGoalValue() const;
    void setGoalValue(const double &goal_value);
    bool is_goal_value_Set() const;
    bool is_goal_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_goal_completion_location;
    bool m_goal_completion_location_isSet;
    bool m_goal_completion_location_isValid;

    QString m_goal_completions;
    bool m_goal_completions_isSet;
    bool m_goal_completions_isValid;

    qint32 m_goal_index;
    bool m_goal_index_isSet;
    bool m_goal_index_isValid;

    QString m_goal_name;
    bool m_goal_name_isSet;
    bool m_goal_name_isValid;

    QString m_goal_previous_step1;
    bool m_goal_previous_step1_isSet;
    bool m_goal_previous_step1_isValid;

    QString m_goal_previous_step2;
    bool m_goal_previous_step2_isSet;
    bool m_goal_previous_step2_isValid;

    QString m_goal_previous_step3;
    bool m_goal_previous_step3_isSet;
    bool m_goal_previous_step3_isValid;

    double m_goal_value;
    bool m_goal_value_isSet;
    bool m_goal_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoalData)

#endif // OAIGoalData_H
