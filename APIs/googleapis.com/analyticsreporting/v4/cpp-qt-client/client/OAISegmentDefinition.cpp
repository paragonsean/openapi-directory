/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISegmentDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISegmentDefinition::OAISegmentDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISegmentDefinition::OAISegmentDefinition() {
    this->initializeModel();
}

OAISegmentDefinition::~OAISegmentDefinition() {}

void OAISegmentDefinition::initializeModel() {

    m_segment_filters_isSet = false;
    m_segment_filters_isValid = false;
}

void OAISegmentDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISegmentDefinition::fromJsonObject(QJsonObject json) {

    m_segment_filters_isValid = ::OpenAPI::fromJsonValue(m_segment_filters, json[QString("segmentFilters")]);
    m_segment_filters_isSet = !json[QString("segmentFilters")].isNull() && m_segment_filters_isValid;
}

QString OAISegmentDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISegmentDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_segment_filters.size() > 0) {
        obj.insert(QString("segmentFilters"), ::OpenAPI::toJsonValue(m_segment_filters));
    }
    return obj;
}

QList<OAISegmentFilter> OAISegmentDefinition::getSegmentFilters() const {
    return m_segment_filters;
}
void OAISegmentDefinition::setSegmentFilters(const QList<OAISegmentFilter> &segment_filters) {
    m_segment_filters = segment_filters;
    m_segment_filters_isSet = true;
}

bool OAISegmentDefinition::is_segment_filters_Set() const{
    return m_segment_filters_isSet;
}

bool OAISegmentDefinition::is_segment_filters_Valid() const{
    return m_segment_filters_isValid;
}

bool OAISegmentDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_segment_filters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISegmentDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
