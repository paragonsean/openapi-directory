/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetric.h
 *
 * [Metrics](https://support.google.com/analytics/answer/1033861) are the quantitative measurements. For example, the metric &#x60;ga:users&#x60; indicates the total number of users for the requested time period.
 */

#ifndef OAIMetric_H
#define OAIMetric_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMetric : public OAIObject {
public:
    OAIMetric();
    OAIMetric(QString json);
    ~OAIMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    QString getExpression() const;
    void setExpression(const QString &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    QString getFormattingType() const;
    void setFormattingType(const QString &formatting_type);
    bool is_formatting_type_Set() const;
    bool is_formatting_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    QString m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    QString m_formatting_type;
    bool m_formatting_type_isSet;
    bool m_formatting_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetric)

#endif // OAIMetric_H
