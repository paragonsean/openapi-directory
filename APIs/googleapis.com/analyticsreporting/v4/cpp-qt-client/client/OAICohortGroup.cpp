/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICohortGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICohortGroup::OAICohortGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICohortGroup::OAICohortGroup() {
    this->initializeModel();
}

OAICohortGroup::~OAICohortGroup() {}

void OAICohortGroup::initializeModel() {

    m_cohorts_isSet = false;
    m_cohorts_isValid = false;

    m_lifetime_value_isSet = false;
    m_lifetime_value_isValid = false;
}

void OAICohortGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICohortGroup::fromJsonObject(QJsonObject json) {

    m_cohorts_isValid = ::OpenAPI::fromJsonValue(m_cohorts, json[QString("cohorts")]);
    m_cohorts_isSet = !json[QString("cohorts")].isNull() && m_cohorts_isValid;

    m_lifetime_value_isValid = ::OpenAPI::fromJsonValue(m_lifetime_value, json[QString("lifetimeValue")]);
    m_lifetime_value_isSet = !json[QString("lifetimeValue")].isNull() && m_lifetime_value_isValid;
}

QString OAICohortGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICohortGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_cohorts.size() > 0) {
        obj.insert(QString("cohorts"), ::OpenAPI::toJsonValue(m_cohorts));
    }
    if (m_lifetime_value_isSet) {
        obj.insert(QString("lifetimeValue"), ::OpenAPI::toJsonValue(m_lifetime_value));
    }
    return obj;
}

QList<OAICohort> OAICohortGroup::getCohorts() const {
    return m_cohorts;
}
void OAICohortGroup::setCohorts(const QList<OAICohort> &cohorts) {
    m_cohorts = cohorts;
    m_cohorts_isSet = true;
}

bool OAICohortGroup::is_cohorts_Set() const{
    return m_cohorts_isSet;
}

bool OAICohortGroup::is_cohorts_Valid() const{
    return m_cohorts_isValid;
}

bool OAICohortGroup::isLifetimeValue() const {
    return m_lifetime_value;
}
void OAICohortGroup::setLifetimeValue(const bool &lifetime_value) {
    m_lifetime_value = lifetime_value;
    m_lifetime_value_isSet = true;
}

bool OAICohortGroup::is_lifetime_value_Set() const{
    return m_lifetime_value_isSet;
}

bool OAICohortGroup::is_lifetime_value_Valid() const{
    return m_lifetime_value_isValid;
}

bool OAICohortGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cohorts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_lifetime_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICohortGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
