/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Activity from './model/Activity';
import Cohort from './model/Cohort';
import CohortGroup from './model/CohortGroup';
import ColumnHeader from './model/ColumnHeader';
import CustomDimension from './model/CustomDimension';
import DateRange from './model/DateRange';
import DateRangeValues from './model/DateRangeValues';
import Dimension from './model/Dimension';
import DimensionFilter from './model/DimensionFilter';
import DimensionFilterClause from './model/DimensionFilterClause';
import DynamicSegment from './model/DynamicSegment';
import EcommerceData from './model/EcommerceData';
import EventData from './model/EventData';
import GetReportsRequest from './model/GetReportsRequest';
import GetReportsResponse from './model/GetReportsResponse';
import GoalData from './model/GoalData';
import GoalSetData from './model/GoalSetData';
import Metric from './model/Metric';
import MetricFilter from './model/MetricFilter';
import MetricFilterClause from './model/MetricFilterClause';
import MetricHeader from './model/MetricHeader';
import MetricHeaderEntry from './model/MetricHeaderEntry';
import OrFiltersForSegment from './model/OrFiltersForSegment';
import OrderBy from './model/OrderBy';
import PageviewData from './model/PageviewData';
import Pivot from './model/Pivot';
import PivotHeader from './model/PivotHeader';
import PivotHeaderEntry from './model/PivotHeaderEntry';
import PivotValueRegion from './model/PivotValueRegion';
import ProductData from './model/ProductData';
import Report from './model/Report';
import ReportData from './model/ReportData';
import ReportRequest from './model/ReportRequest';
import ReportRow from './model/ReportRow';
import ResourceQuotasRemaining from './model/ResourceQuotasRemaining';
import ScreenviewData from './model/ScreenviewData';
import SearchUserActivityRequest from './model/SearchUserActivityRequest';
import SearchUserActivityResponse from './model/SearchUserActivityResponse';
import Segment from './model/Segment';
import SegmentDefinition from './model/SegmentDefinition';
import SegmentDimensionFilter from './model/SegmentDimensionFilter';
import SegmentFilter from './model/SegmentFilter';
import SegmentFilterClause from './model/SegmentFilterClause';
import SegmentMetricFilter from './model/SegmentMetricFilter';
import SegmentSequenceStep from './model/SegmentSequenceStep';
import SequenceSegment from './model/SequenceSegment';
import SimpleSegment from './model/SimpleSegment';
import TransactionData from './model/TransactionData';
import User from './model/User';
import UserActivitySession from './model/UserActivitySession';
import ReportsApi from './api/ReportsApi';
import UserActivityApi from './api/UserActivityApi';


/**
* Accesses Analytics report data..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AnalyticsReportingApi = require('index'); // See note below*.
* var xxxSvc = new AnalyticsReportingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AnalyticsReportingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AnalyticsReportingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AnalyticsReportingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v4
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Activity model constructor.
     * @property {module:model/Activity}
     */
    Activity,

    /**
     * The Cohort model constructor.
     * @property {module:model/Cohort}
     */
    Cohort,

    /**
     * The CohortGroup model constructor.
     * @property {module:model/CohortGroup}
     */
    CohortGroup,

    /**
     * The ColumnHeader model constructor.
     * @property {module:model/ColumnHeader}
     */
    ColumnHeader,

    /**
     * The CustomDimension model constructor.
     * @property {module:model/CustomDimension}
     */
    CustomDimension,

    /**
     * The DateRange model constructor.
     * @property {module:model/DateRange}
     */
    DateRange,

    /**
     * The DateRangeValues model constructor.
     * @property {module:model/DateRangeValues}
     */
    DateRangeValues,

    /**
     * The Dimension model constructor.
     * @property {module:model/Dimension}
     */
    Dimension,

    /**
     * The DimensionFilter model constructor.
     * @property {module:model/DimensionFilter}
     */
    DimensionFilter,

    /**
     * The DimensionFilterClause model constructor.
     * @property {module:model/DimensionFilterClause}
     */
    DimensionFilterClause,

    /**
     * The DynamicSegment model constructor.
     * @property {module:model/DynamicSegment}
     */
    DynamicSegment,

    /**
     * The EcommerceData model constructor.
     * @property {module:model/EcommerceData}
     */
    EcommerceData,

    /**
     * The EventData model constructor.
     * @property {module:model/EventData}
     */
    EventData,

    /**
     * The GetReportsRequest model constructor.
     * @property {module:model/GetReportsRequest}
     */
    GetReportsRequest,

    /**
     * The GetReportsResponse model constructor.
     * @property {module:model/GetReportsResponse}
     */
    GetReportsResponse,

    /**
     * The GoalData model constructor.
     * @property {module:model/GoalData}
     */
    GoalData,

    /**
     * The GoalSetData model constructor.
     * @property {module:model/GoalSetData}
     */
    GoalSetData,

    /**
     * The Metric model constructor.
     * @property {module:model/Metric}
     */
    Metric,

    /**
     * The MetricFilter model constructor.
     * @property {module:model/MetricFilter}
     */
    MetricFilter,

    /**
     * The MetricFilterClause model constructor.
     * @property {module:model/MetricFilterClause}
     */
    MetricFilterClause,

    /**
     * The MetricHeader model constructor.
     * @property {module:model/MetricHeader}
     */
    MetricHeader,

    /**
     * The MetricHeaderEntry model constructor.
     * @property {module:model/MetricHeaderEntry}
     */
    MetricHeaderEntry,

    /**
     * The OrFiltersForSegment model constructor.
     * @property {module:model/OrFiltersForSegment}
     */
    OrFiltersForSegment,

    /**
     * The OrderBy model constructor.
     * @property {module:model/OrderBy}
     */
    OrderBy,

    /**
     * The PageviewData model constructor.
     * @property {module:model/PageviewData}
     */
    PageviewData,

    /**
     * The Pivot model constructor.
     * @property {module:model/Pivot}
     */
    Pivot,

    /**
     * The PivotHeader model constructor.
     * @property {module:model/PivotHeader}
     */
    PivotHeader,

    /**
     * The PivotHeaderEntry model constructor.
     * @property {module:model/PivotHeaderEntry}
     */
    PivotHeaderEntry,

    /**
     * The PivotValueRegion model constructor.
     * @property {module:model/PivotValueRegion}
     */
    PivotValueRegion,

    /**
     * The ProductData model constructor.
     * @property {module:model/ProductData}
     */
    ProductData,

    /**
     * The Report model constructor.
     * @property {module:model/Report}
     */
    Report,

    /**
     * The ReportData model constructor.
     * @property {module:model/ReportData}
     */
    ReportData,

    /**
     * The ReportRequest model constructor.
     * @property {module:model/ReportRequest}
     */
    ReportRequest,

    /**
     * The ReportRow model constructor.
     * @property {module:model/ReportRow}
     */
    ReportRow,

    /**
     * The ResourceQuotasRemaining model constructor.
     * @property {module:model/ResourceQuotasRemaining}
     */
    ResourceQuotasRemaining,

    /**
     * The ScreenviewData model constructor.
     * @property {module:model/ScreenviewData}
     */
    ScreenviewData,

    /**
     * The SearchUserActivityRequest model constructor.
     * @property {module:model/SearchUserActivityRequest}
     */
    SearchUserActivityRequest,

    /**
     * The SearchUserActivityResponse model constructor.
     * @property {module:model/SearchUserActivityResponse}
     */
    SearchUserActivityResponse,

    /**
     * The Segment model constructor.
     * @property {module:model/Segment}
     */
    Segment,

    /**
     * The SegmentDefinition model constructor.
     * @property {module:model/SegmentDefinition}
     */
    SegmentDefinition,

    /**
     * The SegmentDimensionFilter model constructor.
     * @property {module:model/SegmentDimensionFilter}
     */
    SegmentDimensionFilter,

    /**
     * The SegmentFilter model constructor.
     * @property {module:model/SegmentFilter}
     */
    SegmentFilter,

    /**
     * The SegmentFilterClause model constructor.
     * @property {module:model/SegmentFilterClause}
     */
    SegmentFilterClause,

    /**
     * The SegmentMetricFilter model constructor.
     * @property {module:model/SegmentMetricFilter}
     */
    SegmentMetricFilter,

    /**
     * The SegmentSequenceStep model constructor.
     * @property {module:model/SegmentSequenceStep}
     */
    SegmentSequenceStep,

    /**
     * The SequenceSegment model constructor.
     * @property {module:model/SequenceSegment}
     */
    SequenceSegment,

    /**
     * The SimpleSegment model constructor.
     * @property {module:model/SimpleSegment}
     */
    SimpleSegment,

    /**
     * The TransactionData model constructor.
     * @property {module:model/TransactionData}
     */
    TransactionData,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserActivitySession model constructor.
     * @property {module:model/UserActivitySession}
     */
    UserActivitySession,

    /**
    * The ReportsApi service constructor.
    * @property {module:api/ReportsApi}
    */
    ReportsApi,

    /**
    * The UserActivityApi service constructor.
    * @property {module:api/UserActivityApi}
    */
    UserActivityApi
};
