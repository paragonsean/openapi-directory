/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Cohort from './Cohort';

/**
 * The CohortGroup model module.
 * @module model/CohortGroup
 * @version v4
 */
class CohortGroup {
    /**
     * Constructs a new <code>CohortGroup</code>.
     * Defines a cohort group. For example: \&quot;cohortGroup\&quot;: { \&quot;cohorts\&quot;: [{ \&quot;name\&quot;: \&quot;cohort 1\&quot;, \&quot;type\&quot;: \&quot;FIRST_VISIT_DATE\&quot;, \&quot;dateRange\&quot;: { \&quot;startDate\&quot;: \&quot;2015-08-01\&quot;, \&quot;endDate\&quot;: \&quot;2015-08-01\&quot; } },{ \&quot;name\&quot;: \&quot;cohort 2\&quot; \&quot;type\&quot;: \&quot;FIRST_VISIT_DATE\&quot; \&quot;dateRange\&quot;: { \&quot;startDate\&quot;: \&quot;2015-07-01\&quot;, \&quot;endDate\&quot;: \&quot;2015-07-01\&quot; } }] }
     * @alias module:model/CohortGroup
     */
    constructor() { 
        
        CohortGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CohortGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CohortGroup} obj Optional instance to populate.
     * @return {module:model/CohortGroup} The populated <code>CohortGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CohortGroup();

            if (data.hasOwnProperty('cohorts')) {
                obj['cohorts'] = ApiClient.convertToType(data['cohorts'], [Cohort]);
            }
            if (data.hasOwnProperty('lifetimeValue')) {
                obj['lifetimeValue'] = ApiClient.convertToType(data['lifetimeValue'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CohortGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CohortGroup</code>.
     */
    static validateJSON(data) {
        if (data['cohorts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['cohorts'])) {
                throw new Error("Expected the field `cohorts` to be an array in the JSON data but got " + data['cohorts']);
            }
            // validate the optional field `cohorts` (array)
            for (const item of data['cohorts']) {
                Cohort.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The definition for the cohort.
 * @member {Array.<module:model/Cohort>} cohorts
 */
CohortGroup.prototype['cohorts'] = undefined;

/**
 * Enable Life Time Value (LTV). LTV measures lifetime value for users acquired through different channels. Please see: [Cohort Analysis](https://support.google.com/analytics/answer/6074676) and [Lifetime Value](https://support.google.com/analytics/answer/6182550) If the value of lifetimeValue is false: - The metric values are similar to the values in the web interface cohort report. - The cohort definition date ranges must be aligned to the calendar week and month. i.e. while requesting `ga:cohortNthWeek` the `startDate` in the cohort definition should be a Sunday and the `endDate` should be the following Saturday, and for `ga:cohortNthMonth`, the `startDate` should be the 1st of the month and `endDate` should be the last day of the month. When the lifetimeValue is true: - The metric values will correspond to the values in the web interface LifeTime value report. - The Lifetime Value report shows you how user value (Revenue) and engagement (Appviews, Goal Completions, Sessions, and Session Duration) grow during the 90 days after a user is acquired. - The metrics are calculated as a cumulative average per user per the time increment. - The cohort definition date ranges need not be aligned to the calendar week and month boundaries. - The `viewId` must be an [app view ID](https://support.google.com/analytics/answer/2649553#WebVersusAppViews)
 * @member {Boolean} lifetimeValue
 */
CohortGroup.prototype['lifetimeValue'] = undefined;






export default CohortGroup;

