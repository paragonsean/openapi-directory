/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DynamicSegment from './DynamicSegment';

/**
 * The Segment model module.
 * @module model/Segment
 * @version v4
 */
class Segment {
    /**
     * Constructs a new <code>Segment</code>.
     * The segment definition, if the report needs to be segmented. A Segment is a subset of the Analytics data. For example, of the entire set of users, one Segment might be users from a particular country or city.
     * @alias module:model/Segment
     */
    constructor() { 
        
        Segment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Segment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Segment} obj Optional instance to populate.
     * @return {module:model/Segment} The populated <code>Segment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Segment();

            if (data.hasOwnProperty('dynamicSegment')) {
                obj['dynamicSegment'] = DynamicSegment.constructFromObject(data['dynamicSegment']);
            }
            if (data.hasOwnProperty('segmentId')) {
                obj['segmentId'] = ApiClient.convertToType(data['segmentId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Segment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Segment</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dynamicSegment`
        if (data['dynamicSegment']) { // data not null
          DynamicSegment.validateJSON(data['dynamicSegment']);
        }
        // ensure the json data is a string
        if (data['segmentId'] && !(typeof data['segmentId'] === 'string' || data['segmentId'] instanceof String)) {
            throw new Error("Expected the field `segmentId` to be a primitive type in the JSON string but got " + data['segmentId']);
        }

        return true;
    }


}



/**
 * @member {module:model/DynamicSegment} dynamicSegment
 */
Segment.prototype['dynamicSegment'] = undefined;

/**
 * The segment ID of a built-in or custom segment, for example `gaid::-3`.
 * @member {String} segmentId
 */
Segment.prototype['segmentId'] = undefined;






export default Segment;

