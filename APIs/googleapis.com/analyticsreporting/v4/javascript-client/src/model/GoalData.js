/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoalData model module.
 * @module model/GoalData
 * @version v4
 */
class GoalData {
    /**
     * Constructs a new <code>GoalData</code>.
     * Represents all the details pertaining to a goal.
     * @alias module:model/GoalData
     */
    constructor() { 
        
        GoalData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoalData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoalData} obj Optional instance to populate.
     * @return {module:model/GoalData} The populated <code>GoalData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoalData();

            if (data.hasOwnProperty('goalCompletionLocation')) {
                obj['goalCompletionLocation'] = ApiClient.convertToType(data['goalCompletionLocation'], 'String');
            }
            if (data.hasOwnProperty('goalCompletions')) {
                obj['goalCompletions'] = ApiClient.convertToType(data['goalCompletions'], 'String');
            }
            if (data.hasOwnProperty('goalIndex')) {
                obj['goalIndex'] = ApiClient.convertToType(data['goalIndex'], 'Number');
            }
            if (data.hasOwnProperty('goalName')) {
                obj['goalName'] = ApiClient.convertToType(data['goalName'], 'String');
            }
            if (data.hasOwnProperty('goalPreviousStep1')) {
                obj['goalPreviousStep1'] = ApiClient.convertToType(data['goalPreviousStep1'], 'String');
            }
            if (data.hasOwnProperty('goalPreviousStep2')) {
                obj['goalPreviousStep2'] = ApiClient.convertToType(data['goalPreviousStep2'], 'String');
            }
            if (data.hasOwnProperty('goalPreviousStep3')) {
                obj['goalPreviousStep3'] = ApiClient.convertToType(data['goalPreviousStep3'], 'String');
            }
            if (data.hasOwnProperty('goalValue')) {
                obj['goalValue'] = ApiClient.convertToType(data['goalValue'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoalData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoalData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['goalCompletionLocation'] && !(typeof data['goalCompletionLocation'] === 'string' || data['goalCompletionLocation'] instanceof String)) {
            throw new Error("Expected the field `goalCompletionLocation` to be a primitive type in the JSON string but got " + data['goalCompletionLocation']);
        }
        // ensure the json data is a string
        if (data['goalCompletions'] && !(typeof data['goalCompletions'] === 'string' || data['goalCompletions'] instanceof String)) {
            throw new Error("Expected the field `goalCompletions` to be a primitive type in the JSON string but got " + data['goalCompletions']);
        }
        // ensure the json data is a string
        if (data['goalName'] && !(typeof data['goalName'] === 'string' || data['goalName'] instanceof String)) {
            throw new Error("Expected the field `goalName` to be a primitive type in the JSON string but got " + data['goalName']);
        }
        // ensure the json data is a string
        if (data['goalPreviousStep1'] && !(typeof data['goalPreviousStep1'] === 'string' || data['goalPreviousStep1'] instanceof String)) {
            throw new Error("Expected the field `goalPreviousStep1` to be a primitive type in the JSON string but got " + data['goalPreviousStep1']);
        }
        // ensure the json data is a string
        if (data['goalPreviousStep2'] && !(typeof data['goalPreviousStep2'] === 'string' || data['goalPreviousStep2'] instanceof String)) {
            throw new Error("Expected the field `goalPreviousStep2` to be a primitive type in the JSON string but got " + data['goalPreviousStep2']);
        }
        // ensure the json data is a string
        if (data['goalPreviousStep3'] && !(typeof data['goalPreviousStep3'] === 'string' || data['goalPreviousStep3'] instanceof String)) {
            throw new Error("Expected the field `goalPreviousStep3` to be a primitive type in the JSON string but got " + data['goalPreviousStep3']);
        }

        return true;
    }


}



/**
 * URL of the page where this goal was completed.
 * @member {String} goalCompletionLocation
 */
GoalData.prototype['goalCompletionLocation'] = undefined;

/**
 * Total number of goal completions in this activity.
 * @member {String} goalCompletions
 */
GoalData.prototype['goalCompletions'] = undefined;

/**
 * This identifies the goal as configured for the profile.
 * @member {Number} goalIndex
 */
GoalData.prototype['goalIndex'] = undefined;

/**
 * Name of the goal.
 * @member {String} goalName
 */
GoalData.prototype['goalName'] = undefined;

/**
 * URL of the page one step prior to the goal completion.
 * @member {String} goalPreviousStep1
 */
GoalData.prototype['goalPreviousStep1'] = undefined;

/**
 * URL of the page two steps prior to the goal completion.
 * @member {String} goalPreviousStep2
 */
GoalData.prototype['goalPreviousStep2'] = undefined;

/**
 * URL of the page three steps prior to the goal completion.
 * @member {String} goalPreviousStep3
 */
GoalData.prototype['goalPreviousStep3'] = undefined;

/**
 * Value in this goal.
 * @member {Number} goalValue
 */
GoalData.prototype['goalValue'] = undefined;






export default GoalData;

