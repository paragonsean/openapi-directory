/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserActivitySession from './UserActivitySession';

/**
 * The SearchUserActivityResponse model module.
 * @module model/SearchUserActivityResponse
 * @version v4
 */
class SearchUserActivityResponse {
    /**
     * Constructs a new <code>SearchUserActivityResponse</code>.
     * The response from &#x60;userActivity:get&#x60; call.
     * @alias module:model/SearchUserActivityResponse
     */
    constructor() { 
        
        SearchUserActivityResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchUserActivityResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchUserActivityResponse} obj Optional instance to populate.
     * @return {module:model/SearchUserActivityResponse} The populated <code>SearchUserActivityResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchUserActivityResponse();

            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('sampleRate')) {
                obj['sampleRate'] = ApiClient.convertToType(data['sampleRate'], 'Number');
            }
            if (data.hasOwnProperty('sessions')) {
                obj['sessions'] = ApiClient.convertToType(data['sessions'], [UserActivitySession]);
            }
            if (data.hasOwnProperty('totalRows')) {
                obj['totalRows'] = ApiClient.convertToType(data['totalRows'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchUserActivityResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchUserActivityResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        if (data['sessions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sessions'])) {
                throw new Error("Expected the field `sessions` to be an array in the JSON data but got " + data['sessions']);
            }
            // validate the optional field `sessions` (array)
            for (const item of data['sessions']) {
                UserActivitySession.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * This token should be passed to [SearchUserActivityRequest](#SearchUserActivityRequest) to retrieve the next page.
 * @member {String} nextPageToken
 */
SearchUserActivityResponse.prototype['nextPageToken'] = undefined;

/**
 * This field represents the [sampling rate](https://support.google.com/analytics/answer/2637192) for the given request and is a number between 0.0 to 1.0. See [developer guide](/analytics/devguides/reporting/core/v4/basics#sampling) for details.
 * @member {Number} sampleRate
 */
SearchUserActivityResponse.prototype['sampleRate'] = undefined;

/**
 * Each record represents a session (device details, duration, etc).
 * @member {Array.<module:model/UserActivitySession>} sessions
 */
SearchUserActivityResponse.prototype['sessions'] = undefined;

/**
 * Total rows returned by this query (across different pages).
 * @member {Number} totalRows
 */
SearchUserActivityResponse.prototype['totalRows'] = undefined;






export default SearchUserActivityResponse;

