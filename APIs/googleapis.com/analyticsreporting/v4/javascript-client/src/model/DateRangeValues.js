/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PivotValueRegion from './PivotValueRegion';

/**
 * The DateRangeValues model module.
 * @module model/DateRangeValues
 * @version v4
 */
class DateRangeValues {
    /**
     * Constructs a new <code>DateRangeValues</code>.
     * Used to return a list of metrics for a single DateRange / dimension combination
     * @alias module:model/DateRangeValues
     */
    constructor() { 
        
        DateRangeValues.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DateRangeValues</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateRangeValues} obj Optional instance to populate.
     * @return {module:model/DateRangeValues} The populated <code>DateRangeValues</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateRangeValues();

            if (data.hasOwnProperty('pivotValueRegions')) {
                obj['pivotValueRegions'] = ApiClient.convertToType(data['pivotValueRegions'], [PivotValueRegion]);
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DateRangeValues</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DateRangeValues</code>.
     */
    static validateJSON(data) {
        if (data['pivotValueRegions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['pivotValueRegions'])) {
                throw new Error("Expected the field `pivotValueRegions` to be an array in the JSON data but got " + data['pivotValueRegions']);
            }
            // validate the optional field `pivotValueRegions` (array)
            for (const item of data['pivotValueRegions']) {
                PivotValueRegion.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['values'])) {
            throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
        }

        return true;
    }


}



/**
 * The values of each pivot region.
 * @member {Array.<module:model/PivotValueRegion>} pivotValueRegions
 */
DateRangeValues.prototype['pivotValueRegions'] = undefined;

/**
 * Each value corresponds to each Metric in the request.
 * @member {Array.<String>} values
 */
DateRangeValues.prototype['values'] = undefined;






export default DateRangeValues;

