/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SegmentDimensionFilter from './SegmentDimensionFilter';
import SegmentMetricFilter from './SegmentMetricFilter';

/**
 * The SegmentFilterClause model module.
 * @module model/SegmentFilterClause
 * @version v4
 */
class SegmentFilterClause {
    /**
     * Constructs a new <code>SegmentFilterClause</code>.
     * Filter Clause to be used in a segment definition, can be wither a metric or a dimension filter.
     * @alias module:model/SegmentFilterClause
     */
    constructor() { 
        
        SegmentFilterClause.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SegmentFilterClause</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SegmentFilterClause} obj Optional instance to populate.
     * @return {module:model/SegmentFilterClause} The populated <code>SegmentFilterClause</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SegmentFilterClause();

            if (data.hasOwnProperty('dimensionFilter')) {
                obj['dimensionFilter'] = SegmentDimensionFilter.constructFromObject(data['dimensionFilter']);
            }
            if (data.hasOwnProperty('metricFilter')) {
                obj['metricFilter'] = SegmentMetricFilter.constructFromObject(data['metricFilter']);
            }
            if (data.hasOwnProperty('not')) {
                obj['not'] = ApiClient.convertToType(data['not'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SegmentFilterClause</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SegmentFilterClause</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dimensionFilter`
        if (data['dimensionFilter']) { // data not null
          SegmentDimensionFilter.validateJSON(data['dimensionFilter']);
        }
        // validate the optional field `metricFilter`
        if (data['metricFilter']) { // data not null
          SegmentMetricFilter.validateJSON(data['metricFilter']);
        }

        return true;
    }


}



/**
 * @member {module:model/SegmentDimensionFilter} dimensionFilter
 */
SegmentFilterClause.prototype['dimensionFilter'] = undefined;

/**
 * @member {module:model/SegmentMetricFilter} metricFilter
 */
SegmentFilterClause.prototype['metricFilter'] = undefined;

/**
 * Matches the complement (`!`) of the filter.
 * @member {Boolean} not
 */
SegmentFilterClause.prototype['not'] = undefined;






export default SegmentFilterClause;

