/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SegmentDefinition from './SegmentDefinition';

/**
 * The DynamicSegment model module.
 * @module model/DynamicSegment
 * @version v4
 */
class DynamicSegment {
    /**
     * Constructs a new <code>DynamicSegment</code>.
     * Dynamic segment definition for defining the segment within the request. A segment can select users, sessions or both.
     * @alias module:model/DynamicSegment
     */
    constructor() { 
        
        DynamicSegment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DynamicSegment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DynamicSegment} obj Optional instance to populate.
     * @return {module:model/DynamicSegment} The populated <code>DynamicSegment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DynamicSegment();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sessionSegment')) {
                obj['sessionSegment'] = SegmentDefinition.constructFromObject(data['sessionSegment']);
            }
            if (data.hasOwnProperty('userSegment')) {
                obj['userSegment'] = SegmentDefinition.constructFromObject(data['userSegment']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DynamicSegment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DynamicSegment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `sessionSegment`
        if (data['sessionSegment']) { // data not null
          SegmentDefinition.validateJSON(data['sessionSegment']);
        }
        // validate the optional field `userSegment`
        if (data['userSegment']) { // data not null
          SegmentDefinition.validateJSON(data['userSegment']);
        }

        return true;
    }


}



/**
 * The name of the dynamic segment.
 * @member {String} name
 */
DynamicSegment.prototype['name'] = undefined;

/**
 * @member {module:model/SegmentDefinition} sessionSegment
 */
DynamicSegment.prototype['sessionSegment'] = undefined;

/**
 * @member {module:model/SegmentDefinition} userSegment
 */
DynamicSegment.prototype['userSegment'] = undefined;






export default DynamicSegment;

