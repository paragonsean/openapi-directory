/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AnalyticsReportingApi);
  }
}(this, function(expect, AnalyticsReportingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AnalyticsReportingApi.Activity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Activity', function() {
    it('should create an instance of Activity', function() {
      // uncomment below and update the code to test Activity
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be.a(AnalyticsReportingApi.Activity);
    });

    it('should have the property activityTime (base name: "activityTime")', function() {
      // uncomment below and update the code to test the property activityTime
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property activityType (base name: "activityType")', function() {
      // uncomment below and update the code to test the property activityType
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property appview (base name: "appview")', function() {
      // uncomment below and update the code to test the property appview
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property campaign (base name: "campaign")', function() {
      // uncomment below and update the code to test the property campaign
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property channelGrouping (base name: "channelGrouping")', function() {
      // uncomment below and update the code to test the property channelGrouping
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property customDimension (base name: "customDimension")', function() {
      // uncomment below and update the code to test the property customDimension
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property ecommerce (base name: "ecommerce")', function() {
      // uncomment below and update the code to test the property ecommerce
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property event (base name: "event")', function() {
      // uncomment below and update the code to test the property event
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property goals (base name: "goals")', function() {
      // uncomment below and update the code to test the property goals
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property hostname (base name: "hostname")', function() {
      // uncomment below and update the code to test the property hostname
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property keyword (base name: "keyword")', function() {
      // uncomment below and update the code to test the property keyword
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property landingPagePath (base name: "landingPagePath")', function() {
      // uncomment below and update the code to test the property landingPagePath
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property medium (base name: "medium")', function() {
      // uncomment below and update the code to test the property medium
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property pageview (base name: "pageview")', function() {
      // uncomment below and update the code to test the property pageview
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new AnalyticsReportingApi.Activity();
      //expect(instance).to.be();
    });

  });

}));
