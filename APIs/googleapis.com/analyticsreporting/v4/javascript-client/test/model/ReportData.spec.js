/**
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AnalyticsReportingApi);
  }
}(this, function(expect, AnalyticsReportingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AnalyticsReportingApi.ReportData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReportData', function() {
    it('should create an instance of ReportData', function() {
      // uncomment below and update the code to test ReportData
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be.a(AnalyticsReportingApi.ReportData);
    });

    it('should have the property dataLastRefreshed (base name: "dataLastRefreshed")', function() {
      // uncomment below and update the code to test the property dataLastRefreshed
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be();
    });

    it('should have the property emptyReason (base name: "emptyReason")', function() {
      // uncomment below and update the code to test the property emptyReason
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be();
    });

    it('should have the property isDataGolden (base name: "isDataGolden")', function() {
      // uncomment below and update the code to test the property isDataGolden
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be();
    });

    it('should have the property maximums (base name: "maximums")', function() {
      // uncomment below and update the code to test the property maximums
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be();
    });

    it('should have the property minimums (base name: "minimums")', function() {
      // uncomment below and update the code to test the property minimums
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be();
    });

    it('should have the property rowCount (base name: "rowCount")', function() {
      // uncomment below and update the code to test the property rowCount
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be();
    });

    it('should have the property rows (base name: "rows")', function() {
      // uncomment below and update the code to test the property rows
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be();
    });

    it('should have the property samplesReadCounts (base name: "samplesReadCounts")', function() {
      // uncomment below and update the code to test the property samplesReadCounts
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be();
    });

    it('should have the property samplingSpaceSizes (base name: "samplingSpaceSizes")', function() {
      // uncomment below and update the code to test the property samplingSpaceSizes
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be();
    });

    it('should have the property totals (base name: "totals")', function() {
      // uncomment below and update the code to test the property totals
      //var instance = new AnalyticsReportingApi.ReportData();
      //expect(instance).to.be();
    });

  });

}));
