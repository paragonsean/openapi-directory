/*
 * Analytics Reporting API
 * Accesses Analytics report data.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CohortGroup;
import org.openapitools.client.model.DateRange;
import org.openapitools.client.model.Dimension;
import org.openapitools.client.model.DimensionFilterClause;
import org.openapitools.client.model.Metric;
import org.openapitools.client.model.MetricFilterClause;
import org.openapitools.client.model.OrderBy;
import org.openapitools.client.model.Pivot;
import org.openapitools.client.model.Segment;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ReportRequest
 */
public class ReportRequestTest {
    private final ReportRequest model = new ReportRequest();

    /**
     * Model tests for ReportRequest
     */
    @Test
    public void testReportRequest() {
        // TODO: test ReportRequest
    }

    /**
     * Test the property 'cohortGroup'
     */
    @Test
    public void cohortGroupTest() {
        // TODO: test cohortGroup
    }

    /**
     * Test the property 'dateRanges'
     */
    @Test
    public void dateRangesTest() {
        // TODO: test dateRanges
    }

    /**
     * Test the property 'dimensionFilterClauses'
     */
    @Test
    public void dimensionFilterClausesTest() {
        // TODO: test dimensionFilterClauses
    }

    /**
     * Test the property 'dimensions'
     */
    @Test
    public void dimensionsTest() {
        // TODO: test dimensions
    }

    /**
     * Test the property 'filtersExpression'
     */
    @Test
    public void filtersExpressionTest() {
        // TODO: test filtersExpression
    }

    /**
     * Test the property 'hideTotals'
     */
    @Test
    public void hideTotalsTest() {
        // TODO: test hideTotals
    }

    /**
     * Test the property 'hideValueRanges'
     */
    @Test
    public void hideValueRangesTest() {
        // TODO: test hideValueRanges
    }

    /**
     * Test the property 'includeEmptyRows'
     */
    @Test
    public void includeEmptyRowsTest() {
        // TODO: test includeEmptyRows
    }

    /**
     * Test the property 'metricFilterClauses'
     */
    @Test
    public void metricFilterClausesTest() {
        // TODO: test metricFilterClauses
    }

    /**
     * Test the property 'metrics'
     */
    @Test
    public void metricsTest() {
        // TODO: test metrics
    }

    /**
     * Test the property 'orderBys'
     */
    @Test
    public void orderBysTest() {
        // TODO: test orderBys
    }

    /**
     * Test the property 'pageSize'
     */
    @Test
    public void pageSizeTest() {
        // TODO: test pageSize
    }

    /**
     * Test the property 'pageToken'
     */
    @Test
    public void pageTokenTest() {
        // TODO: test pageToken
    }

    /**
     * Test the property 'pivots'
     */
    @Test
    public void pivotsTest() {
        // TODO: test pivots
    }

    /**
     * Test the property 'samplingLevel'
     */
    @Test
    public void samplingLevelTest() {
        // TODO: test samplingLevel
    }

    /**
     * Test the property 'segments'
     */
    @Test
    public void segmentsTest() {
        // TODO: test segments
    }

    /**
     * Test the property 'viewId'
     */
    @Test
    public void viewIdTest() {
        // TODO: test viewId
    }

}
