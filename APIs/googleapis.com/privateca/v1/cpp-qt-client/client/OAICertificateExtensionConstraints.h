/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateExtensionConstraints.h
 *
 * Describes a set of X.509 extensions that may be part of some certificate issuance controls.
 */

#ifndef OAICertificateExtensionConstraints_H
#define OAICertificateExtensionConstraints_H

#include <QJsonObject>

#include "OAIObjectId.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjectId;

class OAICertificateExtensionConstraints : public OAIObject {
public:
    OAICertificateExtensionConstraints();
    OAICertificateExtensionConstraints(QString json);
    ~OAICertificateExtensionConstraints() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIObjectId> getAdditionalExtensions() const;
    void setAdditionalExtensions(const QList<OAIObjectId> &additional_extensions);
    bool is_additional_extensions_Set() const;
    bool is_additional_extensions_Valid() const;

    QList<QString> getKnownExtensions() const;
    void setKnownExtensions(const QList<QString> &known_extensions);
    bool is_known_extensions_Set() const;
    bool is_known_extensions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIObjectId> m_additional_extensions;
    bool m_additional_extensions_isSet;
    bool m_additional_extensions_isValid;

    QList<QString> m_known_extensions;
    bool m_known_extensions_isSet;
    bool m_known_extensions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateExtensionConstraints)

#endif // OAICertificateExtensionConstraints_H
