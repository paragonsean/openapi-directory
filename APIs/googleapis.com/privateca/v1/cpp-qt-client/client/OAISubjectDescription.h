/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubjectDescription.h
 *
 * These values describe fields in an issued X.509 certificate such as the distinguished name, subject alternative names, serial number, and lifetime.
 */

#ifndef OAISubjectDescription_H
#define OAISubjectDescription_H

#include <QJsonObject>

#include "OAISubject.h"
#include "OAISubjectAltNames.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubject;
class OAISubjectAltNames;

class OAISubjectDescription : public OAIObject {
public:
    OAISubjectDescription();
    OAISubjectDescription(QString json);
    ~OAISubjectDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHexSerialNumber() const;
    void setHexSerialNumber(const QString &hex_serial_number);
    bool is_hex_serial_number_Set() const;
    bool is_hex_serial_number_Valid() const;

    QString getLifetime() const;
    void setLifetime(const QString &lifetime);
    bool is_lifetime_Set() const;
    bool is_lifetime_Valid() const;

    QString getNotAfterTime() const;
    void setNotAfterTime(const QString &not_after_time);
    bool is_not_after_time_Set() const;
    bool is_not_after_time_Valid() const;

    QString getNotBeforeTime() const;
    void setNotBeforeTime(const QString &not_before_time);
    bool is_not_before_time_Set() const;
    bool is_not_before_time_Valid() const;

    OAISubject getSubject() const;
    void setSubject(const OAISubject &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    OAISubjectAltNames getSubjectAltName() const;
    void setSubjectAltName(const OAISubjectAltNames &subject_alt_name);
    bool is_subject_alt_name_Set() const;
    bool is_subject_alt_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_hex_serial_number;
    bool m_hex_serial_number_isSet;
    bool m_hex_serial_number_isValid;

    QString m_lifetime;
    bool m_lifetime_isSet;
    bool m_lifetime_isValid;

    QString m_not_after_time;
    bool m_not_after_time_isSet;
    bool m_not_after_time_isValid;

    QString m_not_before_time;
    bool m_not_before_time_isSet;
    bool m_not_before_time_isValid;

    OAISubject m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    OAISubjectAltNames m_subject_alt_name;
    bool m_subject_alt_name_isSet;
    bool m_subject_alt_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubjectDescription)

#endif // OAISubjectDescription_H
