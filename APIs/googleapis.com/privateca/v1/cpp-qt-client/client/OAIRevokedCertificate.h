/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRevokedCertificate.h
 *
 * Describes a revoked Certificate.
 */

#ifndef OAIRevokedCertificate_H
#define OAIRevokedCertificate_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRevokedCertificate : public OAIObject {
public:
    OAIRevokedCertificate();
    OAIRevokedCertificate(QString json);
    ~OAIRevokedCertificate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertificate() const;
    void setCertificate(const QString &certificate);
    bool is_certificate_Set() const;
    bool is_certificate_Valid() const;

    QString getHexSerialNumber() const;
    void setHexSerialNumber(const QString &hex_serial_number);
    bool is_hex_serial_number_Set() const;
    bool is_hex_serial_number_Valid() const;

    QString getRevocationReason() const;
    void setRevocationReason(const QString &revocation_reason);
    bool is_revocation_reason_Set() const;
    bool is_revocation_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_certificate;
    bool m_certificate_isSet;
    bool m_certificate_isValid;

    QString m_hex_serial_number;
    bool m_hex_serial_number_isSet;
    bool m_hex_serial_number_isValid;

    QString m_revocation_reason;
    bool m_revocation_reason_isSet;
    bool m_revocation_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRevokedCertificate)

#endif // OAIRevokedCertificate_H
