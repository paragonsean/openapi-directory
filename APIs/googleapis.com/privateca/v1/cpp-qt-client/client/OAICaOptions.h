/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICaOptions.h
 *
 * Describes values that are relevant in a CA certificate.
 */

#ifndef OAICaOptions_H
#define OAICaOptions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICaOptions : public OAIObject {
public:
    OAICaOptions();
    OAICaOptions(QString json);
    ~OAICaOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsCa() const;
    void setIsCa(const bool &is_ca);
    bool is_is_ca_Set() const;
    bool is_is_ca_Valid() const;

    qint32 getMaxIssuerPathLength() const;
    void setMaxIssuerPathLength(const qint32 &max_issuer_path_length);
    bool is_max_issuer_path_length_Set() const;
    bool is_max_issuer_path_length_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_ca;
    bool m_is_ca_isSet;
    bool m_is_ca_isValid;

    qint32 m_max_issuer_path_length;
    bool m_max_issuer_path_length_isSet;
    bool m_max_issuer_path_length_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICaOptions)

#endif // OAICaOptions_H
