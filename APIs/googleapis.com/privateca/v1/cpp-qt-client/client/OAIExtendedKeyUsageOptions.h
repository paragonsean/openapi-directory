/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExtendedKeyUsageOptions.h
 *
 * KeyUsage.ExtendedKeyUsageOptions has fields that correspond to certain common OIDs that could be specified as an extended key usage value.
 */

#ifndef OAIExtendedKeyUsageOptions_H
#define OAIExtendedKeyUsageOptions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExtendedKeyUsageOptions : public OAIObject {
public:
    OAIExtendedKeyUsageOptions();
    OAIExtendedKeyUsageOptions(QString json);
    ~OAIExtendedKeyUsageOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isClientAuth() const;
    void setClientAuth(const bool &client_auth);
    bool is_client_auth_Set() const;
    bool is_client_auth_Valid() const;

    bool isCodeSigning() const;
    void setCodeSigning(const bool &code_signing);
    bool is_code_signing_Set() const;
    bool is_code_signing_Valid() const;

    bool isEmailProtection() const;
    void setEmailProtection(const bool &email_protection);
    bool is_email_protection_Set() const;
    bool is_email_protection_Valid() const;

    bool isOcspSigning() const;
    void setOcspSigning(const bool &ocsp_signing);
    bool is_ocsp_signing_Set() const;
    bool is_ocsp_signing_Valid() const;

    bool isServerAuth() const;
    void setServerAuth(const bool &server_auth);
    bool is_server_auth_Set() const;
    bool is_server_auth_Valid() const;

    bool isTimeStamping() const;
    void setTimeStamping(const bool &time_stamping);
    bool is_time_stamping_Set() const;
    bool is_time_stamping_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_client_auth;
    bool m_client_auth_isSet;
    bool m_client_auth_isValid;

    bool m_code_signing;
    bool m_code_signing_isSet;
    bool m_code_signing_isValid;

    bool m_email_protection;
    bool m_email_protection_isSet;
    bool m_email_protection_isValid;

    bool m_ocsp_signing;
    bool m_ocsp_signing_isSet;
    bool m_ocsp_signing_isValid;

    bool m_server_auth;
    bool m_server_auth_isSet;
    bool m_server_auth_isValid;

    bool m_time_stamping;
    bool m_time_stamping_isSet;
    bool m_time_stamping_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExtendedKeyUsageOptions)

#endif // OAIExtendedKeyUsageOptions_H
