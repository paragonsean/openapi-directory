/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICaPool.h
 *
 * A CaPool represents a group of CertificateAuthorities that form a trust anchor. A CaPool can be used to manage issuance policies for one or more CertificateAuthority resources and to rotate CA certificates in and out of the trust anchor.
 */

#ifndef OAICaPool_H
#define OAICaPool_H

#include <QJsonObject>

#include "OAIIssuancePolicy.h"
#include "OAIPublishingOptions.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIssuancePolicy;
class OAIPublishingOptions;

class OAICaPool : public OAIObject {
public:
    OAICaPool();
    OAICaPool(QString json);
    ~OAICaPool() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIssuancePolicy getIssuancePolicy() const;
    void setIssuancePolicy(const OAIIssuancePolicy &issuance_policy);
    bool is_issuance_policy_Set() const;
    bool is_issuance_policy_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPublishingOptions getPublishingOptions() const;
    void setPublishingOptions(const OAIPublishingOptions &publishing_options);
    bool is_publishing_options_Set() const;
    bool is_publishing_options_Valid() const;

    QString getTier() const;
    void setTier(const QString &tier);
    bool is_tier_Set() const;
    bool is_tier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIssuancePolicy m_issuance_policy;
    bool m_issuance_policy_isSet;
    bool m_issuance_policy_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPublishingOptions m_publishing_options;
    bool m_publishing_options_isSet;
    bool m_publishing_options_isValid;

    QString m_tier;
    bool m_tier_isSet;
    bool m_tier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICaPool)

#endif // OAICaPool_H
