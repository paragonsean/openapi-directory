/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRsaKeyType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRsaKeyType::OAIRsaKeyType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRsaKeyType::OAIRsaKeyType() {
    this->initializeModel();
}

OAIRsaKeyType::~OAIRsaKeyType() {}

void OAIRsaKeyType::initializeModel() {

    m_max_modulus_size_isSet = false;
    m_max_modulus_size_isValid = false;

    m_min_modulus_size_isSet = false;
    m_min_modulus_size_isValid = false;
}

void OAIRsaKeyType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRsaKeyType::fromJsonObject(QJsonObject json) {

    m_max_modulus_size_isValid = ::OpenAPI::fromJsonValue(m_max_modulus_size, json[QString("maxModulusSize")]);
    m_max_modulus_size_isSet = !json[QString("maxModulusSize")].isNull() && m_max_modulus_size_isValid;

    m_min_modulus_size_isValid = ::OpenAPI::fromJsonValue(m_min_modulus_size, json[QString("minModulusSize")]);
    m_min_modulus_size_isSet = !json[QString("minModulusSize")].isNull() && m_min_modulus_size_isValid;
}

QString OAIRsaKeyType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRsaKeyType::asJsonObject() const {
    QJsonObject obj;
    if (m_max_modulus_size_isSet) {
        obj.insert(QString("maxModulusSize"), ::OpenAPI::toJsonValue(m_max_modulus_size));
    }
    if (m_min_modulus_size_isSet) {
        obj.insert(QString("minModulusSize"), ::OpenAPI::toJsonValue(m_min_modulus_size));
    }
    return obj;
}

QString OAIRsaKeyType::getMaxModulusSize() const {
    return m_max_modulus_size;
}
void OAIRsaKeyType::setMaxModulusSize(const QString &max_modulus_size) {
    m_max_modulus_size = max_modulus_size;
    m_max_modulus_size_isSet = true;
}

bool OAIRsaKeyType::is_max_modulus_size_Set() const{
    return m_max_modulus_size_isSet;
}

bool OAIRsaKeyType::is_max_modulus_size_Valid() const{
    return m_max_modulus_size_isValid;
}

QString OAIRsaKeyType::getMinModulusSize() const {
    return m_min_modulus_size;
}
void OAIRsaKeyType::setMinModulusSize(const QString &min_modulus_size) {
    m_min_modulus_size = min_modulus_size;
    m_min_modulus_size_isSet = true;
}

bool OAIRsaKeyType::is_min_modulus_size_Set() const{
    return m_min_modulus_size_isSet;
}

bool OAIRsaKeyType::is_min_modulus_size_Valid() const{
    return m_min_modulus_size_isValid;
}

bool OAIRsaKeyType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_modulus_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_modulus_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRsaKeyType::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
