/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateTemplate.h
 *
 * A CertificateTemplate refers to a managed template for certificate issuance.
 */

#ifndef OAICertificateTemplate_H
#define OAICertificateTemplate_H

#include <QJsonObject>

#include "OAICertificateExtensionConstraints.h"
#include "OAICertificateIdentityConstraints.h"
#include "OAIX509Parameters.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICertificateIdentityConstraints;
class OAICertificateExtensionConstraints;
class OAIX509Parameters;

class OAICertificateTemplate : public OAIObject {
public:
    OAICertificateTemplate();
    OAICertificateTemplate(QString json);
    ~OAICertificateTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAICertificateIdentityConstraints getIdentityConstraints() const;
    void setIdentityConstraints(const OAICertificateIdentityConstraints &identity_constraints);
    bool is_identity_constraints_Set() const;
    bool is_identity_constraints_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getMaximumLifetime() const;
    void setMaximumLifetime(const QString &maximum_lifetime);
    bool is_maximum_lifetime_Set() const;
    bool is_maximum_lifetime_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICertificateExtensionConstraints getPassthroughExtensions() const;
    void setPassthroughExtensions(const OAICertificateExtensionConstraints &passthrough_extensions);
    bool is_passthrough_extensions_Set() const;
    bool is_passthrough_extensions_Valid() const;

    OAIX509Parameters getPredefinedValues() const;
    void setPredefinedValues(const OAIX509Parameters &predefined_values);
    bool is_predefined_values_Set() const;
    bool is_predefined_values_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAICertificateIdentityConstraints m_identity_constraints;
    bool m_identity_constraints_isSet;
    bool m_identity_constraints_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_maximum_lifetime;
    bool m_maximum_lifetime_isSet;
    bool m_maximum_lifetime_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICertificateExtensionConstraints m_passthrough_extensions;
    bool m_passthrough_extensions_isSet;
    bool m_passthrough_extensions_isValid;

    OAIX509Parameters m_predefined_values;
    bool m_predefined_values_isSet;
    bool m_predefined_values_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateTemplate)

#endif // OAICertificateTemplate_H
