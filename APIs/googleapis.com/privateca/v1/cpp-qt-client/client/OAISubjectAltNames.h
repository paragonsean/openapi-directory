/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubjectAltNames.h
 *
 * SubjectAltNames corresponds to a more modern way of listing what the asserted identity is in a certificate (i.e., compared to the \&quot;common name\&quot; in the distinguished name).
 */

#ifndef OAISubjectAltNames_H
#define OAISubjectAltNames_H

#include <QJsonObject>

#include "OAIX509Extension.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIX509Extension;

class OAISubjectAltNames : public OAIObject {
public:
    OAISubjectAltNames();
    OAISubjectAltNames(QString json);
    ~OAISubjectAltNames() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIX509Extension> getCustomSans() const;
    void setCustomSans(const QList<OAIX509Extension> &custom_sans);
    bool is_custom_sans_Set() const;
    bool is_custom_sans_Valid() const;

    QList<QString> getDnsNames() const;
    void setDnsNames(const QList<QString> &dns_names);
    bool is_dns_names_Set() const;
    bool is_dns_names_Valid() const;

    QList<QString> getEmailAddresses() const;
    void setEmailAddresses(const QList<QString> &email_addresses);
    bool is_email_addresses_Set() const;
    bool is_email_addresses_Valid() const;

    QList<QString> getIpAddresses() const;
    void setIpAddresses(const QList<QString> &ip_addresses);
    bool is_ip_addresses_Set() const;
    bool is_ip_addresses_Valid() const;

    QList<QString> getUris() const;
    void setUris(const QList<QString> &uris);
    bool is_uris_Set() const;
    bool is_uris_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIX509Extension> m_custom_sans;
    bool m_custom_sans_isSet;
    bool m_custom_sans_isValid;

    QList<QString> m_dns_names;
    bool m_dns_names_isSet;
    bool m_dns_names_isValid;

    QList<QString> m_email_addresses;
    bool m_email_addresses_isSet;
    bool m_email_addresses_isValid;

    QList<QString> m_ip_addresses;
    bool m_ip_addresses_isSet;
    bool m_ip_addresses_isValid;

    QList<QString> m_uris;
    bool m_uris_isSet;
    bool m_uris_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubjectAltNames)

#endif // OAISubjectAltNames_H
