/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubordinateConfig.h
 *
 * Describes a subordinate CA&#39;s issuers. This is either a resource name to a known issuing CertificateAuthority, or a PEM issuer certificate chain.
 */

#ifndef OAISubordinateConfig_H
#define OAISubordinateConfig_H

#include <QJsonObject>

#include "OAISubordinateConfigChain.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubordinateConfigChain;

class OAISubordinateConfig : public OAIObject {
public:
    OAISubordinateConfig();
    OAISubordinateConfig(QString json);
    ~OAISubordinateConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertificateAuthority() const;
    void setCertificateAuthority(const QString &certificate_authority);
    bool is_certificate_authority_Set() const;
    bool is_certificate_authority_Valid() const;

    OAISubordinateConfigChain getPemIssuerChain() const;
    void setPemIssuerChain(const OAISubordinateConfigChain &pem_issuer_chain);
    bool is_pem_issuer_chain_Set() const;
    bool is_pem_issuer_chain_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_certificate_authority;
    bool m_certificate_authority_isSet;
    bool m_certificate_authority_isValid;

    OAISubordinateConfigChain m_pem_issuer_chain;
    bool m_pem_issuer_chain_isSet;
    bool m_pem_issuer_chain_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubordinateConfig)

#endif // OAISubordinateConfig_H
