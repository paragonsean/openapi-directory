/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificate.h
 *
 * A Certificate corresponds to a signed X.509 certificate issued by a CertificateAuthority.
 */

#ifndef OAICertificate_H
#define OAICertificate_H

#include <QJsonObject>

#include "OAICertificateConfig.h"
#include "OAICertificateDescription.h"
#include "OAIRevocationDetails.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICertificateDescription;
class OAICertificateConfig;
class OAIRevocationDetails;

class OAICertificate : public OAIObject {
public:
    OAICertificate();
    OAICertificate(QString json);
    ~OAICertificate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICertificateDescription getCertificateDescription() const;
    void setCertificateDescription(const OAICertificateDescription &certificate_description);
    bool is_certificate_description_Set() const;
    bool is_certificate_description_Valid() const;

    QString getCertificateTemplate() const;
    void setCertificateTemplate(const QString &certificate_template);
    bool is_certificate_template_Set() const;
    bool is_certificate_template_Valid() const;

    OAICertificateConfig getConfig() const;
    void setConfig(const OAICertificateConfig &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getIssuerCertificateAuthority() const;
    void setIssuerCertificateAuthority(const QString &issuer_certificate_authority);
    bool is_issuer_certificate_authority_Set() const;
    bool is_issuer_certificate_authority_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLifetime() const;
    void setLifetime(const QString &lifetime);
    bool is_lifetime_Set() const;
    bool is_lifetime_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPemCertificate() const;
    void setPemCertificate(const QString &pem_certificate);
    bool is_pem_certificate_Set() const;
    bool is_pem_certificate_Valid() const;

    QList<QString> getPemCertificateChain() const;
    void setPemCertificateChain(const QList<QString> &pem_certificate_chain);
    bool is_pem_certificate_chain_Set() const;
    bool is_pem_certificate_chain_Valid() const;

    QString getPemCsr() const;
    void setPemCsr(const QString &pem_csr);
    bool is_pem_csr_Set() const;
    bool is_pem_csr_Valid() const;

    OAIRevocationDetails getRevocationDetails() const;
    void setRevocationDetails(const OAIRevocationDetails &revocation_details);
    bool is_revocation_details_Set() const;
    bool is_revocation_details_Valid() const;

    QString getSubjectMode() const;
    void setSubjectMode(const QString &subject_mode);
    bool is_subject_mode_Set() const;
    bool is_subject_mode_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICertificateDescription m_certificate_description;
    bool m_certificate_description_isSet;
    bool m_certificate_description_isValid;

    QString m_certificate_template;
    bool m_certificate_template_isSet;
    bool m_certificate_template_isValid;

    OAICertificateConfig m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_issuer_certificate_authority;
    bool m_issuer_certificate_authority_isSet;
    bool m_issuer_certificate_authority_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_lifetime;
    bool m_lifetime_isSet;
    bool m_lifetime_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_pem_certificate;
    bool m_pem_certificate_isSet;
    bool m_pem_certificate_isValid;

    QList<QString> m_pem_certificate_chain;
    bool m_pem_certificate_chain_isSet;
    bool m_pem_certificate_chain_isValid;

    QString m_pem_csr;
    bool m_pem_csr_isSet;
    bool m_pem_csr_isValid;

    OAIRevocationDetails m_revocation_details;
    bool m_revocation_details_isSet;
    bool m_revocation_details_isValid;

    QString m_subject_mode;
    bool m_subject_mode_isSet;
    bool m_subject_mode_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificate)

#endif // OAICertificate_H
