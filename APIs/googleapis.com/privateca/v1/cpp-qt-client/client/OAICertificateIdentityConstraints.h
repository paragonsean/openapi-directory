/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateIdentityConstraints.h
 *
 * Describes constraints on a Certificate&#39;s Subject and SubjectAltNames.
 */

#ifndef OAICertificateIdentityConstraints_H
#define OAICertificateIdentityConstraints_H

#include <QJsonObject>

#include "OAIExpr.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExpr;

class OAICertificateIdentityConstraints : public OAIObject {
public:
    OAICertificateIdentityConstraints();
    OAICertificateIdentityConstraints(QString json);
    ~OAICertificateIdentityConstraints() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowSubjectAltNamesPassthrough() const;
    void setAllowSubjectAltNamesPassthrough(const bool &allow_subject_alt_names_passthrough);
    bool is_allow_subject_alt_names_passthrough_Set() const;
    bool is_allow_subject_alt_names_passthrough_Valid() const;

    bool isAllowSubjectPassthrough() const;
    void setAllowSubjectPassthrough(const bool &allow_subject_passthrough);
    bool is_allow_subject_passthrough_Set() const;
    bool is_allow_subject_passthrough_Valid() const;

    OAIExpr getCelExpression() const;
    void setCelExpression(const OAIExpr &cel_expression);
    bool is_cel_expression_Set() const;
    bool is_cel_expression_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_subject_alt_names_passthrough;
    bool m_allow_subject_alt_names_passthrough_isSet;
    bool m_allow_subject_alt_names_passthrough_isValid;

    bool m_allow_subject_passthrough;
    bool m_allow_subject_passthrough_isSet;
    bool m_allow_subject_passthrough_isValid;

    OAIExpr m_cel_expression;
    bool m_cel_expression_isSet;
    bool m_cel_expression_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateIdentityConstraints)

#endif // OAICertificateIdentityConstraints_H
