/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEcKeyType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEcKeyType::OAIEcKeyType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEcKeyType::OAIEcKeyType() {
    this->initializeModel();
}

OAIEcKeyType::~OAIEcKeyType() {}

void OAIEcKeyType::initializeModel() {

    m_signature_algorithm_isSet = false;
    m_signature_algorithm_isValid = false;
}

void OAIEcKeyType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEcKeyType::fromJsonObject(QJsonObject json) {

    m_signature_algorithm_isValid = ::OpenAPI::fromJsonValue(m_signature_algorithm, json[QString("signatureAlgorithm")]);
    m_signature_algorithm_isSet = !json[QString("signatureAlgorithm")].isNull() && m_signature_algorithm_isValid;
}

QString OAIEcKeyType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEcKeyType::asJsonObject() const {
    QJsonObject obj;
    if (m_signature_algorithm_isSet) {
        obj.insert(QString("signatureAlgorithm"), ::OpenAPI::toJsonValue(m_signature_algorithm));
    }
    return obj;
}

QString OAIEcKeyType::getSignatureAlgorithm() const {
    return m_signature_algorithm;
}
void OAIEcKeyType::setSignatureAlgorithm(const QString &signature_algorithm) {
    m_signature_algorithm = signature_algorithm;
    m_signature_algorithm_isSet = true;
}

bool OAIEcKeyType::is_signature_algorithm_Set() const{
    return m_signature_algorithm_isSet;
}

bool OAIEcKeyType::is_signature_algorithm_Valid() const{
    return m_signature_algorithm_isValid;
}

bool OAIEcKeyType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_signature_algorithm_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEcKeyType::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
