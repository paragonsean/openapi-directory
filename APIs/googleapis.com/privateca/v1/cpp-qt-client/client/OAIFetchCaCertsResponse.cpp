/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFetchCaCertsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFetchCaCertsResponse::OAIFetchCaCertsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFetchCaCertsResponse::OAIFetchCaCertsResponse() {
    this->initializeModel();
}

OAIFetchCaCertsResponse::~OAIFetchCaCertsResponse() {}

void OAIFetchCaCertsResponse::initializeModel() {

    m_ca_certs_isSet = false;
    m_ca_certs_isValid = false;
}

void OAIFetchCaCertsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFetchCaCertsResponse::fromJsonObject(QJsonObject json) {

    m_ca_certs_isValid = ::OpenAPI::fromJsonValue(m_ca_certs, json[QString("caCerts")]);
    m_ca_certs_isSet = !json[QString("caCerts")].isNull() && m_ca_certs_isValid;
}

QString OAIFetchCaCertsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFetchCaCertsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_ca_certs.size() > 0) {
        obj.insert(QString("caCerts"), ::OpenAPI::toJsonValue(m_ca_certs));
    }
    return obj;
}

QList<OAICertChain> OAIFetchCaCertsResponse::getCaCerts() const {
    return m_ca_certs;
}
void OAIFetchCaCertsResponse::setCaCerts(const QList<OAICertChain> &ca_certs) {
    m_ca_certs = ca_certs;
    m_ca_certs_isSet = true;
}

bool OAIFetchCaCertsResponse::is_ca_certs_Set() const{
    return m_ca_certs_isSet;
}

bool OAIFetchCaCertsResponse::is_ca_certs_Valid() const{
    return m_ca_certs_isValid;
}

bool OAIFetchCaCertsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ca_certs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFetchCaCertsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
