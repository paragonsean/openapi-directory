/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateRevocationList.h
 *
 * A CertificateRevocationList corresponds to a signed X.509 certificate Revocation List (CRL). A CRL contains the serial numbers of certificates that should no longer be trusted.
 */

#ifndef OAICertificateRevocationList_H
#define OAICertificateRevocationList_H

#include <QJsonObject>

#include "OAIRevokedCertificate.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRevokedCertificate;

class OAICertificateRevocationList : public OAIObject {
public:
    OAICertificateRevocationList();
    OAICertificateRevocationList(QString json);
    ~OAICertificateRevocationList() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessUrl() const;
    void setAccessUrl(const QString &access_url);
    bool is_access_url_Set() const;
    bool is_access_url_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPemCrl() const;
    void setPemCrl(const QString &pem_crl);
    bool is_pem_crl_Set() const;
    bool is_pem_crl_Valid() const;

    QString getRevisionId() const;
    void setRevisionId(const QString &revision_id);
    bool is_revision_id_Set() const;
    bool is_revision_id_Valid() const;

    QList<OAIRevokedCertificate> getRevokedCertificates() const;
    void setRevokedCertificates(const QList<OAIRevokedCertificate> &revoked_certificates);
    bool is_revoked_certificates_Set() const;
    bool is_revoked_certificates_Valid() const;

    QString getSequenceNumber() const;
    void setSequenceNumber(const QString &sequence_number);
    bool is_sequence_number_Set() const;
    bool is_sequence_number_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_url;
    bool m_access_url_isSet;
    bool m_access_url_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_pem_crl;
    bool m_pem_crl_isSet;
    bool m_pem_crl_isValid;

    QString m_revision_id;
    bool m_revision_id_isSet;
    bool m_revision_id_isValid;

    QList<OAIRevokedCertificate> m_revoked_certificates;
    bool m_revoked_certificates_isSet;
    bool m_revoked_certificates_isValid;

    QString m_sequence_number;
    bool m_sequence_number_isSet;
    bool m_sequence_number_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateRevocationList)

#endif // OAICertificateRevocationList_H
