/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateDescription.h
 *
 * A CertificateDescription describes an X.509 certificate or CSR that has been issued, as an alternative to using ASN.1 / X.509.
 */

#ifndef OAICertificateDescription_H
#define OAICertificateDescription_H

#include <QJsonObject>

#include "OAICertificateFingerprint.h"
#include "OAIKeyId.h"
#include "OAIPublicKey.h"
#include "OAISubjectDescription.h"
#include "OAIX509Parameters.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyId;
class OAICertificateFingerprint;
class OAIPublicKey;
class OAISubjectDescription;
class OAIX509Parameters;

class OAICertificateDescription : public OAIObject {
public:
    OAICertificateDescription();
    OAICertificateDescription(QString json);
    ~OAICertificateDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAiaIssuingCertificateUrls() const;
    void setAiaIssuingCertificateUrls(const QList<QString> &aia_issuing_certificate_urls);
    bool is_aia_issuing_certificate_urls_Set() const;
    bool is_aia_issuing_certificate_urls_Valid() const;

    OAIKeyId getAuthorityKeyId() const;
    void setAuthorityKeyId(const OAIKeyId &authority_key_id);
    bool is_authority_key_id_Set() const;
    bool is_authority_key_id_Valid() const;

    OAICertificateFingerprint getCertFingerprint() const;
    void setCertFingerprint(const OAICertificateFingerprint &cert_fingerprint);
    bool is_cert_fingerprint_Set() const;
    bool is_cert_fingerprint_Valid() const;

    QList<QString> getCrlDistributionPoints() const;
    void setCrlDistributionPoints(const QList<QString> &crl_distribution_points);
    bool is_crl_distribution_points_Set() const;
    bool is_crl_distribution_points_Valid() const;

    OAIPublicKey getPublicKey() const;
    void setPublicKey(const OAIPublicKey &public_key);
    bool is_public_key_Set() const;
    bool is_public_key_Valid() const;

    OAISubjectDescription getSubjectDescription() const;
    void setSubjectDescription(const OAISubjectDescription &subject_description);
    bool is_subject_description_Set() const;
    bool is_subject_description_Valid() const;

    OAIKeyId getSubjectKeyId() const;
    void setSubjectKeyId(const OAIKeyId &subject_key_id);
    bool is_subject_key_id_Set() const;
    bool is_subject_key_id_Valid() const;

    OAIX509Parameters getX509Description() const;
    void setX509Description(const OAIX509Parameters &x509_description);
    bool is_x509_description_Set() const;
    bool is_x509_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_aia_issuing_certificate_urls;
    bool m_aia_issuing_certificate_urls_isSet;
    bool m_aia_issuing_certificate_urls_isValid;

    OAIKeyId m_authority_key_id;
    bool m_authority_key_id_isSet;
    bool m_authority_key_id_isValid;

    OAICertificateFingerprint m_cert_fingerprint;
    bool m_cert_fingerprint_isSet;
    bool m_cert_fingerprint_isValid;

    QList<QString> m_crl_distribution_points;
    bool m_crl_distribution_points_isSet;
    bool m_crl_distribution_points_isValid;

    OAIPublicKey m_public_key;
    bool m_public_key_isSet;
    bool m_public_key_isValid;

    OAISubjectDescription m_subject_description;
    bool m_subject_description_isSet;
    bool m_subject_description_isValid;

    OAIKeyId m_subject_key_id;
    bool m_subject_key_id_isSet;
    bool m_subject_key_id_isValid;

    OAIX509Parameters m_x509_description;
    bool m_x509_description_isSet;
    bool m_x509_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateDescription)

#endif // OAICertificateDescription_H
