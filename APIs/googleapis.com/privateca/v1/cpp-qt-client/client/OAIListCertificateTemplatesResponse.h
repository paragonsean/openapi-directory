/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListCertificateTemplatesResponse.h
 *
 * Response message for CertificateAuthorityService.ListCertificateTemplates.
 */

#ifndef OAIListCertificateTemplatesResponse_H
#define OAIListCertificateTemplatesResponse_H

#include <QJsonObject>

#include "OAICertificateTemplate.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICertificateTemplate;

class OAIListCertificateTemplatesResponse : public OAIObject {
public:
    OAIListCertificateTemplatesResponse();
    OAIListCertificateTemplatesResponse(QString json);
    ~OAIListCertificateTemplatesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICertificateTemplate> getCertificateTemplates() const;
    void setCertificateTemplates(const QList<OAICertificateTemplate> &certificate_templates);
    bool is_certificate_templates_Set() const;
    bool is_certificate_templates_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList<QString> getUnreachable() const;
    void setUnreachable(const QList<QString> &unreachable);
    bool is_unreachable_Set() const;
    bool is_unreachable_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICertificateTemplate> m_certificate_templates;
    bool m_certificate_templates_isSet;
    bool m_certificate_templates_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList<QString> m_unreachable;
    bool m_unreachable_isSet;
    bool m_unreachable_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListCertificateTemplatesResponse)

#endif // OAIListCertificateTemplatesResponse_H
