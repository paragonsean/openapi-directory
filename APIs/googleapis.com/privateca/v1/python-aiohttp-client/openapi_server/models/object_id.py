# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ObjectId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_id_path: List[int]=None):
        """ObjectId - a model defined in OpenAPI

        :param object_id_path: The object_id_path of this ObjectId.
        """
        self.openapi_types = {
            'object_id_path': List[int]
        }

        self.attribute_map = {
            'object_id_path': 'objectIdPath'
        }

        self._object_id_path = object_id_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjectId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObjectId of this ObjectId.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_id_path(self):
        """Gets the object_id_path of this ObjectId.

        Required. The parts of an OID path. The most significant parts of the path come first.

        :return: The object_id_path of this ObjectId.
        :rtype: List[int]
        """
        return self._object_id_path

    @object_id_path.setter
    def object_id_path(self, object_id_path):
        """Sets the object_id_path of this ObjectId.

        Required. The parts of an OID path. The most significant parts of the path come first.

        :param object_id_path: The object_id_path of this ObjectId.
        :type object_id_path: List[int]
        """

        self._object_id_path = object_id_path
