# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CaOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_ca: bool=None, max_issuer_path_length: int=None):
        """CaOptions - a model defined in OpenAPI

        :param is_ca: The is_ca of this CaOptions.
        :param max_issuer_path_length: The max_issuer_path_length of this CaOptions.
        """
        self.openapi_types = {
            'is_ca': bool,
            'max_issuer_path_length': int
        }

        self.attribute_map = {
            'is_ca': 'isCa',
            'max_issuer_path_length': 'maxIssuerPathLength'
        }

        self._is_ca = is_ca
        self._max_issuer_path_length = max_issuer_path_length

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CaOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CaOptions of this CaOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_ca(self):
        """Gets the is_ca of this CaOptions.

        Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate.

        :return: The is_ca of this CaOptions.
        :rtype: bool
        """
        return self._is_ca

    @is_ca.setter
    def is_ca(self, is_ca):
        """Sets the is_ca of this CaOptions.

        Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate.

        :param is_ca: The is_ca of this CaOptions.
        :type is_ca: bool
        """

        self._is_ca = is_ca

    @property
    def max_issuer_path_length(self):
        """Gets the max_issuer_path_length of this CaOptions.

        Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate.

        :return: The max_issuer_path_length of this CaOptions.
        :rtype: int
        """
        return self._max_issuer_path_length

    @max_issuer_path_length.setter
    def max_issuer_path_length(self, max_issuer_path_length):
        """Sets the max_issuer_path_length of this CaOptions.

        Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate.

        :param max_issuer_path_length: The max_issuer_path_length of this CaOptions.
        :type max_issuer_path_length: int
        """

        self._max_issuer_path_length = max_issuer_path_length
