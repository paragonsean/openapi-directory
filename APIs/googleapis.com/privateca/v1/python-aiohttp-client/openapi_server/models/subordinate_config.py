# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subordinate_config_chain import SubordinateConfigChain
from openapi_server import util


class SubordinateConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_authority: str=None, pem_issuer_chain: SubordinateConfigChain=None):
        """SubordinateConfig - a model defined in OpenAPI

        :param certificate_authority: The certificate_authority of this SubordinateConfig.
        :param pem_issuer_chain: The pem_issuer_chain of this SubordinateConfig.
        """
        self.openapi_types = {
            'certificate_authority': str,
            'pem_issuer_chain': SubordinateConfigChain
        }

        self.attribute_map = {
            'certificate_authority': 'certificateAuthority',
            'pem_issuer_chain': 'pemIssuerChain'
        }

        self._certificate_authority = certificate_authority
        self._pem_issuer_chain = pem_issuer_chain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubordinateConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubordinateConfig of this SubordinateConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_authority(self):
        """Gets the certificate_authority of this SubordinateConfig.

        Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.

        :return: The certificate_authority of this SubordinateConfig.
        :rtype: str
        """
        return self._certificate_authority

    @certificate_authority.setter
    def certificate_authority(self, certificate_authority):
        """Sets the certificate_authority of this SubordinateConfig.

        Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.

        :param certificate_authority: The certificate_authority of this SubordinateConfig.
        :type certificate_authority: str
        """

        self._certificate_authority = certificate_authority

    @property
    def pem_issuer_chain(self):
        """Gets the pem_issuer_chain of this SubordinateConfig.


        :return: The pem_issuer_chain of this SubordinateConfig.
        :rtype: SubordinateConfigChain
        """
        return self._pem_issuer_chain

    @pem_issuer_chain.setter
    def pem_issuer_chain(self, pem_issuer_chain):
        """Sets the pem_issuer_chain of this SubordinateConfig.


        :param pem_issuer_chain: The pem_issuer_chain of this SubordinateConfig.
        :type pem_issuer_chain: SubordinateConfigChain
        """

        self._pem_issuer_chain = pem_issuer_chain
