# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.certificate_fingerprint import CertificateFingerprint
from openapi_server.models.key_id import KeyId
from openapi_server.models.public_key import PublicKey
from openapi_server.models.subject_description import SubjectDescription
from openapi_server.models.x509_parameters import X509Parameters
from openapi_server import util


class CertificateDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aia_issuing_certificate_urls: List[str]=None, authority_key_id: KeyId=None, cert_fingerprint: CertificateFingerprint=None, crl_distribution_points: List[str]=None, public_key: PublicKey=None, subject_description: SubjectDescription=None, subject_key_id: KeyId=None, x509_description: X509Parameters=None):
        """CertificateDescription - a model defined in OpenAPI

        :param aia_issuing_certificate_urls: The aia_issuing_certificate_urls of this CertificateDescription.
        :param authority_key_id: The authority_key_id of this CertificateDescription.
        :param cert_fingerprint: The cert_fingerprint of this CertificateDescription.
        :param crl_distribution_points: The crl_distribution_points of this CertificateDescription.
        :param public_key: The public_key of this CertificateDescription.
        :param subject_description: The subject_description of this CertificateDescription.
        :param subject_key_id: The subject_key_id of this CertificateDescription.
        :param x509_description: The x509_description of this CertificateDescription.
        """
        self.openapi_types = {
            'aia_issuing_certificate_urls': List[str],
            'authority_key_id': KeyId,
            'cert_fingerprint': CertificateFingerprint,
            'crl_distribution_points': List[str],
            'public_key': PublicKey,
            'subject_description': SubjectDescription,
            'subject_key_id': KeyId,
            'x509_description': X509Parameters
        }

        self.attribute_map = {
            'aia_issuing_certificate_urls': 'aiaIssuingCertificateUrls',
            'authority_key_id': 'authorityKeyId',
            'cert_fingerprint': 'certFingerprint',
            'crl_distribution_points': 'crlDistributionPoints',
            'public_key': 'publicKey',
            'subject_description': 'subjectDescription',
            'subject_key_id': 'subjectKeyId',
            'x509_description': 'x509Description'
        }

        self._aia_issuing_certificate_urls = aia_issuing_certificate_urls
        self._authority_key_id = authority_key_id
        self._cert_fingerprint = cert_fingerprint
        self._crl_distribution_points = crl_distribution_points
        self._public_key = public_key
        self._subject_description = subject_description
        self._subject_key_id = subject_key_id
        self._x509_description = x509_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateDescription of this CertificateDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aia_issuing_certificate_urls(self):
        """Gets the aia_issuing_certificate_urls of this CertificateDescription.

        Describes lists of issuer CA certificate URLs that appear in the \"Authority Information Access\" extension in the certificate.

        :return: The aia_issuing_certificate_urls of this CertificateDescription.
        :rtype: List[str]
        """
        return self._aia_issuing_certificate_urls

    @aia_issuing_certificate_urls.setter
    def aia_issuing_certificate_urls(self, aia_issuing_certificate_urls):
        """Sets the aia_issuing_certificate_urls of this CertificateDescription.

        Describes lists of issuer CA certificate URLs that appear in the \"Authority Information Access\" extension in the certificate.

        :param aia_issuing_certificate_urls: The aia_issuing_certificate_urls of this CertificateDescription.
        :type aia_issuing_certificate_urls: List[str]
        """

        self._aia_issuing_certificate_urls = aia_issuing_certificate_urls

    @property
    def authority_key_id(self):
        """Gets the authority_key_id of this CertificateDescription.


        :return: The authority_key_id of this CertificateDescription.
        :rtype: KeyId
        """
        return self._authority_key_id

    @authority_key_id.setter
    def authority_key_id(self, authority_key_id):
        """Sets the authority_key_id of this CertificateDescription.


        :param authority_key_id: The authority_key_id of this CertificateDescription.
        :type authority_key_id: KeyId
        """

        self._authority_key_id = authority_key_id

    @property
    def cert_fingerprint(self):
        """Gets the cert_fingerprint of this CertificateDescription.


        :return: The cert_fingerprint of this CertificateDescription.
        :rtype: CertificateFingerprint
        """
        return self._cert_fingerprint

    @cert_fingerprint.setter
    def cert_fingerprint(self, cert_fingerprint):
        """Sets the cert_fingerprint of this CertificateDescription.


        :param cert_fingerprint: The cert_fingerprint of this CertificateDescription.
        :type cert_fingerprint: CertificateFingerprint
        """

        self._cert_fingerprint = cert_fingerprint

    @property
    def crl_distribution_points(self):
        """Gets the crl_distribution_points of this CertificateDescription.

        Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13

        :return: The crl_distribution_points of this CertificateDescription.
        :rtype: List[str]
        """
        return self._crl_distribution_points

    @crl_distribution_points.setter
    def crl_distribution_points(self, crl_distribution_points):
        """Sets the crl_distribution_points of this CertificateDescription.

        Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13

        :param crl_distribution_points: The crl_distribution_points of this CertificateDescription.
        :type crl_distribution_points: List[str]
        """

        self._crl_distribution_points = crl_distribution_points

    @property
    def public_key(self):
        """Gets the public_key of this CertificateDescription.


        :return: The public_key of this CertificateDescription.
        :rtype: PublicKey
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key):
        """Sets the public_key of this CertificateDescription.


        :param public_key: The public_key of this CertificateDescription.
        :type public_key: PublicKey
        """

        self._public_key = public_key

    @property
    def subject_description(self):
        """Gets the subject_description of this CertificateDescription.


        :return: The subject_description of this CertificateDescription.
        :rtype: SubjectDescription
        """
        return self._subject_description

    @subject_description.setter
    def subject_description(self, subject_description):
        """Sets the subject_description of this CertificateDescription.


        :param subject_description: The subject_description of this CertificateDescription.
        :type subject_description: SubjectDescription
        """

        self._subject_description = subject_description

    @property
    def subject_key_id(self):
        """Gets the subject_key_id of this CertificateDescription.


        :return: The subject_key_id of this CertificateDescription.
        :rtype: KeyId
        """
        return self._subject_key_id

    @subject_key_id.setter
    def subject_key_id(self, subject_key_id):
        """Sets the subject_key_id of this CertificateDescription.


        :param subject_key_id: The subject_key_id of this CertificateDescription.
        :type subject_key_id: KeyId
        """

        self._subject_key_id = subject_key_id

    @property
    def x509_description(self):
        """Gets the x509_description of this CertificateDescription.


        :return: The x509_description of this CertificateDescription.
        :rtype: X509Parameters
        """
        return self._x509_description

    @x509_description.setter
    def x509_description(self, x509_description):
        """Sets the x509_description of this CertificateDescription.


        :param x509_description: The x509_description of this CertificateDescription.
        :type x509_description: X509Parameters
        """

        self._x509_description = x509_description
