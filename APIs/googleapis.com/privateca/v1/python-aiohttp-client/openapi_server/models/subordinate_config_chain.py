# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubordinateConfigChain(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pem_certificates: List[str]=None):
        """SubordinateConfigChain - a model defined in OpenAPI

        :param pem_certificates: The pem_certificates of this SubordinateConfigChain.
        """
        self.openapi_types = {
            'pem_certificates': List[str]
        }

        self.attribute_map = {
            'pem_certificates': 'pemCertificates'
        }

        self._pem_certificates = pem_certificates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubordinateConfigChain':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubordinateConfigChain of this SubordinateConfigChain.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pem_certificates(self):
        """Gets the pem_certificates of this SubordinateConfigChain.

        Required. Expected to be in leaf-to-root order according to RFC 5246.

        :return: The pem_certificates of this SubordinateConfigChain.
        :rtype: List[str]
        """
        return self._pem_certificates

    @pem_certificates.setter
    def pem_certificates(self, pem_certificates):
        """Sets the pem_certificates of this SubordinateConfigChain.

        Required. Expected to be in leaf-to-root order according to RFC 5246.

        :param pem_certificates: The pem_certificates of this SubordinateConfigChain.
        :type pem_certificates: List[str]
        """

        self._pem_certificates = pem_certificates
