# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CertificateFingerprint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sha256_hash: str=None):
        """CertificateFingerprint - a model defined in OpenAPI

        :param sha256_hash: The sha256_hash of this CertificateFingerprint.
        """
        self.openapi_types = {
            'sha256_hash': str
        }

        self.attribute_map = {
            'sha256_hash': 'sha256Hash'
        }

        self._sha256_hash = sha256_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateFingerprint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateFingerprint of this CertificateFingerprint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sha256_hash(self):
        """Gets the sha256_hash of this CertificateFingerprint.

        The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate.

        :return: The sha256_hash of this CertificateFingerprint.
        :rtype: str
        """
        return self._sha256_hash

    @sha256_hash.setter
    def sha256_hash(self, sha256_hash):
        """Sets the sha256_hash of this CertificateFingerprint.

        The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate.

        :param sha256_hash: The sha256_hash of this CertificateFingerprint.
        :type sha256_hash: str
        """

        self._sha256_hash = sha256_hash
