# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ec_key_type import EcKeyType
from openapi_server.models.rsa_key_type import RsaKeyType
from openapi_server import util


class AllowedKeyType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, elliptic_curve: EcKeyType=None, rsa: RsaKeyType=None):
        """AllowedKeyType - a model defined in OpenAPI

        :param elliptic_curve: The elliptic_curve of this AllowedKeyType.
        :param rsa: The rsa of this AllowedKeyType.
        """
        self.openapi_types = {
            'elliptic_curve': EcKeyType,
            'rsa': RsaKeyType
        }

        self.attribute_map = {
            'elliptic_curve': 'ellipticCurve',
            'rsa': 'rsa'
        }

        self._elliptic_curve = elliptic_curve
        self._rsa = rsa

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AllowedKeyType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AllowedKeyType of this AllowedKeyType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def elliptic_curve(self):
        """Gets the elliptic_curve of this AllowedKeyType.


        :return: The elliptic_curve of this AllowedKeyType.
        :rtype: EcKeyType
        """
        return self._elliptic_curve

    @elliptic_curve.setter
    def elliptic_curve(self, elliptic_curve):
        """Sets the elliptic_curve of this AllowedKeyType.


        :param elliptic_curve: The elliptic_curve of this AllowedKeyType.
        :type elliptic_curve: EcKeyType
        """

        self._elliptic_curve = elliptic_curve

    @property
    def rsa(self):
        """Gets the rsa of this AllowedKeyType.


        :return: The rsa of this AllowedKeyType.
        :rtype: RsaKeyType
        """
        return self._rsa

    @rsa.setter
    def rsa(self, rsa):
        """Sets the rsa of this AllowedKeyType.


        :param rsa: The rsa of this AllowedKeyType.
        :type rsa: RsaKeyType
        """

        self._rsa = rsa
