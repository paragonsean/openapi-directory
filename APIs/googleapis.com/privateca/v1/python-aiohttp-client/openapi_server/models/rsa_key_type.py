# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RsaKeyType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_modulus_size: str=None, min_modulus_size: str=None):
        """RsaKeyType - a model defined in OpenAPI

        :param max_modulus_size: The max_modulus_size of this RsaKeyType.
        :param min_modulus_size: The min_modulus_size of this RsaKeyType.
        """
        self.openapi_types = {
            'max_modulus_size': str,
            'min_modulus_size': str
        }

        self.attribute_map = {
            'max_modulus_size': 'maxModulusSize',
            'min_modulus_size': 'minModulusSize'
        }

        self._max_modulus_size = max_modulus_size
        self._min_modulus_size = min_modulus_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RsaKeyType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RsaKeyType of this RsaKeyType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_modulus_size(self):
        """Gets the max_modulus_size of this RsaKeyType.

        Optional. The maximum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service will not enforce an explicit upper bound on RSA modulus sizes.

        :return: The max_modulus_size of this RsaKeyType.
        :rtype: str
        """
        return self._max_modulus_size

    @max_modulus_size.setter
    def max_modulus_size(self, max_modulus_size):
        """Sets the max_modulus_size of this RsaKeyType.

        Optional. The maximum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service will not enforce an explicit upper bound on RSA modulus sizes.

        :param max_modulus_size: The max_modulus_size of this RsaKeyType.
        :type max_modulus_size: str
        """

        self._max_modulus_size = max_modulus_size

    @property
    def min_modulus_size(self):
        """Gets the min_modulus_size of this RsaKeyType.

        Optional. The minimum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service-level min RSA modulus size will continue to apply.

        :return: The min_modulus_size of this RsaKeyType.
        :rtype: str
        """
        return self._min_modulus_size

    @min_modulus_size.setter
    def min_modulus_size(self, min_modulus_size):
        """Sets the min_modulus_size of this RsaKeyType.

        Optional. The minimum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service-level min RSA modulus size will continue to apply.

        :param min_modulus_size: The min_modulus_size of this RsaKeyType.
        :type min_modulus_size: str
        """

        self._min_modulus_size = min_modulus_size
