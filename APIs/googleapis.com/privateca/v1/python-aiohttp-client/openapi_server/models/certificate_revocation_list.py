# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.revoked_certificate import RevokedCertificate
from openapi_server import util


class CertificateRevocationList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_url: str=None, create_time: str=None, labels: Dict[str, str]=None, name: str=None, pem_crl: str=None, revision_id: str=None, revoked_certificates: List[RevokedCertificate]=None, sequence_number: str=None, state: str=None, update_time: str=None):
        """CertificateRevocationList - a model defined in OpenAPI

        :param access_url: The access_url of this CertificateRevocationList.
        :param create_time: The create_time of this CertificateRevocationList.
        :param labels: The labels of this CertificateRevocationList.
        :param name: The name of this CertificateRevocationList.
        :param pem_crl: The pem_crl of this CertificateRevocationList.
        :param revision_id: The revision_id of this CertificateRevocationList.
        :param revoked_certificates: The revoked_certificates of this CertificateRevocationList.
        :param sequence_number: The sequence_number of this CertificateRevocationList.
        :param state: The state of this CertificateRevocationList.
        :param update_time: The update_time of this CertificateRevocationList.
        """
        self.openapi_types = {
            'access_url': str,
            'create_time': str,
            'labels': Dict[str, str],
            'name': str,
            'pem_crl': str,
            'revision_id': str,
            'revoked_certificates': List[RevokedCertificate],
            'sequence_number': str,
            'state': str,
            'update_time': str
        }

        self.attribute_map = {
            'access_url': 'accessUrl',
            'create_time': 'createTime',
            'labels': 'labels',
            'name': 'name',
            'pem_crl': 'pemCrl',
            'revision_id': 'revisionId',
            'revoked_certificates': 'revokedCertificates',
            'sequence_number': 'sequenceNumber',
            'state': 'state',
            'update_time': 'updateTime'
        }

        self._access_url = access_url
        self._create_time = create_time
        self._labels = labels
        self._name = name
        self._pem_crl = pem_crl
        self._revision_id = revision_id
        self._revoked_certificates = revoked_certificates
        self._sequence_number = sequence_number
        self._state = state
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateRevocationList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateRevocationList of this CertificateRevocationList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_url(self):
        """Gets the access_url of this CertificateRevocationList.

        Output only. The location where 'pem_crl' can be accessed.

        :return: The access_url of this CertificateRevocationList.
        :rtype: str
        """
        return self._access_url

    @access_url.setter
    def access_url(self, access_url):
        """Sets the access_url of this CertificateRevocationList.

        Output only. The location where 'pem_crl' can be accessed.

        :param access_url: The access_url of this CertificateRevocationList.
        :type access_url: str
        """

        self._access_url = access_url

    @property
    def create_time(self):
        """Gets the create_time of this CertificateRevocationList.

        Output only. The time at which this CertificateRevocationList was created.

        :return: The create_time of this CertificateRevocationList.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this CertificateRevocationList.

        Output only. The time at which this CertificateRevocationList was created.

        :param create_time: The create_time of this CertificateRevocationList.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def labels(self):
        """Gets the labels of this CertificateRevocationList.

        Optional. Labels with user-defined metadata.

        :return: The labels of this CertificateRevocationList.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this CertificateRevocationList.

        Optional. Labels with user-defined metadata.

        :param labels: The labels of this CertificateRevocationList.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this CertificateRevocationList.

        Output only. The resource name for this CertificateRevocationList in the format `projects/*/locations/*/caPools/*certificateAuthorities/*/ certificateRevocationLists/*`.

        :return: The name of this CertificateRevocationList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CertificateRevocationList.

        Output only. The resource name for this CertificateRevocationList in the format `projects/*/locations/*/caPools/*certificateAuthorities/*/ certificateRevocationLists/*`.

        :param name: The name of this CertificateRevocationList.
        :type name: str
        """

        self._name = name

    @property
    def pem_crl(self):
        """Gets the pem_crl of this CertificateRevocationList.

        Output only. The PEM-encoded X.509 CRL.

        :return: The pem_crl of this CertificateRevocationList.
        :rtype: str
        """
        return self._pem_crl

    @pem_crl.setter
    def pem_crl(self, pem_crl):
        """Sets the pem_crl of this CertificateRevocationList.

        Output only. The PEM-encoded X.509 CRL.

        :param pem_crl: The pem_crl of this CertificateRevocationList.
        :type pem_crl: str
        """

        self._pem_crl = pem_crl

    @property
    def revision_id(self):
        """Gets the revision_id of this CertificateRevocationList.

        Output only. The revision ID of this CertificateRevocationList. A new revision is committed whenever a new CRL is published. The format is an 8-character hexadecimal string.

        :return: The revision_id of this CertificateRevocationList.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this CertificateRevocationList.

        Output only. The revision ID of this CertificateRevocationList. A new revision is committed whenever a new CRL is published. The format is an 8-character hexadecimal string.

        :param revision_id: The revision_id of this CertificateRevocationList.
        :type revision_id: str
        """

        self._revision_id = revision_id

    @property
    def revoked_certificates(self):
        """Gets the revoked_certificates of this CertificateRevocationList.

        Output only. The revoked serial numbers that appear in pem_crl.

        :return: The revoked_certificates of this CertificateRevocationList.
        :rtype: List[RevokedCertificate]
        """
        return self._revoked_certificates

    @revoked_certificates.setter
    def revoked_certificates(self, revoked_certificates):
        """Sets the revoked_certificates of this CertificateRevocationList.

        Output only. The revoked serial numbers that appear in pem_crl.

        :param revoked_certificates: The revoked_certificates of this CertificateRevocationList.
        :type revoked_certificates: List[RevokedCertificate]
        """

        self._revoked_certificates = revoked_certificates

    @property
    def sequence_number(self):
        """Gets the sequence_number of this CertificateRevocationList.

        Output only. The CRL sequence number that appears in pem_crl.

        :return: The sequence_number of this CertificateRevocationList.
        :rtype: str
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number):
        """Sets the sequence_number of this CertificateRevocationList.

        Output only. The CRL sequence number that appears in pem_crl.

        :param sequence_number: The sequence_number of this CertificateRevocationList.
        :type sequence_number: str
        """

        self._sequence_number = sequence_number

    @property
    def state(self):
        """Gets the state of this CertificateRevocationList.

        Output only. The State for this CertificateRevocationList.

        :return: The state of this CertificateRevocationList.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CertificateRevocationList.

        Output only. The State for this CertificateRevocationList.

        :param state: The state of this CertificateRevocationList.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "ACTIVE", "SUPERSEDED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def update_time(self):
        """Gets the update_time of this CertificateRevocationList.

        Output only. The time at which this CertificateRevocationList was updated.

        :return: The update_time of this CertificateRevocationList.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this CertificateRevocationList.

        Output only. The time at which this CertificateRevocationList was updated.

        :param update_time: The update_time of this CertificateRevocationList.
        :type update_time: str
        """

        self._update_time = update_time
