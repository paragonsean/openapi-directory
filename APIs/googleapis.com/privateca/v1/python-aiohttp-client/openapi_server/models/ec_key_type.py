# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EcKeyType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, signature_algorithm: str=None):
        """EcKeyType - a model defined in OpenAPI

        :param signature_algorithm: The signature_algorithm of this EcKeyType.
        """
        self.openapi_types = {
            'signature_algorithm': str
        }

        self.attribute_map = {
            'signature_algorithm': 'signatureAlgorithm'
        }

        self._signature_algorithm = signature_algorithm

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EcKeyType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EcKeyType of this EcKeyType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def signature_algorithm(self):
        """Gets the signature_algorithm of this EcKeyType.

        Optional. A signature algorithm that must be used. If this is omitted, any EC-based signature algorithm will be allowed.

        :return: The signature_algorithm of this EcKeyType.
        :rtype: str
        """
        return self._signature_algorithm

    @signature_algorithm.setter
    def signature_algorithm(self, signature_algorithm):
        """Sets the signature_algorithm of this EcKeyType.

        Optional. A signature algorithm that must be used. If this is omitted, any EC-based signature algorithm will be allowed.

        :param signature_algorithm: The signature_algorithm of this EcKeyType.
        :type signature_algorithm: str
        """
        allowed_values = ["EC_SIGNATURE_ALGORITHM_UNSPECIFIED", "ECDSA_P256", "ECDSA_P384", "EDDSA_25519"]  # noqa: E501
        if signature_algorithm not in allowed_values:
            raise ValueError(
                "Invalid value for `signature_algorithm` ({0}), must be one of {1}"
                .format(signature_algorithm, allowed_values)
            )

        self._signature_algorithm = signature_algorithm
