# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExtendedKeyUsageOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_auth: bool=None, code_signing: bool=None, email_protection: bool=None, ocsp_signing: bool=None, server_auth: bool=None, time_stamping: bool=None):
        """ExtendedKeyUsageOptions - a model defined in OpenAPI

        :param client_auth: The client_auth of this ExtendedKeyUsageOptions.
        :param code_signing: The code_signing of this ExtendedKeyUsageOptions.
        :param email_protection: The email_protection of this ExtendedKeyUsageOptions.
        :param ocsp_signing: The ocsp_signing of this ExtendedKeyUsageOptions.
        :param server_auth: The server_auth of this ExtendedKeyUsageOptions.
        :param time_stamping: The time_stamping of this ExtendedKeyUsageOptions.
        """
        self.openapi_types = {
            'client_auth': bool,
            'code_signing': bool,
            'email_protection': bool,
            'ocsp_signing': bool,
            'server_auth': bool,
            'time_stamping': bool
        }

        self.attribute_map = {
            'client_auth': 'clientAuth',
            'code_signing': 'codeSigning',
            'email_protection': 'emailProtection',
            'ocsp_signing': 'ocspSigning',
            'server_auth': 'serverAuth',
            'time_stamping': 'timeStamping'
        }

        self._client_auth = client_auth
        self._code_signing = code_signing
        self._email_protection = email_protection
        self._ocsp_signing = ocsp_signing
        self._server_auth = server_auth
        self._time_stamping = time_stamping

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtendedKeyUsageOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtendedKeyUsageOptions of this ExtendedKeyUsageOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_auth(self):
        """Gets the client_auth of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS.

        :return: The client_auth of this ExtendedKeyUsageOptions.
        :rtype: bool
        """
        return self._client_auth

    @client_auth.setter
    def client_auth(self, client_auth):
        """Sets the client_auth of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS.

        :param client_auth: The client_auth of this ExtendedKeyUsageOptions.
        :type client_auth: bool
        """

        self._client_auth = client_auth

    @property
    def code_signing(self):
        """Gets the code_signing of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\".

        :return: The code_signing of this ExtendedKeyUsageOptions.
        :rtype: bool
        """
        return self._code_signing

    @code_signing.setter
    def code_signing(self, code_signing):
        """Sets the code_signing of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\".

        :param code_signing: The code_signing of this ExtendedKeyUsageOptions.
        :type code_signing: bool
        """

        self._code_signing = code_signing

    @property
    def email_protection(self):
        """Gets the email_protection of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\".

        :return: The email_protection of this ExtendedKeyUsageOptions.
        :rtype: bool
        """
        return self._email_protection

    @email_protection.setter
    def email_protection(self, email_protection):
        """Sets the email_protection of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\".

        :param email_protection: The email_protection of this ExtendedKeyUsageOptions.
        :type email_protection: bool
        """

        self._email_protection = email_protection

    @property
    def ocsp_signing(self):
        """Gets the ocsp_signing of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\".

        :return: The ocsp_signing of this ExtendedKeyUsageOptions.
        :rtype: bool
        """
        return self._ocsp_signing

    @ocsp_signing.setter
    def ocsp_signing(self, ocsp_signing):
        """Sets the ocsp_signing of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\".

        :param ocsp_signing: The ocsp_signing of this ExtendedKeyUsageOptions.
        :type ocsp_signing: bool
        """

        self._ocsp_signing = ocsp_signing

    @property
    def server_auth(self):
        """Gets the server_auth of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS.

        :return: The server_auth of this ExtendedKeyUsageOptions.
        :rtype: bool
        """
        return self._server_auth

    @server_auth.setter
    def server_auth(self, server_auth):
        """Sets the server_auth of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS.

        :param server_auth: The server_auth of this ExtendedKeyUsageOptions.
        :type server_auth: bool
        """

        self._server_auth = server_auth

    @property
    def time_stamping(self):
        """Gets the time_stamping of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\".

        :return: The time_stamping of this ExtendedKeyUsageOptions.
        :rtype: bool
        """
        return self._time_stamping

    @time_stamping.setter
    def time_stamping(self, time_stamping):
        """Sets the time_stamping of this ExtendedKeyUsageOptions.

        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\".

        :param time_stamping: The time_stamping of this ExtendedKeyUsageOptions.
        :type time_stamping: bool
        """

        self._time_stamping = time_stamping
