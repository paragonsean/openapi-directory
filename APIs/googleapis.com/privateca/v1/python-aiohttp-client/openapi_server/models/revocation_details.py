# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RevocationDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, revocation_state: str=None, revocation_time: str=None):
        """RevocationDetails - a model defined in OpenAPI

        :param revocation_state: The revocation_state of this RevocationDetails.
        :param revocation_time: The revocation_time of this RevocationDetails.
        """
        self.openapi_types = {
            'revocation_state': str,
            'revocation_time': str
        }

        self.attribute_map = {
            'revocation_state': 'revocationState',
            'revocation_time': 'revocationTime'
        }

        self._revocation_state = revocation_state
        self._revocation_time = revocation_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RevocationDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RevocationDetails of this RevocationDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def revocation_state(self):
        """Gets the revocation_state of this RevocationDetails.

        Indicates why a Certificate was revoked.

        :return: The revocation_state of this RevocationDetails.
        :rtype: str
        """
        return self._revocation_state

    @revocation_state.setter
    def revocation_state(self, revocation_state):
        """Sets the revocation_state of this RevocationDetails.

        Indicates why a Certificate was revoked.

        :param revocation_state: The revocation_state of this RevocationDetails.
        :type revocation_state: str
        """
        allowed_values = ["REVOCATION_REASON_UNSPECIFIED", "KEY_COMPROMISE", "CERTIFICATE_AUTHORITY_COMPROMISE", "AFFILIATION_CHANGED", "SUPERSEDED", "CESSATION_OF_OPERATION", "CERTIFICATE_HOLD", "PRIVILEGE_WITHDRAWN", "ATTRIBUTE_AUTHORITY_COMPROMISE"]  # noqa: E501
        if revocation_state not in allowed_values:
            raise ValueError(
                "Invalid value for `revocation_state` ({0}), must be one of {1}"
                .format(revocation_state, allowed_values)
            )

        self._revocation_state = revocation_state

    @property
    def revocation_time(self):
        """Gets the revocation_time of this RevocationDetails.

        The time at which this Certificate was revoked.

        :return: The revocation_time of this RevocationDetails.
        :rtype: str
        """
        return self._revocation_time

    @revocation_time.setter
    def revocation_time(self, revocation_time):
        """Sets the revocation_time of this RevocationDetails.

        The time at which this Certificate was revoked.

        :param revocation_time: The revocation_time of this RevocationDetails.
        :type revocation_time: str
        """

        self._revocation_time = revocation_time
