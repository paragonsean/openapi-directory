/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjectId from './ObjectId';

/**
 * The X509Extension model module.
 * @module model/X509Extension
 * @version v1
 */
class X509Extension {
    /**
     * Constructs a new <code>X509Extension</code>.
     * An X509Extension specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
     * @alias module:model/X509Extension
     */
    constructor() { 
        
        X509Extension.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>X509Extension</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/X509Extension} obj Optional instance to populate.
     * @return {module:model/X509Extension} The populated <code>X509Extension</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new X509Extension();

            if (data.hasOwnProperty('critical')) {
                obj['critical'] = ApiClient.convertToType(data['critical'], 'Boolean');
            }
            if (data.hasOwnProperty('objectId')) {
                obj['objectId'] = ObjectId.constructFromObject(data['objectId']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Blob');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>X509Extension</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>X509Extension</code>.
     */
    static validateJSON(data) {
        // validate the optional field `objectId`
        if (data['objectId']) { // data not null
          ObjectId.validateJSON(data['objectId']);
        }

        return true;
    }


}



/**
 * Optional. Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error).
 * @member {Boolean} critical
 */
X509Extension.prototype['critical'] = undefined;

/**
 * @member {module:model/ObjectId} objectId
 */
X509Extension.prototype['objectId'] = undefined;

/**
 * Required. The value of this X.509 extension.
 * @member {Blob} value
 */
X509Extension.prototype['value'] = undefined;






export default X509Extension;

