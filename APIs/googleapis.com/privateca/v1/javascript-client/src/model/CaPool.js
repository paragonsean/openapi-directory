/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IssuancePolicy from './IssuancePolicy';
import PublishingOptions from './PublishingOptions';

/**
 * The CaPool model module.
 * @module model/CaPool
 * @version v1
 */
class CaPool {
    /**
     * Constructs a new <code>CaPool</code>.
     * A CaPool represents a group of CertificateAuthorities that form a trust anchor. A CaPool can be used to manage issuance policies for one or more CertificateAuthority resources and to rotate CA certificates in and out of the trust anchor.
     * @alias module:model/CaPool
     */
    constructor() { 
        
        CaPool.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CaPool</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CaPool} obj Optional instance to populate.
     * @return {module:model/CaPool} The populated <code>CaPool</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CaPool();

            if (data.hasOwnProperty('issuancePolicy')) {
                obj['issuancePolicy'] = IssuancePolicy.constructFromObject(data['issuancePolicy']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('publishingOptions')) {
                obj['publishingOptions'] = PublishingOptions.constructFromObject(data['publishingOptions']);
            }
            if (data.hasOwnProperty('tier')) {
                obj['tier'] = ApiClient.convertToType(data['tier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CaPool</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CaPool</code>.
     */
    static validateJSON(data) {
        // validate the optional field `issuancePolicy`
        if (data['issuancePolicy']) { // data not null
          IssuancePolicy.validateJSON(data['issuancePolicy']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `publishingOptions`
        if (data['publishingOptions']) { // data not null
          PublishingOptions.validateJSON(data['publishingOptions']);
        }
        // ensure the json data is a string
        if (data['tier'] && !(typeof data['tier'] === 'string' || data['tier'] instanceof String)) {
            throw new Error("Expected the field `tier` to be a primitive type in the JSON string but got " + data['tier']);
        }

        return true;
    }


}



/**
 * @member {module:model/IssuancePolicy} issuancePolicy
 */
CaPool.prototype['issuancePolicy'] = undefined;

/**
 * Optional. Labels with user-defined metadata.
 * @member {Object.<String, String>} labels
 */
CaPool.prototype['labels'] = undefined;

/**
 * Output only. The resource name for this CaPool in the format `projects/_*_/locations/_*_/caPools/_*`.
 * @member {String} name
 */
CaPool.prototype['name'] = undefined;

/**
 * @member {module:model/PublishingOptions} publishingOptions
 */
CaPool.prototype['publishingOptions'] = undefined;

/**
 * Required. Immutable. The Tier of this CaPool.
 * @member {module:model/CaPool.TierEnum} tier
 */
CaPool.prototype['tier'] = undefined;





/**
 * Allowed values for the <code>tier</code> property.
 * @enum {String}
 * @readonly
 */
CaPool['TierEnum'] = {

    /**
     * value: "TIER_UNSPECIFIED"
     * @const
     */
    "TIER_UNSPECIFIED": "TIER_UNSPECIFIED",

    /**
     * value: "ENTERPRISE"
     * @const
     */
    "ENTERPRISE": "ENTERPRISE",

    /**
     * value: "DEVOPS"
     * @const
     */
    "DEVOPS": "DEVOPS"
};



export default CaPool;

