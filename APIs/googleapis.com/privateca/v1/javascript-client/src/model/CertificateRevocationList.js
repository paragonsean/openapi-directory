/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RevokedCertificate from './RevokedCertificate';

/**
 * The CertificateRevocationList model module.
 * @module model/CertificateRevocationList
 * @version v1
 */
class CertificateRevocationList {
    /**
     * Constructs a new <code>CertificateRevocationList</code>.
     * A CertificateRevocationList corresponds to a signed X.509 certificate Revocation List (CRL). A CRL contains the serial numbers of certificates that should no longer be trusted.
     * @alias module:model/CertificateRevocationList
     */
    constructor() { 
        
        CertificateRevocationList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CertificateRevocationList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CertificateRevocationList} obj Optional instance to populate.
     * @return {module:model/CertificateRevocationList} The populated <code>CertificateRevocationList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CertificateRevocationList();

            if (data.hasOwnProperty('accessUrl')) {
                obj['accessUrl'] = ApiClient.convertToType(data['accessUrl'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pemCrl')) {
                obj['pemCrl'] = ApiClient.convertToType(data['pemCrl'], 'String');
            }
            if (data.hasOwnProperty('revisionId')) {
                obj['revisionId'] = ApiClient.convertToType(data['revisionId'], 'String');
            }
            if (data.hasOwnProperty('revokedCertificates')) {
                obj['revokedCertificates'] = ApiClient.convertToType(data['revokedCertificates'], [RevokedCertificate]);
            }
            if (data.hasOwnProperty('sequenceNumber')) {
                obj['sequenceNumber'] = ApiClient.convertToType(data['sequenceNumber'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CertificateRevocationList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CertificateRevocationList</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessUrl'] && !(typeof data['accessUrl'] === 'string' || data['accessUrl'] instanceof String)) {
            throw new Error("Expected the field `accessUrl` to be a primitive type in the JSON string but got " + data['accessUrl']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['pemCrl'] && !(typeof data['pemCrl'] === 'string' || data['pemCrl'] instanceof String)) {
            throw new Error("Expected the field `pemCrl` to be a primitive type in the JSON string but got " + data['pemCrl']);
        }
        // ensure the json data is a string
        if (data['revisionId'] && !(typeof data['revisionId'] === 'string' || data['revisionId'] instanceof String)) {
            throw new Error("Expected the field `revisionId` to be a primitive type in the JSON string but got " + data['revisionId']);
        }
        if (data['revokedCertificates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['revokedCertificates'])) {
                throw new Error("Expected the field `revokedCertificates` to be an array in the JSON data but got " + data['revokedCertificates']);
            }
            // validate the optional field `revokedCertificates` (array)
            for (const item of data['revokedCertificates']) {
                RevokedCertificate.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sequenceNumber'] && !(typeof data['sequenceNumber'] === 'string' || data['sequenceNumber'] instanceof String)) {
            throw new Error("Expected the field `sequenceNumber` to be a primitive type in the JSON string but got " + data['sequenceNumber']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The location where 'pem_crl' can be accessed.
 * @member {String} accessUrl
 */
CertificateRevocationList.prototype['accessUrl'] = undefined;

/**
 * Output only. The time at which this CertificateRevocationList was created.
 * @member {String} createTime
 */
CertificateRevocationList.prototype['createTime'] = undefined;

/**
 * Optional. Labels with user-defined metadata.
 * @member {Object.<String, String>} labels
 */
CertificateRevocationList.prototype['labels'] = undefined;

/**
 * Output only. The resource name for this CertificateRevocationList in the format `projects/_*_/locations/_*_/caPools/_*certificateAuthorities/_*_/ certificateRevocationLists/_*`.
 * @member {String} name
 */
CertificateRevocationList.prototype['name'] = undefined;

/**
 * Output only. The PEM-encoded X.509 CRL.
 * @member {String} pemCrl
 */
CertificateRevocationList.prototype['pemCrl'] = undefined;

/**
 * Output only. The revision ID of this CertificateRevocationList. A new revision is committed whenever a new CRL is published. The format is an 8-character hexadecimal string.
 * @member {String} revisionId
 */
CertificateRevocationList.prototype['revisionId'] = undefined;

/**
 * Output only. The revoked serial numbers that appear in pem_crl.
 * @member {Array.<module:model/RevokedCertificate>} revokedCertificates
 */
CertificateRevocationList.prototype['revokedCertificates'] = undefined;

/**
 * Output only. The CRL sequence number that appears in pem_crl.
 * @member {String} sequenceNumber
 */
CertificateRevocationList.prototype['sequenceNumber'] = undefined;

/**
 * Output only. The State for this CertificateRevocationList.
 * @member {module:model/CertificateRevocationList.StateEnum} state
 */
CertificateRevocationList.prototype['state'] = undefined;

/**
 * Output only. The time at which this CertificateRevocationList was updated.
 * @member {String} updateTime
 */
CertificateRevocationList.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
CertificateRevocationList['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "SUPERSEDED"
     * @const
     */
    "SUPERSEDED": "SUPERSEDED"
};



export default CertificateRevocationList;

