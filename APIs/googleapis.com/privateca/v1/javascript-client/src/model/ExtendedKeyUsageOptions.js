/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExtendedKeyUsageOptions model module.
 * @module model/ExtendedKeyUsageOptions
 * @version v1
 */
class ExtendedKeyUsageOptions {
    /**
     * Constructs a new <code>ExtendedKeyUsageOptions</code>.
     * KeyUsage.ExtendedKeyUsageOptions has fields that correspond to certain common OIDs that could be specified as an extended key usage value.
     * @alias module:model/ExtendedKeyUsageOptions
     */
    constructor() { 
        
        ExtendedKeyUsageOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExtendedKeyUsageOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtendedKeyUsageOptions} obj Optional instance to populate.
     * @return {module:model/ExtendedKeyUsageOptions} The populated <code>ExtendedKeyUsageOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtendedKeyUsageOptions();

            if (data.hasOwnProperty('clientAuth')) {
                obj['clientAuth'] = ApiClient.convertToType(data['clientAuth'], 'Boolean');
            }
            if (data.hasOwnProperty('codeSigning')) {
                obj['codeSigning'] = ApiClient.convertToType(data['codeSigning'], 'Boolean');
            }
            if (data.hasOwnProperty('emailProtection')) {
                obj['emailProtection'] = ApiClient.convertToType(data['emailProtection'], 'Boolean');
            }
            if (data.hasOwnProperty('ocspSigning')) {
                obj['ocspSigning'] = ApiClient.convertToType(data['ocspSigning'], 'Boolean');
            }
            if (data.hasOwnProperty('serverAuth')) {
                obj['serverAuth'] = ApiClient.convertToType(data['serverAuth'], 'Boolean');
            }
            if (data.hasOwnProperty('timeStamping')) {
                obj['timeStamping'] = ApiClient.convertToType(data['timeStamping'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtendedKeyUsageOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtendedKeyUsageOptions</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS.
 * @member {Boolean} clientAuth
 */
ExtendedKeyUsageOptions.prototype['clientAuth'] = undefined;

/**
 * Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\".
 * @member {Boolean} codeSigning
 */
ExtendedKeyUsageOptions.prototype['codeSigning'] = undefined;

/**
 * Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\".
 * @member {Boolean} emailProtection
 */
ExtendedKeyUsageOptions.prototype['emailProtection'] = undefined;

/**
 * Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\".
 * @member {Boolean} ocspSigning
 */
ExtendedKeyUsageOptions.prototype['ocspSigning'] = undefined;

/**
 * Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS.
 * @member {Boolean} serverAuth
 */
ExtendedKeyUsageOptions.prototype['serverAuth'] = undefined;

/**
 * Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\".
 * @member {Boolean} timeStamping
 */
ExtendedKeyUsageOptions.prototype['timeStamping'] = undefined;






export default ExtendedKeyUsageOptions;

