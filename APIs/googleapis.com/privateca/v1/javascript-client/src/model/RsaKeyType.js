/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RsaKeyType model module.
 * @module model/RsaKeyType
 * @version v1
 */
class RsaKeyType {
    /**
     * Constructs a new <code>RsaKeyType</code>.
     * Describes an RSA key that may be used in a Certificate issued from a CaPool.
     * @alias module:model/RsaKeyType
     */
    constructor() { 
        
        RsaKeyType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RsaKeyType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RsaKeyType} obj Optional instance to populate.
     * @return {module:model/RsaKeyType} The populated <code>RsaKeyType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RsaKeyType();

            if (data.hasOwnProperty('maxModulusSize')) {
                obj['maxModulusSize'] = ApiClient.convertToType(data['maxModulusSize'], 'String');
            }
            if (data.hasOwnProperty('minModulusSize')) {
                obj['minModulusSize'] = ApiClient.convertToType(data['minModulusSize'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RsaKeyType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RsaKeyType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['maxModulusSize'] && !(typeof data['maxModulusSize'] === 'string' || data['maxModulusSize'] instanceof String)) {
            throw new Error("Expected the field `maxModulusSize` to be a primitive type in the JSON string but got " + data['maxModulusSize']);
        }
        // ensure the json data is a string
        if (data['minModulusSize'] && !(typeof data['minModulusSize'] === 'string' || data['minModulusSize'] instanceof String)) {
            throw new Error("Expected the field `minModulusSize` to be a primitive type in the JSON string but got " + data['minModulusSize']);
        }

        return true;
    }


}



/**
 * Optional. The maximum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service will not enforce an explicit upper bound on RSA modulus sizes.
 * @member {String} maxModulusSize
 */
RsaKeyType.prototype['maxModulusSize'] = undefined;

/**
 * Optional. The minimum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service-level min RSA modulus size will continue to apply.
 * @member {String} minModulusSize
 */
RsaKeyType.prototype['minModulusSize'] = undefined;






export default RsaKeyType;

