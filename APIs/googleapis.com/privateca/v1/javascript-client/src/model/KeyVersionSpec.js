/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The KeyVersionSpec model module.
 * @module model/KeyVersionSpec
 * @version v1
 */
class KeyVersionSpec {
    /**
     * Constructs a new <code>KeyVersionSpec</code>.
     * A Cloud KMS key configuration that a CertificateAuthority will use.
     * @alias module:model/KeyVersionSpec
     */
    constructor() { 
        
        KeyVersionSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KeyVersionSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyVersionSpec} obj Optional instance to populate.
     * @return {module:model/KeyVersionSpec} The populated <code>KeyVersionSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyVersionSpec();

            if (data.hasOwnProperty('algorithm')) {
                obj['algorithm'] = ApiClient.convertToType(data['algorithm'], 'String');
            }
            if (data.hasOwnProperty('cloudKmsKeyVersion')) {
                obj['cloudKmsKeyVersion'] = ApiClient.convertToType(data['cloudKmsKeyVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyVersionSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyVersionSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['algorithm'] && !(typeof data['algorithm'] === 'string' || data['algorithm'] instanceof String)) {
            throw new Error("Expected the field `algorithm` to be a primitive type in the JSON string but got " + data['algorithm']);
        }
        // ensure the json data is a string
        if (data['cloudKmsKeyVersion'] && !(typeof data['cloudKmsKeyVersion'] === 'string' || data['cloudKmsKeyVersion'] instanceof String)) {
            throw new Error("Expected the field `cloudKmsKeyVersion` to be a primitive type in the JSON string but got " + data['cloudKmsKeyVersion']);
        }

        return true;
    }


}



/**
 * The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
 * @member {module:model/KeyVersionSpec.AlgorithmEnum} algorithm
 */
KeyVersionSpec.prototype['algorithm'] = undefined;

/**
 * The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/_*_/locations/_*_/keyRings/_*_/cryptoKeys/_*_/cryptoKeyVersions/_*`. This option enables full flexibility in the key's capabilities and properties.
 * @member {String} cloudKmsKeyVersion
 */
KeyVersionSpec.prototype['cloudKmsKeyVersion'] = undefined;





/**
 * Allowed values for the <code>algorithm</code> property.
 * @enum {String}
 * @readonly
 */
KeyVersionSpec['AlgorithmEnum'] = {

    /**
     * value: "SIGN_HASH_ALGORITHM_UNSPECIFIED"
     * @const
     */
    "SIGN_HASH_ALGORITHM_UNSPECIFIED": "SIGN_HASH_ALGORITHM_UNSPECIFIED",

    /**
     * value: "RSA_PSS_2048_SHA256"
     * @const
     */
    "RSA_PSS_2048_SHA256": "RSA_PSS_2048_SHA256",

    /**
     * value: "RSA_PSS_3072_SHA256"
     * @const
     */
    "RSA_PSS_3072_SHA256": "RSA_PSS_3072_SHA256",

    /**
     * value: "RSA_PSS_4096_SHA256"
     * @const
     */
    "RSA_PSS_4096_SHA256": "RSA_PSS_4096_SHA256",

    /**
     * value: "RSA_PKCS1_2048_SHA256"
     * @const
     */
    "RSA_PKCS1_2048_SHA256": "RSA_PKCS1_2048_SHA256",

    /**
     * value: "RSA_PKCS1_3072_SHA256"
     * @const
     */
    "RSA_PKCS1_3072_SHA256": "RSA_PKCS1_3072_SHA256",

    /**
     * value: "RSA_PKCS1_4096_SHA256"
     * @const
     */
    "RSA_PKCS1_4096_SHA256": "RSA_PKCS1_4096_SHA256",

    /**
     * value: "EC_P256_SHA256"
     * @const
     */
    "EC_P256_SHA256": "EC_P256_SHA256",

    /**
     * value: "EC_P384_SHA384"
     * @const
     */
    "EC_P384_SHA384": "EC_P384_SHA384"
};



export default KeyVersionSpec;

