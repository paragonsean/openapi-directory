/**
 * Certificate Authority API
 * The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CertificateAuthorityApi);
  }
}(this, function(expect, CertificateAuthorityApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CertificateAuthorityApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('privatecaProjectsLocationsCaPoolsCertificateAuthoritiesActivate', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificateAuthoritiesActivate successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificateAuthoritiesActivate
        //instance.privatecaProjectsLocationsCaPoolsCertificateAuthoritiesActivate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsList', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsList successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsList
        //instance.privatecaProjectsLocationsCaPoolsCertificateAuthoritiesCertificateRevocationListsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCertificateAuthoritiesCreate', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificateAuthoritiesCreate successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificateAuthoritiesCreate
        //instance.privatecaProjectsLocationsCaPoolsCertificateAuthoritiesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCertificateAuthoritiesDisable', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificateAuthoritiesDisable successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificateAuthoritiesDisable
        //instance.privatecaProjectsLocationsCaPoolsCertificateAuthoritiesDisable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCertificateAuthoritiesEnable', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificateAuthoritiesEnable successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificateAuthoritiesEnable
        //instance.privatecaProjectsLocationsCaPoolsCertificateAuthoritiesEnable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCertificateAuthoritiesFetch', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificateAuthoritiesFetch successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificateAuthoritiesFetch
        //instance.privatecaProjectsLocationsCaPoolsCertificateAuthoritiesFetch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCertificateAuthoritiesList', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificateAuthoritiesList successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificateAuthoritiesList
        //instance.privatecaProjectsLocationsCaPoolsCertificateAuthoritiesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCertificateAuthoritiesUndelete', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificateAuthoritiesUndelete successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificateAuthoritiesUndelete
        //instance.privatecaProjectsLocationsCaPoolsCertificateAuthoritiesUndelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCertificatesCreate', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificatesCreate successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificatesCreate
        //instance.privatecaProjectsLocationsCaPoolsCertificatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCertificatesList', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificatesList successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificatesList
        //instance.privatecaProjectsLocationsCaPoolsCertificatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCertificatesRevoke', function() {
      it('should call privatecaProjectsLocationsCaPoolsCertificatesRevoke successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCertificatesRevoke
        //instance.privatecaProjectsLocationsCaPoolsCertificatesRevoke(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsCreate', function() {
      it('should call privatecaProjectsLocationsCaPoolsCreate successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsCreate
        //instance.privatecaProjectsLocationsCaPoolsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsFetchCaCerts', function() {
      it('should call privatecaProjectsLocationsCaPoolsFetchCaCerts successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsFetchCaCerts
        //instance.privatecaProjectsLocationsCaPoolsFetchCaCerts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCaPoolsList', function() {
      it('should call privatecaProjectsLocationsCaPoolsList successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCaPoolsList
        //instance.privatecaProjectsLocationsCaPoolsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCertificateTemplatesCreate', function() {
      it('should call privatecaProjectsLocationsCertificateTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCertificateTemplatesCreate
        //instance.privatecaProjectsLocationsCertificateTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCertificateTemplatesGetIamPolicy', function() {
      it('should call privatecaProjectsLocationsCertificateTemplatesGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCertificateTemplatesGetIamPolicy
        //instance.privatecaProjectsLocationsCertificateTemplatesGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCertificateTemplatesList', function() {
      it('should call privatecaProjectsLocationsCertificateTemplatesList successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCertificateTemplatesList
        //instance.privatecaProjectsLocationsCertificateTemplatesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCertificateTemplatesPatch', function() {
      it('should call privatecaProjectsLocationsCertificateTemplatesPatch successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCertificateTemplatesPatch
        //instance.privatecaProjectsLocationsCertificateTemplatesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCertificateTemplatesSetIamPolicy', function() {
      it('should call privatecaProjectsLocationsCertificateTemplatesSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCertificateTemplatesSetIamPolicy
        //instance.privatecaProjectsLocationsCertificateTemplatesSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsCertificateTemplatesTestIamPermissions', function() {
      it('should call privatecaProjectsLocationsCertificateTemplatesTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsCertificateTemplatesTestIamPermissions
        //instance.privatecaProjectsLocationsCertificateTemplatesTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsList', function() {
      it('should call privatecaProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsList
        //instance.privatecaProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsOperationsCancel', function() {
      it('should call privatecaProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsOperationsCancel
        //instance.privatecaProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsOperationsDelete', function() {
      it('should call privatecaProjectsLocationsOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsOperationsDelete
        //instance.privatecaProjectsLocationsOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsOperationsGet', function() {
      it('should call privatecaProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsOperationsGet
        //instance.privatecaProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privatecaProjectsLocationsOperationsList', function() {
      it('should call privatecaProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test privatecaProjectsLocationsOperationsList
        //instance.privatecaProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
