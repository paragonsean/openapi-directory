/*
 * Policy Troubleshooter API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudPolicytroubleshooterV1BindingExplanation;
import org.openapitools.client.model.GoogleIamV1Policy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Details about how a specific IAM Policy contributed to the access check.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:27.029461-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPolicytroubleshooterV1ExplainedPolicy {
  /**
   * Indicates whether _this policy_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the principal actually has the permission, use the &#x60;access&#x60; field in the TroubleshootIamPolicyResponse.
   */
  @JsonAdapter(AccessEnum.Adapter.class)
  public enum AccessEnum {
    ACCESS_STATE_UNSPECIFIED("ACCESS_STATE_UNSPECIFIED"),
    
    GRANTED("GRANTED"),
    
    NOT_GRANTED("NOT_GRANTED"),
    
    UNKNOWN_CONDITIONAL("UNKNOWN_CONDITIONAL"),
    
    UNKNOWN_INFO_DENIED("UNKNOWN_INFO_DENIED");

    private String value;

    AccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AccessEnum fromValue(String value) {
      for (AccessEnum b : AccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AccessEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AccessEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ACCESS = "access";
  @SerializedName(SERIALIZED_NAME_ACCESS)
  private AccessEnum access;

  public static final String SERIALIZED_NAME_BINDING_EXPLANATIONS = "bindingExplanations";
  @SerializedName(SERIALIZED_NAME_BINDING_EXPLANATIONS)
  private List<GoogleCloudPolicytroubleshooterV1BindingExplanation> bindingExplanations = new ArrayList<>();

  public static final String SERIALIZED_NAME_FULL_RESOURCE_NAME = "fullResourceName";
  @SerializedName(SERIALIZED_NAME_FULL_RESOURCE_NAME)
  private String fullResourceName;

  public static final String SERIALIZED_NAME_POLICY = "policy";
  @SerializedName(SERIALIZED_NAME_POLICY)
  private GoogleIamV1Policy policy;

  /**
   * The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the sender of the request does not have access to the policy, this field is omitted.
   */
  @JsonAdapter(RelevanceEnum.Adapter.class)
  public enum RelevanceEnum {
    HEURISTIC_RELEVANCE_UNSPECIFIED("HEURISTIC_RELEVANCE_UNSPECIFIED"),
    
    NORMAL("NORMAL"),
    
    HIGH("HIGH");

    private String value;

    RelevanceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RelevanceEnum fromValue(String value) {
      for (RelevanceEnum b : RelevanceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RelevanceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RelevanceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RelevanceEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RelevanceEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RelevanceEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RELEVANCE = "relevance";
  @SerializedName(SERIALIZED_NAME_RELEVANCE)
  private RelevanceEnum relevance;

  public GoogleCloudPolicytroubleshooterV1ExplainedPolicy() {
  }

  public GoogleCloudPolicytroubleshooterV1ExplainedPolicy access(AccessEnum access) {
    this.access = access;
    return this;
  }

  /**
   * Indicates whether _this policy_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the principal actually has the permission, use the &#x60;access&#x60; field in the TroubleshootIamPolicyResponse.
   * @return access
   */
  @javax.annotation.Nullable
  public AccessEnum getAccess() {
    return access;
  }

  public void setAccess(AccessEnum access) {
    this.access = access;
  }


  public GoogleCloudPolicytroubleshooterV1ExplainedPolicy bindingExplanations(List<GoogleCloudPolicytroubleshooterV1BindingExplanation> bindingExplanations) {
    this.bindingExplanations = bindingExplanations;
    return this;
  }

  public GoogleCloudPolicytroubleshooterV1ExplainedPolicy addBindingExplanationsItem(GoogleCloudPolicytroubleshooterV1BindingExplanation bindingExplanationsItem) {
    if (this.bindingExplanations == null) {
      this.bindingExplanations = new ArrayList<>();
    }
    this.bindingExplanations.add(bindingExplanationsItem);
    return this;
  }

  /**
   * Details about how each binding in the policy affects the principal&#39;s ability, or inability, to use the permission for the resource. If the sender of the request does not have access to the policy, this field is omitted.
   * @return bindingExplanations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudPolicytroubleshooterV1BindingExplanation> getBindingExplanations() {
    return bindingExplanations;
  }

  public void setBindingExplanations(List<GoogleCloudPolicytroubleshooterV1BindingExplanation> bindingExplanations) {
    this.bindingExplanations = bindingExplanations;
  }


  public GoogleCloudPolicytroubleshooterV1ExplainedPolicy fullResourceName(String fullResourceName) {
    this.fullResourceName = fullResourceName;
    return this;
  }

  /**
   * The full resource name that identifies the resource. For example, &#x60;//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance&#x60;. If the sender of the request does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
   * @return fullResourceName
   */
  @javax.annotation.Nullable
  public String getFullResourceName() {
    return fullResourceName;
  }

  public void setFullResourceName(String fullResourceName) {
    this.fullResourceName = fullResourceName;
  }


  public GoogleCloudPolicytroubleshooterV1ExplainedPolicy policy(GoogleIamV1Policy policy) {
    this.policy = policy;
    return this;
  }

  /**
   * Get policy
   * @return policy
   */
  @javax.annotation.Nullable
  public GoogleIamV1Policy getPolicy() {
    return policy;
  }

  public void setPolicy(GoogleIamV1Policy policy) {
    this.policy = policy;
  }


  public GoogleCloudPolicytroubleshooterV1ExplainedPolicy relevance(RelevanceEnum relevance) {
    this.relevance = relevance;
    return this;
  }

  /**
   * The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the sender of the request does not have access to the policy, this field is omitted.
   * @return relevance
   */
  @javax.annotation.Nullable
  public RelevanceEnum getRelevance() {
    return relevance;
  }

  public void setRelevance(RelevanceEnum relevance) {
    this.relevance = relevance;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPolicytroubleshooterV1ExplainedPolicy googleCloudPolicytroubleshooterV1ExplainedPolicy = (GoogleCloudPolicytroubleshooterV1ExplainedPolicy) o;
    return Objects.equals(this.access, googleCloudPolicytroubleshooterV1ExplainedPolicy.access) &&
        Objects.equals(this.bindingExplanations, googleCloudPolicytroubleshooterV1ExplainedPolicy.bindingExplanations) &&
        Objects.equals(this.fullResourceName, googleCloudPolicytroubleshooterV1ExplainedPolicy.fullResourceName) &&
        Objects.equals(this.policy, googleCloudPolicytroubleshooterV1ExplainedPolicy.policy) &&
        Objects.equals(this.relevance, googleCloudPolicytroubleshooterV1ExplainedPolicy.relevance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(access, bindingExplanations, fullResourceName, policy, relevance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPolicytroubleshooterV1ExplainedPolicy {\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    bindingExplanations: ").append(toIndentedString(bindingExplanations)).append("\n");
    sb.append("    fullResourceName: ").append(toIndentedString(fullResourceName)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    relevance: ").append(toIndentedString(relevance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access");
    openapiFields.add("bindingExplanations");
    openapiFields.add("fullResourceName");
    openapiFields.add("policy");
    openapiFields.add("relevance");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPolicytroubleshooterV1ExplainedPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPolicytroubleshooterV1ExplainedPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPolicytroubleshooterV1ExplainedPolicy is not found in the empty JSON string", GoogleCloudPolicytroubleshooterV1ExplainedPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPolicytroubleshooterV1ExplainedPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPolicytroubleshooterV1ExplainedPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("access") != null && !jsonObj.get("access").isJsonNull()) && !jsonObj.get("access").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access").toString()));
      }
      // validate the optional field `access`
      if (jsonObj.get("access") != null && !jsonObj.get("access").isJsonNull()) {
        AccessEnum.validateJsonElement(jsonObj.get("access"));
      }
      if (jsonObj.get("bindingExplanations") != null && !jsonObj.get("bindingExplanations").isJsonNull()) {
        JsonArray jsonArraybindingExplanations = jsonObj.getAsJsonArray("bindingExplanations");
        if (jsonArraybindingExplanations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("bindingExplanations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `bindingExplanations` to be an array in the JSON string but got `%s`", jsonObj.get("bindingExplanations").toString()));
          }

          // validate the optional field `bindingExplanations` (array)
          for (int i = 0; i < jsonArraybindingExplanations.size(); i++) {
            GoogleCloudPolicytroubleshooterV1BindingExplanation.validateJsonElement(jsonArraybindingExplanations.get(i));
          };
        }
      }
      if ((jsonObj.get("fullResourceName") != null && !jsonObj.get("fullResourceName").isJsonNull()) && !jsonObj.get("fullResourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullResourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullResourceName").toString()));
      }
      // validate the optional field `policy`
      if (jsonObj.get("policy") != null && !jsonObj.get("policy").isJsonNull()) {
        GoogleIamV1Policy.validateJsonElement(jsonObj.get("policy"));
      }
      if ((jsonObj.get("relevance") != null && !jsonObj.get("relevance").isJsonNull()) && !jsonObj.get("relevance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relevance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relevance").toString()));
      }
      // validate the optional field `relevance`
      if (jsonObj.get("relevance") != null && !jsonObj.get("relevance").isJsonNull()) {
        RelevanceEnum.validateJsonElement(jsonObj.get("relevance"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPolicytroubleshooterV1ExplainedPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPolicytroubleshooterV1ExplainedPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPolicytroubleshooterV1ExplainedPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPolicytroubleshooterV1ExplainedPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPolicytroubleshooterV1ExplainedPolicy>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPolicytroubleshooterV1ExplainedPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPolicytroubleshooterV1ExplainedPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPolicytroubleshooterV1ExplainedPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPolicytroubleshooterV1ExplainedPolicy
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPolicytroubleshooterV1ExplainedPolicy
   */
  public static GoogleCloudPolicytroubleshooterV1ExplainedPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPolicytroubleshooterV1ExplainedPolicy.class);
  }

  /**
   * Convert an instance of GoogleCloudPolicytroubleshooterV1ExplainedPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

