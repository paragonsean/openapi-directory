/*
 * Policy Troubleshooter API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudPolicytroubleshooterV1ExplainedPolicy;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response for TroubleshootIamPolicy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:27.029461-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse {
  /**
   * Indicates whether the principal has the specified permission for the specified resource, based on evaluating all of the applicable IAM policies.
   */
  @JsonAdapter(AccessEnum.Adapter.class)
  public enum AccessEnum {
    ACCESS_STATE_UNSPECIFIED("ACCESS_STATE_UNSPECIFIED"),
    
    GRANTED("GRANTED"),
    
    NOT_GRANTED("NOT_GRANTED"),
    
    UNKNOWN_CONDITIONAL("UNKNOWN_CONDITIONAL"),
    
    UNKNOWN_INFO_DENIED("UNKNOWN_INFO_DENIED");

    private String value;

    AccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AccessEnum fromValue(String value) {
      for (AccessEnum b : AccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AccessEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AccessEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ACCESS = "access";
  @SerializedName(SERIALIZED_NAME_ACCESS)
  private AccessEnum access;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private List<GoogleRpcStatus> errors = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXPLAINED_POLICIES = "explainedPolicies";
  @SerializedName(SERIALIZED_NAME_EXPLAINED_POLICIES)
  private List<GoogleCloudPolicytroubleshooterV1ExplainedPolicy> explainedPolicies = new ArrayList<>();

  public GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse() {
  }

  public GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse access(AccessEnum access) {
    this.access = access;
    return this;
  }

  /**
   * Indicates whether the principal has the specified permission for the specified resource, based on evaluating all of the applicable IAM policies.
   * @return access
   */
  @javax.annotation.Nullable
  public AccessEnum getAccess() {
    return access;
  }

  public void setAccess(AccessEnum access) {
    this.access = access;
  }


  public GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse errors(List<GoogleRpcStatus> errors) {
    this.errors = errors;
    return this;
  }

  public GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse addErrorsItem(GoogleRpcStatus errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * The general errors contained in the troubleshooting response.
   * @return errors
   */
  @javax.annotation.Nullable
  public List<GoogleRpcStatus> getErrors() {
    return errors;
  }

  public void setErrors(List<GoogleRpcStatus> errors) {
    this.errors = errors;
  }


  public GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse explainedPolicies(List<GoogleCloudPolicytroubleshooterV1ExplainedPolicy> explainedPolicies) {
    this.explainedPolicies = explainedPolicies;
    return this;
  }

  public GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse addExplainedPoliciesItem(GoogleCloudPolicytroubleshooterV1ExplainedPolicy explainedPoliciesItem) {
    if (this.explainedPolicies == null) {
      this.explainedPolicies = new ArrayList<>();
    }
    this.explainedPolicies.add(explainedPoliciesItem);
    return this;
  }

  /**
   * List of IAM policies that were evaluated to check the principal&#39;s permissions, with annotations to indicate how each policy contributed to the final result. The list of policies can include the policy for the resource itself. It can also include policies that are inherited from higher levels of the resource hierarchy, including the organization, the folder, and the project. To learn more about the resource hierarchy, see https://cloud.google.com/iam/help/resource-hierarchy.
   * @return explainedPolicies
   */
  @javax.annotation.Nullable
  public List<GoogleCloudPolicytroubleshooterV1ExplainedPolicy> getExplainedPolicies() {
    return explainedPolicies;
  }

  public void setExplainedPolicies(List<GoogleCloudPolicytroubleshooterV1ExplainedPolicy> explainedPolicies) {
    this.explainedPolicies = explainedPolicies;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse googleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse = (GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse) o;
    return Objects.equals(this.access, googleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.access) &&
        Objects.equals(this.errors, googleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.errors) &&
        Objects.equals(this.explainedPolicies, googleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.explainedPolicies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(access, errors, explainedPolicies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse {\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    explainedPolicies: ").append(toIndentedString(explainedPolicies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access");
    openapiFields.add("errors");
    openapiFields.add("explainedPolicies");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse is not found in the empty JSON string", GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("access") != null && !jsonObj.get("access").isJsonNull()) && !jsonObj.get("access").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access").toString()));
      }
      // validate the optional field `access`
      if (jsonObj.get("access") != null && !jsonObj.get("access").isJsonNull()) {
        AccessEnum.validateJsonElement(jsonObj.get("access"));
      }
      if (jsonObj.get("errors") != null && !jsonObj.get("errors").isJsonNull()) {
        JsonArray jsonArrayerrors = jsonObj.getAsJsonArray("errors");
        if (jsonArrayerrors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("errors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `errors` to be an array in the JSON string but got `%s`", jsonObj.get("errors").toString()));
          }

          // validate the optional field `errors` (array)
          for (int i = 0; i < jsonArrayerrors.size(); i++) {
            GoogleRpcStatus.validateJsonElement(jsonArrayerrors.get(i));
          };
        }
      }
      if (jsonObj.get("explainedPolicies") != null && !jsonObj.get("explainedPolicies").isJsonNull()) {
        JsonArray jsonArrayexplainedPolicies = jsonObj.getAsJsonArray("explainedPolicies");
        if (jsonArrayexplainedPolicies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("explainedPolicies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `explainedPolicies` to be an array in the JSON string but got `%s`", jsonObj.get("explainedPolicies").toString()));
          }

          // validate the optional field `explainedPolicies` (array)
          for (int i = 0; i < jsonArrayexplainedPolicies.size(); i++) {
            GoogleCloudPolicytroubleshooterV1ExplainedPolicy.validateJsonElement(jsonArrayexplainedPolicies.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse
   */
  public static GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

