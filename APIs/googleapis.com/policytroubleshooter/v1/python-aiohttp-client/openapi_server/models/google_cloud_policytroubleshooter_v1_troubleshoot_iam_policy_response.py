# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_policytroubleshooter_v1_explained_policy import GoogleCloudPolicytroubleshooterV1ExplainedPolicy
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access: str=None, errors: List[GoogleRpcStatus]=None, explained_policies: List[GoogleCloudPolicytroubleshooterV1ExplainedPolicy]=None):
        """GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse - a model defined in OpenAPI

        :param access: The access of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.
        :param errors: The errors of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.
        :param explained_policies: The explained_policies of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.
        """
        self.openapi_types = {
            'access': str,
            'errors': List[GoogleRpcStatus],
            'explained_policies': List[GoogleCloudPolicytroubleshooterV1ExplainedPolicy]
        }

        self.attribute_map = {
            'access': 'access',
            'errors': 'errors',
            'explained_policies': 'explainedPolicies'
        }

        self._access = access
        self._errors = errors
        self._explained_policies = explained_policies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access(self):
        """Gets the access of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.

        Indicates whether the principal has the specified permission for the specified resource, based on evaluating all of the applicable IAM policies.

        :return: The access of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.
        :rtype: str
        """
        return self._access

    @access.setter
    def access(self, access):
        """Sets the access of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.

        Indicates whether the principal has the specified permission for the specified resource, based on evaluating all of the applicable IAM policies.

        :param access: The access of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.
        :type access: str
        """
        allowed_values = ["ACCESS_STATE_UNSPECIFIED", "GRANTED", "NOT_GRANTED", "UNKNOWN_CONDITIONAL", "UNKNOWN_INFO_DENIED"]  # noqa: E501
        if access not in allowed_values:
            raise ValueError(
                "Invalid value for `access` ({0}), must be one of {1}"
                .format(access, allowed_values)
            )

        self._access = access

    @property
    def errors(self):
        """Gets the errors of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.

        The general errors contained in the troubleshooting response.

        :return: The errors of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.
        :rtype: List[GoogleRpcStatus]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.

        The general errors contained in the troubleshooting response.

        :param errors: The errors of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.
        :type errors: List[GoogleRpcStatus]
        """

        self._errors = errors

    @property
    def explained_policies(self):
        """Gets the explained_policies of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.

        List of IAM policies that were evaluated to check the principal's permissions, with annotations to indicate how each policy contributed to the final result. The list of policies can include the policy for the resource itself. It can also include policies that are inherited from higher levels of the resource hierarchy, including the organization, the folder, and the project. To learn more about the resource hierarchy, see https://cloud.google.com/iam/help/resource-hierarchy.

        :return: The explained_policies of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.
        :rtype: List[GoogleCloudPolicytroubleshooterV1ExplainedPolicy]
        """
        return self._explained_policies

    @explained_policies.setter
    def explained_policies(self, explained_policies):
        """Sets the explained_policies of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.

        List of IAM policies that were evaluated to check the principal's permissions, with annotations to indicate how each policy contributed to the final result. The list of policies can include the policy for the resource itself. It can also include policies that are inherited from higher levels of the resource hierarchy, including the organization, the folder, and the project. To learn more about the resource hierarchy, see https://cloud.google.com/iam/help/resource-hierarchy.

        :param explained_policies: The explained_policies of this GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse.
        :type explained_policies: List[GoogleCloudPolicytroubleshooterV1ExplainedPolicy]
        """

        self._explained_policies = explained_policies
