/**
 * Policy Troubleshooter API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy() {
    this->initializeModel();
}

OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::~OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy() {}

void OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::initializeModel() {

    m_access_isSet = false;
    m_access_isValid = false;

    m_binding_explanations_isSet = false;
    m_binding_explanations_isValid = false;

    m_full_resource_name_isSet = false;
    m_full_resource_name_isValid = false;

    m_policy_isSet = false;
    m_policy_isValid = false;

    m_relevance_isSet = false;
    m_relevance_isValid = false;
}

void OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::fromJsonObject(QJsonObject json) {

    m_access_isValid = ::OpenAPI::fromJsonValue(m_access, json[QString("access")]);
    m_access_isSet = !json[QString("access")].isNull() && m_access_isValid;

    m_binding_explanations_isValid = ::OpenAPI::fromJsonValue(m_binding_explanations, json[QString("bindingExplanations")]);
    m_binding_explanations_isSet = !json[QString("bindingExplanations")].isNull() && m_binding_explanations_isValid;

    m_full_resource_name_isValid = ::OpenAPI::fromJsonValue(m_full_resource_name, json[QString("fullResourceName")]);
    m_full_resource_name_isSet = !json[QString("fullResourceName")].isNull() && m_full_resource_name_isValid;

    m_policy_isValid = ::OpenAPI::fromJsonValue(m_policy, json[QString("policy")]);
    m_policy_isSet = !json[QString("policy")].isNull() && m_policy_isValid;

    m_relevance_isValid = ::OpenAPI::fromJsonValue(m_relevance, json[QString("relevance")]);
    m_relevance_isSet = !json[QString("relevance")].isNull() && m_relevance_isValid;
}

QString OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_access_isSet) {
        obj.insert(QString("access"), ::OpenAPI::toJsonValue(m_access));
    }
    if (m_binding_explanations.size() > 0) {
        obj.insert(QString("bindingExplanations"), ::OpenAPI::toJsonValue(m_binding_explanations));
    }
    if (m_full_resource_name_isSet) {
        obj.insert(QString("fullResourceName"), ::OpenAPI::toJsonValue(m_full_resource_name));
    }
    if (m_policy.isSet()) {
        obj.insert(QString("policy"), ::OpenAPI::toJsonValue(m_policy));
    }
    if (m_relevance_isSet) {
        obj.insert(QString("relevance"), ::OpenAPI::toJsonValue(m_relevance));
    }
    return obj;
}

QString OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::getAccess() const {
    return m_access;
}
void OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::setAccess(const QString &access) {
    m_access = access;
    m_access_isSet = true;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::is_access_Set() const{
    return m_access_isSet;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::is_access_Valid() const{
    return m_access_isValid;
}

QList<OAIGoogleCloudPolicytroubleshooterV1BindingExplanation> OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::getBindingExplanations() const {
    return m_binding_explanations;
}
void OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::setBindingExplanations(const QList<OAIGoogleCloudPolicytroubleshooterV1BindingExplanation> &binding_explanations) {
    m_binding_explanations = binding_explanations;
    m_binding_explanations_isSet = true;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::is_binding_explanations_Set() const{
    return m_binding_explanations_isSet;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::is_binding_explanations_Valid() const{
    return m_binding_explanations_isValid;
}

QString OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::getFullResourceName() const {
    return m_full_resource_name;
}
void OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::setFullResourceName(const QString &full_resource_name) {
    m_full_resource_name = full_resource_name;
    m_full_resource_name_isSet = true;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::is_full_resource_name_Set() const{
    return m_full_resource_name_isSet;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::is_full_resource_name_Valid() const{
    return m_full_resource_name_isValid;
}

OAIGoogleIamV1Policy OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::getPolicy() const {
    return m_policy;
}
void OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::setPolicy(const OAIGoogleIamV1Policy &policy) {
    m_policy = policy;
    m_policy_isSet = true;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::is_policy_Set() const{
    return m_policy_isSet;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::is_policy_Valid() const{
    return m_policy_isValid;
}

QString OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::getRelevance() const {
    return m_relevance;
}
void OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::setRelevance(const QString &relevance) {
    m_relevance = relevance;
    m_relevance_isSet = true;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::is_relevance_Set() const{
    return m_relevance_isSet;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::is_relevance_Valid() const{
    return m_relevance_isValid;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_binding_explanations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_relevance_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPolicytroubleshooterV1ExplainedPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
