/**
 * Policy Troubleshooter API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleIamV1AuditLogConfig.h
 *
 * Provides the configuration for logging a type of permissions. Example: { \&quot;audit_log_configs\&quot;: [ { \&quot;log_type\&quot;: \&quot;DATA_READ\&quot;, \&quot;exempted_members\&quot;: [ \&quot;user:jose@example.com\&quot; ] }, { \&quot;log_type\&quot;: \&quot;DATA_WRITE\&quot; } ] } This enables &#39;DATA_READ&#39; and &#39;DATA_WRITE&#39; logging, while exempting jose@example.com from DATA_READ logging.
 */

#ifndef OAIGoogleIamV1AuditLogConfig_H
#define OAIGoogleIamV1AuditLogConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleIamV1AuditLogConfig : public OAIObject {
public:
    OAIGoogleIamV1AuditLogConfig();
    OAIGoogleIamV1AuditLogConfig(QString json);
    ~OAIGoogleIamV1AuditLogConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getExemptedMembers() const;
    void setExemptedMembers(const QList<QString> &exempted_members);
    bool is_exempted_members_Set() const;
    bool is_exempted_members_Valid() const;

    QString getLogType() const;
    void setLogType(const QString &log_type);
    bool is_log_type_Set() const;
    bool is_log_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_exempted_members;
    bool m_exempted_members_isSet;
    bool m_exempted_members_isValid;

    QString m_log_type;
    bool m_log_type_isSet;
    bool m_log_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleIamV1AuditLogConfig)

#endif // OAIGoogleIamV1AuditLogConfig_H
