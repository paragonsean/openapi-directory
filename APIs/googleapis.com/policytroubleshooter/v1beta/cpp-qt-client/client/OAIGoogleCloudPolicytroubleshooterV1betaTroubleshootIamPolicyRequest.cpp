/**
 * Policy Troubleshooter API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest() {
    this->initializeModel();
}

OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::~OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest() {}

void OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::initializeModel() {

    m_access_tuple_isSet = false;
    m_access_tuple_isValid = false;
}

void OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::fromJsonObject(QJsonObject json) {

    m_access_tuple_isValid = ::OpenAPI::fromJsonValue(m_access_tuple, json[QString("accessTuple")]);
    m_access_tuple_isSet = !json[QString("accessTuple")].isNull() && m_access_tuple_isValid;
}

QString OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_access_tuple.isSet()) {
        obj.insert(QString("accessTuple"), ::OpenAPI::toJsonValue(m_access_tuple));
    }
    return obj;
}

OAIGoogleCloudPolicytroubleshooterV1betaAccessTuple OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::getAccessTuple() const {
    return m_access_tuple;
}
void OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::setAccessTuple(const OAIGoogleCloudPolicytroubleshooterV1betaAccessTuple &access_tuple) {
    m_access_tuple = access_tuple;
    m_access_tuple_isSet = true;
}

bool OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::is_access_tuple_Set() const{
    return m_access_tuple_isSet;
}

bool OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::is_access_tuple_Valid() const{
    return m_access_tuple_isValid;
}

bool OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_tuple.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
