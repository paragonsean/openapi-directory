# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, membership: str=None, relevance: str=None):
        """GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership - a model defined in OpenAPI

        :param membership: The membership of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.
        :param relevance: The relevance of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.
        """
        self.openapi_types = {
            'membership': str,
            'relevance': str
        }

        self.attribute_map = {
            'membership': 'membership',
            'relevance': 'relevance'
        }

        self._membership = membership
        self._relevance = relevance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def membership(self):
        """Gets the membership of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.

        Indicates whether the binding includes the member.

        :return: The membership of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.
        :rtype: str
        """
        return self._membership

    @membership.setter
    def membership(self, membership):
        """Sets the membership of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.

        Indicates whether the binding includes the member.

        :param membership: The membership of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.
        :type membership: str
        """
        allowed_values = ["MEMBERSHIP_UNSPECIFIED", "MEMBERSHIP_INCLUDED", "MEMBERSHIP_NOT_INCLUDED", "MEMBERSHIP_UNKNOWN_INFO_DENIED", "MEMBERSHIP_UNKNOWN_UNSUPPORTED"]  # noqa: E501
        if membership not in allowed_values:
            raise ValueError(
                "Invalid value for `membership` ({0}), must be one of {1}"
                .format(membership, allowed_values)
            )

        self._membership = membership

    @property
    def relevance(self):
        """Gets the relevance of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.

        The relevance of the member's status to the overall determination for the binding.

        :return: The relevance of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.
        :rtype: str
        """
        return self._relevance

    @relevance.setter
    def relevance(self, relevance):
        """Sets the relevance of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.

        The relevance of the member's status to the overall determination for the binding.

        :param relevance: The relevance of this GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership.
        :type relevance: str
        """
        allowed_values = ["HEURISTIC_RELEVANCE_UNSPECIFIED", "NORMAL", "HIGH"]  # noqa: E501
        if relevance not in allowed_values:
            raise ValueError(
                "Invalid value for `relevance` ({0}), must be one of {1}"
                .format(relevance, allowed_values)
            )

        self._relevance = relevance
