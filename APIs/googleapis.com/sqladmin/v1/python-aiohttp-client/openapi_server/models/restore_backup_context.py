# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RestoreBackupContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_run_id: str=None, instance_id: str=None, kind: str=None, project: str=None):
        """RestoreBackupContext - a model defined in OpenAPI

        :param backup_run_id: The backup_run_id of this RestoreBackupContext.
        :param instance_id: The instance_id of this RestoreBackupContext.
        :param kind: The kind of this RestoreBackupContext.
        :param project: The project of this RestoreBackupContext.
        """
        self.openapi_types = {
            'backup_run_id': str,
            'instance_id': str,
            'kind': str,
            'project': str
        }

        self.attribute_map = {
            'backup_run_id': 'backupRunId',
            'instance_id': 'instanceId',
            'kind': 'kind',
            'project': 'project'
        }

        self._backup_run_id = backup_run_id
        self._instance_id = instance_id
        self._kind = kind
        self._project = project

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RestoreBackupContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RestoreBackupContext of this RestoreBackupContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_run_id(self):
        """Gets the backup_run_id of this RestoreBackupContext.

        The ID of the backup run to restore from.

        :return: The backup_run_id of this RestoreBackupContext.
        :rtype: str
        """
        return self._backup_run_id

    @backup_run_id.setter
    def backup_run_id(self, backup_run_id):
        """Sets the backup_run_id of this RestoreBackupContext.

        The ID of the backup run to restore from.

        :param backup_run_id: The backup_run_id of this RestoreBackupContext.
        :type backup_run_id: str
        """

        self._backup_run_id = backup_run_id

    @property
    def instance_id(self):
        """Gets the instance_id of this RestoreBackupContext.

        The ID of the instance that the backup was taken from.

        :return: The instance_id of this RestoreBackupContext.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this RestoreBackupContext.

        The ID of the instance that the backup was taken from.

        :param instance_id: The instance_id of this RestoreBackupContext.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def kind(self):
        """Gets the kind of this RestoreBackupContext.

        This is always `sql#restoreBackupContext`.

        :return: The kind of this RestoreBackupContext.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this RestoreBackupContext.

        This is always `sql#restoreBackupContext`.

        :param kind: The kind of this RestoreBackupContext.
        :type kind: str
        """

        self._kind = kind

    @property
    def project(self):
        """Gets the project of this RestoreBackupContext.

        The full project ID of the source instance.

        :return: The project of this RestoreBackupContext.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this RestoreBackupContext.

        The full project ID of the source instance.

        :param project: The project of this RestoreBackupContext.
        :type project: str
        """

        self._project = project
