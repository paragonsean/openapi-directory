# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DemoteContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, source_representative_instance_name: str=None):
        """DemoteContext - a model defined in OpenAPI

        :param kind: The kind of this DemoteContext.
        :param source_representative_instance_name: The source_representative_instance_name of this DemoteContext.
        """
        self.openapi_types = {
            'kind': str,
            'source_representative_instance_name': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'source_representative_instance_name': 'sourceRepresentativeInstanceName'
        }

        self._kind = kind
        self._source_representative_instance_name = source_representative_instance_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DemoteContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DemoteContext of this DemoteContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this DemoteContext.

        This is always `sql#demoteContext`.

        :return: The kind of this DemoteContext.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this DemoteContext.

        This is always `sql#demoteContext`.

        :param kind: The kind of this DemoteContext.
        :type kind: str
        """

        self._kind = kind

    @property
    def source_representative_instance_name(self):
        """Gets the source_representative_instance_name of this DemoteContext.

        Required. The name of the instance which acts as the on-premises primary instance in the replication setup.

        :return: The source_representative_instance_name of this DemoteContext.
        :rtype: str
        """
        return self._source_representative_instance_name

    @source_representative_instance_name.setter
    def source_representative_instance_name(self, source_representative_instance_name):
        """Sets the source_representative_instance_name of this DemoteContext.

        Required. The name of the instance which acts as the on-premises primary instance in the replication setup.

        :param source_representative_instance_name: The source_representative_instance_name of this DemoteContext.
        :type source_representative_instance_name: str
        """

        self._source_representative_instance_name = source_representative_instance_name
