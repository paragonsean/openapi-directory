# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BinLogCoordinates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bin_log_file_name: str=None, bin_log_position: str=None, kind: str=None):
        """BinLogCoordinates - a model defined in OpenAPI

        :param bin_log_file_name: The bin_log_file_name of this BinLogCoordinates.
        :param bin_log_position: The bin_log_position of this BinLogCoordinates.
        :param kind: The kind of this BinLogCoordinates.
        """
        self.openapi_types = {
            'bin_log_file_name': str,
            'bin_log_position': str,
            'kind': str
        }

        self.attribute_map = {
            'bin_log_file_name': 'binLogFileName',
            'bin_log_position': 'binLogPosition',
            'kind': 'kind'
        }

        self._bin_log_file_name = bin_log_file_name
        self._bin_log_position = bin_log_position
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BinLogCoordinates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BinLogCoordinates of this BinLogCoordinates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bin_log_file_name(self):
        """Gets the bin_log_file_name of this BinLogCoordinates.

        Name of the binary log file for a Cloud SQL instance.

        :return: The bin_log_file_name of this BinLogCoordinates.
        :rtype: str
        """
        return self._bin_log_file_name

    @bin_log_file_name.setter
    def bin_log_file_name(self, bin_log_file_name):
        """Sets the bin_log_file_name of this BinLogCoordinates.

        Name of the binary log file for a Cloud SQL instance.

        :param bin_log_file_name: The bin_log_file_name of this BinLogCoordinates.
        :type bin_log_file_name: str
        """

        self._bin_log_file_name = bin_log_file_name

    @property
    def bin_log_position(self):
        """Gets the bin_log_position of this BinLogCoordinates.

        Position (offset) within the binary log file.

        :return: The bin_log_position of this BinLogCoordinates.
        :rtype: str
        """
        return self._bin_log_position

    @bin_log_position.setter
    def bin_log_position(self, bin_log_position):
        """Sets the bin_log_position of this BinLogCoordinates.

        Position (offset) within the binary log file.

        :param bin_log_position: The bin_log_position of this BinLogCoordinates.
        :type bin_log_position: str
        """

        self._bin_log_position = bin_log_position

    @property
    def kind(self):
        """Gets the kind of this BinLogCoordinates.

        This is always `sql#binLogCoordinates`.

        :return: The kind of this BinLogCoordinates.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this BinLogCoordinates.

        This is always `sql#binLogCoordinates`.

        :param kind: The kind of this BinLogCoordinates.
        :type kind: str
        """

        self._kind = kind
