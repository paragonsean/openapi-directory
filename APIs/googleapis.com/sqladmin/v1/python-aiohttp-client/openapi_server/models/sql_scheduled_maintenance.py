# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SqlScheduledMaintenance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_defer: bool=None, can_reschedule: bool=None, schedule_deadline_time: str=None, start_time: str=None):
        """SqlScheduledMaintenance - a model defined in OpenAPI

        :param can_defer: The can_defer of this SqlScheduledMaintenance.
        :param can_reschedule: The can_reschedule of this SqlScheduledMaintenance.
        :param schedule_deadline_time: The schedule_deadline_time of this SqlScheduledMaintenance.
        :param start_time: The start_time of this SqlScheduledMaintenance.
        """
        self.openapi_types = {
            'can_defer': bool,
            'can_reschedule': bool,
            'schedule_deadline_time': str,
            'start_time': str
        }

        self.attribute_map = {
            'can_defer': 'canDefer',
            'can_reschedule': 'canReschedule',
            'schedule_deadline_time': 'scheduleDeadlineTime',
            'start_time': 'startTime'
        }

        self._can_defer = can_defer
        self._can_reschedule = can_reschedule
        self._schedule_deadline_time = schedule_deadline_time
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SqlScheduledMaintenance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SqlScheduledMaintenance of this SqlScheduledMaintenance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_defer(self):
        """Gets the can_defer of this SqlScheduledMaintenance.


        :return: The can_defer of this SqlScheduledMaintenance.
        :rtype: bool
        """
        return self._can_defer

    @can_defer.setter
    def can_defer(self, can_defer):
        """Sets the can_defer of this SqlScheduledMaintenance.


        :param can_defer: The can_defer of this SqlScheduledMaintenance.
        :type can_defer: bool
        """

        self._can_defer = can_defer

    @property
    def can_reschedule(self):
        """Gets the can_reschedule of this SqlScheduledMaintenance.

        If the scheduled maintenance can be rescheduled.

        :return: The can_reschedule of this SqlScheduledMaintenance.
        :rtype: bool
        """
        return self._can_reschedule

    @can_reschedule.setter
    def can_reschedule(self, can_reschedule):
        """Sets the can_reschedule of this SqlScheduledMaintenance.

        If the scheduled maintenance can be rescheduled.

        :param can_reschedule: The can_reschedule of this SqlScheduledMaintenance.
        :type can_reschedule: bool
        """

        self._can_reschedule = can_reschedule

    @property
    def schedule_deadline_time(self):
        """Gets the schedule_deadline_time of this SqlScheduledMaintenance.

        Maintenance cannot be rescheduled to start beyond this deadline.

        :return: The schedule_deadline_time of this SqlScheduledMaintenance.
        :rtype: str
        """
        return self._schedule_deadline_time

    @schedule_deadline_time.setter
    def schedule_deadline_time(self, schedule_deadline_time):
        """Sets the schedule_deadline_time of this SqlScheduledMaintenance.

        Maintenance cannot be rescheduled to start beyond this deadline.

        :param schedule_deadline_time: The schedule_deadline_time of this SqlScheduledMaintenance.
        :type schedule_deadline_time: str
        """

        self._schedule_deadline_time = schedule_deadline_time

    @property
    def start_time(self):
        """Gets the start_time of this SqlScheduledMaintenance.

        The start time of any upcoming scheduled maintenance for this instance.

        :return: The start_time of this SqlScheduledMaintenance.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this SqlScheduledMaintenance.

        The start time of any upcoming scheduled maintenance for this instance.

        :param start_time: The start_time of this SqlScheduledMaintenance.
        :type start_time: str
        """

        self._start_time = start_time
