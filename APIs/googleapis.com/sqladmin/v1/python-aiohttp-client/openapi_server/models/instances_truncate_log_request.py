# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.truncate_log_context import TruncateLogContext
from openapi_server import util


class InstancesTruncateLogRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, truncate_log_context: TruncateLogContext=None):
        """InstancesTruncateLogRequest - a model defined in OpenAPI

        :param truncate_log_context: The truncate_log_context of this InstancesTruncateLogRequest.
        """
        self.openapi_types = {
            'truncate_log_context': TruncateLogContext
        }

        self.attribute_map = {
            'truncate_log_context': 'truncateLogContext'
        }

        self._truncate_log_context = truncate_log_context

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstancesTruncateLogRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstancesTruncateLogRequest of this InstancesTruncateLogRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def truncate_log_context(self):
        """Gets the truncate_log_context of this InstancesTruncateLogRequest.


        :return: The truncate_log_context of this InstancesTruncateLogRequest.
        :rtype: TruncateLogContext
        """
        return self._truncate_log_context

    @truncate_log_context.setter
    def truncate_log_context(self, truncate_log_context):
        """Sets the truncate_log_context of this InstancesTruncateLogRequest.


        :param truncate_log_context: The truncate_log_context of this InstancesTruncateLogRequest.
        :type truncate_log_context: TruncateLogContext
        """

        self._truncate_log_context = truncate_log_context
