# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.failover_context import FailoverContext
from openapi_server import util


class InstancesFailoverRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failover_context: FailoverContext=None):
        """InstancesFailoverRequest - a model defined in OpenAPI

        :param failover_context: The failover_context of this InstancesFailoverRequest.
        """
        self.openapi_types = {
            'failover_context': FailoverContext
        }

        self.attribute_map = {
            'failover_context': 'failoverContext'
        }

        self._failover_context = failover_context

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstancesFailoverRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstancesFailoverRequest of this InstancesFailoverRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failover_context(self):
        """Gets the failover_context of this InstancesFailoverRequest.


        :return: The failover_context of this InstancesFailoverRequest.
        :rtype: FailoverContext
        """
        return self._failover_context

    @failover_context.setter
    def failover_context(self, failover_context):
        """Sets the failover_context of this InstancesFailoverRequest.


        :param failover_context: The failover_context of this InstancesFailoverRequest.
        :type failover_context: FailoverContext
        """

        self._failover_context = failover_context
