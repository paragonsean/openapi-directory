# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.demote_master_my_sql_replica_configuration import DemoteMasterMySqlReplicaConfiguration
from openapi_server import util


class DemoteMasterConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, mysql_replica_configuration: DemoteMasterMySqlReplicaConfiguration=None):
        """DemoteMasterConfiguration - a model defined in OpenAPI

        :param kind: The kind of this DemoteMasterConfiguration.
        :param mysql_replica_configuration: The mysql_replica_configuration of this DemoteMasterConfiguration.
        """
        self.openapi_types = {
            'kind': str,
            'mysql_replica_configuration': DemoteMasterMySqlReplicaConfiguration
        }

        self.attribute_map = {
            'kind': 'kind',
            'mysql_replica_configuration': 'mysqlReplicaConfiguration'
        }

        self._kind = kind
        self._mysql_replica_configuration = mysql_replica_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DemoteMasterConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DemoteMasterConfiguration of this DemoteMasterConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this DemoteMasterConfiguration.

        This is always `sql#demoteMasterConfiguration`.

        :return: The kind of this DemoteMasterConfiguration.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this DemoteMasterConfiguration.

        This is always `sql#demoteMasterConfiguration`.

        :param kind: The kind of this DemoteMasterConfiguration.
        :type kind: str
        """

        self._kind = kind

    @property
    def mysql_replica_configuration(self):
        """Gets the mysql_replica_configuration of this DemoteMasterConfiguration.


        :return: The mysql_replica_configuration of this DemoteMasterConfiguration.
        :rtype: DemoteMasterMySqlReplicaConfiguration
        """
        return self._mysql_replica_configuration

    @mysql_replica_configuration.setter
    def mysql_replica_configuration(self, mysql_replica_configuration):
        """Sets the mysql_replica_configuration of this DemoteMasterConfiguration.


        :param mysql_replica_configuration: The mysql_replica_configuration of this DemoteMasterConfiguration.
        :type mysql_replica_configuration: DemoteMasterMySqlReplicaConfiguration
        """

        self._mysql_replica_configuration = mysql_replica_configuration
