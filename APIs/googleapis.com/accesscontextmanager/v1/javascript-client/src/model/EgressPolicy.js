/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EgressFrom from './EgressFrom';
import EgressTo from './EgressTo';

/**
 * The EgressPolicy model module.
 * @module model/EgressPolicy
 * @version v1
 */
class EgressPolicy {
    /**
     * Constructs a new <code>EgressPolicy</code>.
     * Policy for egress from perimeter. EgressPolicies match requests based on &#x60;egress_from&#x60; and &#x60;egress_to&#x60; stanzas. For an EgressPolicy to match, both &#x60;egress_from&#x60; and &#x60;egress_to&#x60; stanzas must be matched. If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter boundary. For example, an EgressPolicy can be used to allow VMs on networks within the ServicePerimeter to access a defined set of projects outside the perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket or query against a BigQuery dataset). EgressPolicies are concerned with the *resources* that a request relates as well as the API services and API actions being used. They do not related to the direction of data movement. More detailed documentation for this concept can be found in the descriptions of EgressFrom and EgressTo.
     * @alias module:model/EgressPolicy
     */
    constructor() { 
        
        EgressPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EgressPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EgressPolicy} obj Optional instance to populate.
     * @return {module:model/EgressPolicy} The populated <code>EgressPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EgressPolicy();

            if (data.hasOwnProperty('egressFrom')) {
                obj['egressFrom'] = EgressFrom.constructFromObject(data['egressFrom']);
            }
            if (data.hasOwnProperty('egressTo')) {
                obj['egressTo'] = EgressTo.constructFromObject(data['egressTo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EgressPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EgressPolicy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `egressFrom`
        if (data['egressFrom']) { // data not null
          EgressFrom.validateJSON(data['egressFrom']);
        }
        // validate the optional field `egressTo`
        if (data['egressTo']) { // data not null
          EgressTo.validateJSON(data['egressTo']);
        }

        return true;
    }


}



/**
 * @member {module:model/EgressFrom} egressFrom
 */
EgressPolicy.prototype['egressFrom'] = undefined;

/**
 * @member {module:model/EgressTo} egressTo
 */
EgressPolicy.prototype['egressTo'] = undefined;






export default EgressPolicy;

