/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GcpUserAccessBinding model module.
 * @module model/GcpUserAccessBinding
 * @version v1
 */
class GcpUserAccessBinding {
    /**
     * Constructs a new <code>GcpUserAccessBinding</code>.
     * Restricts access to Cloud Console and Google Cloud APIs for a set of users using Context-Aware Access.
     * @alias module:model/GcpUserAccessBinding
     */
    constructor() { 
        
        GcpUserAccessBinding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GcpUserAccessBinding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GcpUserAccessBinding} obj Optional instance to populate.
     * @return {module:model/GcpUserAccessBinding} The populated <code>GcpUserAccessBinding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GcpUserAccessBinding();

            if (data.hasOwnProperty('accessLevels')) {
                obj['accessLevels'] = ApiClient.convertToType(data['accessLevels'], ['String']);
            }
            if (data.hasOwnProperty('dryRunAccessLevels')) {
                obj['dryRunAccessLevels'] = ApiClient.convertToType(data['dryRunAccessLevels'], ['String']);
            }
            if (data.hasOwnProperty('groupKey')) {
                obj['groupKey'] = ApiClient.convertToType(data['groupKey'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GcpUserAccessBinding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GcpUserAccessBinding</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['accessLevels'])) {
            throw new Error("Expected the field `accessLevels` to be an array in the JSON data but got " + data['accessLevels']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dryRunAccessLevels'])) {
            throw new Error("Expected the field `dryRunAccessLevels` to be an array in the JSON data but got " + data['dryRunAccessLevels']);
        }
        // ensure the json data is a string
        if (data['groupKey'] && !(typeof data['groupKey'] === 'string' || data['groupKey'] instanceof String)) {
            throw new Error("Expected the field `groupKey` to be a primitive type in the JSON string but got " + data['groupKey']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Optional. Access level that a user must have to be granted access. Only one access level is supported, not multiple. This repeated field must have exactly one element. Example: \"accessPolicies/9522/accessLevels/device_trusted\"
 * @member {Array.<String>} accessLevels
 */
GcpUserAccessBinding.prototype['accessLevels'] = undefined;

/**
 * Optional. Dry run access level that will be evaluated but will not be enforced. The access denial based on dry run policy will be logged. Only one access level is supported, not multiple. This list must have exactly one element. Example: \"accessPolicies/9522/accessLevels/device_trusted\"
 * @member {Array.<String>} dryRunAccessLevels
 */
GcpUserAccessBinding.prototype['dryRunAccessLevels'] = undefined;

/**
 * Required. Immutable. Google Group id whose members are subject to this binding's restrictions. See \"id\" in the [G Suite Directory API's Groups resource] (https://developers.google.com/admin-sdk/directory/v1/reference/groups#resource). If a group's email address/alias is changed, this resource will continue to point at the changed group. This field does not accept group email addresses or aliases. Example: \"01d520gv4vjcrht\"
 * @member {String} groupKey
 */
GcpUserAccessBinding.prototype['groupKey'] = undefined;

/**
 * Immutable. Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by [RFC 3986 Section 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client during creation. Example: \"organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N\"
 * @member {String} name
 */
GcpUserAccessBinding.prototype['name'] = undefined;






export default GcpUserAccessBinding;

