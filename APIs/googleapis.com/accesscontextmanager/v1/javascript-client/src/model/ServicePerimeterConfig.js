/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EgressPolicy from './EgressPolicy';
import IngressPolicy from './IngressPolicy';
import VpcAccessibleServices from './VpcAccessibleServices';

/**
 * The ServicePerimeterConfig model module.
 * @module model/ServicePerimeterConfig
 * @version v1
 */
class ServicePerimeterConfig {
    /**
     * Constructs a new <code>ServicePerimeterConfig</code>.
     * &#x60;ServicePerimeterConfig&#x60; specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
     * @alias module:model/ServicePerimeterConfig
     */
    constructor() { 
        
        ServicePerimeterConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServicePerimeterConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServicePerimeterConfig} obj Optional instance to populate.
     * @return {module:model/ServicePerimeterConfig} The populated <code>ServicePerimeterConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServicePerimeterConfig();

            if (data.hasOwnProperty('accessLevels')) {
                obj['accessLevels'] = ApiClient.convertToType(data['accessLevels'], ['String']);
            }
            if (data.hasOwnProperty('egressPolicies')) {
                obj['egressPolicies'] = ApiClient.convertToType(data['egressPolicies'], [EgressPolicy]);
            }
            if (data.hasOwnProperty('ingressPolicies')) {
                obj['ingressPolicies'] = ApiClient.convertToType(data['ingressPolicies'], [IngressPolicy]);
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], ['String']);
            }
            if (data.hasOwnProperty('restrictedServices')) {
                obj['restrictedServices'] = ApiClient.convertToType(data['restrictedServices'], ['String']);
            }
            if (data.hasOwnProperty('vpcAccessibleServices')) {
                obj['vpcAccessibleServices'] = VpcAccessibleServices.constructFromObject(data['vpcAccessibleServices']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServicePerimeterConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServicePerimeterConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['accessLevels'])) {
            throw new Error("Expected the field `accessLevels` to be an array in the JSON data but got " + data['accessLevels']);
        }
        if (data['egressPolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['egressPolicies'])) {
                throw new Error("Expected the field `egressPolicies` to be an array in the JSON data but got " + data['egressPolicies']);
            }
            // validate the optional field `egressPolicies` (array)
            for (const item of data['egressPolicies']) {
                EgressPolicy.validateJSON(item);
            };
        }
        if (data['ingressPolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ingressPolicies'])) {
                throw new Error("Expected the field `ingressPolicies` to be an array in the JSON data but got " + data['ingressPolicies']);
            }
            // validate the optional field `ingressPolicies` (array)
            for (const item of data['ingressPolicies']) {
                IngressPolicy.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['resources'])) {
            throw new Error("Expected the field `resources` to be an array in the JSON data but got " + data['resources']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['restrictedServices'])) {
            throw new Error("Expected the field `restrictedServices` to be an array in the JSON data but got " + data['restrictedServices']);
        }
        // validate the optional field `vpcAccessibleServices`
        if (data['vpcAccessibleServices']) { // data not null
          VpcAccessibleServices.validateJSON(data['vpcAccessibleServices']);
        }

        return true;
    }


}



/**
 * A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `\"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL\"`. For Service Perimeter Bridge, must be empty.
 * @member {Array.<String>} accessLevels
 */
ServicePerimeterConfig.prototype['accessLevels'] = undefined;

/**
 * List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge.
 * @member {Array.<module:model/EgressPolicy>} egressPolicies
 */
ServicePerimeterConfig.prototype['egressPolicies'] = undefined;

/**
 * List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge.
 * @member {Array.<module:model/IngressPolicy>} ingressPolicies
 */
ServicePerimeterConfig.prototype['ingressPolicies'] = undefined;

/**
 * A list of Google Cloud resources that are inside of the service perimeter. Currently only projects and VPCs are allowed. Project format: `projects/{project_number}` VPC network format: `//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}`.
 * @member {Array.<String>} resources
 */
ServicePerimeterConfig.prototype['resources'] = undefined;

/**
 * Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter's access restrictions.
 * @member {Array.<String>} restrictedServices
 */
ServicePerimeterConfig.prototype['restrictedServices'] = undefined;

/**
 * @member {module:model/VpcAccessibleServices} vpcAccessibleServices
 */
ServicePerimeterConfig.prototype['vpcAccessibleServices'] = undefined;






export default ServicePerimeterConfig;

