/*
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GcpUserAccessBinding;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response of ListGcpUserAccessBindings.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:36.086263-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListGcpUserAccessBindingsResponse {
  public static final String SERIALIZED_NAME_GCP_USER_ACCESS_BINDINGS = "gcpUserAccessBindings";
  @SerializedName(SERIALIZED_NAME_GCP_USER_ACCESS_BINDINGS)
  private List<GcpUserAccessBinding> gcpUserAccessBindings = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEXT_PAGE_TOKEN = "nextPageToken";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_TOKEN)
  private String nextPageToken;

  public ListGcpUserAccessBindingsResponse() {
  }

  public ListGcpUserAccessBindingsResponse gcpUserAccessBindings(List<GcpUserAccessBinding> gcpUserAccessBindings) {
    this.gcpUserAccessBindings = gcpUserAccessBindings;
    return this;
  }

  public ListGcpUserAccessBindingsResponse addGcpUserAccessBindingsItem(GcpUserAccessBinding gcpUserAccessBindingsItem) {
    if (this.gcpUserAccessBindings == null) {
      this.gcpUserAccessBindings = new ArrayList<>();
    }
    this.gcpUserAccessBindings.add(gcpUserAccessBindingsItem);
    return this;
  }

  /**
   * GcpUserAccessBinding
   * @return gcpUserAccessBindings
   */
  @javax.annotation.Nullable
  public List<GcpUserAccessBinding> getGcpUserAccessBindings() {
    return gcpUserAccessBindings;
  }

  public void setGcpUserAccessBindings(List<GcpUserAccessBinding> gcpUserAccessBindings) {
    this.gcpUserAccessBindings = gcpUserAccessBindings;
  }


  public ListGcpUserAccessBindingsResponse nextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

  /**
   * Token to get the next page of items. If blank, there are no more items.
   * @return nextPageToken
   */
  @javax.annotation.Nullable
  public String getNextPageToken() {
    return nextPageToken;
  }

  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListGcpUserAccessBindingsResponse listGcpUserAccessBindingsResponse = (ListGcpUserAccessBindingsResponse) o;
    return Objects.equals(this.gcpUserAccessBindings, listGcpUserAccessBindingsResponse.gcpUserAccessBindings) &&
        Objects.equals(this.nextPageToken, listGcpUserAccessBindingsResponse.nextPageToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gcpUserAccessBindings, nextPageToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListGcpUserAccessBindingsResponse {\n");
    sb.append("    gcpUserAccessBindings: ").append(toIndentedString(gcpUserAccessBindings)).append("\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("gcpUserAccessBindings");
    openapiFields.add("nextPageToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListGcpUserAccessBindingsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListGcpUserAccessBindingsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListGcpUserAccessBindingsResponse is not found in the empty JSON string", ListGcpUserAccessBindingsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListGcpUserAccessBindingsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListGcpUserAccessBindingsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("gcpUserAccessBindings") != null && !jsonObj.get("gcpUserAccessBindings").isJsonNull()) {
        JsonArray jsonArraygcpUserAccessBindings = jsonObj.getAsJsonArray("gcpUserAccessBindings");
        if (jsonArraygcpUserAccessBindings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("gcpUserAccessBindings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `gcpUserAccessBindings` to be an array in the JSON string but got `%s`", jsonObj.get("gcpUserAccessBindings").toString()));
          }

          // validate the optional field `gcpUserAccessBindings` (array)
          for (int i = 0; i < jsonArraygcpUserAccessBindings.size(); i++) {
            GcpUserAccessBinding.validateJsonElement(jsonArraygcpUserAccessBindings.get(i));
          };
        }
      }
      if ((jsonObj.get("nextPageToken") != null && !jsonObj.get("nextPageToken").isJsonNull()) && !jsonObj.get("nextPageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextPageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextPageToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListGcpUserAccessBindingsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListGcpUserAccessBindingsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListGcpUserAccessBindingsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListGcpUserAccessBindingsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ListGcpUserAccessBindingsResponse>() {
           @Override
           public void write(JsonWriter out, ListGcpUserAccessBindingsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListGcpUserAccessBindingsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListGcpUserAccessBindingsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListGcpUserAccessBindingsResponse
   * @throws IOException if the JSON string is invalid with respect to ListGcpUserAccessBindingsResponse
   */
  public static ListGcpUserAccessBindingsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListGcpUserAccessBindingsResponse.class);
  }

  /**
   * Convert an instance of ListGcpUserAccessBindingsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

