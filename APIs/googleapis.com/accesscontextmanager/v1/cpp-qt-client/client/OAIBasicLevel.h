/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBasicLevel.h
 *
 * &#x60;BasicLevel&#x60; is an &#x60;AccessLevel&#x60; using a set of recommended features.
 */

#ifndef OAIBasicLevel_H
#define OAIBasicLevel_H

#include <QJsonObject>

#include "OAICondition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICondition;

class OAIBasicLevel : public OAIObject {
public:
    OAIBasicLevel();
    OAIBasicLevel(QString json);
    ~OAIBasicLevel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCombiningFunction() const;
    void setCombiningFunction(const QString &combining_function);
    bool is_combining_function_Set() const;
    bool is_combining_function_Valid() const;

    QList<OAICondition> getConditions() const;
    void setConditions(const QList<OAICondition> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_combining_function;
    bool m_combining_function_isSet;
    bool m_combining_function_isValid;

    QList<OAICondition> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBasicLevel)

#endif // OAIBasicLevel_H
