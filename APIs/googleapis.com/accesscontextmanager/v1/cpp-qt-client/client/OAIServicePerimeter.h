/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServicePerimeter.h
 *
 * &#x60;ServicePerimeter&#x60; describes a set of Google Cloud resources which can freely import and export data amongst themselves, but not export outside of the &#x60;ServicePerimeter&#x60;. If a request with a source within this &#x60;ServicePerimeter&#x60; has a target outside of the &#x60;ServicePerimeter&#x60;, the request will be blocked. Otherwise the request is allowed. There are two types of Service Perimeter - Regular and Bridge. Regular Service Perimeters cannot overlap, a single Google Cloud project or VPC network can only belong to a single regular Service Perimeter. Service Perimeter Bridges can contain only Google Cloud projects as members, a single Google Cloud project may belong to multiple Service Perimeter Bridges.
 */

#ifndef OAIServicePerimeter_H
#define OAIServicePerimeter_H

#include <QJsonObject>

#include "OAIServicePerimeterConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIServicePerimeterConfig;

class OAIServicePerimeter : public OAIObject {
public:
    OAIServicePerimeter();
    OAIServicePerimeter(QString json);
    ~OAIServicePerimeter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPerimeterType() const;
    void setPerimeterType(const QString &perimeter_type);
    bool is_perimeter_type_Set() const;
    bool is_perimeter_type_Valid() const;

    OAIServicePerimeterConfig getSpec() const;
    void setSpec(const OAIServicePerimeterConfig &spec);
    bool is_spec_Set() const;
    bool is_spec_Valid() const;

    OAIServicePerimeterConfig getStatus() const;
    void setStatus(const OAIServicePerimeterConfig &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    bool isUseExplicitDryRunSpec() const;
    void setUseExplicitDryRunSpec(const bool &use_explicit_dry_run_spec);
    bool is_use_explicit_dry_run_spec_Set() const;
    bool is_use_explicit_dry_run_spec_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_perimeter_type;
    bool m_perimeter_type_isSet;
    bool m_perimeter_type_isValid;

    OAIServicePerimeterConfig m_spec;
    bool m_spec_isSet;
    bool m_spec_isValid;

    OAIServicePerimeterConfig m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    bool m_use_explicit_dry_run_spec;
    bool m_use_explicit_dry_run_spec_isSet;
    bool m_use_explicit_dry_run_spec_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServicePerimeter)

#endif // OAIServicePerimeter_H
