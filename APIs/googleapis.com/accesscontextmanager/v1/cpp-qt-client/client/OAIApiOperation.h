/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiOperation.h
 *
 * Identification for an API Operation.
 */

#ifndef OAIApiOperation_H
#define OAIApiOperation_H

#include <QJsonObject>

#include "OAIMethodSelector.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMethodSelector;

class OAIApiOperation : public OAIObject {
public:
    OAIApiOperation();
    OAIApiOperation(QString json);
    ~OAIApiOperation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIMethodSelector> getMethodSelectors() const;
    void setMethodSelectors(const QList<OAIMethodSelector> &method_selectors);
    bool is_method_selectors_Set() const;
    bool is_method_selectors_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIMethodSelector> m_method_selectors;
    bool m_method_selectors_isSet;
    bool m_method_selectors_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiOperation)

#endif // OAIApiOperation_H
