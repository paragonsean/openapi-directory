/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIngressPolicy.h
 *
 * Policy for ingress into ServicePerimeter. IngressPolicies match requests based on &#x60;ingress_from&#x60; and &#x60;ingress_to&#x60; stanzas. For an ingress policy to match, both the &#x60;ingress_from&#x60; and &#x60;ingress_to&#x60; stanzas must be matched. If an IngressPolicy matches a request, the request is allowed through the perimeter boundary from outside the perimeter. For example, access from the internet can be allowed either based on an AccessLevel or, for traffic hosted on Google Cloud, the project of the source network. For access from private networks, using the project of the hosting network is required. Individual ingress policies can be limited by restricting which services and/or actions they match using the &#x60;ingress_to&#x60; field.
 */

#ifndef OAIIngressPolicy_H
#define OAIIngressPolicy_H

#include <QJsonObject>

#include "OAIIngressFrom.h"
#include "OAIIngressTo.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIngressFrom;
class OAIIngressTo;

class OAIIngressPolicy : public OAIObject {
public:
    OAIIngressPolicy();
    OAIIngressPolicy(QString json);
    ~OAIIngressPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIngressFrom getIngressFrom() const;
    void setIngressFrom(const OAIIngressFrom &ingress_from);
    bool is_ingress_from_Set() const;
    bool is_ingress_from_Valid() const;

    OAIIngressTo getIngressTo() const;
    void setIngressTo(const OAIIngressTo &ingress_to);
    bool is_ingress_to_Set() const;
    bool is_ingress_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIngressFrom m_ingress_from;
    bool m_ingress_from_isSet;
    bool m_ingress_from_isValid;

    OAIIngressTo m_ingress_to;
    bool m_ingress_to_isSet;
    bool m_ingress_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIngressPolicy)

#endif // OAIIngressPolicy_H
