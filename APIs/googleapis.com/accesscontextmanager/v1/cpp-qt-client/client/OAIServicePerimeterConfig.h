/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServicePerimeterConfig.h
 *
 * &#x60;ServicePerimeterConfig&#x60; specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
 */

#ifndef OAIServicePerimeterConfig_H
#define OAIServicePerimeterConfig_H

#include <QJsonObject>

#include "OAIEgressPolicy.h"
#include "OAIIngressPolicy.h"
#include "OAIVpcAccessibleServices.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEgressPolicy;
class OAIIngressPolicy;
class OAIVpcAccessibleServices;

class OAIServicePerimeterConfig : public OAIObject {
public:
    OAIServicePerimeterConfig();
    OAIServicePerimeterConfig(QString json);
    ~OAIServicePerimeterConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAccessLevels() const;
    void setAccessLevels(const QList<QString> &access_levels);
    bool is_access_levels_Set() const;
    bool is_access_levels_Valid() const;

    QList<OAIEgressPolicy> getEgressPolicies() const;
    void setEgressPolicies(const QList<OAIEgressPolicy> &egress_policies);
    bool is_egress_policies_Set() const;
    bool is_egress_policies_Valid() const;

    QList<OAIIngressPolicy> getIngressPolicies() const;
    void setIngressPolicies(const QList<OAIIngressPolicy> &ingress_policies);
    bool is_ingress_policies_Set() const;
    bool is_ingress_policies_Valid() const;

    QList<QString> getResources() const;
    void setResources(const QList<QString> &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    QList<QString> getRestrictedServices() const;
    void setRestrictedServices(const QList<QString> &restricted_services);
    bool is_restricted_services_Set() const;
    bool is_restricted_services_Valid() const;

    OAIVpcAccessibleServices getVpcAccessibleServices() const;
    void setVpcAccessibleServices(const OAIVpcAccessibleServices &vpc_accessible_services);
    bool is_vpc_accessible_services_Set() const;
    bool is_vpc_accessible_services_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_access_levels;
    bool m_access_levels_isSet;
    bool m_access_levels_isValid;

    QList<OAIEgressPolicy> m_egress_policies;
    bool m_egress_policies_isSet;
    bool m_egress_policies_isValid;

    QList<OAIIngressPolicy> m_ingress_policies;
    bool m_ingress_policies_isSet;
    bool m_ingress_policies_isValid;

    QList<QString> m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;

    QList<QString> m_restricted_services;
    bool m_restricted_services_isSet;
    bool m_restricted_services_isValid;

    OAIVpcAccessibleServices m_vpc_accessible_services;
    bool m_vpc_accessible_services_isSet;
    bool m_vpc_accessible_services_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServicePerimeterConfig)

#endif // OAIServicePerimeterConfig_H
