/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISetIamPolicyRequest.h
 *
 * Request message for &#x60;SetIamPolicy&#x60; method.
 */

#ifndef OAISetIamPolicyRequest_H
#define OAISetIamPolicyRequest_H

#include <QJsonObject>

#include "OAIPolicy.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPolicy;

class OAISetIamPolicyRequest : public OAIObject {
public:
    OAISetIamPolicyRequest();
    OAISetIamPolicyRequest(QString json);
    ~OAISetIamPolicyRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPolicy getPolicy() const;
    void setPolicy(const OAIPolicy &policy);
    bool is_policy_Set() const;
    bool is_policy_Valid() const;

    QString getUpdateMask() const;
    void setUpdateMask(const QString &update_mask);
    bool is_update_mask_Set() const;
    bool is_update_mask_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPolicy m_policy;
    bool m_policy_isSet;
    bool m_policy_isValid;

    QString m_update_mask;
    bool m_update_mask_isSet;
    bool m_update_mask_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISetIamPolicyRequest)

#endif // OAISetIamPolicyRequest_H
