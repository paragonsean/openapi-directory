/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiOperation::OAIApiOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiOperation::OAIApiOperation() {
    this->initializeModel();
}

OAIApiOperation::~OAIApiOperation() {}

void OAIApiOperation::initializeModel() {

    m_method_selectors_isSet = false;
    m_method_selectors_isValid = false;

    m_service_name_isSet = false;
    m_service_name_isValid = false;
}

void OAIApiOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiOperation::fromJsonObject(QJsonObject json) {

    m_method_selectors_isValid = ::OpenAPI::fromJsonValue(m_method_selectors, json[QString("methodSelectors")]);
    m_method_selectors_isSet = !json[QString("methodSelectors")].isNull() && m_method_selectors_isValid;

    m_service_name_isValid = ::OpenAPI::fromJsonValue(m_service_name, json[QString("serviceName")]);
    m_service_name_isSet = !json[QString("serviceName")].isNull() && m_service_name_isValid;
}

QString OAIApiOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_method_selectors.size() > 0) {
        obj.insert(QString("methodSelectors"), ::OpenAPI::toJsonValue(m_method_selectors));
    }
    if (m_service_name_isSet) {
        obj.insert(QString("serviceName"), ::OpenAPI::toJsonValue(m_service_name));
    }
    return obj;
}

QList<OAIMethodSelector> OAIApiOperation::getMethodSelectors() const {
    return m_method_selectors;
}
void OAIApiOperation::setMethodSelectors(const QList<OAIMethodSelector> &method_selectors) {
    m_method_selectors = method_selectors;
    m_method_selectors_isSet = true;
}

bool OAIApiOperation::is_method_selectors_Set() const{
    return m_method_selectors_isSet;
}

bool OAIApiOperation::is_method_selectors_Valid() const{
    return m_method_selectors_isValid;
}

QString OAIApiOperation::getServiceName() const {
    return m_service_name;
}
void OAIApiOperation::setServiceName(const QString &service_name) {
    m_service_name = service_name;
    m_service_name_isSet = true;
}

bool OAIApiOperation::is_service_name_Set() const{
    return m_service_name_isSet;
}

bool OAIApiOperation::is_service_name_Valid() const{
    return m_service_name_isValid;
}

bool OAIApiOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_method_selectors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
