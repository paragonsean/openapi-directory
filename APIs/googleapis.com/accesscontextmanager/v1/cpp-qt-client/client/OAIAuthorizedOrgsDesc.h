/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthorizedOrgsDesc.h
 *
 * &#x60;AuthorizedOrgsDesc&#x60; contains data for an organization&#39;s authorization policy.
 */

#ifndef OAIAuthorizedOrgsDesc_H
#define OAIAuthorizedOrgsDesc_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthorizedOrgsDesc : public OAIObject {
public:
    OAIAuthorizedOrgsDesc();
    OAIAuthorizedOrgsDesc(QString json);
    ~OAIAuthorizedOrgsDesc() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetType() const;
    void setAssetType(const QString &asset_type);
    bool is_asset_type_Set() const;
    bool is_asset_type_Valid() const;

    QString getAuthorizationDirection() const;
    void setAuthorizationDirection(const QString &authorization_direction);
    bool is_authorization_direction_Set() const;
    bool is_authorization_direction_Valid() const;

    QString getAuthorizationType() const;
    void setAuthorizationType(const QString &authorization_type);
    bool is_authorization_type_Set() const;
    bool is_authorization_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getOrgs() const;
    void setOrgs(const QList<QString> &orgs);
    bool is_orgs_Set() const;
    bool is_orgs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_type;
    bool m_asset_type_isSet;
    bool m_asset_type_isValid;

    QString m_authorization_direction;
    bool m_authorization_direction_isSet;
    bool m_authorization_direction_isValid;

    QString m_authorization_type;
    bool m_authorization_type_isSet;
    bool m_authorization_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_orgs;
    bool m_orgs_isSet;
    bool m_orgs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthorizedOrgsDesc)

#endif // OAIAuthorizedOrgsDesc_H
