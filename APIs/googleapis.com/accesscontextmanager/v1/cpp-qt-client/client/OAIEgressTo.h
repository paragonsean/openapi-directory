/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEgressTo.h
 *
 * Defines the conditions under which an EgressPolicy matches a request. Conditions are based on information about the ApiOperation intended to be performed on the &#x60;resources&#x60; specified. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed. The request must match &#x60;operations&#x60; AND &#x60;resources&#x60; fields in order to be allowed egress out of the perimeter.
 */

#ifndef OAIEgressTo_H
#define OAIEgressTo_H

#include <QJsonObject>

#include "OAIApiOperation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApiOperation;

class OAIEgressTo : public OAIObject {
public:
    OAIEgressTo();
    OAIEgressTo(QString json);
    ~OAIEgressTo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getExternalResources() const;
    void setExternalResources(const QList<QString> &external_resources);
    bool is_external_resources_Set() const;
    bool is_external_resources_Valid() const;

    QList<OAIApiOperation> getOperations() const;
    void setOperations(const QList<OAIApiOperation> &operations);
    bool is_operations_Set() const;
    bool is_operations_Valid() const;

    QList<QString> getResources() const;
    void setResources(const QList<QString> &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_external_resources;
    bool m_external_resources_isSet;
    bool m_external_resources_isValid;

    QList<OAIApiOperation> m_operations;
    bool m_operations_isSet;
    bool m_operations_isValid;

    QList<QString> m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEgressTo)

#endif // OAIEgressTo_H
