/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplaceAccessLevelsRequest.h
 *
 * A request to replace all existing Access Levels in an Access Policy with the Access Levels provided. This is done atomically.
 */

#ifndef OAIReplaceAccessLevelsRequest_H
#define OAIReplaceAccessLevelsRequest_H

#include <QJsonObject>

#include "OAIAccessLevel.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccessLevel;

class OAIReplaceAccessLevelsRequest : public OAIObject {
public:
    OAIReplaceAccessLevelsRequest();
    OAIReplaceAccessLevelsRequest(QString json);
    ~OAIReplaceAccessLevelsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAccessLevel> getAccessLevels() const;
    void setAccessLevels(const QList<OAIAccessLevel> &access_levels);
    bool is_access_levels_Set() const;
    bool is_access_levels_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAccessLevel> m_access_levels;
    bool m_access_levels_isSet;
    bool m_access_levels_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplaceAccessLevelsRequest)

#endif // OAIReplaceAccessLevelsRequest_H
