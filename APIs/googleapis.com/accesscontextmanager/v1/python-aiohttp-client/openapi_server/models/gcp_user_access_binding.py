# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GcpUserAccessBinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_levels: List[str]=None, dry_run_access_levels: List[str]=None, group_key: str=None, name: str=None):
        """GcpUserAccessBinding - a model defined in OpenAPI

        :param access_levels: The access_levels of this GcpUserAccessBinding.
        :param dry_run_access_levels: The dry_run_access_levels of this GcpUserAccessBinding.
        :param group_key: The group_key of this GcpUserAccessBinding.
        :param name: The name of this GcpUserAccessBinding.
        """
        self.openapi_types = {
            'access_levels': List[str],
            'dry_run_access_levels': List[str],
            'group_key': str,
            'name': str
        }

        self.attribute_map = {
            'access_levels': 'accessLevels',
            'dry_run_access_levels': 'dryRunAccessLevels',
            'group_key': 'groupKey',
            'name': 'name'
        }

        self._access_levels = access_levels
        self._dry_run_access_levels = dry_run_access_levels
        self._group_key = group_key
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GcpUserAccessBinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GcpUserAccessBinding of this GcpUserAccessBinding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_levels(self):
        """Gets the access_levels of this GcpUserAccessBinding.

        Optional. Access level that a user must have to be granted access. Only one access level is supported, not multiple. This repeated field must have exactly one element. Example: \"accessPolicies/9522/accessLevels/device_trusted\"

        :return: The access_levels of this GcpUserAccessBinding.
        :rtype: List[str]
        """
        return self._access_levels

    @access_levels.setter
    def access_levels(self, access_levels):
        """Sets the access_levels of this GcpUserAccessBinding.

        Optional. Access level that a user must have to be granted access. Only one access level is supported, not multiple. This repeated field must have exactly one element. Example: \"accessPolicies/9522/accessLevels/device_trusted\"

        :param access_levels: The access_levels of this GcpUserAccessBinding.
        :type access_levels: List[str]
        """

        self._access_levels = access_levels

    @property
    def dry_run_access_levels(self):
        """Gets the dry_run_access_levels of this GcpUserAccessBinding.

        Optional. Dry run access level that will be evaluated but will not be enforced. The access denial based on dry run policy will be logged. Only one access level is supported, not multiple. This list must have exactly one element. Example: \"accessPolicies/9522/accessLevels/device_trusted\"

        :return: The dry_run_access_levels of this GcpUserAccessBinding.
        :rtype: List[str]
        """
        return self._dry_run_access_levels

    @dry_run_access_levels.setter
    def dry_run_access_levels(self, dry_run_access_levels):
        """Sets the dry_run_access_levels of this GcpUserAccessBinding.

        Optional. Dry run access level that will be evaluated but will not be enforced. The access denial based on dry run policy will be logged. Only one access level is supported, not multiple. This list must have exactly one element. Example: \"accessPolicies/9522/accessLevels/device_trusted\"

        :param dry_run_access_levels: The dry_run_access_levels of this GcpUserAccessBinding.
        :type dry_run_access_levels: List[str]
        """

        self._dry_run_access_levels = dry_run_access_levels

    @property
    def group_key(self):
        """Gets the group_key of this GcpUserAccessBinding.

        Required. Immutable. Google Group id whose members are subject to this binding's restrictions. See \"id\" in the [G Suite Directory API's Groups resource] (https://developers.google.com/admin-sdk/directory/v1/reference/groups#resource). If a group's email address/alias is changed, this resource will continue to point at the changed group. This field does not accept group email addresses or aliases. Example: \"01d520gv4vjcrht\"

        :return: The group_key of this GcpUserAccessBinding.
        :rtype: str
        """
        return self._group_key

    @group_key.setter
    def group_key(self, group_key):
        """Sets the group_key of this GcpUserAccessBinding.

        Required. Immutable. Google Group id whose members are subject to this binding's restrictions. See \"id\" in the [G Suite Directory API's Groups resource] (https://developers.google.com/admin-sdk/directory/v1/reference/groups#resource). If a group's email address/alias is changed, this resource will continue to point at the changed group. This field does not accept group email addresses or aliases. Example: \"01d520gv4vjcrht\"

        :param group_key: The group_key of this GcpUserAccessBinding.
        :type group_key: str
        """

        self._group_key = group_key

    @property
    def name(self):
        """Gets the name of this GcpUserAccessBinding.

        Immutable. Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by [RFC 3986 Section 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client during creation. Example: \"organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N\"

        :return: The name of this GcpUserAccessBinding.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GcpUserAccessBinding.

        Immutable. Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by [RFC 3986 Section 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client during creation. Example: \"organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N\"

        :param name: The name of this GcpUserAccessBinding.
        :type name: str
        """

        self._name = name
