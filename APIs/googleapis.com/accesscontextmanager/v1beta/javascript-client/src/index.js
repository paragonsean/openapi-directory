/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessLevel from './model/AccessLevel';
import AccessPolicy from './model/AccessPolicy';
import BasicLevel from './model/BasicLevel';
import Condition from './model/Condition';
import CustomLevel from './model/CustomLevel';
import DevicePolicy from './model/DevicePolicy';
import Expr from './model/Expr';
import ListAccessLevelsResponse from './model/ListAccessLevelsResponse';
import ListAccessPoliciesResponse from './model/ListAccessPoliciesResponse';
import ListServicePerimetersResponse from './model/ListServicePerimetersResponse';
import Operation from './model/Operation';
import OsConstraint from './model/OsConstraint';
import ServicePerimeter from './model/ServicePerimeter';
import ServicePerimeterConfig from './model/ServicePerimeterConfig';
import Status from './model/Status';
import VpcAccessibleServices from './model/VpcAccessibleServices';
import AccessPoliciesApi from './api/AccessPoliciesApi';
import OperationsApi from './api/OperationsApi';


/**
* An API for setting attribute based access control to requests to Google Cloud services..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AccessContextManagerApi = require('index'); // See note below*.
* var xxxSvc = new AccessContextManagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AccessContextManagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AccessContextManagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AccessContextManagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1beta
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessLevel model constructor.
     * @property {module:model/AccessLevel}
     */
    AccessLevel,

    /**
     * The AccessPolicy model constructor.
     * @property {module:model/AccessPolicy}
     */
    AccessPolicy,

    /**
     * The BasicLevel model constructor.
     * @property {module:model/BasicLevel}
     */
    BasicLevel,

    /**
     * The Condition model constructor.
     * @property {module:model/Condition}
     */
    Condition,

    /**
     * The CustomLevel model constructor.
     * @property {module:model/CustomLevel}
     */
    CustomLevel,

    /**
     * The DevicePolicy model constructor.
     * @property {module:model/DevicePolicy}
     */
    DevicePolicy,

    /**
     * The Expr model constructor.
     * @property {module:model/Expr}
     */
    Expr,

    /**
     * The ListAccessLevelsResponse model constructor.
     * @property {module:model/ListAccessLevelsResponse}
     */
    ListAccessLevelsResponse,

    /**
     * The ListAccessPoliciesResponse model constructor.
     * @property {module:model/ListAccessPoliciesResponse}
     */
    ListAccessPoliciesResponse,

    /**
     * The ListServicePerimetersResponse model constructor.
     * @property {module:model/ListServicePerimetersResponse}
     */
    ListServicePerimetersResponse,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OsConstraint model constructor.
     * @property {module:model/OsConstraint}
     */
    OsConstraint,

    /**
     * The ServicePerimeter model constructor.
     * @property {module:model/ServicePerimeter}
     */
    ServicePerimeter,

    /**
     * The ServicePerimeterConfig model constructor.
     * @property {module:model/ServicePerimeterConfig}
     */
    ServicePerimeterConfig,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The VpcAccessibleServices model constructor.
     * @property {module:model/VpcAccessibleServices}
     */
    VpcAccessibleServices,

    /**
    * The AccessPoliciesApi service constructor.
    * @property {module:api/AccessPoliciesApi}
    */
    AccessPoliciesApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi
};
