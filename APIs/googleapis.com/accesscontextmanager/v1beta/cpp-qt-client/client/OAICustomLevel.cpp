/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomLevel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomLevel::OAICustomLevel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomLevel::OAICustomLevel() {
    this->initializeModel();
}

OAICustomLevel::~OAICustomLevel() {}

void OAICustomLevel::initializeModel() {

    m_expr_isSet = false;
    m_expr_isValid = false;
}

void OAICustomLevel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomLevel::fromJsonObject(QJsonObject json) {

    m_expr_isValid = ::OpenAPI::fromJsonValue(m_expr, json[QString("expr")]);
    m_expr_isSet = !json[QString("expr")].isNull() && m_expr_isValid;
}

QString OAICustomLevel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomLevel::asJsonObject() const {
    QJsonObject obj;
    if (m_expr.isSet()) {
        obj.insert(QString("expr"), ::OpenAPI::toJsonValue(m_expr));
    }
    return obj;
}

OAIExpr OAICustomLevel::getExpr() const {
    return m_expr;
}
void OAICustomLevel::setExpr(const OAIExpr &expr) {
    m_expr = expr;
    m_expr_isSet = true;
}

bool OAICustomLevel::is_expr_Set() const{
    return m_expr_isSet;
}

bool OAICustomLevel::is_expr_Valid() const{
    return m_expr_isValid;
}

bool OAICustomLevel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expr.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomLevel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
