/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVpcAccessibleServices.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVpcAccessibleServices::OAIVpcAccessibleServices(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVpcAccessibleServices::OAIVpcAccessibleServices() {
    this->initializeModel();
}

OAIVpcAccessibleServices::~OAIVpcAccessibleServices() {}

void OAIVpcAccessibleServices::initializeModel() {

    m_allowed_services_isSet = false;
    m_allowed_services_isValid = false;

    m_enable_restriction_isSet = false;
    m_enable_restriction_isValid = false;
}

void OAIVpcAccessibleServices::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVpcAccessibleServices::fromJsonObject(QJsonObject json) {

    m_allowed_services_isValid = ::OpenAPI::fromJsonValue(m_allowed_services, json[QString("allowedServices")]);
    m_allowed_services_isSet = !json[QString("allowedServices")].isNull() && m_allowed_services_isValid;

    m_enable_restriction_isValid = ::OpenAPI::fromJsonValue(m_enable_restriction, json[QString("enableRestriction")]);
    m_enable_restriction_isSet = !json[QString("enableRestriction")].isNull() && m_enable_restriction_isValid;
}

QString OAIVpcAccessibleServices::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVpcAccessibleServices::asJsonObject() const {
    QJsonObject obj;
    if (m_allowed_services.size() > 0) {
        obj.insert(QString("allowedServices"), ::OpenAPI::toJsonValue(m_allowed_services));
    }
    if (m_enable_restriction_isSet) {
        obj.insert(QString("enableRestriction"), ::OpenAPI::toJsonValue(m_enable_restriction));
    }
    return obj;
}

QList<QString> OAIVpcAccessibleServices::getAllowedServices() const {
    return m_allowed_services;
}
void OAIVpcAccessibleServices::setAllowedServices(const QList<QString> &allowed_services) {
    m_allowed_services = allowed_services;
    m_allowed_services_isSet = true;
}

bool OAIVpcAccessibleServices::is_allowed_services_Set() const{
    return m_allowed_services_isSet;
}

bool OAIVpcAccessibleServices::is_allowed_services_Valid() const{
    return m_allowed_services_isValid;
}

bool OAIVpcAccessibleServices::isEnableRestriction() const {
    return m_enable_restriction;
}
void OAIVpcAccessibleServices::setEnableRestriction(const bool &enable_restriction) {
    m_enable_restriction = enable_restriction;
    m_enable_restriction_isSet = true;
}

bool OAIVpcAccessibleServices::is_enable_restriction_Set() const{
    return m_enable_restriction_isSet;
}

bool OAIVpcAccessibleServices::is_enable_restriction_Valid() const{
    return m_enable_restriction_isValid;
}

bool OAIVpcAccessibleServices::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allowed_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_restriction_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVpcAccessibleServices::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
