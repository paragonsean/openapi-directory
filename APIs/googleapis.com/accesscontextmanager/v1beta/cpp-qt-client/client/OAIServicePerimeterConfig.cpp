/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServicePerimeterConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServicePerimeterConfig::OAIServicePerimeterConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServicePerimeterConfig::OAIServicePerimeterConfig() {
    this->initializeModel();
}

OAIServicePerimeterConfig::~OAIServicePerimeterConfig() {}

void OAIServicePerimeterConfig::initializeModel() {

    m_access_levels_isSet = false;
    m_access_levels_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;

    m_restricted_services_isSet = false;
    m_restricted_services_isValid = false;

    m_unrestricted_services_isSet = false;
    m_unrestricted_services_isValid = false;

    m_vpc_accessible_services_isSet = false;
    m_vpc_accessible_services_isValid = false;
}

void OAIServicePerimeterConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServicePerimeterConfig::fromJsonObject(QJsonObject json) {

    m_access_levels_isValid = ::OpenAPI::fromJsonValue(m_access_levels, json[QString("accessLevels")]);
    m_access_levels_isSet = !json[QString("accessLevels")].isNull() && m_access_levels_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;

    m_restricted_services_isValid = ::OpenAPI::fromJsonValue(m_restricted_services, json[QString("restrictedServices")]);
    m_restricted_services_isSet = !json[QString("restrictedServices")].isNull() && m_restricted_services_isValid;

    m_unrestricted_services_isValid = ::OpenAPI::fromJsonValue(m_unrestricted_services, json[QString("unrestrictedServices")]);
    m_unrestricted_services_isSet = !json[QString("unrestrictedServices")].isNull() && m_unrestricted_services_isValid;

    m_vpc_accessible_services_isValid = ::OpenAPI::fromJsonValue(m_vpc_accessible_services, json[QString("vpcAccessibleServices")]);
    m_vpc_accessible_services_isSet = !json[QString("vpcAccessibleServices")].isNull() && m_vpc_accessible_services_isValid;
}

QString OAIServicePerimeterConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServicePerimeterConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_access_levels.size() > 0) {
        obj.insert(QString("accessLevels"), ::OpenAPI::toJsonValue(m_access_levels));
    }
    if (m_resources.size() > 0) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    if (m_restricted_services.size() > 0) {
        obj.insert(QString("restrictedServices"), ::OpenAPI::toJsonValue(m_restricted_services));
    }
    if (m_unrestricted_services.size() > 0) {
        obj.insert(QString("unrestrictedServices"), ::OpenAPI::toJsonValue(m_unrestricted_services));
    }
    if (m_vpc_accessible_services.isSet()) {
        obj.insert(QString("vpcAccessibleServices"), ::OpenAPI::toJsonValue(m_vpc_accessible_services));
    }
    return obj;
}

QList<QString> OAIServicePerimeterConfig::getAccessLevels() const {
    return m_access_levels;
}
void OAIServicePerimeterConfig::setAccessLevels(const QList<QString> &access_levels) {
    m_access_levels = access_levels;
    m_access_levels_isSet = true;
}

bool OAIServicePerimeterConfig::is_access_levels_Set() const{
    return m_access_levels_isSet;
}

bool OAIServicePerimeterConfig::is_access_levels_Valid() const{
    return m_access_levels_isValid;
}

QList<QString> OAIServicePerimeterConfig::getResources() const {
    return m_resources;
}
void OAIServicePerimeterConfig::setResources(const QList<QString> &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIServicePerimeterConfig::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIServicePerimeterConfig::is_resources_Valid() const{
    return m_resources_isValid;
}

QList<QString> OAIServicePerimeterConfig::getRestrictedServices() const {
    return m_restricted_services;
}
void OAIServicePerimeterConfig::setRestrictedServices(const QList<QString> &restricted_services) {
    m_restricted_services = restricted_services;
    m_restricted_services_isSet = true;
}

bool OAIServicePerimeterConfig::is_restricted_services_Set() const{
    return m_restricted_services_isSet;
}

bool OAIServicePerimeterConfig::is_restricted_services_Valid() const{
    return m_restricted_services_isValid;
}

QList<QString> OAIServicePerimeterConfig::getUnrestrictedServices() const {
    return m_unrestricted_services;
}
void OAIServicePerimeterConfig::setUnrestrictedServices(const QList<QString> &unrestricted_services) {
    m_unrestricted_services = unrestricted_services;
    m_unrestricted_services_isSet = true;
}

bool OAIServicePerimeterConfig::is_unrestricted_services_Set() const{
    return m_unrestricted_services_isSet;
}

bool OAIServicePerimeterConfig::is_unrestricted_services_Valid() const{
    return m_unrestricted_services_isValid;
}

OAIVpcAccessibleServices OAIServicePerimeterConfig::getVpcAccessibleServices() const {
    return m_vpc_accessible_services;
}
void OAIServicePerimeterConfig::setVpcAccessibleServices(const OAIVpcAccessibleServices &vpc_accessible_services) {
    m_vpc_accessible_services = vpc_accessible_services;
    m_vpc_accessible_services_isSet = true;
}

bool OAIServicePerimeterConfig::is_vpc_accessible_services_Set() const{
    return m_vpc_accessible_services_isSet;
}

bool OAIServicePerimeterConfig::is_vpc_accessible_services_Valid() const{
    return m_vpc_accessible_services_isValid;
}

bool OAIServicePerimeterConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_levels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_restricted_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_unrestricted_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_accessible_services.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServicePerimeterConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
