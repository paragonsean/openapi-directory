/**
 * Access Context Manager API
 * An API for setting attribute based access control to requests to Google Cloud services.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpr.h
 *
 * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \&quot;Summary size limit\&quot; description: \&quot;Determines if a summary is less than 100 chars\&quot; expression: \&quot;document.summary.size() &lt; 100\&quot; Example (Equality): title: \&quot;Requestor is owner\&quot; description: \&quot;Determines if requestor is the document owner\&quot; expression: \&quot;document.owner &#x3D;&#x3D; request.auth.claims.email\&quot; Example (Logic): title: \&quot;Public documents\&quot; description: \&quot;Determine whether the document should be publicly visible\&quot; expression: \&quot;document.type !&#x3D; &#39;private&#39; &amp;&amp; document.type !&#x3D; &#39;internal&#39;\&quot; Example (Data Manipulation): title: \&quot;Notification string\&quot; description: \&quot;Create a notification string with a timestamp.\&quot; expression: \&quot;&#39;New message received at &#39; + string(document.create_time)\&quot; The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
 */

#ifndef OAIExpr_H
#define OAIExpr_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExpr : public OAIObject {
public:
    OAIExpr();
    OAIExpr(QString json);
    ~OAIExpr() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getExpression() const;
    void setExpression(const QString &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpr)

#endif // OAIExpr_H
