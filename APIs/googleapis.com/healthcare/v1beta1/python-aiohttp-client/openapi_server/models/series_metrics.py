# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SeriesMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_storage_size_bytes: str=None, instance_count: str=None, series: str=None, structured_storage_size_bytes: str=None):
        """SeriesMetrics - a model defined in OpenAPI

        :param blob_storage_size_bytes: The blob_storage_size_bytes of this SeriesMetrics.
        :param instance_count: The instance_count of this SeriesMetrics.
        :param series: The series of this SeriesMetrics.
        :param structured_storage_size_bytes: The structured_storage_size_bytes of this SeriesMetrics.
        """
        self.openapi_types = {
            'blob_storage_size_bytes': str,
            'instance_count': str,
            'series': str,
            'structured_storage_size_bytes': str
        }

        self.attribute_map = {
            'blob_storage_size_bytes': 'blobStorageSizeBytes',
            'instance_count': 'instanceCount',
            'series': 'series',
            'structured_storage_size_bytes': 'structuredStorageSizeBytes'
        }

        self._blob_storage_size_bytes = blob_storage_size_bytes
        self._instance_count = instance_count
        self._series = series
        self._structured_storage_size_bytes = structured_storage_size_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SeriesMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SeriesMetrics of this SeriesMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_storage_size_bytes(self):
        """Gets the blob_storage_size_bytes of this SeriesMetrics.

        Total blob storage bytes for all instances in the series.

        :return: The blob_storage_size_bytes of this SeriesMetrics.
        :rtype: str
        """
        return self._blob_storage_size_bytes

    @blob_storage_size_bytes.setter
    def blob_storage_size_bytes(self, blob_storage_size_bytes):
        """Sets the blob_storage_size_bytes of this SeriesMetrics.

        Total blob storage bytes for all instances in the series.

        :param blob_storage_size_bytes: The blob_storage_size_bytes of this SeriesMetrics.
        :type blob_storage_size_bytes: str
        """

        self._blob_storage_size_bytes = blob_storage_size_bytes

    @property
    def instance_count(self):
        """Gets the instance_count of this SeriesMetrics.

        Number of instances in the series.

        :return: The instance_count of this SeriesMetrics.
        :rtype: str
        """
        return self._instance_count

    @instance_count.setter
    def instance_count(self, instance_count):
        """Sets the instance_count of this SeriesMetrics.

        Number of instances in the series.

        :param instance_count: The instance_count of this SeriesMetrics.
        :type instance_count: str
        """

        self._instance_count = instance_count

    @property
    def series(self):
        """Gets the series of this SeriesMetrics.

        The series resource path. For example, `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}/series/{series_uid}`.

        :return: The series of this SeriesMetrics.
        :rtype: str
        """
        return self._series

    @series.setter
    def series(self, series):
        """Sets the series of this SeriesMetrics.

        The series resource path. For example, `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}/series/{series_uid}`.

        :param series: The series of this SeriesMetrics.
        :type series: str
        """

        self._series = series

    @property
    def structured_storage_size_bytes(self):
        """Gets the structured_storage_size_bytes of this SeriesMetrics.

        Total structured storage bytes for all instances in the series.

        :return: The structured_storage_size_bytes of this SeriesMetrics.
        :rtype: str
        """
        return self._structured_storage_size_bytes

    @structured_storage_size_bytes.setter
    def structured_storage_size_bytes(self, structured_storage_size_bytes):
        """Sets the structured_storage_size_bytes of this SeriesMetrics.

        Total structured storage bytes for all instances in the series.

        :param structured_storage_size_bytes: The structured_storage_size_bytes of this SeriesMetrics.
        :type structured_storage_size_bytes: str
        """

        self._structured_storage_size_bytes = structured_storage_size_bytes
