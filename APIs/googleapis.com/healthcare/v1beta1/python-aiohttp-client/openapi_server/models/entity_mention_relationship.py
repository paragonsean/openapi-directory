# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EntityMentionRelationship(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence: float=None, object_id: str=None, subject_id: str=None):
        """EntityMentionRelationship - a model defined in OpenAPI

        :param confidence: The confidence of this EntityMentionRelationship.
        :param object_id: The object_id of this EntityMentionRelationship.
        :param subject_id: The subject_id of this EntityMentionRelationship.
        """
        self.openapi_types = {
            'confidence': float,
            'object_id': str,
            'subject_id': str
        }

        self.attribute_map = {
            'confidence': 'confidence',
            'object_id': 'objectId',
            'subject_id': 'subjectId'
        }

        self._confidence = confidence
        self._object_id = object_id
        self._subject_id = subject_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityMentionRelationship':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityMentionRelationship of this EntityMentionRelationship.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence(self):
        """Gets the confidence of this EntityMentionRelationship.

        The model's confidence in this annotation. A number between 0 and 1.

        :return: The confidence of this EntityMentionRelationship.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this EntityMentionRelationship.

        The model's confidence in this annotation. A number between 0 and 1.

        :param confidence: The confidence of this EntityMentionRelationship.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def object_id(self):
        """Gets the object_id of this EntityMentionRelationship.

        object_id is the id of the object entity mention.

        :return: The object_id of this EntityMentionRelationship.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this EntityMentionRelationship.

        object_id is the id of the object entity mention.

        :param object_id: The object_id of this EntityMentionRelationship.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def subject_id(self):
        """Gets the subject_id of this EntityMentionRelationship.

        subject_id is the id of the subject entity mention.

        :return: The subject_id of this EntityMentionRelationship.
        :rtype: str
        """
        return self._subject_id

    @subject_id.setter
    def subject_id(self, subject_id):
        """Sets the subject_id of this EntityMentionRelationship.

        subject_id is the id of the subject entity mention.

        :param subject_id: The subject_id of this EntityMentionRelationship.
        :type subject_id: str
        """

        self._subject_id = subject_id
