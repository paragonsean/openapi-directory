# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dicom_filter_config import DicomFilterConfig
from openapi_server.models.google_cloud_healthcare_v1beta1_dicom_big_query_destination import GoogleCloudHealthcareV1beta1DicomBigQueryDestination
from openapi_server.models.google_cloud_healthcare_v1beta1_dicom_gcs_destination import GoogleCloudHealthcareV1beta1DicomGcsDestination
from openapi_server import util


class ExportDicomDataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery_destination: GoogleCloudHealthcareV1beta1DicomBigQueryDestination=None, filter_config: DicomFilterConfig=None, gcs_destination: GoogleCloudHealthcareV1beta1DicomGcsDestination=None):
        """ExportDicomDataRequest - a model defined in OpenAPI

        :param bigquery_destination: The bigquery_destination of this ExportDicomDataRequest.
        :param filter_config: The filter_config of this ExportDicomDataRequest.
        :param gcs_destination: The gcs_destination of this ExportDicomDataRequest.
        """
        self.openapi_types = {
            'bigquery_destination': GoogleCloudHealthcareV1beta1DicomBigQueryDestination,
            'filter_config': DicomFilterConfig,
            'gcs_destination': GoogleCloudHealthcareV1beta1DicomGcsDestination
        }

        self.attribute_map = {
            'bigquery_destination': 'bigqueryDestination',
            'filter_config': 'filterConfig',
            'gcs_destination': 'gcsDestination'
        }

        self._bigquery_destination = bigquery_destination
        self._filter_config = filter_config
        self._gcs_destination = gcs_destination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportDicomDataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportDicomDataRequest of this ExportDicomDataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery_destination(self):
        """Gets the bigquery_destination of this ExportDicomDataRequest.


        :return: The bigquery_destination of this ExportDicomDataRequest.
        :rtype: GoogleCloudHealthcareV1beta1DicomBigQueryDestination
        """
        return self._bigquery_destination

    @bigquery_destination.setter
    def bigquery_destination(self, bigquery_destination):
        """Sets the bigquery_destination of this ExportDicomDataRequest.


        :param bigquery_destination: The bigquery_destination of this ExportDicomDataRequest.
        :type bigquery_destination: GoogleCloudHealthcareV1beta1DicomBigQueryDestination
        """

        self._bigquery_destination = bigquery_destination

    @property
    def filter_config(self):
        """Gets the filter_config of this ExportDicomDataRequest.


        :return: The filter_config of this ExportDicomDataRequest.
        :rtype: DicomFilterConfig
        """
        return self._filter_config

    @filter_config.setter
    def filter_config(self, filter_config):
        """Sets the filter_config of this ExportDicomDataRequest.


        :param filter_config: The filter_config of this ExportDicomDataRequest.
        :type filter_config: DicomFilterConfig
        """

        self._filter_config = filter_config

    @property
    def gcs_destination(self):
        """Gets the gcs_destination of this ExportDicomDataRequest.


        :return: The gcs_destination of this ExportDicomDataRequest.
        :rtype: GoogleCloudHealthcareV1beta1DicomGcsDestination
        """
        return self._gcs_destination

    @gcs_destination.setter
    def gcs_destination(self, gcs_destination):
        """Sets the gcs_destination of this ExportDicomDataRequest.


        :param gcs_destination: The gcs_destination of this ExportDicomDataRequest.
        :type gcs_destination: GoogleCloudHealthcareV1beta1DicomGcsDestination
        """

        self._gcs_destination = gcs_destination
