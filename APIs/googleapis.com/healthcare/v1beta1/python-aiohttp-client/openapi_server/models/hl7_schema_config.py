# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schema_group import SchemaGroup
from openapi_server.models.version_source import VersionSource
from openapi_server import util


class Hl7SchemaConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_schema_configs: Dict[str, SchemaGroup]=None, version: List[VersionSource]=None):
        """Hl7SchemaConfig - a model defined in OpenAPI

        :param message_schema_configs: The message_schema_configs of this Hl7SchemaConfig.
        :param version: The version of this Hl7SchemaConfig.
        """
        self.openapi_types = {
            'message_schema_configs': Dict[str, SchemaGroup],
            'version': List[VersionSource]
        }

        self.attribute_map = {
            'message_schema_configs': 'messageSchemaConfigs',
            'version': 'version'
        }

        self._message_schema_configs = message_schema_configs
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hl7SchemaConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hl7SchemaConfig of this Hl7SchemaConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_schema_configs(self):
        """Gets the message_schema_configs of this Hl7SchemaConfig.

        Map from each HL7v2 message type and trigger event pair, such as ADT_A04, to its schema configuration root group.

        :return: The message_schema_configs of this Hl7SchemaConfig.
        :rtype: Dict[str, SchemaGroup]
        """
        return self._message_schema_configs

    @message_schema_configs.setter
    def message_schema_configs(self, message_schema_configs):
        """Sets the message_schema_configs of this Hl7SchemaConfig.

        Map from each HL7v2 message type and trigger event pair, such as ADT_A04, to its schema configuration root group.

        :param message_schema_configs: The message_schema_configs of this Hl7SchemaConfig.
        :type message_schema_configs: Dict[str, SchemaGroup]
        """

        self._message_schema_configs = message_schema_configs

    @property
    def version(self):
        """Gets the version of this Hl7SchemaConfig.

        Each VersionSource is tested and only if they all match is the schema used for the message.

        :return: The version of this Hl7SchemaConfig.
        :rtype: List[VersionSource]
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Hl7SchemaConfig.

        Each VersionSource is tested and only if they all match is the schema used for the message.

        :param version: The version of this Hl7SchemaConfig.
        :type version: List[VersionSource]
        """

        self._version = version
