# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_healthcare_v1beta1_fhir_gcs_source import GoogleCloudHealthcareV1beta1FhirGcsSource
from openapi_server import util


class ImportResourcesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_structure: str=None, gcs_source: GoogleCloudHealthcareV1beta1FhirGcsSource=None):
        """ImportResourcesRequest - a model defined in OpenAPI

        :param content_structure: The content_structure of this ImportResourcesRequest.
        :param gcs_source: The gcs_source of this ImportResourcesRequest.
        """
        self.openapi_types = {
            'content_structure': str,
            'gcs_source': GoogleCloudHealthcareV1beta1FhirGcsSource
        }

        self.attribute_map = {
            'content_structure': 'contentStructure',
            'gcs_source': 'gcsSource'
        }

        self._content_structure = content_structure
        self._gcs_source = gcs_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportResourcesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportResourcesRequest of this ImportResourcesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_structure(self):
        """Gets the content_structure of this ImportResourcesRequest.

        The content structure in the source location. If not specified, the server treats the input source files as BUNDLE.

        :return: The content_structure of this ImportResourcesRequest.
        :rtype: str
        """
        return self._content_structure

    @content_structure.setter
    def content_structure(self, content_structure):
        """Sets the content_structure of this ImportResourcesRequest.

        The content structure in the source location. If not specified, the server treats the input source files as BUNDLE.

        :param content_structure: The content_structure of this ImportResourcesRequest.
        :type content_structure: str
        """
        allowed_values = ["CONTENT_STRUCTURE_UNSPECIFIED", "BUNDLE", "RESOURCE", "BUNDLE_PRETTY", "RESOURCE_PRETTY"]  # noqa: E501
        if content_structure not in allowed_values:
            raise ValueError(
                "Invalid value for `content_structure` ({0}), must be one of {1}"
                .format(content_structure, allowed_values)
            )

        self._content_structure = content_structure

    @property
    def gcs_source(self):
        """Gets the gcs_source of this ImportResourcesRequest.


        :return: The gcs_source of this ImportResourcesRequest.
        :rtype: GoogleCloudHealthcareV1beta1FhirGcsSource
        """
        return self._gcs_source

    @gcs_source.setter
    def gcs_source(self, gcs_source):
        """Sets the gcs_source of this ImportResourcesRequest.


        :param gcs_source: The gcs_source of this ImportResourcesRequest.
        :type gcs_source: GoogleCloudHealthcareV1beta1FhirGcsSource
        """

        self._gcs_source = gcs_source
