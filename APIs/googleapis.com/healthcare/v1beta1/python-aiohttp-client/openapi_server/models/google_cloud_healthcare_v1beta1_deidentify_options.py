# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.character_mask_config import CharacterMaskConfig
from openapi_server.models.crypto_hash_config import CryptoHashConfig
from openapi_server.models.date_shift_config import DateShiftConfig
from openapi_server import util


class GoogleCloudHealthcareV1beta1DeidentifyOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, character_mask_config: CharacterMaskConfig=None, contextual_deid: object=None, crypto_hash_config: CryptoHashConfig=None, date_shift_config: DateShiftConfig=None, keep_extensions: object=None):
        """GoogleCloudHealthcareV1beta1DeidentifyOptions - a model defined in OpenAPI

        :param character_mask_config: The character_mask_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :param contextual_deid: The contextual_deid of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :param crypto_hash_config: The crypto_hash_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :param date_shift_config: The date_shift_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :param keep_extensions: The keep_extensions of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        """
        self.openapi_types = {
            'character_mask_config': CharacterMaskConfig,
            'contextual_deid': object,
            'crypto_hash_config': CryptoHashConfig,
            'date_shift_config': DateShiftConfig,
            'keep_extensions': object
        }

        self.attribute_map = {
            'character_mask_config': 'characterMaskConfig',
            'contextual_deid': 'contextualDeid',
            'crypto_hash_config': 'cryptoHashConfig',
            'date_shift_config': 'dateShiftConfig',
            'keep_extensions': 'keepExtensions'
        }

        self._character_mask_config = character_mask_config
        self._contextual_deid = contextual_deid
        self._crypto_hash_config = crypto_hash_config
        self._date_shift_config = date_shift_config
        self._keep_extensions = keep_extensions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudHealthcareV1beta1DeidentifyOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudHealthcareV1beta1DeidentifyOptions of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def character_mask_config(self):
        """Gets the character_mask_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.


        :return: The character_mask_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :rtype: CharacterMaskConfig
        """
        return self._character_mask_config

    @character_mask_config.setter
    def character_mask_config(self, character_mask_config):
        """Sets the character_mask_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.


        :param character_mask_config: The character_mask_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :type character_mask_config: CharacterMaskConfig
        """

        self._character_mask_config = character_mask_config

    @property
    def contextual_deid(self):
        """Gets the contextual_deid of this GoogleCloudHealthcareV1beta1DeidentifyOptions.

        Fields that don't match a KeepField or CleanTextField `action` in the BASIC profile are collected into a contextual phrase list. For fields that match a CleanTextField `action` in FieldMetadata or ProfileType, the process attempts to transform phrases matching these contextual entries. These contextual phrases are replaced with the token \"[CTX]\". This feature uses an additional InfoType during inspection.

        :return: The contextual_deid of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :rtype: object
        """
        return self._contextual_deid

    @contextual_deid.setter
    def contextual_deid(self, contextual_deid):
        """Sets the contextual_deid of this GoogleCloudHealthcareV1beta1DeidentifyOptions.

        Fields that don't match a KeepField or CleanTextField `action` in the BASIC profile are collected into a contextual phrase list. For fields that match a CleanTextField `action` in FieldMetadata or ProfileType, the process attempts to transform phrases matching these contextual entries. These contextual phrases are replaced with the token \"[CTX]\". This feature uses an additional InfoType during inspection.

        :param contextual_deid: The contextual_deid of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :type contextual_deid: object
        """

        self._contextual_deid = contextual_deid

    @property
    def crypto_hash_config(self):
        """Gets the crypto_hash_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.


        :return: The crypto_hash_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :rtype: CryptoHashConfig
        """
        return self._crypto_hash_config

    @crypto_hash_config.setter
    def crypto_hash_config(self, crypto_hash_config):
        """Sets the crypto_hash_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.


        :param crypto_hash_config: The crypto_hash_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :type crypto_hash_config: CryptoHashConfig
        """

        self._crypto_hash_config = crypto_hash_config

    @property
    def date_shift_config(self):
        """Gets the date_shift_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.


        :return: The date_shift_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :rtype: DateShiftConfig
        """
        return self._date_shift_config

    @date_shift_config.setter
    def date_shift_config(self, date_shift_config):
        """Sets the date_shift_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.


        :param date_shift_config: The date_shift_config of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :type date_shift_config: DateShiftConfig
        """

        self._date_shift_config = date_shift_config

    @property
    def keep_extensions(self):
        """Gets the keep_extensions of this GoogleCloudHealthcareV1beta1DeidentifyOptions.

        The behavior for handling FHIR extensions that aren't otherwise specified for de-identification. If provided, all extensions are preserved during de-identification by default. If unspecified, all extensions are removed during de-identification by default.

        :return: The keep_extensions of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :rtype: object
        """
        return self._keep_extensions

    @keep_extensions.setter
    def keep_extensions(self, keep_extensions):
        """Sets the keep_extensions of this GoogleCloudHealthcareV1beta1DeidentifyOptions.

        The behavior for handling FHIR extensions that aren't otherwise specified for de-identification. If provided, all extensions are preserved during de-identification by default. If unspecified, all extensions are removed during de-identification by default.

        :param keep_extensions: The keep_extensions of this GoogleCloudHealthcareV1beta1DeidentifyOptions.
        :type keep_extensions: object
        """

        self._keep_extensions = keep_extensions
