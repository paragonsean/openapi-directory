# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deidentified_store_destination import DeidentifiedStoreDestination
from openapi_server.models.google_cloud_healthcare_v1beta1_fhir_big_query_destination import GoogleCloudHealthcareV1beta1FhirBigQueryDestination
from openapi_server import util


class StreamConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery_destination: GoogleCloudHealthcareV1beta1FhirBigQueryDestination=None, deidentified_store_destination: DeidentifiedStoreDestination=None, resource_types: List[str]=None):
        """StreamConfig - a model defined in OpenAPI

        :param bigquery_destination: The bigquery_destination of this StreamConfig.
        :param deidentified_store_destination: The deidentified_store_destination of this StreamConfig.
        :param resource_types: The resource_types of this StreamConfig.
        """
        self.openapi_types = {
            'bigquery_destination': GoogleCloudHealthcareV1beta1FhirBigQueryDestination,
            'deidentified_store_destination': DeidentifiedStoreDestination,
            'resource_types': List[str]
        }

        self.attribute_map = {
            'bigquery_destination': 'bigqueryDestination',
            'deidentified_store_destination': 'deidentifiedStoreDestination',
            'resource_types': 'resourceTypes'
        }

        self._bigquery_destination = bigquery_destination
        self._deidentified_store_destination = deidentified_store_destination
        self._resource_types = resource_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamConfig of this StreamConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery_destination(self):
        """Gets the bigquery_destination of this StreamConfig.


        :return: The bigquery_destination of this StreamConfig.
        :rtype: GoogleCloudHealthcareV1beta1FhirBigQueryDestination
        """
        return self._bigquery_destination

    @bigquery_destination.setter
    def bigquery_destination(self, bigquery_destination):
        """Sets the bigquery_destination of this StreamConfig.


        :param bigquery_destination: The bigquery_destination of this StreamConfig.
        :type bigquery_destination: GoogleCloudHealthcareV1beta1FhirBigQueryDestination
        """

        self._bigquery_destination = bigquery_destination

    @property
    def deidentified_store_destination(self):
        """Gets the deidentified_store_destination of this StreamConfig.


        :return: The deidentified_store_destination of this StreamConfig.
        :rtype: DeidentifiedStoreDestination
        """
        return self._deidentified_store_destination

    @deidentified_store_destination.setter
    def deidentified_store_destination(self, deidentified_store_destination):
        """Sets the deidentified_store_destination of this StreamConfig.


        :param deidentified_store_destination: The deidentified_store_destination of this StreamConfig.
        :type deidentified_store_destination: DeidentifiedStoreDestination
        """

        self._deidentified_store_destination = deidentified_store_destination

    @property
    def resource_types(self):
        """Gets the resource_types of this StreamConfig.

        Supply a FHIR resource type (such as \"Patient\" or \"Observation\"). See https://www.hl7.org/fhir/valueset-resource-types.html for a list of all FHIR resource types. The server treats an empty list as an intent to stream all the supported resource types in this FHIR store.

        :return: The resource_types of this StreamConfig.
        :rtype: List[str]
        """
        return self._resource_types

    @resource_types.setter
    def resource_types(self, resource_types):
        """Sets the resource_types of this StreamConfig.

        Supply a FHIR resource type (such as \"Patient\" or \"Observation\"). See https://www.hl7.org/fhir/valueset-resource-types.html for a list of all FHIR resource types. The server treats an empty list as an intent to stream all the supported resource types in this FHIR store.

        :param resource_types: The resource_types of this StreamConfig.
        :type resource_types: List[str]
        """

        self._resource_types = resource_types
