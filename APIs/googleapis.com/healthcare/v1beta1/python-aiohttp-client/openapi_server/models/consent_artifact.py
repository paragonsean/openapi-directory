# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image import Image
from openapi_server.models.signature import Signature
from openapi_server import util


class ConsentArtifact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consent_content_screenshots: List[Image]=None, consent_content_version: str=None, guardian_signature: Signature=None, metadata: Dict[str, str]=None, name: str=None, user_id: str=None, user_signature: Signature=None, witness_signature: Signature=None):
        """ConsentArtifact - a model defined in OpenAPI

        :param consent_content_screenshots: The consent_content_screenshots of this ConsentArtifact.
        :param consent_content_version: The consent_content_version of this ConsentArtifact.
        :param guardian_signature: The guardian_signature of this ConsentArtifact.
        :param metadata: The metadata of this ConsentArtifact.
        :param name: The name of this ConsentArtifact.
        :param user_id: The user_id of this ConsentArtifact.
        :param user_signature: The user_signature of this ConsentArtifact.
        :param witness_signature: The witness_signature of this ConsentArtifact.
        """
        self.openapi_types = {
            'consent_content_screenshots': List[Image],
            'consent_content_version': str,
            'guardian_signature': Signature,
            'metadata': Dict[str, str],
            'name': str,
            'user_id': str,
            'user_signature': Signature,
            'witness_signature': Signature
        }

        self.attribute_map = {
            'consent_content_screenshots': 'consentContentScreenshots',
            'consent_content_version': 'consentContentVersion',
            'guardian_signature': 'guardianSignature',
            'metadata': 'metadata',
            'name': 'name',
            'user_id': 'userId',
            'user_signature': 'userSignature',
            'witness_signature': 'witnessSignature'
        }

        self._consent_content_screenshots = consent_content_screenshots
        self._consent_content_version = consent_content_version
        self._guardian_signature = guardian_signature
        self._metadata = metadata
        self._name = name
        self._user_id = user_id
        self._user_signature = user_signature
        self._witness_signature = witness_signature

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConsentArtifact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConsentArtifact of this ConsentArtifact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consent_content_screenshots(self):
        """Gets the consent_content_screenshots of this ConsentArtifact.

        Optional. Screenshots, PDFs, or other binary information documenting the user's consent.

        :return: The consent_content_screenshots of this ConsentArtifact.
        :rtype: List[Image]
        """
        return self._consent_content_screenshots

    @consent_content_screenshots.setter
    def consent_content_screenshots(self, consent_content_screenshots):
        """Sets the consent_content_screenshots of this ConsentArtifact.

        Optional. Screenshots, PDFs, or other binary information documenting the user's consent.

        :param consent_content_screenshots: The consent_content_screenshots of this ConsentArtifact.
        :type consent_content_screenshots: List[Image]
        """

        self._consent_content_screenshots = consent_content_screenshots

    @property
    def consent_content_version(self):
        """Gets the consent_content_version of this ConsentArtifact.

        Optional. An string indicating the version of the consent information shown to the user.

        :return: The consent_content_version of this ConsentArtifact.
        :rtype: str
        """
        return self._consent_content_version

    @consent_content_version.setter
    def consent_content_version(self, consent_content_version):
        """Sets the consent_content_version of this ConsentArtifact.

        Optional. An string indicating the version of the consent information shown to the user.

        :param consent_content_version: The consent_content_version of this ConsentArtifact.
        :type consent_content_version: str
        """

        self._consent_content_version = consent_content_version

    @property
    def guardian_signature(self):
        """Gets the guardian_signature of this ConsentArtifact.


        :return: The guardian_signature of this ConsentArtifact.
        :rtype: Signature
        """
        return self._guardian_signature

    @guardian_signature.setter
    def guardian_signature(self, guardian_signature):
        """Sets the guardian_signature of this ConsentArtifact.


        :param guardian_signature: The guardian_signature of this ConsentArtifact.
        :type guardian_signature: Signature
        """

        self._guardian_signature = guardian_signature

    @property
    def metadata(self):
        """Gets the metadata of this ConsentArtifact.

        Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.

        :return: The metadata of this ConsentArtifact.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ConsentArtifact.

        Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.

        :param metadata: The metadata of this ConsentArtifact.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def name(self):
        """Gets the name of this ConsentArtifact.

        Identifier. Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.

        :return: The name of this ConsentArtifact.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ConsentArtifact.

        Identifier. Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.

        :param name: The name of this ConsentArtifact.
        :type name: str
        """

        self._name = name

    @property
    def user_id(self):
        """Gets the user_id of this ConsentArtifact.

        Required. User's UUID provided by the client.

        :return: The user_id of this ConsentArtifact.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ConsentArtifact.

        Required. User's UUID provided by the client.

        :param user_id: The user_id of this ConsentArtifact.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def user_signature(self):
        """Gets the user_signature of this ConsentArtifact.


        :return: The user_signature of this ConsentArtifact.
        :rtype: Signature
        """
        return self._user_signature

    @user_signature.setter
    def user_signature(self, user_signature):
        """Sets the user_signature of this ConsentArtifact.


        :param user_signature: The user_signature of this ConsentArtifact.
        :type user_signature: Signature
        """

        self._user_signature = user_signature

    @property
    def witness_signature(self):
        """Gets the witness_signature of this ConsentArtifact.


        :return: The witness_signature of this ConsentArtifact.
        :rtype: Signature
        """
        return self._witness_signature

    @witness_signature.setter
    def witness_signature(self, witness_signature):
        """Sets the witness_signature of this ConsentArtifact.


        :param witness_signature: The witness_signature of this ConsentArtifact.
        :type witness_signature: Signature
        """

        self._witness_signature = witness_signature
