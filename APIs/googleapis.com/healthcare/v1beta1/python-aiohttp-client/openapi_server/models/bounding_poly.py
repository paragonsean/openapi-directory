# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vertex import Vertex
from openapi_server import util


class BoundingPoly(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label: str=None, vertices: List[Vertex]=None):
        """BoundingPoly - a model defined in OpenAPI

        :param label: The label of this BoundingPoly.
        :param vertices: The vertices of this BoundingPoly.
        """
        self.openapi_types = {
            'label': str,
            'vertices': List[Vertex]
        }

        self.attribute_map = {
            'label': 'label',
            'vertices': 'vertices'
        }

        self._label = label
        self._vertices = vertices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoundingPoly':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoundingPoly of this BoundingPoly.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self):
        """Gets the label of this BoundingPoly.

        A description of this polygon.

        :return: The label of this BoundingPoly.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this BoundingPoly.

        A description of this polygon.

        :param label: The label of this BoundingPoly.
        :type label: str
        """

        self._label = label

    @property
    def vertices(self):
        """Gets the vertices of this BoundingPoly.

        List of the vertices of this polygon.

        :return: The vertices of this BoundingPoly.
        :rtype: List[Vertex]
        """
        return self._vertices

    @vertices.setter
    def vertices(self, vertices):
        """Sets the vertices of this BoundingPoly.

        List of the vertices of this polygon.

        :param vertices: The vertices of this BoundingPoly.
        :type vertices: List[Vertex]
        """

        self._vertices = vertices
