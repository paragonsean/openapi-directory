# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConsentHeaderHandling(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, profile: str=None):
        """ConsentHeaderHandling - a model defined in OpenAPI

        :param profile: The profile of this ConsentHeaderHandling.
        """
        self.openapi_types = {
            'profile': str
        }

        self.attribute_map = {
            'profile': 'profile'
        }

        self._profile = profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConsentHeaderHandling':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConsentHeaderHandling of this ConsentHeaderHandling.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def profile(self):
        """Gets the profile of this ConsentHeaderHandling.

        Optional. Specifies the default server behavior when the header is empty. If not specified, the `ScopeProfile.PERMIT_EMPTY_SCOPE` option is used.

        :return: The profile of this ConsentHeaderHandling.
        :rtype: str
        """
        return self._profile

    @profile.setter
    def profile(self, profile):
        """Sets the profile of this ConsentHeaderHandling.

        Optional. Specifies the default server behavior when the header is empty. If not specified, the `ScopeProfile.PERMIT_EMPTY_SCOPE` option is used.

        :param profile: The profile of this ConsentHeaderHandling.
        :type profile: str
        """
        allowed_values = ["SCOPE_PROFILE_UNSPECIFIED", "PERMIT_EMPTY_SCOPE", "REQUIRED_ON_READ"]  # noqa: E501
        if profile not in allowed_values:
            raise ValueError(
                "Invalid value for `profile` ({0}), must be one of {1}"
                .format(profile, allowed_values)
            )

        self._profile = profile
