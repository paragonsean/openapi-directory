# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, canonical_url: str=None, parameter: str=None):
        """SearchParameter - a model defined in OpenAPI

        :param canonical_url: The canonical_url of this SearchParameter.
        :param parameter: The parameter of this SearchParameter.
        """
        self.openapi_types = {
            'canonical_url': str,
            'parameter': str
        }

        self.attribute_map = {
            'canonical_url': 'canonicalUrl',
            'parameter': 'parameter'
        }

        self._canonical_url = canonical_url
        self._parameter = parameter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchParameter of this SearchParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def canonical_url(self):
        """Gets the canonical_url of this SearchParameter.

        The canonical url of the search parameter resource.

        :return: The canonical_url of this SearchParameter.
        :rtype: str
        """
        return self._canonical_url

    @canonical_url.setter
    def canonical_url(self, canonical_url):
        """Sets the canonical_url of this SearchParameter.

        The canonical url of the search parameter resource.

        :param canonical_url: The canonical_url of this SearchParameter.
        :type canonical_url: str
        """

        self._canonical_url = canonical_url

    @property
    def parameter(self):
        """Gets the parameter of this SearchParameter.

        The versioned name of the search parameter resource. The format is projects/{project-id}/locations/{location}/datasets/{dataset-id}/fhirStores/{fhirStore-id}/fhir/SearchParameter/{resource-id}/_history/{version-id} For fhir stores with disable_resource_versioning=true, the format is projects/{project-id}/locations/{location}/datasets/{dataset-id}/fhirStores/{fhirStore-id}/fhir/SearchParameter/{resource-id}/

        :return: The parameter of this SearchParameter.
        :rtype: str
        """
        return self._parameter

    @parameter.setter
    def parameter(self, parameter):
        """Sets the parameter of this SearchParameter.

        The versioned name of the search parameter resource. The format is projects/{project-id}/locations/{location}/datasets/{dataset-id}/fhirStores/{fhirStore-id}/fhir/SearchParameter/{resource-id}/_history/{version-id} For fhir stores with disable_resource_versioning=true, the format is projects/{project-id}/locations/{location}/datasets/{dataset-id}/fhirStores/{fhirStore-id}/fhir/SearchParameter/{resource-id}/

        :param parameter: The parameter of this SearchParameter.
        :type parameter: str
        """

        self._parameter = parameter
