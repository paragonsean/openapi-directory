# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RejectConsentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consent_artifact: str=None):
        """RejectConsentRequest - a model defined in OpenAPI

        :param consent_artifact: The consent_artifact of this RejectConsentRequest.
        """
        self.openapi_types = {
            'consent_artifact': str
        }

        self.attribute_map = {
            'consent_artifact': 'consentArtifact'
        }

        self._consent_artifact = consent_artifact

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RejectConsentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RejectConsentRequest of this RejectConsentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consent_artifact(self):
        """Gets the consent_artifact of this RejectConsentRequest.

        Optional. The resource name of the Consent artifact that contains documentation of the user's rejection of the draft Consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. If the draft Consent had a Consent artifact, this Consent artifact overwrites it.

        :return: The consent_artifact of this RejectConsentRequest.
        :rtype: str
        """
        return self._consent_artifact

    @consent_artifact.setter
    def consent_artifact(self, consent_artifact):
        """Sets the consent_artifact of this RejectConsentRequest.

        Optional. The resource name of the Consent artifact that contains documentation of the user's rejection of the draft Consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. If the draft Consent had a Consent artifact, this Consent artifact overwrites it.

        :param consent_artifact: The consent_artifact of this RejectConsentRequest.
        :type consent_artifact: str
        """

        self._consent_artifact = consent_artifact
