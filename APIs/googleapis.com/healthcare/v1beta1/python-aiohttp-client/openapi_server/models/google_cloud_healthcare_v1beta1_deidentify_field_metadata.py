# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, character_mask_field: object=None, clean_text_field: object=None, crypto_hash_field: object=None, date_shift_field: object=None, keep_field: object=None, paths: List[str]=None, remove_field: object=None):
        """GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata - a model defined in OpenAPI

        :param character_mask_field: The character_mask_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :param clean_text_field: The clean_text_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :param crypto_hash_field: The crypto_hash_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :param date_shift_field: The date_shift_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :param keep_field: The keep_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :param paths: The paths of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :param remove_field: The remove_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        """
        self.openapi_types = {
            'character_mask_field': object,
            'clean_text_field': object,
            'crypto_hash_field': object,
            'date_shift_field': object,
            'keep_field': object,
            'paths': List[str],
            'remove_field': object
        }

        self.attribute_map = {
            'character_mask_field': 'characterMaskField',
            'clean_text_field': 'cleanTextField',
            'crypto_hash_field': 'cryptoHashField',
            'date_shift_field': 'dateShiftField',
            'keep_field': 'keepField',
            'paths': 'paths',
            'remove_field': 'removeField'
        }

        self._character_mask_field = character_mask_field
        self._clean_text_field = clean_text_field
        self._crypto_hash_field = crypto_hash_field
        self._date_shift_field = date_shift_field
        self._keep_field = keep_field
        self._paths = paths
        self._remove_field = remove_field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def character_mask_field(self):
        """Gets the character_mask_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Replace field value with masking character. Supported [types](https://www.hl7.org/fhir/datatypes.html): Code, Decimal, HumanName, Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml.

        :return: The character_mask_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :rtype: object
        """
        return self._character_mask_field

    @character_mask_field.setter
    def character_mask_field(self, character_mask_field):
        """Sets the character_mask_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Replace field value with masking character. Supported [types](https://www.hl7.org/fhir/datatypes.html): Code, Decimal, HumanName, Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml.

        :param character_mask_field: The character_mask_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :type character_mask_field: object
        """

        self._character_mask_field = character_mask_field

    @property
    def clean_text_field(self):
        """Gets the clean_text_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Inspect text and transform sensitive text. Configure using TextConfig. Supported [types](https://www.hl7.org/fhir/datatypes.html): Code, Date, DateTime, Decimal, HumanName, Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml.

        :return: The clean_text_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :rtype: object
        """
        return self._clean_text_field

    @clean_text_field.setter
    def clean_text_field(self, clean_text_field):
        """Sets the clean_text_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Inspect text and transform sensitive text. Configure using TextConfig. Supported [types](https://www.hl7.org/fhir/datatypes.html): Code, Date, DateTime, Decimal, HumanName, Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml.

        :param clean_text_field: The clean_text_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :type clean_text_field: object
        """

        self._clean_text_field = clean_text_field

    @property
    def crypto_hash_field(self):
        """Gets the crypto_hash_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Replace field value with a hash of that value. Supported [types](https://www.hl7.org/fhir/datatypes.html): Code, Decimal, HumanName, Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml.

        :return: The crypto_hash_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :rtype: object
        """
        return self._crypto_hash_field

    @crypto_hash_field.setter
    def crypto_hash_field(self, crypto_hash_field):
        """Sets the crypto_hash_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Replace field value with a hash of that value. Supported [types](https://www.hl7.org/fhir/datatypes.html): Code, Decimal, HumanName, Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml.

        :param crypto_hash_field: The crypto_hash_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :type crypto_hash_field: object
        """

        self._crypto_hash_field = crypto_hash_field

    @property
    def date_shift_field(self):
        """Gets the date_shift_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Shift the date by a randomized number of days. See [date shifting](https://cloud.google.com/dlp/docs/concepts-date-shifting) for more information. Supported [types](https://www.hl7.org/fhir/datatypes.html): Date, DateTime.

        :return: The date_shift_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :rtype: object
        """
        return self._date_shift_field

    @date_shift_field.setter
    def date_shift_field(self, date_shift_field):
        """Sets the date_shift_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Shift the date by a randomized number of days. See [date shifting](https://cloud.google.com/dlp/docs/concepts-date-shifting) for more information. Supported [types](https://www.hl7.org/fhir/datatypes.html): Date, DateTime.

        :param date_shift_field: The date_shift_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :type date_shift_field: object
        """

        self._date_shift_field = date_shift_field

    @property
    def keep_field(self):
        """Gets the keep_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Keep field unchanged.

        :return: The keep_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :rtype: object
        """
        return self._keep_field

    @keep_field.setter
    def keep_field(self, keep_field):
        """Sets the keep_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Keep field unchanged.

        :param keep_field: The keep_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :type keep_field: object
        """

        self._keep_field = keep_field

    @property
    def paths(self):
        """Gets the paths of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        List of paths to FHIR fields to redact. Each path is a period-separated list where each component is either a field name or FHIR [type](https://www.hl7.org/fhir/datatypes.html) name. All types begin with an upper case letter. For example, the resource field `Patient.Address.city`, which uses a [string](https://www.hl7.org/fhir/datatypes-definitions.html#Address.city) type, can be matched by `Patient.Address.String`. Partial matching is supported. For example, `Patient.Address.city` can be matched by `Address.city` (with `Patient` omitted). Partial matching and type matching can be combined, for example `Patient.Address.city` can be matched by `Address.String`. For \"choice\" types (those defined in the FHIR spec with the format `field[x]`), use two separate components. For example, `deceasedAge.unit` is matched by `Deceased.Age.unit`. The following types are supported: AdministrativeGenderCode, Base64Binary, Boolean, Code, Date, DateTime, Decimal, HumanName, Id, Instant, Integer, LanguageCode, Markdown, Oid, PositiveInt, String, UnsignedInt, Uri, Uuid, Xhtml. The sub-type for HumanName (for example `HumanName.given`, `HumanName.family`) can be omitted.

        :return: The paths of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :rtype: List[str]
        """
        return self._paths

    @paths.setter
    def paths(self, paths):
        """Sets the paths of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        List of paths to FHIR fields to redact. Each path is a period-separated list where each component is either a field name or FHIR [type](https://www.hl7.org/fhir/datatypes.html) name. All types begin with an upper case letter. For example, the resource field `Patient.Address.city`, which uses a [string](https://www.hl7.org/fhir/datatypes-definitions.html#Address.city) type, can be matched by `Patient.Address.String`. Partial matching is supported. For example, `Patient.Address.city` can be matched by `Address.city` (with `Patient` omitted). Partial matching and type matching can be combined, for example `Patient.Address.city` can be matched by `Address.String`. For \"choice\" types (those defined in the FHIR spec with the format `field[x]`), use two separate components. For example, `deceasedAge.unit` is matched by `Deceased.Age.unit`. The following types are supported: AdministrativeGenderCode, Base64Binary, Boolean, Code, Date, DateTime, Decimal, HumanName, Id, Instant, Integer, LanguageCode, Markdown, Oid, PositiveInt, String, UnsignedInt, Uri, Uuid, Xhtml. The sub-type for HumanName (for example `HumanName.given`, `HumanName.family`) can be omitted.

        :param paths: The paths of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :type paths: List[str]
        """

        self._paths = paths

    @property
    def remove_field(self):
        """Gets the remove_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Remove field.

        :return: The remove_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :rtype: object
        """
        return self._remove_field

    @remove_field.setter
    def remove_field(self, remove_field):
        """Sets the remove_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.

        Remove field.

        :param remove_field: The remove_field of this GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.
        :type remove_field: object
        """

        self._remove_field = remove_field
