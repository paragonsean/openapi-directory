# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryAccessibleDataResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gcs_uris: List[str]=None):
        """QueryAccessibleDataResponse - a model defined in OpenAPI

        :param gcs_uris: The gcs_uris of this QueryAccessibleDataResponse.
        """
        self.openapi_types = {
            'gcs_uris': List[str]
        }

        self.attribute_map = {
            'gcs_uris': 'gcsUris'
        }

        self._gcs_uris = gcs_uris

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryAccessibleDataResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryAccessibleDataResponse of this QueryAccessibleDataResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gcs_uris(self):
        """Gets the gcs_uris of this QueryAccessibleDataResponse.

        List of files, each of which contains a list of data_id(s) that are consented for a specified use in the request.

        :return: The gcs_uris of this QueryAccessibleDataResponse.
        :rtype: List[str]
        """
        return self._gcs_uris

    @gcs_uris.setter
    def gcs_uris(self, gcs_uris):
        """Sets the gcs_uris of this QueryAccessibleDataResponse.

        List of files, each of which contains a list of data_id(s) that are consented for a specified use in the request.

        :param gcs_uris: The gcs_uris of this QueryAccessibleDataResponse.
        :type gcs_uris: List[str]
        """

        self._gcs_uris = gcs_uris
