# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.blob_storage_settings import BlobStorageSettings
from openapi_server.models.dicom_filter_config import DicomFilterConfig
from openapi_server import util


class SetBlobStorageSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_storage_settings: BlobStorageSettings=None, filter_config: DicomFilterConfig=None):
        """SetBlobStorageSettingsRequest - a model defined in OpenAPI

        :param blob_storage_settings: The blob_storage_settings of this SetBlobStorageSettingsRequest.
        :param filter_config: The filter_config of this SetBlobStorageSettingsRequest.
        """
        self.openapi_types = {
            'blob_storage_settings': BlobStorageSettings,
            'filter_config': DicomFilterConfig
        }

        self.attribute_map = {
            'blob_storage_settings': 'blobStorageSettings',
            'filter_config': 'filterConfig'
        }

        self._blob_storage_settings = blob_storage_settings
        self._filter_config = filter_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetBlobStorageSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetBlobStorageSettingsRequest of this SetBlobStorageSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_storage_settings(self):
        """Gets the blob_storage_settings of this SetBlobStorageSettingsRequest.


        :return: The blob_storage_settings of this SetBlobStorageSettingsRequest.
        :rtype: BlobStorageSettings
        """
        return self._blob_storage_settings

    @blob_storage_settings.setter
    def blob_storage_settings(self, blob_storage_settings):
        """Sets the blob_storage_settings of this SetBlobStorageSettingsRequest.


        :param blob_storage_settings: The blob_storage_settings of this SetBlobStorageSettingsRequest.
        :type blob_storage_settings: BlobStorageSettings
        """

        self._blob_storage_settings = blob_storage_settings

    @property
    def filter_config(self):
        """Gets the filter_config of this SetBlobStorageSettingsRequest.


        :return: The filter_config of this SetBlobStorageSettingsRequest.
        :rtype: DicomFilterConfig
        """
        return self._filter_config

    @filter_config.setter
    def filter_config(self, filter_config):
        """Sets the filter_config of this SetBlobStorageSettingsRequest.


        :param filter_config: The filter_config of this SetBlobStorageSettingsRequest.
        :type filter_config: DicomFilterConfig
        """

        self._filter_config = filter_config
