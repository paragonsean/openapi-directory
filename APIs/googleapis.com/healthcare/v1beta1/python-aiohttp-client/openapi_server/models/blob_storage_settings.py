# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BlobStorageSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_storage_class: str=None):
        """BlobStorageSettings - a model defined in OpenAPI

        :param blob_storage_class: The blob_storage_class of this BlobStorageSettings.
        """
        self.openapi_types = {
            'blob_storage_class': str
        }

        self.attribute_map = {
            'blob_storage_class': 'blobStorageClass'
        }

        self._blob_storage_class = blob_storage_class

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlobStorageSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlobStorageSettings of this BlobStorageSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_storage_class(self):
        """Gets the blob_storage_class of this BlobStorageSettings.

        The Storage class in which the Blob data is stored.

        :return: The blob_storage_class of this BlobStorageSettings.
        :rtype: str
        """
        return self._blob_storage_class

    @blob_storage_class.setter
    def blob_storage_class(self, blob_storage_class):
        """Sets the blob_storage_class of this BlobStorageSettings.

        The Storage class in which the Blob data is stored.

        :param blob_storage_class: The blob_storage_class of this BlobStorageSettings.
        :type blob_storage_class: str
        """
        allowed_values = ["BLOB_STORAGE_CLASS_UNSPECIFIED", "STANDARD", "NEARLINE", "COLDLINE", "ARCHIVE"]  # noqa: E501
        if blob_storage_class not in allowed_values:
            raise ValueError(
                "Invalid value for `blob_storage_class` ({0}), must be one of {1}"
                .format(blob_storage_class, allowed_values)
            )

        self._blob_storage_class = blob_storage_class
