/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExplainDataAccessConsentScope from './ExplainDataAccessConsentScope';

/**
 * The ExplainDataAccessResponse model module.
 * @module model/ExplainDataAccessResponse
 * @version v1beta1
 */
class ExplainDataAccessResponse {
    /**
     * Constructs a new <code>ExplainDataAccessResponse</code>.
     * List of consent scopes that are applicable to the explained access on a given resource.
     * @alias module:model/ExplainDataAccessResponse
     */
    constructor() { 
        
        ExplainDataAccessResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExplainDataAccessResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExplainDataAccessResponse} obj Optional instance to populate.
     * @return {module:model/ExplainDataAccessResponse} The populated <code>ExplainDataAccessResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExplainDataAccessResponse();

            if (data.hasOwnProperty('consentScopes')) {
                obj['consentScopes'] = ApiClient.convertToType(data['consentScopes'], [ExplainDataAccessConsentScope]);
            }
            if (data.hasOwnProperty('warning')) {
                obj['warning'] = ApiClient.convertToType(data['warning'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExplainDataAccessResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExplainDataAccessResponse</code>.
     */
    static validateJSON(data) {
        if (data['consentScopes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['consentScopes'])) {
                throw new Error("Expected the field `consentScopes` to be an array in the JSON data but got " + data['consentScopes']);
            }
            // validate the optional field `consentScopes` (array)
            for (const item of data['consentScopes']) {
                ExplainDataAccessConsentScope.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['warning'] && !(typeof data['warning'] === 'string' || data['warning'] instanceof String)) {
            throw new Error("Expected the field `warning` to be a primitive type in the JSON string but got " + data['warning']);
        }

        return true;
    }


}



/**
 * List of applicable consent scopes. Sorted in order of actor such that scopes belonging to the same actor will be adjacent to each other in the list.
 * @member {Array.<module:model/ExplainDataAccessConsentScope>} consentScopes
 */
ExplainDataAccessResponse.prototype['consentScopes'] = undefined;

/**
 * Warnings associated with this response. It inform user with exceeded scope limit errors.
 * @member {String} warning
 */
ExplainDataAccessResponse.prototype['warning'] = undefined;






export default ExplainDataAccessResponse;

