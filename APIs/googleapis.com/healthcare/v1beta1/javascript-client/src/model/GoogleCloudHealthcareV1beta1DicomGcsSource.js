/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudHealthcareV1beta1DicomGcsSource model module.
 * @module model/GoogleCloudHealthcareV1beta1DicomGcsSource
 * @version v1beta1
 */
class GoogleCloudHealthcareV1beta1DicomGcsSource {
    /**
     * Constructs a new <code>GoogleCloudHealthcareV1beta1DicomGcsSource</code>.
     * Specifies the configuration for importing data from Cloud Storage.
     * @alias module:model/GoogleCloudHealthcareV1beta1DicomGcsSource
     */
    constructor() { 
        
        GoogleCloudHealthcareV1beta1DicomGcsSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudHealthcareV1beta1DicomGcsSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudHealthcareV1beta1DicomGcsSource} obj Optional instance to populate.
     * @return {module:model/GoogleCloudHealthcareV1beta1DicomGcsSource} The populated <code>GoogleCloudHealthcareV1beta1DicomGcsSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudHealthcareV1beta1DicomGcsSource();

            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudHealthcareV1beta1DicomGcsSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudHealthcareV1beta1DicomGcsSource</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * Points to a Cloud Storage URI containing file(s) with content only. The URI must be in the following format: `gs://{bucket_id}/{object_id}`. The URI can include wildcards in `object_id` and thus identify multiple files. Supported wildcards: * '*' to match 0 or more non-separator characters * '**' to match 0 or more characters (including separators). Must be used at the end of a path and with no other wildcards in the path. Can also be used with a file extension (such as .dcm), which imports all files with the extension in the specified directory and its sub-directories. For example, `gs://my-bucket/my-directory/_**.dcm` imports all files with .dcm extensions in `my-directory/` and its sub-directories. * '?' to match 1 character. All other URI formats are invalid. Files matching the wildcard are expected to contain content only, no metadata.
 * @member {String} uri
 */
GoogleCloudHealthcareV1beta1DicomGcsSource.prototype['uri'] = undefined;






export default GoogleCloudHealthcareV1beta1DicomGcsSource;

