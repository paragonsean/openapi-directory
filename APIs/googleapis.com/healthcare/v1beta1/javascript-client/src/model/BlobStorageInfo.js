/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BlobStorageInfo model module.
 * @module model/BlobStorageInfo
 * @version v1beta1
 */
class BlobStorageInfo {
    /**
     * Constructs a new <code>BlobStorageInfo</code>.
     * BlobStorageInfo contains details about the data stored in Blob Storage for the referenced resource. Note: Storage class is only valid for DICOM and hence will only be populated for DICOM resources.
     * @alias module:model/BlobStorageInfo
     */
    constructor() { 
        
        BlobStorageInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BlobStorageInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BlobStorageInfo} obj Optional instance to populate.
     * @return {module:model/BlobStorageInfo} The populated <code>BlobStorageInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BlobStorageInfo();

            if (data.hasOwnProperty('sizeBytes')) {
                obj['sizeBytes'] = ApiClient.convertToType(data['sizeBytes'], 'String');
            }
            if (data.hasOwnProperty('storageClass')) {
                obj['storageClass'] = ApiClient.convertToType(data['storageClass'], 'String');
            }
            if (data.hasOwnProperty('storageClassUpdateTime')) {
                obj['storageClassUpdateTime'] = ApiClient.convertToType(data['storageClassUpdateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BlobStorageInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BlobStorageInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['sizeBytes'] && !(typeof data['sizeBytes'] === 'string' || data['sizeBytes'] instanceof String)) {
            throw new Error("Expected the field `sizeBytes` to be a primitive type in the JSON string but got " + data['sizeBytes']);
        }
        // ensure the json data is a string
        if (data['storageClass'] && !(typeof data['storageClass'] === 'string' || data['storageClass'] instanceof String)) {
            throw new Error("Expected the field `storageClass` to be a primitive type in the JSON string but got " + data['storageClass']);
        }
        // ensure the json data is a string
        if (data['storageClassUpdateTime'] && !(typeof data['storageClassUpdateTime'] === 'string' || data['storageClassUpdateTime'] instanceof String)) {
            throw new Error("Expected the field `storageClassUpdateTime` to be a primitive type in the JSON string but got " + data['storageClassUpdateTime']);
        }

        return true;
    }


}



/**
 * Size in bytes of data stored in Blob Storage.
 * @member {String} sizeBytes
 */
BlobStorageInfo.prototype['sizeBytes'] = undefined;

/**
 * The storage class in which the Blob data is stored.
 * @member {module:model/BlobStorageInfo.StorageClassEnum} storageClass
 */
BlobStorageInfo.prototype['storageClass'] = undefined;

/**
 * The time at which the storage class was updated. This is used to compute early deletion fees of the resource.
 * @member {String} storageClassUpdateTime
 */
BlobStorageInfo.prototype['storageClassUpdateTime'] = undefined;





/**
 * Allowed values for the <code>storageClass</code> property.
 * @enum {String}
 * @readonly
 */
BlobStorageInfo['StorageClassEnum'] = {

    /**
     * value: "BLOB_STORAGE_CLASS_UNSPECIFIED"
     * @const
     */
    "BLOB_STORAGE_CLASS_UNSPECIFIED": "BLOB_STORAGE_CLASS_UNSPECIFIED",

    /**
     * value: "STANDARD"
     * @const
     */
    "STANDARD": "STANDARD",

    /**
     * value: "NEARLINE"
     * @const
     */
    "NEARLINE": "NEARLINE",

    /**
     * value: "COLDLINE"
     * @const
     */
    "COLDLINE": "COLDLINE",

    /**
     * value: "ARCHIVE"
     * @const
     */
    "ARCHIVE": "ARCHIVE"
};



export default BlobStorageInfo;

