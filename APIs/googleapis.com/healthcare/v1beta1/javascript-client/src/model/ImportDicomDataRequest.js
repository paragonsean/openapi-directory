/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BlobStorageSettings from './BlobStorageSettings';
import GoogleCloudHealthcareV1beta1DicomGcsSource from './GoogleCloudHealthcareV1beta1DicomGcsSource';

/**
 * The ImportDicomDataRequest model module.
 * @module model/ImportDicomDataRequest
 * @version v1beta1
 */
class ImportDicomDataRequest {
    /**
     * Constructs a new <code>ImportDicomDataRequest</code>.
     * Imports data into the specified DICOM store. Returns an error if any of the files to import are not DICOM files. This API accepts duplicate DICOM instances by ignoring the newly-pushed instance. It does not overwrite.
     * @alias module:model/ImportDicomDataRequest
     */
    constructor() { 
        
        ImportDicomDataRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImportDicomDataRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportDicomDataRequest} obj Optional instance to populate.
     * @return {module:model/ImportDicomDataRequest} The populated <code>ImportDicomDataRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportDicomDataRequest();

            if (data.hasOwnProperty('blobStorageSettings')) {
                obj['blobStorageSettings'] = BlobStorageSettings.constructFromObject(data['blobStorageSettings']);
            }
            if (data.hasOwnProperty('gcsSource')) {
                obj['gcsSource'] = GoogleCloudHealthcareV1beta1DicomGcsSource.constructFromObject(data['gcsSource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportDicomDataRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportDicomDataRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `blobStorageSettings`
        if (data['blobStorageSettings']) { // data not null
          BlobStorageSettings.validateJSON(data['blobStorageSettings']);
        }
        // validate the optional field `gcsSource`
        if (data['gcsSource']) { // data not null
          GoogleCloudHealthcareV1beta1DicomGcsSource.validateJSON(data['gcsSource']);
        }

        return true;
    }


}



/**
 * @member {module:model/BlobStorageSettings} blobStorageSettings
 */
ImportDicomDataRequest.prototype['blobStorageSettings'] = undefined;

/**
 * @member {module:model/GoogleCloudHealthcareV1beta1DicomGcsSource} gcsSource
 */
ImportDicomDataRequest.prototype['gcsSource'] = undefined;






export default ImportDicomDataRequest;

