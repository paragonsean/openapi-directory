/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConsentStore from './ConsentStore';

/**
 * The ListConsentStoresResponse model module.
 * @module model/ListConsentStoresResponse
 * @version v1beta1
 */
class ListConsentStoresResponse {
    /**
     * Constructs a new <code>ListConsentStoresResponse</code>.
     * @alias module:model/ListConsentStoresResponse
     */
    constructor() { 
        
        ListConsentStoresResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListConsentStoresResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListConsentStoresResponse} obj Optional instance to populate.
     * @return {module:model/ListConsentStoresResponse} The populated <code>ListConsentStoresResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListConsentStoresResponse();

            if (data.hasOwnProperty('consentStores')) {
                obj['consentStores'] = ApiClient.convertToType(data['consentStores'], [ConsentStore]);
            }
            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListConsentStoresResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListConsentStoresResponse</code>.
     */
    static validateJSON(data) {
        if (data['consentStores']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['consentStores'])) {
                throw new Error("Expected the field `consentStores` to be an array in the JSON data but got " + data['consentStores']);
            }
            // validate the optional field `consentStores` (array)
            for (const item of data['consentStores']) {
                ConsentStore.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }

        return true;
    }


}



/**
 * The returned consent stores. The maximum number of stores returned is determined by the value of page_size in the ListConsentStoresRequest.
 * @member {Array.<module:model/ConsentStore>} consentStores
 */
ListConsentStoresResponse.prototype['consentStores'] = undefined;

/**
 * Token to retrieve the next page of results, or empty if there are no more results in the list.
 * @member {String} nextPageToken
 */
ListConsentStoresResponse.prototype['nextPageToken'] = undefined;






export default ListConsentStoresResponse;

