/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdminConsents from './AdminConsents';

/**
 * The ApplyAdminConsentsRequest model module.
 * @module model/ApplyAdminConsentsRequest
 * @version v1beta1
 */
class ApplyAdminConsentsRequest {
    /**
     * Constructs a new <code>ApplyAdminConsentsRequest</code>.
     * Request to apply the admin Consent resources for the specified FHIR store.
     * @alias module:model/ApplyAdminConsentsRequest
     */
    constructor() { 
        
        ApplyAdminConsentsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplyAdminConsentsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplyAdminConsentsRequest} obj Optional instance to populate.
     * @return {module:model/ApplyAdminConsentsRequest} The populated <code>ApplyAdminConsentsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplyAdminConsentsRequest();

            if (data.hasOwnProperty('newConsentsList')) {
                obj['newConsentsList'] = AdminConsents.constructFromObject(data['newConsentsList']);
            }
            if (data.hasOwnProperty('validateOnly')) {
                obj['validateOnly'] = ApiClient.convertToType(data['validateOnly'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplyAdminConsentsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplyAdminConsentsRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `newConsentsList`
        if (data['newConsentsList']) { // data not null
          AdminConsents.validateJSON(data['newConsentsList']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdminConsents} newConsentsList
 */
ApplyAdminConsentsRequest.prototype['newConsentsList'] = undefined;

/**
 * If true, the method only validates Consent resources to make sure they are supported. Otherwise, the method applies the aggregate consent information to update the enforcement model and reindex the FHIR resources. If all Consent resources can be applied successfully, the ApplyAdminConsentsResponse is returned containing the following fields: * `consent_apply_success` to indicate the number of Consent resources applied. * `affected_resources` to indicate the number of resources that might have had their consent access changed. If, however, one or more Consent resources are unsupported or cannot be applied, the method fails and ApplyAdminConsentsErrorDetail is is returned with details about the unsupported Consent resources.
 * @member {Boolean} validateOnly
 */
ApplyAdminConsentsRequest.prototype['validateOnly'] = undefined;






export default ApplyAdminConsentsRequest;

