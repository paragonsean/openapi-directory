/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConsentList model module.
 * @module model/ConsentList
 * @version v1beta1
 */
class ConsentList {
    /**
     * Constructs a new <code>ConsentList</code>.
     * List of resource names of Consent resources.
     * @alias module:model/ConsentList
     */
    constructor() { 
        
        ConsentList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConsentList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConsentList} obj Optional instance to populate.
     * @return {module:model/ConsentList} The populated <code>ConsentList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsentList();

            if (data.hasOwnProperty('consents')) {
                obj['consents'] = ApiClient.convertToType(data['consents'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConsentList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConsentList</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['consents'])) {
            throw new Error("Expected the field `consents` to be an array in the JSON data but got " + data['consents']);
        }

        return true;
    }


}



/**
 * The resource names of the Consents to evaluate against, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
 * @member {Array.<String>} consents
 */
ConsentList.prototype['consents'] = undefined;






export default ConsentList;

