/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProgressCounter model module.
 * @module model/ProgressCounter
 * @version v1beta1
 */
class ProgressCounter {
    /**
     * Constructs a new <code>ProgressCounter</code>.
     * ProgressCounter provides counters to describe an operation&#39;s progress.
     * @alias module:model/ProgressCounter
     */
    constructor() { 
        
        ProgressCounter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProgressCounter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProgressCounter} obj Optional instance to populate.
     * @return {module:model/ProgressCounter} The populated <code>ProgressCounter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProgressCounter();

            if (data.hasOwnProperty('failure')) {
                obj['failure'] = ApiClient.convertToType(data['failure'], 'String');
            }
            if (data.hasOwnProperty('pending')) {
                obj['pending'] = ApiClient.convertToType(data['pending'], 'String');
            }
            if (data.hasOwnProperty('secondaryFailure')) {
                obj['secondaryFailure'] = ApiClient.convertToType(data['secondaryFailure'], 'String');
            }
            if (data.hasOwnProperty('secondarySuccess')) {
                obj['secondarySuccess'] = ApiClient.convertToType(data['secondarySuccess'], 'String');
            }
            if (data.hasOwnProperty('success')) {
                obj['success'] = ApiClient.convertToType(data['success'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProgressCounter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProgressCounter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['failure'] && !(typeof data['failure'] === 'string' || data['failure'] instanceof String)) {
            throw new Error("Expected the field `failure` to be a primitive type in the JSON string but got " + data['failure']);
        }
        // ensure the json data is a string
        if (data['pending'] && !(typeof data['pending'] === 'string' || data['pending'] instanceof String)) {
            throw new Error("Expected the field `pending` to be a primitive type in the JSON string but got " + data['pending']);
        }
        // ensure the json data is a string
        if (data['secondaryFailure'] && !(typeof data['secondaryFailure'] === 'string' || data['secondaryFailure'] instanceof String)) {
            throw new Error("Expected the field `secondaryFailure` to be a primitive type in the JSON string but got " + data['secondaryFailure']);
        }
        // ensure the json data is a string
        if (data['secondarySuccess'] && !(typeof data['secondarySuccess'] === 'string' || data['secondarySuccess'] instanceof String)) {
            throw new Error("Expected the field `secondarySuccess` to be a primitive type in the JSON string but got " + data['secondarySuccess']);
        }
        // ensure the json data is a string
        if (data['success'] && !(typeof data['success'] === 'string' || data['success'] instanceof String)) {
            throw new Error("Expected the field `success` to be a primitive type in the JSON string but got " + data['success']);
        }

        return true;
    }


}



/**
 * The number of units that failed in the operation.
 * @member {String} failure
 */
ProgressCounter.prototype['failure'] = undefined;

/**
 * The number of units that are pending in the operation.
 * @member {String} pending
 */
ProgressCounter.prototype['pending'] = undefined;

/**
 * The number of secondary units that failed in the operation.
 * @member {String} secondaryFailure
 */
ProgressCounter.prototype['secondaryFailure'] = undefined;

/**
 * The number of secondary units that succeeded in the operation.
 * @member {String} secondarySuccess
 */
ProgressCounter.prototype['secondarySuccess'] = undefined;

/**
 * The number of units that succeeded in the operation.
 * @member {String} success
 */
ProgressCounter.prototype['success'] = undefined;






export default ProgressCounter;

