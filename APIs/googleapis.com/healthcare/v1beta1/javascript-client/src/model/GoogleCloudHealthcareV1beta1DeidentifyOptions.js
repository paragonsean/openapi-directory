/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CharacterMaskConfig from './CharacterMaskConfig';
import CryptoHashConfig from './CryptoHashConfig';
import DateShiftConfig from './DateShiftConfig';

/**
 * The GoogleCloudHealthcareV1beta1DeidentifyOptions model module.
 * @module model/GoogleCloudHealthcareV1beta1DeidentifyOptions
 * @version v1beta1
 */
class GoogleCloudHealthcareV1beta1DeidentifyOptions {
    /**
     * Constructs a new <code>GoogleCloudHealthcareV1beta1DeidentifyOptions</code>.
     * Specifies additional options to apply to the base ProfileType.
     * @alias module:model/GoogleCloudHealthcareV1beta1DeidentifyOptions
     */
    constructor() { 
        
        GoogleCloudHealthcareV1beta1DeidentifyOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudHealthcareV1beta1DeidentifyOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudHealthcareV1beta1DeidentifyOptions} obj Optional instance to populate.
     * @return {module:model/GoogleCloudHealthcareV1beta1DeidentifyOptions} The populated <code>GoogleCloudHealthcareV1beta1DeidentifyOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudHealthcareV1beta1DeidentifyOptions();

            if (data.hasOwnProperty('characterMaskConfig')) {
                obj['characterMaskConfig'] = CharacterMaskConfig.constructFromObject(data['characterMaskConfig']);
            }
            if (data.hasOwnProperty('contextualDeid')) {
                obj['contextualDeid'] = ApiClient.convertToType(data['contextualDeid'], Object);
            }
            if (data.hasOwnProperty('cryptoHashConfig')) {
                obj['cryptoHashConfig'] = CryptoHashConfig.constructFromObject(data['cryptoHashConfig']);
            }
            if (data.hasOwnProperty('dateShiftConfig')) {
                obj['dateShiftConfig'] = DateShiftConfig.constructFromObject(data['dateShiftConfig']);
            }
            if (data.hasOwnProperty('keepExtensions')) {
                obj['keepExtensions'] = ApiClient.convertToType(data['keepExtensions'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudHealthcareV1beta1DeidentifyOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudHealthcareV1beta1DeidentifyOptions</code>.
     */
    static validateJSON(data) {
        // validate the optional field `characterMaskConfig`
        if (data['characterMaskConfig']) { // data not null
          CharacterMaskConfig.validateJSON(data['characterMaskConfig']);
        }
        // validate the optional field `cryptoHashConfig`
        if (data['cryptoHashConfig']) { // data not null
          CryptoHashConfig.validateJSON(data['cryptoHashConfig']);
        }
        // validate the optional field `dateShiftConfig`
        if (data['dateShiftConfig']) { // data not null
          DateShiftConfig.validateJSON(data['dateShiftConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/CharacterMaskConfig} characterMaskConfig
 */
GoogleCloudHealthcareV1beta1DeidentifyOptions.prototype['characterMaskConfig'] = undefined;

/**
 * Fields that don't match a KeepField or CleanTextField `action` in the BASIC profile are collected into a contextual phrase list. For fields that match a CleanTextField `action` in FieldMetadata or ProfileType, the process attempts to transform phrases matching these contextual entries. These contextual phrases are replaced with the token \"[CTX]\". This feature uses an additional InfoType during inspection.
 * @member {Object} contextualDeid
 */
GoogleCloudHealthcareV1beta1DeidentifyOptions.prototype['contextualDeid'] = undefined;

/**
 * @member {module:model/CryptoHashConfig} cryptoHashConfig
 */
GoogleCloudHealthcareV1beta1DeidentifyOptions.prototype['cryptoHashConfig'] = undefined;

/**
 * @member {module:model/DateShiftConfig} dateShiftConfig
 */
GoogleCloudHealthcareV1beta1DeidentifyOptions.prototype['dateShiftConfig'] = undefined;

/**
 * The behavior for handling FHIR extensions that aren't otherwise specified for de-identification. If provided, all extensions are preserved during de-identification by default. If unspecified, all extensions are removed during de-identification by default.
 * @member {Object} keepExtensions
 */
GoogleCloudHealthcareV1beta1DeidentifyOptions.prototype['keepExtensions'] = undefined;






export default GoogleCloudHealthcareV1beta1DeidentifyOptions;

