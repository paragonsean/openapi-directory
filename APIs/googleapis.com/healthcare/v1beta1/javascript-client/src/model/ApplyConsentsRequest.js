/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PatientScope from './PatientScope';
import TimeRange from './TimeRange';

/**
 * The ApplyConsentsRequest model module.
 * @module model/ApplyConsentsRequest
 * @version v1beta1
 */
class ApplyConsentsRequest {
    /**
     * Constructs a new <code>ApplyConsentsRequest</code>.
     * Request to apply the Consent resources for the specified FHIR store.
     * @alias module:model/ApplyConsentsRequest
     */
    constructor() { 
        
        ApplyConsentsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplyConsentsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplyConsentsRequest} obj Optional instance to populate.
     * @return {module:model/ApplyConsentsRequest} The populated <code>ApplyConsentsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplyConsentsRequest();

            if (data.hasOwnProperty('patientScope')) {
                obj['patientScope'] = PatientScope.constructFromObject(data['patientScope']);
            }
            if (data.hasOwnProperty('timeRange')) {
                obj['timeRange'] = TimeRange.constructFromObject(data['timeRange']);
            }
            if (data.hasOwnProperty('validateOnly')) {
                obj['validateOnly'] = ApiClient.convertToType(data['validateOnly'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplyConsentsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplyConsentsRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `patientScope`
        if (data['patientScope']) { // data not null
          PatientScope.validateJSON(data['patientScope']);
        }
        // validate the optional field `timeRange`
        if (data['timeRange']) { // data not null
          TimeRange.validateJSON(data['timeRange']);
        }

        return true;
    }


}



/**
 * @member {module:model/PatientScope} patientScope
 */
ApplyConsentsRequest.prototype['patientScope'] = undefined;

/**
 * @member {module:model/TimeRange} timeRange
 */
ApplyConsentsRequest.prototype['timeRange'] = undefined;

/**
 * Optional. If true, the method only validates Consent resources to make sure they are supported. When the operation completes, ApplyConsentsResponse is returned where `consent_apply_success` and `consent_apply_failure` indicate supported and unsupported (or invalid) Consent resources, respectively. Otherwise, the method propagates the aggregate consensual information to the patient's resources. Upon success, `affected_resources` in the ApplyConsentsResponse indicates the number of resources that may have consensual access changed.
 * @member {Boolean} validateOnly
 */
ApplyConsentsRequest.prototype['validateOnly'] = undefined;






export default ApplyConsentsRequest;

