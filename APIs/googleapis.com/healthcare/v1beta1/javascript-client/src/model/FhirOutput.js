/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FhirOutput model module.
 * @module model/FhirOutput
 * @version v1beta1
 */
class FhirOutput {
    /**
     * Constructs a new <code>FhirOutput</code>.
     * Details about the FHIR store to write the output to.
     * @alias module:model/FhirOutput
     */
    constructor() { 
        
        FhirOutput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FhirOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FhirOutput} obj Optional instance to populate.
     * @return {module:model/FhirOutput} The populated <code>FhirOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FhirOutput();

            if (data.hasOwnProperty('fhirStore')) {
                obj['fhirStore'] = ApiClient.convertToType(data['fhirStore'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FhirOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FhirOutput</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fhirStore'] && !(typeof data['fhirStore'] === 'string' || data['fhirStore'] instanceof String)) {
            throw new Error("Expected the field `fhirStore` to be a primitive type in the JSON string but got " + data['fhirStore']);
        }

        return true;
    }


}



/**
 * Name of the output FHIR store, which must already exist. You must grant the healthcare.fhirResources.update permission on the destination store to your project's **Cloud Healthcare Service Agent** [service account](https://cloud.google.com/healthcare/docs/how-tos/permissions-healthcare-api-gcp-products#the_cloud_healthcare_service_agent). The destination store must set enableUpdateCreate to true. The destination store must use FHIR version R4. Writing these resources will consume FHIR operations quota from the project containing the source data. De-identify operation metadata is only generated for DICOM de-identification operations.
 * @member {String} fhirStore
 */
FhirOutput.prototype['fhirStore'] = undefined;






export default FhirOutput;

