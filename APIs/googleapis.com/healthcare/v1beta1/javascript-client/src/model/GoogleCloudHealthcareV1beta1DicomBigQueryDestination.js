/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudHealthcareV1beta1DicomBigQueryDestination model module.
 * @module model/GoogleCloudHealthcareV1beta1DicomBigQueryDestination
 * @version v1beta1
 */
class GoogleCloudHealthcareV1beta1DicomBigQueryDestination {
    /**
     * Constructs a new <code>GoogleCloudHealthcareV1beta1DicomBigQueryDestination</code>.
     * The BigQuery table where the server writes output.
     * @alias module:model/GoogleCloudHealthcareV1beta1DicomBigQueryDestination
     */
    constructor() { 
        
        GoogleCloudHealthcareV1beta1DicomBigQueryDestination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudHealthcareV1beta1DicomBigQueryDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudHealthcareV1beta1DicomBigQueryDestination} obj Optional instance to populate.
     * @return {module:model/GoogleCloudHealthcareV1beta1DicomBigQueryDestination} The populated <code>GoogleCloudHealthcareV1beta1DicomBigQueryDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudHealthcareV1beta1DicomBigQueryDestination();

            if (data.hasOwnProperty('force')) {
                obj['force'] = ApiClient.convertToType(data['force'], 'Boolean');
            }
            if (data.hasOwnProperty('tableUri')) {
                obj['tableUri'] = ApiClient.convertToType(data['tableUri'], 'String');
            }
            if (data.hasOwnProperty('writeDisposition')) {
                obj['writeDisposition'] = ApiClient.convertToType(data['writeDisposition'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudHealthcareV1beta1DicomBigQueryDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudHealthcareV1beta1DicomBigQueryDestination</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tableUri'] && !(typeof data['tableUri'] === 'string' || data['tableUri'] instanceof String)) {
            throw new Error("Expected the field `tableUri` to be a primitive type in the JSON string but got " + data['tableUri']);
        }
        // ensure the json data is a string
        if (data['writeDisposition'] && !(typeof data['writeDisposition'] === 'string' || data['writeDisposition'] instanceof String)) {
            throw new Error("Expected the field `writeDisposition` to be a primitive type in the JSON string but got " + data['writeDisposition']);
        }

        return true;
    }


}



/**
 * Use `write_disposition` instead. If `write_disposition` is specified, this parameter is ignored. force=false is equivalent to write_disposition=WRITE_EMPTY and force=true is equivalent to write_disposition=WRITE_TRUNCATE.
 * @member {Boolean} force
 */
GoogleCloudHealthcareV1beta1DicomBigQueryDestination.prototype['force'] = undefined;

/**
 * BigQuery URI to a table, up to 2000 characters long, in the format `bq://projectId.bqDatasetId.tableId`
 * @member {String} tableUri
 */
GoogleCloudHealthcareV1beta1DicomBigQueryDestination.prototype['tableUri'] = undefined;

/**
 * Determines whether the existing table in the destination is to be overwritten or appended to. If a write_disposition is specified, the `force` parameter is ignored.
 * @member {module:model/GoogleCloudHealthcareV1beta1DicomBigQueryDestination.WriteDispositionEnum} writeDisposition
 */
GoogleCloudHealthcareV1beta1DicomBigQueryDestination.prototype['writeDisposition'] = undefined;





/**
 * Allowed values for the <code>writeDisposition</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudHealthcareV1beta1DicomBigQueryDestination['WriteDispositionEnum'] = {

    /**
     * value: "WRITE_DISPOSITION_UNSPECIFIED"
     * @const
     */
    "DISPOSITION_UNSPECIFIED": "WRITE_DISPOSITION_UNSPECIFIED",

    /**
     * value: "WRITE_EMPTY"
     * @const
     */
    "EMPTY": "WRITE_EMPTY",

    /**
     * value: "WRITE_TRUNCATE"
     * @const
     */
    "TRUNCATE": "WRITE_TRUNCATE",

    /**
     * value: "WRITE_APPEND"
     * @const
     */
    "APPEND": "WRITE_APPEND"
};



export default GoogleCloudHealthcareV1beta1DicomBigQueryDestination;

