/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PatientScope model module.
 * @module model/PatientScope
 * @version v1beta1
 */
class PatientScope {
    /**
     * Constructs a new <code>PatientScope</code>.
     * Apply consents given by a list of patients.
     * @alias module:model/PatientScope
     */
    constructor() { 
        
        PatientScope.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatientScope</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatientScope} obj Optional instance to populate.
     * @return {module:model/PatientScope} The populated <code>PatientScope</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatientScope();

            if (data.hasOwnProperty('patientIds')) {
                obj['patientIds'] = ApiClient.convertToType(data['patientIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatientScope</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatientScope</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['patientIds'])) {
            throw new Error("Expected the field `patientIds` to be an array in the JSON data but got " + data['patientIds']);
        }

        return true;
    }


}



/**
 * Optional. The list of patient IDs whose Consent resources will be enforced. At most 10,000 patients can be specified. An empty list is equivalent to all patients (meaning the entire FHIR store).
 * @member {Array.<String>} patientIds
 */
PatientScope.prototype['patientIds'] = undefined;






export default PatientScope;

