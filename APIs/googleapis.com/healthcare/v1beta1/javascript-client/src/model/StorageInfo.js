/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BlobStorageInfo from './BlobStorageInfo';
import StructuredStorageInfo from './StructuredStorageInfo';

/**
 * The StorageInfo model module.
 * @module model/StorageInfo
 * @version v1beta1
 */
class StorageInfo {
    /**
     * Constructs a new <code>StorageInfo</code>.
     * StorageInfo encapsulates all the storage info of a resource.
     * @alias module:model/StorageInfo
     */
    constructor() { 
        
        StorageInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageInfo} obj Optional instance to populate.
     * @return {module:model/StorageInfo} The populated <code>StorageInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageInfo();

            if (data.hasOwnProperty('blobStorageInfo')) {
                obj['blobStorageInfo'] = BlobStorageInfo.constructFromObject(data['blobStorageInfo']);
            }
            if (data.hasOwnProperty('referencedResource')) {
                obj['referencedResource'] = ApiClient.convertToType(data['referencedResource'], 'String');
            }
            if (data.hasOwnProperty('structuredStorageInfo')) {
                obj['structuredStorageInfo'] = StructuredStorageInfo.constructFromObject(data['structuredStorageInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `blobStorageInfo`
        if (data['blobStorageInfo']) { // data not null
          BlobStorageInfo.validateJSON(data['blobStorageInfo']);
        }
        // ensure the json data is a string
        if (data['referencedResource'] && !(typeof data['referencedResource'] === 'string' || data['referencedResource'] instanceof String)) {
            throw new Error("Expected the field `referencedResource` to be a primitive type in the JSON string but got " + data['referencedResource']);
        }
        // validate the optional field `structuredStorageInfo`
        if (data['structuredStorageInfo']) { // data not null
          StructuredStorageInfo.validateJSON(data['structuredStorageInfo']);
        }

        return true;
    }


}



/**
 * @member {module:model/BlobStorageInfo} blobStorageInfo
 */
StorageInfo.prototype['blobStorageInfo'] = undefined;

/**
 * The resource whose storage info is returned. For example, to specify the resource path of a DICOM Instance: `projects/{projectid}/datasets/{datasetid}/dicomStores/{dicom_store_id}/dicomWeb/studi/{study_uid}/series/{series_uid}/instances/{instance_uid}`
 * @member {String} referencedResource
 */
StorageInfo.prototype['referencedResource'] = undefined;

/**
 * @member {module:model/StructuredStorageInfo} structuredStorageInfo
 */
StorageInfo.prototype['structuredStorageInfo'] = undefined;






export default StorageInfo;

