/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Hl7V2NotificationConfig from './Hl7V2NotificationConfig';
import NotificationConfig from './NotificationConfig';
import ParserConfig from './ParserConfig';

/**
 * The Hl7V2Store model module.
 * @module model/Hl7V2Store
 * @version v1beta1
 */
class Hl7V2Store {
    /**
     * Constructs a new <code>Hl7V2Store</code>.
     * Represents an HL7v2 store.
     * @alias module:model/Hl7V2Store
     */
    constructor() { 
        
        Hl7V2Store.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Hl7V2Store</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Hl7V2Store} obj Optional instance to populate.
     * @return {module:model/Hl7V2Store} The populated <code>Hl7V2Store</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Hl7V2Store();

            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notificationConfig')) {
                obj['notificationConfig'] = NotificationConfig.constructFromObject(data['notificationConfig']);
            }
            if (data.hasOwnProperty('notificationConfigs')) {
                obj['notificationConfigs'] = ApiClient.convertToType(data['notificationConfigs'], [Hl7V2NotificationConfig]);
            }
            if (data.hasOwnProperty('parserConfig')) {
                obj['parserConfig'] = ParserConfig.constructFromObject(data['parserConfig']);
            }
            if (data.hasOwnProperty('rejectDuplicateMessage')) {
                obj['rejectDuplicateMessage'] = ApiClient.convertToType(data['rejectDuplicateMessage'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Hl7V2Store</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Hl7V2Store</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `notificationConfig`
        if (data['notificationConfig']) { // data not null
          NotificationConfig.validateJSON(data['notificationConfig']);
        }
        if (data['notificationConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['notificationConfigs'])) {
                throw new Error("Expected the field `notificationConfigs` to be an array in the JSON data but got " + data['notificationConfigs']);
            }
            // validate the optional field `notificationConfigs` (array)
            for (const item of data['notificationConfigs']) {
                Hl7V2NotificationConfig.validateJSON(item);
            };
        }
        // validate the optional field `parserConfig`
        if (data['parserConfig']) { // data not null
          ParserConfig.validateJSON(data['parserConfig']);
        }

        return true;
    }


}



/**
 * User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
 * @member {Object.<String, String>} labels
 */
Hl7V2Store.prototype['labels'] = undefined;

/**
 * Identifier. Resource name of the HL7v2 store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
 * @member {String} name
 */
Hl7V2Store.prototype['name'] = undefined;

/**
 * @member {module:model/NotificationConfig} notificationConfig
 */
Hl7V2Store.prototype['notificationConfig'] = undefined;

/**
 * A list of notification configs. Each configuration uses a filter to determine whether to publish a message (both Ingest & Create) on the corresponding notification destination. Only the message name is sent as part of the notification. Supplied by the client.
 * @member {Array.<module:model/Hl7V2NotificationConfig>} notificationConfigs
 */
Hl7V2Store.prototype['notificationConfigs'] = undefined;

/**
 * @member {module:model/ParserConfig} parserConfig
 */
Hl7V2Store.prototype['parserConfig'] = undefined;

/**
 * Determines whether to reject duplicate messages. A duplicate message is a message with the same raw bytes as a message that has already been ingested/created in this HL7v2 store. The default value is false, meaning that the store accepts the duplicate messages and it also returns the same ACK message in the IngestMessageResponse as has been returned previously. Note that only one resource is created in the store. When this field is set to true, CreateMessage/IngestMessage requests with a duplicate message will be rejected by the store, and IngestMessageErrorDetail returns a NACK message upon rejection.
 * @member {Boolean} rejectDuplicateMessage
 */
Hl7V2Store.prototype['rejectDuplicateMessage'] = undefined;






export default Hl7V2Store;

