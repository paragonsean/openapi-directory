/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BoundingPoly from './BoundingPoly';

/**
 * The ImageAnnotation model module.
 * @module model/ImageAnnotation
 * @version v1beta1
 */
class ImageAnnotation {
    /**
     * Constructs a new <code>ImageAnnotation</code>.
     * Image annotation.
     * @alias module:model/ImageAnnotation
     */
    constructor() { 
        
        ImageAnnotation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageAnnotation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageAnnotation} obj Optional instance to populate.
     * @return {module:model/ImageAnnotation} The populated <code>ImageAnnotation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageAnnotation();

            if (data.hasOwnProperty('boundingPolys')) {
                obj['boundingPolys'] = ApiClient.convertToType(data['boundingPolys'], [BoundingPoly]);
            }
            if (data.hasOwnProperty('frameIndex')) {
                obj['frameIndex'] = ApiClient.convertToType(data['frameIndex'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageAnnotation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageAnnotation</code>.
     */
    static validateJSON(data) {
        if (data['boundingPolys']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['boundingPolys'])) {
                throw new Error("Expected the field `boundingPolys` to be an array in the JSON data but got " + data['boundingPolys']);
            }
            // validate the optional field `boundingPolys` (array)
            for (const item of data['boundingPolys']) {
                BoundingPoly.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The list of polygons outlining the sensitive regions in the image.
 * @member {Array.<module:model/BoundingPoly>} boundingPolys
 */
ImageAnnotation.prototype['boundingPolys'] = undefined;

/**
 * 0-based index of the image frame. For example, an image frame in a DICOM instance.
 * @member {Number} frameIndex
 */
ImageAnnotation.prototype['frameIndex'] = undefined;






export default ImageAnnotation;

