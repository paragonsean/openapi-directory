/*
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies the FHIR paths to match and how to handle the de-identification of matching fields.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:11.528078-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata {
  public static final String SERIALIZED_NAME_CHARACTER_MASK_FIELD = "characterMaskField";
  @SerializedName(SERIALIZED_NAME_CHARACTER_MASK_FIELD)
  private Object characterMaskField;

  public static final String SERIALIZED_NAME_CLEAN_TEXT_FIELD = "cleanTextField";
  @SerializedName(SERIALIZED_NAME_CLEAN_TEXT_FIELD)
  private Object cleanTextField;

  public static final String SERIALIZED_NAME_CRYPTO_HASH_FIELD = "cryptoHashField";
  @SerializedName(SERIALIZED_NAME_CRYPTO_HASH_FIELD)
  private Object cryptoHashField;

  public static final String SERIALIZED_NAME_DATE_SHIFT_FIELD = "dateShiftField";
  @SerializedName(SERIALIZED_NAME_DATE_SHIFT_FIELD)
  private Object dateShiftField;

  public static final String SERIALIZED_NAME_KEEP_FIELD = "keepField";
  @SerializedName(SERIALIZED_NAME_KEEP_FIELD)
  private Object keepField;

  public static final String SERIALIZED_NAME_PATHS = "paths";
  @SerializedName(SERIALIZED_NAME_PATHS)
  private List<String> paths = new ArrayList<>();

  public static final String SERIALIZED_NAME_REMOVE_FIELD = "removeField";
  @SerializedName(SERIALIZED_NAME_REMOVE_FIELD)
  private Object removeField;

  public GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata() {
  }

  public GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata characterMaskField(Object characterMaskField) {
    this.characterMaskField = characterMaskField;
    return this;
  }

  /**
   * Replace field value with masking character. Supported [types](https://www.hl7.org/fhir/datatypes.html): Code, Decimal, HumanName, Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml.
   * @return characterMaskField
   */
  @javax.annotation.Nullable
  public Object getCharacterMaskField() {
    return characterMaskField;
  }

  public void setCharacterMaskField(Object characterMaskField) {
    this.characterMaskField = characterMaskField;
  }


  public GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata cleanTextField(Object cleanTextField) {
    this.cleanTextField = cleanTextField;
    return this;
  }

  /**
   * Inspect text and transform sensitive text. Configure using TextConfig. Supported [types](https://www.hl7.org/fhir/datatypes.html): Code, Date, DateTime, Decimal, HumanName, Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml.
   * @return cleanTextField
   */
  @javax.annotation.Nullable
  public Object getCleanTextField() {
    return cleanTextField;
  }

  public void setCleanTextField(Object cleanTextField) {
    this.cleanTextField = cleanTextField;
  }


  public GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata cryptoHashField(Object cryptoHashField) {
    this.cryptoHashField = cryptoHashField;
    return this;
  }

  /**
   * Replace field value with a hash of that value. Supported [types](https://www.hl7.org/fhir/datatypes.html): Code, Decimal, HumanName, Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml.
   * @return cryptoHashField
   */
  @javax.annotation.Nullable
  public Object getCryptoHashField() {
    return cryptoHashField;
  }

  public void setCryptoHashField(Object cryptoHashField) {
    this.cryptoHashField = cryptoHashField;
  }


  public GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata dateShiftField(Object dateShiftField) {
    this.dateShiftField = dateShiftField;
    return this;
  }

  /**
   * Shift the date by a randomized number of days. See [date shifting](https://cloud.google.com/dlp/docs/concepts-date-shifting) for more information. Supported [types](https://www.hl7.org/fhir/datatypes.html): Date, DateTime.
   * @return dateShiftField
   */
  @javax.annotation.Nullable
  public Object getDateShiftField() {
    return dateShiftField;
  }

  public void setDateShiftField(Object dateShiftField) {
    this.dateShiftField = dateShiftField;
  }


  public GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata keepField(Object keepField) {
    this.keepField = keepField;
    return this;
  }

  /**
   * Keep field unchanged.
   * @return keepField
   */
  @javax.annotation.Nullable
  public Object getKeepField() {
    return keepField;
  }

  public void setKeepField(Object keepField) {
    this.keepField = keepField;
  }


  public GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata paths(List<String> paths) {
    this.paths = paths;
    return this;
  }

  public GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata addPathsItem(String pathsItem) {
    if (this.paths == null) {
      this.paths = new ArrayList<>();
    }
    this.paths.add(pathsItem);
    return this;
  }

  /**
   * List of paths to FHIR fields to redact. Each path is a period-separated list where each component is either a field name or FHIR [type](https://www.hl7.org/fhir/datatypes.html) name. All types begin with an upper case letter. For example, the resource field &#x60;Patient.Address.city&#x60;, which uses a [string](https://www.hl7.org/fhir/datatypes-definitions.html#Address.city) type, can be matched by &#x60;Patient.Address.String&#x60;. Partial matching is supported. For example, &#x60;Patient.Address.city&#x60; can be matched by &#x60;Address.city&#x60; (with &#x60;Patient&#x60; omitted). Partial matching and type matching can be combined, for example &#x60;Patient.Address.city&#x60; can be matched by &#x60;Address.String&#x60;. For \&quot;choice\&quot; types (those defined in the FHIR spec with the format &#x60;field[x]&#x60;), use two separate components. For example, &#x60;deceasedAge.unit&#x60; is matched by &#x60;Deceased.Age.unit&#x60;. The following types are supported: AdministrativeGenderCode, Base64Binary, Boolean, Code, Date, DateTime, Decimal, HumanName, Id, Instant, Integer, LanguageCode, Markdown, Oid, PositiveInt, String, UnsignedInt, Uri, Uuid, Xhtml. The sub-type for HumanName (for example &#x60;HumanName.given&#x60;, &#x60;HumanName.family&#x60;) can be omitted.
   * @return paths
   */
  @javax.annotation.Nullable
  public List<String> getPaths() {
    return paths;
  }

  public void setPaths(List<String> paths) {
    this.paths = paths;
  }


  public GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata removeField(Object removeField) {
    this.removeField = removeField;
    return this;
  }

  /**
   * Remove field.
   * @return removeField
   */
  @javax.annotation.Nullable
  public Object getRemoveField() {
    return removeField;
  }

  public void setRemoveField(Object removeField) {
    this.removeField = removeField;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata googleCloudHealthcareV1beta1DeidentifyFieldMetadata = (GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata) o;
    return Objects.equals(this.characterMaskField, googleCloudHealthcareV1beta1DeidentifyFieldMetadata.characterMaskField) &&
        Objects.equals(this.cleanTextField, googleCloudHealthcareV1beta1DeidentifyFieldMetadata.cleanTextField) &&
        Objects.equals(this.cryptoHashField, googleCloudHealthcareV1beta1DeidentifyFieldMetadata.cryptoHashField) &&
        Objects.equals(this.dateShiftField, googleCloudHealthcareV1beta1DeidentifyFieldMetadata.dateShiftField) &&
        Objects.equals(this.keepField, googleCloudHealthcareV1beta1DeidentifyFieldMetadata.keepField) &&
        Objects.equals(this.paths, googleCloudHealthcareV1beta1DeidentifyFieldMetadata.paths) &&
        Objects.equals(this.removeField, googleCloudHealthcareV1beta1DeidentifyFieldMetadata.removeField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(characterMaskField, cleanTextField, cryptoHashField, dateShiftField, keepField, paths, removeField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata {\n");
    sb.append("    characterMaskField: ").append(toIndentedString(characterMaskField)).append("\n");
    sb.append("    cleanTextField: ").append(toIndentedString(cleanTextField)).append("\n");
    sb.append("    cryptoHashField: ").append(toIndentedString(cryptoHashField)).append("\n");
    sb.append("    dateShiftField: ").append(toIndentedString(dateShiftField)).append("\n");
    sb.append("    keepField: ").append(toIndentedString(keepField)).append("\n");
    sb.append("    paths: ").append(toIndentedString(paths)).append("\n");
    sb.append("    removeField: ").append(toIndentedString(removeField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("characterMaskField");
    openapiFields.add("cleanTextField");
    openapiFields.add("cryptoHashField");
    openapiFields.add("dateShiftField");
    openapiFields.add("keepField");
    openapiFields.add("paths");
    openapiFields.add("removeField");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata is not found in the empty JSON string", GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("paths") != null && !jsonObj.get("paths").isJsonNull() && !jsonObj.get("paths").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `paths` to be an array in the JSON string but got `%s`", jsonObj.get("paths").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata
   */
  public static GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

