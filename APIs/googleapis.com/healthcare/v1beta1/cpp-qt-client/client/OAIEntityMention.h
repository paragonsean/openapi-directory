/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntityMention.h
 *
 * An entity mention in the document.
 */

#ifndef OAIEntityMention_H
#define OAIEntityMention_H

#include <QJsonObject>

#include "OAIFeature.h"
#include "OAILinkedEntity.h"
#include "OAITextSpan.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFeature;
class OAILinkedEntity;
class OAITextSpan;

class OAIEntityMention : public OAIObject {
public:
    OAIEntityMention();
    OAIEntityMention(QString json);
    ~OAIEntityMention() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIFeature> getAdditionalInfo() const;
    void setAdditionalInfo(const QList<OAIFeature> &additional_info);
    bool is_additional_info_Set() const;
    bool is_additional_info_Valid() const;

    OAIFeature getCertaintyAssessment() const;
    void setCertaintyAssessment(const OAIFeature &certainty_assessment);
    bool is_certainty_assessment_Set() const;
    bool is_certainty_assessment_Valid() const;

    double getConfidence() const;
    void setConfidence(const double &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    QList<OAILinkedEntity> getLinkedEntities() const;
    void setLinkedEntities(const QList<OAILinkedEntity> &linked_entities);
    bool is_linked_entities_Set() const;
    bool is_linked_entities_Valid() const;

    QString getMentionId() const;
    void setMentionId(const QString &mention_id);
    bool is_mention_id_Set() const;
    bool is_mention_id_Valid() const;

    OAIFeature getSubject() const;
    void setSubject(const OAIFeature &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    OAIFeature getTemporalAssessment() const;
    void setTemporalAssessment(const OAIFeature &temporal_assessment);
    bool is_temporal_assessment_Set() const;
    bool is_temporal_assessment_Valid() const;

    OAITextSpan getText() const;
    void setText(const OAITextSpan &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIFeature> m_additional_info;
    bool m_additional_info_isSet;
    bool m_additional_info_isValid;

    OAIFeature m_certainty_assessment;
    bool m_certainty_assessment_isSet;
    bool m_certainty_assessment_isValid;

    double m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    QList<OAILinkedEntity> m_linked_entities;
    bool m_linked_entities_isSet;
    bool m_linked_entities_isValid;

    QString m_mention_id;
    bool m_mention_id_isSet;
    bool m_mention_id_isValid;

    OAIFeature m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    OAIFeature m_temporal_assessment;
    bool m_temporal_assessment_isSet;
    bool m_temporal_assessment_isValid;

    OAITextSpan m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntityMention)

#endif // OAIEntityMention_H
