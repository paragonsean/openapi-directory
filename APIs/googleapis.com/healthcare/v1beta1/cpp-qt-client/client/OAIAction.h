/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAction.h
 *
 * Specifies a selection of tags and an &#x60;Action&#x60; to apply to each one.
 */

#ifndef OAIAction_H
#define OAIAction_H

#include <QJsonObject>

#include "OAIImageConfig.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageConfig;

class OAIAction : public OAIObject {
public:
    OAIAction();
    OAIAction(QString json);
    ~OAIAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIImageConfig getCleanImageTag() const;
    void setCleanImageTag(const OAIImageConfig &clean_image_tag);
    bool is_clean_image_tag_Set() const;
    bool is_clean_image_tag_Valid() const;

    OAIObject getCleanTextTag() const;
    void setCleanTextTag(const OAIObject &clean_text_tag);
    bool is_clean_text_tag_Set() const;
    bool is_clean_text_tag_Valid() const;

    OAIObject getDeleteTag() const;
    void setDeleteTag(const OAIObject &delete_tag);
    bool is_delete_tag_Set() const;
    bool is_delete_tag_Valid() const;

    OAIObject getKeepTag() const;
    void setKeepTag(const OAIObject &keep_tag);
    bool is_keep_tag_Set() const;
    bool is_keep_tag_Valid() const;

    QList<QString> getQueries() const;
    void setQueries(const QList<QString> &queries);
    bool is_queries_Set() const;
    bool is_queries_Valid() const;

    OAIObject getRecurseTag() const;
    void setRecurseTag(const OAIObject &recurse_tag);
    bool is_recurse_tag_Set() const;
    bool is_recurse_tag_Valid() const;

    OAIObject getRegenUidTag() const;
    void setRegenUidTag(const OAIObject &regen_uid_tag);
    bool is_regen_uid_tag_Set() const;
    bool is_regen_uid_tag_Valid() const;

    OAIObject getRemoveTag() const;
    void setRemoveTag(const OAIObject &remove_tag);
    bool is_remove_tag_Set() const;
    bool is_remove_tag_Valid() const;

    OAIObject getResetTag() const;
    void setResetTag(const OAIObject &reset_tag);
    bool is_reset_tag_Set() const;
    bool is_reset_tag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIImageConfig m_clean_image_tag;
    bool m_clean_image_tag_isSet;
    bool m_clean_image_tag_isValid;

    OAIObject m_clean_text_tag;
    bool m_clean_text_tag_isSet;
    bool m_clean_text_tag_isValid;

    OAIObject m_delete_tag;
    bool m_delete_tag_isSet;
    bool m_delete_tag_isValid;

    OAIObject m_keep_tag;
    bool m_keep_tag_isSet;
    bool m_keep_tag_isValid;

    QList<QString> m_queries;
    bool m_queries_isSet;
    bool m_queries_isValid;

    OAIObject m_recurse_tag;
    bool m_recurse_tag_isSet;
    bool m_recurse_tag_isValid;

    OAIObject m_regen_uid_tag;
    bool m_regen_uid_tag_isSet;
    bool m_regen_uid_tag_isValid;

    OAIObject m_remove_tag;
    bool m_remove_tag_isSet;
    bool m_remove_tag_isValid;

    OAIObject m_reset_tag;
    bool m_reset_tag_isSet;
    bool m_reset_tag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAction)

#endif // OAIAction_H
