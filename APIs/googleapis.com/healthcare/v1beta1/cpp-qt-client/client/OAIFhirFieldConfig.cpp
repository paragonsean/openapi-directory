/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFhirFieldConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFhirFieldConfig::OAIFhirFieldConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFhirFieldConfig::OAIFhirFieldConfig() {
    this->initializeModel();
}

OAIFhirFieldConfig::~OAIFhirFieldConfig() {}

void OAIFhirFieldConfig::initializeModel() {

    m_field_metadata_list_isSet = false;
    m_field_metadata_list_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;

    m_profile_type_isSet = false;
    m_profile_type_isValid = false;
}

void OAIFhirFieldConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFhirFieldConfig::fromJsonObject(QJsonObject json) {

    m_field_metadata_list_isValid = ::OpenAPI::fromJsonValue(m_field_metadata_list, json[QString("fieldMetadataList")]);
    m_field_metadata_list_isSet = !json[QString("fieldMetadataList")].isNull() && m_field_metadata_list_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("options")]);
    m_options_isSet = !json[QString("options")].isNull() && m_options_isValid;

    m_profile_type_isValid = ::OpenAPI::fromJsonValue(m_profile_type, json[QString("profileType")]);
    m_profile_type_isSet = !json[QString("profileType")].isNull() && m_profile_type_isValid;
}

QString OAIFhirFieldConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFhirFieldConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_field_metadata_list.size() > 0) {
        obj.insert(QString("fieldMetadataList"), ::OpenAPI::toJsonValue(m_field_metadata_list));
    }
    if (m_options.isSet()) {
        obj.insert(QString("options"), ::OpenAPI::toJsonValue(m_options));
    }
    if (m_profile_type_isSet) {
        obj.insert(QString("profileType"), ::OpenAPI::toJsonValue(m_profile_type));
    }
    return obj;
}

QList<OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata> OAIFhirFieldConfig::getFieldMetadataList() const {
    return m_field_metadata_list;
}
void OAIFhirFieldConfig::setFieldMetadataList(const QList<OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata> &field_metadata_list) {
    m_field_metadata_list = field_metadata_list;
    m_field_metadata_list_isSet = true;
}

bool OAIFhirFieldConfig::is_field_metadata_list_Set() const{
    return m_field_metadata_list_isSet;
}

bool OAIFhirFieldConfig::is_field_metadata_list_Valid() const{
    return m_field_metadata_list_isValid;
}

OAIGoogleCloudHealthcareV1beta1DeidentifyOptions OAIFhirFieldConfig::getOptions() const {
    return m_options;
}
void OAIFhirFieldConfig::setOptions(const OAIGoogleCloudHealthcareV1beta1DeidentifyOptions &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAIFhirFieldConfig::is_options_Set() const{
    return m_options_isSet;
}

bool OAIFhirFieldConfig::is_options_Valid() const{
    return m_options_isValid;
}

QString OAIFhirFieldConfig::getProfileType() const {
    return m_profile_type;
}
void OAIFhirFieldConfig::setProfileType(const QString &profile_type) {
    m_profile_type = profile_type;
    m_profile_type_isSet = true;
}

bool OAIFhirFieldConfig::is_profile_type_Set() const{
    return m_profile_type_isSet;
}

bool OAIFhirFieldConfig::is_profile_type_Valid() const{
    return m_profile_type_isValid;
}

bool OAIFhirFieldConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_metadata_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFhirFieldConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
