/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvaluateUserConsentsRequest.h
 *
 * Evaluate a user&#39;s Consents for all matching User data mappings. Note: User data mappings are indexed asynchronously, causing slight delays between the time mappings are created or updated and when they are included in EvaluateUserConsents results.
 */

#ifndef OAIEvaluateUserConsentsRequest_H
#define OAIEvaluateUserConsentsRequest_H

#include <QJsonObject>

#include "OAIConsentList.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConsentList;

class OAIEvaluateUserConsentsRequest : public OAIObject {
public:
    OAIEvaluateUserConsentsRequest();
    OAIEvaluateUserConsentsRequest(QString json);
    ~OAIEvaluateUserConsentsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConsentList getConsentList() const;
    void setConsentList(const OAIConsentList &consent_list);
    bool is_consent_list_Set() const;
    bool is_consent_list_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getPageToken() const;
    void setPageToken(const QString &page_token);
    bool is_page_token_Set() const;
    bool is_page_token_Valid() const;

    QMap<QString, QString> getRequestAttributes() const;
    void setRequestAttributes(const QMap<QString, QString> &request_attributes);
    bool is_request_attributes_Set() const;
    bool is_request_attributes_Valid() const;

    QMap<QString, QString> getResourceAttributes() const;
    void setResourceAttributes(const QMap<QString, QString> &resource_attributes);
    bool is_resource_attributes_Set() const;
    bool is_resource_attributes_Valid() const;

    QString getResponseView() const;
    void setResponseView(const QString &response_view);
    bool is_response_view_Set() const;
    bool is_response_view_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConsentList m_consent_list;
    bool m_consent_list_isSet;
    bool m_consent_list_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_page_token;
    bool m_page_token_isSet;
    bool m_page_token_isValid;

    QMap<QString, QString> m_request_attributes;
    bool m_request_attributes_isSet;
    bool m_request_attributes_isValid;

    QMap<QString, QString> m_resource_attributes;
    bool m_resource_attributes_isSet;
    bool m_resource_attributes_isValid;

    QString m_response_view;
    bool m_response_view_isSet;
    bool m_response_view_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvaluateUserConsentsRequest)

#endif // OAIEvaluateUserConsentsRequest_H
