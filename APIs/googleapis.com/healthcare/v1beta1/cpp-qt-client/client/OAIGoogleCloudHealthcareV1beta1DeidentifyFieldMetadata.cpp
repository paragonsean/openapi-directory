/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata() {
    this->initializeModel();
}

OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::~OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata() {}

void OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::initializeModel() {

    m_character_mask_field_isSet = false;
    m_character_mask_field_isValid = false;

    m_clean_text_field_isSet = false;
    m_clean_text_field_isValid = false;

    m_crypto_hash_field_isSet = false;
    m_crypto_hash_field_isValid = false;

    m_date_shift_field_isSet = false;
    m_date_shift_field_isValid = false;

    m_keep_field_isSet = false;
    m_keep_field_isValid = false;

    m_paths_isSet = false;
    m_paths_isValid = false;

    m_remove_field_isSet = false;
    m_remove_field_isValid = false;
}

void OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::fromJsonObject(QJsonObject json) {

    m_character_mask_field_isValid = ::OpenAPI::fromJsonValue(m_character_mask_field, json[QString("characterMaskField")]);
    m_character_mask_field_isSet = !json[QString("characterMaskField")].isNull() && m_character_mask_field_isValid;

    m_clean_text_field_isValid = ::OpenAPI::fromJsonValue(m_clean_text_field, json[QString("cleanTextField")]);
    m_clean_text_field_isSet = !json[QString("cleanTextField")].isNull() && m_clean_text_field_isValid;

    m_crypto_hash_field_isValid = ::OpenAPI::fromJsonValue(m_crypto_hash_field, json[QString("cryptoHashField")]);
    m_crypto_hash_field_isSet = !json[QString("cryptoHashField")].isNull() && m_crypto_hash_field_isValid;

    m_date_shift_field_isValid = ::OpenAPI::fromJsonValue(m_date_shift_field, json[QString("dateShiftField")]);
    m_date_shift_field_isSet = !json[QString("dateShiftField")].isNull() && m_date_shift_field_isValid;

    m_keep_field_isValid = ::OpenAPI::fromJsonValue(m_keep_field, json[QString("keepField")]);
    m_keep_field_isSet = !json[QString("keepField")].isNull() && m_keep_field_isValid;

    m_paths_isValid = ::OpenAPI::fromJsonValue(m_paths, json[QString("paths")]);
    m_paths_isSet = !json[QString("paths")].isNull() && m_paths_isValid;

    m_remove_field_isValid = ::OpenAPI::fromJsonValue(m_remove_field, json[QString("removeField")]);
    m_remove_field_isSet = !json[QString("removeField")].isNull() && m_remove_field_isValid;
}

QString OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_character_mask_field_isSet) {
        obj.insert(QString("characterMaskField"), ::OpenAPI::toJsonValue(m_character_mask_field));
    }
    if (m_clean_text_field_isSet) {
        obj.insert(QString("cleanTextField"), ::OpenAPI::toJsonValue(m_clean_text_field));
    }
    if (m_crypto_hash_field_isSet) {
        obj.insert(QString("cryptoHashField"), ::OpenAPI::toJsonValue(m_crypto_hash_field));
    }
    if (m_date_shift_field_isSet) {
        obj.insert(QString("dateShiftField"), ::OpenAPI::toJsonValue(m_date_shift_field));
    }
    if (m_keep_field_isSet) {
        obj.insert(QString("keepField"), ::OpenAPI::toJsonValue(m_keep_field));
    }
    if (m_paths.size() > 0) {
        obj.insert(QString("paths"), ::OpenAPI::toJsonValue(m_paths));
    }
    if (m_remove_field_isSet) {
        obj.insert(QString("removeField"), ::OpenAPI::toJsonValue(m_remove_field));
    }
    return obj;
}

OAIObject OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::getCharacterMaskField() const {
    return m_character_mask_field;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::setCharacterMaskField(const OAIObject &character_mask_field) {
    m_character_mask_field = character_mask_field;
    m_character_mask_field_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_character_mask_field_Set() const{
    return m_character_mask_field_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_character_mask_field_Valid() const{
    return m_character_mask_field_isValid;
}

OAIObject OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::getCleanTextField() const {
    return m_clean_text_field;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::setCleanTextField(const OAIObject &clean_text_field) {
    m_clean_text_field = clean_text_field;
    m_clean_text_field_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_clean_text_field_Set() const{
    return m_clean_text_field_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_clean_text_field_Valid() const{
    return m_clean_text_field_isValid;
}

OAIObject OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::getCryptoHashField() const {
    return m_crypto_hash_field;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::setCryptoHashField(const OAIObject &crypto_hash_field) {
    m_crypto_hash_field = crypto_hash_field;
    m_crypto_hash_field_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_crypto_hash_field_Set() const{
    return m_crypto_hash_field_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_crypto_hash_field_Valid() const{
    return m_crypto_hash_field_isValid;
}

OAIObject OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::getDateShiftField() const {
    return m_date_shift_field;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::setDateShiftField(const OAIObject &date_shift_field) {
    m_date_shift_field = date_shift_field;
    m_date_shift_field_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_date_shift_field_Set() const{
    return m_date_shift_field_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_date_shift_field_Valid() const{
    return m_date_shift_field_isValid;
}

OAIObject OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::getKeepField() const {
    return m_keep_field;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::setKeepField(const OAIObject &keep_field) {
    m_keep_field = keep_field;
    m_keep_field_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_keep_field_Set() const{
    return m_keep_field_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_keep_field_Valid() const{
    return m_keep_field_isValid;
}

QList<QString> OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::getPaths() const {
    return m_paths;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::setPaths(const QList<QString> &paths) {
    m_paths = paths;
    m_paths_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_paths_Set() const{
    return m_paths_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_paths_Valid() const{
    return m_paths_isValid;
}

OAIObject OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::getRemoveField() const {
    return m_remove_field;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::setRemoveField(const OAIObject &remove_field) {
    m_remove_field = remove_field;
    m_remove_field_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_remove_field_Set() const{
    return m_remove_field_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::is_remove_field_Valid() const{
    return m_remove_field_isValid;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_character_mask_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_clean_text_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crypto_hash_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_shift_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_keep_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_remove_field_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyFieldMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
