/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDicomStore.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDicomStore::OAIDicomStore(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDicomStore::OAIDicomStore() {
    this->initializeModel();
}

OAIDicomStore::~OAIDicomStore() {}

void OAIDicomStore::initializeModel() {

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_notification_config_isSet = false;
    m_notification_config_isValid = false;

    m_stream_configs_isSet = false;
    m_stream_configs_isValid = false;
}

void OAIDicomStore::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDicomStore::fromJsonObject(QJsonObject json) {

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_notification_config_isValid = ::OpenAPI::fromJsonValue(m_notification_config, json[QString("notificationConfig")]);
    m_notification_config_isSet = !json[QString("notificationConfig")].isNull() && m_notification_config_isValid;

    m_stream_configs_isValid = ::OpenAPI::fromJsonValue(m_stream_configs, json[QString("streamConfigs")]);
    m_stream_configs_isSet = !json[QString("streamConfigs")].isNull() && m_stream_configs_isValid;
}

QString OAIDicomStore::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDicomStore::asJsonObject() const {
    QJsonObject obj;
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_notification_config.isSet()) {
        obj.insert(QString("notificationConfig"), ::OpenAPI::toJsonValue(m_notification_config));
    }
    if (m_stream_configs.size() > 0) {
        obj.insert(QString("streamConfigs"), ::OpenAPI::toJsonValue(m_stream_configs));
    }
    return obj;
}

QMap<QString, QString> OAIDicomStore::getLabels() const {
    return m_labels;
}
void OAIDicomStore::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIDicomStore::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIDicomStore::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIDicomStore::getName() const {
    return m_name;
}
void OAIDicomStore::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDicomStore::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDicomStore::is_name_Valid() const{
    return m_name_isValid;
}

OAINotificationConfig OAIDicomStore::getNotificationConfig() const {
    return m_notification_config;
}
void OAIDicomStore::setNotificationConfig(const OAINotificationConfig &notification_config) {
    m_notification_config = notification_config;
    m_notification_config_isSet = true;
}

bool OAIDicomStore::is_notification_config_Set() const{
    return m_notification_config_isSet;
}

bool OAIDicomStore::is_notification_config_Valid() const{
    return m_notification_config_isValid;
}

QList<OAIGoogleCloudHealthcareV1beta1DicomStreamConfig> OAIDicomStore::getStreamConfigs() const {
    return m_stream_configs;
}
void OAIDicomStore::setStreamConfigs(const QList<OAIGoogleCloudHealthcareV1beta1DicomStreamConfig> &stream_configs) {
    m_stream_configs = stream_configs;
    m_stream_configs_isSet = true;
}

bool OAIDicomStore::is_stream_configs_Set() const{
    return m_stream_configs_isSet;
}

bool OAIDicomStore::is_stream_configs_Valid() const{
    return m_stream_configs_isValid;
}

bool OAIDicomStore::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDicomStore::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
