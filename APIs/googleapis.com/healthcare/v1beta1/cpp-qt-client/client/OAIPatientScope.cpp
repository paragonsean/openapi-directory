/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPatientScope.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPatientScope::OAIPatientScope(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPatientScope::OAIPatientScope() {
    this->initializeModel();
}

OAIPatientScope::~OAIPatientScope() {}

void OAIPatientScope::initializeModel() {

    m_patient_ids_isSet = false;
    m_patient_ids_isValid = false;
}

void OAIPatientScope::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPatientScope::fromJsonObject(QJsonObject json) {

    m_patient_ids_isValid = ::OpenAPI::fromJsonValue(m_patient_ids, json[QString("patientIds")]);
    m_patient_ids_isSet = !json[QString("patientIds")].isNull() && m_patient_ids_isValid;
}

QString OAIPatientScope::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPatientScope::asJsonObject() const {
    QJsonObject obj;
    if (m_patient_ids.size() > 0) {
        obj.insert(QString("patientIds"), ::OpenAPI::toJsonValue(m_patient_ids));
    }
    return obj;
}

QList<QString> OAIPatientScope::getPatientIds() const {
    return m_patient_ids;
}
void OAIPatientScope::setPatientIds(const QList<QString> &patient_ids) {
    m_patient_ids = patient_ids;
    m_patient_ids_isSet = true;
}

bool OAIPatientScope::is_patient_ids_Set() const{
    return m_patient_ids_isSet;
}

bool OAIPatientScope::is_patient_ids_Valid() const{
    return m_patient_ids_isValid;
}

bool OAIPatientScope::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_patient_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPatientScope::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
