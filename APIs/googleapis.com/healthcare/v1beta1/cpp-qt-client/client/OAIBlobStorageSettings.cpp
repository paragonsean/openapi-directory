/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBlobStorageSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBlobStorageSettings::OAIBlobStorageSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBlobStorageSettings::OAIBlobStorageSettings() {
    this->initializeModel();
}

OAIBlobStorageSettings::~OAIBlobStorageSettings() {}

void OAIBlobStorageSettings::initializeModel() {

    m_blob_storage_class_isSet = false;
    m_blob_storage_class_isValid = false;
}

void OAIBlobStorageSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBlobStorageSettings::fromJsonObject(QJsonObject json) {

    m_blob_storage_class_isValid = ::OpenAPI::fromJsonValue(m_blob_storage_class, json[QString("blobStorageClass")]);
    m_blob_storage_class_isSet = !json[QString("blobStorageClass")].isNull() && m_blob_storage_class_isValid;
}

QString OAIBlobStorageSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBlobStorageSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_blob_storage_class_isSet) {
        obj.insert(QString("blobStorageClass"), ::OpenAPI::toJsonValue(m_blob_storage_class));
    }
    return obj;
}

QString OAIBlobStorageSettings::getBlobStorageClass() const {
    return m_blob_storage_class;
}
void OAIBlobStorageSettings::setBlobStorageClass(const QString &blob_storage_class) {
    m_blob_storage_class = blob_storage_class;
    m_blob_storage_class_isSet = true;
}

bool OAIBlobStorageSettings::is_blob_storage_class_Set() const{
    return m_blob_storage_class_isSet;
}

bool OAIBlobStorageSettings::is_blob_storage_class_Valid() const{
    return m_blob_storage_class_isValid;
}

bool OAIBlobStorageSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blob_storage_class_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBlobStorageSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
