/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnnotation.h
 *
 * An annotation record.
 */

#ifndef OAIAnnotation_H
#define OAIAnnotation_H

#include <QJsonObject>

#include "OAIAnnotationSource.h"
#include "OAIImageAnnotation.h"
#include "OAIResourceAnnotation.h"
#include "OAISensitiveTextAnnotation.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnnotationSource;
class OAIImageAnnotation;
class OAIResourceAnnotation;
class OAISensitiveTextAnnotation;

class OAIAnnotation : public OAIObject {
public:
    OAIAnnotation();
    OAIAnnotation(QString json);
    ~OAIAnnotation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAnnotationSource getAnnotationSource() const;
    void setAnnotationSource(const OAIAnnotationSource &annotation_source);
    bool is_annotation_source_Set() const;
    bool is_annotation_source_Valid() const;

    QMap<QString, QString> getCustomData() const;
    void setCustomData(const QMap<QString, QString> &custom_data);
    bool is_custom_data_Set() const;
    bool is_custom_data_Valid() const;

    OAIImageAnnotation getImageAnnotation() const;
    void setImageAnnotation(const OAIImageAnnotation &image_annotation);
    bool is_image_annotation_Set() const;
    bool is_image_annotation_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIResourceAnnotation getResourceAnnotation() const;
    void setResourceAnnotation(const OAIResourceAnnotation &resource_annotation);
    bool is_resource_annotation_Set() const;
    bool is_resource_annotation_Valid() const;

    OAISensitiveTextAnnotation getTextAnnotation() const;
    void setTextAnnotation(const OAISensitiveTextAnnotation &text_annotation);
    bool is_text_annotation_Set() const;
    bool is_text_annotation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAnnotationSource m_annotation_source;
    bool m_annotation_source_isSet;
    bool m_annotation_source_isValid;

    QMap<QString, QString> m_custom_data;
    bool m_custom_data_isSet;
    bool m_custom_data_isValid;

    OAIImageAnnotation m_image_annotation;
    bool m_image_annotation_isSet;
    bool m_image_annotation_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIResourceAnnotation m_resource_annotation;
    bool m_resource_annotation_isSet;
    bool m_resource_annotation_isValid;

    OAISensitiveTextAnnotation m_text_annotation;
    bool m_text_annotation_isSet;
    bool m_text_annotation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnnotation)

#endif // OAIAnnotation_H
