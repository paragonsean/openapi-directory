/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination() {
    this->initializeModel();
}

OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::~OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination() {}

void OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::initializeModel() {

    m_force_isSet = false;
    m_force_isValid = false;

    m_table_uri_isSet = false;
    m_table_uri_isValid = false;

    m_write_disposition_isSet = false;
    m_write_disposition_isValid = false;
}

void OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::fromJsonObject(QJsonObject json) {

    m_force_isValid = ::OpenAPI::fromJsonValue(m_force, json[QString("force")]);
    m_force_isSet = !json[QString("force")].isNull() && m_force_isValid;

    m_table_uri_isValid = ::OpenAPI::fromJsonValue(m_table_uri, json[QString("tableUri")]);
    m_table_uri_isSet = !json[QString("tableUri")].isNull() && m_table_uri_isValid;

    m_write_disposition_isValid = ::OpenAPI::fromJsonValue(m_write_disposition, json[QString("writeDisposition")]);
    m_write_disposition_isSet = !json[QString("writeDisposition")].isNull() && m_write_disposition_isValid;
}

QString OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::asJsonObject() const {
    QJsonObject obj;
    if (m_force_isSet) {
        obj.insert(QString("force"), ::OpenAPI::toJsonValue(m_force));
    }
    if (m_table_uri_isSet) {
        obj.insert(QString("tableUri"), ::OpenAPI::toJsonValue(m_table_uri));
    }
    if (m_write_disposition_isSet) {
        obj.insert(QString("writeDisposition"), ::OpenAPI::toJsonValue(m_write_disposition));
    }
    return obj;
}

bool OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::isForce() const {
    return m_force;
}
void OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::setForce(const bool &force) {
    m_force = force;
    m_force_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::is_force_Set() const{
    return m_force_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::is_force_Valid() const{
    return m_force_isValid;
}

QString OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::getTableUri() const {
    return m_table_uri;
}
void OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::setTableUri(const QString &table_uri) {
    m_table_uri = table_uri;
    m_table_uri_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::is_table_uri_Set() const{
    return m_table_uri_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::is_table_uri_Valid() const{
    return m_table_uri_isValid;
}

QString OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::getWriteDisposition() const {
    return m_write_disposition;
}
void OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::setWriteDisposition(const QString &write_disposition) {
    m_write_disposition = write_disposition;
    m_write_disposition_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::is_write_disposition_Set() const{
    return m_write_disposition_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::is_write_disposition_Valid() const{
    return m_write_disposition_isValid;
}

bool OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_force_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_write_disposition_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudHealthcareV1beta1DicomBigQueryDestination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
