/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchemaPackage.h
 *
 * A schema package contains a set of schemas and type definitions.
 */

#ifndef OAISchemaPackage_H
#define OAISchemaPackage_H

#include <QJsonObject>

#include "OAIHl7SchemaConfig.h"
#include "OAIHl7TypesConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHl7SchemaConfig;
class OAIHl7TypesConfig;

class OAISchemaPackage : public OAIObject {
public:
    OAISchemaPackage();
    OAISchemaPackage(QString json);
    ~OAISchemaPackage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIgnoreMinOccurs() const;
    void setIgnoreMinOccurs(const bool &ignore_min_occurs);
    bool is_ignore_min_occurs_Set() const;
    bool is_ignore_min_occurs_Valid() const;

    QList<OAIHl7SchemaConfig> getSchemas() const;
    void setSchemas(const QList<OAIHl7SchemaConfig> &schemas);
    bool is_schemas_Set() const;
    bool is_schemas_Valid() const;

    QString getSchematizedParsingType() const;
    void setSchematizedParsingType(const QString &schematized_parsing_type);
    bool is_schematized_parsing_type_Set() const;
    bool is_schematized_parsing_type_Valid() const;

    QList<OAIHl7TypesConfig> getTypes() const;
    void setTypes(const QList<OAIHl7TypesConfig> &types);
    bool is_types_Set() const;
    bool is_types_Valid() const;

    QString getUnexpectedSegmentHandling() const;
    void setUnexpectedSegmentHandling(const QString &unexpected_segment_handling);
    bool is_unexpected_segment_handling_Set() const;
    bool is_unexpected_segment_handling_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ignore_min_occurs;
    bool m_ignore_min_occurs_isSet;
    bool m_ignore_min_occurs_isValid;

    QList<OAIHl7SchemaConfig> m_schemas;
    bool m_schemas_isSet;
    bool m_schemas_isValid;

    QString m_schematized_parsing_type;
    bool m_schematized_parsing_type_isSet;
    bool m_schematized_parsing_type_isValid;

    QList<OAIHl7TypesConfig> m_types;
    bool m_types_isSet;
    bool m_types_isValid;

    QString m_unexpected_segment_handling;
    bool m_unexpected_segment_handling_isSet;
    bool m_unexpected_segment_handling_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchemaPackage)

#endif // OAISchemaPackage_H
