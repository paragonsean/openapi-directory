/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryAccessibleDataResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryAccessibleDataResponse::OAIQueryAccessibleDataResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryAccessibleDataResponse::OAIQueryAccessibleDataResponse() {
    this->initializeModel();
}

OAIQueryAccessibleDataResponse::~OAIQueryAccessibleDataResponse() {}

void OAIQueryAccessibleDataResponse::initializeModel() {

    m_gcs_uris_isSet = false;
    m_gcs_uris_isValid = false;
}

void OAIQueryAccessibleDataResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryAccessibleDataResponse::fromJsonObject(QJsonObject json) {

    m_gcs_uris_isValid = ::OpenAPI::fromJsonValue(m_gcs_uris, json[QString("gcsUris")]);
    m_gcs_uris_isSet = !json[QString("gcsUris")].isNull() && m_gcs_uris_isValid;
}

QString OAIQueryAccessibleDataResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryAccessibleDataResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_gcs_uris.size() > 0) {
        obj.insert(QString("gcsUris"), ::OpenAPI::toJsonValue(m_gcs_uris));
    }
    return obj;
}

QList<QString> OAIQueryAccessibleDataResponse::getGcsUris() const {
    return m_gcs_uris;
}
void OAIQueryAccessibleDataResponse::setGcsUris(const QList<QString> &gcs_uris) {
    m_gcs_uris = gcs_uris;
    m_gcs_uris_isSet = true;
}

bool OAIQueryAccessibleDataResponse::is_gcs_uris_Set() const{
    return m_gcs_uris_isSet;
}

bool OAIQueryAccessibleDataResponse::is_gcs_uris_Valid() const{
    return m_gcs_uris_isValid;
}

bool OAIQueryAccessibleDataResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gcs_uris.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryAccessibleDataResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
