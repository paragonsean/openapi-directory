/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConsentArtifact.h
 *
 * Documentation of a user&#39;s consent.
 */

#ifndef OAIConsentArtifact_H
#define OAIConsentArtifact_H

#include <QJsonObject>

#include "OAIImage.h"
#include "OAISignature.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImage;
class OAISignature;

class OAIConsentArtifact : public OAIObject {
public:
    OAIConsentArtifact();
    OAIConsentArtifact(QString json);
    ~OAIConsentArtifact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIImage> getConsentContentScreenshots() const;
    void setConsentContentScreenshots(const QList<OAIImage> &consent_content_screenshots);
    bool is_consent_content_screenshots_Set() const;
    bool is_consent_content_screenshots_Valid() const;

    QString getConsentContentVersion() const;
    void setConsentContentVersion(const QString &consent_content_version);
    bool is_consent_content_version_Set() const;
    bool is_consent_content_version_Valid() const;

    OAISignature getGuardianSignature() const;
    void setGuardianSignature(const OAISignature &guardian_signature);
    bool is_guardian_signature_Set() const;
    bool is_guardian_signature_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    OAISignature getUserSignature() const;
    void setUserSignature(const OAISignature &user_signature);
    bool is_user_signature_Set() const;
    bool is_user_signature_Valid() const;

    OAISignature getWitnessSignature() const;
    void setWitnessSignature(const OAISignature &witness_signature);
    bool is_witness_signature_Set() const;
    bool is_witness_signature_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIImage> m_consent_content_screenshots;
    bool m_consent_content_screenshots_isSet;
    bool m_consent_content_screenshots_isValid;

    QString m_consent_content_version;
    bool m_consent_content_version_isSet;
    bool m_consent_content_version_isValid;

    OAISignature m_guardian_signature;
    bool m_guardian_signature_isSet;
    bool m_guardian_signature_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    OAISignature m_user_signature;
    bool m_user_signature_isSet;
    bool m_user_signature_isValid;

    OAISignature m_witness_signature;
    bool m_witness_signature_isSet;
    bool m_witness_signature_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConsentArtifact)

#endif // OAIConsentArtifact_H
