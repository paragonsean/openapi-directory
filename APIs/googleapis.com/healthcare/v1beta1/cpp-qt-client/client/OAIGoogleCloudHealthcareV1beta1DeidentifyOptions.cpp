/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudHealthcareV1beta1DeidentifyOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::OAIGoogleCloudHealthcareV1beta1DeidentifyOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::OAIGoogleCloudHealthcareV1beta1DeidentifyOptions() {
    this->initializeModel();
}

OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::~OAIGoogleCloudHealthcareV1beta1DeidentifyOptions() {}

void OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::initializeModel() {

    m_character_mask_config_isSet = false;
    m_character_mask_config_isValid = false;

    m_contextual_deid_isSet = false;
    m_contextual_deid_isValid = false;

    m_crypto_hash_config_isSet = false;
    m_crypto_hash_config_isValid = false;

    m_date_shift_config_isSet = false;
    m_date_shift_config_isValid = false;

    m_keep_extensions_isSet = false;
    m_keep_extensions_isValid = false;
}

void OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::fromJsonObject(QJsonObject json) {

    m_character_mask_config_isValid = ::OpenAPI::fromJsonValue(m_character_mask_config, json[QString("characterMaskConfig")]);
    m_character_mask_config_isSet = !json[QString("characterMaskConfig")].isNull() && m_character_mask_config_isValid;

    m_contextual_deid_isValid = ::OpenAPI::fromJsonValue(m_contextual_deid, json[QString("contextualDeid")]);
    m_contextual_deid_isSet = !json[QString("contextualDeid")].isNull() && m_contextual_deid_isValid;

    m_crypto_hash_config_isValid = ::OpenAPI::fromJsonValue(m_crypto_hash_config, json[QString("cryptoHashConfig")]);
    m_crypto_hash_config_isSet = !json[QString("cryptoHashConfig")].isNull() && m_crypto_hash_config_isValid;

    m_date_shift_config_isValid = ::OpenAPI::fromJsonValue(m_date_shift_config, json[QString("dateShiftConfig")]);
    m_date_shift_config_isSet = !json[QString("dateShiftConfig")].isNull() && m_date_shift_config_isValid;

    m_keep_extensions_isValid = ::OpenAPI::fromJsonValue(m_keep_extensions, json[QString("keepExtensions")]);
    m_keep_extensions_isSet = !json[QString("keepExtensions")].isNull() && m_keep_extensions_isValid;
}

QString OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_character_mask_config.isSet()) {
        obj.insert(QString("characterMaskConfig"), ::OpenAPI::toJsonValue(m_character_mask_config));
    }
    if (m_contextual_deid_isSet) {
        obj.insert(QString("contextualDeid"), ::OpenAPI::toJsonValue(m_contextual_deid));
    }
    if (m_crypto_hash_config.isSet()) {
        obj.insert(QString("cryptoHashConfig"), ::OpenAPI::toJsonValue(m_crypto_hash_config));
    }
    if (m_date_shift_config.isSet()) {
        obj.insert(QString("dateShiftConfig"), ::OpenAPI::toJsonValue(m_date_shift_config));
    }
    if (m_keep_extensions_isSet) {
        obj.insert(QString("keepExtensions"), ::OpenAPI::toJsonValue(m_keep_extensions));
    }
    return obj;
}

OAICharacterMaskConfig OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::getCharacterMaskConfig() const {
    return m_character_mask_config;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::setCharacterMaskConfig(const OAICharacterMaskConfig &character_mask_config) {
    m_character_mask_config = character_mask_config;
    m_character_mask_config_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::is_character_mask_config_Set() const{
    return m_character_mask_config_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::is_character_mask_config_Valid() const{
    return m_character_mask_config_isValid;
}

OAIObject OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::getContextualDeid() const {
    return m_contextual_deid;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::setContextualDeid(const OAIObject &contextual_deid) {
    m_contextual_deid = contextual_deid;
    m_contextual_deid_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::is_contextual_deid_Set() const{
    return m_contextual_deid_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::is_contextual_deid_Valid() const{
    return m_contextual_deid_isValid;
}

OAICryptoHashConfig OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::getCryptoHashConfig() const {
    return m_crypto_hash_config;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::setCryptoHashConfig(const OAICryptoHashConfig &crypto_hash_config) {
    m_crypto_hash_config = crypto_hash_config;
    m_crypto_hash_config_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::is_crypto_hash_config_Set() const{
    return m_crypto_hash_config_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::is_crypto_hash_config_Valid() const{
    return m_crypto_hash_config_isValid;
}

OAIDateShiftConfig OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::getDateShiftConfig() const {
    return m_date_shift_config;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::setDateShiftConfig(const OAIDateShiftConfig &date_shift_config) {
    m_date_shift_config = date_shift_config;
    m_date_shift_config_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::is_date_shift_config_Set() const{
    return m_date_shift_config_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::is_date_shift_config_Valid() const{
    return m_date_shift_config_isValid;
}

OAIObject OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::getKeepExtensions() const {
    return m_keep_extensions;
}
void OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::setKeepExtensions(const OAIObject &keep_extensions) {
    m_keep_extensions = keep_extensions;
    m_keep_extensions_isSet = true;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::is_keep_extensions_Set() const{
    return m_keep_extensions_isSet;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::is_keep_extensions_Valid() const{
    return m_keep_extensions_isValid;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_character_mask_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_contextual_deid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crypto_hash_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_shift_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_keep_extensions_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudHealthcareV1beta1DeidentifyOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
