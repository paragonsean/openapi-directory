/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConsentEvaluation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConsentEvaluation::OAIConsentEvaluation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConsentEvaluation::OAIConsentEvaluation() {
    this->initializeModel();
}

OAIConsentEvaluation::~OAIConsentEvaluation() {}

void OAIConsentEvaluation::initializeModel() {

    m_evaluation_result_isSet = false;
    m_evaluation_result_isValid = false;
}

void OAIConsentEvaluation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConsentEvaluation::fromJsonObject(QJsonObject json) {

    m_evaluation_result_isValid = ::OpenAPI::fromJsonValue(m_evaluation_result, json[QString("evaluationResult")]);
    m_evaluation_result_isSet = !json[QString("evaluationResult")].isNull() && m_evaluation_result_isValid;
}

QString OAIConsentEvaluation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConsentEvaluation::asJsonObject() const {
    QJsonObject obj;
    if (m_evaluation_result_isSet) {
        obj.insert(QString("evaluationResult"), ::OpenAPI::toJsonValue(m_evaluation_result));
    }
    return obj;
}

QString OAIConsentEvaluation::getEvaluationResult() const {
    return m_evaluation_result;
}
void OAIConsentEvaluation::setEvaluationResult(const QString &evaluation_result) {
    m_evaluation_result = evaluation_result;
    m_evaluation_result_isSet = true;
}

bool OAIConsentEvaluation::is_evaluation_result_Set() const{
    return m_evaluation_result_isSet;
}

bool OAIConsentEvaluation::is_evaluation_result_Valid() const{
    return m_evaluation_result_isValid;
}

bool OAIConsentEvaluation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evaluation_result_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConsentEvaluation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
