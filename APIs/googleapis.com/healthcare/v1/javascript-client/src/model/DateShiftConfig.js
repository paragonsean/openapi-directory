/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KmsWrappedCryptoKey from './KmsWrappedCryptoKey';

/**
 * The DateShiftConfig model module.
 * @module model/DateShiftConfig
 * @version v1
 */
class DateShiftConfig {
    /**
     * Constructs a new <code>DateShiftConfig</code>.
     * Shift a date forward or backward in time by a random amount which is consistent for a given patient and crypto key combination.
     * @alias module:model/DateShiftConfig
     */
    constructor() { 
        
        DateShiftConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DateShiftConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateShiftConfig} obj Optional instance to populate.
     * @return {module:model/DateShiftConfig} The populated <code>DateShiftConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateShiftConfig();

            if (data.hasOwnProperty('cryptoKey')) {
                obj['cryptoKey'] = ApiClient.convertToType(data['cryptoKey'], 'Blob');
            }
            if (data.hasOwnProperty('kmsWrapped')) {
                obj['kmsWrapped'] = KmsWrappedCryptoKey.constructFromObject(data['kmsWrapped']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DateShiftConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DateShiftConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `kmsWrapped`
        if (data['kmsWrapped']) { // data not null
          KmsWrappedCryptoKey.validateJSON(data['kmsWrapped']);
        }

        return true;
    }


}



/**
 * An AES 128/192/256 bit key. The date shift is computed based on this key and the patient ID. If the patient ID is empty for a DICOM resource, the date shift is computed based on this key and the study instance UID. If `crypto_key` is not set, then `kms_wrapped` is used to calculate the date shift. If neither is set, a default key is generated for each de-identify operation. Must not be set if `kms_wrapped` is set.
 * @member {Blob} cryptoKey
 */
DateShiftConfig.prototype['cryptoKey'] = undefined;

/**
 * @member {module:model/KmsWrappedCryptoKey} kmsWrapped
 */
DateShiftConfig.prototype['kmsWrapped'] = undefined;






export default DateShiftConfig;

