/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeidentifyConfig from './DeidentifyConfig';

/**
 * The DeidentifiedStoreDestination model module.
 * @module model/DeidentifiedStoreDestination
 * @version v1
 */
class DeidentifiedStoreDestination {
    /**
     * Constructs a new <code>DeidentifiedStoreDestination</code>.
     * Contains configuration for streaming de-identified FHIR export.
     * @alias module:model/DeidentifiedStoreDestination
     */
    constructor() { 
        
        DeidentifiedStoreDestination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeidentifiedStoreDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeidentifiedStoreDestination} obj Optional instance to populate.
     * @return {module:model/DeidentifiedStoreDestination} The populated <code>DeidentifiedStoreDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeidentifiedStoreDestination();

            if (data.hasOwnProperty('config')) {
                obj['config'] = DeidentifyConfig.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('store')) {
                obj['store'] = ApiClient.convertToType(data['store'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeidentifiedStoreDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeidentifiedStoreDestination</code>.
     */
    static validateJSON(data) {
        // validate the optional field `config`
        if (data['config']) { // data not null
          DeidentifyConfig.validateJSON(data['config']);
        }
        // ensure the json data is a string
        if (data['store'] && !(typeof data['store'] === 'string' || data['store'] instanceof String)) {
            throw new Error("Expected the field `store` to be a primitive type in the JSON string but got " + data['store']);
        }

        return true;
    }


}



/**
 * @member {module:model/DeidentifyConfig} config
 */
DeidentifiedStoreDestination.prototype['config'] = undefined;

/**
 * The full resource name of a Cloud Healthcare FHIR store, for example, `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
 * @member {String} store
 */
DeidentifiedStoreDestination.prototype['store'] = undefined;






export default DeidentifiedStoreDestination;

