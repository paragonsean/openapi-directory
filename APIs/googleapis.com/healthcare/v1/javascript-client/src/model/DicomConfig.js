/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TagFilterList from './TagFilterList';

/**
 * The DicomConfig model module.
 * @module model/DicomConfig
 * @version v1
 */
class DicomConfig {
    /**
     * Constructs a new <code>DicomConfig</code>.
     * Specifies the parameters needed for de-identification of DICOM stores.
     * @alias module:model/DicomConfig
     */
    constructor() { 
        
        DicomConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DicomConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DicomConfig} obj Optional instance to populate.
     * @return {module:model/DicomConfig} The populated <code>DicomConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DicomConfig();

            if (data.hasOwnProperty('filterProfile')) {
                obj['filterProfile'] = ApiClient.convertToType(data['filterProfile'], 'String');
            }
            if (data.hasOwnProperty('keepList')) {
                obj['keepList'] = TagFilterList.constructFromObject(data['keepList']);
            }
            if (data.hasOwnProperty('removeList')) {
                obj['removeList'] = TagFilterList.constructFromObject(data['removeList']);
            }
            if (data.hasOwnProperty('skipIdRedaction')) {
                obj['skipIdRedaction'] = ApiClient.convertToType(data['skipIdRedaction'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DicomConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DicomConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['filterProfile'] && !(typeof data['filterProfile'] === 'string' || data['filterProfile'] instanceof String)) {
            throw new Error("Expected the field `filterProfile` to be a primitive type in the JSON string but got " + data['filterProfile']);
        }
        // validate the optional field `keepList`
        if (data['keepList']) { // data not null
          TagFilterList.validateJSON(data['keepList']);
        }
        // validate the optional field `removeList`
        if (data['removeList']) { // data not null
          TagFilterList.validateJSON(data['removeList']);
        }

        return true;
    }


}



/**
 * Tag filtering profile that determines which tags to keep/remove.
 * @member {module:model/DicomConfig.FilterProfileEnum} filterProfile
 */
DicomConfig.prototype['filterProfile'] = undefined;

/**
 * @member {module:model/TagFilterList} keepList
 */
DicomConfig.prototype['keepList'] = undefined;

/**
 * @member {module:model/TagFilterList} removeList
 */
DicomConfig.prototype['removeList'] = undefined;

/**
 * If true, skip replacing StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, and MediaStorageSOPInstanceUID and leave them untouched. The Cloud Healthcare API regenerates these UIDs by default based on the DICOM Standard's reasoning: \"Whilst these UIDs cannot be mapped directly to an individual out of context, given access to the original images, or to a database of the original images containing the UIDs, it would be possible to recover the individual's identity.\" http://dicom.nema.org/medical/dicom/current/output/chtml/part15/sect_E.3.9.html
 * @member {Boolean} skipIdRedaction
 */
DicomConfig.prototype['skipIdRedaction'] = undefined;





/**
 * Allowed values for the <code>filterProfile</code> property.
 * @enum {String}
 * @readonly
 */
DicomConfig['FilterProfileEnum'] = {

    /**
     * value: "TAG_FILTER_PROFILE_UNSPECIFIED"
     * @const
     */
    "TAG_FILTER_PROFILE_UNSPECIFIED": "TAG_FILTER_PROFILE_UNSPECIFIED",

    /**
     * value: "MINIMAL_KEEP_LIST_PROFILE"
     * @const
     */
    "MINIMAL_KEEP_LIST_PROFILE": "MINIMAL_KEEP_LIST_PROFILE",

    /**
     * value: "ATTRIBUTE_CONFIDENTIALITY_BASIC_PROFILE"
     * @const
     */
    "ATTRIBUTE_CONFIDENTIALITY_BASIC_PROFILE": "ATTRIBUTE_CONFIDENTIALITY_BASIC_PROFILE",

    /**
     * value: "KEEP_ALL_PROFILE"
     * @const
     */
    "KEEP_ALL_PROFILE": "KEEP_ALL_PROFILE",

    /**
     * value: "DEIDENTIFY_TAG_CONTENTS"
     * @const
     */
    "DEIDENTIFY_TAG_CONTENTS": "DEIDENTIFY_TAG_CONTENTS"
};



export default DicomConfig;

