/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudHealthcareV1FhirGcsSource from './GoogleCloudHealthcareV1FhirGcsSource';

/**
 * The ImportResourcesRequest model module.
 * @module model/ImportResourcesRequest
 * @version v1
 */
class ImportResourcesRequest {
    /**
     * Constructs a new <code>ImportResourcesRequest</code>.
     * Request to import resources.
     * @alias module:model/ImportResourcesRequest
     */
    constructor() { 
        
        ImportResourcesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImportResourcesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportResourcesRequest} obj Optional instance to populate.
     * @return {module:model/ImportResourcesRequest} The populated <code>ImportResourcesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportResourcesRequest();

            if (data.hasOwnProperty('contentStructure')) {
                obj['contentStructure'] = ApiClient.convertToType(data['contentStructure'], 'String');
            }
            if (data.hasOwnProperty('gcsSource')) {
                obj['gcsSource'] = GoogleCloudHealthcareV1FhirGcsSource.constructFromObject(data['gcsSource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportResourcesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportResourcesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['contentStructure'] && !(typeof data['contentStructure'] === 'string' || data['contentStructure'] instanceof String)) {
            throw new Error("Expected the field `contentStructure` to be a primitive type in the JSON string but got " + data['contentStructure']);
        }
        // validate the optional field `gcsSource`
        if (data['gcsSource']) { // data not null
          GoogleCloudHealthcareV1FhirGcsSource.validateJSON(data['gcsSource']);
        }

        return true;
    }


}



/**
 * The content structure in the source location. If not specified, the server treats the input source files as BUNDLE.
 * @member {module:model/ImportResourcesRequest.ContentStructureEnum} contentStructure
 */
ImportResourcesRequest.prototype['contentStructure'] = undefined;

/**
 * @member {module:model/GoogleCloudHealthcareV1FhirGcsSource} gcsSource
 */
ImportResourcesRequest.prototype['gcsSource'] = undefined;





/**
 * Allowed values for the <code>contentStructure</code> property.
 * @enum {String}
 * @readonly
 */
ImportResourcesRequest['ContentStructureEnum'] = {

    /**
     * value: "CONTENT_STRUCTURE_UNSPECIFIED"
     * @const
     */
    "CONTENT_STRUCTURE_UNSPECIFIED": "CONTENT_STRUCTURE_UNSPECIFIED",

    /**
     * value: "BUNDLE"
     * @const
     */
    "BUNDLE": "BUNDLE",

    /**
     * value: "RESOURCE"
     * @const
     */
    "RESOURCE": "RESOURCE",

    /**
     * value: "BUNDLE_PRETTY"
     * @const
     */
    "BUNDLE_PRETTY": "BUNDLE_PRETTY",

    /**
     * value: "RESOURCE_PRETTY"
     * @const
     */
    "RESOURCE_PRETTY": "RESOURCE_PRETTY"
};



export default ImportResourcesRequest;

