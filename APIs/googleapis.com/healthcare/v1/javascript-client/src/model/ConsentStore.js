/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConsentStore model module.
 * @module model/ConsentStore
 * @version v1
 */
class ConsentStore {
    /**
     * Constructs a new <code>ConsentStore</code>.
     * Represents a consent store.
     * @alias module:model/ConsentStore
     */
    constructor() { 
        
        ConsentStore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConsentStore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConsentStore} obj Optional instance to populate.
     * @return {module:model/ConsentStore} The populated <code>ConsentStore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsentStore();

            if (data.hasOwnProperty('defaultConsentTtl')) {
                obj['defaultConsentTtl'] = ApiClient.convertToType(data['defaultConsentTtl'], 'String');
            }
            if (data.hasOwnProperty('enableConsentCreateOnUpdate')) {
                obj['enableConsentCreateOnUpdate'] = ApiClient.convertToType(data['enableConsentCreateOnUpdate'], 'Boolean');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConsentStore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConsentStore</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['defaultConsentTtl'] && !(typeof data['defaultConsentTtl'] === 'string' || data['defaultConsentTtl'] instanceof String)) {
            throw new Error("Expected the field `defaultConsentTtl` to be a primitive type in the JSON string but got " + data['defaultConsentTtl']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
 * @member {String} defaultConsentTtl
 */
ConsentStore.prototype['defaultConsentTtl'] = undefined;

/**
 * Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
 * @member {Boolean} enableConsentCreateOnUpdate
 */
ConsentStore.prototype['enableConsentCreateOnUpdate'] = undefined;

/**
 * Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
 * @member {Object.<String, String>} labels
 */
ConsentStore.prototype['labels'] = undefined;

/**
 * Identifier. Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
 * @member {String} name
 */
ConsentStore.prototype['name'] = undefined;






export default ConsentStore;

