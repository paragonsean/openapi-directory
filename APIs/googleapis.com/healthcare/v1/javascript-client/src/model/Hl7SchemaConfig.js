/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SchemaGroup from './SchemaGroup';
import VersionSource from './VersionSource';

/**
 * The Hl7SchemaConfig model module.
 * @module model/Hl7SchemaConfig
 * @version v1
 */
class Hl7SchemaConfig {
    /**
     * Constructs a new <code>Hl7SchemaConfig</code>.
     * Root config message for HL7v2 schema. This contains a schema structure of groups and segments, and filters that determine which messages to apply the schema structure to.
     * @alias module:model/Hl7SchemaConfig
     */
    constructor() { 
        
        Hl7SchemaConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Hl7SchemaConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Hl7SchemaConfig} obj Optional instance to populate.
     * @return {module:model/Hl7SchemaConfig} The populated <code>Hl7SchemaConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Hl7SchemaConfig();

            if (data.hasOwnProperty('messageSchemaConfigs')) {
                obj['messageSchemaConfigs'] = ApiClient.convertToType(data['messageSchemaConfigs'], {'String': SchemaGroup});
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], [VersionSource]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Hl7SchemaConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Hl7SchemaConfig</code>.
     */
    static validateJSON(data) {
        if (data['version']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['version'])) {
                throw new Error("Expected the field `version` to be an array in the JSON data but got " + data['version']);
            }
            // validate the optional field `version` (array)
            for (const item of data['version']) {
                VersionSource.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Map from each HL7v2 message type and trigger event pair, such as ADT_A04, to its schema configuration root group.
 * @member {Object.<String, module:model/SchemaGroup>} messageSchemaConfigs
 */
Hl7SchemaConfig.prototype['messageSchemaConfigs'] = undefined;

/**
 * Each VersionSource is tested and only if they all match is the schema used for the message.
 * @member {Array.<module:model/VersionSource>} version
 */
Hl7SchemaConfig.prototype['version'] = undefined;






export default Hl7SchemaConfig;

