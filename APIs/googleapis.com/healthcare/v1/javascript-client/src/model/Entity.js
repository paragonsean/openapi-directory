/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Entity model module.
 * @module model/Entity
 * @version v1
 */
class Entity {
    /**
     * Constructs a new <code>Entity</code>.
     * The candidate entities that an entity mention could link to.
     * @alias module:model/Entity
     */
    constructor() { 
        
        Entity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Entity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Entity} obj Optional instance to populate.
     * @return {module:model/Entity} The populated <code>Entity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Entity();

            if (data.hasOwnProperty('entityId')) {
                obj['entityId'] = ApiClient.convertToType(data['entityId'], 'String');
            }
            if (data.hasOwnProperty('preferredTerm')) {
                obj['preferredTerm'] = ApiClient.convertToType(data['preferredTerm'], 'String');
            }
            if (data.hasOwnProperty('vocabularyCodes')) {
                obj['vocabularyCodes'] = ApiClient.convertToType(data['vocabularyCodes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Entity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Entity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['entityId'] && !(typeof data['entityId'] === 'string' || data['entityId'] instanceof String)) {
            throw new Error("Expected the field `entityId` to be a primitive type in the JSON string but got " + data['entityId']);
        }
        // ensure the json data is a string
        if (data['preferredTerm'] && !(typeof data['preferredTerm'] === 'string' || data['preferredTerm'] instanceof String)) {
            throw new Error("Expected the field `preferredTerm` to be a primitive type in the JSON string but got " + data['preferredTerm']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['vocabularyCodes'])) {
            throw new Error("Expected the field `vocabularyCodes` to be an array in the JSON data but got " + data['vocabularyCodes']);
        }

        return true;
    }


}



/**
 * entity_id is a first class field entity_id uniquely identifies this concept and its meta-vocabulary. For example, \"UMLS/C0000970\".
 * @member {String} entityId
 */
Entity.prototype['entityId'] = undefined;

/**
 * preferred_term is the preferred term for this concept. For example, \"Acetaminophen\". For ad hoc entities formed by normalization, this is the most popular unnormalized string.
 * @member {String} preferredTerm
 */
Entity.prototype['preferredTerm'] = undefined;

/**
 * Vocabulary codes are first-class fields and differentiated from the concept unique identifier (entity_id). vocabulary_codes contains the representation of this concept in particular vocabularies, such as ICD-10, SNOMED-CT and RxNORM. These are prefixed by the name of the vocabulary, followed by the unique code within that vocabulary. For example, \"RXNORM/A10334543\".
 * @member {Array.<String>} vocabularyCodes
 */
Entity.prototype['vocabularyCodes'] = undefined;






export default Entity;

