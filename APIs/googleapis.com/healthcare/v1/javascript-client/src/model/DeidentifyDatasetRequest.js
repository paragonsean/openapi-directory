/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeidentifyConfig from './DeidentifyConfig';

/**
 * The DeidentifyDatasetRequest model module.
 * @module model/DeidentifyDatasetRequest
 * @version v1
 */
class DeidentifyDatasetRequest {
    /**
     * Constructs a new <code>DeidentifyDatasetRequest</code>.
     * Redacts identifying information from the specified dataset.
     * @alias module:model/DeidentifyDatasetRequest
     */
    constructor() { 
        
        DeidentifyDatasetRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeidentifyDatasetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeidentifyDatasetRequest} obj Optional instance to populate.
     * @return {module:model/DeidentifyDatasetRequest} The populated <code>DeidentifyDatasetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeidentifyDatasetRequest();

            if (data.hasOwnProperty('config')) {
                obj['config'] = DeidentifyConfig.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('destinationDataset')) {
                obj['destinationDataset'] = ApiClient.convertToType(data['destinationDataset'], 'String');
            }
            if (data.hasOwnProperty('gcsConfigUri')) {
                obj['gcsConfigUri'] = ApiClient.convertToType(data['gcsConfigUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeidentifyDatasetRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeidentifyDatasetRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `config`
        if (data['config']) { // data not null
          DeidentifyConfig.validateJSON(data['config']);
        }
        // ensure the json data is a string
        if (data['destinationDataset'] && !(typeof data['destinationDataset'] === 'string' || data['destinationDataset'] instanceof String)) {
            throw new Error("Expected the field `destinationDataset` to be a primitive type in the JSON string but got " + data['destinationDataset']);
        }
        // ensure the json data is a string
        if (data['gcsConfigUri'] && !(typeof data['gcsConfigUri'] === 'string' || data['gcsConfigUri'] instanceof String)) {
            throw new Error("Expected the field `gcsConfigUri` to be a primitive type in the JSON string but got " + data['gcsConfigUri']);
        }

        return true;
    }


}



/**
 * @member {module:model/DeidentifyConfig} config
 */
DeidentifyDatasetRequest.prototype['config'] = undefined;

/**
 * Required. The name of the dataset resource to create and write the redacted data to. * The destination dataset must not exist. * The destination dataset must be in the same location as the source dataset. De-identifying data across multiple locations is not supported.
 * @member {String} destinationDataset
 */
DeidentifyDatasetRequest.prototype['destinationDataset'] = undefined;

/**
 * Cloud Storage location to read the JSON cloud.healthcare.deidentify.DeidentifyConfig from, overriding the default config. Must be of the form `gs://{bucket_id}/path/to/object`. The Cloud Storage location must grant the Cloud IAM role `roles/storage.objectViewer` to the project's Cloud Healthcare Service Agent service account. Only one of `config` and `gcs_config_uri` can be specified.
 * @member {String} gcsConfigUri
 */
DeidentifyDatasetRequest.prototype['gcsConfigUri'] = undefined;






export default DeidentifyDatasetRequest;

