/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRollbackFhirResourceFilteringFields.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRollbackFhirResourceFilteringFields::OAIRollbackFhirResourceFilteringFields(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRollbackFhirResourceFilteringFields::OAIRollbackFhirResourceFilteringFields() {
    this->initializeModel();
}

OAIRollbackFhirResourceFilteringFields::~OAIRollbackFhirResourceFilteringFields() {}

void OAIRollbackFhirResourceFilteringFields::initializeModel() {

    m_metadata_filter_isSet = false;
    m_metadata_filter_isValid = false;

    m_operation_ids_isSet = false;
    m_operation_ids_isValid = false;
}

void OAIRollbackFhirResourceFilteringFields::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRollbackFhirResourceFilteringFields::fromJsonObject(QJsonObject json) {

    m_metadata_filter_isValid = ::OpenAPI::fromJsonValue(m_metadata_filter, json[QString("metadataFilter")]);
    m_metadata_filter_isSet = !json[QString("metadataFilter")].isNull() && m_metadata_filter_isValid;

    m_operation_ids_isValid = ::OpenAPI::fromJsonValue(m_operation_ids, json[QString("operationIds")]);
    m_operation_ids_isSet = !json[QString("operationIds")].isNull() && m_operation_ids_isValid;
}

QString OAIRollbackFhirResourceFilteringFields::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRollbackFhirResourceFilteringFields::asJsonObject() const {
    QJsonObject obj;
    if (m_metadata_filter_isSet) {
        obj.insert(QString("metadataFilter"), ::OpenAPI::toJsonValue(m_metadata_filter));
    }
    if (m_operation_ids.size() > 0) {
        obj.insert(QString("operationIds"), ::OpenAPI::toJsonValue(m_operation_ids));
    }
    return obj;
}

QString OAIRollbackFhirResourceFilteringFields::getMetadataFilter() const {
    return m_metadata_filter;
}
void OAIRollbackFhirResourceFilteringFields::setMetadataFilter(const QString &metadata_filter) {
    m_metadata_filter = metadata_filter;
    m_metadata_filter_isSet = true;
}

bool OAIRollbackFhirResourceFilteringFields::is_metadata_filter_Set() const{
    return m_metadata_filter_isSet;
}

bool OAIRollbackFhirResourceFilteringFields::is_metadata_filter_Valid() const{
    return m_metadata_filter_isValid;
}

QList<QString> OAIRollbackFhirResourceFilteringFields::getOperationIds() const {
    return m_operation_ids;
}
void OAIRollbackFhirResourceFilteringFields::setOperationIds(const QList<QString> &operation_ids) {
    m_operation_ids = operation_ids;
    m_operation_ids_isSet = true;
}

bool OAIRollbackFhirResourceFilteringFields::is_operation_ids_Set() const{
    return m_operation_ids_isSet;
}

bool OAIRollbackFhirResourceFilteringFields::is_operation_ids_Valid() const{
    return m_operation_ids_isValid;
}

bool OAIRollbackFhirResourceFilteringFields::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metadata_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRollbackFhirResourceFilteringFields::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
