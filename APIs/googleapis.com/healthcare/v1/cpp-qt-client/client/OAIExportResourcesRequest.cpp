/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExportResourcesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExportResourcesRequest::OAIExportResourcesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExportResourcesRequest::OAIExportResourcesRequest() {
    this->initializeModel();
}

OAIExportResourcesRequest::~OAIExportResourcesRequest() {}

void OAIExportResourcesRequest::initializeModel() {

    m__since_isSet = false;
    m__since_isValid = false;

    m__type_isSet = false;
    m__type_isValid = false;

    m_bigquery_destination_isSet = false;
    m_bigquery_destination_isValid = false;

    m_gcs_destination_isSet = false;
    m_gcs_destination_isValid = false;
}

void OAIExportResourcesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExportResourcesRequest::fromJsonObject(QJsonObject json) {

    m__since_isValid = ::OpenAPI::fromJsonValue(m__since, json[QString("_since")]);
    m__since_isSet = !json[QString("_since")].isNull() && m__since_isValid;

    m__type_isValid = ::OpenAPI::fromJsonValue(m__type, json[QString("_type")]);
    m__type_isSet = !json[QString("_type")].isNull() && m__type_isValid;

    m_bigquery_destination_isValid = ::OpenAPI::fromJsonValue(m_bigquery_destination, json[QString("bigqueryDestination")]);
    m_bigquery_destination_isSet = !json[QString("bigqueryDestination")].isNull() && m_bigquery_destination_isValid;

    m_gcs_destination_isValid = ::OpenAPI::fromJsonValue(m_gcs_destination, json[QString("gcsDestination")]);
    m_gcs_destination_isSet = !json[QString("gcsDestination")].isNull() && m_gcs_destination_isValid;
}

QString OAIExportResourcesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExportResourcesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m__since_isSet) {
        obj.insert(QString("_since"), ::OpenAPI::toJsonValue(m__since));
    }
    if (m__type_isSet) {
        obj.insert(QString("_type"), ::OpenAPI::toJsonValue(m__type));
    }
    if (m_bigquery_destination.isSet()) {
        obj.insert(QString("bigqueryDestination"), ::OpenAPI::toJsonValue(m_bigquery_destination));
    }
    if (m_gcs_destination.isSet()) {
        obj.insert(QString("gcsDestination"), ::OpenAPI::toJsonValue(m_gcs_destination));
    }
    return obj;
}

QString OAIExportResourcesRequest::getSince() const {
    return m__since;
}
void OAIExportResourcesRequest::setSince(const QString &_since) {
    m__since = _since;
    m__since_isSet = true;
}

bool OAIExportResourcesRequest::is__since_Set() const{
    return m__since_isSet;
}

bool OAIExportResourcesRequest::is__since_Valid() const{
    return m__since_isValid;
}

QString OAIExportResourcesRequest::getType() const {
    return m__type;
}
void OAIExportResourcesRequest::setType(const QString &_type) {
    m__type = _type;
    m__type_isSet = true;
}

bool OAIExportResourcesRequest::is__type_Set() const{
    return m__type_isSet;
}

bool OAIExportResourcesRequest::is__type_Valid() const{
    return m__type_isValid;
}

OAIGoogleCloudHealthcareV1FhirBigQueryDestination OAIExportResourcesRequest::getBigqueryDestination() const {
    return m_bigquery_destination;
}
void OAIExportResourcesRequest::setBigqueryDestination(const OAIGoogleCloudHealthcareV1FhirBigQueryDestination &bigquery_destination) {
    m_bigquery_destination = bigquery_destination;
    m_bigquery_destination_isSet = true;
}

bool OAIExportResourcesRequest::is_bigquery_destination_Set() const{
    return m_bigquery_destination_isSet;
}

bool OAIExportResourcesRequest::is_bigquery_destination_Valid() const{
    return m_bigquery_destination_isValid;
}

OAIGoogleCloudHealthcareV1FhirGcsDestination OAIExportResourcesRequest::getGcsDestination() const {
    return m_gcs_destination;
}
void OAIExportResourcesRequest::setGcsDestination(const OAIGoogleCloudHealthcareV1FhirGcsDestination &gcs_destination) {
    m_gcs_destination = gcs_destination;
    m_gcs_destination_isSet = true;
}

bool OAIExportResourcesRequest::is_gcs_destination_Set() const{
    return m_gcs_destination_isSet;
}

bool OAIExportResourcesRequest::is_gcs_destination_Valid() const{
    return m_gcs_destination_isValid;
}

bool OAIExportResourcesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__since_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m__type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bigquery_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExportResourcesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
