/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInfoTypeTransformation.h
 *
 * A transformation to apply to text that is identified as a specific info_type.
 */

#ifndef OAIInfoTypeTransformation_H
#define OAIInfoTypeTransformation_H

#include <QJsonObject>

#include "OAICharacterMaskConfig.h"
#include "OAICryptoHashConfig.h"
#include "OAIDateShiftConfig.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICharacterMaskConfig;
class OAICryptoHashConfig;
class OAIDateShiftConfig;

class OAIInfoTypeTransformation : public OAIObject {
public:
    OAIInfoTypeTransformation();
    OAIInfoTypeTransformation(QString json);
    ~OAIInfoTypeTransformation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICharacterMaskConfig getCharacterMaskConfig() const;
    void setCharacterMaskConfig(const OAICharacterMaskConfig &character_mask_config);
    bool is_character_mask_config_Set() const;
    bool is_character_mask_config_Valid() const;

    OAICryptoHashConfig getCryptoHashConfig() const;
    void setCryptoHashConfig(const OAICryptoHashConfig &crypto_hash_config);
    bool is_crypto_hash_config_Set() const;
    bool is_crypto_hash_config_Valid() const;

    OAIDateShiftConfig getDateShiftConfig() const;
    void setDateShiftConfig(const OAIDateShiftConfig &date_shift_config);
    bool is_date_shift_config_Set() const;
    bool is_date_shift_config_Valid() const;

    QList<QString> getInfoTypes() const;
    void setInfoTypes(const QList<QString> &info_types);
    bool is_info_types_Set() const;
    bool is_info_types_Valid() const;

    OAIObject getRedactConfig() const;
    void setRedactConfig(const OAIObject &redact_config);
    bool is_redact_config_Set() const;
    bool is_redact_config_Valid() const;

    OAIObject getReplaceWithInfoTypeConfig() const;
    void setReplaceWithInfoTypeConfig(const OAIObject &replace_with_info_type_config);
    bool is_replace_with_info_type_config_Set() const;
    bool is_replace_with_info_type_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICharacterMaskConfig m_character_mask_config;
    bool m_character_mask_config_isSet;
    bool m_character_mask_config_isValid;

    OAICryptoHashConfig m_crypto_hash_config;
    bool m_crypto_hash_config_isSet;
    bool m_crypto_hash_config_isValid;

    OAIDateShiftConfig m_date_shift_config;
    bool m_date_shift_config_isSet;
    bool m_date_shift_config_isValid;

    QList<QString> m_info_types;
    bool m_info_types_isSet;
    bool m_info_types_isValid;

    OAIObject m_redact_config;
    bool m_redact_config_isSet;
    bool m_redact_config_isValid;

    OAIObject m_replace_with_info_type_config;
    bool m_replace_with_info_type_config_isSet;
    bool m_replace_with_info_type_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInfoTypeTransformation)

#endif // OAIInfoTypeTransformation_H
