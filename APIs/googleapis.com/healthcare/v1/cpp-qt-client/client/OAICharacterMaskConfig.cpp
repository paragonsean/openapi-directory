/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICharacterMaskConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICharacterMaskConfig::OAICharacterMaskConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICharacterMaskConfig::OAICharacterMaskConfig() {
    this->initializeModel();
}

OAICharacterMaskConfig::~OAICharacterMaskConfig() {}

void OAICharacterMaskConfig::initializeModel() {

    m_masking_character_isSet = false;
    m_masking_character_isValid = false;
}

void OAICharacterMaskConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICharacterMaskConfig::fromJsonObject(QJsonObject json) {

    m_masking_character_isValid = ::OpenAPI::fromJsonValue(m_masking_character, json[QString("maskingCharacter")]);
    m_masking_character_isSet = !json[QString("maskingCharacter")].isNull() && m_masking_character_isValid;
}

QString OAICharacterMaskConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICharacterMaskConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_masking_character_isSet) {
        obj.insert(QString("maskingCharacter"), ::OpenAPI::toJsonValue(m_masking_character));
    }
    return obj;
}

QString OAICharacterMaskConfig::getMaskingCharacter() const {
    return m_masking_character;
}
void OAICharacterMaskConfig::setMaskingCharacter(const QString &masking_character) {
    m_masking_character = masking_character;
    m_masking_character_isSet = true;
}

bool OAICharacterMaskConfig::is_masking_character_Set() const{
    return m_masking_character_isSet;
}

bool OAICharacterMaskConfig::is_masking_character_Valid() const{
    return m_masking_character_isValid;
}

bool OAICharacterMaskConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_masking_character_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICharacterMaskConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
