/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHl7V2Store.h
 *
 * Represents an HL7v2 store.
 */

#ifndef OAIHl7V2Store_H
#define OAIHl7V2Store_H

#include <QJsonObject>

#include "OAIHl7V2NotificationConfig.h"
#include "OAIParserConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHl7V2NotificationConfig;
class OAIParserConfig;

class OAIHl7V2Store : public OAIObject {
public:
    OAIHl7V2Store();
    OAIHl7V2Store(QString json);
    ~OAIHl7V2Store() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIHl7V2NotificationConfig> getNotificationConfigs() const;
    void setNotificationConfigs(const QList<OAIHl7V2NotificationConfig> &notification_configs);
    bool is_notification_configs_Set() const;
    bool is_notification_configs_Valid() const;

    OAIParserConfig getParserConfig() const;
    void setParserConfig(const OAIParserConfig &parser_config);
    bool is_parser_config_Set() const;
    bool is_parser_config_Valid() const;

    bool isRejectDuplicateMessage() const;
    void setRejectDuplicateMessage(const bool &reject_duplicate_message);
    bool is_reject_duplicate_message_Set() const;
    bool is_reject_duplicate_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIHl7V2NotificationConfig> m_notification_configs;
    bool m_notification_configs_isSet;
    bool m_notification_configs_isValid;

    OAIParserConfig m_parser_config;
    bool m_parser_config_isSet;
    bool m_parser_config_isValid;

    bool m_reject_duplicate_message;
    bool m_reject_duplicate_message_isSet;
    bool m_reject_duplicate_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHl7V2Store)

#endif // OAIHl7V2Store_H
