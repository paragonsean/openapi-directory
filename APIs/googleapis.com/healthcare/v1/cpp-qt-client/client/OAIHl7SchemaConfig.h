/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHl7SchemaConfig.h
 *
 * Root config message for HL7v2 schema. This contains a schema structure of groups and segments, and filters that determine which messages to apply the schema structure to.
 */

#ifndef OAIHl7SchemaConfig_H
#define OAIHl7SchemaConfig_H

#include <QJsonObject>

#include "OAISchemaGroup.h"
#include "OAIVersionSource.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISchemaGroup;
class OAIVersionSource;

class OAIHl7SchemaConfig : public OAIObject {
public:
    OAIHl7SchemaConfig();
    OAIHl7SchemaConfig(QString json);
    ~OAIHl7SchemaConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAISchemaGroup> getMessageSchemaConfigs() const;
    void setMessageSchemaConfigs(const QMap<QString, OAISchemaGroup> &message_schema_configs);
    bool is_message_schema_configs_Set() const;
    bool is_message_schema_configs_Valid() const;

    QList<OAIVersionSource> getVersion() const;
    void setVersion(const QList<OAIVersionSource> &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAISchemaGroup> m_message_schema_configs;
    bool m_message_schema_configs_isSet;
    bool m_message_schema_configs_isValid;

    QList<OAIVersionSource> m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHl7SchemaConfig)

#endif // OAIHl7SchemaConfig_H
