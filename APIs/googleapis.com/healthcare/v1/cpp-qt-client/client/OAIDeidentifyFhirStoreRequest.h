/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeidentifyFhirStoreRequest.h
 *
 * Creates a new FHIR store with sensitive information de-identified.
 */

#ifndef OAIDeidentifyFhirStoreRequest_H
#define OAIDeidentifyFhirStoreRequest_H

#include <QJsonObject>

#include "OAIDeidentifyConfig.h"
#include "OAIFhirFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeidentifyConfig;
class OAIFhirFilter;

class OAIDeidentifyFhirStoreRequest : public OAIObject {
public:
    OAIDeidentifyFhirStoreRequest();
    OAIDeidentifyFhirStoreRequest(QString json);
    ~OAIDeidentifyFhirStoreRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDeidentifyConfig getConfig() const;
    void setConfig(const OAIDeidentifyConfig &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    QString getDestinationStore() const;
    void setDestinationStore(const QString &destination_store);
    bool is_destination_store_Set() const;
    bool is_destination_store_Valid() const;

    QString getGcsConfigUri() const;
    void setGcsConfigUri(const QString &gcs_config_uri);
    bool is_gcs_config_uri_Set() const;
    bool is_gcs_config_uri_Valid() const;

    OAIFhirFilter getResourceFilter() const;
    void setResourceFilter(const OAIFhirFilter &resource_filter);
    bool is_resource_filter_Set() const;
    bool is_resource_filter_Valid() const;

    bool isSkipModifiedResources() const;
    void setSkipModifiedResources(const bool &skip_modified_resources);
    bool is_skip_modified_resources_Set() const;
    bool is_skip_modified_resources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDeidentifyConfig m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    QString m_destination_store;
    bool m_destination_store_isSet;
    bool m_destination_store_isValid;

    QString m_gcs_config_uri;
    bool m_gcs_config_uri_isSet;
    bool m_gcs_config_uri_isValid;

    OAIFhirFilter m_resource_filter;
    bool m_resource_filter_isSet;
    bool m_resource_filter_isValid;

    bool m_skip_modified_resources;
    bool m_skip_modified_resources_isSet;
    bool m_skip_modified_resources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeidentifyFhirStoreRequest)

#endif // OAIDeidentifyFhirStoreRequest_H
