/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeidentifyConfig.h
 *
 * Configures de-id options specific to different types of content. Each submessage customizes the handling of an https://tools.ietf.org/html/rfc6838 media type or subtype. Configs are applied in a nested manner at runtime.
 */

#ifndef OAIDeidentifyConfig_H
#define OAIDeidentifyConfig_H

#include <QJsonObject>

#include "OAIDicomConfig.h"
#include "OAIFhirConfig.h"
#include "OAIImageConfig.h"
#include "OAITextConfig.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDicomConfig;
class OAIFhirConfig;
class OAIImageConfig;
class OAITextConfig;

class OAIDeidentifyConfig : public OAIObject {
public:
    OAIDeidentifyConfig();
    OAIDeidentifyConfig(QString json);
    ~OAIDeidentifyConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDicomConfig getDicom() const;
    void setDicom(const OAIDicomConfig &dicom);
    bool is_dicom_Set() const;
    bool is_dicom_Valid() const;

    OAIFhirConfig getFhir() const;
    void setFhir(const OAIFhirConfig &fhir);
    bool is_fhir_Set() const;
    bool is_fhir_Valid() const;

    OAIImageConfig getImage() const;
    void setImage(const OAIImageConfig &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    OAITextConfig getText() const;
    void setText(const OAITextConfig &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    bool isUseRegionalDataProcessing() const;
    void setUseRegionalDataProcessing(const bool &use_regional_data_processing);
    bool is_use_regional_data_processing_Set() const;
    bool is_use_regional_data_processing_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDicomConfig m_dicom;
    bool m_dicom_isSet;
    bool m_dicom_isValid;

    OAIFhirConfig m_fhir;
    bool m_fhir_isSet;
    bool m_fhir_isValid;

    OAIImageConfig m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    OAITextConfig m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    bool m_use_regional_data_processing;
    bool m_use_regional_data_processing_isSet;
    bool m_use_regional_data_processing_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeidentifyConfig)

#endif // OAIDeidentifyConfig_H
