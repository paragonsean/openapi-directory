/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalyzeEntitiesRequest.h
 *
 * The request to analyze healthcare entities in a document.
 */

#ifndef OAIAnalyzeEntitiesRequest_H
#define OAIAnalyzeEntitiesRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnalyzeEntitiesRequest : public OAIObject {
public:
    OAIAnalyzeEntitiesRequest();
    OAIAnalyzeEntitiesRequest(QString json);
    ~OAIAnalyzeEntitiesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlternativeOutputFormat() const;
    void setAlternativeOutputFormat(const QString &alternative_output_format);
    bool is_alternative_output_format_Set() const;
    bool is_alternative_output_format_Valid() const;

    QString getDocumentContent() const;
    void setDocumentContent(const QString &document_content);
    bool is_document_content_Set() const;
    bool is_document_content_Valid() const;

    QList<QString> getLicensedVocabularies() const;
    void setLicensedVocabularies(const QList<QString> &licensed_vocabularies);
    bool is_licensed_vocabularies_Set() const;
    bool is_licensed_vocabularies_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alternative_output_format;
    bool m_alternative_output_format_isSet;
    bool m_alternative_output_format_isValid;

    QString m_document_content;
    bool m_document_content_isSet;
    bool m_document_content_isValid;

    QList<QString> m_licensed_vocabularies;
    bool m_licensed_vocabularies_isSet;
    bool m_licensed_vocabularies_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalyzeEntitiesRequest)

#endif // OAIAnalyzeEntitiesRequest_H
