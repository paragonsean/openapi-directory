/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessage.h
 *
 * A complete HL7v2 message. See [Introduction to HL7 Standards] (https://www.hl7.org/implement/standards/index.cfm?ref&#x3D;common) for details on the standard.
 */

#ifndef OAIMessage_H
#define OAIMessage_H

#include <QJsonObject>

#include "OAIParsedData.h"
#include "OAIPatientId.h"
#include "OAISchematizedData.h"
#include <QByteArray>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParsedData;
class OAIPatientId;
class OAISchematizedData;

class OAIMessage : public OAIObject {
public:
    OAIMessage();
    OAIMessage(QString json);
    ~OAIMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QByteArray getData() const;
    void setData(const QByteArray &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getMessageType() const;
    void setMessageType(const QString &message_type);
    bool is_message_type_Set() const;
    bool is_message_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIParsedData getParsedData() const;
    void setParsedData(const OAIParsedData &parsed_data);
    bool is_parsed_data_Set() const;
    bool is_parsed_data_Valid() const;

    QList<OAIPatientId> getPatientIds() const;
    void setPatientIds(const QList<OAIPatientId> &patient_ids);
    bool is_patient_ids_Set() const;
    bool is_patient_ids_Valid() const;

    OAISchematizedData getSchematizedData() const;
    void setSchematizedData(const OAISchematizedData &schematized_data);
    bool is_schematized_data_Set() const;
    bool is_schematized_data_Valid() const;

    QString getSendFacility() const;
    void setSendFacility(const QString &send_facility);
    bool is_send_facility_Set() const;
    bool is_send_facility_Valid() const;

    QString getSendTime() const;
    void setSendTime(const QString &send_time);
    bool is_send_time_Set() const;
    bool is_send_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QByteArray m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_message_type;
    bool m_message_type_isSet;
    bool m_message_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIParsedData m_parsed_data;
    bool m_parsed_data_isSet;
    bool m_parsed_data_isValid;

    QList<OAIPatientId> m_patient_ids;
    bool m_patient_ids_isSet;
    bool m_patient_ids_isValid;

    OAISchematizedData m_schematized_data;
    bool m_schematized_data_isSet;
    bool m_schematized_data_isValid;

    QString m_send_facility;
    bool m_send_facility_isSet;
    bool m_send_facility_isValid;

    QString m_send_time;
    bool m_send_time_isSet;
    bool m_send_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessage)

#endif // OAIMessage_H
