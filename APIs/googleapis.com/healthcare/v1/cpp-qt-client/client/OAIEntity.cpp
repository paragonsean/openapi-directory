/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntity::OAIEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntity::OAIEntity() {
    this->initializeModel();
}

OAIEntity::~OAIEntity() {}

void OAIEntity::initializeModel() {

    m_entity_id_isSet = false;
    m_entity_id_isValid = false;

    m_preferred_term_isSet = false;
    m_preferred_term_isValid = false;

    m_vocabulary_codes_isSet = false;
    m_vocabulary_codes_isValid = false;
}

void OAIEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEntity::fromJsonObject(QJsonObject json) {

    m_entity_id_isValid = ::OpenAPI::fromJsonValue(m_entity_id, json[QString("entityId")]);
    m_entity_id_isSet = !json[QString("entityId")].isNull() && m_entity_id_isValid;

    m_preferred_term_isValid = ::OpenAPI::fromJsonValue(m_preferred_term, json[QString("preferredTerm")]);
    m_preferred_term_isSet = !json[QString("preferredTerm")].isNull() && m_preferred_term_isValid;

    m_vocabulary_codes_isValid = ::OpenAPI::fromJsonValue(m_vocabulary_codes, json[QString("vocabularyCodes")]);
    m_vocabulary_codes_isSet = !json[QString("vocabularyCodes")].isNull() && m_vocabulary_codes_isValid;
}

QString OAIEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_id_isSet) {
        obj.insert(QString("entityId"), ::OpenAPI::toJsonValue(m_entity_id));
    }
    if (m_preferred_term_isSet) {
        obj.insert(QString("preferredTerm"), ::OpenAPI::toJsonValue(m_preferred_term));
    }
    if (m_vocabulary_codes.size() > 0) {
        obj.insert(QString("vocabularyCodes"), ::OpenAPI::toJsonValue(m_vocabulary_codes));
    }
    return obj;
}

QString OAIEntity::getEntityId() const {
    return m_entity_id;
}
void OAIEntity::setEntityId(const QString &entity_id) {
    m_entity_id = entity_id;
    m_entity_id_isSet = true;
}

bool OAIEntity::is_entity_id_Set() const{
    return m_entity_id_isSet;
}

bool OAIEntity::is_entity_id_Valid() const{
    return m_entity_id_isValid;
}

QString OAIEntity::getPreferredTerm() const {
    return m_preferred_term;
}
void OAIEntity::setPreferredTerm(const QString &preferred_term) {
    m_preferred_term = preferred_term;
    m_preferred_term_isSet = true;
}

bool OAIEntity::is_preferred_term_Set() const{
    return m_preferred_term_isSet;
}

bool OAIEntity::is_preferred_term_Valid() const{
    return m_preferred_term_isValid;
}

QList<QString> OAIEntity::getVocabularyCodes() const {
    return m_vocabulary_codes;
}
void OAIEntity::setVocabularyCodes(const QList<QString> &vocabulary_codes) {
    m_vocabulary_codes = vocabulary_codes;
    m_vocabulary_codes_isSet = true;
}

bool OAIEntity::is_vocabulary_codes_Set() const{
    return m_vocabulary_codes_isSet;
}

bool OAIEntity::is_vocabulary_codes_Valid() const{
    return m_vocabulary_codes_isValid;
}

bool OAIEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preferred_term_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vocabulary_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
