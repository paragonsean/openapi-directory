/**
 * Cloud Healthcare API
 * Manage, store, and access healthcare data in Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKmsWrappedCryptoKey.h
 *
 * Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. The key must grant the Cloud IAM permission &#x60;cloudkms.cryptoKeyVersions.useToDecrypt&#x60; to the project&#39;s Cloud Healthcare Service Agent service account. For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key).
 */

#ifndef OAIKmsWrappedCryptoKey_H
#define OAIKmsWrappedCryptoKey_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKmsWrappedCryptoKey : public OAIObject {
public:
    OAIKmsWrappedCryptoKey();
    OAIKmsWrappedCryptoKey(QString json);
    ~OAIKmsWrappedCryptoKey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCryptoKey() const;
    void setCryptoKey(const QString &crypto_key);
    bool is_crypto_key_Set() const;
    bool is_crypto_key_Valid() const;

    QByteArray getWrappedKey() const;
    void setWrappedKey(const QByteArray &wrapped_key);
    bool is_wrapped_key_Set() const;
    bool is_wrapped_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_crypto_key;
    bool m_crypto_key_isSet;
    bool m_crypto_key_isValid;

    QByteArray m_wrapped_key;
    bool m_wrapped_key_isSet;
    bool m_wrapped_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKmsWrappedCryptoKey)

#endif // OAIKmsWrappedCryptoKey_H
