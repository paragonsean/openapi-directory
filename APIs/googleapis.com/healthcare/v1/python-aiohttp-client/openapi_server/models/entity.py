# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Entity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: str=None, preferred_term: str=None, vocabulary_codes: List[str]=None):
        """Entity - a model defined in OpenAPI

        :param entity_id: The entity_id of this Entity.
        :param preferred_term: The preferred_term of this Entity.
        :param vocabulary_codes: The vocabulary_codes of this Entity.
        """
        self.openapi_types = {
            'entity_id': str,
            'preferred_term': str,
            'vocabulary_codes': List[str]
        }

        self.attribute_map = {
            'entity_id': 'entityId',
            'preferred_term': 'preferredTerm',
            'vocabulary_codes': 'vocabularyCodes'
        }

        self._entity_id = entity_id
        self._preferred_term = preferred_term
        self._vocabulary_codes = vocabulary_codes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Entity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Entity of this Entity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this Entity.

        entity_id is a first class field entity_id uniquely identifies this concept and its meta-vocabulary. For example, \"UMLS/C0000970\".

        :return: The entity_id of this Entity.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this Entity.

        entity_id is a first class field entity_id uniquely identifies this concept and its meta-vocabulary. For example, \"UMLS/C0000970\".

        :param entity_id: The entity_id of this Entity.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def preferred_term(self):
        """Gets the preferred_term of this Entity.

        preferred_term is the preferred term for this concept. For example, \"Acetaminophen\". For ad hoc entities formed by normalization, this is the most popular unnormalized string.

        :return: The preferred_term of this Entity.
        :rtype: str
        """
        return self._preferred_term

    @preferred_term.setter
    def preferred_term(self, preferred_term):
        """Sets the preferred_term of this Entity.

        preferred_term is the preferred term for this concept. For example, \"Acetaminophen\". For ad hoc entities formed by normalization, this is the most popular unnormalized string.

        :param preferred_term: The preferred_term of this Entity.
        :type preferred_term: str
        """

        self._preferred_term = preferred_term

    @property
    def vocabulary_codes(self):
        """Gets the vocabulary_codes of this Entity.

        Vocabulary codes are first-class fields and differentiated from the concept unique identifier (entity_id). vocabulary_codes contains the representation of this concept in particular vocabularies, such as ICD-10, SNOMED-CT and RxNORM. These are prefixed by the name of the vocabulary, followed by the unique code within that vocabulary. For example, \"RXNORM/A10334543\".

        :return: The vocabulary_codes of this Entity.
        :rtype: List[str]
        """
        return self._vocabulary_codes

    @vocabulary_codes.setter
    def vocabulary_codes(self, vocabulary_codes):
        """Sets the vocabulary_codes of this Entity.

        Vocabulary codes are first-class fields and differentiated from the concept unique identifier (entity_id). vocabulary_codes contains the representation of this concept in particular vocabularies, such as ICD-10, SNOMED-CT and RxNORM. These are prefixed by the name of the vocabulary, followed by the unique code within that vocabulary. For example, \"RXNORM/A10334543\".

        :param vocabulary_codes: The vocabulary_codes of this Entity.
        :type vocabulary_codes: List[str]
        """

        self._vocabulary_codes = vocabulary_codes
