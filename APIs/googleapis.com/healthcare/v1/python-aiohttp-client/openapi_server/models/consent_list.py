# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConsentList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consents: List[str]=None):
        """ConsentList - a model defined in OpenAPI

        :param consents: The consents of this ConsentList.
        """
        self.openapi_types = {
            'consents': List[str]
        }

        self.attribute_map = {
            'consents': 'consents'
        }

        self._consents = consents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConsentList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConsentList of this ConsentList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consents(self):
        """Gets the consents of this ConsentList.

        The resource names of the Consents to evaluate against, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.

        :return: The consents of this ConsentList.
        :rtype: List[str]
        """
        return self._consents

    @consents.setter
    def consents(self, consents):
        """Sets the consents of this ConsentList.

        The resource names of the Consents to evaluate against, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.

        :param consents: The consents of this ConsentList.
        :type consents: List[str]
        """

        self._consents = consents
