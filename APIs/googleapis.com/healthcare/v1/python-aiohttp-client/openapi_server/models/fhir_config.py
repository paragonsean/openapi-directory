# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_metadata import FieldMetadata
from openapi_server import util


class FhirConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_keep_extensions: bool=None, field_metadata_list: List[FieldMetadata]=None):
        """FhirConfig - a model defined in OpenAPI

        :param default_keep_extensions: The default_keep_extensions of this FhirConfig.
        :param field_metadata_list: The field_metadata_list of this FhirConfig.
        """
        self.openapi_types = {
            'default_keep_extensions': bool,
            'field_metadata_list': List[FieldMetadata]
        }

        self.attribute_map = {
            'default_keep_extensions': 'defaultKeepExtensions',
            'field_metadata_list': 'fieldMetadataList'
        }

        self._default_keep_extensions = default_keep_extensions
        self._field_metadata_list = field_metadata_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FhirConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FhirConfig of this FhirConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_keep_extensions(self):
        """Gets the default_keep_extensions of this FhirConfig.

        The behaviour for handling FHIR extensions that aren't otherwise specified for de-identification. If true, all extensions are preserved during de-identification by default. If false or unspecified, all extensions are removed during de-identification by default.

        :return: The default_keep_extensions of this FhirConfig.
        :rtype: bool
        """
        return self._default_keep_extensions

    @default_keep_extensions.setter
    def default_keep_extensions(self, default_keep_extensions):
        """Sets the default_keep_extensions of this FhirConfig.

        The behaviour for handling FHIR extensions that aren't otherwise specified for de-identification. If true, all extensions are preserved during de-identification by default. If false or unspecified, all extensions are removed during de-identification by default.

        :param default_keep_extensions: The default_keep_extensions of this FhirConfig.
        :type default_keep_extensions: bool
        """

        self._default_keep_extensions = default_keep_extensions

    @property
    def field_metadata_list(self):
        """Gets the field_metadata_list of this FhirConfig.

        Specifies FHIR paths to match and how to transform them. Any field that is not matched by a FieldMetadata is passed through to the output dataset unmodified. All extensions will be processed according to `default_keep_extensions`.

        :return: The field_metadata_list of this FhirConfig.
        :rtype: List[FieldMetadata]
        """
        return self._field_metadata_list

    @field_metadata_list.setter
    def field_metadata_list(self, field_metadata_list):
        """Sets the field_metadata_list of this FhirConfig.

        Specifies FHIR paths to match and how to transform them. Any field that is not matched by a FieldMetadata is passed through to the output dataset unmodified. All extensions will be processed according to `default_keep_extensions`.

        :param field_metadata_list: The field_metadata_list of this FhirConfig.
        :type field_metadata_list: List[FieldMetadata]
        """

        self._field_metadata_list = field_metadata_list
