# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deidentify_config import DeidentifyConfig
from openapi_server import util


class DeidentifyDatasetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config: DeidentifyConfig=None, destination_dataset: str=None, gcs_config_uri: str=None):
        """DeidentifyDatasetRequest - a model defined in OpenAPI

        :param config: The config of this DeidentifyDatasetRequest.
        :param destination_dataset: The destination_dataset of this DeidentifyDatasetRequest.
        :param gcs_config_uri: The gcs_config_uri of this DeidentifyDatasetRequest.
        """
        self.openapi_types = {
            'config': DeidentifyConfig,
            'destination_dataset': str,
            'gcs_config_uri': str
        }

        self.attribute_map = {
            'config': 'config',
            'destination_dataset': 'destinationDataset',
            'gcs_config_uri': 'gcsConfigUri'
        }

        self._config = config
        self._destination_dataset = destination_dataset
        self._gcs_config_uri = gcs_config_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeidentifyDatasetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeidentifyDatasetRequest of this DeidentifyDatasetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this DeidentifyDatasetRequest.


        :return: The config of this DeidentifyDatasetRequest.
        :rtype: DeidentifyConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this DeidentifyDatasetRequest.


        :param config: The config of this DeidentifyDatasetRequest.
        :type config: DeidentifyConfig
        """

        self._config = config

    @property
    def destination_dataset(self):
        """Gets the destination_dataset of this DeidentifyDatasetRequest.

        Required. The name of the dataset resource to create and write the redacted data to. * The destination dataset must not exist. * The destination dataset must be in the same location as the source dataset. De-identifying data across multiple locations is not supported.

        :return: The destination_dataset of this DeidentifyDatasetRequest.
        :rtype: str
        """
        return self._destination_dataset

    @destination_dataset.setter
    def destination_dataset(self, destination_dataset):
        """Sets the destination_dataset of this DeidentifyDatasetRequest.

        Required. The name of the dataset resource to create and write the redacted data to. * The destination dataset must not exist. * The destination dataset must be in the same location as the source dataset. De-identifying data across multiple locations is not supported.

        :param destination_dataset: The destination_dataset of this DeidentifyDatasetRequest.
        :type destination_dataset: str
        """

        self._destination_dataset = destination_dataset

    @property
    def gcs_config_uri(self):
        """Gets the gcs_config_uri of this DeidentifyDatasetRequest.

        Cloud Storage location to read the JSON cloud.healthcare.deidentify.DeidentifyConfig from, overriding the default config. Must be of the form `gs://{bucket_id}/path/to/object`. The Cloud Storage location must grant the Cloud IAM role `roles/storage.objectViewer` to the project's Cloud Healthcare Service Agent service account. Only one of `config` and `gcs_config_uri` can be specified.

        :return: The gcs_config_uri of this DeidentifyDatasetRequest.
        :rtype: str
        """
        return self._gcs_config_uri

    @gcs_config_uri.setter
    def gcs_config_uri(self, gcs_config_uri):
        """Sets the gcs_config_uri of this DeidentifyDatasetRequest.

        Cloud Storage location to read the JSON cloud.healthcare.deidentify.DeidentifyConfig from, overriding the default config. Must be of the form `gs://{bucket_id}/path/to/object`. The Cloud Storage location must grant the Cloud IAM role `roles/storage.objectViewer` to the project's Cloud Healthcare Service Agent service account. Only one of `config` and `gcs_config_uri` can be specified.

        :param gcs_config_uri: The gcs_config_uri of this DeidentifyDatasetRequest.
        :type gcs_config_uri: str
        """

        self._gcs_config_uri = gcs_config_uri
