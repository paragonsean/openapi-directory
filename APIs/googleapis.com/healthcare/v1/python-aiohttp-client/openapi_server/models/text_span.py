# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TextSpan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin_offset: int=None, content: str=None):
        """TextSpan - a model defined in OpenAPI

        :param begin_offset: The begin_offset of this TextSpan.
        :param content: The content of this TextSpan.
        """
        self.openapi_types = {
            'begin_offset': int,
            'content': str
        }

        self.attribute_map = {
            'begin_offset': 'beginOffset',
            'content': 'content'
        }

        self._begin_offset = begin_offset
        self._content = content

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextSpan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextSpan of this TextSpan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin_offset(self):
        """Gets the begin_offset of this TextSpan.

        The unicode codepoint index of the beginning of this span.

        :return: The begin_offset of this TextSpan.
        :rtype: int
        """
        return self._begin_offset

    @begin_offset.setter
    def begin_offset(self, begin_offset):
        """Sets the begin_offset of this TextSpan.

        The unicode codepoint index of the beginning of this span.

        :param begin_offset: The begin_offset of this TextSpan.
        :type begin_offset: int
        """

        self._begin_offset = begin_offset

    @property
    def content(self):
        """Gets the content of this TextSpan.

        The original text contained in this span.

        :return: The content of this TextSpan.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this TextSpan.

        The original text contained in this span.

        :param content: The content of this TextSpan.
        :type content: str
        """

        self._content = content
