# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Feature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence: float=None, value: str=None):
        """Feature - a model defined in OpenAPI

        :param confidence: The confidence of this Feature.
        :param value: The value of this Feature.
        """
        self.openapi_types = {
            'confidence': float,
            'value': str
        }

        self.attribute_map = {
            'confidence': 'confidence',
            'value': 'value'
        }

        self._confidence = confidence
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Feature':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Feature of this Feature.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence(self):
        """Gets the confidence of this Feature.

        The model's confidence in this feature annotation. A number between 0 and 1.

        :return: The confidence of this Feature.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this Feature.

        The model's confidence in this feature annotation. A number between 0 and 1.

        :param confidence: The confidence of this Feature.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def value(self):
        """Gets the value of this Feature.

        The value of this feature annotation. Its range depends on the type of the feature.

        :return: The value of this Feature.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Feature.

        The value of this feature annotation. Its range depends on the type of the feature.

        :param value: The value of this Feature.
        :type value: str
        """

        self._value = value
