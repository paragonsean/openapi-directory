# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dicom_store import DicomStore
from openapi_server import util


class ListDicomStoresResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dicom_stores: List[DicomStore]=None, next_page_token: str=None):
        """ListDicomStoresResponse - a model defined in OpenAPI

        :param dicom_stores: The dicom_stores of this ListDicomStoresResponse.
        :param next_page_token: The next_page_token of this ListDicomStoresResponse.
        """
        self.openapi_types = {
            'dicom_stores': List[DicomStore],
            'next_page_token': str
        }

        self.attribute_map = {
            'dicom_stores': 'dicomStores',
            'next_page_token': 'nextPageToken'
        }

        self._dicom_stores = dicom_stores
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDicomStoresResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDicomStoresResponse of this ListDicomStoresResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dicom_stores(self):
        """Gets the dicom_stores of this ListDicomStoresResponse.

        The returned DICOM stores. Won't be more DICOM stores than the value of page_size in the request.

        :return: The dicom_stores of this ListDicomStoresResponse.
        :rtype: List[DicomStore]
        """
        return self._dicom_stores

    @dicom_stores.setter
    def dicom_stores(self, dicom_stores):
        """Sets the dicom_stores of this ListDicomStoresResponse.

        The returned DICOM stores. Won't be more DICOM stores than the value of page_size in the request.

        :param dicom_stores: The dicom_stores of this ListDicomStoresResponse.
        :type dicom_stores: List[DicomStore]
        """

        self._dicom_stores = dicom_stores

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListDicomStoresResponse.

        Token to retrieve the next page of results or empty if there are no more results in the list.

        :return: The next_page_token of this ListDicomStoresResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListDicomStoresResponse.

        Token to retrieve the next page of results or empty if there are no more results in the list.

        :param next_page_token: The next_page_token of this ListDicomStoresResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
