# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GcsDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_structure: str=None, message_view: str=None, uri_prefix: str=None):
        """GcsDestination - a model defined in OpenAPI

        :param content_structure: The content_structure of this GcsDestination.
        :param message_view: The message_view of this GcsDestination.
        :param uri_prefix: The uri_prefix of this GcsDestination.
        """
        self.openapi_types = {
            'content_structure': str,
            'message_view': str,
            'uri_prefix': str
        }

        self.attribute_map = {
            'content_structure': 'contentStructure',
            'message_view': 'messageView',
            'uri_prefix': 'uriPrefix'
        }

        self._content_structure = content_structure
        self._message_view = message_view
        self._uri_prefix = uri_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GcsDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GcsDestination of this GcsDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_structure(self):
        """Gets the content_structure of this GcsDestination.

        The format of the exported HL7v2 message files.

        :return: The content_structure of this GcsDestination.
        :rtype: str
        """
        return self._content_structure

    @content_structure.setter
    def content_structure(self, content_structure):
        """Sets the content_structure of this GcsDestination.

        The format of the exported HL7v2 message files.

        :param content_structure: The content_structure of this GcsDestination.
        :type content_structure: str
        """
        allowed_values = ["CONTENT_STRUCTURE_UNSPECIFIED", "MESSAGE_JSON"]  # noqa: E501
        if content_structure not in allowed_values:
            raise ValueError(
                "Invalid value for `content_structure` ({0}), must be one of {1}"
                .format(content_structure, allowed_values)
            )

        self._content_structure = content_structure

    @property
    def message_view(self):
        """Gets the message_view of this GcsDestination.

        Specifies the parts of the Message resource to include in the export. If not specified, FULL is used.

        :return: The message_view of this GcsDestination.
        :rtype: str
        """
        return self._message_view

    @message_view.setter
    def message_view(self, message_view):
        """Sets the message_view of this GcsDestination.

        Specifies the parts of the Message resource to include in the export. If not specified, FULL is used.

        :param message_view: The message_view of this GcsDestination.
        :type message_view: str
        """
        allowed_values = ["MESSAGE_VIEW_UNSPECIFIED", "RAW_ONLY", "PARSED_ONLY", "FULL", "SCHEMATIZED_ONLY", "BASIC"]  # noqa: E501
        if message_view not in allowed_values:
            raise ValueError(
                "Invalid value for `message_view` ({0}), must be one of {1}"
                .format(message_view, allowed_values)
            )

        self._message_view = message_view

    @property
    def uri_prefix(self):
        """Gets the uri_prefix of this GcsDestination.

        URI of an existing Cloud Storage directory where the server writes result files, in the format `gs://{bucket-id}/{path/to/destination/dir}`. If there is no trailing slash, the service appends one when composing the object path.

        :return: The uri_prefix of this GcsDestination.
        :rtype: str
        """
        return self._uri_prefix

    @uri_prefix.setter
    def uri_prefix(self, uri_prefix):
        """Sets the uri_prefix of this GcsDestination.

        URI of an existing Cloud Storage directory where the server writes result files, in the format `gs://{bucket-id}/{path/to/destination/dir}`. If there is no trailing slash, the service appends one when composing the object path.

        :param uri_prefix: The uri_prefix of this GcsDestination.
        :type uri_prefix: str
        """

        self._uri_prefix = uri_prefix
