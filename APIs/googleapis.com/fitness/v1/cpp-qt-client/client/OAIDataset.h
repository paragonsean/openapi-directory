/**
 * Fitness API
 * The Fitness API for managing users' fitness tracking data.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataset.h
 *
 * A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.
 */

#ifndef OAIDataset_H
#define OAIDataset_H

#include <QJsonObject>

#include "OAIDataPoint.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataPoint;

class OAIDataset : public OAIObject {
public:
    OAIDataset();
    OAIDataset(QString json);
    ~OAIDataset() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSourceId() const;
    void setDataSourceId(const QString &data_source_id);
    bool is_data_source_id_Set() const;
    bool is_data_source_id_Valid() const;

    QString getMaxEndTimeNs() const;
    void setMaxEndTimeNs(const QString &max_end_time_ns);
    bool is_max_end_time_ns_Set() const;
    bool is_max_end_time_ns_Valid() const;

    QString getMinStartTimeNs() const;
    void setMinStartTimeNs(const QString &min_start_time_ns);
    bool is_min_start_time_ns_Set() const;
    bool is_min_start_time_ns_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QList<OAIDataPoint> getPoint() const;
    void setPoint(const QList<OAIDataPoint> &point);
    bool is_point_Set() const;
    bool is_point_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source_id;
    bool m_data_source_id_isSet;
    bool m_data_source_id_isValid;

    QString m_max_end_time_ns;
    bool m_max_end_time_ns_isSet;
    bool m_max_end_time_ns_isValid;

    QString m_min_start_time_ns;
    bool m_min_start_time_ns_isSet;
    bool m_min_start_time_ns_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QList<OAIDataPoint> m_point;
    bool m_point_isSet;
    bool m_point_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataset)

#endif // OAIDataset_H
