/**
 * Fitness API
 * The Fitness API for managing users' fitness tracking data.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataTypeField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataTypeField::OAIDataTypeField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataTypeField::OAIDataTypeField() {
    this->initializeModel();
}

OAIDataTypeField::~OAIDataTypeField() {}

void OAIDataTypeField::initializeModel() {

    m_format_isSet = false;
    m_format_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_optional_isSet = false;
    m_optional_isValid = false;
}

void OAIDataTypeField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataTypeField::fromJsonObject(QJsonObject json) {

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("format")]);
    m_format_isSet = !json[QString("format")].isNull() && m_format_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_optional_isValid = ::OpenAPI::fromJsonValue(m_optional, json[QString("optional")]);
    m_optional_isSet = !json[QString("optional")].isNull() && m_optional_isValid;
}

QString OAIDataTypeField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataTypeField::asJsonObject() const {
    QJsonObject obj;
    if (m_format_isSet) {
        obj.insert(QString("format"), ::OpenAPI::toJsonValue(m_format));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_optional_isSet) {
        obj.insert(QString("optional"), ::OpenAPI::toJsonValue(m_optional));
    }
    return obj;
}

QString OAIDataTypeField::getFormat() const {
    return m_format;
}
void OAIDataTypeField::setFormat(const QString &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAIDataTypeField::is_format_Set() const{
    return m_format_isSet;
}

bool OAIDataTypeField::is_format_Valid() const{
    return m_format_isValid;
}

QString OAIDataTypeField::getName() const {
    return m_name;
}
void OAIDataTypeField::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDataTypeField::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDataTypeField::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIDataTypeField::isOptional() const {
    return m_optional;
}
void OAIDataTypeField::setOptional(const bool &optional) {
    m_optional = optional;
    m_optional_isSet = true;
}

bool OAIDataTypeField::is_optional_Set() const{
    return m_optional_isSet;
}

bool OAIDataTypeField::is_optional_Valid() const{
    return m_optional_isValid;
}

bool OAIDataTypeField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_optional_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataTypeField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
