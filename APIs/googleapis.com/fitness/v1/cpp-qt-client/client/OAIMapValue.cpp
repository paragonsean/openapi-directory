/**
 * Fitness API
 * The Fitness API for managing users' fitness tracking data.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMapValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMapValue::OAIMapValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMapValue::OAIMapValue() {
    this->initializeModel();
}

OAIMapValue::~OAIMapValue() {}

void OAIMapValue::initializeModel() {

    m_fp_val_isSet = false;
    m_fp_val_isValid = false;
}

void OAIMapValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMapValue::fromJsonObject(QJsonObject json) {

    m_fp_val_isValid = ::OpenAPI::fromJsonValue(m_fp_val, json[QString("fpVal")]);
    m_fp_val_isSet = !json[QString("fpVal")].isNull() && m_fp_val_isValid;
}

QString OAIMapValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMapValue::asJsonObject() const {
    QJsonObject obj;
    if (m_fp_val_isSet) {
        obj.insert(QString("fpVal"), ::OpenAPI::toJsonValue(m_fp_val));
    }
    return obj;
}

double OAIMapValue::getFpVal() const {
    return m_fp_val;
}
void OAIMapValue::setFpVal(const double &fp_val) {
    m_fp_val = fp_val;
    m_fp_val_isSet = true;
}

bool OAIMapValue::is_fp_val_Set() const{
    return m_fp_val_isSet;
}

bool OAIMapValue::is_fp_val_Valid() const{
    return m_fp_val_isValid;
}

bool OAIMapValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fp_val_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMapValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
