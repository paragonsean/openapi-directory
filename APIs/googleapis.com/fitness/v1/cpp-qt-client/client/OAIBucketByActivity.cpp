/**
 * Fitness API
 * The Fitness API for managing users' fitness tracking data.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBucketByActivity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBucketByActivity::OAIBucketByActivity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBucketByActivity::OAIBucketByActivity() {
    this->initializeModel();
}

OAIBucketByActivity::~OAIBucketByActivity() {}

void OAIBucketByActivity::initializeModel() {

    m_activity_data_source_id_isSet = false;
    m_activity_data_source_id_isValid = false;

    m_min_duration_millis_isSet = false;
    m_min_duration_millis_isValid = false;
}

void OAIBucketByActivity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBucketByActivity::fromJsonObject(QJsonObject json) {

    m_activity_data_source_id_isValid = ::OpenAPI::fromJsonValue(m_activity_data_source_id, json[QString("activityDataSourceId")]);
    m_activity_data_source_id_isSet = !json[QString("activityDataSourceId")].isNull() && m_activity_data_source_id_isValid;

    m_min_duration_millis_isValid = ::OpenAPI::fromJsonValue(m_min_duration_millis, json[QString("minDurationMillis")]);
    m_min_duration_millis_isSet = !json[QString("minDurationMillis")].isNull() && m_min_duration_millis_isValid;
}

QString OAIBucketByActivity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBucketByActivity::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_data_source_id_isSet) {
        obj.insert(QString("activityDataSourceId"), ::OpenAPI::toJsonValue(m_activity_data_source_id));
    }
    if (m_min_duration_millis_isSet) {
        obj.insert(QString("minDurationMillis"), ::OpenAPI::toJsonValue(m_min_duration_millis));
    }
    return obj;
}

QString OAIBucketByActivity::getActivityDataSourceId() const {
    return m_activity_data_source_id;
}
void OAIBucketByActivity::setActivityDataSourceId(const QString &activity_data_source_id) {
    m_activity_data_source_id = activity_data_source_id;
    m_activity_data_source_id_isSet = true;
}

bool OAIBucketByActivity::is_activity_data_source_id_Set() const{
    return m_activity_data_source_id_isSet;
}

bool OAIBucketByActivity::is_activity_data_source_id_Valid() const{
    return m_activity_data_source_id_isValid;
}

QString OAIBucketByActivity::getMinDurationMillis() const {
    return m_min_duration_millis;
}
void OAIBucketByActivity::setMinDurationMillis(const QString &min_duration_millis) {
    m_min_duration_millis = min_duration_millis;
    m_min_duration_millis_isSet = true;
}

bool OAIBucketByActivity::is_min_duration_millis_Set() const{
    return m_min_duration_millis_isSet;
}

bool OAIBucketByActivity::is_min_duration_millis_Valid() const{
    return m_min_duration_millis_isValid;
}

bool OAIBucketByActivity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_data_source_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_duration_millis_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBucketByActivity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
