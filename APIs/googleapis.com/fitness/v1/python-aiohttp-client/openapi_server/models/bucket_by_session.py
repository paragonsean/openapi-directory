# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BucketBySession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_duration_millis: str=None):
        """BucketBySession - a model defined in OpenAPI

        :param min_duration_millis: The min_duration_millis of this BucketBySession.
        """
        self.openapi_types = {
            'min_duration_millis': str
        }

        self.attribute_map = {
            'min_duration_millis': 'minDurationMillis'
        }

        self._min_duration_millis = min_duration_millis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketBySession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BucketBySession of this BucketBySession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_duration_millis(self):
        """Gets the min_duration_millis of this BucketBySession.

        Specifies that only sessions of duration longer than minDurationMillis are considered and used as a container for aggregated data.

        :return: The min_duration_millis of this BucketBySession.
        :rtype: str
        """
        return self._min_duration_millis

    @min_duration_millis.setter
    def min_duration_millis(self, min_duration_millis):
        """Sets the min_duration_millis of this BucketBySession.

        Specifies that only sessions of duration longer than minDurationMillis are considered and used as a container for aggregated data.

        :param min_duration_millis: The min_duration_millis of this BucketBySession.
        :type min_duration_millis: str
        """

        self._min_duration_millis = min_duration_millis
