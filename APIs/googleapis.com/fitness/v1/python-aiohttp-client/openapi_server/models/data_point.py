# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.value import Value
from openapi_server import util


class DataPoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, computation_time_millis: str=None, data_type_name: str=None, end_time_nanos: str=None, modified_time_millis: str=None, origin_data_source_id: str=None, raw_timestamp_nanos: str=None, start_time_nanos: str=None, value: List[Value]=None):
        """DataPoint - a model defined in OpenAPI

        :param computation_time_millis: The computation_time_millis of this DataPoint.
        :param data_type_name: The data_type_name of this DataPoint.
        :param end_time_nanos: The end_time_nanos of this DataPoint.
        :param modified_time_millis: The modified_time_millis of this DataPoint.
        :param origin_data_source_id: The origin_data_source_id of this DataPoint.
        :param raw_timestamp_nanos: The raw_timestamp_nanos of this DataPoint.
        :param start_time_nanos: The start_time_nanos of this DataPoint.
        :param value: The value of this DataPoint.
        """
        self.openapi_types = {
            'computation_time_millis': str,
            'data_type_name': str,
            'end_time_nanos': str,
            'modified_time_millis': str,
            'origin_data_source_id': str,
            'raw_timestamp_nanos': str,
            'start_time_nanos': str,
            'value': List[Value]
        }

        self.attribute_map = {
            'computation_time_millis': 'computationTimeMillis',
            'data_type_name': 'dataTypeName',
            'end_time_nanos': 'endTimeNanos',
            'modified_time_millis': 'modifiedTimeMillis',
            'origin_data_source_id': 'originDataSourceId',
            'raw_timestamp_nanos': 'rawTimestampNanos',
            'start_time_nanos': 'startTimeNanos',
            'value': 'value'
        }

        self._computation_time_millis = computation_time_millis
        self._data_type_name = data_type_name
        self._end_time_nanos = end_time_nanos
        self._modified_time_millis = modified_time_millis
        self._origin_data_source_id = origin_data_source_id
        self._raw_timestamp_nanos = raw_timestamp_nanos
        self._start_time_nanos = start_time_nanos
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataPoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataPoint of this DataPoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def computation_time_millis(self):
        """Gets the computation_time_millis of this DataPoint.

        DO NOT USE THIS FIELD. It is ignored, and not stored.

        :return: The computation_time_millis of this DataPoint.
        :rtype: str
        """
        return self._computation_time_millis

    @computation_time_millis.setter
    def computation_time_millis(self, computation_time_millis):
        """Sets the computation_time_millis of this DataPoint.

        DO NOT USE THIS FIELD. It is ignored, and not stored.

        :param computation_time_millis: The computation_time_millis of this DataPoint.
        :type computation_time_millis: str
        """

        self._computation_time_millis = computation_time_millis

    @property
    def data_type_name(self):
        """Gets the data_type_name of this DataPoint.

        The data type defining the format of the values in this data point.

        :return: The data_type_name of this DataPoint.
        :rtype: str
        """
        return self._data_type_name

    @data_type_name.setter
    def data_type_name(self, data_type_name):
        """Sets the data_type_name of this DataPoint.

        The data type defining the format of the values in this data point.

        :param data_type_name: The data_type_name of this DataPoint.
        :type data_type_name: str
        """

        self._data_type_name = data_type_name

    @property
    def end_time_nanos(self):
        """Gets the end_time_nanos of this DataPoint.

        The end time of the interval represented by this data point, in nanoseconds since epoch.

        :return: The end_time_nanos of this DataPoint.
        :rtype: str
        """
        return self._end_time_nanos

    @end_time_nanos.setter
    def end_time_nanos(self, end_time_nanos):
        """Sets the end_time_nanos of this DataPoint.

        The end time of the interval represented by this data point, in nanoseconds since epoch.

        :param end_time_nanos: The end_time_nanos of this DataPoint.
        :type end_time_nanos: str
        """

        self._end_time_nanos = end_time_nanos

    @property
    def modified_time_millis(self):
        """Gets the modified_time_millis of this DataPoint.

        Indicates the last time this data point was modified. Useful only in contexts where we are listing the data changes, rather than representing the current state of the data.

        :return: The modified_time_millis of this DataPoint.
        :rtype: str
        """
        return self._modified_time_millis

    @modified_time_millis.setter
    def modified_time_millis(self, modified_time_millis):
        """Sets the modified_time_millis of this DataPoint.

        Indicates the last time this data point was modified. Useful only in contexts where we are listing the data changes, rather than representing the current state of the data.

        :param modified_time_millis: The modified_time_millis of this DataPoint.
        :type modified_time_millis: str
        """

        self._modified_time_millis = modified_time_millis

    @property
    def origin_data_source_id(self):
        """Gets the origin_data_source_id of this DataPoint.

        If the data point is contained in a dataset for a derived data source, this field will be populated with the data source stream ID that created the data point originally. WARNING: do not rely on this field for anything other than debugging. The value of this field, if it is set at all, is an implementation detail and is not guaranteed to remain consistent.

        :return: The origin_data_source_id of this DataPoint.
        :rtype: str
        """
        return self._origin_data_source_id

    @origin_data_source_id.setter
    def origin_data_source_id(self, origin_data_source_id):
        """Sets the origin_data_source_id of this DataPoint.

        If the data point is contained in a dataset for a derived data source, this field will be populated with the data source stream ID that created the data point originally. WARNING: do not rely on this field for anything other than debugging. The value of this field, if it is set at all, is an implementation detail and is not guaranteed to remain consistent.

        :param origin_data_source_id: The origin_data_source_id of this DataPoint.
        :type origin_data_source_id: str
        """

        self._origin_data_source_id = origin_data_source_id

    @property
    def raw_timestamp_nanos(self):
        """Gets the raw_timestamp_nanos of this DataPoint.

        The raw timestamp from the original SensorEvent.

        :return: The raw_timestamp_nanos of this DataPoint.
        :rtype: str
        """
        return self._raw_timestamp_nanos

    @raw_timestamp_nanos.setter
    def raw_timestamp_nanos(self, raw_timestamp_nanos):
        """Sets the raw_timestamp_nanos of this DataPoint.

        The raw timestamp from the original SensorEvent.

        :param raw_timestamp_nanos: The raw_timestamp_nanos of this DataPoint.
        :type raw_timestamp_nanos: str
        """

        self._raw_timestamp_nanos = raw_timestamp_nanos

    @property
    def start_time_nanos(self):
        """Gets the start_time_nanos of this DataPoint.

        The start time of the interval represented by this data point, in nanoseconds since epoch.

        :return: The start_time_nanos of this DataPoint.
        :rtype: str
        """
        return self._start_time_nanos

    @start_time_nanos.setter
    def start_time_nanos(self, start_time_nanos):
        """Sets the start_time_nanos of this DataPoint.

        The start time of the interval represented by this data point, in nanoseconds since epoch.

        :param start_time_nanos: The start_time_nanos of this DataPoint.
        :type start_time_nanos: str
        """

        self._start_time_nanos = start_time_nanos

    @property
    def value(self):
        """Gets the value of this DataPoint.

        Values of each data type field for the data point. It is expected that each value corresponding to a data type field will occur in the same order that the field is listed with in the data type specified in a data source. Only one of integer and floating point fields will be populated, depending on the format enum value within data source's type field.

        :return: The value of this DataPoint.
        :rtype: List[Value]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this DataPoint.

        Values of each data type field for the data point. It is expected that each value corresponding to a data type field will occur in the same order that the field is listed with in the data type specified in a data source. Only one of integer and floating point fields will be populated, depending on the format enum value within data source's type field.

        :param value: The value of this DataPoint.
        :type value: List[Value]
        """

        self._value = value
