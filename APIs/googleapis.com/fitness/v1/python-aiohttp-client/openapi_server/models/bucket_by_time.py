# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bucket_by_time_period import BucketByTimePeriod
from openapi_server import util


class BucketByTime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration_millis: str=None, period: BucketByTimePeriod=None):
        """BucketByTime - a model defined in OpenAPI

        :param duration_millis: The duration_millis of this BucketByTime.
        :param period: The period of this BucketByTime.
        """
        self.openapi_types = {
            'duration_millis': str,
            'period': BucketByTimePeriod
        }

        self.attribute_map = {
            'duration_millis': 'durationMillis',
            'period': 'period'
        }

        self._duration_millis = duration_millis
        self._period = period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketByTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BucketByTime of this BucketByTime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration_millis(self):
        """Gets the duration_millis of this BucketByTime.

        Specifies that result buckets aggregate data by exactly durationMillis time frames. Time frames that contain no data will be included in the response with an empty dataset.

        :return: The duration_millis of this BucketByTime.
        :rtype: str
        """
        return self._duration_millis

    @duration_millis.setter
    def duration_millis(self, duration_millis):
        """Sets the duration_millis of this BucketByTime.

        Specifies that result buckets aggregate data by exactly durationMillis time frames. Time frames that contain no data will be included in the response with an empty dataset.

        :param duration_millis: The duration_millis of this BucketByTime.
        :type duration_millis: str
        """

        self._duration_millis = duration_millis

    @property
    def period(self):
        """Gets the period of this BucketByTime.


        :return: The period of this BucketByTime.
        :rtype: BucketByTimePeriod
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this BucketByTime.


        :param period: The period of this BucketByTime.
        :type period: BucketByTimePeriod
        """

        self._period = period
