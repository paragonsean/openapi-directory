# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aggregate_bucket import AggregateBucket
from openapi_server import util


class AggregateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket: List[AggregateBucket]=None):
        """AggregateResponse - a model defined in OpenAPI

        :param bucket: The bucket of this AggregateResponse.
        """
        self.openapi_types = {
            'bucket': List[AggregateBucket]
        }

        self.attribute_map = {
            'bucket': 'bucket'
        }

        self._bucket = bucket

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AggregateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AggregateResponse of this AggregateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket(self):
        """Gets the bucket of this AggregateResponse.

        A list of buckets containing the aggregated data.

        :return: The bucket of this AggregateResponse.
        :rtype: List[AggregateBucket]
        """
        return self._bucket

    @bucket.setter
    def bucket(self, bucket):
        """Sets the bucket of this AggregateResponse.

        A list of buckets containing the aggregated data.

        :param bucket: The bucket of this AggregateResponse.
        :type bucket: List[AggregateBucket]
        """

        self._bucket = bucket
