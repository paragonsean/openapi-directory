# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.value_map_val_entry import ValueMapValEntry
from openapi_server import util


class Value(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fp_val: float=None, int_val: int=None, map_val: List[ValueMapValEntry]=None, string_val: str=None):
        """Value - a model defined in OpenAPI

        :param fp_val: The fp_val of this Value.
        :param int_val: The int_val of this Value.
        :param map_val: The map_val of this Value.
        :param string_val: The string_val of this Value.
        """
        self.openapi_types = {
            'fp_val': float,
            'int_val': int,
            'map_val': List[ValueMapValEntry],
            'string_val': str
        }

        self.attribute_map = {
            'fp_val': 'fpVal',
            'int_val': 'intVal',
            'map_val': 'mapVal',
            'string_val': 'stringVal'
        }

        self._fp_val = fp_val
        self._int_val = int_val
        self._map_val = map_val
        self._string_val = string_val

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Value':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Value of this Value.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fp_val(self):
        """Gets the fp_val of this Value.

        Floating point value. When this is set, other values must not be set.

        :return: The fp_val of this Value.
        :rtype: float
        """
        return self._fp_val

    @fp_val.setter
    def fp_val(self, fp_val):
        """Sets the fp_val of this Value.

        Floating point value. When this is set, other values must not be set.

        :param fp_val: The fp_val of this Value.
        :type fp_val: float
        """

        self._fp_val = fp_val

    @property
    def int_val(self):
        """Gets the int_val of this Value.

        Integer value. When this is set, other values must not be set.

        :return: The int_val of this Value.
        :rtype: int
        """
        return self._int_val

    @int_val.setter
    def int_val(self, int_val):
        """Sets the int_val of this Value.

        Integer value. When this is set, other values must not be set.

        :param int_val: The int_val of this Value.
        :type int_val: int
        """

        self._int_val = int_val

    @property
    def map_val(self):
        """Gets the map_val of this Value.

        Map value. The valid key space and units for the corresponding value of each entry should be documented as part of the data type definition. Keys should be kept small whenever possible. Data streams with large keys and high data frequency may be down sampled.

        :return: The map_val of this Value.
        :rtype: List[ValueMapValEntry]
        """
        return self._map_val

    @map_val.setter
    def map_val(self, map_val):
        """Sets the map_val of this Value.

        Map value. The valid key space and units for the corresponding value of each entry should be documented as part of the data type definition. Keys should be kept small whenever possible. Data streams with large keys and high data frequency may be down sampled.

        :param map_val: The map_val of this Value.
        :type map_val: List[ValueMapValEntry]
        """

        self._map_val = map_val

    @property
    def string_val(self):
        """Gets the string_val of this Value.

        String value. When this is set, other values must not be set. Strings should be kept small whenever possible. Data streams with large string values and high data frequency may be down sampled.

        :return: The string_val of this Value.
        :rtype: str
        """
        return self._string_val

    @string_val.setter
    def string_val(self, string_val):
        """Sets the string_val of this Value.

        String value. When this is set, other values must not be set. Strings should be kept small whenever possible. Data streams with large string values and high data frequency may be down sampled.

        :param string_val: The string_val of this Value.
        :type string_val: str
        """

        self._string_val = string_val
