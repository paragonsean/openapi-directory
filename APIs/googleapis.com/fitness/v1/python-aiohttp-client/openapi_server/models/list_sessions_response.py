# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.session import Session
from openapi_server import util


class ListSessionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deleted_session: List[Session]=None, has_more_data: bool=None, next_page_token: str=None, session: List[Session]=None):
        """ListSessionsResponse - a model defined in OpenAPI

        :param deleted_session: The deleted_session of this ListSessionsResponse.
        :param has_more_data: The has_more_data of this ListSessionsResponse.
        :param next_page_token: The next_page_token of this ListSessionsResponse.
        :param session: The session of this ListSessionsResponse.
        """
        self.openapi_types = {
            'deleted_session': List[Session],
            'has_more_data': bool,
            'next_page_token': str,
            'session': List[Session]
        }

        self.attribute_map = {
            'deleted_session': 'deletedSession',
            'has_more_data': 'hasMoreData',
            'next_page_token': 'nextPageToken',
            'session': 'session'
        }

        self._deleted_session = deleted_session
        self._has_more_data = has_more_data
        self._next_page_token = next_page_token
        self._session = session

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSessionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSessionsResponse of this ListSessionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted_session(self):
        """Gets the deleted_session of this ListSessionsResponse.

        If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.

        :return: The deleted_session of this ListSessionsResponse.
        :rtype: List[Session]
        """
        return self._deleted_session

    @deleted_session.setter
    def deleted_session(self, deleted_session):
        """Sets the deleted_session of this ListSessionsResponse.

        If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.

        :param deleted_session: The deleted_session of this ListSessionsResponse.
        :type deleted_session: List[Session]
        """

        self._deleted_session = deleted_session

    @property
    def has_more_data(self):
        """Gets the has_more_data of this ListSessionsResponse.

        Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.

        :return: The has_more_data of this ListSessionsResponse.
        :rtype: bool
        """
        return self._has_more_data

    @has_more_data.setter
    def has_more_data(self, has_more_data):
        """Sets the has_more_data of this ListSessionsResponse.

        Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.

        :param has_more_data: The has_more_data of this ListSessionsResponse.
        :type has_more_data: bool
        """

        self._has_more_data = has_more_data

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListSessionsResponse.

        The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.

        :return: The next_page_token of this ListSessionsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListSessionsResponse.

        The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.

        :param next_page_token: The next_page_token of this ListSessionsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def session(self):
        """Gets the session of this ListSessionsResponse.

        Sessions with an end time that is between startTime and endTime of the request.

        :return: The session of this ListSessionsResponse.
        :rtype: List[Session]
        """
        return self._session

    @session.setter
    def session(self, session):
        """Sets the session of this ListSessionsResponse.

        Sessions with an end time that is between startTime and endTime of the request.

        :param session: The session of this ListSessionsResponse.
        :type session: List[Session]
        """

        self._session = session
