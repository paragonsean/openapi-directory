# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application import Application
from openapi_server import util


class Session(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_time_millis: str=None, activity_type: int=None, application: Application=None, description: str=None, end_time_millis: str=None, id: str=None, modified_time_millis: str=None, name: str=None, start_time_millis: str=None):
        """Session - a model defined in OpenAPI

        :param active_time_millis: The active_time_millis of this Session.
        :param activity_type: The activity_type of this Session.
        :param application: The application of this Session.
        :param description: The description of this Session.
        :param end_time_millis: The end_time_millis of this Session.
        :param id: The id of this Session.
        :param modified_time_millis: The modified_time_millis of this Session.
        :param name: The name of this Session.
        :param start_time_millis: The start_time_millis of this Session.
        """
        self.openapi_types = {
            'active_time_millis': str,
            'activity_type': int,
            'application': Application,
            'description': str,
            'end_time_millis': str,
            'id': str,
            'modified_time_millis': str,
            'name': str,
            'start_time_millis': str
        }

        self.attribute_map = {
            'active_time_millis': 'activeTimeMillis',
            'activity_type': 'activityType',
            'application': 'application',
            'description': 'description',
            'end_time_millis': 'endTimeMillis',
            'id': 'id',
            'modified_time_millis': 'modifiedTimeMillis',
            'name': 'name',
            'start_time_millis': 'startTimeMillis'
        }

        self._active_time_millis = active_time_millis
        self._activity_type = activity_type
        self._application = application
        self._description = description
        self._end_time_millis = end_time_millis
        self._id = id
        self._modified_time_millis = modified_time_millis
        self._name = name
        self._start_time_millis = start_time_millis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Session':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Session of this Session.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_time_millis(self):
        """Gets the active_time_millis of this Session.

        Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value

        :return: The active_time_millis of this Session.
        :rtype: str
        """
        return self._active_time_millis

    @active_time_millis.setter
    def active_time_millis(self, active_time_millis):
        """Sets the active_time_millis of this Session.

        Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value

        :param active_time_millis: The active_time_millis of this Session.
        :type active_time_millis: str
        """

        self._active_time_millis = active_time_millis

    @property
    def activity_type(self):
        """Gets the activity_type of this Session.

        The type of activity this session represents.

        :return: The activity_type of this Session.
        :rtype: int
        """
        return self._activity_type

    @activity_type.setter
    def activity_type(self, activity_type):
        """Sets the activity_type of this Session.

        The type of activity this session represents.

        :param activity_type: The activity_type of this Session.
        :type activity_type: int
        """

        self._activity_type = activity_type

    @property
    def application(self):
        """Gets the application of this Session.


        :return: The application of this Session.
        :rtype: Application
        """
        return self._application

    @application.setter
    def application(self, application):
        """Sets the application of this Session.


        :param application: The application of this Session.
        :type application: Application
        """

        self._application = application

    @property
    def description(self):
        """Gets the description of this Session.

        A description for this session.

        :return: The description of this Session.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Session.

        A description for this session.

        :param description: The description of this Session.
        :type description: str
        """

        self._description = description

    @property
    def end_time_millis(self):
        """Gets the end_time_millis of this Session.

        An end time, in milliseconds since epoch, inclusive.

        :return: The end_time_millis of this Session.
        :rtype: str
        """
        return self._end_time_millis

    @end_time_millis.setter
    def end_time_millis(self, end_time_millis):
        """Sets the end_time_millis of this Session.

        An end time, in milliseconds since epoch, inclusive.

        :param end_time_millis: The end_time_millis of this Session.
        :type end_time_millis: str
        """

        self._end_time_millis = end_time_millis

    @property
    def id(self):
        """Gets the id of this Session.

        A client-generated identifier that is unique across all sessions owned by this particular user.

        :return: The id of this Session.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Session.

        A client-generated identifier that is unique across all sessions owned by this particular user.

        :param id: The id of this Session.
        :type id: str
        """

        self._id = id

    @property
    def modified_time_millis(self):
        """Gets the modified_time_millis of this Session.

        A timestamp that indicates when the session was last modified.

        :return: The modified_time_millis of this Session.
        :rtype: str
        """
        return self._modified_time_millis

    @modified_time_millis.setter
    def modified_time_millis(self, modified_time_millis):
        """Sets the modified_time_millis of this Session.

        A timestamp that indicates when the session was last modified.

        :param modified_time_millis: The modified_time_millis of this Session.
        :type modified_time_millis: str
        """

        self._modified_time_millis = modified_time_millis

    @property
    def name(self):
        """Gets the name of this Session.

        A human readable name of the session.

        :return: The name of this Session.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Session.

        A human readable name of the session.

        :param name: The name of this Session.
        :type name: str
        """

        self._name = name

    @property
    def start_time_millis(self):
        """Gets the start_time_millis of this Session.

        A start time, in milliseconds since epoch, inclusive.

        :return: The start_time_millis of this Session.
        :rtype: str
        """
        return self._start_time_millis

    @start_time_millis.setter
    def start_time_millis(self, start_time_millis):
        """Sets the start_time_millis of this Session.

        A start time, in milliseconds since epoch, inclusive.

        :param start_time_millis: The start_time_millis of this Session.
        :type start_time_millis: str
        """

        self._start_time_millis = start_time_millis
