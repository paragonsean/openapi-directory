/*
 * Cloud Private Catalog
 * Enable cloud users to discover enterprise catalogs and products in their organizations.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The readonly representation of a product computed with a given resource context.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:04.294765-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPrivatecatalogV1beta1Product {
  public static final String SERIALIZED_NAME_ASSET_TYPE = "assetType";
  @SerializedName(SERIALIZED_NAME_ASSET_TYPE)
  private String assetType;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DISPLAY_METADATA = "displayMetadata";
  @SerializedName(SERIALIZED_NAME_DISPLAY_METADATA)
  private Map<String, Object> displayMetadata = new HashMap<>();

  public static final String SERIALIZED_NAME_ICON_URI = "iconUri";
  @SerializedName(SERIALIZED_NAME_ICON_URI)
  private String iconUri;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudPrivatecatalogV1beta1Product() {
  }

  public GoogleCloudPrivatecatalogV1beta1Product assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

  /**
   * Output only. The type of the product asset. It can be one of the following values:  * &#x60;google.deploymentmanager.Template&#x60; * &#x60;google.cloudprivatecatalog.ListingOnly&#x60;
   * @return assetType
   */
  @javax.annotation.Nullable
  public String getAssetType() {
    return assetType;
  }

  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }


  public GoogleCloudPrivatecatalogV1beta1Product createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. The time when the product was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudPrivatecatalogV1beta1Product displayMetadata(Map<String, Object> displayMetadata) {
    this.displayMetadata = displayMetadata;
    return this;
  }

  public GoogleCloudPrivatecatalogV1beta1Product putDisplayMetadataItem(String key, Object displayMetadataItem) {
    if (this.displayMetadata == null) {
      this.displayMetadata = new HashMap<>();
    }
    this.displayMetadata.put(key, displayMetadataItem);
    return this;
  }

  /**
   * Output only. The display metadata to describe the product. The JSON schema of the metadata differs by Product.asset_type. When the type is &#x60;google.deploymentmanager.Template&#x60;, the schema is as follows:  &#x60;&#x60;&#x60; \&quot;$schema\&quot;: http://json-schema.org/draft-04/schema# type: object properties:   name:     type: string     minLength: 1     maxLength: 64   description:     type: string     minLength: 1     maxLength: 2048   tagline:     type: string     minLength: 1     maxLength: 100   support_info:     type: string     minLength: 1     maxLength: 2048   creator:     type: string     minLength: 1     maxLength: 100   documentation:     type: array     items:       type: object       properties:         url:           type: string           pattern:           \&quot;^(https?)://[-a-zA-Z0-9+&amp;@#/%?&#x3D;~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%&#x3D;~_|]\&quot;         title:           type: string           minLength: 1           maxLength: 64         description:           type: string           minLength: 1           maxLength: 2048 required: - name - description additionalProperties: false  &#x60;&#x60;&#x60;  When the asset type is &#x60;google.cloudprivatecatalog.ListingOnly&#x60;, the schema is as follows:  &#x60;&#x60;&#x60; \&quot;$schema\&quot;: http://json-schema.org/draft-04/schema# type: object properties:   name:     type: string     minLength: 1     maxLength: 64   description:     type: string     minLength: 1     maxLength: 2048   tagline:     type: string     minLength: 1     maxLength: 100   support_info:     type: string     minLength: 1     maxLength: 2048   creator:     type: string     minLength: 1     maxLength: 100   documentation:     type: array     items:       type: object       properties:         url:           type: string           pattern:           \&quot;^(https?)://[-a-zA-Z0-9+&amp;@#/%?&#x3D;~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%&#x3D;~_|]\&quot;         title:           type: string           minLength: 1           maxLength: 64         description:           type: string           minLength: 1           maxLength: 2048   signup_url:     type: string     pattern:     \&quot;^(https?)://[-a-zA-Z0-9+&amp;@#/%?&#x3D;~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%&#x3D;~_|]\&quot; required: - name - description - signup_url additionalProperties: false &#x60;&#x60;&#x60;
   * @return displayMetadata
   */
  @javax.annotation.Nullable
  public Map<String, Object> getDisplayMetadata() {
    return displayMetadata;
  }

  public void setDisplayMetadata(Map<String, Object> displayMetadata) {
    this.displayMetadata = displayMetadata;
  }


  public GoogleCloudPrivatecatalogV1beta1Product iconUri(String iconUri) {
    this.iconUri = iconUri;
    return this;
  }

  /**
   * Output only. The icon URI of the product.
   * @return iconUri
   */
  @javax.annotation.Nullable
  public String getIconUri() {
    return iconUri;
  }

  public void setIconUri(String iconUri) {
    this.iconUri = iconUri;
  }


  public GoogleCloudPrivatecatalogV1beta1Product name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. The resource name of the target product, in the format of &#x60;products/a-z*[a-z0-9]&#39;.  A unique identifier for the product under a catalog.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudPrivatecatalogV1beta1Product updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. The time when the product was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPrivatecatalogV1beta1Product googleCloudPrivatecatalogV1beta1Product = (GoogleCloudPrivatecatalogV1beta1Product) o;
    return Objects.equals(this.assetType, googleCloudPrivatecatalogV1beta1Product.assetType) &&
        Objects.equals(this.createTime, googleCloudPrivatecatalogV1beta1Product.createTime) &&
        Objects.equals(this.displayMetadata, googleCloudPrivatecatalogV1beta1Product.displayMetadata) &&
        Objects.equals(this.iconUri, googleCloudPrivatecatalogV1beta1Product.iconUri) &&
        Objects.equals(this.name, googleCloudPrivatecatalogV1beta1Product.name) &&
        Objects.equals(this.updateTime, googleCloudPrivatecatalogV1beta1Product.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetType, createTime, displayMetadata, iconUri, name, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPrivatecatalogV1beta1Product {\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    displayMetadata: ").append(toIndentedString(displayMetadata)).append("\n");
    sb.append("    iconUri: ").append(toIndentedString(iconUri)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assetType");
    openapiFields.add("createTime");
    openapiFields.add("displayMetadata");
    openapiFields.add("iconUri");
    openapiFields.add("name");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPrivatecatalogV1beta1Product
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPrivatecatalogV1beta1Product.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPrivatecatalogV1beta1Product is not found in the empty JSON string", GoogleCloudPrivatecatalogV1beta1Product.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPrivatecatalogV1beta1Product.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPrivatecatalogV1beta1Product` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("assetType") != null && !jsonObj.get("assetType").isJsonNull()) && !jsonObj.get("assetType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetType").toString()));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("iconUri") != null && !jsonObj.get("iconUri").isJsonNull()) && !jsonObj.get("iconUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iconUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iconUri").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPrivatecatalogV1beta1Product.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPrivatecatalogV1beta1Product' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPrivatecatalogV1beta1Product> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPrivatecatalogV1beta1Product.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPrivatecatalogV1beta1Product>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPrivatecatalogV1beta1Product value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPrivatecatalogV1beta1Product read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPrivatecatalogV1beta1Product given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPrivatecatalogV1beta1Product
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPrivatecatalogV1beta1Product
   */
  public static GoogleCloudPrivatecatalogV1beta1Product fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPrivatecatalogV1beta1Product.class);
  }

  /**
   * Convert an instance of GoogleCloudPrivatecatalogV1beta1Product to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

