/**
 * SAS Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SasPortalApi);
  }
}(this, function(expect, SasPortalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SasPortalApi.NodesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NodesApi', function() {
    describe('sasportalNodesDevicesSignDevice', function() {
      it('should call sasportalNodesDevicesSignDevice successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesDevicesSignDevice
        //instance.sasportalNodesDevicesSignDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesDevicesUpdateSigned', function() {
      it('should call sasportalNodesDevicesUpdateSigned successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesDevicesUpdateSigned
        //instance.sasportalNodesDevicesUpdateSigned(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesDelete', function() {
      it('should call sasportalNodesNodesDelete successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesDelete
        //instance.sasportalNodesNodesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesDeploymentsCreate', function() {
      it('should call sasportalNodesNodesDeploymentsCreate successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesDeploymentsCreate
        //instance.sasportalNodesNodesDeploymentsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesDeploymentsList', function() {
      it('should call sasportalNodesNodesDeploymentsList successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesDeploymentsList
        //instance.sasportalNodesNodesDeploymentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesDevicesCreate', function() {
      it('should call sasportalNodesNodesDevicesCreate successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesDevicesCreate
        //instance.sasportalNodesNodesDevicesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesDevicesCreateSigned', function() {
      it('should call sasportalNodesNodesDevicesCreateSigned successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesDevicesCreateSigned
        //instance.sasportalNodesNodesDevicesCreateSigned(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesDevicesList', function() {
      it('should call sasportalNodesNodesDevicesList successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesDevicesList
        //instance.sasportalNodesNodesDevicesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesGet', function() {
      it('should call sasportalNodesNodesGet successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesGet
        //instance.sasportalNodesNodesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesMove', function() {
      it('should call sasportalNodesNodesMove successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesMove
        //instance.sasportalNodesNodesMove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesNodesCreate', function() {
      it('should call sasportalNodesNodesNodesCreate successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesNodesCreate
        //instance.sasportalNodesNodesNodesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesNodesList', function() {
      it('should call sasportalNodesNodesNodesList successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesNodesList
        //instance.sasportalNodesNodesNodesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sasportalNodesNodesPatch', function() {
      it('should call sasportalNodesNodesPatch successfully', function(done) {
        //uncomment below and update the code to test sasportalNodesNodesPatch
        //instance.sasportalNodesNodesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
