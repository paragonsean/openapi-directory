/**
 * SAS Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SasPortalValidateInstallerRequest model module.
 * @module model/SasPortalValidateInstallerRequest
 * @version v1alpha1
 */
class SasPortalValidateInstallerRequest {
    /**
     * Constructs a new <code>SasPortalValidateInstallerRequest</code>.
     * Request for ValidateInstaller.
     * @alias module:model/SasPortalValidateInstallerRequest
     */
    constructor() { 
        
        SasPortalValidateInstallerRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SasPortalValidateInstallerRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SasPortalValidateInstallerRequest} obj Optional instance to populate.
     * @return {module:model/SasPortalValidateInstallerRequest} The populated <code>SasPortalValidateInstallerRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SasPortalValidateInstallerRequest();

            if (data.hasOwnProperty('encodedSecret')) {
                obj['encodedSecret'] = ApiClient.convertToType(data['encodedSecret'], 'String');
            }
            if (data.hasOwnProperty('installerId')) {
                obj['installerId'] = ApiClient.convertToType(data['installerId'], 'String');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SasPortalValidateInstallerRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SasPortalValidateInstallerRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['encodedSecret'] && !(typeof data['encodedSecret'] === 'string' || data['encodedSecret'] instanceof String)) {
            throw new Error("Expected the field `encodedSecret` to be a primitive type in the JSON string but got " + data['encodedSecret']);
        }
        // ensure the json data is a string
        if (data['installerId'] && !(typeof data['installerId'] === 'string' || data['installerId'] instanceof String)) {
            throw new Error("Expected the field `installerId` to be a primitive type in the JSON string but got " + data['installerId']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}



/**
 * Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret.
 * @member {String} encodedSecret
 */
SasPortalValidateInstallerRequest.prototype['encodedSecret'] = undefined;

/**
 * Required. Unique installer id (CPI ID) from the Certified Professional Installers database.
 * @member {String} installerId
 */
SasPortalValidateInstallerRequest.prototype['installerId'] = undefined;

/**
 * Required. Secret returned by the GenerateSecret.
 * @member {String} secret
 */
SasPortalValidateInstallerRequest.prototype['secret'] = undefined;






export default SasPortalValidateInstallerRequest;

