/**
 * SAS Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SasPortalNrqzValidation model module.
 * @module model/SasPortalNrqzValidation
 * @version v1alpha1
 */
class SasPortalNrqzValidation {
    /**
     * Constructs a new <code>SasPortalNrqzValidation</code>.
     * Information about National Radio Quiet Zone validation.
     * @alias module:model/SasPortalNrqzValidation
     */
    constructor() { 
        
        SasPortalNrqzValidation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SasPortalNrqzValidation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SasPortalNrqzValidation} obj Optional instance to populate.
     * @return {module:model/SasPortalNrqzValidation} The populated <code>SasPortalNrqzValidation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SasPortalNrqzValidation();

            if (data.hasOwnProperty('caseId')) {
                obj['caseId'] = ApiClient.convertToType(data['caseId'], 'String');
            }
            if (data.hasOwnProperty('cpiId')) {
                obj['cpiId'] = ApiClient.convertToType(data['cpiId'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SasPortalNrqzValidation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SasPortalNrqzValidation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['caseId'] && !(typeof data['caseId'] === 'string' || data['caseId'] instanceof String)) {
            throw new Error("Expected the field `caseId` to be a primitive type in the JSON string but got " + data['caseId']);
        }
        // ensure the json data is a string
        if (data['cpiId'] && !(typeof data['cpiId'] === 'string' || data['cpiId'] instanceof String)) {
            throw new Error("Expected the field `cpiId` to be a primitive type in the JSON string but got " + data['cpiId']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * Validation case ID.
 * @member {String} caseId
 */
SasPortalNrqzValidation.prototype['caseId'] = undefined;

/**
 * CPI who signed the validation.
 * @member {String} cpiId
 */
SasPortalNrqzValidation.prototype['cpiId'] = undefined;

/**
 * Device latitude that's associated with the validation.
 * @member {Number} latitude
 */
SasPortalNrqzValidation.prototype['latitude'] = undefined;

/**
 * Device longitude that's associated with the validation.
 * @member {Number} longitude
 */
SasPortalNrqzValidation.prototype['longitude'] = undefined;

/**
 * State of the NRQZ validation info.
 * @member {module:model/SasPortalNrqzValidation.StateEnum} state
 */
SasPortalNrqzValidation.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
SasPortalNrqzValidation['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "DRAFT"
     * @const
     */
    "DRAFT": "DRAFT",

    /**
     * value: "FINAL"
     * @const
     */
    "FINAL": "FINAL"
};



export default SasPortalNrqzValidation;

