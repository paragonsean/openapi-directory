/**
 * SAS Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SasPortalAssignment from './SasPortalAssignment';

/**
 * The SasPortalPolicy model module.
 * @module model/SasPortalPolicy
 * @version v1alpha1
 */
class SasPortalPolicy {
    /**
     * Constructs a new <code>SasPortalPolicy</code>.
     * Defines an access control policy to the resources.
     * @alias module:model/SasPortalPolicy
     */
    constructor() { 
        
        SasPortalPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SasPortalPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SasPortalPolicy} obj Optional instance to populate.
     * @return {module:model/SasPortalPolicy} The populated <code>SasPortalPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SasPortalPolicy();

            if (data.hasOwnProperty('assignments')) {
                obj['assignments'] = ApiClient.convertToType(data['assignments'], [SasPortalAssignment]);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'Blob');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SasPortalPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SasPortalPolicy</code>.
     */
    static validateJSON(data) {
        if (data['assignments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['assignments'])) {
                throw new Error("Expected the field `assignments` to be an array in the JSON data but got " + data['assignments']);
            }
            // validate the optional field `assignments` (array)
            for (const item of data['assignments']) {
                SasPortalAssignment.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of assignments
 * @member {Array.<module:model/SasPortalAssignment>} assignments
 */
SasPortalPolicy.prototype['assignments'] = undefined;

/**
 * The etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to GetPolicy, and systems are expected to put that etag in the request to SetPolicy to ensure that their change will be applied to the same version of the policy. If no etag is provided in the call to GetPolicy, then the existing policy is overwritten blindly.
 * @member {Blob} etag
 */
SasPortalPolicy.prototype['etag'] = undefined;






export default SasPortalPolicy;

