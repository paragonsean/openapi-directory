/**
 * SAS Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISasPortalDpaMoveList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISasPortalDpaMoveList::OAISasPortalDpaMoveList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISasPortalDpaMoveList::OAISasPortalDpaMoveList() {
    this->initializeModel();
}

OAISasPortalDpaMoveList::~OAISasPortalDpaMoveList() {}

void OAISasPortalDpaMoveList::initializeModel() {

    m_dpa_id_isSet = false;
    m_dpa_id_isValid = false;

    m_frequency_range_isSet = false;
    m_frequency_range_isValid = false;
}

void OAISasPortalDpaMoveList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISasPortalDpaMoveList::fromJsonObject(QJsonObject json) {

    m_dpa_id_isValid = ::OpenAPI::fromJsonValue(m_dpa_id, json[QString("dpaId")]);
    m_dpa_id_isSet = !json[QString("dpaId")].isNull() && m_dpa_id_isValid;

    m_frequency_range_isValid = ::OpenAPI::fromJsonValue(m_frequency_range, json[QString("frequencyRange")]);
    m_frequency_range_isSet = !json[QString("frequencyRange")].isNull() && m_frequency_range_isValid;
}

QString OAISasPortalDpaMoveList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISasPortalDpaMoveList::asJsonObject() const {
    QJsonObject obj;
    if (m_dpa_id_isSet) {
        obj.insert(QString("dpaId"), ::OpenAPI::toJsonValue(m_dpa_id));
    }
    if (m_frequency_range.isSet()) {
        obj.insert(QString("frequencyRange"), ::OpenAPI::toJsonValue(m_frequency_range));
    }
    return obj;
}

QString OAISasPortalDpaMoveList::getDpaId() const {
    return m_dpa_id;
}
void OAISasPortalDpaMoveList::setDpaId(const QString &dpa_id) {
    m_dpa_id = dpa_id;
    m_dpa_id_isSet = true;
}

bool OAISasPortalDpaMoveList::is_dpa_id_Set() const{
    return m_dpa_id_isSet;
}

bool OAISasPortalDpaMoveList::is_dpa_id_Valid() const{
    return m_dpa_id_isValid;
}

OAISasPortalFrequencyRange OAISasPortalDpaMoveList::getFrequencyRange() const {
    return m_frequency_range;
}
void OAISasPortalDpaMoveList::setFrequencyRange(const OAISasPortalFrequencyRange &frequency_range) {
    m_frequency_range = frequency_range;
    m_frequency_range_isSet = true;
}

bool OAISasPortalDpaMoveList::is_frequency_range_Set() const{
    return m_frequency_range_isSet;
}

bool OAISasPortalDpaMoveList::is_frequency_range_Valid() const{
    return m_frequency_range_isValid;
}

bool OAISasPortalDpaMoveList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dpa_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_frequency_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISasPortalDpaMoveList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
