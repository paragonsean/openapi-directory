/**
 * SAS Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISasPortalProvisionDeploymentRequest.h
 *
 * Request for [ProvisionDeployment]. [spectrum.sas.portal.v1alpha1.Provisioning.ProvisionDeployment]. GCP Project, Organization Info, and callerâ€™s GAIA ID should be retrieved from the RPC handler, and used as inputs to create a new SAS organization (if not exists) and a new SAS deployment.
 */

#ifndef OAISasPortalProvisionDeploymentRequest_H
#define OAISasPortalProvisionDeploymentRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISasPortalProvisionDeploymentRequest : public OAIObject {
public:
    OAISasPortalProvisionDeploymentRequest();
    OAISasPortalProvisionDeploymentRequest(QString json);
    ~OAISasPortalProvisionDeploymentRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNewDeploymentDisplayName() const;
    void setNewDeploymentDisplayName(const QString &new_deployment_display_name);
    bool is_new_deployment_display_name_Set() const;
    bool is_new_deployment_display_name_Valid() const;

    QString getNewOrganizationDisplayName() const;
    void setNewOrganizationDisplayName(const QString &new_organization_display_name);
    bool is_new_organization_display_name_Set() const;
    bool is_new_organization_display_name_Valid() const;

    QString getOrganizationId() const;
    void setOrganizationId(const QString &organization_id);
    bool is_organization_id_Set() const;
    bool is_organization_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_new_deployment_display_name;
    bool m_new_deployment_display_name_isSet;
    bool m_new_deployment_display_name_isValid;

    QString m_new_organization_display_name;
    bool m_new_organization_display_name_isSet;
    bool m_new_organization_display_name_isValid;

    QString m_organization_id;
    bool m_organization_id_isSet;
    bool m_organization_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISasPortalProvisionDeploymentRequest)

#endif // OAISasPortalProvisionDeploymentRequest_H
