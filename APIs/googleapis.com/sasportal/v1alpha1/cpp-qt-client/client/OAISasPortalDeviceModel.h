/**
 * SAS Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISasPortalDeviceModel.h
 *
 * Information about the model of the device.
 */

#ifndef OAISasPortalDeviceModel_H
#define OAISasPortalDeviceModel_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISasPortalDeviceModel : public OAIObject {
public:
    OAISasPortalDeviceModel();
    OAISasPortalDeviceModel(QString json);
    ~OAISasPortalDeviceModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFirmwareVersion() const;
    void setFirmwareVersion(const QString &firmware_version);
    bool is_firmware_version_Set() const;
    bool is_firmware_version_Valid() const;

    QString getHardwareVersion() const;
    void setHardwareVersion(const QString &hardware_version);
    bool is_hardware_version_Set() const;
    bool is_hardware_version_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSoftwareVersion() const;
    void setSoftwareVersion(const QString &software_version);
    bool is_software_version_Set() const;
    bool is_software_version_Valid() const;

    QString getVendor() const;
    void setVendor(const QString &vendor);
    bool is_vendor_Set() const;
    bool is_vendor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_firmware_version;
    bool m_firmware_version_isSet;
    bool m_firmware_version_isValid;

    QString m_hardware_version;
    bool m_hardware_version_isSet;
    bool m_hardware_version_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_software_version;
    bool m_software_version_isSet;
    bool m_software_version_isValid;

    QString m_vendor;
    bool m_vendor_isSet;
    bool m_vendor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISasPortalDeviceModel)

#endif // OAISasPortalDeviceModel_H
