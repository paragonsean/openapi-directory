/*
 * SAS Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SasPortalGetPolicyRequest;
import org.openapitools.client.model.SasPortalPolicy;
import org.openapitools.client.model.SasPortalSetPolicyRequest;
import org.openapitools.client.model.SasPortalTestPermissionsRequest;
import org.openapitools.client.model.SasPortalTestPermissionsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PoliciesApi
 */
@Disabled
public class PoliciesApiTest {

    private final PoliciesApi api = new PoliciesApi();

    /**
     * Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sasportalPoliciesGetTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SasPortalGetPolicyRequest sasPortalGetPolicyRequest = null;
        SasPortalPolicy response = api.sasportalPoliciesGet($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, sasPortalGetPolicyRequest);
        // TODO: test validations
    }

    /**
     * Sets the access control policy on the specified resource. Replaces any existing policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sasportalPoliciesSetTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SasPortalSetPolicyRequest sasPortalSetPolicyRequest = null;
        SasPortalPolicy response = api.sasportalPoliciesSet($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, sasPortalSetPolicyRequest);
        // TODO: test validations
    }

    /**
     * Returns permissions that a caller has on the specified resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sasportalPoliciesTestTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SasPortalTestPermissionsRequest sasPortalTestPermissionsRequest = null;
        SasPortalTestPermissionsResponse response = api.sasportalPoliciesTest($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, sasPortalTestPermissionsRequest);
        // TODO: test validations
    }

}
