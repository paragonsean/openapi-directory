/*
 * SAS Portal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request for [ProvisionDeployment]. [spectrum.sas.portal.v1alpha1.Provisioning.ProvisionDeployment]. GCP Project, Organization Info, and callerâ€™s GAIA ID should be retrieved from the RPC handler, and used as inputs to create a new SAS organization (if not exists) and a new SAS deployment.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:46.807330-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SasPortalProvisionDeploymentRequest {
  public static final String SERIALIZED_NAME_NEW_DEPLOYMENT_DISPLAY_NAME = "newDeploymentDisplayName";
  @SerializedName(SERIALIZED_NAME_NEW_DEPLOYMENT_DISPLAY_NAME)
  private String newDeploymentDisplayName;

  public static final String SERIALIZED_NAME_NEW_ORGANIZATION_DISPLAY_NAME = "newOrganizationDisplayName";
  @SerializedName(SERIALIZED_NAME_NEW_ORGANIZATION_DISPLAY_NAME)
  private String newOrganizationDisplayName;

  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organizationId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private String organizationId;

  public SasPortalProvisionDeploymentRequest() {
  }

  public SasPortalProvisionDeploymentRequest newDeploymentDisplayName(String newDeploymentDisplayName) {
    this.newDeploymentDisplayName = newDeploymentDisplayName;
    return this;
  }

  /**
   * Optional. If this field is set, and a new SAS Portal Deployment needs to be created, its display name will be set to the value of this field.
   * @return newDeploymentDisplayName
   */
  @javax.annotation.Nullable
  public String getNewDeploymentDisplayName() {
    return newDeploymentDisplayName;
  }

  public void setNewDeploymentDisplayName(String newDeploymentDisplayName) {
    this.newDeploymentDisplayName = newDeploymentDisplayName;
  }


  public SasPortalProvisionDeploymentRequest newOrganizationDisplayName(String newOrganizationDisplayName) {
    this.newOrganizationDisplayName = newOrganizationDisplayName;
    return this;
  }

  /**
   * Optional. If this field is set, and a new SAS Portal Organization needs to be created, its display name will be set to the value of this field.
   * @return newOrganizationDisplayName
   */
  @javax.annotation.Nullable
  public String getNewOrganizationDisplayName() {
    return newOrganizationDisplayName;
  }

  public void setNewOrganizationDisplayName(String newOrganizationDisplayName) {
    this.newOrganizationDisplayName = newOrganizationDisplayName;
  }


  public SasPortalProvisionDeploymentRequest organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Optional. If this field is set then a new deployment will be created under the organization specified by this id.
   * @return organizationId
   */
  @javax.annotation.Nullable
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SasPortalProvisionDeploymentRequest sasPortalProvisionDeploymentRequest = (SasPortalProvisionDeploymentRequest) o;
    return Objects.equals(this.newDeploymentDisplayName, sasPortalProvisionDeploymentRequest.newDeploymentDisplayName) &&
        Objects.equals(this.newOrganizationDisplayName, sasPortalProvisionDeploymentRequest.newOrganizationDisplayName) &&
        Objects.equals(this.organizationId, sasPortalProvisionDeploymentRequest.organizationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(newDeploymentDisplayName, newOrganizationDisplayName, organizationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SasPortalProvisionDeploymentRequest {\n");
    sb.append("    newDeploymentDisplayName: ").append(toIndentedString(newDeploymentDisplayName)).append("\n");
    sb.append("    newOrganizationDisplayName: ").append(toIndentedString(newOrganizationDisplayName)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("newDeploymentDisplayName");
    openapiFields.add("newOrganizationDisplayName");
    openapiFields.add("organizationId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SasPortalProvisionDeploymentRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SasPortalProvisionDeploymentRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SasPortalProvisionDeploymentRequest is not found in the empty JSON string", SasPortalProvisionDeploymentRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SasPortalProvisionDeploymentRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SasPortalProvisionDeploymentRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("newDeploymentDisplayName") != null && !jsonObj.get("newDeploymentDisplayName").isJsonNull()) && !jsonObj.get("newDeploymentDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newDeploymentDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newDeploymentDisplayName").toString()));
      }
      if ((jsonObj.get("newOrganizationDisplayName") != null && !jsonObj.get("newOrganizationDisplayName").isJsonNull()) && !jsonObj.get("newOrganizationDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newOrganizationDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newOrganizationDisplayName").toString()));
      }
      if ((jsonObj.get("organizationId") != null && !jsonObj.get("organizationId").isJsonNull()) && !jsonObj.get("organizationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SasPortalProvisionDeploymentRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SasPortalProvisionDeploymentRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SasPortalProvisionDeploymentRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SasPortalProvisionDeploymentRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SasPortalProvisionDeploymentRequest>() {
           @Override
           public void write(JsonWriter out, SasPortalProvisionDeploymentRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SasPortalProvisionDeploymentRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SasPortalProvisionDeploymentRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SasPortalProvisionDeploymentRequest
   * @throws IOException if the JSON string is invalid with respect to SasPortalProvisionDeploymentRequest
   */
  public static SasPortalProvisionDeploymentRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SasPortalProvisionDeploymentRequest.class);
  }

  /**
   * Convert an instance of SasPortalProvisionDeploymentRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

