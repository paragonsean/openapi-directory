# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sas_portal_frequency_range import SasPortalFrequencyRange
from openapi_server import util


class SasPortalChannelWithScore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frequency_range: SasPortalFrequencyRange=None, score: float=None):
        """SasPortalChannelWithScore - a model defined in OpenAPI

        :param frequency_range: The frequency_range of this SasPortalChannelWithScore.
        :param score: The score of this SasPortalChannelWithScore.
        """
        self.openapi_types = {
            'frequency_range': SasPortalFrequencyRange,
            'score': float
        }

        self.attribute_map = {
            'frequency_range': 'frequencyRange',
            'score': 'score'
        }

        self._frequency_range = frequency_range
        self._score = score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SasPortalChannelWithScore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SasPortalChannelWithScore of this SasPortalChannelWithScore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frequency_range(self):
        """Gets the frequency_range of this SasPortalChannelWithScore.


        :return: The frequency_range of this SasPortalChannelWithScore.
        :rtype: SasPortalFrequencyRange
        """
        return self._frequency_range

    @frequency_range.setter
    def frequency_range(self, frequency_range):
        """Sets the frequency_range of this SasPortalChannelWithScore.


        :param frequency_range: The frequency_range of this SasPortalChannelWithScore.
        :type frequency_range: SasPortalFrequencyRange
        """

        self._frequency_range = frequency_range

    @property
    def score(self):
        """Gets the score of this SasPortalChannelWithScore.

        The channel score, normalized to be in the range [0,100].

        :return: The score of this SasPortalChannelWithScore.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this SasPortalChannelWithScore.

        The channel score, normalized to be in the range [0,100].

        :param score: The score of this SasPortalChannelWithScore.
        :type score: float
        """

        self._score = score
