# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sas_portal_deployment import SasPortalDeployment
from openapi_server import util


class SasPortalGcpProjectDeployment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployment: SasPortalDeployment=None, has_enabled_analytics: bool=None):
        """SasPortalGcpProjectDeployment - a model defined in OpenAPI

        :param deployment: The deployment of this SasPortalGcpProjectDeployment.
        :param has_enabled_analytics: The has_enabled_analytics of this SasPortalGcpProjectDeployment.
        """
        self.openapi_types = {
            'deployment': SasPortalDeployment,
            'has_enabled_analytics': bool
        }

        self.attribute_map = {
            'deployment': 'deployment',
            'has_enabled_analytics': 'hasEnabledAnalytics'
        }

        self._deployment = deployment
        self._has_enabled_analytics = has_enabled_analytics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SasPortalGcpProjectDeployment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SasPortalGcpProjectDeployment of this SasPortalGcpProjectDeployment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployment(self):
        """Gets the deployment of this SasPortalGcpProjectDeployment.


        :return: The deployment of this SasPortalGcpProjectDeployment.
        :rtype: SasPortalDeployment
        """
        return self._deployment

    @deployment.setter
    def deployment(self, deployment):
        """Sets the deployment of this SasPortalGcpProjectDeployment.


        :param deployment: The deployment of this SasPortalGcpProjectDeployment.
        :type deployment: SasPortalDeployment
        """

        self._deployment = deployment

    @property
    def has_enabled_analytics(self):
        """Gets the has_enabled_analytics of this SasPortalGcpProjectDeployment.

        Whether SAS analytics has been enabled.

        :return: The has_enabled_analytics of this SasPortalGcpProjectDeployment.
        :rtype: bool
        """
        return self._has_enabled_analytics

    @has_enabled_analytics.setter
    def has_enabled_analytics(self, has_enabled_analytics):
        """Sets the has_enabled_analytics of this SasPortalGcpProjectDeployment.

        Whether SAS analytics has been enabled.

        :param has_enabled_analytics: The has_enabled_analytics of this SasPortalGcpProjectDeployment.
        :type has_enabled_analytics: bool
        """

        self._has_enabled_analytics = has_enabled_analytics
