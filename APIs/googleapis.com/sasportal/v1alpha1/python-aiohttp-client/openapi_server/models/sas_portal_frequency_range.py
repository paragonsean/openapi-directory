# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SasPortalFrequencyRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, high_frequency_mhz: float=None, low_frequency_mhz: float=None):
        """SasPortalFrequencyRange - a model defined in OpenAPI

        :param high_frequency_mhz: The high_frequency_mhz of this SasPortalFrequencyRange.
        :param low_frequency_mhz: The low_frequency_mhz of this SasPortalFrequencyRange.
        """
        self.openapi_types = {
            'high_frequency_mhz': float,
            'low_frequency_mhz': float
        }

        self.attribute_map = {
            'high_frequency_mhz': 'highFrequencyMhz',
            'low_frequency_mhz': 'lowFrequencyMhz'
        }

        self._high_frequency_mhz = high_frequency_mhz
        self._low_frequency_mhz = low_frequency_mhz

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SasPortalFrequencyRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SasPortalFrequencyRange of this SasPortalFrequencyRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def high_frequency_mhz(self):
        """Gets the high_frequency_mhz of this SasPortalFrequencyRange.

        The highest frequency of the frequency range in MHz.

        :return: The high_frequency_mhz of this SasPortalFrequencyRange.
        :rtype: float
        """
        return self._high_frequency_mhz

    @high_frequency_mhz.setter
    def high_frequency_mhz(self, high_frequency_mhz):
        """Sets the high_frequency_mhz of this SasPortalFrequencyRange.

        The highest frequency of the frequency range in MHz.

        :param high_frequency_mhz: The high_frequency_mhz of this SasPortalFrequencyRange.
        :type high_frequency_mhz: float
        """

        self._high_frequency_mhz = high_frequency_mhz

    @property
    def low_frequency_mhz(self):
        """Gets the low_frequency_mhz of this SasPortalFrequencyRange.

        The lowest frequency of the frequency range in MHz.

        :return: The low_frequency_mhz of this SasPortalFrequencyRange.
        :rtype: float
        """
        return self._low_frequency_mhz

    @low_frequency_mhz.setter
    def low_frequency_mhz(self, low_frequency_mhz):
        """Sets the low_frequency_mhz of this SasPortalFrequencyRange.

        The lowest frequency of the frequency range in MHz.

        :param low_frequency_mhz: The low_frequency_mhz of this SasPortalFrequencyRange.
        :type low_frequency_mhz: float
        """

        self._low_frequency_mhz = low_frequency_mhz
