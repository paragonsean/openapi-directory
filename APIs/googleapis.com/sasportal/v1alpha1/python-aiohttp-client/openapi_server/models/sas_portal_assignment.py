# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SasPortalAssignment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, members: List[str]=None, role: str=None):
        """SasPortalAssignment - a model defined in OpenAPI

        :param members: The members of this SasPortalAssignment.
        :param role: The role of this SasPortalAssignment.
        """
        self.openapi_types = {
            'members': List[str],
            'role': str
        }

        self.attribute_map = {
            'members': 'members',
            'role': 'role'
        }

        self._members = members
        self._role = role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SasPortalAssignment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SasPortalAssignment of this SasPortalAssignment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def members(self):
        """Gets the members of this SasPortalAssignment.

        The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.

        :return: The members of this SasPortalAssignment.
        :rtype: List[str]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this SasPortalAssignment.

        The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.

        :param members: The members of this SasPortalAssignment.
        :type members: List[str]
        """

        self._members = members

    @property
    def role(self):
        """Gets the role of this SasPortalAssignment.

        Required. Role that is assigned to `members`.

        :return: The role of this SasPortalAssignment.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this SasPortalAssignment.

        Required. Role that is assigned to `members`.

        :param role: The role of this SasPortalAssignment.
        :type role: str
        """

        self._role = role
