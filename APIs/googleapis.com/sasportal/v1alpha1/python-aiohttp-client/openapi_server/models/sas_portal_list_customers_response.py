# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sas_portal_customer import SasPortalCustomer
from openapi_server import util


class SasPortalListCustomersResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customers: List[SasPortalCustomer]=None, next_page_token: str=None):
        """SasPortalListCustomersResponse - a model defined in OpenAPI

        :param customers: The customers of this SasPortalListCustomersResponse.
        :param next_page_token: The next_page_token of this SasPortalListCustomersResponse.
        """
        self.openapi_types = {
            'customers': List[SasPortalCustomer],
            'next_page_token': str
        }

        self.attribute_map = {
            'customers': 'customers',
            'next_page_token': 'nextPageToken'
        }

        self._customers = customers
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SasPortalListCustomersResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SasPortalListCustomersResponse of this SasPortalListCustomersResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customers(self):
        """Gets the customers of this SasPortalListCustomersResponse.

        The list of customers that match the request.

        :return: The customers of this SasPortalListCustomersResponse.
        :rtype: List[SasPortalCustomer]
        """
        return self._customers

    @customers.setter
    def customers(self, customers):
        """Sets the customers of this SasPortalListCustomersResponse.

        The list of customers that match the request.

        :param customers: The customers of this SasPortalListCustomersResponse.
        :type customers: List[SasPortalCustomer]
        """

        self._customers = customers

    @property
    def next_page_token(self):
        """Gets the next_page_token of this SasPortalListCustomersResponse.

        A pagination token returned from a previous call to ListCustomers that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers.

        :return: The next_page_token of this SasPortalListCustomersResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this SasPortalListCustomersResponse.

        A pagination token returned from a previous call to ListCustomers that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers.

        :param next_page_token: The next_page_token of this SasPortalListCustomersResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
