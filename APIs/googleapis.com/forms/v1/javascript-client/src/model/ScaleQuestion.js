/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScaleQuestion model module.
 * @module model/ScaleQuestion
 * @version v1
 */
class ScaleQuestion {
    /**
     * Constructs a new <code>ScaleQuestion</code>.
     * A scale question. The user has a range of numeric values to choose from.
     * @alias module:model/ScaleQuestion
     */
    constructor() { 
        
        ScaleQuestion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScaleQuestion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScaleQuestion} obj Optional instance to populate.
     * @return {module:model/ScaleQuestion} The populated <code>ScaleQuestion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScaleQuestion();

            if (data.hasOwnProperty('high')) {
                obj['high'] = ApiClient.convertToType(data['high'], 'Number');
            }
            if (data.hasOwnProperty('highLabel')) {
                obj['highLabel'] = ApiClient.convertToType(data['highLabel'], 'String');
            }
            if (data.hasOwnProperty('low')) {
                obj['low'] = ApiClient.convertToType(data['low'], 'Number');
            }
            if (data.hasOwnProperty('lowLabel')) {
                obj['lowLabel'] = ApiClient.convertToType(data['lowLabel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScaleQuestion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScaleQuestion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['highLabel'] && !(typeof data['highLabel'] === 'string' || data['highLabel'] instanceof String)) {
            throw new Error("Expected the field `highLabel` to be a primitive type in the JSON string but got " + data['highLabel']);
        }
        // ensure the json data is a string
        if (data['lowLabel'] && !(typeof data['lowLabel'] === 'string' || data['lowLabel'] instanceof String)) {
            throw new Error("Expected the field `lowLabel` to be a primitive type in the JSON string but got " + data['lowLabel']);
        }

        return true;
    }


}



/**
 * Required. The highest possible value for the scale.
 * @member {Number} high
 */
ScaleQuestion.prototype['high'] = undefined;

/**
 * The label to display describing the highest point on the scale.
 * @member {String} highLabel
 */
ScaleQuestion.prototype['highLabel'] = undefined;

/**
 * Required. The lowest possible value for the scale.
 * @member {Number} low
 */
ScaleQuestion.prototype['low'] = undefined;

/**
 * The label to display describing the lowest point on the scale.
 * @member {String} lowLabel
 */
ScaleQuestion.prototype['lowLabel'] = undefined;






export default ScaleQuestion;

