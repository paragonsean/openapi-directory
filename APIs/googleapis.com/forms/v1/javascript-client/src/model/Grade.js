/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Feedback from './Feedback';

/**
 * The Grade model module.
 * @module model/Grade
 * @version v1
 */
class Grade {
    /**
     * Constructs a new <code>Grade</code>.
     * Grade information associated with a respondent&#39;s answer to a question.
     * @alias module:model/Grade
     */
    constructor() { 
        
        Grade.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Grade</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Grade} obj Optional instance to populate.
     * @return {module:model/Grade} The populated <code>Grade</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Grade();

            if (data.hasOwnProperty('correct')) {
                obj['correct'] = ApiClient.convertToType(data['correct'], 'Boolean');
            }
            if (data.hasOwnProperty('feedback')) {
                obj['feedback'] = Feedback.constructFromObject(data['feedback']);
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Grade</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Grade</code>.
     */
    static validateJSON(data) {
        // validate the optional field `feedback`
        if (data['feedback']) { // data not null
          Feedback.validateJSON(data['feedback']);
        }

        return true;
    }


}



/**
 * Output only. Whether the question was answered correctly or not. A zero-point score is not enough to infer incorrectness, since a correctly answered question could be worth zero points.
 * @member {Boolean} correct
 */
Grade.prototype['correct'] = undefined;

/**
 * @member {module:model/Feedback} feedback
 */
Grade.prototype['feedback'] = undefined;

/**
 * Output only. The numeric score awarded for the answer.
 * @member {Number} score
 */
Grade.prototype['score'] = undefined;






export default Grade;

