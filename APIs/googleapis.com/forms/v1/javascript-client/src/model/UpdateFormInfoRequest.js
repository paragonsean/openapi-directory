/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Info from './Info';

/**
 * The UpdateFormInfoRequest model module.
 * @module model/UpdateFormInfoRequest
 * @version v1
 */
class UpdateFormInfoRequest {
    /**
     * Constructs a new <code>UpdateFormInfoRequest</code>.
     * Update Form&#39;s Info.
     * @alias module:model/UpdateFormInfoRequest
     */
    constructor() { 
        
        UpdateFormInfoRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateFormInfoRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateFormInfoRequest} obj Optional instance to populate.
     * @return {module:model/UpdateFormInfoRequest} The populated <code>UpdateFormInfoRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateFormInfoRequest();

            if (data.hasOwnProperty('info')) {
                obj['info'] = Info.constructFromObject(data['info']);
            }
            if (data.hasOwnProperty('updateMask')) {
                obj['updateMask'] = ApiClient.convertToType(data['updateMask'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateFormInfoRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateFormInfoRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `info`
        if (data['info']) { // data not null
          Info.validateJSON(data['info']);
        }
        // ensure the json data is a string
        if (data['updateMask'] && !(typeof data['updateMask'] === 'string' || data['updateMask'] instanceof String)) {
            throw new Error("Expected the field `updateMask` to be a primitive type in the JSON string but got " + data['updateMask']);
        }

        return true;
    }


}



/**
 * @member {module:model/Info} info
 */
UpdateFormInfoRequest.prototype['info'] = undefined;

/**
 * Required. Only values named in this mask are changed. At least one field must be specified. The root `info` is implied and should not be specified. A single `\"*\"` can be used as short-hand for updating every field.
 * @member {String} updateMask
 */
UpdateFormInfoRequest.prototype['updateMask'] = undefined;






export default UpdateFormInfoRequest;

