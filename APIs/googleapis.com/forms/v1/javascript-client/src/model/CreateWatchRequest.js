/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Watch from './Watch';

/**
 * The CreateWatchRequest model module.
 * @module model/CreateWatchRequest
 * @version v1
 */
class CreateWatchRequest {
    /**
     * Constructs a new <code>CreateWatchRequest</code>.
     * Create a new watch.
     * @alias module:model/CreateWatchRequest
     */
    constructor() { 
        
        CreateWatchRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateWatchRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateWatchRequest} obj Optional instance to populate.
     * @return {module:model/CreateWatchRequest} The populated <code>CreateWatchRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateWatchRequest();

            if (data.hasOwnProperty('watch')) {
                obj['watch'] = Watch.constructFromObject(data['watch']);
            }
            if (data.hasOwnProperty('watchId')) {
                obj['watchId'] = ApiClient.convertToType(data['watchId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateWatchRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateWatchRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `watch`
        if (data['watch']) { // data not null
          Watch.validateJSON(data['watch']);
        }
        // ensure the json data is a string
        if (data['watchId'] && !(typeof data['watchId'] === 'string' || data['watchId'] instanceof String)) {
            throw new Error("Expected the field `watchId` to be a primitive type in the JSON string but got " + data['watchId']);
        }

        return true;
    }


}



/**
 * @member {module:model/Watch} watch
 */
CreateWatchRequest.prototype['watch'] = undefined;

/**
 * The ID to use for the watch. If specified, the ID must not already be in use. If not specified, an ID is generated. This value should be 4-63 characters, and valid characters are /a-z-/.
 * @member {String} watchId
 */
CreateWatchRequest.prototype['watchId'] = undefined;






export default CreateWatchRequest;

