# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.choice_question import ChoiceQuestion
from openapi_server import util


class Grid(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: ChoiceQuestion=None, shuffle_questions: bool=None):
        """Grid - a model defined in OpenAPI

        :param columns: The columns of this Grid.
        :param shuffle_questions: The shuffle_questions of this Grid.
        """
        self.openapi_types = {
            'columns': ChoiceQuestion,
            'shuffle_questions': bool
        }

        self.attribute_map = {
            'columns': 'columns',
            'shuffle_questions': 'shuffleQuestions'
        }

        self._columns = columns
        self._shuffle_questions = shuffle_questions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Grid':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Grid of this Grid.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this Grid.


        :return: The columns of this Grid.
        :rtype: ChoiceQuestion
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this Grid.


        :param columns: The columns of this Grid.
        :type columns: ChoiceQuestion
        """

        self._columns = columns

    @property
    def shuffle_questions(self):
        """Gets the shuffle_questions of this Grid.

        If `true`, the questions are randomly ordered. In other words, the rows appear in a different order for every respondent.

        :return: The shuffle_questions of this Grid.
        :rtype: bool
        """
        return self._shuffle_questions

    @shuffle_questions.setter
    def shuffle_questions(self, shuffle_questions):
        """Sets the shuffle_questions of this Grid.

        If `true`, the questions are randomly ordered. In other words, the rows appear in a different order for every respondent.

        :param shuffle_questions: The shuffle_questions of this Grid.
        :type shuffle_questions: bool
        """

        self._shuffle_questions = shuffle_questions
