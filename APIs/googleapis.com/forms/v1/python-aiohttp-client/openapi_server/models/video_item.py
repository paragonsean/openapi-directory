# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.video import Video
from openapi_server import util


class VideoItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, caption: str=None, video: Video=None):
        """VideoItem - a model defined in OpenAPI

        :param caption: The caption of this VideoItem.
        :param video: The video of this VideoItem.
        """
        self.openapi_types = {
            'caption': str,
            'video': Video
        }

        self.attribute_map = {
            'caption': 'caption',
            'video': 'video'
        }

        self._caption = caption
        self._video = video

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoItem of this VideoItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def caption(self):
        """Gets the caption of this VideoItem.

        The text displayed below the video.

        :return: The caption of this VideoItem.
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this VideoItem.

        The text displayed below the video.

        :param caption: The caption of this VideoItem.
        :type caption: str
        """

        self._caption = caption

    @property
    def video(self):
        """Gets the video of this VideoItem.


        :return: The video of this VideoItem.
        :rtype: Video
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this VideoItem.


        :param video: The video of this VideoItem.
        :type video: Video
        """

        self._video = video
