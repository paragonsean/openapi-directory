# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_upload_answers import FileUploadAnswers
from openapi_server.models.grade import Grade
from openapi_server.models.text_answers import TextAnswers
from openapi_server import util


class Answer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_upload_answers: FileUploadAnswers=None, grade: Grade=None, question_id: str=None, text_answers: TextAnswers=None):
        """Answer - a model defined in OpenAPI

        :param file_upload_answers: The file_upload_answers of this Answer.
        :param grade: The grade of this Answer.
        :param question_id: The question_id of this Answer.
        :param text_answers: The text_answers of this Answer.
        """
        self.openapi_types = {
            'file_upload_answers': FileUploadAnswers,
            'grade': Grade,
            'question_id': str,
            'text_answers': TextAnswers
        }

        self.attribute_map = {
            'file_upload_answers': 'fileUploadAnswers',
            'grade': 'grade',
            'question_id': 'questionId',
            'text_answers': 'textAnswers'
        }

        self._file_upload_answers = file_upload_answers
        self._grade = grade
        self._question_id = question_id
        self._text_answers = text_answers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Answer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Answer of this Answer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_upload_answers(self):
        """Gets the file_upload_answers of this Answer.


        :return: The file_upload_answers of this Answer.
        :rtype: FileUploadAnswers
        """
        return self._file_upload_answers

    @file_upload_answers.setter
    def file_upload_answers(self, file_upload_answers):
        """Sets the file_upload_answers of this Answer.


        :param file_upload_answers: The file_upload_answers of this Answer.
        :type file_upload_answers: FileUploadAnswers
        """

        self._file_upload_answers = file_upload_answers

    @property
    def grade(self):
        """Gets the grade of this Answer.


        :return: The grade of this Answer.
        :rtype: Grade
        """
        return self._grade

    @grade.setter
    def grade(self, grade):
        """Sets the grade of this Answer.


        :param grade: The grade of this Answer.
        :type grade: Grade
        """

        self._grade = grade

    @property
    def question_id(self):
        """Gets the question_id of this Answer.

        Output only. The question's ID. See also Question.question_id.

        :return: The question_id of this Answer.
        :rtype: str
        """
        return self._question_id

    @question_id.setter
    def question_id(self, question_id):
        """Sets the question_id of this Answer.

        Output only. The question's ID. See also Question.question_id.

        :param question_id: The question_id of this Answer.
        :type question_id: str
        """

        self._question_id = question_id

    @property
    def text_answers(self):
        """Gets the text_answers of this Answer.


        :return: The text_answers of this Answer.
        :rtype: TextAnswers
        """
        return self._text_answers

    @text_answers.setter
    def text_answers(self, text_answers):
        """Sets the text_answers of this Answer.


        :param text_answers: The text_answers of this Answer.
        :type text_answers: TextAnswers
        """

        self._text_answers = text_answers
