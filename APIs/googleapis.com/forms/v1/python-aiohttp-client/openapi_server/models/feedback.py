# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.extra_material import ExtraMaterial
from openapi_server import util


class Feedback(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, material: List[ExtraMaterial]=None, text: str=None):
        """Feedback - a model defined in OpenAPI

        :param material: The material of this Feedback.
        :param text: The text of this Feedback.
        """
        self.openapi_types = {
            'material': List[ExtraMaterial],
            'text': str
        }

        self.attribute_map = {
            'material': 'material',
            'text': 'text'
        }

        self._material = material
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Feedback':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Feedback of this Feedback.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def material(self):
        """Gets the material of this Feedback.

        Additional information provided as part of the feedback, often used to point the respondent to more reading and resources.

        :return: The material of this Feedback.
        :rtype: List[ExtraMaterial]
        """
        return self._material

    @material.setter
    def material(self, material):
        """Sets the material of this Feedback.

        Additional information provided as part of the feedback, often used to point the respondent to more reading and resources.

        :param material: The material of this Feedback.
        :type material: List[ExtraMaterial]
        """

        self._material = material

    @property
    def text(self):
        """Gets the text of this Feedback.

        Required. The main text of the feedback.

        :return: The text of this Feedback.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Feedback.

        Required. The main text of the feedback.

        :param text: The text of this Feedback.
        :type text: str
        """

        self._text = text
