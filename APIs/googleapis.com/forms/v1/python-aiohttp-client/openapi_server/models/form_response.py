# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.answer import Answer
from openapi_server import util


class FormResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answers: Dict[str, Answer]=None, create_time: str=None, form_id: str=None, last_submitted_time: str=None, respondent_email: str=None, response_id: str=None, total_score: float=None):
        """FormResponse - a model defined in OpenAPI

        :param answers: The answers of this FormResponse.
        :param create_time: The create_time of this FormResponse.
        :param form_id: The form_id of this FormResponse.
        :param last_submitted_time: The last_submitted_time of this FormResponse.
        :param respondent_email: The respondent_email of this FormResponse.
        :param response_id: The response_id of this FormResponse.
        :param total_score: The total_score of this FormResponse.
        """
        self.openapi_types = {
            'answers': Dict[str, Answer],
            'create_time': str,
            'form_id': str,
            'last_submitted_time': str,
            'respondent_email': str,
            'response_id': str,
            'total_score': float
        }

        self.attribute_map = {
            'answers': 'answers',
            'create_time': 'createTime',
            'form_id': 'formId',
            'last_submitted_time': 'lastSubmittedTime',
            'respondent_email': 'respondentEmail',
            'response_id': 'responseId',
            'total_score': 'totalScore'
        }

        self._answers = answers
        self._create_time = create_time
        self._form_id = form_id
        self._last_submitted_time = last_submitted_time
        self._respondent_email = respondent_email
        self._response_id = response_id
        self._total_score = total_score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FormResponse of this FormResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answers(self):
        """Gets the answers of this FormResponse.

        Output only. The actual answers to the questions, keyed by question_id.

        :return: The answers of this FormResponse.
        :rtype: Dict[str, Answer]
        """
        return self._answers

    @answers.setter
    def answers(self, answers):
        """Sets the answers of this FormResponse.

        Output only. The actual answers to the questions, keyed by question_id.

        :param answers: The answers of this FormResponse.
        :type answers: Dict[str, Answer]
        """

        self._answers = answers

    @property
    def create_time(self):
        """Gets the create_time of this FormResponse.

        Output only. Timestamp for the first time the response was submitted.

        :return: The create_time of this FormResponse.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this FormResponse.

        Output only. Timestamp for the first time the response was submitted.

        :param create_time: The create_time of this FormResponse.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def form_id(self):
        """Gets the form_id of this FormResponse.

        Output only. The form ID.

        :return: The form_id of this FormResponse.
        :rtype: str
        """
        return self._form_id

    @form_id.setter
    def form_id(self, form_id):
        """Sets the form_id of this FormResponse.

        Output only. The form ID.

        :param form_id: The form_id of this FormResponse.
        :type form_id: str
        """

        self._form_id = form_id

    @property
    def last_submitted_time(self):
        """Gets the last_submitted_time of this FormResponse.

        Output only. Timestamp for the most recent time the response was submitted. Does not track changes to grades.

        :return: The last_submitted_time of this FormResponse.
        :rtype: str
        """
        return self._last_submitted_time

    @last_submitted_time.setter
    def last_submitted_time(self, last_submitted_time):
        """Sets the last_submitted_time of this FormResponse.

        Output only. Timestamp for the most recent time the response was submitted. Does not track changes to grades.

        :param last_submitted_time: The last_submitted_time of this FormResponse.
        :type last_submitted_time: str
        """

        self._last_submitted_time = last_submitted_time

    @property
    def respondent_email(self):
        """Gets the respondent_email of this FormResponse.

        Output only. The email address (if collected) for the respondent.

        :return: The respondent_email of this FormResponse.
        :rtype: str
        """
        return self._respondent_email

    @respondent_email.setter
    def respondent_email(self, respondent_email):
        """Sets the respondent_email of this FormResponse.

        Output only. The email address (if collected) for the respondent.

        :param respondent_email: The respondent_email of this FormResponse.
        :type respondent_email: str
        """

        self._respondent_email = respondent_email

    @property
    def response_id(self):
        """Gets the response_id of this FormResponse.

        Output only. The response ID.

        :return: The response_id of this FormResponse.
        :rtype: str
        """
        return self._response_id

    @response_id.setter
    def response_id(self, response_id):
        """Sets the response_id of this FormResponse.

        Output only. The response ID.

        :param response_id: The response_id of this FormResponse.
        :type response_id: str
        """

        self._response_id = response_id

    @property
    def total_score(self):
        """Gets the total_score of this FormResponse.

        Output only. The total number of points the respondent received for their submission Only set if the form was a quiz and the response was graded. This includes points automatically awarded via autograding adjusted by any manual corrections entered by the form owner.

        :return: The total_score of this FormResponse.
        :rtype: float
        """
        return self._total_score

    @total_score.setter
    def total_score(self, total_score):
        """Sets the total_score of this FormResponse.

        Output only. The total number of points the respondent received for their submission Only set if the form was a quiz and the response was graded. This includes points automatically awarded via autograding adjusted by any manual corrections entered by the form owner.

        :param total_score: The total_score of this FormResponse.
        :type total_score: float
        """

        self._total_score = total_score
