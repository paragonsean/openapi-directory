# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feedback import Feedback
from openapi_server import util


class Grade(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, correct: bool=None, feedback: Feedback=None, score: float=None):
        """Grade - a model defined in OpenAPI

        :param correct: The correct of this Grade.
        :param feedback: The feedback of this Grade.
        :param score: The score of this Grade.
        """
        self.openapi_types = {
            'correct': bool,
            'feedback': Feedback,
            'score': float
        }

        self.attribute_map = {
            'correct': 'correct',
            'feedback': 'feedback',
            'score': 'score'
        }

        self._correct = correct
        self._feedback = feedback
        self._score = score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Grade':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Grade of this Grade.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def correct(self):
        """Gets the correct of this Grade.

        Output only. Whether the question was answered correctly or not. A zero-point score is not enough to infer incorrectness, since a correctly answered question could be worth zero points.

        :return: The correct of this Grade.
        :rtype: bool
        """
        return self._correct

    @correct.setter
    def correct(self, correct):
        """Sets the correct of this Grade.

        Output only. Whether the question was answered correctly or not. A zero-point score is not enough to infer incorrectness, since a correctly answered question could be worth zero points.

        :param correct: The correct of this Grade.
        :type correct: bool
        """

        self._correct = correct

    @property
    def feedback(self):
        """Gets the feedback of this Grade.


        :return: The feedback of this Grade.
        :rtype: Feedback
        """
        return self._feedback

    @feedback.setter
    def feedback(self, feedback):
        """Sets the feedback of this Grade.


        :param feedback: The feedback of this Grade.
        :type feedback: Feedback
        """

        self._feedback = feedback

    @property
    def score(self):
        """Gets the score of this Grade.

        Output only. The numeric score awarded for the answer.

        :return: The score of this Grade.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this Grade.

        Output only. The numeric score awarded for the answer.

        :param score: The score of this Grade.
        :type score: float
        """

        self._score = score
