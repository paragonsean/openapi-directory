# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.grid import Grid
from openapi_server.models.image import Image
from openapi_server.models.question import Question
from openapi_server import util


class QuestionGroupItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, grid: Grid=None, image: Image=None, questions: List[Question]=None):
        """QuestionGroupItem - a model defined in OpenAPI

        :param grid: The grid of this QuestionGroupItem.
        :param image: The image of this QuestionGroupItem.
        :param questions: The questions of this QuestionGroupItem.
        """
        self.openapi_types = {
            'grid': Grid,
            'image': Image,
            'questions': List[Question]
        }

        self.attribute_map = {
            'grid': 'grid',
            'image': 'image',
            'questions': 'questions'
        }

        self._grid = grid
        self._image = image
        self._questions = questions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuestionGroupItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuestionGroupItem of this QuestionGroupItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def grid(self):
        """Gets the grid of this QuestionGroupItem.


        :return: The grid of this QuestionGroupItem.
        :rtype: Grid
        """
        return self._grid

    @grid.setter
    def grid(self, grid):
        """Sets the grid of this QuestionGroupItem.


        :param grid: The grid of this QuestionGroupItem.
        :type grid: Grid
        """

        self._grid = grid

    @property
    def image(self):
        """Gets the image of this QuestionGroupItem.


        :return: The image of this QuestionGroupItem.
        :rtype: Image
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this QuestionGroupItem.


        :param image: The image of this QuestionGroupItem.
        :type image: Image
        """

        self._image = image

    @property
    def questions(self):
        """Gets the questions of this QuestionGroupItem.

        Required. A list of questions that belong in this question group. A question must only belong to one group. The `kind` of the group may affect what types of questions are allowed.

        :return: The questions of this QuestionGroupItem.
        :rtype: List[Question]
        """
        return self._questions

    @questions.setter
    def questions(self, questions):
        """Sets the questions of this QuestionGroupItem.

        Required. A list of questions that belong in this question group. A question must only belong to one group. The `kind` of the group may affect what types of questions are allowed.

        :param questions: The questions of this QuestionGroupItem.
        :type questions: List[Question]
        """

        self._questions = questions
