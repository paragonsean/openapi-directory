# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.text_answer import TextAnswer
from openapi_server import util


class TextAnswers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answers: List[TextAnswer]=None):
        """TextAnswers - a model defined in OpenAPI

        :param answers: The answers of this TextAnswers.
        """
        self.openapi_types = {
            'answers': List[TextAnswer]
        }

        self.attribute_map = {
            'answers': 'answers'
        }

        self._answers = answers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextAnswers':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextAnswers of this TextAnswers.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answers(self):
        """Gets the answers of this TextAnswers.

        Output only. Answers to a question. For multiple-value ChoiceQuestions, each answer is a separate value.

        :return: The answers of this TextAnswers.
        :rtype: List[TextAnswer]
        """
        return self._answers

    @answers.setter
    def answers(self, answers):
        """Sets the answers of this TextAnswers.

        Output only. Answers to a question. For multiple-value ChoiceQuestions, each answer is a separate value.

        :param answers: The answers of this TextAnswers.
        :type answers: List[TextAnswer]
        """

        self._answers = answers
