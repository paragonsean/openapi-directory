# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileUploadAnswer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_id: str=None, file_name: str=None, mime_type: str=None):
        """FileUploadAnswer - a model defined in OpenAPI

        :param file_id: The file_id of this FileUploadAnswer.
        :param file_name: The file_name of this FileUploadAnswer.
        :param mime_type: The mime_type of this FileUploadAnswer.
        """
        self.openapi_types = {
            'file_id': str,
            'file_name': str,
            'mime_type': str
        }

        self.attribute_map = {
            'file_id': 'fileId',
            'file_name': 'fileName',
            'mime_type': 'mimeType'
        }

        self._file_id = file_id
        self._file_name = file_name
        self._mime_type = mime_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileUploadAnswer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileUploadAnswer of this FileUploadAnswer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_id(self):
        """Gets the file_id of this FileUploadAnswer.

        Output only. The ID of the Google Drive file.

        :return: The file_id of this FileUploadAnswer.
        :rtype: str
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id):
        """Sets the file_id of this FileUploadAnswer.

        Output only. The ID of the Google Drive file.

        :param file_id: The file_id of this FileUploadAnswer.
        :type file_id: str
        """

        self._file_id = file_id

    @property
    def file_name(self):
        """Gets the file_name of this FileUploadAnswer.

        Output only. The file name, as stored in Google Drive on upload.

        :return: The file_name of this FileUploadAnswer.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this FileUploadAnswer.

        Output only. The file name, as stored in Google Drive on upload.

        :param file_name: The file_name of this FileUploadAnswer.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def mime_type(self):
        """Gets the mime_type of this FileUploadAnswer.

        Output only. The MIME type of the file, as stored in Google Drive on upload.

        :return: The mime_type of this FileUploadAnswer.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this FileUploadAnswer.

        Output only. The MIME type of the file, as stored in Google Drive on upload.

        :param mime_type: The mime_type of this FileUploadAnswer.
        :type mime_type: str
        """

        self._mime_type = mime_type
