# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.media_properties import MediaProperties
from openapi_server import util


class Image(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alt_text: str=None, content_uri: str=None, properties: MediaProperties=None, source_uri: str=None):
        """Image - a model defined in OpenAPI

        :param alt_text: The alt_text of this Image.
        :param content_uri: The content_uri of this Image.
        :param properties: The properties of this Image.
        :param source_uri: The source_uri of this Image.
        """
        self.openapi_types = {
            'alt_text': str,
            'content_uri': str,
            'properties': MediaProperties,
            'source_uri': str
        }

        self.attribute_map = {
            'alt_text': 'altText',
            'content_uri': 'contentUri',
            'properties': 'properties',
            'source_uri': 'sourceUri'
        }

        self._alt_text = alt_text
        self._content_uri = content_uri
        self._properties = properties
        self._source_uri = source_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Image of this Image.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alt_text(self):
        """Gets the alt_text of this Image.

        A description of the image that is shown on hover and read by screenreaders.

        :return: The alt_text of this Image.
        :rtype: str
        """
        return self._alt_text

    @alt_text.setter
    def alt_text(self, alt_text):
        """Sets the alt_text of this Image.

        A description of the image that is shown on hover and read by screenreaders.

        :param alt_text: The alt_text of this Image.
        :type alt_text: str
        """

        self._alt_text = alt_text

    @property
    def content_uri(self):
        """Gets the content_uri of this Image.

        Output only. A URI from which you can download the image; this is valid only for a limited time.

        :return: The content_uri of this Image.
        :rtype: str
        """
        return self._content_uri

    @content_uri.setter
    def content_uri(self, content_uri):
        """Sets the content_uri of this Image.

        Output only. A URI from which you can download the image; this is valid only for a limited time.

        :param content_uri: The content_uri of this Image.
        :type content_uri: str
        """

        self._content_uri = content_uri

    @property
    def properties(self):
        """Gets the properties of this Image.


        :return: The properties of this Image.
        :rtype: MediaProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this Image.


        :param properties: The properties of this Image.
        :type properties: MediaProperties
        """

        self._properties = properties

    @property
    def source_uri(self):
        """Gets the source_uri of this Image.

        Input only. The source URI is the URI used to insert the image. The source URI can be empty when fetched.

        :return: The source_uri of this Image.
        :rtype: str
        """
        return self._source_uri

    @source_uri.setter
    def source_uri(self, source_uri):
        """Sets the source_uri of this Image.

        Input only. The source URI is the URI used to insert the image. The source URI can be empty when fetched.

        :param source_uri: The source_uri of this Image.
        :type source_uri: str
        """

        self._source_uri = source_uri
