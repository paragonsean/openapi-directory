# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.watch import Watch
from openapi_server import util


class CreateWatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, watch: Watch=None, watch_id: str=None):
        """CreateWatchRequest - a model defined in OpenAPI

        :param watch: The watch of this CreateWatchRequest.
        :param watch_id: The watch_id of this CreateWatchRequest.
        """
        self.openapi_types = {
            'watch': Watch,
            'watch_id': str
        }

        self.attribute_map = {
            'watch': 'watch',
            'watch_id': 'watchId'
        }

        self._watch = watch
        self._watch_id = watch_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateWatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateWatchRequest of this CreateWatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def watch(self):
        """Gets the watch of this CreateWatchRequest.


        :return: The watch of this CreateWatchRequest.
        :rtype: Watch
        """
        return self._watch

    @watch.setter
    def watch(self, watch):
        """Sets the watch of this CreateWatchRequest.


        :param watch: The watch of this CreateWatchRequest.
        :type watch: Watch
        """

        self._watch = watch

    @property
    def watch_id(self):
        """Gets the watch_id of this CreateWatchRequest.

        The ID to use for the watch. If specified, the ID must not already be in use. If not specified, an ID is generated. This value should be 4-63 characters, and valid characters are /a-z-/.

        :return: The watch_id of this CreateWatchRequest.
        :rtype: str
        """
        return self._watch_id

    @watch_id.setter
    def watch_id(self, watch_id):
        """Sets the watch_id of this CreateWatchRequest.

        The ID to use for the watch. If specified, the ID must not already be in use. If not specified, an ID is generated. This value should be 4-63 characters, and valid characters are /a-z-/.

        :param watch_id: The watch_id of this CreateWatchRequest.
        :type watch_id: str
        """

        self._watch_id = watch_id
