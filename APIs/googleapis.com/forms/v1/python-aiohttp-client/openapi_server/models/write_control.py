# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WriteControl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, required_revision_id: str=None, target_revision_id: str=None):
        """WriteControl - a model defined in OpenAPI

        :param required_revision_id: The required_revision_id of this WriteControl.
        :param target_revision_id: The target_revision_id of this WriteControl.
        """
        self.openapi_types = {
            'required_revision_id': str,
            'target_revision_id': str
        }

        self.attribute_map = {
            'required_revision_id': 'requiredRevisionId',
            'target_revision_id': 'targetRevisionId'
        }

        self._required_revision_id = required_revision_id
        self._target_revision_id = target_revision_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WriteControl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WriteControl of this WriteControl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def required_revision_id(self):
        """Gets the required_revision_id of this WriteControl.

        The revision ID of the form that the write request is applied to. If this is not the latest revision of the form, the request is not processed and returns a 400 bad request error.

        :return: The required_revision_id of this WriteControl.
        :rtype: str
        """
        return self._required_revision_id

    @required_revision_id.setter
    def required_revision_id(self, required_revision_id):
        """Sets the required_revision_id of this WriteControl.

        The revision ID of the form that the write request is applied to. If this is not the latest revision of the form, the request is not processed and returns a 400 bad request error.

        :param required_revision_id: The required_revision_id of this WriteControl.
        :type required_revision_id: str
        """

        self._required_revision_id = required_revision_id

    @property
    def target_revision_id(self):
        """Gets the target_revision_id of this WriteControl.

        The target revision ID of the form that the write request is applied to. If changes have occurred after this revision, the changes in this update request are transformed against those changes. This results in a new revision of the form that incorporates both the changes in the request and the intervening changes, with the server resolving conflicting changes. The target revision ID may only be used to write to recent versions of a form. If the target revision is too far behind the latest revision, the request is not processed and returns a 400 (Bad Request Error). The request may be retried after reading the latest version of the form. In most cases a target revision ID remains valid for several minutes after it is read, but for frequently-edited forms this window may be shorter.

        :return: The target_revision_id of this WriteControl.
        :rtype: str
        """
        return self._target_revision_id

    @target_revision_id.setter
    def target_revision_id(self, target_revision_id):
        """Sets the target_revision_id of this WriteControl.

        The target revision ID of the form that the write request is applied to. If changes have occurred after this revision, the changes in this update request are transformed against those changes. This results in a new revision of the form that incorporates both the changes in the request and the intervening changes, with the server resolving conflicting changes. The target revision ID may only be used to write to recent versions of a form. If the target revision is too far behind the latest revision, the request is not processed and returns a 400 (Bad Request Error). The request may be retried after reading the latest version of the form. In most cases a target revision ID remains valid for several minutes after it is read, but for frequently-edited forms this window may be shorter.

        :param target_revision_id: The target_revision_id of this WriteControl.
        :type target_revision_id: str
        """

        self._target_revision_id = target_revision_id
