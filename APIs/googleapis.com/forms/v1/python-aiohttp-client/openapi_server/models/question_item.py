# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image import Image
from openapi_server.models.question import Question
from openapi_server import util


class QuestionItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image: Image=None, question: Question=None):
        """QuestionItem - a model defined in OpenAPI

        :param image: The image of this QuestionItem.
        :param question: The question of this QuestionItem.
        """
        self.openapi_types = {
            'image': Image,
            'question': Question
        }

        self.attribute_map = {
            'image': 'image',
            'question': 'question'
        }

        self._image = image
        self._question = question

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuestionItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuestionItem of this QuestionItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image(self):
        """Gets the image of this QuestionItem.


        :return: The image of this QuestionItem.
        :rtype: Image
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this QuestionItem.


        :param image: The image of this QuestionItem.
        :type image: Image
        """

        self._image = image

    @property
    def question(self):
        """Gets the question of this QuestionItem.


        :return: The question of this QuestionItem.
        :rtype: Question
        """
        return self._question

    @question.setter
    def question(self, question):
        """Sets the question of this QuestionItem.


        :param question: The question of this QuestionItem.
        :type question: Question
        """

        self._question = question
