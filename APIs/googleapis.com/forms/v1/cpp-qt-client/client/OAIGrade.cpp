/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGrade.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGrade::OAIGrade(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGrade::OAIGrade() {
    this->initializeModel();
}

OAIGrade::~OAIGrade() {}

void OAIGrade::initializeModel() {

    m_correct_isSet = false;
    m_correct_isValid = false;

    m_feedback_isSet = false;
    m_feedback_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;
}

void OAIGrade::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGrade::fromJsonObject(QJsonObject json) {

    m_correct_isValid = ::OpenAPI::fromJsonValue(m_correct, json[QString("correct")]);
    m_correct_isSet = !json[QString("correct")].isNull() && m_correct_isValid;

    m_feedback_isValid = ::OpenAPI::fromJsonValue(m_feedback, json[QString("feedback")]);
    m_feedback_isSet = !json[QString("feedback")].isNull() && m_feedback_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;
}

QString OAIGrade::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGrade::asJsonObject() const {
    QJsonObject obj;
    if (m_correct_isSet) {
        obj.insert(QString("correct"), ::OpenAPI::toJsonValue(m_correct));
    }
    if (m_feedback.isSet()) {
        obj.insert(QString("feedback"), ::OpenAPI::toJsonValue(m_feedback));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    return obj;
}

bool OAIGrade::isCorrect() const {
    return m_correct;
}
void OAIGrade::setCorrect(const bool &correct) {
    m_correct = correct;
    m_correct_isSet = true;
}

bool OAIGrade::is_correct_Set() const{
    return m_correct_isSet;
}

bool OAIGrade::is_correct_Valid() const{
    return m_correct_isValid;
}

OAIFeedback OAIGrade::getFeedback() const {
    return m_feedback;
}
void OAIGrade::setFeedback(const OAIFeedback &feedback) {
    m_feedback = feedback;
    m_feedback_isSet = true;
}

bool OAIGrade::is_feedback_Set() const{
    return m_feedback_isSet;
}

bool OAIGrade::is_feedback_Valid() const{
    return m_feedback_isValid;
}

double OAIGrade::getScore() const {
    return m_score;
}
void OAIGrade::setScore(const double &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIGrade::is_score_Set() const{
    return m_score_isSet;
}

bool OAIGrade::is_score_Valid() const{
    return m_score_isValid;
}

bool OAIGrade::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_correct_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feedback.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGrade::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
