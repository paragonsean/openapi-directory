/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateItemResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateItemResponse::OAICreateItemResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateItemResponse::OAICreateItemResponse() {
    this->initializeModel();
}

OAICreateItemResponse::~OAICreateItemResponse() {}

void OAICreateItemResponse::initializeModel() {

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_question_id_isSet = false;
    m_question_id_isValid = false;
}

void OAICreateItemResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateItemResponse::fromJsonObject(QJsonObject json) {

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("itemId")]);
    m_item_id_isSet = !json[QString("itemId")].isNull() && m_item_id_isValid;

    m_question_id_isValid = ::OpenAPI::fromJsonValue(m_question_id, json[QString("questionId")]);
    m_question_id_isSet = !json[QString("questionId")].isNull() && m_question_id_isValid;
}

QString OAICreateItemResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateItemResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_item_id_isSet) {
        obj.insert(QString("itemId"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_question_id.size() > 0) {
        obj.insert(QString("questionId"), ::OpenAPI::toJsonValue(m_question_id));
    }
    return obj;
}

QString OAICreateItemResponse::getItemId() const {
    return m_item_id;
}
void OAICreateItemResponse::setItemId(const QString &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAICreateItemResponse::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAICreateItemResponse::is_item_id_Valid() const{
    return m_item_id_isValid;
}

QList<QString> OAICreateItemResponse::getQuestionId() const {
    return m_question_id;
}
void OAICreateItemResponse::setQuestionId(const QList<QString> &question_id) {
    m_question_id = question_id;
    m_question_id_isSet = true;
}

bool OAICreateItemResponse::is_question_id_Set() const{
    return m_question_id_isSet;
}

bool OAICreateItemResponse::is_question_id_Valid() const{
    return m_question_id_isValid;
}

bool OAICreateItemResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_question_id.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateItemResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
