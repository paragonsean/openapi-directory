/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWatch.h
 *
 * A watch for events for a form. When the designated event happens, a notification will be published to the specified target. The notification&#39;s attributes will include a &#x60;formId&#x60; key that has the ID of the watched form and an &#x60;eventType&#x60; key that has the string of the type. Messages are sent with at-least-once delivery and are only dropped in extraordinary circumstances. Typically all notifications should be reliably delivered within a few seconds; however, in some situations notifications may be delayed. A watch expires seven days after it is created unless it is renewed with watches.renew
 */

#ifndef OAIWatch_H
#define OAIWatch_H

#include <QJsonObject>

#include "OAIWatchTarget.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWatchTarget;

class OAIWatch : public OAIObject {
public:
    OAIWatch();
    OAIWatch(QString json);
    ~OAIWatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getErrorType() const;
    void setErrorType(const QString &error_type);
    bool is_error_type_Set() const;
    bool is_error_type_Valid() const;

    QString getEventType() const;
    void setEventType(const QString &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    QString getExpireTime() const;
    void setExpireTime(const QString &expire_time);
    bool is_expire_time_Set() const;
    bool is_expire_time_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIWatchTarget getTarget() const;
    void setTarget(const OAIWatchTarget &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_error_type;
    bool m_error_type_isSet;
    bool m_error_type_isValid;

    QString m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    QString m_expire_time;
    bool m_expire_time_isSet;
    bool m_expire_time_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIWatchTarget m_target;
    bool m_target_isSet;
    bool m_target_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWatch)

#endif // OAIWatch_H
