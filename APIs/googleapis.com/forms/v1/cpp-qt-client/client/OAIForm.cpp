/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIForm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIForm::OAIForm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIForm::OAIForm() {
    this->initializeModel();
}

OAIForm::~OAIForm() {}

void OAIForm::initializeModel() {

    m_form_id_isSet = false;
    m_form_id_isValid = false;

    m_info_isSet = false;
    m_info_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_linked_sheet_id_isSet = false;
    m_linked_sheet_id_isValid = false;

    m_responder_uri_isSet = false;
    m_responder_uri_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;
}

void OAIForm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIForm::fromJsonObject(QJsonObject json) {

    m_form_id_isValid = ::OpenAPI::fromJsonValue(m_form_id, json[QString("formId")]);
    m_form_id_isSet = !json[QString("formId")].isNull() && m_form_id_isValid;

    m_info_isValid = ::OpenAPI::fromJsonValue(m_info, json[QString("info")]);
    m_info_isSet = !json[QString("info")].isNull() && m_info_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_linked_sheet_id_isValid = ::OpenAPI::fromJsonValue(m_linked_sheet_id, json[QString("linkedSheetId")]);
    m_linked_sheet_id_isSet = !json[QString("linkedSheetId")].isNull() && m_linked_sheet_id_isValid;

    m_responder_uri_isValid = ::OpenAPI::fromJsonValue(m_responder_uri, json[QString("responderUri")]);
    m_responder_uri_isSet = !json[QString("responderUri")].isNull() && m_responder_uri_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionId")]);
    m_revision_id_isSet = !json[QString("revisionId")].isNull() && m_revision_id_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("settings")]);
    m_settings_isSet = !json[QString("settings")].isNull() && m_settings_isValid;
}

QString OAIForm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIForm::asJsonObject() const {
    QJsonObject obj;
    if (m_form_id_isSet) {
        obj.insert(QString("formId"), ::OpenAPI::toJsonValue(m_form_id));
    }
    if (m_info.isSet()) {
        obj.insert(QString("info"), ::OpenAPI::toJsonValue(m_info));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_linked_sheet_id_isSet) {
        obj.insert(QString("linkedSheetId"), ::OpenAPI::toJsonValue(m_linked_sheet_id));
    }
    if (m_responder_uri_isSet) {
        obj.insert(QString("responderUri"), ::OpenAPI::toJsonValue(m_responder_uri));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionId"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    if (m_settings.isSet()) {
        obj.insert(QString("settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    return obj;
}

QString OAIForm::getFormId() const {
    return m_form_id;
}
void OAIForm::setFormId(const QString &form_id) {
    m_form_id = form_id;
    m_form_id_isSet = true;
}

bool OAIForm::is_form_id_Set() const{
    return m_form_id_isSet;
}

bool OAIForm::is_form_id_Valid() const{
    return m_form_id_isValid;
}

OAIInfo OAIForm::getInfo() const {
    return m_info;
}
void OAIForm::setInfo(const OAIInfo &info) {
    m_info = info;
    m_info_isSet = true;
}

bool OAIForm::is_info_Set() const{
    return m_info_isSet;
}

bool OAIForm::is_info_Valid() const{
    return m_info_isValid;
}

QList<OAIItem> OAIForm::getItems() const {
    return m_items;
}
void OAIForm::setItems(const QList<OAIItem> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIForm::is_items_Set() const{
    return m_items_isSet;
}

bool OAIForm::is_items_Valid() const{
    return m_items_isValid;
}

QString OAIForm::getLinkedSheetId() const {
    return m_linked_sheet_id;
}
void OAIForm::setLinkedSheetId(const QString &linked_sheet_id) {
    m_linked_sheet_id = linked_sheet_id;
    m_linked_sheet_id_isSet = true;
}

bool OAIForm::is_linked_sheet_id_Set() const{
    return m_linked_sheet_id_isSet;
}

bool OAIForm::is_linked_sheet_id_Valid() const{
    return m_linked_sheet_id_isValid;
}

QString OAIForm::getResponderUri() const {
    return m_responder_uri;
}
void OAIForm::setResponderUri(const QString &responder_uri) {
    m_responder_uri = responder_uri;
    m_responder_uri_isSet = true;
}

bool OAIForm::is_responder_uri_Set() const{
    return m_responder_uri_isSet;
}

bool OAIForm::is_responder_uri_Valid() const{
    return m_responder_uri_isValid;
}

QString OAIForm::getRevisionId() const {
    return m_revision_id;
}
void OAIForm::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIForm::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIForm::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

OAIFormSettings OAIForm::getSettings() const {
    return m_settings;
}
void OAIForm::setSettings(const OAIFormSettings &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAIForm::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAIForm::is_settings_Valid() const{
    return m_settings_isValid;
}

bool OAIForm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_form_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_linked_sheet_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_responder_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIForm::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
