/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateWatchRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateWatchRequest::OAICreateWatchRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateWatchRequest::OAICreateWatchRequest() {
    this->initializeModel();
}

OAICreateWatchRequest::~OAICreateWatchRequest() {}

void OAICreateWatchRequest::initializeModel() {

    m_watch_isSet = false;
    m_watch_isValid = false;

    m_watch_id_isSet = false;
    m_watch_id_isValid = false;
}

void OAICreateWatchRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateWatchRequest::fromJsonObject(QJsonObject json) {

    m_watch_isValid = ::OpenAPI::fromJsonValue(m_watch, json[QString("watch")]);
    m_watch_isSet = !json[QString("watch")].isNull() && m_watch_isValid;

    m_watch_id_isValid = ::OpenAPI::fromJsonValue(m_watch_id, json[QString("watchId")]);
    m_watch_id_isSet = !json[QString("watchId")].isNull() && m_watch_id_isValid;
}

QString OAICreateWatchRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateWatchRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_watch.isSet()) {
        obj.insert(QString("watch"), ::OpenAPI::toJsonValue(m_watch));
    }
    if (m_watch_id_isSet) {
        obj.insert(QString("watchId"), ::OpenAPI::toJsonValue(m_watch_id));
    }
    return obj;
}

OAIWatch OAICreateWatchRequest::getWatch() const {
    return m_watch;
}
void OAICreateWatchRequest::setWatch(const OAIWatch &watch) {
    m_watch = watch;
    m_watch_isSet = true;
}

bool OAICreateWatchRequest::is_watch_Set() const{
    return m_watch_isSet;
}

bool OAICreateWatchRequest::is_watch_Valid() const{
    return m_watch_isValid;
}

QString OAICreateWatchRequest::getWatchId() const {
    return m_watch_id;
}
void OAICreateWatchRequest::setWatchId(const QString &watch_id) {
    m_watch_id = watch_id;
    m_watch_id_isSet = true;
}

bool OAICreateWatchRequest::is_watch_id_Set() const{
    return m_watch_id_isSet;
}

bool OAICreateWatchRequest::is_watch_id_Valid() const{
    return m_watch_id_isValid;
}

bool OAICreateWatchRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_watch.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_watch_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateWatchRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
