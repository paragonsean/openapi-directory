/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchUpdateFormRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchUpdateFormRequest::OAIBatchUpdateFormRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchUpdateFormRequest::OAIBatchUpdateFormRequest() {
    this->initializeModel();
}

OAIBatchUpdateFormRequest::~OAIBatchUpdateFormRequest() {}

void OAIBatchUpdateFormRequest::initializeModel() {

    m_include_form_in_response_isSet = false;
    m_include_form_in_response_isValid = false;

    m_requests_isSet = false;
    m_requests_isValid = false;

    m_write_control_isSet = false;
    m_write_control_isValid = false;
}

void OAIBatchUpdateFormRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchUpdateFormRequest::fromJsonObject(QJsonObject json) {

    m_include_form_in_response_isValid = ::OpenAPI::fromJsonValue(m_include_form_in_response, json[QString("includeFormInResponse")]);
    m_include_form_in_response_isSet = !json[QString("includeFormInResponse")].isNull() && m_include_form_in_response_isValid;

    m_requests_isValid = ::OpenAPI::fromJsonValue(m_requests, json[QString("requests")]);
    m_requests_isSet = !json[QString("requests")].isNull() && m_requests_isValid;

    m_write_control_isValid = ::OpenAPI::fromJsonValue(m_write_control, json[QString("writeControl")]);
    m_write_control_isSet = !json[QString("writeControl")].isNull() && m_write_control_isValid;
}

QString OAIBatchUpdateFormRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchUpdateFormRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_include_form_in_response_isSet) {
        obj.insert(QString("includeFormInResponse"), ::OpenAPI::toJsonValue(m_include_form_in_response));
    }
    if (m_requests.size() > 0) {
        obj.insert(QString("requests"), ::OpenAPI::toJsonValue(m_requests));
    }
    if (m_write_control.isSet()) {
        obj.insert(QString("writeControl"), ::OpenAPI::toJsonValue(m_write_control));
    }
    return obj;
}

bool OAIBatchUpdateFormRequest::isIncludeFormInResponse() const {
    return m_include_form_in_response;
}
void OAIBatchUpdateFormRequest::setIncludeFormInResponse(const bool &include_form_in_response) {
    m_include_form_in_response = include_form_in_response;
    m_include_form_in_response_isSet = true;
}

bool OAIBatchUpdateFormRequest::is_include_form_in_response_Set() const{
    return m_include_form_in_response_isSet;
}

bool OAIBatchUpdateFormRequest::is_include_form_in_response_Valid() const{
    return m_include_form_in_response_isValid;
}

QList<OAIRequest> OAIBatchUpdateFormRequest::getRequests() const {
    return m_requests;
}
void OAIBatchUpdateFormRequest::setRequests(const QList<OAIRequest> &requests) {
    m_requests = requests;
    m_requests_isSet = true;
}

bool OAIBatchUpdateFormRequest::is_requests_Set() const{
    return m_requests_isSet;
}

bool OAIBatchUpdateFormRequest::is_requests_Valid() const{
    return m_requests_isValid;
}

OAIWriteControl OAIBatchUpdateFormRequest::getWriteControl() const {
    return m_write_control;
}
void OAIBatchUpdateFormRequest::setWriteControl(const OAIWriteControl &write_control) {
    m_write_control = write_control;
    m_write_control_isSet = true;
}

bool OAIBatchUpdateFormRequest::is_write_control_Set() const{
    return m_write_control_isSet;
}

bool OAIBatchUpdateFormRequest::is_write_control_Valid() const{
    return m_write_control_isValid;
}

bool OAIBatchUpdateFormRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_include_form_in_response_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_write_control.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchUpdateFormRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
