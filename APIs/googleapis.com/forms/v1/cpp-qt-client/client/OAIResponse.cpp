/**
 * Google Forms API
 * Reads and writes Google Forms and responses.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponse::OAIResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponse::OAIResponse() {
    this->initializeModel();
}

OAIResponse::~OAIResponse() {}

void OAIResponse::initializeModel() {

    m_create_item_isSet = false;
    m_create_item_isValid = false;
}

void OAIResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponse::fromJsonObject(QJsonObject json) {

    m_create_item_isValid = ::OpenAPI::fromJsonValue(m_create_item, json[QString("createItem")]);
    m_create_item_isSet = !json[QString("createItem")].isNull() && m_create_item_isValid;
}

QString OAIResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_create_item.isSet()) {
        obj.insert(QString("createItem"), ::OpenAPI::toJsonValue(m_create_item));
    }
    return obj;
}

OAICreateItemResponse OAIResponse::getCreateItem() const {
    return m_create_item;
}
void OAIResponse::setCreateItem(const OAICreateItemResponse &create_item) {
    m_create_item = create_item;
    m_create_item_isSet = true;
}

bool OAIResponse::is_create_item_Set() const{
    return m_create_item_isSet;
}

bool OAIResponse::is_create_item_Valid() const{
    return m_create_item_isValid;
}

bool OAIResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_item.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
