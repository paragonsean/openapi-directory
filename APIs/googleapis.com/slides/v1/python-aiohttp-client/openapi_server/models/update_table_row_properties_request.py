# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.table_row_properties import TableRowProperties
from openapi_server import util


class UpdateTableRowPropertiesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: str=None, object_id: str=None, row_indices: List[int]=None, table_row_properties: TableRowProperties=None):
        """UpdateTableRowPropertiesRequest - a model defined in OpenAPI

        :param fields: The fields of this UpdateTableRowPropertiesRequest.
        :param object_id: The object_id of this UpdateTableRowPropertiesRequest.
        :param row_indices: The row_indices of this UpdateTableRowPropertiesRequest.
        :param table_row_properties: The table_row_properties of this UpdateTableRowPropertiesRequest.
        """
        self.openapi_types = {
            'fields': str,
            'object_id': str,
            'row_indices': List[int],
            'table_row_properties': TableRowProperties
        }

        self.attribute_map = {
            'fields': 'fields',
            'object_id': 'objectId',
            'row_indices': 'rowIndices',
            'table_row_properties': 'tableRowProperties'
        }

        self._fields = fields
        self._object_id = object_id
        self._row_indices = row_indices
        self._table_row_properties = table_row_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTableRowPropertiesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTableRowPropertiesRequest of this UpdateTableRowPropertiesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this UpdateTableRowPropertiesRequest.

        The fields that should be updated. At least one field must be specified. The root `tableRowProperties` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example to update the minimum row height, set `fields` to `\"min_row_height\"`. If '\"min_row_height\"' is included in the field mask but the property is left unset, the minimum row height will default to 0.

        :return: The fields of this UpdateTableRowPropertiesRequest.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateTableRowPropertiesRequest.

        The fields that should be updated. At least one field must be specified. The root `tableRowProperties` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example to update the minimum row height, set `fields` to `\"min_row_height\"`. If '\"min_row_height\"' is included in the field mask but the property is left unset, the minimum row height will default to 0.

        :param fields: The fields of this UpdateTableRowPropertiesRequest.
        :type fields: str
        """

        self._fields = fields

    @property
    def object_id(self):
        """Gets the object_id of this UpdateTableRowPropertiesRequest.

        The object ID of the table.

        :return: The object_id of this UpdateTableRowPropertiesRequest.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this UpdateTableRowPropertiesRequest.

        The object ID of the table.

        :param object_id: The object_id of this UpdateTableRowPropertiesRequest.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def row_indices(self):
        """Gets the row_indices of this UpdateTableRowPropertiesRequest.

        The list of zero-based indices specifying which rows to update. If no indices are provided, all rows in the table will be updated.

        :return: The row_indices of this UpdateTableRowPropertiesRequest.
        :rtype: List[int]
        """
        return self._row_indices

    @row_indices.setter
    def row_indices(self, row_indices):
        """Sets the row_indices of this UpdateTableRowPropertiesRequest.

        The list of zero-based indices specifying which rows to update. If no indices are provided, all rows in the table will be updated.

        :param row_indices: The row_indices of this UpdateTableRowPropertiesRequest.
        :type row_indices: List[int]
        """

        self._row_indices = row_indices

    @property
    def table_row_properties(self):
        """Gets the table_row_properties of this UpdateTableRowPropertiesRequest.


        :return: The table_row_properties of this UpdateTableRowPropertiesRequest.
        :rtype: TableRowProperties
        """
        return self._table_row_properties

    @table_row_properties.setter
    def table_row_properties(self, table_row_properties):
        """Sets the table_row_properties of this UpdateTableRowPropertiesRequest.


        :param table_row_properties: The table_row_properties of this UpdateTableRowPropertiesRequest.
        :type table_row_properties: TableRowProperties
        """

        self._table_row_properties = table_row_properties
