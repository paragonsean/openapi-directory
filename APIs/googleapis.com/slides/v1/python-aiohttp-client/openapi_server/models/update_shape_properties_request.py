# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shape_properties import ShapeProperties
from openapi_server import util


class UpdateShapePropertiesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: str=None, object_id: str=None, shape_properties: ShapeProperties=None):
        """UpdateShapePropertiesRequest - a model defined in OpenAPI

        :param fields: The fields of this UpdateShapePropertiesRequest.
        :param object_id: The object_id of this UpdateShapePropertiesRequest.
        :param shape_properties: The shape_properties of this UpdateShapePropertiesRequest.
        """
        self.openapi_types = {
            'fields': str,
            'object_id': str,
            'shape_properties': ShapeProperties
        }

        self.attribute_map = {
            'fields': 'fields',
            'object_id': 'objectId',
            'shape_properties': 'shapeProperties'
        }

        self._fields = fields
        self._object_id = object_id
        self._shape_properties = shape_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateShapePropertiesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateShapePropertiesRequest of this UpdateShapePropertiesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this UpdateShapePropertiesRequest.

        The fields that should be updated. At least one field must be specified. The root `shapeProperties` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example to update the shape background solid fill color, set `fields` to `\"shapeBackgroundFill.solidFill.color\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.

        :return: The fields of this UpdateShapePropertiesRequest.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateShapePropertiesRequest.

        The fields that should be updated. At least one field must be specified. The root `shapeProperties` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example to update the shape background solid fill color, set `fields` to `\"shapeBackgroundFill.solidFill.color\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.

        :param fields: The fields of this UpdateShapePropertiesRequest.
        :type fields: str
        """

        self._fields = fields

    @property
    def object_id(self):
        """Gets the object_id of this UpdateShapePropertiesRequest.

        The object ID of the shape the updates are applied to.

        :return: The object_id of this UpdateShapePropertiesRequest.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this UpdateShapePropertiesRequest.

        The object ID of the shape the updates are applied to.

        :param object_id: The object_id of this UpdateShapePropertiesRequest.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def shape_properties(self):
        """Gets the shape_properties of this UpdateShapePropertiesRequest.


        :return: The shape_properties of this UpdateShapePropertiesRequest.
        :rtype: ShapeProperties
        """
        return self._shape_properties

    @shape_properties.setter
    def shape_properties(self, shape_properties):
        """Sets the shape_properties of this UpdateShapePropertiesRequest.


        :param shape_properties: The shape_properties of this UpdateShapePropertiesRequest.
        :type shape_properties: ShapeProperties
        """

        self._shape_properties = shape_properties
