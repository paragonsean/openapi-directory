# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.solid_fill import SolidFill
from openapi_server import util


class ShapeBackgroundFill(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, property_state: str=None, solid_fill: SolidFill=None):
        """ShapeBackgroundFill - a model defined in OpenAPI

        :param property_state: The property_state of this ShapeBackgroundFill.
        :param solid_fill: The solid_fill of this ShapeBackgroundFill.
        """
        self.openapi_types = {
            'property_state': str,
            'solid_fill': SolidFill
        }

        self.attribute_map = {
            'property_state': 'propertyState',
            'solid_fill': 'solidFill'
        }

        self._property_state = property_state
        self._solid_fill = solid_fill

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShapeBackgroundFill':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShapeBackgroundFill of this ShapeBackgroundFill.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def property_state(self):
        """Gets the property_state of this ShapeBackgroundFill.

        The background fill property state. Updating the fill on a shape will implicitly update this field to `RENDERED`, unless another value is specified in the same request. To have no fill on a shape, set this field to `NOT_RENDERED`. In this case, any other fill fields set in the same request will be ignored.

        :return: The property_state of this ShapeBackgroundFill.
        :rtype: str
        """
        return self._property_state

    @property_state.setter
    def property_state(self, property_state):
        """Sets the property_state of this ShapeBackgroundFill.

        The background fill property state. Updating the fill on a shape will implicitly update this field to `RENDERED`, unless another value is specified in the same request. To have no fill on a shape, set this field to `NOT_RENDERED`. In this case, any other fill fields set in the same request will be ignored.

        :param property_state: The property_state of this ShapeBackgroundFill.
        :type property_state: str
        """
        allowed_values = ["RENDERED", "NOT_RENDERED", "INHERIT"]  # noqa: E501
        if property_state not in allowed_values:
            raise ValueError(
                "Invalid value for `property_state` ({0}), must be one of {1}"
                .format(property_state, allowed_values)
            )

        self._property_state = property_state

    @property
    def solid_fill(self):
        """Gets the solid_fill of this ShapeBackgroundFill.


        :return: The solid_fill of this ShapeBackgroundFill.
        :rtype: SolidFill
        """
        return self._solid_fill

    @solid_fill.setter
    def solid_fill(self, solid_fill):
        """Sets the solid_fill of this ShapeBackgroundFill.


        :param solid_fill: The solid_fill of this ShapeBackgroundFill.
        :type solid_fill: SolidFill
        """

        self._solid_fill = solid_fill
