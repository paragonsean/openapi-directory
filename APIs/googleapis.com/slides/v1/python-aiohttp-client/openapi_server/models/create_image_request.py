# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.page_element_properties import PageElementProperties
from openapi_server import util


class CreateImageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, element_properties: PageElementProperties=None, object_id: str=None, url: str=None):
        """CreateImageRequest - a model defined in OpenAPI

        :param element_properties: The element_properties of this CreateImageRequest.
        :param object_id: The object_id of this CreateImageRequest.
        :param url: The url of this CreateImageRequest.
        """
        self.openapi_types = {
            'element_properties': PageElementProperties,
            'object_id': str,
            'url': str
        }

        self.attribute_map = {
            'element_properties': 'elementProperties',
            'object_id': 'objectId',
            'url': 'url'
        }

        self._element_properties = element_properties
        self._object_id = object_id
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateImageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateImageRequest of this CreateImageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def element_properties(self):
        """Gets the element_properties of this CreateImageRequest.


        :return: The element_properties of this CreateImageRequest.
        :rtype: PageElementProperties
        """
        return self._element_properties

    @element_properties.setter
    def element_properties(self, element_properties):
        """Sets the element_properties of this CreateImageRequest.


        :param element_properties: The element_properties of this CreateImageRequest.
        :type element_properties: PageElementProperties
        """

        self._element_properties = element_properties

    @property
    def object_id(self):
        """Gets the object_id of this CreateImageRequest.

        A user-supplied object ID. If you specify an ID, it must be unique among all pages and page elements in the presentation. The ID must start with an alphanumeric character or an underscore (matches regex `[a-zA-Z0-9_]`); remaining characters may include those as well as a hyphen or colon (matches regex `[a-zA-Z0-9_-:]`). The length of the ID must not be less than 5 or greater than 50. If you don't specify an ID, a unique one is generated.

        :return: The object_id of this CreateImageRequest.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this CreateImageRequest.

        A user-supplied object ID. If you specify an ID, it must be unique among all pages and page elements in the presentation. The ID must start with an alphanumeric character or an underscore (matches regex `[a-zA-Z0-9_]`); remaining characters may include those as well as a hyphen or colon (matches regex `[a-zA-Z0-9_-:]`). The length of the ID must not be less than 5 or greater than 50. If you don't specify an ID, a unique one is generated.

        :param object_id: The object_id of this CreateImageRequest.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def url(self):
        """Gets the url of this CreateImageRequest.

        The image URL. The image is fetched once at insertion time and a copy is stored for display inside the presentation. Images must be less than 50 MB in size, can't exceed 25 megapixels, and must be in one of PNG, JPEG, or GIF formats. The provided URL must be publicly accessible and up to 2 KB in length. The URL is saved with the image, and exposed through the Image.source_url field.

        :return: The url of this CreateImageRequest.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this CreateImageRequest.

        The image URL. The image is fetched once at insertion time and a copy is stored for display inside the presentation. Images must be less than 50 MB in size, can't exceed 25 megapixels, and must be in one of PNG, JPEG, or GIF formats. The provided URL must be publicly accessible and up to 2 KB in length. The URL is saved with the image, and exposed through the Image.source_url field.

        :param url: The url of this CreateImageRequest.
        :type url: str
        """

        self._url = url
