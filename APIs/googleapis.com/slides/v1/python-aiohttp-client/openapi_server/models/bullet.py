# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.text_style import TextStyle
from openapi_server import util


class Bullet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bullet_style: TextStyle=None, glyph: str=None, list_id: str=None, nesting_level: int=None):
        """Bullet - a model defined in OpenAPI

        :param bullet_style: The bullet_style of this Bullet.
        :param glyph: The glyph of this Bullet.
        :param list_id: The list_id of this Bullet.
        :param nesting_level: The nesting_level of this Bullet.
        """
        self.openapi_types = {
            'bullet_style': TextStyle,
            'glyph': str,
            'list_id': str,
            'nesting_level': int
        }

        self.attribute_map = {
            'bullet_style': 'bulletStyle',
            'glyph': 'glyph',
            'list_id': 'listId',
            'nesting_level': 'nestingLevel'
        }

        self._bullet_style = bullet_style
        self._glyph = glyph
        self._list_id = list_id
        self._nesting_level = nesting_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Bullet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bullet of this Bullet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bullet_style(self):
        """Gets the bullet_style of this Bullet.


        :return: The bullet_style of this Bullet.
        :rtype: TextStyle
        """
        return self._bullet_style

    @bullet_style.setter
    def bullet_style(self, bullet_style):
        """Sets the bullet_style of this Bullet.


        :param bullet_style: The bullet_style of this Bullet.
        :type bullet_style: TextStyle
        """

        self._bullet_style = bullet_style

    @property
    def glyph(self):
        """Gets the glyph of this Bullet.

        The rendered bullet glyph for this paragraph.

        :return: The glyph of this Bullet.
        :rtype: str
        """
        return self._glyph

    @glyph.setter
    def glyph(self, glyph):
        """Sets the glyph of this Bullet.

        The rendered bullet glyph for this paragraph.

        :param glyph: The glyph of this Bullet.
        :type glyph: str
        """

        self._glyph = glyph

    @property
    def list_id(self):
        """Gets the list_id of this Bullet.

        The ID of the list this paragraph belongs to.

        :return: The list_id of this Bullet.
        :rtype: str
        """
        return self._list_id

    @list_id.setter
    def list_id(self, list_id):
        """Sets the list_id of this Bullet.

        The ID of the list this paragraph belongs to.

        :param list_id: The list_id of this Bullet.
        :type list_id: str
        """

        self._list_id = list_id

    @property
    def nesting_level(self):
        """Gets the nesting_level of this Bullet.

        The nesting level of this paragraph in the list.

        :return: The nesting_level of this Bullet.
        :rtype: int
        """
        return self._nesting_level

    @nesting_level.setter
    def nesting_level(self, nesting_level):
        """Sets the nesting_level of this Bullet.

        The nesting level of this paragraph in the list.

        :param nesting_level: The nesting_level of this Bullet.
        :type nesting_level: int
        """

        self._nesting_level = nesting_level
