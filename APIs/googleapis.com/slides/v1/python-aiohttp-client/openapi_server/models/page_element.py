# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.affine_transform import AffineTransform
from openapi_server.models.group import Group
from openapi_server.models.image import Image
from openapi_server.models.line import Line
from openapi_server.models.shape import Shape
from openapi_server.models.sheets_chart import SheetsChart
from openapi_server.models.size import Size
from openapi_server.models.table import Table
from openapi_server.models.video import Video
from openapi_server.models.word_art import WordArt
from openapi_server import util


class PageElement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, element_group: Group=None, image: Image=None, line: Line=None, object_id: str=None, shape: Shape=None, sheets_chart: SheetsChart=None, size: Size=None, table: Table=None, title: str=None, transform: AffineTransform=None, video: Video=None, word_art: WordArt=None):
        """PageElement - a model defined in OpenAPI

        :param description: The description of this PageElement.
        :param element_group: The element_group of this PageElement.
        :param image: The image of this PageElement.
        :param line: The line of this PageElement.
        :param object_id: The object_id of this PageElement.
        :param shape: The shape of this PageElement.
        :param sheets_chart: The sheets_chart of this PageElement.
        :param size: The size of this PageElement.
        :param table: The table of this PageElement.
        :param title: The title of this PageElement.
        :param transform: The transform of this PageElement.
        :param video: The video of this PageElement.
        :param word_art: The word_art of this PageElement.
        """
        self.openapi_types = {
            'description': str,
            'element_group': Group,
            'image': Image,
            'line': Line,
            'object_id': str,
            'shape': Shape,
            'sheets_chart': SheetsChart,
            'size': Size,
            'table': Table,
            'title': str,
            'transform': AffineTransform,
            'video': Video,
            'word_art': WordArt
        }

        self.attribute_map = {
            'description': 'description',
            'element_group': 'elementGroup',
            'image': 'image',
            'line': 'line',
            'object_id': 'objectId',
            'shape': 'shape',
            'sheets_chart': 'sheetsChart',
            'size': 'size',
            'table': 'table',
            'title': 'title',
            'transform': 'transform',
            'video': 'video',
            'word_art': 'wordArt'
        }

        self._description = description
        self._element_group = element_group
        self._image = image
        self._line = line
        self._object_id = object_id
        self._shape = shape
        self._sheets_chart = sheets_chart
        self._size = size
        self._table = table
        self._title = title
        self._transform = transform
        self._video = video
        self._word_art = word_art

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PageElement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PageElement of this PageElement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this PageElement.

        The description of the page element. Combined with title to display alt text. The field is not supported for Group elements.

        :return: The description of this PageElement.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PageElement.

        The description of the page element. Combined with title to display alt text. The field is not supported for Group elements.

        :param description: The description of this PageElement.
        :type description: str
        """

        self._description = description

    @property
    def element_group(self):
        """Gets the element_group of this PageElement.


        :return: The element_group of this PageElement.
        :rtype: Group
        """
        return self._element_group

    @element_group.setter
    def element_group(self, element_group):
        """Sets the element_group of this PageElement.


        :param element_group: The element_group of this PageElement.
        :type element_group: Group
        """

        self._element_group = element_group

    @property
    def image(self):
        """Gets the image of this PageElement.


        :return: The image of this PageElement.
        :rtype: Image
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this PageElement.


        :param image: The image of this PageElement.
        :type image: Image
        """

        self._image = image

    @property
    def line(self):
        """Gets the line of this PageElement.


        :return: The line of this PageElement.
        :rtype: Line
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this PageElement.


        :param line: The line of this PageElement.
        :type line: Line
        """

        self._line = line

    @property
    def object_id(self):
        """Gets the object_id of this PageElement.

        The object ID for this page element. Object IDs used by google.apps.slides.v1.Page and google.apps.slides.v1.PageElement share the same namespace.

        :return: The object_id of this PageElement.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this PageElement.

        The object ID for this page element. Object IDs used by google.apps.slides.v1.Page and google.apps.slides.v1.PageElement share the same namespace.

        :param object_id: The object_id of this PageElement.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def shape(self):
        """Gets the shape of this PageElement.


        :return: The shape of this PageElement.
        :rtype: Shape
        """
        return self._shape

    @shape.setter
    def shape(self, shape):
        """Sets the shape of this PageElement.


        :param shape: The shape of this PageElement.
        :type shape: Shape
        """

        self._shape = shape

    @property
    def sheets_chart(self):
        """Gets the sheets_chart of this PageElement.


        :return: The sheets_chart of this PageElement.
        :rtype: SheetsChart
        """
        return self._sheets_chart

    @sheets_chart.setter
    def sheets_chart(self, sheets_chart):
        """Sets the sheets_chart of this PageElement.


        :param sheets_chart: The sheets_chart of this PageElement.
        :type sheets_chart: SheetsChart
        """

        self._sheets_chart = sheets_chart

    @property
    def size(self):
        """Gets the size of this PageElement.


        :return: The size of this PageElement.
        :rtype: Size
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this PageElement.


        :param size: The size of this PageElement.
        :type size: Size
        """

        self._size = size

    @property
    def table(self):
        """Gets the table of this PageElement.


        :return: The table of this PageElement.
        :rtype: Table
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this PageElement.


        :param table: The table of this PageElement.
        :type table: Table
        """

        self._table = table

    @property
    def title(self):
        """Gets the title of this PageElement.

        The title of the page element. Combined with description to display alt text. The field is not supported for Group elements.

        :return: The title of this PageElement.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PageElement.

        The title of the page element. Combined with description to display alt text. The field is not supported for Group elements.

        :param title: The title of this PageElement.
        :type title: str
        """

        self._title = title

    @property
    def transform(self):
        """Gets the transform of this PageElement.


        :return: The transform of this PageElement.
        :rtype: AffineTransform
        """
        return self._transform

    @transform.setter
    def transform(self, transform):
        """Sets the transform of this PageElement.


        :param transform: The transform of this PageElement.
        :type transform: AffineTransform
        """

        self._transform = transform

    @property
    def video(self):
        """Gets the video of this PageElement.


        :return: The video of this PageElement.
        :rtype: Video
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this PageElement.


        :param video: The video of this PageElement.
        :type video: Video
        """

        self._video = video

    @property
    def word_art(self):
        """Gets the word_art of this PageElement.


        :return: The word_art of this PageElement.
        :rtype: WordArt
        """
        return self._word_art

    @word_art.setter
    def word_art(self, word_art):
        """Sets the word_art of this PageElement.


        :param word_art: The word_art of this PageElement.
        :type word_art: WordArt
        """

        self._word_art = word_art
