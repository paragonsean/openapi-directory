# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_properties import ImageProperties
from openapi_server import util


class SheetsChartProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chart_image_properties: ImageProperties=None):
        """SheetsChartProperties - a model defined in OpenAPI

        :param chart_image_properties: The chart_image_properties of this SheetsChartProperties.
        """
        self.openapi_types = {
            'chart_image_properties': ImageProperties
        }

        self.attribute_map = {
            'chart_image_properties': 'chartImageProperties'
        }

        self._chart_image_properties = chart_image_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SheetsChartProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SheetsChartProperties of this SheetsChartProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chart_image_properties(self):
        """Gets the chart_image_properties of this SheetsChartProperties.


        :return: The chart_image_properties of this SheetsChartProperties.
        :rtype: ImageProperties
        """
        return self._chart_image_properties

    @chart_image_properties.setter
    def chart_image_properties(self, chart_image_properties):
        """Sets the chart_image_properties of this SheetsChartProperties.


        :param chart_image_properties: The chart_image_properties of this SheetsChartProperties.
        :type chart_image_properties: ImageProperties
        """

        self._chart_image_properties = chart_image_properties
