# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.opaque_color import OpaqueColor
from openapi_server import util


class ColorStop(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alpha: float=None, color: OpaqueColor=None, position: float=None):
        """ColorStop - a model defined in OpenAPI

        :param alpha: The alpha of this ColorStop.
        :param color: The color of this ColorStop.
        :param position: The position of this ColorStop.
        """
        self.openapi_types = {
            'alpha': float,
            'color': OpaqueColor,
            'position': float
        }

        self.attribute_map = {
            'alpha': 'alpha',
            'color': 'color',
            'position': 'position'
        }

        self._alpha = alpha
        self._color = color
        self._position = position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ColorStop':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ColorStop of this ColorStop.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alpha(self):
        """Gets the alpha of this ColorStop.

        The alpha value of this color in the gradient band. Defaults to 1.0, fully opaque.

        :return: The alpha of this ColorStop.
        :rtype: float
        """
        return self._alpha

    @alpha.setter
    def alpha(self, alpha):
        """Sets the alpha of this ColorStop.

        The alpha value of this color in the gradient band. Defaults to 1.0, fully opaque.

        :param alpha: The alpha of this ColorStop.
        :type alpha: float
        """

        self._alpha = alpha

    @property
    def color(self):
        """Gets the color of this ColorStop.


        :return: The color of this ColorStop.
        :rtype: OpaqueColor
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this ColorStop.


        :param color: The color of this ColorStop.
        :type color: OpaqueColor
        """

        self._color = color

    @property
    def position(self):
        """Gets the position of this ColorStop.

        The relative position of the color stop in the gradient band measured in percentage. The value should be in the interval [0.0, 1.0].

        :return: The position of this ColorStop.
        :rtype: float
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ColorStop.

        The relative position of the color stop in the gradient band measured in percentage. The value should be in the interval [0.0, 1.0].

        :param position: The position of this ColorStop.
        :type position: float
        """

        self._position = position
