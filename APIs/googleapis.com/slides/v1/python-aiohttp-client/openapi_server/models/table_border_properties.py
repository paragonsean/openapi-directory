# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension import Dimension
from openapi_server.models.table_border_fill import TableBorderFill
from openapi_server import util


class TableBorderProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dash_style: str=None, table_border_fill: TableBorderFill=None, weight: Dimension=None):
        """TableBorderProperties - a model defined in OpenAPI

        :param dash_style: The dash_style of this TableBorderProperties.
        :param table_border_fill: The table_border_fill of this TableBorderProperties.
        :param weight: The weight of this TableBorderProperties.
        """
        self.openapi_types = {
            'dash_style': str,
            'table_border_fill': TableBorderFill,
            'weight': Dimension
        }

        self.attribute_map = {
            'dash_style': 'dashStyle',
            'table_border_fill': 'tableBorderFill',
            'weight': 'weight'
        }

        self._dash_style = dash_style
        self._table_border_fill = table_border_fill
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableBorderProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableBorderProperties of this TableBorderProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dash_style(self):
        """Gets the dash_style of this TableBorderProperties.

        The dash style of the border.

        :return: The dash_style of this TableBorderProperties.
        :rtype: str
        """
        return self._dash_style

    @dash_style.setter
    def dash_style(self, dash_style):
        """Sets the dash_style of this TableBorderProperties.

        The dash style of the border.

        :param dash_style: The dash_style of this TableBorderProperties.
        :type dash_style: str
        """
        allowed_values = ["DASH_STYLE_UNSPECIFIED", "SOLID", "DOT", "DASH", "DASH_DOT", "LONG_DASH", "LONG_DASH_DOT"]  # noqa: E501
        if dash_style not in allowed_values:
            raise ValueError(
                "Invalid value for `dash_style` ({0}), must be one of {1}"
                .format(dash_style, allowed_values)
            )

        self._dash_style = dash_style

    @property
    def table_border_fill(self):
        """Gets the table_border_fill of this TableBorderProperties.


        :return: The table_border_fill of this TableBorderProperties.
        :rtype: TableBorderFill
        """
        return self._table_border_fill

    @table_border_fill.setter
    def table_border_fill(self, table_border_fill):
        """Sets the table_border_fill of this TableBorderProperties.


        :param table_border_fill: The table_border_fill of this TableBorderProperties.
        :type table_border_fill: TableBorderFill
        """

        self._table_border_fill = table_border_fill

    @property
    def weight(self):
        """Gets the weight of this TableBorderProperties.


        :return: The weight of this TableBorderProperties.
        :rtype: Dimension
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this TableBorderProperties.


        :param weight: The weight of this TableBorderProperties.
        :type weight: Dimension
        """

        self._weight = weight
