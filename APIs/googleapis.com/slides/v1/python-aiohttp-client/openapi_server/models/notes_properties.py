# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotesProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, speaker_notes_object_id: str=None):
        """NotesProperties - a model defined in OpenAPI

        :param speaker_notes_object_id: The speaker_notes_object_id of this NotesProperties.
        """
        self.openapi_types = {
            'speaker_notes_object_id': str
        }

        self.attribute_map = {
            'speaker_notes_object_id': 'speakerNotesObjectId'
        }

        self._speaker_notes_object_id = speaker_notes_object_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotesProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotesProperties of this NotesProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def speaker_notes_object_id(self):
        """Gets the speaker_notes_object_id of this NotesProperties.

        The object ID of the shape on this notes page that contains the speaker notes for the corresponding slide. The actual shape may not always exist on the notes page. Inserting text using this object ID will automatically create the shape. In this case, the actual shape may have different object ID. The `GetPresentation` or `GetPage` action will always return the latest object ID.

        :return: The speaker_notes_object_id of this NotesProperties.
        :rtype: str
        """
        return self._speaker_notes_object_id

    @speaker_notes_object_id.setter
    def speaker_notes_object_id(self, speaker_notes_object_id):
        """Sets the speaker_notes_object_id of this NotesProperties.

        The object ID of the shape on this notes page that contains the speaker notes for the corresponding slide. The actual shape may not always exist on the notes page. Inserting text using this object ID will automatically create the shape. In this case, the actual shape may have different object ID. The `GetPresentation` or `GetPage` action will always return the latest object ID.

        :param speaker_notes_object_id: The speaker_notes_object_id of this NotesProperties.
        :type speaker_notes_object_id: str
        """

        self._speaker_notes_object_id = speaker_notes_object_id
