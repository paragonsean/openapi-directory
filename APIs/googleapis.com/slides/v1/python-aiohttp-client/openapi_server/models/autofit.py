# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Autofit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, autofit_type: str=None, font_scale: float=None, line_spacing_reduction: float=None):
        """Autofit - a model defined in OpenAPI

        :param autofit_type: The autofit_type of this Autofit.
        :param font_scale: The font_scale of this Autofit.
        :param line_spacing_reduction: The line_spacing_reduction of this Autofit.
        """
        self.openapi_types = {
            'autofit_type': str,
            'font_scale': float,
            'line_spacing_reduction': float
        }

        self.attribute_map = {
            'autofit_type': 'autofitType',
            'font_scale': 'fontScale',
            'line_spacing_reduction': 'lineSpacingReduction'
        }

        self._autofit_type = autofit_type
        self._font_scale = font_scale
        self._line_spacing_reduction = line_spacing_reduction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Autofit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Autofit of this Autofit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def autofit_type(self):
        """Gets the autofit_type of this Autofit.

        The autofit type of the shape. If the autofit type is AUTOFIT_TYPE_UNSPECIFIED, the autofit type is inherited from a parent placeholder if it exists. The field is automatically set to NONE if a request is made that might affect text fitting within its bounding text box. In this case the font_scale is applied to the font_size and the line_spacing_reduction is applied to the line_spacing. Both properties are also reset to default values.

        :return: The autofit_type of this Autofit.
        :rtype: str
        """
        return self._autofit_type

    @autofit_type.setter
    def autofit_type(self, autofit_type):
        """Sets the autofit_type of this Autofit.

        The autofit type of the shape. If the autofit type is AUTOFIT_TYPE_UNSPECIFIED, the autofit type is inherited from a parent placeholder if it exists. The field is automatically set to NONE if a request is made that might affect text fitting within its bounding text box. In this case the font_scale is applied to the font_size and the line_spacing_reduction is applied to the line_spacing. Both properties are also reset to default values.

        :param autofit_type: The autofit_type of this Autofit.
        :type autofit_type: str
        """
        allowed_values = ["AUTOFIT_TYPE_UNSPECIFIED", "NONE", "TEXT_AUTOFIT", "SHAPE_AUTOFIT"]  # noqa: E501
        if autofit_type not in allowed_values:
            raise ValueError(
                "Invalid value for `autofit_type` ({0}), must be one of {1}"
                .format(autofit_type, allowed_values)
            )

        self._autofit_type = autofit_type

    @property
    def font_scale(self):
        """Gets the font_scale of this Autofit.

        The font scale applied to the shape. For shapes with autofit_type NONE or SHAPE_AUTOFIT, this value is the default value of 1. For TEXT_AUTOFIT, this value multiplied by the font_size gives the font size that is rendered in the editor. This property is read-only.

        :return: The font_scale of this Autofit.
        :rtype: float
        """
        return self._font_scale

    @font_scale.setter
    def font_scale(self, font_scale):
        """Sets the font_scale of this Autofit.

        The font scale applied to the shape. For shapes with autofit_type NONE or SHAPE_AUTOFIT, this value is the default value of 1. For TEXT_AUTOFIT, this value multiplied by the font_size gives the font size that is rendered in the editor. This property is read-only.

        :param font_scale: The font_scale of this Autofit.
        :type font_scale: float
        """

        self._font_scale = font_scale

    @property
    def line_spacing_reduction(self):
        """Gets the line_spacing_reduction of this Autofit.

        The line spacing reduction applied to the shape. For shapes with autofit_type NONE or SHAPE_AUTOFIT, this value is the default value of 0. For TEXT_AUTOFIT, this value subtracted from the line_spacing gives the line spacing that is rendered in the editor. This property is read-only.

        :return: The line_spacing_reduction of this Autofit.
        :rtype: float
        """
        return self._line_spacing_reduction

    @line_spacing_reduction.setter
    def line_spacing_reduction(self, line_spacing_reduction):
        """Sets the line_spacing_reduction of this Autofit.

        The line spacing reduction applied to the shape. For shapes with autofit_type NONE or SHAPE_AUTOFIT, this value is the default value of 0. For TEXT_AUTOFIT, this value subtracted from the line_spacing gives the line spacing that is rendered in the editor. This property is read-only.

        :param line_spacing_reduction: The line_spacing_reduction of this Autofit.
        :type line_spacing_reduction: float
        """

        self._line_spacing_reduction = line_spacing_reduction
