# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.page_element_properties import PageElementProperties
from openapi_server import util


class CreateSheetsChartRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chart_id: int=None, element_properties: PageElementProperties=None, linking_mode: str=None, object_id: str=None, spreadsheet_id: str=None):
        """CreateSheetsChartRequest - a model defined in OpenAPI

        :param chart_id: The chart_id of this CreateSheetsChartRequest.
        :param element_properties: The element_properties of this CreateSheetsChartRequest.
        :param linking_mode: The linking_mode of this CreateSheetsChartRequest.
        :param object_id: The object_id of this CreateSheetsChartRequest.
        :param spreadsheet_id: The spreadsheet_id of this CreateSheetsChartRequest.
        """
        self.openapi_types = {
            'chart_id': int,
            'element_properties': PageElementProperties,
            'linking_mode': str,
            'object_id': str,
            'spreadsheet_id': str
        }

        self.attribute_map = {
            'chart_id': 'chartId',
            'element_properties': 'elementProperties',
            'linking_mode': 'linkingMode',
            'object_id': 'objectId',
            'spreadsheet_id': 'spreadsheetId'
        }

        self._chart_id = chart_id
        self._element_properties = element_properties
        self._linking_mode = linking_mode
        self._object_id = object_id
        self._spreadsheet_id = spreadsheet_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSheetsChartRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSheetsChartRequest of this CreateSheetsChartRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chart_id(self):
        """Gets the chart_id of this CreateSheetsChartRequest.

        The ID of the specific chart in the Google Sheets spreadsheet.

        :return: The chart_id of this CreateSheetsChartRequest.
        :rtype: int
        """
        return self._chart_id

    @chart_id.setter
    def chart_id(self, chart_id):
        """Sets the chart_id of this CreateSheetsChartRequest.

        The ID of the specific chart in the Google Sheets spreadsheet.

        :param chart_id: The chart_id of this CreateSheetsChartRequest.
        :type chart_id: int
        """

        self._chart_id = chart_id

    @property
    def element_properties(self):
        """Gets the element_properties of this CreateSheetsChartRequest.


        :return: The element_properties of this CreateSheetsChartRequest.
        :rtype: PageElementProperties
        """
        return self._element_properties

    @element_properties.setter
    def element_properties(self, element_properties):
        """Sets the element_properties of this CreateSheetsChartRequest.


        :param element_properties: The element_properties of this CreateSheetsChartRequest.
        :type element_properties: PageElementProperties
        """

        self._element_properties = element_properties

    @property
    def linking_mode(self):
        """Gets the linking_mode of this CreateSheetsChartRequest.

        The mode with which the chart is linked to the source spreadsheet. When not specified, the chart will be an image that is not linked.

        :return: The linking_mode of this CreateSheetsChartRequest.
        :rtype: str
        """
        return self._linking_mode

    @linking_mode.setter
    def linking_mode(self, linking_mode):
        """Sets the linking_mode of this CreateSheetsChartRequest.

        The mode with which the chart is linked to the source spreadsheet. When not specified, the chart will be an image that is not linked.

        :param linking_mode: The linking_mode of this CreateSheetsChartRequest.
        :type linking_mode: str
        """
        allowed_values = ["NOT_LINKED_IMAGE", "LINKED"]  # noqa: E501
        if linking_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `linking_mode` ({0}), must be one of {1}"
                .format(linking_mode, allowed_values)
            )

        self._linking_mode = linking_mode

    @property
    def object_id(self):
        """Gets the object_id of this CreateSheetsChartRequest.

        A user-supplied object ID. If specified, the ID must be unique among all pages and page elements in the presentation. The ID should start with a word character [a-zA-Z0-9_] and then followed by any number of the following characters [a-zA-Z0-9_-:]. The length of the ID should not be less than 5 or greater than 50. If empty, a unique identifier will be generated.

        :return: The object_id of this CreateSheetsChartRequest.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this CreateSheetsChartRequest.

        A user-supplied object ID. If specified, the ID must be unique among all pages and page elements in the presentation. The ID should start with a word character [a-zA-Z0-9_] and then followed by any number of the following characters [a-zA-Z0-9_-:]. The length of the ID should not be less than 5 or greater than 50. If empty, a unique identifier will be generated.

        :param object_id: The object_id of this CreateSheetsChartRequest.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def spreadsheet_id(self):
        """Gets the spreadsheet_id of this CreateSheetsChartRequest.

        The ID of the Google Sheets spreadsheet that contains the chart. You might need to add a resource key to the HTTP header for a subset of old files. For more information, see [Access link-shared files using resource keys](https://developers.google.com/drive/api/v3/resource-keys).

        :return: The spreadsheet_id of this CreateSheetsChartRequest.
        :rtype: str
        """
        return self._spreadsheet_id

    @spreadsheet_id.setter
    def spreadsheet_id(self, spreadsheet_id):
        """Sets the spreadsheet_id of this CreateSheetsChartRequest.

        The ID of the Google Sheets spreadsheet that contains the chart. You might need to add a resource key to the HTTP header for a subset of old files. For more information, see [Access link-shared files using resource keys](https://developers.google.com/drive/api/v3/resource-keys).

        :param spreadsheet_id: The spreadsheet_id of this CreateSheetsChartRequest.
        :type spreadsheet_id: str
        """

        self._spreadsheet_id = spreadsheet_id
