# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.text_style import TextStyle
from openapi_server import util


class NestingLevel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bullet_style: TextStyle=None):
        """NestingLevel - a model defined in OpenAPI

        :param bullet_style: The bullet_style of this NestingLevel.
        """
        self.openapi_types = {
            'bullet_style': TextStyle
        }

        self.attribute_map = {
            'bullet_style': 'bulletStyle'
        }

        self._bullet_style = bullet_style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NestingLevel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NestingLevel of this NestingLevel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bullet_style(self):
        """Gets the bullet_style of this NestingLevel.


        :return: The bullet_style of this NestingLevel.
        :rtype: TextStyle
        """
        return self._bullet_style

    @bullet_style.setter
    def bullet_style(self, bullet_style):
        """Sets the bullet_style of this NestingLevel.


        :param bullet_style: The bullet_style of this NestingLevel.
        :type bullet_style: TextStyle
        """

        self._bullet_style = bullet_style
