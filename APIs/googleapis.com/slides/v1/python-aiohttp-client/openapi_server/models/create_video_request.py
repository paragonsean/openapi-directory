# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.page_element_properties import PageElementProperties
from openapi_server import util


class CreateVideoRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, element_properties: PageElementProperties=None, id: str=None, object_id: str=None, source: str=None):
        """CreateVideoRequest - a model defined in OpenAPI

        :param element_properties: The element_properties of this CreateVideoRequest.
        :param id: The id of this CreateVideoRequest.
        :param object_id: The object_id of this CreateVideoRequest.
        :param source: The source of this CreateVideoRequest.
        """
        self.openapi_types = {
            'element_properties': PageElementProperties,
            'id': str,
            'object_id': str,
            'source': str
        }

        self.attribute_map = {
            'element_properties': 'elementProperties',
            'id': 'id',
            'object_id': 'objectId',
            'source': 'source'
        }

        self._element_properties = element_properties
        self._id = id
        self._object_id = object_id
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVideoRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateVideoRequest of this CreateVideoRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def element_properties(self):
        """Gets the element_properties of this CreateVideoRequest.


        :return: The element_properties of this CreateVideoRequest.
        :rtype: PageElementProperties
        """
        return self._element_properties

    @element_properties.setter
    def element_properties(self, element_properties):
        """Sets the element_properties of this CreateVideoRequest.


        :param element_properties: The element_properties of this CreateVideoRequest.
        :type element_properties: PageElementProperties
        """

        self._element_properties = element_properties

    @property
    def id(self):
        """Gets the id of this CreateVideoRequest.

        The video source's unique identifier for this video. e.g. For YouTube video https://www.youtube.com/watch?v=7U3axjORYZ0, the ID is 7U3axjORYZ0. For a Google Drive video https://drive.google.com/file/d/1xCgQLFTJi5_Xl8DgW_lcUYq5e-q6Hi5Q the ID is 1xCgQLFTJi5_Xl8DgW_lcUYq5e-q6Hi5Q. To access a Google Drive video file, you might need to add a resource key to the HTTP header for a subset of old files. For more information, see [Access link-shared files using resource keys](https://developers.google.com/drive/api/v3/resource-keys).

        :return: The id of this CreateVideoRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateVideoRequest.

        The video source's unique identifier for this video. e.g. For YouTube video https://www.youtube.com/watch?v=7U3axjORYZ0, the ID is 7U3axjORYZ0. For a Google Drive video https://drive.google.com/file/d/1xCgQLFTJi5_Xl8DgW_lcUYq5e-q6Hi5Q the ID is 1xCgQLFTJi5_Xl8DgW_lcUYq5e-q6Hi5Q. To access a Google Drive video file, you might need to add a resource key to the HTTP header for a subset of old files. For more information, see [Access link-shared files using resource keys](https://developers.google.com/drive/api/v3/resource-keys).

        :param id: The id of this CreateVideoRequest.
        :type id: str
        """

        self._id = id

    @property
    def object_id(self):
        """Gets the object_id of this CreateVideoRequest.

        A user-supplied object ID. If you specify an ID, it must be unique among all pages and page elements in the presentation. The ID must start with an alphanumeric character or an underscore (matches regex `[a-zA-Z0-9_]`); remaining characters may include those as well as a hyphen or colon (matches regex `[a-zA-Z0-9_-:]`). The length of the ID must not be less than 5 or greater than 50. If you don't specify an ID, a unique one is generated.

        :return: The object_id of this CreateVideoRequest.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this CreateVideoRequest.

        A user-supplied object ID. If you specify an ID, it must be unique among all pages and page elements in the presentation. The ID must start with an alphanumeric character or an underscore (matches regex `[a-zA-Z0-9_]`); remaining characters may include those as well as a hyphen or colon (matches regex `[a-zA-Z0-9_-:]`). The length of the ID must not be less than 5 or greater than 50. If you don't specify an ID, a unique one is generated.

        :param object_id: The object_id of this CreateVideoRequest.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def source(self):
        """Gets the source of this CreateVideoRequest.

        The video source.

        :return: The source of this CreateVideoRequest.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this CreateVideoRequest.

        The video source.

        :param source: The source of this CreateVideoRequest.
        :type source: str
        """
        allowed_values = ["SOURCE_UNSPECIFIED", "YOUTUBE", "DRIVE"]  # noqa: E501
        if source not in allowed_values:
            raise ValueError(
                "Invalid value for `source` ({0}), must be one of {1}"
                .format(source, allowed_values)
            )

        self._source = source
