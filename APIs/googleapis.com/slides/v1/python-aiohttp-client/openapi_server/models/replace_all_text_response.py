# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReplaceAllTextResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, occurrences_changed: int=None):
        """ReplaceAllTextResponse - a model defined in OpenAPI

        :param occurrences_changed: The occurrences_changed of this ReplaceAllTextResponse.
        """
        self.openapi_types = {
            'occurrences_changed': int
        }

        self.attribute_map = {
            'occurrences_changed': 'occurrencesChanged'
        }

        self._occurrences_changed = occurrences_changed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplaceAllTextResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplaceAllTextResponse of this ReplaceAllTextResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def occurrences_changed(self):
        """Gets the occurrences_changed of this ReplaceAllTextResponse.

        The number of occurrences changed by replacing all text.

        :return: The occurrences_changed of this ReplaceAllTextResponse.
        :rtype: int
        """
        return self._occurrences_changed

    @occurrences_changed.setter
    def occurrences_changed(self, occurrences_changed):
        """Sets the occurrences_changed of this ReplaceAllTextResponse.

        The number of occurrences changed by replacing all text.

        :param occurrences_changed: The occurrences_changed of this ReplaceAllTextResponse.
        :type occurrences_changed: int
        """

        self._occurrences_changed = occurrences_changed
