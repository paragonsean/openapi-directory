# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.text_element import TextElement
from openapi_server import util


class TextContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lists: Dict[str, List]=None, text_elements: List[TextElement]=None):
        """TextContent - a model defined in OpenAPI

        :param lists: The lists of this TextContent.
        :param text_elements: The text_elements of this TextContent.
        """
        self.openapi_types = {
            'lists': Dict[str, List],
            'text_elements': List[TextElement]
        }

        self.attribute_map = {
            'lists': 'lists',
            'text_elements': 'textElements'
        }

        self._lists = lists
        self._text_elements = text_elements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextContent of this TextContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lists(self):
        """Gets the lists of this TextContent.

        The bulleted lists contained in this text, keyed by list ID.

        :return: The lists of this TextContent.
        :rtype: Dict[str, List]
        """
        return self._lists

    @lists.setter
    def lists(self, lists):
        """Sets the lists of this TextContent.

        The bulleted lists contained in this text, keyed by list ID.

        :param lists: The lists of this TextContent.
        :type lists: Dict[str, List]
        """

        self._lists = lists

    @property
    def text_elements(self):
        """Gets the text_elements of this TextContent.

        The text contents broken down into its component parts, including styling information. This property is read-only.

        :return: The text_elements of this TextContent.
        :rtype: List[TextElement]
        """
        return self._text_elements

    @text_elements.setter
    def text_elements(self, text_elements):
        """Sets the text_elements of this TextContent.

        The text contents broken down into its component parts, including styling information. This property is read-only.

        :param text_elements: The text_elements of this TextContent.
        :type text_elements: List[TextElement]
        """

        self._text_elements = text_elements
