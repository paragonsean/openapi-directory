# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.line_properties import LineProperties
from openapi_server import util


class UpdateLinePropertiesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: str=None, line_properties: LineProperties=None, object_id: str=None):
        """UpdateLinePropertiesRequest - a model defined in OpenAPI

        :param fields: The fields of this UpdateLinePropertiesRequest.
        :param line_properties: The line_properties of this UpdateLinePropertiesRequest.
        :param object_id: The object_id of this UpdateLinePropertiesRequest.
        """
        self.openapi_types = {
            'fields': str,
            'line_properties': LineProperties,
            'object_id': str
        }

        self.attribute_map = {
            'fields': 'fields',
            'line_properties': 'lineProperties',
            'object_id': 'objectId'
        }

        self._fields = fields
        self._line_properties = line_properties
        self._object_id = object_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateLinePropertiesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateLinePropertiesRequest of this UpdateLinePropertiesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this UpdateLinePropertiesRequest.

        The fields that should be updated. At least one field must be specified. The root `lineProperties` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example to update the line solid fill color, set `fields` to `\"lineFill.solidFill.color\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.

        :return: The fields of this UpdateLinePropertiesRequest.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateLinePropertiesRequest.

        The fields that should be updated. At least one field must be specified. The root `lineProperties` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example to update the line solid fill color, set `fields` to `\"lineFill.solidFill.color\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.

        :param fields: The fields of this UpdateLinePropertiesRequest.
        :type fields: str
        """

        self._fields = fields

    @property
    def line_properties(self):
        """Gets the line_properties of this UpdateLinePropertiesRequest.


        :return: The line_properties of this UpdateLinePropertiesRequest.
        :rtype: LineProperties
        """
        return self._line_properties

    @line_properties.setter
    def line_properties(self, line_properties):
        """Sets the line_properties of this UpdateLinePropertiesRequest.


        :param line_properties: The line_properties of this UpdateLinePropertiesRequest.
        :type line_properties: LineProperties
        """

        self._line_properties = line_properties

    @property
    def object_id(self):
        """Gets the object_id of this UpdateLinePropertiesRequest.

        The object ID of the line the update is applied to.

        :return: The object_id of this UpdateLinePropertiesRequest.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this UpdateLinePropertiesRequest.

        The object ID of the line the update is applied to.

        :param object_id: The object_id of this UpdateLinePropertiesRequest.
        :type object_id: str
        """

        self._object_id = object_id
