# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.table_border_properties import TableBorderProperties
from openapi_server.models.table_cell_location import TableCellLocation
from openapi_server import util


class TableBorderCell(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location: TableCellLocation=None, table_border_properties: TableBorderProperties=None):
        """TableBorderCell - a model defined in OpenAPI

        :param location: The location of this TableBorderCell.
        :param table_border_properties: The table_border_properties of this TableBorderCell.
        """
        self.openapi_types = {
            'location': TableCellLocation,
            'table_border_properties': TableBorderProperties
        }

        self.attribute_map = {
            'location': 'location',
            'table_border_properties': 'tableBorderProperties'
        }

        self._location = location
        self._table_border_properties = table_border_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableBorderCell':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableBorderCell of this TableBorderCell.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self):
        """Gets the location of this TableBorderCell.


        :return: The location of this TableBorderCell.
        :rtype: TableCellLocation
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this TableBorderCell.


        :param location: The location of this TableBorderCell.
        :type location: TableCellLocation
        """

        self._location = location

    @property
    def table_border_properties(self):
        """Gets the table_border_properties of this TableBorderCell.


        :return: The table_border_properties of this TableBorderCell.
        :rtype: TableBorderProperties
        """
        return self._table_border_properties

    @table_border_properties.setter
    def table_border_properties(self, table_border_properties):
        """Sets the table_border_properties of this TableBorderCell.


        :param table_border_properties: The table_border_properties of this TableBorderCell.
        :type table_border_properties: TableBorderProperties
        """

        self._table_border_properties = table_border_properties
