# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.layout_placeholder_id_mapping import LayoutPlaceholderIdMapping
from openapi_server.models.layout_reference import LayoutReference
from openapi_server import util


class CreateSlideRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, insertion_index: int=None, object_id: str=None, placeholder_id_mappings: List[LayoutPlaceholderIdMapping]=None, slide_layout_reference: LayoutReference=None):
        """CreateSlideRequest - a model defined in OpenAPI

        :param insertion_index: The insertion_index of this CreateSlideRequest.
        :param object_id: The object_id of this CreateSlideRequest.
        :param placeholder_id_mappings: The placeholder_id_mappings of this CreateSlideRequest.
        :param slide_layout_reference: The slide_layout_reference of this CreateSlideRequest.
        """
        self.openapi_types = {
            'insertion_index': int,
            'object_id': str,
            'placeholder_id_mappings': List[LayoutPlaceholderIdMapping],
            'slide_layout_reference': LayoutReference
        }

        self.attribute_map = {
            'insertion_index': 'insertionIndex',
            'object_id': 'objectId',
            'placeholder_id_mappings': 'placeholderIdMappings',
            'slide_layout_reference': 'slideLayoutReference'
        }

        self._insertion_index = insertion_index
        self._object_id = object_id
        self._placeholder_id_mappings = placeholder_id_mappings
        self._slide_layout_reference = slide_layout_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSlideRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSlideRequest of this CreateSlideRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def insertion_index(self):
        """Gets the insertion_index of this CreateSlideRequest.

        The optional zero-based index indicating where to insert the slides. If you don't specify an index, the slide is created at the end.

        :return: The insertion_index of this CreateSlideRequest.
        :rtype: int
        """
        return self._insertion_index

    @insertion_index.setter
    def insertion_index(self, insertion_index):
        """Sets the insertion_index of this CreateSlideRequest.

        The optional zero-based index indicating where to insert the slides. If you don't specify an index, the slide is created at the end.

        :param insertion_index: The insertion_index of this CreateSlideRequest.
        :type insertion_index: int
        """

        self._insertion_index = insertion_index

    @property
    def object_id(self):
        """Gets the object_id of this CreateSlideRequest.

        A user-supplied object ID. If you specify an ID, it must be unique among all pages and page elements in the presentation. The ID must start with an alphanumeric character or an underscore (matches regex `[a-zA-Z0-9_]`); remaining characters may include those as well as a hyphen or colon (matches regex `[a-zA-Z0-9_-:]`). The ID length must be between 5 and 50 characters, inclusive. If you don't specify an ID, a unique one is generated.

        :return: The object_id of this CreateSlideRequest.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this CreateSlideRequest.

        A user-supplied object ID. If you specify an ID, it must be unique among all pages and page elements in the presentation. The ID must start with an alphanumeric character or an underscore (matches regex `[a-zA-Z0-9_]`); remaining characters may include those as well as a hyphen or colon (matches regex `[a-zA-Z0-9_-:]`). The ID length must be between 5 and 50 characters, inclusive. If you don't specify an ID, a unique one is generated.

        :param object_id: The object_id of this CreateSlideRequest.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def placeholder_id_mappings(self):
        """Gets the placeholder_id_mappings of this CreateSlideRequest.

        An optional list of object ID mappings from the placeholder(s) on the layout to the placeholders that are created on the slide from the specified layout. Can only be used when `slide_layout_reference` is specified.

        :return: The placeholder_id_mappings of this CreateSlideRequest.
        :rtype: List[LayoutPlaceholderIdMapping]
        """
        return self._placeholder_id_mappings

    @placeholder_id_mappings.setter
    def placeholder_id_mappings(self, placeholder_id_mappings):
        """Sets the placeholder_id_mappings of this CreateSlideRequest.

        An optional list of object ID mappings from the placeholder(s) on the layout to the placeholders that are created on the slide from the specified layout. Can only be used when `slide_layout_reference` is specified.

        :param placeholder_id_mappings: The placeholder_id_mappings of this CreateSlideRequest.
        :type placeholder_id_mappings: List[LayoutPlaceholderIdMapping]
        """

        self._placeholder_id_mappings = placeholder_id_mappings

    @property
    def slide_layout_reference(self):
        """Gets the slide_layout_reference of this CreateSlideRequest.


        :return: The slide_layout_reference of this CreateSlideRequest.
        :rtype: LayoutReference
        """
        return self._slide_layout_reference

    @slide_layout_reference.setter
    def slide_layout_reference(self, slide_layout_reference):
        """Sets the slide_layout_reference of this CreateSlideRequest.


        :param slide_layout_reference: The slide_layout_reference of this CreateSlideRequest.
        :type slide_layout_reference: LayoutReference
        """

        self._slide_layout_reference = slide_layout_reference
