# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.range import Range
from openapi_server.models.table_cell_location import TableCellLocation
from openapi_server.models.text_style import TextStyle
from openapi_server import util


class UpdateTextStyleRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cell_location: TableCellLocation=None, fields: str=None, object_id: str=None, style: TextStyle=None, text_range: Range=None):
        """UpdateTextStyleRequest - a model defined in OpenAPI

        :param cell_location: The cell_location of this UpdateTextStyleRequest.
        :param fields: The fields of this UpdateTextStyleRequest.
        :param object_id: The object_id of this UpdateTextStyleRequest.
        :param style: The style of this UpdateTextStyleRequest.
        :param text_range: The text_range of this UpdateTextStyleRequest.
        """
        self.openapi_types = {
            'cell_location': TableCellLocation,
            'fields': str,
            'object_id': str,
            'style': TextStyle,
            'text_range': Range
        }

        self.attribute_map = {
            'cell_location': 'cellLocation',
            'fields': 'fields',
            'object_id': 'objectId',
            'style': 'style',
            'text_range': 'textRange'
        }

        self._cell_location = cell_location
        self._fields = fields
        self._object_id = object_id
        self._style = style
        self._text_range = text_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTextStyleRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTextStyleRequest of this UpdateTextStyleRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cell_location(self):
        """Gets the cell_location of this UpdateTextStyleRequest.


        :return: The cell_location of this UpdateTextStyleRequest.
        :rtype: TableCellLocation
        """
        return self._cell_location

    @cell_location.setter
    def cell_location(self, cell_location):
        """Sets the cell_location of this UpdateTextStyleRequest.


        :param cell_location: The cell_location of this UpdateTextStyleRequest.
        :type cell_location: TableCellLocation
        """

        self._cell_location = cell_location

    @property
    def fields(self):
        """Gets the fields of this UpdateTextStyleRequest.

        The fields that should be updated. At least one field must be specified. The root `style` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example, to update the text style to bold, set `fields` to `\"bold\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.

        :return: The fields of this UpdateTextStyleRequest.
        :rtype: str
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateTextStyleRequest.

        The fields that should be updated. At least one field must be specified. The root `style` is implied and should not be specified. A single `\"*\"` can be used as short-hand for listing every field. For example, to update the text style to bold, set `fields` to `\"bold\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.

        :param fields: The fields of this UpdateTextStyleRequest.
        :type fields: str
        """

        self._fields = fields

    @property
    def object_id(self):
        """Gets the object_id of this UpdateTextStyleRequest.

        The object ID of the shape or table with the text to be styled.

        :return: The object_id of this UpdateTextStyleRequest.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this UpdateTextStyleRequest.

        The object ID of the shape or table with the text to be styled.

        :param object_id: The object_id of this UpdateTextStyleRequest.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def style(self):
        """Gets the style of this UpdateTextStyleRequest.


        :return: The style of this UpdateTextStyleRequest.
        :rtype: TextStyle
        """
        return self._style

    @style.setter
    def style(self, style):
        """Sets the style of this UpdateTextStyleRequest.


        :param style: The style of this UpdateTextStyleRequest.
        :type style: TextStyle
        """

        self._style = style

    @property
    def text_range(self):
        """Gets the text_range of this UpdateTextStyleRequest.


        :return: The text_range of this UpdateTextStyleRequest.
        :rtype: Range
        """
        return self._text_range

    @text_range.setter
    def text_range(self, text_range):
        """Sets the text_range of this UpdateTextStyleRequest.


        :param text_range: The text_range of this UpdateTextStyleRequest.
        :type text_range: Range
        """

        self._text_range = text_range
