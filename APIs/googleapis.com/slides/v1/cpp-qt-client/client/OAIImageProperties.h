/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageProperties.h
 *
 * The properties of the Image.
 */

#ifndef OAIImageProperties_H
#define OAIImageProperties_H

#include <QJsonObject>

#include "OAICropProperties.h"
#include "OAILink.h"
#include "OAIOutline.h"
#include "OAIRecolor.h"
#include "OAIShadow.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICropProperties;
class OAILink;
class OAIOutline;
class OAIRecolor;
class OAIShadow;

class OAIImageProperties : public OAIObject {
public:
    OAIImageProperties();
    OAIImageProperties(QString json);
    ~OAIImageProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getBrightness() const;
    void setBrightness(const float &brightness);
    bool is_brightness_Set() const;
    bool is_brightness_Valid() const;

    float getContrast() const;
    void setContrast(const float &contrast);
    bool is_contrast_Set() const;
    bool is_contrast_Valid() const;

    OAICropProperties getCropProperties() const;
    void setCropProperties(const OAICropProperties &crop_properties);
    bool is_crop_properties_Set() const;
    bool is_crop_properties_Valid() const;

    OAILink getLink() const;
    void setLink(const OAILink &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    OAIOutline getOutline() const;
    void setOutline(const OAIOutline &outline);
    bool is_outline_Set() const;
    bool is_outline_Valid() const;

    OAIRecolor getRecolor() const;
    void setRecolor(const OAIRecolor &recolor);
    bool is_recolor_Set() const;
    bool is_recolor_Valid() const;

    OAIShadow getShadow() const;
    void setShadow(const OAIShadow &shadow);
    bool is_shadow_Set() const;
    bool is_shadow_Valid() const;

    float getTransparency() const;
    void setTransparency(const float &transparency);
    bool is_transparency_Set() const;
    bool is_transparency_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_brightness;
    bool m_brightness_isSet;
    bool m_brightness_isValid;

    float m_contrast;
    bool m_contrast_isSet;
    bool m_contrast_isValid;

    OAICropProperties m_crop_properties;
    bool m_crop_properties_isSet;
    bool m_crop_properties_isValid;

    OAILink m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    OAIOutline m_outline;
    bool m_outline_isSet;
    bool m_outline_isValid;

    OAIRecolor m_recolor;
    bool m_recolor_isSet;
    bool m_recolor_isValid;

    OAIShadow m_shadow;
    bool m_shadow_isSet;
    bool m_shadow_isValid;

    float m_transparency;
    bool m_transparency_isSet;
    bool m_transparency_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageProperties)

#endif // OAIImageProperties_H
