/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINestingLevel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINestingLevel::OAINestingLevel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINestingLevel::OAINestingLevel() {
    this->initializeModel();
}

OAINestingLevel::~OAINestingLevel() {}

void OAINestingLevel::initializeModel() {

    m_bullet_style_isSet = false;
    m_bullet_style_isValid = false;
}

void OAINestingLevel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINestingLevel::fromJsonObject(QJsonObject json) {

    m_bullet_style_isValid = ::OpenAPI::fromJsonValue(m_bullet_style, json[QString("bulletStyle")]);
    m_bullet_style_isSet = !json[QString("bulletStyle")].isNull() && m_bullet_style_isValid;
}

QString OAINestingLevel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINestingLevel::asJsonObject() const {
    QJsonObject obj;
    if (m_bullet_style.isSet()) {
        obj.insert(QString("bulletStyle"), ::OpenAPI::toJsonValue(m_bullet_style));
    }
    return obj;
}

OAITextStyle OAINestingLevel::getBulletStyle() const {
    return m_bullet_style;
}
void OAINestingLevel::setBulletStyle(const OAITextStyle &bullet_style) {
    m_bullet_style = bullet_style;
    m_bullet_style_isSet = true;
}

bool OAINestingLevel::is_bullet_style_Set() const{
    return m_bullet_style_isSet;
}

bool OAINestingLevel::is_bullet_style_Valid() const{
    return m_bullet_style_isValid;
}

bool OAINestingLevel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bullet_style.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINestingLevel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
