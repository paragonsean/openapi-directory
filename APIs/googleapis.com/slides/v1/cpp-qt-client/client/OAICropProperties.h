/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICropProperties.h
 *
 * The crop properties of an object enclosed in a container. For example, an Image. The crop properties is represented by the offsets of four edges which define a crop rectangle. The offsets are measured in percentage from the corresponding edges of the object&#39;s original bounding rectangle towards inside, relative to the object&#39;s original dimensions. - If the offset is in the interval (0, 1), the corresponding edge of crop rectangle is positioned inside of the object&#39;s original bounding rectangle. - If the offset is negative or greater than 1, the corresponding edge of crop rectangle is positioned outside of the object&#39;s original bounding rectangle. - If the left edge of the crop rectangle is on the right side of its right edge, the object will be flipped horizontally. - If the top edge of the crop rectangle is below its bottom edge, the object will be flipped vertically. - If all offsets and rotation angle is 0, the object is not cropped. After cropping, the content in the crop rectangle will be stretched to fit its container.
 */

#ifndef OAICropProperties_H
#define OAICropProperties_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICropProperties : public OAIObject {
public:
    OAICropProperties();
    OAICropProperties(QString json);
    ~OAICropProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getAngle() const;
    void setAngle(const float &angle);
    bool is_angle_Set() const;
    bool is_angle_Valid() const;

    float getBottomOffset() const;
    void setBottomOffset(const float &bottom_offset);
    bool is_bottom_offset_Set() const;
    bool is_bottom_offset_Valid() const;

    float getLeftOffset() const;
    void setLeftOffset(const float &left_offset);
    bool is_left_offset_Set() const;
    bool is_left_offset_Valid() const;

    float getRightOffset() const;
    void setRightOffset(const float &right_offset);
    bool is_right_offset_Set() const;
    bool is_right_offset_Valid() const;

    float getTopOffset() const;
    void setTopOffset(const float &top_offset);
    bool is_top_offset_Set() const;
    bool is_top_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_angle;
    bool m_angle_isSet;
    bool m_angle_isValid;

    float m_bottom_offset;
    bool m_bottom_offset_isSet;
    bool m_bottom_offset_isValid;

    float m_left_offset;
    bool m_left_offset_isSet;
    bool m_left_offset_isValid;

    float m_right_offset;
    bool m_right_offset_isSet;
    bool m_right_offset_isValid;

    float m_top_offset;
    bool m_top_offset_isSet;
    bool m_top_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICropProperties)

#endif // OAICropProperties_H
