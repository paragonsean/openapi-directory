/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILayoutReference.h
 *
 * Slide layout reference. This may reference either: - A predefined layout - One of the layouts in the presentation.
 */

#ifndef OAILayoutReference_H
#define OAILayoutReference_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILayoutReference : public OAIObject {
public:
    OAILayoutReference();
    OAILayoutReference(QString json);
    ~OAILayoutReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLayoutId() const;
    void setLayoutId(const QString &layout_id);
    bool is_layout_id_Set() const;
    bool is_layout_id_Valid() const;

    QString getPredefinedLayout() const;
    void setPredefinedLayout(const QString &predefined_layout);
    bool is_predefined_layout_Set() const;
    bool is_predefined_layout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_layout_id;
    bool m_layout_id_isSet;
    bool m_layout_id_isValid;

    QString m_predefined_layout;
    bool m_predefined_layout_isSet;
    bool m_predefined_layout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILayoutReference)

#endif // OAILayoutReference_H
