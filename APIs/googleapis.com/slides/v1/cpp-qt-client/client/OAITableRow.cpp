/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableRow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableRow::OAITableRow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableRow::OAITableRow() {
    this->initializeModel();
}

OAITableRow::~OAITableRow() {}

void OAITableRow::initializeModel() {

    m_row_height_isSet = false;
    m_row_height_isValid = false;

    m_table_cells_isSet = false;
    m_table_cells_isValid = false;

    m_table_row_properties_isSet = false;
    m_table_row_properties_isValid = false;
}

void OAITableRow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableRow::fromJsonObject(QJsonObject json) {

    m_row_height_isValid = ::OpenAPI::fromJsonValue(m_row_height, json[QString("rowHeight")]);
    m_row_height_isSet = !json[QString("rowHeight")].isNull() && m_row_height_isValid;

    m_table_cells_isValid = ::OpenAPI::fromJsonValue(m_table_cells, json[QString("tableCells")]);
    m_table_cells_isSet = !json[QString("tableCells")].isNull() && m_table_cells_isValid;

    m_table_row_properties_isValid = ::OpenAPI::fromJsonValue(m_table_row_properties, json[QString("tableRowProperties")]);
    m_table_row_properties_isSet = !json[QString("tableRowProperties")].isNull() && m_table_row_properties_isValid;
}

QString OAITableRow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableRow::asJsonObject() const {
    QJsonObject obj;
    if (m_row_height.isSet()) {
        obj.insert(QString("rowHeight"), ::OpenAPI::toJsonValue(m_row_height));
    }
    if (m_table_cells.size() > 0) {
        obj.insert(QString("tableCells"), ::OpenAPI::toJsonValue(m_table_cells));
    }
    if (m_table_row_properties.isSet()) {
        obj.insert(QString("tableRowProperties"), ::OpenAPI::toJsonValue(m_table_row_properties));
    }
    return obj;
}

OAIDimension OAITableRow::getRowHeight() const {
    return m_row_height;
}
void OAITableRow::setRowHeight(const OAIDimension &row_height) {
    m_row_height = row_height;
    m_row_height_isSet = true;
}

bool OAITableRow::is_row_height_Set() const{
    return m_row_height_isSet;
}

bool OAITableRow::is_row_height_Valid() const{
    return m_row_height_isValid;
}

QList<OAITableCell> OAITableRow::getTableCells() const {
    return m_table_cells;
}
void OAITableRow::setTableCells(const QList<OAITableCell> &table_cells) {
    m_table_cells = table_cells;
    m_table_cells_isSet = true;
}

bool OAITableRow::is_table_cells_Set() const{
    return m_table_cells_isSet;
}

bool OAITableRow::is_table_cells_Valid() const{
    return m_table_cells_isValid;
}

OAITableRowProperties OAITableRow::getTableRowProperties() const {
    return m_table_row_properties;
}
void OAITableRow::setTableRowProperties(const OAITableRowProperties &table_row_properties) {
    m_table_row_properties = table_row_properties;
    m_table_row_properties_isSet = true;
}

bool OAITableRow::is_table_row_properties_Set() const{
    return m_table_row_properties_isSet;
}

bool OAITableRow::is_table_row_properties_Valid() const{
    return m_table_row_properties_isValid;
}

bool OAITableRow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_row_height.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_cells.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_row_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableRow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
