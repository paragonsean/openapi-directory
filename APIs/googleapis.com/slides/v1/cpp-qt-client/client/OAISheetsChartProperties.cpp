/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISheetsChartProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISheetsChartProperties::OAISheetsChartProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISheetsChartProperties::OAISheetsChartProperties() {
    this->initializeModel();
}

OAISheetsChartProperties::~OAISheetsChartProperties() {}

void OAISheetsChartProperties::initializeModel() {

    m_chart_image_properties_isSet = false;
    m_chart_image_properties_isValid = false;
}

void OAISheetsChartProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISheetsChartProperties::fromJsonObject(QJsonObject json) {

    m_chart_image_properties_isValid = ::OpenAPI::fromJsonValue(m_chart_image_properties, json[QString("chartImageProperties")]);
    m_chart_image_properties_isSet = !json[QString("chartImageProperties")].isNull() && m_chart_image_properties_isValid;
}

QString OAISheetsChartProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISheetsChartProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_chart_image_properties.isSet()) {
        obj.insert(QString("chartImageProperties"), ::OpenAPI::toJsonValue(m_chart_image_properties));
    }
    return obj;
}

OAIImageProperties OAISheetsChartProperties::getChartImageProperties() const {
    return m_chart_image_properties;
}
void OAISheetsChartProperties::setChartImageProperties(const OAIImageProperties &chart_image_properties) {
    m_chart_image_properties = chart_image_properties;
    m_chart_image_properties_isSet = true;
}

bool OAISheetsChartProperties::is_chart_image_properties_Set() const{
    return m_chart_image_properties_isSet;
}

bool OAISheetsChartProperties::is_chart_image_properties_Valid() const{
    return m_chart_image_properties_isValid;
}

bool OAISheetsChartProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_chart_image_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISheetsChartProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
