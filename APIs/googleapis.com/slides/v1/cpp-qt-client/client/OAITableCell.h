/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableCell.h
 *
 * Properties and contents of each table cell.
 */

#ifndef OAITableCell_H
#define OAITableCell_H

#include <QJsonObject>

#include "OAITableCellLocation.h"
#include "OAITableCellProperties.h"
#include "OAITextContent.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableCellLocation;
class OAITableCellProperties;
class OAITextContent;

class OAITableCell : public OAIObject {
public:
    OAITableCell();
    OAITableCell(QString json);
    ~OAITableCell() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getColumnSpan() const;
    void setColumnSpan(const qint32 &column_span);
    bool is_column_span_Set() const;
    bool is_column_span_Valid() const;

    OAITableCellLocation getLocation() const;
    void setLocation(const OAITableCellLocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    qint32 getRowSpan() const;
    void setRowSpan(const qint32 &row_span);
    bool is_row_span_Set() const;
    bool is_row_span_Valid() const;

    OAITableCellProperties getTableCellProperties() const;
    void setTableCellProperties(const OAITableCellProperties &table_cell_properties);
    bool is_table_cell_properties_Set() const;
    bool is_table_cell_properties_Valid() const;

    OAITextContent getText() const;
    void setText(const OAITextContent &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_column_span;
    bool m_column_span_isSet;
    bool m_column_span_isValid;

    OAITableCellLocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    qint32 m_row_span;
    bool m_row_span_isSet;
    bool m_row_span_isValid;

    OAITableCellProperties m_table_cell_properties;
    bool m_table_cell_properties_isSet;
    bool m_table_cell_properties_isValid;

    OAITextContent m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableCell)

#endif // OAITableCell_H
