/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableBorderFill.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableBorderFill::OAITableBorderFill(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableBorderFill::OAITableBorderFill() {
    this->initializeModel();
}

OAITableBorderFill::~OAITableBorderFill() {}

void OAITableBorderFill::initializeModel() {

    m_solid_fill_isSet = false;
    m_solid_fill_isValid = false;
}

void OAITableBorderFill::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableBorderFill::fromJsonObject(QJsonObject json) {

    m_solid_fill_isValid = ::OpenAPI::fromJsonValue(m_solid_fill, json[QString("solidFill")]);
    m_solid_fill_isSet = !json[QString("solidFill")].isNull() && m_solid_fill_isValid;
}

QString OAITableBorderFill::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableBorderFill::asJsonObject() const {
    QJsonObject obj;
    if (m_solid_fill.isSet()) {
        obj.insert(QString("solidFill"), ::OpenAPI::toJsonValue(m_solid_fill));
    }
    return obj;
}

OAISolidFill OAITableBorderFill::getSolidFill() const {
    return m_solid_fill;
}
void OAITableBorderFill::setSolidFill(const OAISolidFill &solid_fill) {
    m_solid_fill = solid_fill;
    m_solid_fill_isSet = true;
}

bool OAITableBorderFill::is_solid_fill_Set() const{
    return m_solid_fill_isSet;
}

bool OAITableBorderFill::is_solid_fill_Valid() const{
    return m_solid_fill_isValid;
}

bool OAITableBorderFill::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_solid_fill.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableBorderFill::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
