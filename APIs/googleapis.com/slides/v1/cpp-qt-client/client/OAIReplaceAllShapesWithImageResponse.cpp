/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReplaceAllShapesWithImageResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReplaceAllShapesWithImageResponse::OAIReplaceAllShapesWithImageResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReplaceAllShapesWithImageResponse::OAIReplaceAllShapesWithImageResponse() {
    this->initializeModel();
}

OAIReplaceAllShapesWithImageResponse::~OAIReplaceAllShapesWithImageResponse() {}

void OAIReplaceAllShapesWithImageResponse::initializeModel() {

    m_occurrences_changed_isSet = false;
    m_occurrences_changed_isValid = false;
}

void OAIReplaceAllShapesWithImageResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReplaceAllShapesWithImageResponse::fromJsonObject(QJsonObject json) {

    m_occurrences_changed_isValid = ::OpenAPI::fromJsonValue(m_occurrences_changed, json[QString("occurrencesChanged")]);
    m_occurrences_changed_isSet = !json[QString("occurrencesChanged")].isNull() && m_occurrences_changed_isValid;
}

QString OAIReplaceAllShapesWithImageResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReplaceAllShapesWithImageResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_occurrences_changed_isSet) {
        obj.insert(QString("occurrencesChanged"), ::OpenAPI::toJsonValue(m_occurrences_changed));
    }
    return obj;
}

qint32 OAIReplaceAllShapesWithImageResponse::getOccurrencesChanged() const {
    return m_occurrences_changed;
}
void OAIReplaceAllShapesWithImageResponse::setOccurrencesChanged(const qint32 &occurrences_changed) {
    m_occurrences_changed = occurrences_changed;
    m_occurrences_changed_isSet = true;
}

bool OAIReplaceAllShapesWithImageResponse::is_occurrences_changed_Set() const{
    return m_occurrences_changed_isSet;
}

bool OAIReplaceAllShapesWithImageResponse::is_occurrences_changed_Valid() const{
    return m_occurrences_changed_isValid;
}

bool OAIReplaceAllShapesWithImageResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_occurrences_changed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReplaceAllShapesWithImageResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
