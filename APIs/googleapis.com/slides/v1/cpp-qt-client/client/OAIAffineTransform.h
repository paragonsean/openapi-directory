/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAffineTransform.h
 *
 * AffineTransform uses a 3x3 matrix with an implied last row of [ 0 0 1 ] to transform source coordinates (x,y) into destination coordinates (x&#39;, y&#39;) according to: x&#39; x &#x3D; shear_y scale_y translate_y 1 [ 1 ] After transformation, x&#39; &#x3D; scale_x * x + shear_x * y + translate_x; y&#39; &#x3D; scale_y * y + shear_y * x + translate_y; This message is therefore composed of these six matrix elements.
 */

#ifndef OAIAffineTransform_H
#define OAIAffineTransform_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAffineTransform : public OAIObject {
public:
    OAIAffineTransform();
    OAIAffineTransform(QString json);
    ~OAIAffineTransform() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getScaleX() const;
    void setScaleX(const double &scale_x);
    bool is_scale_x_Set() const;
    bool is_scale_x_Valid() const;

    double getScaleY() const;
    void setScaleY(const double &scale_y);
    bool is_scale_y_Set() const;
    bool is_scale_y_Valid() const;

    double getShearX() const;
    void setShearX(const double &shear_x);
    bool is_shear_x_Set() const;
    bool is_shear_x_Valid() const;

    double getShearY() const;
    void setShearY(const double &shear_y);
    bool is_shear_y_Set() const;
    bool is_shear_y_Valid() const;

    double getTranslateX() const;
    void setTranslateX(const double &translate_x);
    bool is_translate_x_Set() const;
    bool is_translate_x_Valid() const;

    double getTranslateY() const;
    void setTranslateY(const double &translate_y);
    bool is_translate_y_Set() const;
    bool is_translate_y_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_scale_x;
    bool m_scale_x_isSet;
    bool m_scale_x_isValid;

    double m_scale_y;
    bool m_scale_y_isSet;
    bool m_scale_y_isValid;

    double m_shear_x;
    bool m_shear_x_isSet;
    bool m_shear_x_isValid;

    double m_shear_y;
    bool m_shear_y_isSet;
    bool m_shear_y_isValid;

    double m_translate_x;
    bool m_translate_x_isSet;
    bool m_translate_x_isValid;

    double m_translate_y;
    bool m_translate_y_isSet;
    bool m_translate_y_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAffineTransform)

#endif // OAIAffineTransform_H
