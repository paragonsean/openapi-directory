/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplaceAllShapesWithSheetsChartRequest.h
 *
 * Replaces all shapes that match the given criteria with the provided Google Sheets chart. The chart will be scaled and centered to fit within the bounds of the original shape. NOTE: Replacing shapes with a chart requires at least one of the spreadsheets.readonly, spreadsheets, drive.readonly, or drive OAuth scopes.
 */

#ifndef OAIReplaceAllShapesWithSheetsChartRequest_H
#define OAIReplaceAllShapesWithSheetsChartRequest_H

#include <QJsonObject>

#include "OAISubstringMatchCriteria.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubstringMatchCriteria;

class OAIReplaceAllShapesWithSheetsChartRequest : public OAIObject {
public:
    OAIReplaceAllShapesWithSheetsChartRequest();
    OAIReplaceAllShapesWithSheetsChartRequest(QString json);
    ~OAIReplaceAllShapesWithSheetsChartRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getChartId() const;
    void setChartId(const qint32 &chart_id);
    bool is_chart_id_Set() const;
    bool is_chart_id_Valid() const;

    OAISubstringMatchCriteria getContainsText() const;
    void setContainsText(const OAISubstringMatchCriteria &contains_text);
    bool is_contains_text_Set() const;
    bool is_contains_text_Valid() const;

    QString getLinkingMode() const;
    void setLinkingMode(const QString &linking_mode);
    bool is_linking_mode_Set() const;
    bool is_linking_mode_Valid() const;

    QList<QString> getPageObjectIds() const;
    void setPageObjectIds(const QList<QString> &page_object_ids);
    bool is_page_object_ids_Set() const;
    bool is_page_object_ids_Valid() const;

    QString getSpreadsheetId() const;
    void setSpreadsheetId(const QString &spreadsheet_id);
    bool is_spreadsheet_id_Set() const;
    bool is_spreadsheet_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_chart_id;
    bool m_chart_id_isSet;
    bool m_chart_id_isValid;

    OAISubstringMatchCriteria m_contains_text;
    bool m_contains_text_isSet;
    bool m_contains_text_isValid;

    QString m_linking_mode;
    bool m_linking_mode_isSet;
    bool m_linking_mode_isValid;

    QList<QString> m_page_object_ids;
    bool m_page_object_ids_isSet;
    bool m_page_object_ids_isValid;

    QString m_spreadsheet_id;
    bool m_spreadsheet_id_isSet;
    bool m_spreadsheet_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplaceAllShapesWithSheetsChartRequest)

#endif // OAIReplaceAllShapesWithSheetsChartRequest_H
