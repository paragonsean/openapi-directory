/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTableBorderPropertiesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTableBorderPropertiesRequest::OAIUpdateTableBorderPropertiesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTableBorderPropertiesRequest::OAIUpdateTableBorderPropertiesRequest() {
    this->initializeModel();
}

OAIUpdateTableBorderPropertiesRequest::~OAIUpdateTableBorderPropertiesRequest() {}

void OAIUpdateTableBorderPropertiesRequest::initializeModel() {

    m_border_position_isSet = false;
    m_border_position_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_object_id_isSet = false;
    m_object_id_isValid = false;

    m_table_border_properties_isSet = false;
    m_table_border_properties_isValid = false;

    m_table_range_isSet = false;
    m_table_range_isValid = false;
}

void OAIUpdateTableBorderPropertiesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTableBorderPropertiesRequest::fromJsonObject(QJsonObject json) {

    m_border_position_isValid = ::OpenAPI::fromJsonValue(m_border_position, json[QString("borderPosition")]);
    m_border_position_isSet = !json[QString("borderPosition")].isNull() && m_border_position_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_object_id_isValid = ::OpenAPI::fromJsonValue(m_object_id, json[QString("objectId")]);
    m_object_id_isSet = !json[QString("objectId")].isNull() && m_object_id_isValid;

    m_table_border_properties_isValid = ::OpenAPI::fromJsonValue(m_table_border_properties, json[QString("tableBorderProperties")]);
    m_table_border_properties_isSet = !json[QString("tableBorderProperties")].isNull() && m_table_border_properties_isValid;

    m_table_range_isValid = ::OpenAPI::fromJsonValue(m_table_range, json[QString("tableRange")]);
    m_table_range_isSet = !json[QString("tableRange")].isNull() && m_table_range_isValid;
}

QString OAIUpdateTableBorderPropertiesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTableBorderPropertiesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_border_position_isSet) {
        obj.insert(QString("borderPosition"), ::OpenAPI::toJsonValue(m_border_position));
    }
    if (m_fields_isSet) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_object_id_isSet) {
        obj.insert(QString("objectId"), ::OpenAPI::toJsonValue(m_object_id));
    }
    if (m_table_border_properties.isSet()) {
        obj.insert(QString("tableBorderProperties"), ::OpenAPI::toJsonValue(m_table_border_properties));
    }
    if (m_table_range.isSet()) {
        obj.insert(QString("tableRange"), ::OpenAPI::toJsonValue(m_table_range));
    }
    return obj;
}

QString OAIUpdateTableBorderPropertiesRequest::getBorderPosition() const {
    return m_border_position;
}
void OAIUpdateTableBorderPropertiesRequest::setBorderPosition(const QString &border_position) {
    m_border_position = border_position;
    m_border_position_isSet = true;
}

bool OAIUpdateTableBorderPropertiesRequest::is_border_position_Set() const{
    return m_border_position_isSet;
}

bool OAIUpdateTableBorderPropertiesRequest::is_border_position_Valid() const{
    return m_border_position_isValid;
}

QString OAIUpdateTableBorderPropertiesRequest::getFields() const {
    return m_fields;
}
void OAIUpdateTableBorderPropertiesRequest::setFields(const QString &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIUpdateTableBorderPropertiesRequest::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIUpdateTableBorderPropertiesRequest::is_fields_Valid() const{
    return m_fields_isValid;
}

QString OAIUpdateTableBorderPropertiesRequest::getObjectId() const {
    return m_object_id;
}
void OAIUpdateTableBorderPropertiesRequest::setObjectId(const QString &object_id) {
    m_object_id = object_id;
    m_object_id_isSet = true;
}

bool OAIUpdateTableBorderPropertiesRequest::is_object_id_Set() const{
    return m_object_id_isSet;
}

bool OAIUpdateTableBorderPropertiesRequest::is_object_id_Valid() const{
    return m_object_id_isValid;
}

OAITableBorderProperties OAIUpdateTableBorderPropertiesRequest::getTableBorderProperties() const {
    return m_table_border_properties;
}
void OAIUpdateTableBorderPropertiesRequest::setTableBorderProperties(const OAITableBorderProperties &table_border_properties) {
    m_table_border_properties = table_border_properties;
    m_table_border_properties_isSet = true;
}

bool OAIUpdateTableBorderPropertiesRequest::is_table_border_properties_Set() const{
    return m_table_border_properties_isSet;
}

bool OAIUpdateTableBorderPropertiesRequest::is_table_border_properties_Valid() const{
    return m_table_border_properties_isValid;
}

OAITableRange OAIUpdateTableBorderPropertiesRequest::getTableRange() const {
    return m_table_range;
}
void OAIUpdateTableBorderPropertiesRequest::setTableRange(const OAITableRange &table_range) {
    m_table_range = table_range;
    m_table_range_isSet = true;
}

bool OAIUpdateTableBorderPropertiesRequest::is_table_range_Set() const{
    return m_table_range_isSet;
}

bool OAIUpdateTableBorderPropertiesRequest::is_table_range_Valid() const{
    return m_table_range_isValid;
}

bool OAIUpdateTableBorderPropertiesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_border_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_border_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTableBorderPropertiesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
