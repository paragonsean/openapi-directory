/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParagraphStyle.h
 *
 * Styles that apply to a whole paragraph. If this text is contained in a shape with a parent placeholder, then these paragraph styles may be inherited from the parent. Which paragraph styles are inherited depend on the nesting level of lists: * A paragraph not in a list will inherit its paragraph style from the paragraph at the 0 nesting level of the list inside the parent placeholder. * A paragraph in a list will inherit its paragraph style from the paragraph at its corresponding nesting level of the list inside the parent placeholder. Inherited paragraph styles are represented as unset fields in this message.
 */

#ifndef OAIParagraphStyle_H
#define OAIParagraphStyle_H

#include <QJsonObject>

#include "OAIDimension.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimension;

class OAIParagraphStyle : public OAIObject {
public:
    OAIParagraphStyle();
    OAIParagraphStyle(QString json);
    ~OAIParagraphStyle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlignment() const;
    void setAlignment(const QString &alignment);
    bool is_alignment_Set() const;
    bool is_alignment_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    OAIDimension getIndentEnd() const;
    void setIndentEnd(const OAIDimension &indent_end);
    bool is_indent_end_Set() const;
    bool is_indent_end_Valid() const;

    OAIDimension getIndentFirstLine() const;
    void setIndentFirstLine(const OAIDimension &indent_first_line);
    bool is_indent_first_line_Set() const;
    bool is_indent_first_line_Valid() const;

    OAIDimension getIndentStart() const;
    void setIndentStart(const OAIDimension &indent_start);
    bool is_indent_start_Set() const;
    bool is_indent_start_Valid() const;

    float getLineSpacing() const;
    void setLineSpacing(const float &line_spacing);
    bool is_line_spacing_Set() const;
    bool is_line_spacing_Valid() const;

    OAIDimension getSpaceAbove() const;
    void setSpaceAbove(const OAIDimension &space_above);
    bool is_space_above_Set() const;
    bool is_space_above_Valid() const;

    OAIDimension getSpaceBelow() const;
    void setSpaceBelow(const OAIDimension &space_below);
    bool is_space_below_Set() const;
    bool is_space_below_Valid() const;

    QString getSpacingMode() const;
    void setSpacingMode(const QString &spacing_mode);
    bool is_spacing_mode_Set() const;
    bool is_spacing_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alignment;
    bool m_alignment_isSet;
    bool m_alignment_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    OAIDimension m_indent_end;
    bool m_indent_end_isSet;
    bool m_indent_end_isValid;

    OAIDimension m_indent_first_line;
    bool m_indent_first_line_isSet;
    bool m_indent_first_line_isValid;

    OAIDimension m_indent_start;
    bool m_indent_start_isSet;
    bool m_indent_start_isValid;

    float m_line_spacing;
    bool m_line_spacing_isSet;
    bool m_line_spacing_isValid;

    OAIDimension m_space_above;
    bool m_space_above_isSet;
    bool m_space_above_isValid;

    OAIDimension m_space_below;
    bool m_space_below_isSet;
    bool m_space_below_isValid;

    QString m_spacing_mode;
    bool m_spacing_mode_isSet;
    bool m_spacing_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParagraphStyle)

#endif // OAIParagraphStyle_H
