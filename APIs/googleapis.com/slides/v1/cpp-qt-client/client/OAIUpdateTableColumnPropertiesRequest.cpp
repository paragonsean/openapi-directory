/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTableColumnPropertiesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTableColumnPropertiesRequest::OAIUpdateTableColumnPropertiesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTableColumnPropertiesRequest::OAIUpdateTableColumnPropertiesRequest() {
    this->initializeModel();
}

OAIUpdateTableColumnPropertiesRequest::~OAIUpdateTableColumnPropertiesRequest() {}

void OAIUpdateTableColumnPropertiesRequest::initializeModel() {

    m_column_indices_isSet = false;
    m_column_indices_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_object_id_isSet = false;
    m_object_id_isValid = false;

    m_table_column_properties_isSet = false;
    m_table_column_properties_isValid = false;
}

void OAIUpdateTableColumnPropertiesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTableColumnPropertiesRequest::fromJsonObject(QJsonObject json) {

    m_column_indices_isValid = ::OpenAPI::fromJsonValue(m_column_indices, json[QString("columnIndices")]);
    m_column_indices_isSet = !json[QString("columnIndices")].isNull() && m_column_indices_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_object_id_isValid = ::OpenAPI::fromJsonValue(m_object_id, json[QString("objectId")]);
    m_object_id_isSet = !json[QString("objectId")].isNull() && m_object_id_isValid;

    m_table_column_properties_isValid = ::OpenAPI::fromJsonValue(m_table_column_properties, json[QString("tableColumnProperties")]);
    m_table_column_properties_isSet = !json[QString("tableColumnProperties")].isNull() && m_table_column_properties_isValid;
}

QString OAIUpdateTableColumnPropertiesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTableColumnPropertiesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_column_indices.size() > 0) {
        obj.insert(QString("columnIndices"), ::OpenAPI::toJsonValue(m_column_indices));
    }
    if (m_fields_isSet) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_object_id_isSet) {
        obj.insert(QString("objectId"), ::OpenAPI::toJsonValue(m_object_id));
    }
    if (m_table_column_properties.isSet()) {
        obj.insert(QString("tableColumnProperties"), ::OpenAPI::toJsonValue(m_table_column_properties));
    }
    return obj;
}

QList<qint32> OAIUpdateTableColumnPropertiesRequest::getColumnIndices() const {
    return m_column_indices;
}
void OAIUpdateTableColumnPropertiesRequest::setColumnIndices(const QList<qint32> &column_indices) {
    m_column_indices = column_indices;
    m_column_indices_isSet = true;
}

bool OAIUpdateTableColumnPropertiesRequest::is_column_indices_Set() const{
    return m_column_indices_isSet;
}

bool OAIUpdateTableColumnPropertiesRequest::is_column_indices_Valid() const{
    return m_column_indices_isValid;
}

QString OAIUpdateTableColumnPropertiesRequest::getFields() const {
    return m_fields;
}
void OAIUpdateTableColumnPropertiesRequest::setFields(const QString &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIUpdateTableColumnPropertiesRequest::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIUpdateTableColumnPropertiesRequest::is_fields_Valid() const{
    return m_fields_isValid;
}

QString OAIUpdateTableColumnPropertiesRequest::getObjectId() const {
    return m_object_id;
}
void OAIUpdateTableColumnPropertiesRequest::setObjectId(const QString &object_id) {
    m_object_id = object_id;
    m_object_id_isSet = true;
}

bool OAIUpdateTableColumnPropertiesRequest::is_object_id_Set() const{
    return m_object_id_isSet;
}

bool OAIUpdateTableColumnPropertiesRequest::is_object_id_Valid() const{
    return m_object_id_isValid;
}

OAITableColumnProperties OAIUpdateTableColumnPropertiesRequest::getTableColumnProperties() const {
    return m_table_column_properties;
}
void OAIUpdateTableColumnPropertiesRequest::setTableColumnProperties(const OAITableColumnProperties &table_column_properties) {
    m_table_column_properties = table_column_properties;
    m_table_column_properties_isSet = true;
}

bool OAIUpdateTableColumnPropertiesRequest::is_table_column_properties_Set() const{
    return m_table_column_properties_isSet;
}

bool OAIUpdateTableColumnPropertiesRequest::is_table_column_properties_Valid() const{
    return m_table_column_properties_isValid;
}

bool OAIUpdateTableColumnPropertiesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_indices.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_column_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTableColumnPropertiesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
