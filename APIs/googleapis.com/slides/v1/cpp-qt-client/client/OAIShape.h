/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShape.h
 *
 * A PageElement kind representing a generic shape that does not have a more specific classification.
 */

#ifndef OAIShape_H
#define OAIShape_H

#include <QJsonObject>

#include "OAIPlaceholder.h"
#include "OAIShapeProperties.h"
#include "OAITextContent.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlaceholder;
class OAIShapeProperties;
class OAITextContent;

class OAIShape : public OAIObject {
public:
    OAIShape();
    OAIShape(QString json);
    ~OAIShape() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPlaceholder getPlaceholder() const;
    void setPlaceholder(const OAIPlaceholder &placeholder);
    bool is_placeholder_Set() const;
    bool is_placeholder_Valid() const;

    OAIShapeProperties getShapeProperties() const;
    void setShapeProperties(const OAIShapeProperties &shape_properties);
    bool is_shape_properties_Set() const;
    bool is_shape_properties_Valid() const;

    QString getShapeType() const;
    void setShapeType(const QString &shape_type);
    bool is_shape_type_Set() const;
    bool is_shape_type_Valid() const;

    OAITextContent getText() const;
    void setText(const OAITextContent &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPlaceholder m_placeholder;
    bool m_placeholder_isSet;
    bool m_placeholder_isValid;

    OAIShapeProperties m_shape_properties;
    bool m_shape_properties_isSet;
    bool m_shape_properties_isValid;

    QString m_shape_type;
    bool m_shape_type_isSet;
    bool m_shape_type_isValid;

    OAITextContent m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShape)

#endif // OAIShape_H
