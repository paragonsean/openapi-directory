/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplaceAllTextRequest.h
 *
 * Replaces all instances of text matching a criteria with replace text.
 */

#ifndef OAIReplaceAllTextRequest_H
#define OAIReplaceAllTextRequest_H

#include <QJsonObject>

#include "OAISubstringMatchCriteria.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubstringMatchCriteria;

class OAIReplaceAllTextRequest : public OAIObject {
public:
    OAIReplaceAllTextRequest();
    OAIReplaceAllTextRequest(QString json);
    ~OAIReplaceAllTextRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISubstringMatchCriteria getContainsText() const;
    void setContainsText(const OAISubstringMatchCriteria &contains_text);
    bool is_contains_text_Set() const;
    bool is_contains_text_Valid() const;

    QList<QString> getPageObjectIds() const;
    void setPageObjectIds(const QList<QString> &page_object_ids);
    bool is_page_object_ids_Set() const;
    bool is_page_object_ids_Valid() const;

    QString getReplaceText() const;
    void setReplaceText(const QString &replace_text);
    bool is_replace_text_Set() const;
    bool is_replace_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISubstringMatchCriteria m_contains_text;
    bool m_contains_text_isSet;
    bool m_contains_text_isValid;

    QList<QString> m_page_object_ids;
    bool m_page_object_ids_isSet;
    bool m_page_object_ids_isValid;

    QString m_replace_text;
    bool m_replace_text_isSet;
    bool m_replace_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplaceAllTextRequest)

#endif // OAIReplaceAllTextRequest_H
