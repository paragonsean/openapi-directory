/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILayoutPlaceholderIdMapping.h
 *
 * The user-specified ID mapping for a placeholder that will be created on a slide from a specified layout.
 */

#ifndef OAILayoutPlaceholderIdMapping_H
#define OAILayoutPlaceholderIdMapping_H

#include <QJsonObject>

#include "OAIPlaceholder.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlaceholder;

class OAILayoutPlaceholderIdMapping : public OAIObject {
public:
    OAILayoutPlaceholderIdMapping();
    OAILayoutPlaceholderIdMapping(QString json);
    ~OAILayoutPlaceholderIdMapping() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPlaceholder getLayoutPlaceholder() const;
    void setLayoutPlaceholder(const OAIPlaceholder &layout_placeholder);
    bool is_layout_placeholder_Set() const;
    bool is_layout_placeholder_Valid() const;

    QString getLayoutPlaceholderObjectId() const;
    void setLayoutPlaceholderObjectId(const QString &layout_placeholder_object_id);
    bool is_layout_placeholder_object_id_Set() const;
    bool is_layout_placeholder_object_id_Valid() const;

    QString getObjectId() const;
    void setObjectId(const QString &object_id);
    bool is_object_id_Set() const;
    bool is_object_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPlaceholder m_layout_placeholder;
    bool m_layout_placeholder_isSet;
    bool m_layout_placeholder_isValid;

    QString m_layout_placeholder_object_id;
    bool m_layout_placeholder_object_id_isSet;
    bool m_layout_placeholder_object_id_isValid;

    QString m_object_id;
    bool m_object_id_isSet;
    bool m_object_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILayoutPlaceholderIdMapping)

#endif // OAILayoutPlaceholderIdMapping_H
