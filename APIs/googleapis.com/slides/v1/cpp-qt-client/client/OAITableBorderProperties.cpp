/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableBorderProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableBorderProperties::OAITableBorderProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableBorderProperties::OAITableBorderProperties() {
    this->initializeModel();
}

OAITableBorderProperties::~OAITableBorderProperties() {}

void OAITableBorderProperties::initializeModel() {

    m_dash_style_isSet = false;
    m_dash_style_isValid = false;

    m_table_border_fill_isSet = false;
    m_table_border_fill_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAITableBorderProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableBorderProperties::fromJsonObject(QJsonObject json) {

    m_dash_style_isValid = ::OpenAPI::fromJsonValue(m_dash_style, json[QString("dashStyle")]);
    m_dash_style_isSet = !json[QString("dashStyle")].isNull() && m_dash_style_isValid;

    m_table_border_fill_isValid = ::OpenAPI::fromJsonValue(m_table_border_fill, json[QString("tableBorderFill")]);
    m_table_border_fill_isSet = !json[QString("tableBorderFill")].isNull() && m_table_border_fill_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAITableBorderProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableBorderProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_dash_style_isSet) {
        obj.insert(QString("dashStyle"), ::OpenAPI::toJsonValue(m_dash_style));
    }
    if (m_table_border_fill.isSet()) {
        obj.insert(QString("tableBorderFill"), ::OpenAPI::toJsonValue(m_table_border_fill));
    }
    if (m_weight.isSet()) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

QString OAITableBorderProperties::getDashStyle() const {
    return m_dash_style;
}
void OAITableBorderProperties::setDashStyle(const QString &dash_style) {
    m_dash_style = dash_style;
    m_dash_style_isSet = true;
}

bool OAITableBorderProperties::is_dash_style_Set() const{
    return m_dash_style_isSet;
}

bool OAITableBorderProperties::is_dash_style_Valid() const{
    return m_dash_style_isValid;
}

OAITableBorderFill OAITableBorderProperties::getTableBorderFill() const {
    return m_table_border_fill;
}
void OAITableBorderProperties::setTableBorderFill(const OAITableBorderFill &table_border_fill) {
    m_table_border_fill = table_border_fill;
    m_table_border_fill_isSet = true;
}

bool OAITableBorderProperties::is_table_border_fill_Set() const{
    return m_table_border_fill_isSet;
}

bool OAITableBorderProperties::is_table_border_fill_Valid() const{
    return m_table_border_fill_isValid;
}

OAIDimension OAITableBorderProperties::getWeight() const {
    return m_weight;
}
void OAITableBorderProperties::setWeight(const OAIDimension &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAITableBorderProperties::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAITableBorderProperties::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAITableBorderProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dash_style_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_border_fill.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableBorderProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
