/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPresentation.h
 *
 * A Google Slides presentation.
 */

#ifndef OAIPresentation_H
#define OAIPresentation_H

#include <QJsonObject>

#include "OAIPage.h"
#include "OAISize.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPage;
class OAISize;

class OAIPresentation : public OAIObject {
public:
    OAIPresentation();
    OAIPresentation(QString json);
    ~OAIPresentation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIPage> getLayouts() const;
    void setLayouts(const QList<OAIPage> &layouts);
    bool is_layouts_Set() const;
    bool is_layouts_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    QList<OAIPage> getMasters() const;
    void setMasters(const QList<OAIPage> &masters);
    bool is_masters_Set() const;
    bool is_masters_Valid() const;

    OAIPage getNotesMaster() const;
    void setNotesMaster(const OAIPage &notes_master);
    bool is_notes_master_Set() const;
    bool is_notes_master_Valid() const;

    OAISize getPageSize() const;
    void setPageSize(const OAISize &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getPresentationId() const;
    void setPresentationId(const QString &presentation_id);
    bool is_presentation_id_Set() const;
    bool is_presentation_id_Valid() const;

    QString getRevisionId() const;
    void setRevisionId(const QString &revision_id);
    bool is_revision_id_Set() const;
    bool is_revision_id_Valid() const;

    QList<OAIPage> getSlides() const;
    void setSlides(const QList<OAIPage> &slides);
    bool is_slides_Set() const;
    bool is_slides_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIPage> m_layouts;
    bool m_layouts_isSet;
    bool m_layouts_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    QList<OAIPage> m_masters;
    bool m_masters_isSet;
    bool m_masters_isValid;

    OAIPage m_notes_master;
    bool m_notes_master_isSet;
    bool m_notes_master_isValid;

    OAISize m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_presentation_id;
    bool m_presentation_id_isSet;
    bool m_presentation_id_isValid;

    QString m_revision_id;
    bool m_revision_id_isSet;
    bool m_revision_id_isValid;

    QList<OAIPage> m_slides;
    bool m_slides_isSet;
    bool m_slides_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPresentation)

#endif // OAIPresentation_H
