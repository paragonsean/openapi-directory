/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPageBackgroundFill.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPageBackgroundFill::OAIPageBackgroundFill(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPageBackgroundFill::OAIPageBackgroundFill() {
    this->initializeModel();
}

OAIPageBackgroundFill::~OAIPageBackgroundFill() {}

void OAIPageBackgroundFill::initializeModel() {

    m_property_state_isSet = false;
    m_property_state_isValid = false;

    m_solid_fill_isSet = false;
    m_solid_fill_isValid = false;

    m_stretched_picture_fill_isSet = false;
    m_stretched_picture_fill_isValid = false;
}

void OAIPageBackgroundFill::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPageBackgroundFill::fromJsonObject(QJsonObject json) {

    m_property_state_isValid = ::OpenAPI::fromJsonValue(m_property_state, json[QString("propertyState")]);
    m_property_state_isSet = !json[QString("propertyState")].isNull() && m_property_state_isValid;

    m_solid_fill_isValid = ::OpenAPI::fromJsonValue(m_solid_fill, json[QString("solidFill")]);
    m_solid_fill_isSet = !json[QString("solidFill")].isNull() && m_solid_fill_isValid;

    m_stretched_picture_fill_isValid = ::OpenAPI::fromJsonValue(m_stretched_picture_fill, json[QString("stretchedPictureFill")]);
    m_stretched_picture_fill_isSet = !json[QString("stretchedPictureFill")].isNull() && m_stretched_picture_fill_isValid;
}

QString OAIPageBackgroundFill::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPageBackgroundFill::asJsonObject() const {
    QJsonObject obj;
    if (m_property_state_isSet) {
        obj.insert(QString("propertyState"), ::OpenAPI::toJsonValue(m_property_state));
    }
    if (m_solid_fill.isSet()) {
        obj.insert(QString("solidFill"), ::OpenAPI::toJsonValue(m_solid_fill));
    }
    if (m_stretched_picture_fill.isSet()) {
        obj.insert(QString("stretchedPictureFill"), ::OpenAPI::toJsonValue(m_stretched_picture_fill));
    }
    return obj;
}

QString OAIPageBackgroundFill::getPropertyState() const {
    return m_property_state;
}
void OAIPageBackgroundFill::setPropertyState(const QString &property_state) {
    m_property_state = property_state;
    m_property_state_isSet = true;
}

bool OAIPageBackgroundFill::is_property_state_Set() const{
    return m_property_state_isSet;
}

bool OAIPageBackgroundFill::is_property_state_Valid() const{
    return m_property_state_isValid;
}

OAISolidFill OAIPageBackgroundFill::getSolidFill() const {
    return m_solid_fill;
}
void OAIPageBackgroundFill::setSolidFill(const OAISolidFill &solid_fill) {
    m_solid_fill = solid_fill;
    m_solid_fill_isSet = true;
}

bool OAIPageBackgroundFill::is_solid_fill_Set() const{
    return m_solid_fill_isSet;
}

bool OAIPageBackgroundFill::is_solid_fill_Valid() const{
    return m_solid_fill_isValid;
}

OAIStretchedPictureFill OAIPageBackgroundFill::getStretchedPictureFill() const {
    return m_stretched_picture_fill;
}
void OAIPageBackgroundFill::setStretchedPictureFill(const OAIStretchedPictureFill &stretched_picture_fill) {
    m_stretched_picture_fill = stretched_picture_fill;
    m_stretched_picture_fill_isSet = true;
}

bool OAIPageBackgroundFill::is_stretched_picture_fill_Set() const{
    return m_stretched_picture_fill_isSet;
}

bool OAIPageBackgroundFill::is_stretched_picture_fill_Valid() const{
    return m_stretched_picture_fill_isValid;
}

bool OAIPageBackgroundFill::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_property_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_solid_fill.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stretched_picture_fill.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPageBackgroundFill::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
