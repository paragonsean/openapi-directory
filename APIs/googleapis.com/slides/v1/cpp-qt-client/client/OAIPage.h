/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPage.h
 *
 * A page in a presentation.
 */

#ifndef OAIPage_H
#define OAIPage_H

#include <QJsonObject>

#include "OAILayoutProperties.h"
#include "OAIMasterProperties.h"
#include "OAINotesProperties.h"
#include "OAIPageElement.h"
#include "OAIPageProperties.h"
#include "OAISlideProperties.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILayoutProperties;
class OAIMasterProperties;
class OAINotesProperties;
class OAIPageElement;
class OAIPageProperties;
class OAISlideProperties;

class OAIPage : public OAIObject {
public:
    OAIPage();
    OAIPage(QString json);
    ~OAIPage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILayoutProperties getLayoutProperties() const;
    void setLayoutProperties(const OAILayoutProperties &layout_properties);
    bool is_layout_properties_Set() const;
    bool is_layout_properties_Valid() const;

    OAIMasterProperties getMasterProperties() const;
    void setMasterProperties(const OAIMasterProperties &master_properties);
    bool is_master_properties_Set() const;
    bool is_master_properties_Valid() const;

    OAINotesProperties getNotesProperties() const;
    void setNotesProperties(const OAINotesProperties &notes_properties);
    bool is_notes_properties_Set() const;
    bool is_notes_properties_Valid() const;

    QString getObjectId() const;
    void setObjectId(const QString &object_id);
    bool is_object_id_Set() const;
    bool is_object_id_Valid() const;

    QList<OAIPageElement> getPageElements() const;
    void setPageElements(const QList<OAIPageElement> &page_elements);
    bool is_page_elements_Set() const;
    bool is_page_elements_Valid() const;

    OAIPageProperties getPageProperties() const;
    void setPageProperties(const OAIPageProperties &page_properties);
    bool is_page_properties_Set() const;
    bool is_page_properties_Valid() const;

    QString getPageType() const;
    void setPageType(const QString &page_type);
    bool is_page_type_Set() const;
    bool is_page_type_Valid() const;

    QString getRevisionId() const;
    void setRevisionId(const QString &revision_id);
    bool is_revision_id_Set() const;
    bool is_revision_id_Valid() const;

    OAISlideProperties getSlideProperties() const;
    void setSlideProperties(const OAISlideProperties &slide_properties);
    bool is_slide_properties_Set() const;
    bool is_slide_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILayoutProperties m_layout_properties;
    bool m_layout_properties_isSet;
    bool m_layout_properties_isValid;

    OAIMasterProperties m_master_properties;
    bool m_master_properties_isSet;
    bool m_master_properties_isValid;

    OAINotesProperties m_notes_properties;
    bool m_notes_properties_isSet;
    bool m_notes_properties_isValid;

    QString m_object_id;
    bool m_object_id_isSet;
    bool m_object_id_isValid;

    QList<OAIPageElement> m_page_elements;
    bool m_page_elements_isSet;
    bool m_page_elements_isValid;

    OAIPageProperties m_page_properties;
    bool m_page_properties_isSet;
    bool m_page_properties_isValid;

    QString m_page_type;
    bool m_page_type_isSet;
    bool m_page_type_isValid;

    QString m_revision_id;
    bool m_revision_id_isSet;
    bool m_revision_id_isValid;

    OAISlideProperties m_slide_properties;
    bool m_slide_properties_isSet;
    bool m_slide_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPage)

#endif // OAIPage_H
