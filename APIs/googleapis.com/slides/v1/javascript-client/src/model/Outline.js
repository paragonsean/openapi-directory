/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Dimension from './Dimension';
import OutlineFill from './OutlineFill';

/**
 * The Outline model module.
 * @module model/Outline
 * @version v1
 */
class Outline {
    /**
     * Constructs a new <code>Outline</code>.
     * The outline of a PageElement. If these fields are unset, they may be inherited from a parent placeholder if it exists. If there is no parent, the fields will default to the value used for new page elements created in the Slides editor, which may depend on the page element kind.
     * @alias module:model/Outline
     */
    constructor() { 
        
        Outline.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Outline</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Outline} obj Optional instance to populate.
     * @return {module:model/Outline} The populated <code>Outline</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Outline();

            if (data.hasOwnProperty('dashStyle')) {
                obj['dashStyle'] = ApiClient.convertToType(data['dashStyle'], 'String');
            }
            if (data.hasOwnProperty('outlineFill')) {
                obj['outlineFill'] = OutlineFill.constructFromObject(data['outlineFill']);
            }
            if (data.hasOwnProperty('propertyState')) {
                obj['propertyState'] = ApiClient.convertToType(data['propertyState'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = Dimension.constructFromObject(data['weight']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Outline</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Outline</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dashStyle'] && !(typeof data['dashStyle'] === 'string' || data['dashStyle'] instanceof String)) {
            throw new Error("Expected the field `dashStyle` to be a primitive type in the JSON string but got " + data['dashStyle']);
        }
        // validate the optional field `outlineFill`
        if (data['outlineFill']) { // data not null
          OutlineFill.validateJSON(data['outlineFill']);
        }
        // ensure the json data is a string
        if (data['propertyState'] && !(typeof data['propertyState'] === 'string' || data['propertyState'] instanceof String)) {
            throw new Error("Expected the field `propertyState` to be a primitive type in the JSON string but got " + data['propertyState']);
        }
        // validate the optional field `weight`
        if (data['weight']) { // data not null
          Dimension.validateJSON(data['weight']);
        }

        return true;
    }


}



/**
 * The dash style of the outline.
 * @member {module:model/Outline.DashStyleEnum} dashStyle
 */
Outline.prototype['dashStyle'] = undefined;

/**
 * @member {module:model/OutlineFill} outlineFill
 */
Outline.prototype['outlineFill'] = undefined;

/**
 * The outline property state. Updating the outline on a page element will implicitly update this field to `RENDERED`, unless another value is specified in the same request. To have no outline on a page element, set this field to `NOT_RENDERED`. In this case, any other outline fields set in the same request will be ignored.
 * @member {module:model/Outline.PropertyStateEnum} propertyState
 */
Outline.prototype['propertyState'] = undefined;

/**
 * @member {module:model/Dimension} weight
 */
Outline.prototype['weight'] = undefined;





/**
 * Allowed values for the <code>dashStyle</code> property.
 * @enum {String}
 * @readonly
 */
Outline['DashStyleEnum'] = {

    /**
     * value: "DASH_STYLE_UNSPECIFIED"
     * @const
     */
    "DASH_STYLE_UNSPECIFIED": "DASH_STYLE_UNSPECIFIED",

    /**
     * value: "SOLID"
     * @const
     */
    "SOLID": "SOLID",

    /**
     * value: "DOT"
     * @const
     */
    "DOT": "DOT",

    /**
     * value: "DASH"
     * @const
     */
    "DASH": "DASH",

    /**
     * value: "DASH_DOT"
     * @const
     */
    "DASH_DOT": "DASH_DOT",

    /**
     * value: "LONG_DASH"
     * @const
     */
    "LONG_DASH": "LONG_DASH",

    /**
     * value: "LONG_DASH_DOT"
     * @const
     */
    "LONG_DASH_DOT": "LONG_DASH_DOT"
};


/**
 * Allowed values for the <code>propertyState</code> property.
 * @enum {String}
 * @readonly
 */
Outline['PropertyStateEnum'] = {

    /**
     * value: "RENDERED"
     * @const
     */
    "RENDERED": "RENDERED",

    /**
     * value: "NOT_RENDERED"
     * @const
     */
    "NOT_RENDERED": "NOT_RENDERED",

    /**
     * value: "INHERIT"
     * @const
     */
    "INHERIT": "INHERIT"
};



export default Outline;

