/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ColorScheme from './ColorScheme';
import PageBackgroundFill from './PageBackgroundFill';

/**
 * The PageProperties model module.
 * @module model/PageProperties
 * @version v1
 */
class PageProperties {
    /**
     * Constructs a new <code>PageProperties</code>.
     * The properties of the Page. The page will inherit properties from the parent page. Depending on the page type the hierarchy is defined in either SlideProperties or LayoutProperties.
     * @alias module:model/PageProperties
     */
    constructor() { 
        
        PageProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PageProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PageProperties} obj Optional instance to populate.
     * @return {module:model/PageProperties} The populated <code>PageProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PageProperties();

            if (data.hasOwnProperty('colorScheme')) {
                obj['colorScheme'] = ColorScheme.constructFromObject(data['colorScheme']);
            }
            if (data.hasOwnProperty('pageBackgroundFill')) {
                obj['pageBackgroundFill'] = PageBackgroundFill.constructFromObject(data['pageBackgroundFill']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PageProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PageProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `colorScheme`
        if (data['colorScheme']) { // data not null
          ColorScheme.validateJSON(data['colorScheme']);
        }
        // validate the optional field `pageBackgroundFill`
        if (data['pageBackgroundFill']) { // data not null
          PageBackgroundFill.validateJSON(data['pageBackgroundFill']);
        }

        return true;
    }


}



/**
 * @member {module:model/ColorScheme} colorScheme
 */
PageProperties.prototype['colorScheme'] = undefined;

/**
 * @member {module:model/PageBackgroundFill} pageBackgroundFill
 */
PageProperties.prototype['pageBackgroundFill'] = undefined;






export default PageProperties;

