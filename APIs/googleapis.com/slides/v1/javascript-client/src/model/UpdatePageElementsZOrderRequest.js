/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdatePageElementsZOrderRequest model module.
 * @module model/UpdatePageElementsZOrderRequest
 * @version v1
 */
class UpdatePageElementsZOrderRequest {
    /**
     * Constructs a new <code>UpdatePageElementsZOrderRequest</code>.
     * Updates the Z-order of page elements. Z-order is an ordering of the elements on the page from back to front. The page element in the front may cover the elements that are behind it.
     * @alias module:model/UpdatePageElementsZOrderRequest
     */
    constructor() { 
        
        UpdatePageElementsZOrderRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdatePageElementsZOrderRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePageElementsZOrderRequest} obj Optional instance to populate.
     * @return {module:model/UpdatePageElementsZOrderRequest} The populated <code>UpdatePageElementsZOrderRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePageElementsZOrderRequest();

            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('pageElementObjectIds')) {
                obj['pageElementObjectIds'] = ApiClient.convertToType(data['pageElementObjectIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatePageElementsZOrderRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatePageElementsZOrderRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['operation'] && !(typeof data['operation'] === 'string' || data['operation'] instanceof String)) {
            throw new Error("Expected the field `operation` to be a primitive type in the JSON string but got " + data['operation']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['pageElementObjectIds'])) {
            throw new Error("Expected the field `pageElementObjectIds` to be an array in the JSON data but got " + data['pageElementObjectIds']);
        }

        return true;
    }


}



/**
 * The Z-order operation to apply on the page elements. When applying the operation on multiple page elements, the relative Z-orders within these page elements before the operation is maintained.
 * @member {module:model/UpdatePageElementsZOrderRequest.OperationEnum} operation
 */
UpdatePageElementsZOrderRequest.prototype['operation'] = undefined;

/**
 * The object IDs of the page elements to update. All the page elements must be on the same page and must not be grouped.
 * @member {Array.<String>} pageElementObjectIds
 */
UpdatePageElementsZOrderRequest.prototype['pageElementObjectIds'] = undefined;





/**
 * Allowed values for the <code>operation</code> property.
 * @enum {String}
 * @readonly
 */
UpdatePageElementsZOrderRequest['OperationEnum'] = {

    /**
     * value: "Z_ORDER_OPERATION_UNSPECIFIED"
     * @const
     */
    "Z_ORDER_OPERATION_UNSPECIFIED": "Z_ORDER_OPERATION_UNSPECIFIED",

    /**
     * value: "BRING_TO_FRONT"
     * @const
     */
    "BRING_TO_FRONT": "BRING_TO_FRONT",

    /**
     * value: "BRING_FORWARD"
     * @const
     */
    "BRING_FORWARD": "BRING_FORWARD",

    /**
     * value: "SEND_BACKWARD"
     * @const
     */
    "SEND_BACKWARD": "SEND_BACKWARD",

    /**
     * value: "SEND_TO_BACK"
     * @const
     */
    "SEND_TO_BACK": "SEND_TO_BACK"
};



export default UpdatePageElementsZOrderRequest;

