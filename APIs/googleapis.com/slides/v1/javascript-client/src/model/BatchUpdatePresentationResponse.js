/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Response from './Response';
import WriteControl from './WriteControl';

/**
 * The BatchUpdatePresentationResponse model module.
 * @module model/BatchUpdatePresentationResponse
 * @version v1
 */
class BatchUpdatePresentationResponse {
    /**
     * Constructs a new <code>BatchUpdatePresentationResponse</code>.
     * Response message from a batch update.
     * @alias module:model/BatchUpdatePresentationResponse
     */
    constructor() { 
        
        BatchUpdatePresentationResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchUpdatePresentationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchUpdatePresentationResponse} obj Optional instance to populate.
     * @return {module:model/BatchUpdatePresentationResponse} The populated <code>BatchUpdatePresentationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchUpdatePresentationResponse();

            if (data.hasOwnProperty('presentationId')) {
                obj['presentationId'] = ApiClient.convertToType(data['presentationId'], 'String');
            }
            if (data.hasOwnProperty('replies')) {
                obj['replies'] = ApiClient.convertToType(data['replies'], [Response]);
            }
            if (data.hasOwnProperty('writeControl')) {
                obj['writeControl'] = WriteControl.constructFromObject(data['writeControl']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchUpdatePresentationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchUpdatePresentationResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['presentationId'] && !(typeof data['presentationId'] === 'string' || data['presentationId'] instanceof String)) {
            throw new Error("Expected the field `presentationId` to be a primitive type in the JSON string but got " + data['presentationId']);
        }
        if (data['replies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['replies'])) {
                throw new Error("Expected the field `replies` to be an array in the JSON data but got " + data['replies']);
            }
            // validate the optional field `replies` (array)
            for (const item of data['replies']) {
                Response.validateJSON(item);
            };
        }
        // validate the optional field `writeControl`
        if (data['writeControl']) { // data not null
          WriteControl.validateJSON(data['writeControl']);
        }

        return true;
    }


}



/**
 * The presentation the updates were applied to.
 * @member {String} presentationId
 */
BatchUpdatePresentationResponse.prototype['presentationId'] = undefined;

/**
 * The reply of the updates. This maps 1:1 with the updates, although replies to some requests may be empty.
 * @member {Array.<module:model/Response>} replies
 */
BatchUpdatePresentationResponse.prototype['replies'] = undefined;

/**
 * @member {module:model/WriteControl} writeControl
 */
BatchUpdatePresentationResponse.prototype['writeControl'] = undefined;






export default BatchUpdatePresentationResponse;

