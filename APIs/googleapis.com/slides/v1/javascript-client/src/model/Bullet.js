/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TextStyle from './TextStyle';

/**
 * The Bullet model module.
 * @module model/Bullet
 * @version v1
 */
class Bullet {
    /**
     * Constructs a new <code>Bullet</code>.
     * Describes the bullet of a paragraph.
     * @alias module:model/Bullet
     */
    constructor() { 
        
        Bullet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Bullet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Bullet} obj Optional instance to populate.
     * @return {module:model/Bullet} The populated <code>Bullet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Bullet();

            if (data.hasOwnProperty('bulletStyle')) {
                obj['bulletStyle'] = TextStyle.constructFromObject(data['bulletStyle']);
            }
            if (data.hasOwnProperty('glyph')) {
                obj['glyph'] = ApiClient.convertToType(data['glyph'], 'String');
            }
            if (data.hasOwnProperty('listId')) {
                obj['listId'] = ApiClient.convertToType(data['listId'], 'String');
            }
            if (data.hasOwnProperty('nestingLevel')) {
                obj['nestingLevel'] = ApiClient.convertToType(data['nestingLevel'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Bullet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Bullet</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bulletStyle`
        if (data['bulletStyle']) { // data not null
          TextStyle.validateJSON(data['bulletStyle']);
        }
        // ensure the json data is a string
        if (data['glyph'] && !(typeof data['glyph'] === 'string' || data['glyph'] instanceof String)) {
            throw new Error("Expected the field `glyph` to be a primitive type in the JSON string but got " + data['glyph']);
        }
        // ensure the json data is a string
        if (data['listId'] && !(typeof data['listId'] === 'string' || data['listId'] instanceof String)) {
            throw new Error("Expected the field `listId` to be a primitive type in the JSON string but got " + data['listId']);
        }

        return true;
    }


}



/**
 * @member {module:model/TextStyle} bulletStyle
 */
Bullet.prototype['bulletStyle'] = undefined;

/**
 * The rendered bullet glyph for this paragraph.
 * @member {String} glyph
 */
Bullet.prototype['glyph'] = undefined;

/**
 * The ID of the list this paragraph belongs to.
 * @member {String} listId
 */
Bullet.prototype['listId'] = undefined;

/**
 * The nesting level of this paragraph in the list.
 * @member {Number} nestingLevel
 */
Bullet.prototype['nestingLevel'] = undefined;






export default Bullet;

