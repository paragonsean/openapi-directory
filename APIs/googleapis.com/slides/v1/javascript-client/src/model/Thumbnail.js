/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Thumbnail model module.
 * @module model/Thumbnail
 * @version v1
 */
class Thumbnail {
    /**
     * Constructs a new <code>Thumbnail</code>.
     * The thumbnail of a page.
     * @alias module:model/Thumbnail
     */
    constructor() { 
        
        Thumbnail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Thumbnail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Thumbnail} obj Optional instance to populate.
     * @return {module:model/Thumbnail} The populated <code>Thumbnail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Thumbnail();

            if (data.hasOwnProperty('contentUrl')) {
                obj['contentUrl'] = ApiClient.convertToType(data['contentUrl'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Thumbnail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Thumbnail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['contentUrl'] && !(typeof data['contentUrl'] === 'string' || data['contentUrl'] instanceof String)) {
            throw new Error("Expected the field `contentUrl` to be a primitive type in the JSON string but got " + data['contentUrl']);
        }

        return true;
    }


}



/**
 * The content URL of the thumbnail image. The URL to the image has a default lifetime of 30 minutes. This URL is tagged with the account of the requester. Anyone with the URL effectively accesses the image as the original requester. Access to the image may be lost if the presentation's sharing settings change. The mime type of the thumbnail image is the same as specified in the `GetPageThumbnailRequest`.
 * @member {String} contentUrl
 */
Thumbnail.prototype['contentUrl'] = undefined;

/**
 * The positive height in pixels of the thumbnail image.
 * @member {Number} height
 */
Thumbnail.prototype['height'] = undefined;

/**
 * The positive width in pixels of the thumbnail image.
 * @member {Number} width
 */
Thumbnail.prototype['width'] = undefined;






export default Thumbnail;

