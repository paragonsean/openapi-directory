/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Outline from './Outline';

/**
 * The VideoProperties model module.
 * @module model/VideoProperties
 * @version v1
 */
class VideoProperties {
    /**
     * Constructs a new <code>VideoProperties</code>.
     * The properties of the Video.
     * @alias module:model/VideoProperties
     */
    constructor() { 
        
        VideoProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoProperties} obj Optional instance to populate.
     * @return {module:model/VideoProperties} The populated <code>VideoProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoProperties();

            if (data.hasOwnProperty('autoPlay')) {
                obj['autoPlay'] = ApiClient.convertToType(data['autoPlay'], 'Boolean');
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Number');
            }
            if (data.hasOwnProperty('mute')) {
                obj['mute'] = ApiClient.convertToType(data['mute'], 'Boolean');
            }
            if (data.hasOwnProperty('outline')) {
                obj['outline'] = Outline.constructFromObject(data['outline']);
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `outline`
        if (data['outline']) { // data not null
          Outline.validateJSON(data['outline']);
        }

        return true;
    }


}



/**
 * Whether to enable video autoplay when the page is displayed in present mode. Defaults to false.
 * @member {Boolean} autoPlay
 */
VideoProperties.prototype['autoPlay'] = undefined;

/**
 * The time at which to end playback, measured in seconds from the beginning of the video. If set, the end time should be after the start time. If not set or if you set this to a value that exceeds the video's length, the video will be played until its end.
 * @member {Number} end
 */
VideoProperties.prototype['end'] = undefined;

/**
 * Whether to mute the audio during video playback. Defaults to false.
 * @member {Boolean} mute
 */
VideoProperties.prototype['mute'] = undefined;

/**
 * @member {module:model/Outline} outline
 */
VideoProperties.prototype['outline'] = undefined;

/**
 * The time at which to start playback, measured in seconds from the beginning of the video. If set, the start time should be before the end time. If you set this to a value that exceeds the video's length in seconds, the video will be played from the last second. If not set, the video will be played from the beginning.
 * @member {Number} start
 */
VideoProperties.prototype['start'] = undefined;






export default VideoProperties;

