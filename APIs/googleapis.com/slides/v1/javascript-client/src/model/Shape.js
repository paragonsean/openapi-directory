/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Placeholder from './Placeholder';
import ShapeProperties from './ShapeProperties';
import TextContent from './TextContent';

/**
 * The Shape model module.
 * @module model/Shape
 * @version v1
 */
class Shape {
    /**
     * Constructs a new <code>Shape</code>.
     * A PageElement kind representing a generic shape that does not have a more specific classification.
     * @alias module:model/Shape
     */
    constructor() { 
        
        Shape.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Shape</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Shape} obj Optional instance to populate.
     * @return {module:model/Shape} The populated <code>Shape</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Shape();

            if (data.hasOwnProperty('placeholder')) {
                obj['placeholder'] = Placeholder.constructFromObject(data['placeholder']);
            }
            if (data.hasOwnProperty('shapeProperties')) {
                obj['shapeProperties'] = ShapeProperties.constructFromObject(data['shapeProperties']);
            }
            if (data.hasOwnProperty('shapeType')) {
                obj['shapeType'] = ApiClient.convertToType(data['shapeType'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = TextContent.constructFromObject(data['text']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Shape</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Shape</code>.
     */
    static validateJSON(data) {
        // validate the optional field `placeholder`
        if (data['placeholder']) { // data not null
          Placeholder.validateJSON(data['placeholder']);
        }
        // validate the optional field `shapeProperties`
        if (data['shapeProperties']) { // data not null
          ShapeProperties.validateJSON(data['shapeProperties']);
        }
        // ensure the json data is a string
        if (data['shapeType'] && !(typeof data['shapeType'] === 'string' || data['shapeType'] instanceof String)) {
            throw new Error("Expected the field `shapeType` to be a primitive type in the JSON string but got " + data['shapeType']);
        }
        // validate the optional field `text`
        if (data['text']) { // data not null
          TextContent.validateJSON(data['text']);
        }

        return true;
    }


}



/**
 * @member {module:model/Placeholder} placeholder
 */
Shape.prototype['placeholder'] = undefined;

/**
 * @member {module:model/ShapeProperties} shapeProperties
 */
Shape.prototype['shapeProperties'] = undefined;

/**
 * The type of the shape.
 * @member {module:model/Shape.ShapeTypeEnum} shapeType
 */
Shape.prototype['shapeType'] = undefined;

/**
 * @member {module:model/TextContent} text
 */
Shape.prototype['text'] = undefined;





/**
 * Allowed values for the <code>shapeType</code> property.
 * @enum {String}
 * @readonly
 */
Shape['ShapeTypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "TEXT_BOX"
     * @const
     */
    "TEXT_BOX": "TEXT_BOX",

    /**
     * value: "RECTANGLE"
     * @const
     */
    "RECTANGLE": "RECTANGLE",

    /**
     * value: "ROUND_RECTANGLE"
     * @const
     */
    "ROUND_RECTANGLE": "ROUND_RECTANGLE",

    /**
     * value: "ELLIPSE"
     * @const
     */
    "ELLIPSE": "ELLIPSE",

    /**
     * value: "ARC"
     * @const
     */
    "ARC": "ARC",

    /**
     * value: "BENT_ARROW"
     * @const
     */
    "BENT_ARROW": "BENT_ARROW",

    /**
     * value: "BENT_UP_ARROW"
     * @const
     */
    "BENT_UP_ARROW": "BENT_UP_ARROW",

    /**
     * value: "BEVEL"
     * @const
     */
    "BEVEL": "BEVEL",

    /**
     * value: "BLOCK_ARC"
     * @const
     */
    "BLOCK_ARC": "BLOCK_ARC",

    /**
     * value: "BRACE_PAIR"
     * @const
     */
    "BRACE_PAIR": "BRACE_PAIR",

    /**
     * value: "BRACKET_PAIR"
     * @const
     */
    "BRACKET_PAIR": "BRACKET_PAIR",

    /**
     * value: "CAN"
     * @const
     */
    "CAN": "CAN",

    /**
     * value: "CHEVRON"
     * @const
     */
    "CHEVRON": "CHEVRON",

    /**
     * value: "CHORD"
     * @const
     */
    "CHORD": "CHORD",

    /**
     * value: "CLOUD"
     * @const
     */
    "CLOUD": "CLOUD",

    /**
     * value: "CORNER"
     * @const
     */
    "CORNER": "CORNER",

    /**
     * value: "CUBE"
     * @const
     */
    "CUBE": "CUBE",

    /**
     * value: "CURVED_DOWN_ARROW"
     * @const
     */
    "CURVED_DOWN_ARROW": "CURVED_DOWN_ARROW",

    /**
     * value: "CURVED_LEFT_ARROW"
     * @const
     */
    "CURVED_LEFT_ARROW": "CURVED_LEFT_ARROW",

    /**
     * value: "CURVED_RIGHT_ARROW"
     * @const
     */
    "CURVED_RIGHT_ARROW": "CURVED_RIGHT_ARROW",

    /**
     * value: "CURVED_UP_ARROW"
     * @const
     */
    "CURVED_UP_ARROW": "CURVED_UP_ARROW",

    /**
     * value: "DECAGON"
     * @const
     */
    "DECAGON": "DECAGON",

    /**
     * value: "DIAGONAL_STRIPE"
     * @const
     */
    "DIAGONAL_STRIPE": "DIAGONAL_STRIPE",

    /**
     * value: "DIAMOND"
     * @const
     */
    "DIAMOND": "DIAMOND",

    /**
     * value: "DODECAGON"
     * @const
     */
    "DODECAGON": "DODECAGON",

    /**
     * value: "DONUT"
     * @const
     */
    "DONUT": "DONUT",

    /**
     * value: "DOUBLE_WAVE"
     * @const
     */
    "DOUBLE_WAVE": "DOUBLE_WAVE",

    /**
     * value: "DOWN_ARROW"
     * @const
     */
    "DOWN_ARROW": "DOWN_ARROW",

    /**
     * value: "DOWN_ARROW_CALLOUT"
     * @const
     */
    "DOWN_ARROW_CALLOUT": "DOWN_ARROW_CALLOUT",

    /**
     * value: "FOLDED_CORNER"
     * @const
     */
    "FOLDED_CORNER": "FOLDED_CORNER",

    /**
     * value: "FRAME"
     * @const
     */
    "FRAME": "FRAME",

    /**
     * value: "HALF_FRAME"
     * @const
     */
    "HALF_FRAME": "HALF_FRAME",

    /**
     * value: "HEART"
     * @const
     */
    "HEART": "HEART",

    /**
     * value: "HEPTAGON"
     * @const
     */
    "HEPTAGON": "HEPTAGON",

    /**
     * value: "HEXAGON"
     * @const
     */
    "HEXAGON": "HEXAGON",

    /**
     * value: "HOME_PLATE"
     * @const
     */
    "HOME_PLATE": "HOME_PLATE",

    /**
     * value: "HORIZONTAL_SCROLL"
     * @const
     */
    "HORIZONTAL_SCROLL": "HORIZONTAL_SCROLL",

    /**
     * value: "IRREGULAR_SEAL_1"
     * @const
     */
    "IRREGULAR_SEAL_1": "IRREGULAR_SEAL_1",

    /**
     * value: "IRREGULAR_SEAL_2"
     * @const
     */
    "IRREGULAR_SEAL_2": "IRREGULAR_SEAL_2",

    /**
     * value: "LEFT_ARROW"
     * @const
     */
    "LEFT_ARROW": "LEFT_ARROW",

    /**
     * value: "LEFT_ARROW_CALLOUT"
     * @const
     */
    "LEFT_ARROW_CALLOUT": "LEFT_ARROW_CALLOUT",

    /**
     * value: "LEFT_BRACE"
     * @const
     */
    "LEFT_BRACE": "LEFT_BRACE",

    /**
     * value: "LEFT_BRACKET"
     * @const
     */
    "LEFT_BRACKET": "LEFT_BRACKET",

    /**
     * value: "LEFT_RIGHT_ARROW"
     * @const
     */
    "LEFT_RIGHT_ARROW": "LEFT_RIGHT_ARROW",

    /**
     * value: "LEFT_RIGHT_ARROW_CALLOUT"
     * @const
     */
    "LEFT_RIGHT_ARROW_CALLOUT": "LEFT_RIGHT_ARROW_CALLOUT",

    /**
     * value: "LEFT_RIGHT_UP_ARROW"
     * @const
     */
    "LEFT_RIGHT_UP_ARROW": "LEFT_RIGHT_UP_ARROW",

    /**
     * value: "LEFT_UP_ARROW"
     * @const
     */
    "LEFT_UP_ARROW": "LEFT_UP_ARROW",

    /**
     * value: "LIGHTNING_BOLT"
     * @const
     */
    "LIGHTNING_BOLT": "LIGHTNING_BOLT",

    /**
     * value: "MATH_DIVIDE"
     * @const
     */
    "MATH_DIVIDE": "MATH_DIVIDE",

    /**
     * value: "MATH_EQUAL"
     * @const
     */
    "MATH_EQUAL": "MATH_EQUAL",

    /**
     * value: "MATH_MINUS"
     * @const
     */
    "MATH_MINUS": "MATH_MINUS",

    /**
     * value: "MATH_MULTIPLY"
     * @const
     */
    "MATH_MULTIPLY": "MATH_MULTIPLY",

    /**
     * value: "MATH_NOT_EQUAL"
     * @const
     */
    "MATH_NOT_EQUAL": "MATH_NOT_EQUAL",

    /**
     * value: "MATH_PLUS"
     * @const
     */
    "MATH_PLUS": "MATH_PLUS",

    /**
     * value: "MOON"
     * @const
     */
    "MOON": "MOON",

    /**
     * value: "NO_SMOKING"
     * @const
     */
    "NO_SMOKING": "NO_SMOKING",

    /**
     * value: "NOTCHED_RIGHT_ARROW"
     * @const
     */
    "NOTCHED_RIGHT_ARROW": "NOTCHED_RIGHT_ARROW",

    /**
     * value: "OCTAGON"
     * @const
     */
    "OCTAGON": "OCTAGON",

    /**
     * value: "PARALLELOGRAM"
     * @const
     */
    "PARALLELOGRAM": "PARALLELOGRAM",

    /**
     * value: "PENTAGON"
     * @const
     */
    "PENTAGON": "PENTAGON",

    /**
     * value: "PIE"
     * @const
     */
    "PIE": "PIE",

    /**
     * value: "PLAQUE"
     * @const
     */
    "PLAQUE": "PLAQUE",

    /**
     * value: "PLUS"
     * @const
     */
    "PLUS": "PLUS",

    /**
     * value: "QUAD_ARROW"
     * @const
     */
    "QUAD_ARROW": "QUAD_ARROW",

    /**
     * value: "QUAD_ARROW_CALLOUT"
     * @const
     */
    "QUAD_ARROW_CALLOUT": "QUAD_ARROW_CALLOUT",

    /**
     * value: "RIBBON"
     * @const
     */
    "RIBBON": "RIBBON",

    /**
     * value: "RIBBON_2"
     * @const
     */
    "RIBBON_2": "RIBBON_2",

    /**
     * value: "RIGHT_ARROW"
     * @const
     */
    "RIGHT_ARROW": "RIGHT_ARROW",

    /**
     * value: "RIGHT_ARROW_CALLOUT"
     * @const
     */
    "RIGHT_ARROW_CALLOUT": "RIGHT_ARROW_CALLOUT",

    /**
     * value: "RIGHT_BRACE"
     * @const
     */
    "RIGHT_BRACE": "RIGHT_BRACE",

    /**
     * value: "RIGHT_BRACKET"
     * @const
     */
    "RIGHT_BRACKET": "RIGHT_BRACKET",

    /**
     * value: "ROUND_1_RECTANGLE"
     * @const
     */
    "ROUND_1_RECTANGLE": "ROUND_1_RECTANGLE",

    /**
     * value: "ROUND_2_DIAGONAL_RECTANGLE"
     * @const
     */
    "ROUND_2_DIAGONAL_RECTANGLE": "ROUND_2_DIAGONAL_RECTANGLE",

    /**
     * value: "ROUND_2_SAME_RECTANGLE"
     * @const
     */
    "ROUND_2_SAME_RECTANGLE": "ROUND_2_SAME_RECTANGLE",

    /**
     * value: "RIGHT_TRIANGLE"
     * @const
     */
    "RIGHT_TRIANGLE": "RIGHT_TRIANGLE",

    /**
     * value: "SMILEY_FACE"
     * @const
     */
    "SMILEY_FACE": "SMILEY_FACE",

    /**
     * value: "SNIP_1_RECTANGLE"
     * @const
     */
    "SNIP_1_RECTANGLE": "SNIP_1_RECTANGLE",

    /**
     * value: "SNIP_2_DIAGONAL_RECTANGLE"
     * @const
     */
    "SNIP_2_DIAGONAL_RECTANGLE": "SNIP_2_DIAGONAL_RECTANGLE",

    /**
     * value: "SNIP_2_SAME_RECTANGLE"
     * @const
     */
    "SNIP_2_SAME_RECTANGLE": "SNIP_2_SAME_RECTANGLE",

    /**
     * value: "SNIP_ROUND_RECTANGLE"
     * @const
     */
    "SNIP_ROUND_RECTANGLE": "SNIP_ROUND_RECTANGLE",

    /**
     * value: "STAR_10"
     * @const
     */
    "STAR_10": "STAR_10",

    /**
     * value: "STAR_12"
     * @const
     */
    "STAR_12": "STAR_12",

    /**
     * value: "STAR_16"
     * @const
     */
    "STAR_16": "STAR_16",

    /**
     * value: "STAR_24"
     * @const
     */
    "STAR_24": "STAR_24",

    /**
     * value: "STAR_32"
     * @const
     */
    "STAR_32": "STAR_32",

    /**
     * value: "STAR_4"
     * @const
     */
    "STAR_4": "STAR_4",

    /**
     * value: "STAR_5"
     * @const
     */
    "STAR_5": "STAR_5",

    /**
     * value: "STAR_6"
     * @const
     */
    "STAR_6": "STAR_6",

    /**
     * value: "STAR_7"
     * @const
     */
    "STAR_7": "STAR_7",

    /**
     * value: "STAR_8"
     * @const
     */
    "STAR_8": "STAR_8",

    /**
     * value: "STRIPED_RIGHT_ARROW"
     * @const
     */
    "STRIPED_RIGHT_ARROW": "STRIPED_RIGHT_ARROW",

    /**
     * value: "SUN"
     * @const
     */
    "SUN": "SUN",

    /**
     * value: "TRAPEZOID"
     * @const
     */
    "TRAPEZOID": "TRAPEZOID",

    /**
     * value: "TRIANGLE"
     * @const
     */
    "TRIANGLE": "TRIANGLE",

    /**
     * value: "UP_ARROW"
     * @const
     */
    "UP_ARROW": "UP_ARROW",

    /**
     * value: "UP_ARROW_CALLOUT"
     * @const
     */
    "UP_ARROW_CALLOUT": "UP_ARROW_CALLOUT",

    /**
     * value: "UP_DOWN_ARROW"
     * @const
     */
    "UP_DOWN_ARROW": "UP_DOWN_ARROW",

    /**
     * value: "UTURN_ARROW"
     * @const
     */
    "UTURN_ARROW": "UTURN_ARROW",

    /**
     * value: "VERTICAL_SCROLL"
     * @const
     */
    "VERTICAL_SCROLL": "VERTICAL_SCROLL",

    /**
     * value: "WAVE"
     * @const
     */
    "WAVE": "WAVE",

    /**
     * value: "WEDGE_ELLIPSE_CALLOUT"
     * @const
     */
    "WEDGE_ELLIPSE_CALLOUT": "WEDGE_ELLIPSE_CALLOUT",

    /**
     * value: "WEDGE_RECTANGLE_CALLOUT"
     * @const
     */
    "WEDGE_RECTANGLE_CALLOUT": "WEDGE_RECTANGLE_CALLOUT",

    /**
     * value: "WEDGE_ROUND_RECTANGLE_CALLOUT"
     * @const
     */
    "WEDGE_ROUND_RECTANGLE_CALLOUT": "WEDGE_ROUND_RECTANGLE_CALLOUT",

    /**
     * value: "FLOW_CHART_ALTERNATE_PROCESS"
     * @const
     */
    "FLOW_CHART_ALTERNATE_PROCESS": "FLOW_CHART_ALTERNATE_PROCESS",

    /**
     * value: "FLOW_CHART_COLLATE"
     * @const
     */
    "FLOW_CHART_COLLATE": "FLOW_CHART_COLLATE",

    /**
     * value: "FLOW_CHART_CONNECTOR"
     * @const
     */
    "FLOW_CHART_CONNECTOR": "FLOW_CHART_CONNECTOR",

    /**
     * value: "FLOW_CHART_DECISION"
     * @const
     */
    "FLOW_CHART_DECISION": "FLOW_CHART_DECISION",

    /**
     * value: "FLOW_CHART_DELAY"
     * @const
     */
    "FLOW_CHART_DELAY": "FLOW_CHART_DELAY",

    /**
     * value: "FLOW_CHART_DISPLAY"
     * @const
     */
    "FLOW_CHART_DISPLAY": "FLOW_CHART_DISPLAY",

    /**
     * value: "FLOW_CHART_DOCUMENT"
     * @const
     */
    "FLOW_CHART_DOCUMENT": "FLOW_CHART_DOCUMENT",

    /**
     * value: "FLOW_CHART_EXTRACT"
     * @const
     */
    "FLOW_CHART_EXTRACT": "FLOW_CHART_EXTRACT",

    /**
     * value: "FLOW_CHART_INPUT_OUTPUT"
     * @const
     */
    "FLOW_CHART_INPUT_OUTPUT": "FLOW_CHART_INPUT_OUTPUT",

    /**
     * value: "FLOW_CHART_INTERNAL_STORAGE"
     * @const
     */
    "FLOW_CHART_INTERNAL_STORAGE": "FLOW_CHART_INTERNAL_STORAGE",

    /**
     * value: "FLOW_CHART_MAGNETIC_DISK"
     * @const
     */
    "FLOW_CHART_MAGNETIC_DISK": "FLOW_CHART_MAGNETIC_DISK",

    /**
     * value: "FLOW_CHART_MAGNETIC_DRUM"
     * @const
     */
    "FLOW_CHART_MAGNETIC_DRUM": "FLOW_CHART_MAGNETIC_DRUM",

    /**
     * value: "FLOW_CHART_MAGNETIC_TAPE"
     * @const
     */
    "FLOW_CHART_MAGNETIC_TAPE": "FLOW_CHART_MAGNETIC_TAPE",

    /**
     * value: "FLOW_CHART_MANUAL_INPUT"
     * @const
     */
    "FLOW_CHART_MANUAL_INPUT": "FLOW_CHART_MANUAL_INPUT",

    /**
     * value: "FLOW_CHART_MANUAL_OPERATION"
     * @const
     */
    "FLOW_CHART_MANUAL_OPERATION": "FLOW_CHART_MANUAL_OPERATION",

    /**
     * value: "FLOW_CHART_MERGE"
     * @const
     */
    "FLOW_CHART_MERGE": "FLOW_CHART_MERGE",

    /**
     * value: "FLOW_CHART_MULTIDOCUMENT"
     * @const
     */
    "FLOW_CHART_MULTIDOCUMENT": "FLOW_CHART_MULTIDOCUMENT",

    /**
     * value: "FLOW_CHART_OFFLINE_STORAGE"
     * @const
     */
    "FLOW_CHART_OFFLINE_STORAGE": "FLOW_CHART_OFFLINE_STORAGE",

    /**
     * value: "FLOW_CHART_OFFPAGE_CONNECTOR"
     * @const
     */
    "FLOW_CHART_OFFPAGE_CONNECTOR": "FLOW_CHART_OFFPAGE_CONNECTOR",

    /**
     * value: "FLOW_CHART_ONLINE_STORAGE"
     * @const
     */
    "FLOW_CHART_ONLINE_STORAGE": "FLOW_CHART_ONLINE_STORAGE",

    /**
     * value: "FLOW_CHART_OR"
     * @const
     */
    "FLOW_CHART_OR": "FLOW_CHART_OR",

    /**
     * value: "FLOW_CHART_PREDEFINED_PROCESS"
     * @const
     */
    "FLOW_CHART_PREDEFINED_PROCESS": "FLOW_CHART_PREDEFINED_PROCESS",

    /**
     * value: "FLOW_CHART_PREPARATION"
     * @const
     */
    "FLOW_CHART_PREPARATION": "FLOW_CHART_PREPARATION",

    /**
     * value: "FLOW_CHART_PROCESS"
     * @const
     */
    "FLOW_CHART_PROCESS": "FLOW_CHART_PROCESS",

    /**
     * value: "FLOW_CHART_PUNCHED_CARD"
     * @const
     */
    "FLOW_CHART_PUNCHED_CARD": "FLOW_CHART_PUNCHED_CARD",

    /**
     * value: "FLOW_CHART_PUNCHED_TAPE"
     * @const
     */
    "FLOW_CHART_PUNCHED_TAPE": "FLOW_CHART_PUNCHED_TAPE",

    /**
     * value: "FLOW_CHART_SORT"
     * @const
     */
    "FLOW_CHART_SORT": "FLOW_CHART_SORT",

    /**
     * value: "FLOW_CHART_SUMMING_JUNCTION"
     * @const
     */
    "FLOW_CHART_SUMMING_JUNCTION": "FLOW_CHART_SUMMING_JUNCTION",

    /**
     * value: "FLOW_CHART_TERMINATOR"
     * @const
     */
    "FLOW_CHART_TERMINATOR": "FLOW_CHART_TERMINATOR",

    /**
     * value: "ARROW_EAST"
     * @const
     */
    "ARROW_EAST": "ARROW_EAST",

    /**
     * value: "ARROW_NORTH_EAST"
     * @const
     */
    "ARROW_NORTH_EAST": "ARROW_NORTH_EAST",

    /**
     * value: "ARROW_NORTH"
     * @const
     */
    "ARROW_NORTH": "ARROW_NORTH",

    /**
     * value: "SPEECH"
     * @const
     */
    "SPEECH": "SPEECH",

    /**
     * value: "STARBURST"
     * @const
     */
    "STARBURST": "STARBURST",

    /**
     * value: "TEARDROP"
     * @const
     */
    "TEARDROP": "TEARDROP",

    /**
     * value: "ELLIPSE_RIBBON"
     * @const
     */
    "ELLIPSE_RIBBON": "ELLIPSE_RIBBON",

    /**
     * value: "ELLIPSE_RIBBON_2"
     * @const
     */
    "ELLIPSE_RIBBON_2": "ELLIPSE_RIBBON_2",

    /**
     * value: "CLOUD_CALLOUT"
     * @const
     */
    "CLOUD_CALLOUT": "CLOUD_CALLOUT",

    /**
     * value: "CUSTOM"
     * @const
     */
    "CUSTOM": "CUSTOM"
};



export default Shape;

