/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PageElementProperties from './PageElementProperties';

/**
 * The CreateTableRequest model module.
 * @module model/CreateTableRequest
 * @version v1
 */
class CreateTableRequest {
    /**
     * Constructs a new <code>CreateTableRequest</code>.
     * Creates a new table.
     * @alias module:model/CreateTableRequest
     */
    constructor() { 
        
        CreateTableRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateTableRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateTableRequest} obj Optional instance to populate.
     * @return {module:model/CreateTableRequest} The populated <code>CreateTableRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateTableRequest();

            if (data.hasOwnProperty('columns')) {
                obj['columns'] = ApiClient.convertToType(data['columns'], 'Number');
            }
            if (data.hasOwnProperty('elementProperties')) {
                obj['elementProperties'] = PageElementProperties.constructFromObject(data['elementProperties']);
            }
            if (data.hasOwnProperty('objectId')) {
                obj['objectId'] = ApiClient.convertToType(data['objectId'], 'String');
            }
            if (data.hasOwnProperty('rows')) {
                obj['rows'] = ApiClient.convertToType(data['rows'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateTableRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateTableRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `elementProperties`
        if (data['elementProperties']) { // data not null
          PageElementProperties.validateJSON(data['elementProperties']);
        }
        // ensure the json data is a string
        if (data['objectId'] && !(typeof data['objectId'] === 'string' || data['objectId'] instanceof String)) {
            throw new Error("Expected the field `objectId` to be a primitive type in the JSON string but got " + data['objectId']);
        }

        return true;
    }


}



/**
 * Number of columns in the table.
 * @member {Number} columns
 */
CreateTableRequest.prototype['columns'] = undefined;

/**
 * @member {module:model/PageElementProperties} elementProperties
 */
CreateTableRequest.prototype['elementProperties'] = undefined;

/**
 * A user-supplied object ID. If you specify an ID, it must be unique among all pages and page elements in the presentation. The ID must start with an alphanumeric character or an underscore (matches regex `[a-zA-Z0-9_]`); remaining characters may include those as well as a hyphen or colon (matches regex `[a-zA-Z0-9_-:]`). The length of the ID must not be less than 5 or greater than 50. If you don't specify an ID, a unique one is generated.
 * @member {String} objectId
 */
CreateTableRequest.prototype['objectId'] = undefined;

/**
 * Number of rows in the table.
 * @member {Number} rows
 */
CreateTableRequest.prototype['rows'] = undefined;






export default CreateTableRequest;

