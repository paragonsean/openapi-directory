/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Autofit model module.
 * @module model/Autofit
 * @version v1
 */
class Autofit {
    /**
     * Constructs a new <code>Autofit</code>.
     * The autofit properties of a Shape.
     * @alias module:model/Autofit
     */
    constructor() { 
        
        Autofit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Autofit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Autofit} obj Optional instance to populate.
     * @return {module:model/Autofit} The populated <code>Autofit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Autofit();

            if (data.hasOwnProperty('autofitType')) {
                obj['autofitType'] = ApiClient.convertToType(data['autofitType'], 'String');
            }
            if (data.hasOwnProperty('fontScale')) {
                obj['fontScale'] = ApiClient.convertToType(data['fontScale'], 'Number');
            }
            if (data.hasOwnProperty('lineSpacingReduction')) {
                obj['lineSpacingReduction'] = ApiClient.convertToType(data['lineSpacingReduction'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Autofit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Autofit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['autofitType'] && !(typeof data['autofitType'] === 'string' || data['autofitType'] instanceof String)) {
            throw new Error("Expected the field `autofitType` to be a primitive type in the JSON string but got " + data['autofitType']);
        }

        return true;
    }


}



/**
 * The autofit type of the shape. If the autofit type is AUTOFIT_TYPE_UNSPECIFIED, the autofit type is inherited from a parent placeholder if it exists. The field is automatically set to NONE if a request is made that might affect text fitting within its bounding text box. In this case the font_scale is applied to the font_size and the line_spacing_reduction is applied to the line_spacing. Both properties are also reset to default values.
 * @member {module:model/Autofit.AutofitTypeEnum} autofitType
 */
Autofit.prototype['autofitType'] = undefined;

/**
 * The font scale applied to the shape. For shapes with autofit_type NONE or SHAPE_AUTOFIT, this value is the default value of 1. For TEXT_AUTOFIT, this value multiplied by the font_size gives the font size that is rendered in the editor. This property is read-only.
 * @member {Number} fontScale
 */
Autofit.prototype['fontScale'] = undefined;

/**
 * The line spacing reduction applied to the shape. For shapes with autofit_type NONE or SHAPE_AUTOFIT, this value is the default value of 0. For TEXT_AUTOFIT, this value subtracted from the line_spacing gives the line spacing that is rendered in the editor. This property is read-only.
 * @member {Number} lineSpacingReduction
 */
Autofit.prototype['lineSpacingReduction'] = undefined;





/**
 * Allowed values for the <code>autofitType</code> property.
 * @enum {String}
 * @readonly
 */
Autofit['AutofitTypeEnum'] = {

    /**
     * value: "AUTOFIT_TYPE_UNSPECIFIED"
     * @const
     */
    "AUTOFIT_TYPE_UNSPECIFIED": "AUTOFIT_TYPE_UNSPECIFIED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "TEXT_AUTOFIT"
     * @const
     */
    "TEXT_AUTOFIT": "TEXT_AUTOFIT",

    /**
     * value: "SHAPE_AUTOFIT"
     * @const
     */
    "SHAPE_AUTOFIT": "SHAPE_AUTOFIT"
};



export default Autofit;

