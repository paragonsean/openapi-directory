/**
 * Google Slides API
 * Reads and writes Google Slides presentations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleSlidesApi);
  }
}(this, function(expect, GoogleSlidesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleSlidesApi.Request();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Request', function() {
    it('should create an instance of Request', function() {
      // uncomment below and update the code to test Request
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be.a(GoogleSlidesApi.Request);
    });

    it('should have the property createImage (base name: "createImage")', function() {
      // uncomment below and update the code to test the property createImage
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property createLine (base name: "createLine")', function() {
      // uncomment below and update the code to test the property createLine
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property createParagraphBullets (base name: "createParagraphBullets")', function() {
      // uncomment below and update the code to test the property createParagraphBullets
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property createShape (base name: "createShape")', function() {
      // uncomment below and update the code to test the property createShape
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property createSheetsChart (base name: "createSheetsChart")', function() {
      // uncomment below and update the code to test the property createSheetsChart
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property createSlide (base name: "createSlide")', function() {
      // uncomment below and update the code to test the property createSlide
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property createTable (base name: "createTable")', function() {
      // uncomment below and update the code to test the property createTable
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property createVideo (base name: "createVideo")', function() {
      // uncomment below and update the code to test the property createVideo
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteObject (base name: "deleteObject")', function() {
      // uncomment below and update the code to test the property deleteObject
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteParagraphBullets (base name: "deleteParagraphBullets")', function() {
      // uncomment below and update the code to test the property deleteParagraphBullets
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteTableColumn (base name: "deleteTableColumn")', function() {
      // uncomment below and update the code to test the property deleteTableColumn
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteTableRow (base name: "deleteTableRow")', function() {
      // uncomment below and update the code to test the property deleteTableRow
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property deleteText (base name: "deleteText")', function() {
      // uncomment below and update the code to test the property deleteText
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property duplicateObject (base name: "duplicateObject")', function() {
      // uncomment below and update the code to test the property duplicateObject
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property groupObjects (base name: "groupObjects")', function() {
      // uncomment below and update the code to test the property groupObjects
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property insertTableColumns (base name: "insertTableColumns")', function() {
      // uncomment below and update the code to test the property insertTableColumns
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property insertTableRows (base name: "insertTableRows")', function() {
      // uncomment below and update the code to test the property insertTableRows
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property insertText (base name: "insertText")', function() {
      // uncomment below and update the code to test the property insertText
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property mergeTableCells (base name: "mergeTableCells")', function() {
      // uncomment below and update the code to test the property mergeTableCells
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property refreshSheetsChart (base name: "refreshSheetsChart")', function() {
      // uncomment below and update the code to test the property refreshSheetsChart
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property replaceAllShapesWithImage (base name: "replaceAllShapesWithImage")', function() {
      // uncomment below and update the code to test the property replaceAllShapesWithImage
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property replaceAllShapesWithSheetsChart (base name: "replaceAllShapesWithSheetsChart")', function() {
      // uncomment below and update the code to test the property replaceAllShapesWithSheetsChart
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property replaceAllText (base name: "replaceAllText")', function() {
      // uncomment below and update the code to test the property replaceAllText
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property replaceImage (base name: "replaceImage")', function() {
      // uncomment below and update the code to test the property replaceImage
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property rerouteLine (base name: "rerouteLine")', function() {
      // uncomment below and update the code to test the property rerouteLine
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property ungroupObjects (base name: "ungroupObjects")', function() {
      // uncomment below and update the code to test the property ungroupObjects
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property unmergeTableCells (base name: "unmergeTableCells")', function() {
      // uncomment below and update the code to test the property unmergeTableCells
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateImageProperties (base name: "updateImageProperties")', function() {
      // uncomment below and update the code to test the property updateImageProperties
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateLineCategory (base name: "updateLineCategory")', function() {
      // uncomment below and update the code to test the property updateLineCategory
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateLineProperties (base name: "updateLineProperties")', function() {
      // uncomment below and update the code to test the property updateLineProperties
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updatePageElementAltText (base name: "updatePageElementAltText")', function() {
      // uncomment below and update the code to test the property updatePageElementAltText
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updatePageElementTransform (base name: "updatePageElementTransform")', function() {
      // uncomment below and update the code to test the property updatePageElementTransform
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updatePageElementsZOrder (base name: "updatePageElementsZOrder")', function() {
      // uncomment below and update the code to test the property updatePageElementsZOrder
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updatePageProperties (base name: "updatePageProperties")', function() {
      // uncomment below and update the code to test the property updatePageProperties
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateParagraphStyle (base name: "updateParagraphStyle")', function() {
      // uncomment below and update the code to test the property updateParagraphStyle
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateShapeProperties (base name: "updateShapeProperties")', function() {
      // uncomment below and update the code to test the property updateShapeProperties
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateSlideProperties (base name: "updateSlideProperties")', function() {
      // uncomment below and update the code to test the property updateSlideProperties
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateSlidesPosition (base name: "updateSlidesPosition")', function() {
      // uncomment below and update the code to test the property updateSlidesPosition
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateTableBorderProperties (base name: "updateTableBorderProperties")', function() {
      // uncomment below and update the code to test the property updateTableBorderProperties
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateTableCellProperties (base name: "updateTableCellProperties")', function() {
      // uncomment below and update the code to test the property updateTableCellProperties
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateTableColumnProperties (base name: "updateTableColumnProperties")', function() {
      // uncomment below and update the code to test the property updateTableColumnProperties
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateTableRowProperties (base name: "updateTableRowProperties")', function() {
      // uncomment below and update the code to test the property updateTableRowProperties
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateTextStyle (base name: "updateTextStyle")', function() {
      // uncomment below and update the code to test the property updateTextStyle
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

    it('should have the property updateVideoProperties (base name: "updateVideoProperties")', function() {
      // uncomment below and update the code to test the property updateVideoProperties
      //var instance = new GoogleSlidesApi.Request();
      //expect(instance).to.be();
    });

  });

}));
