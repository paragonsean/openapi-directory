/*
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleDatastoreAdminV1beta1CommonMetadata;
import org.openapitools.client.model.GoogleDatastoreAdminV1beta1EntityFilter;
import org.openapitools.client.model.GoogleDatastoreAdminV1beta1Progress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata for ExportEntities operations.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:47:27.176209-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleDatastoreAdminV1beta1ExportEntitiesMetadata {
  public static final String SERIALIZED_NAME_COMMON = "common";
  @SerializedName(SERIALIZED_NAME_COMMON)
  private GoogleDatastoreAdminV1beta1CommonMetadata common;

  public static final String SERIALIZED_NAME_ENTITY_FILTER = "entityFilter";
  @SerializedName(SERIALIZED_NAME_ENTITY_FILTER)
  private GoogleDatastoreAdminV1beta1EntityFilter entityFilter;

  public static final String SERIALIZED_NAME_OUTPUT_URL_PREFIX = "outputUrlPrefix";
  @SerializedName(SERIALIZED_NAME_OUTPUT_URL_PREFIX)
  private String outputUrlPrefix;

  public static final String SERIALIZED_NAME_PROGRESS_BYTES = "progressBytes";
  @SerializedName(SERIALIZED_NAME_PROGRESS_BYTES)
  private GoogleDatastoreAdminV1beta1Progress progressBytes;

  public static final String SERIALIZED_NAME_PROGRESS_ENTITIES = "progressEntities";
  @SerializedName(SERIALIZED_NAME_PROGRESS_ENTITIES)
  private GoogleDatastoreAdminV1beta1Progress progressEntities;

  public GoogleDatastoreAdminV1beta1ExportEntitiesMetadata() {
  }

  public GoogleDatastoreAdminV1beta1ExportEntitiesMetadata common(GoogleDatastoreAdminV1beta1CommonMetadata common) {
    this.common = common;
    return this;
  }

  /**
   * Get common
   * @return common
   */
  @javax.annotation.Nullable
  public GoogleDatastoreAdminV1beta1CommonMetadata getCommon() {
    return common;
  }

  public void setCommon(GoogleDatastoreAdminV1beta1CommonMetadata common) {
    this.common = common;
  }


  public GoogleDatastoreAdminV1beta1ExportEntitiesMetadata entityFilter(GoogleDatastoreAdminV1beta1EntityFilter entityFilter) {
    this.entityFilter = entityFilter;
    return this;
  }

  /**
   * Get entityFilter
   * @return entityFilter
   */
  @javax.annotation.Nullable
  public GoogleDatastoreAdminV1beta1EntityFilter getEntityFilter() {
    return entityFilter;
  }

  public void setEntityFilter(GoogleDatastoreAdminV1beta1EntityFilter entityFilter) {
    this.entityFilter = entityFilter;
  }


  public GoogleDatastoreAdminV1beta1ExportEntitiesMetadata outputUrlPrefix(String outputUrlPrefix) {
    this.outputUrlPrefix = outputUrlPrefix;
    return this;
  }

  /**
   * Location for the export metadata and data files. This will be the same value as the google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix field. The final output location is provided in google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url.
   * @return outputUrlPrefix
   */
  @javax.annotation.Nullable
  public String getOutputUrlPrefix() {
    return outputUrlPrefix;
  }

  public void setOutputUrlPrefix(String outputUrlPrefix) {
    this.outputUrlPrefix = outputUrlPrefix;
  }


  public GoogleDatastoreAdminV1beta1ExportEntitiesMetadata progressBytes(GoogleDatastoreAdminV1beta1Progress progressBytes) {
    this.progressBytes = progressBytes;
    return this;
  }

  /**
   * Get progressBytes
   * @return progressBytes
   */
  @javax.annotation.Nullable
  public GoogleDatastoreAdminV1beta1Progress getProgressBytes() {
    return progressBytes;
  }

  public void setProgressBytes(GoogleDatastoreAdminV1beta1Progress progressBytes) {
    this.progressBytes = progressBytes;
  }


  public GoogleDatastoreAdminV1beta1ExportEntitiesMetadata progressEntities(GoogleDatastoreAdminV1beta1Progress progressEntities) {
    this.progressEntities = progressEntities;
    return this;
  }

  /**
   * Get progressEntities
   * @return progressEntities
   */
  @javax.annotation.Nullable
  public GoogleDatastoreAdminV1beta1Progress getProgressEntities() {
    return progressEntities;
  }

  public void setProgressEntities(GoogleDatastoreAdminV1beta1Progress progressEntities) {
    this.progressEntities = progressEntities;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleDatastoreAdminV1beta1ExportEntitiesMetadata googleDatastoreAdminV1beta1ExportEntitiesMetadata = (GoogleDatastoreAdminV1beta1ExportEntitiesMetadata) o;
    return Objects.equals(this.common, googleDatastoreAdminV1beta1ExportEntitiesMetadata.common) &&
        Objects.equals(this.entityFilter, googleDatastoreAdminV1beta1ExportEntitiesMetadata.entityFilter) &&
        Objects.equals(this.outputUrlPrefix, googleDatastoreAdminV1beta1ExportEntitiesMetadata.outputUrlPrefix) &&
        Objects.equals(this.progressBytes, googleDatastoreAdminV1beta1ExportEntitiesMetadata.progressBytes) &&
        Objects.equals(this.progressEntities, googleDatastoreAdminV1beta1ExportEntitiesMetadata.progressEntities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(common, entityFilter, outputUrlPrefix, progressBytes, progressEntities);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleDatastoreAdminV1beta1ExportEntitiesMetadata {\n");
    sb.append("    common: ").append(toIndentedString(common)).append("\n");
    sb.append("    entityFilter: ").append(toIndentedString(entityFilter)).append("\n");
    sb.append("    outputUrlPrefix: ").append(toIndentedString(outputUrlPrefix)).append("\n");
    sb.append("    progressBytes: ").append(toIndentedString(progressBytes)).append("\n");
    sb.append("    progressEntities: ").append(toIndentedString(progressEntities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("common");
    openapiFields.add("entityFilter");
    openapiFields.add("outputUrlPrefix");
    openapiFields.add("progressBytes");
    openapiFields.add("progressEntities");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleDatastoreAdminV1beta1ExportEntitiesMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleDatastoreAdminV1beta1ExportEntitiesMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleDatastoreAdminV1beta1ExportEntitiesMetadata is not found in the empty JSON string", GoogleDatastoreAdminV1beta1ExportEntitiesMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleDatastoreAdminV1beta1ExportEntitiesMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleDatastoreAdminV1beta1ExportEntitiesMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `common`
      if (jsonObj.get("common") != null && !jsonObj.get("common").isJsonNull()) {
        GoogleDatastoreAdminV1beta1CommonMetadata.validateJsonElement(jsonObj.get("common"));
      }
      // validate the optional field `entityFilter`
      if (jsonObj.get("entityFilter") != null && !jsonObj.get("entityFilter").isJsonNull()) {
        GoogleDatastoreAdminV1beta1EntityFilter.validateJsonElement(jsonObj.get("entityFilter"));
      }
      if ((jsonObj.get("outputUrlPrefix") != null && !jsonObj.get("outputUrlPrefix").isJsonNull()) && !jsonObj.get("outputUrlPrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outputUrlPrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outputUrlPrefix").toString()));
      }
      // validate the optional field `progressBytes`
      if (jsonObj.get("progressBytes") != null && !jsonObj.get("progressBytes").isJsonNull()) {
        GoogleDatastoreAdminV1beta1Progress.validateJsonElement(jsonObj.get("progressBytes"));
      }
      // validate the optional field `progressEntities`
      if (jsonObj.get("progressEntities") != null && !jsonObj.get("progressEntities").isJsonNull()) {
        GoogleDatastoreAdminV1beta1Progress.validateJsonElement(jsonObj.get("progressEntities"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleDatastoreAdminV1beta1ExportEntitiesMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleDatastoreAdminV1beta1ExportEntitiesMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleDatastoreAdminV1beta1ExportEntitiesMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleDatastoreAdminV1beta1ExportEntitiesMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleDatastoreAdminV1beta1ExportEntitiesMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleDatastoreAdminV1beta1ExportEntitiesMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleDatastoreAdminV1beta1ExportEntitiesMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleDatastoreAdminV1beta1ExportEntitiesMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleDatastoreAdminV1beta1ExportEntitiesMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleDatastoreAdminV1beta1ExportEntitiesMetadata
   */
  public static GoogleDatastoreAdminV1beta1ExportEntitiesMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleDatastoreAdminV1beta1ExportEntitiesMetadata.class);
  }

  /**
   * Convert an instance of GoogleDatastoreAdminV1beta1ExportEntitiesMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

