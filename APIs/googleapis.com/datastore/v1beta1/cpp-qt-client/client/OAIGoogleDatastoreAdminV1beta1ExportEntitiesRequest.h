/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleDatastoreAdminV1beta1ExportEntitiesRequest.h
 *
 * The request for google.datastore.admin.v1beta1.DatastoreAdmin.ExportEntities.
 */

#ifndef OAIGoogleDatastoreAdminV1beta1ExportEntitiesRequest_H
#define OAIGoogleDatastoreAdminV1beta1ExportEntitiesRequest_H

#include <QJsonObject>

#include "OAIGoogleDatastoreAdminV1beta1EntityFilter.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleDatastoreAdminV1beta1EntityFilter;

class OAIGoogleDatastoreAdminV1beta1ExportEntitiesRequest : public OAIObject {
public:
    OAIGoogleDatastoreAdminV1beta1ExportEntitiesRequest();
    OAIGoogleDatastoreAdminV1beta1ExportEntitiesRequest(QString json);
    ~OAIGoogleDatastoreAdminV1beta1ExportEntitiesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleDatastoreAdminV1beta1EntityFilter getEntityFilter() const;
    void setEntityFilter(const OAIGoogleDatastoreAdminV1beta1EntityFilter &entity_filter);
    bool is_entity_filter_Set() const;
    bool is_entity_filter_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getOutputUrlPrefix() const;
    void setOutputUrlPrefix(const QString &output_url_prefix);
    bool is_output_url_prefix_Set() const;
    bool is_output_url_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleDatastoreAdminV1beta1EntityFilter m_entity_filter;
    bool m_entity_filter_isSet;
    bool m_entity_filter_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_output_url_prefix;
    bool m_output_url_prefix_isSet;
    bool m_output_url_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleDatastoreAdminV1beta1ExportEntitiesRequest)

#endif // OAIGoogleDatastoreAdminV1beta1ExportEntitiesRequest_H
