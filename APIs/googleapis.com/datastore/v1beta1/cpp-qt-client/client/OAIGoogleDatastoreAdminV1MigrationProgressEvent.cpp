/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDatastoreAdminV1MigrationProgressEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDatastoreAdminV1MigrationProgressEvent::OAIGoogleDatastoreAdminV1MigrationProgressEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDatastoreAdminV1MigrationProgressEvent::OAIGoogleDatastoreAdminV1MigrationProgressEvent() {
    this->initializeModel();
}

OAIGoogleDatastoreAdminV1MigrationProgressEvent::~OAIGoogleDatastoreAdminV1MigrationProgressEvent() {}

void OAIGoogleDatastoreAdminV1MigrationProgressEvent::initializeModel() {

    m_prepare_step_details_isSet = false;
    m_prepare_step_details_isValid = false;

    m_redirect_writes_step_details_isSet = false;
    m_redirect_writes_step_details_isValid = false;

    m_step_isSet = false;
    m_step_isValid = false;
}

void OAIGoogleDatastoreAdminV1MigrationProgressEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDatastoreAdminV1MigrationProgressEvent::fromJsonObject(QJsonObject json) {

    m_prepare_step_details_isValid = ::OpenAPI::fromJsonValue(m_prepare_step_details, json[QString("prepareStepDetails")]);
    m_prepare_step_details_isSet = !json[QString("prepareStepDetails")].isNull() && m_prepare_step_details_isValid;

    m_redirect_writes_step_details_isValid = ::OpenAPI::fromJsonValue(m_redirect_writes_step_details, json[QString("redirectWritesStepDetails")]);
    m_redirect_writes_step_details_isSet = !json[QString("redirectWritesStepDetails")].isNull() && m_redirect_writes_step_details_isValid;

    m_step_isValid = ::OpenAPI::fromJsonValue(m_step, json[QString("step")]);
    m_step_isSet = !json[QString("step")].isNull() && m_step_isValid;
}

QString OAIGoogleDatastoreAdminV1MigrationProgressEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDatastoreAdminV1MigrationProgressEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_prepare_step_details.isSet()) {
        obj.insert(QString("prepareStepDetails"), ::OpenAPI::toJsonValue(m_prepare_step_details));
    }
    if (m_redirect_writes_step_details.isSet()) {
        obj.insert(QString("redirectWritesStepDetails"), ::OpenAPI::toJsonValue(m_redirect_writes_step_details));
    }
    if (m_step_isSet) {
        obj.insert(QString("step"), ::OpenAPI::toJsonValue(m_step));
    }
    return obj;
}

OAIGoogleDatastoreAdminV1PrepareStepDetails OAIGoogleDatastoreAdminV1MigrationProgressEvent::getPrepareStepDetails() const {
    return m_prepare_step_details;
}
void OAIGoogleDatastoreAdminV1MigrationProgressEvent::setPrepareStepDetails(const OAIGoogleDatastoreAdminV1PrepareStepDetails &prepare_step_details) {
    m_prepare_step_details = prepare_step_details;
    m_prepare_step_details_isSet = true;
}

bool OAIGoogleDatastoreAdminV1MigrationProgressEvent::is_prepare_step_details_Set() const{
    return m_prepare_step_details_isSet;
}

bool OAIGoogleDatastoreAdminV1MigrationProgressEvent::is_prepare_step_details_Valid() const{
    return m_prepare_step_details_isValid;
}

OAIGoogleDatastoreAdminV1RedirectWritesStepDetails OAIGoogleDatastoreAdminV1MigrationProgressEvent::getRedirectWritesStepDetails() const {
    return m_redirect_writes_step_details;
}
void OAIGoogleDatastoreAdminV1MigrationProgressEvent::setRedirectWritesStepDetails(const OAIGoogleDatastoreAdminV1RedirectWritesStepDetails &redirect_writes_step_details) {
    m_redirect_writes_step_details = redirect_writes_step_details;
    m_redirect_writes_step_details_isSet = true;
}

bool OAIGoogleDatastoreAdminV1MigrationProgressEvent::is_redirect_writes_step_details_Set() const{
    return m_redirect_writes_step_details_isSet;
}

bool OAIGoogleDatastoreAdminV1MigrationProgressEvent::is_redirect_writes_step_details_Valid() const{
    return m_redirect_writes_step_details_isValid;
}

QString OAIGoogleDatastoreAdminV1MigrationProgressEvent::getStep() const {
    return m_step;
}
void OAIGoogleDatastoreAdminV1MigrationProgressEvent::setStep(const QString &step) {
    m_step = step;
    m_step_isSet = true;
}

bool OAIGoogleDatastoreAdminV1MigrationProgressEvent::is_step_Set() const{
    return m_step_isSet;
}

bool OAIGoogleDatastoreAdminV1MigrationProgressEvent::is_step_Valid() const{
    return m_step_isValid;
}

bool OAIGoogleDatastoreAdminV1MigrationProgressEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_prepare_step_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_writes_step_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_step_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDatastoreAdminV1MigrationProgressEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
