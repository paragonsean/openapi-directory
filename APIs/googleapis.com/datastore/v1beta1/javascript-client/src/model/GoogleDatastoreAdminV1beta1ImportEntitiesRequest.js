/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleDatastoreAdminV1beta1EntityFilter from './GoogleDatastoreAdminV1beta1EntityFilter';

/**
 * The GoogleDatastoreAdminV1beta1ImportEntitiesRequest model module.
 * @module model/GoogleDatastoreAdminV1beta1ImportEntitiesRequest
 * @version v1beta1
 */
class GoogleDatastoreAdminV1beta1ImportEntitiesRequest {
    /**
     * Constructs a new <code>GoogleDatastoreAdminV1beta1ImportEntitiesRequest</code>.
     * The request for google.datastore.admin.v1beta1.DatastoreAdmin.ImportEntities.
     * @alias module:model/GoogleDatastoreAdminV1beta1ImportEntitiesRequest
     */
    constructor() { 
        
        GoogleDatastoreAdminV1beta1ImportEntitiesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleDatastoreAdminV1beta1ImportEntitiesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleDatastoreAdminV1beta1ImportEntitiesRequest} obj Optional instance to populate.
     * @return {module:model/GoogleDatastoreAdminV1beta1ImportEntitiesRequest} The populated <code>GoogleDatastoreAdminV1beta1ImportEntitiesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleDatastoreAdminV1beta1ImportEntitiesRequest();

            if (data.hasOwnProperty('entityFilter')) {
                obj['entityFilter'] = GoogleDatastoreAdminV1beta1EntityFilter.constructFromObject(data['entityFilter']);
            }
            if (data.hasOwnProperty('inputUrl')) {
                obj['inputUrl'] = ApiClient.convertToType(data['inputUrl'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleDatastoreAdminV1beta1ImportEntitiesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleDatastoreAdminV1beta1ImportEntitiesRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `entityFilter`
        if (data['entityFilter']) { // data not null
          GoogleDatastoreAdminV1beta1EntityFilter.validateJSON(data['entityFilter']);
        }
        // ensure the json data is a string
        if (data['inputUrl'] && !(typeof data['inputUrl'] === 'string' || data['inputUrl'] instanceof String)) {
            throw new Error("Expected the field `inputUrl` to be a primitive type in the JSON string but got " + data['inputUrl']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleDatastoreAdminV1beta1EntityFilter} entityFilter
 */
GoogleDatastoreAdminV1beta1ImportEntitiesRequest.prototype['entityFilter'] = undefined;

/**
 * The full resource URL of the external storage location. Currently, only Google Cloud Storage is supported. So input_url should be of the form: `gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where `BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is an optional Cloud Storage namespace path (this is not a Cloud Datastore namespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written by the ExportEntities operation. For more information about Cloud Storage namespace paths, see [Object name considerations](https://cloud.google.com/storage/docs/naming#object-considerations). For more information, see google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url.
 * @member {String} inputUrl
 */
GoogleDatastoreAdminV1beta1ImportEntitiesRequest.prototype['inputUrl'] = undefined;

/**
 * Client-assigned labels.
 * @member {Object.<String, String>} labels
 */
GoogleDatastoreAdminV1beta1ImportEntitiesRequest.prototype['labels'] = undefined;






export default GoogleDatastoreAdminV1beta1ImportEntitiesRequest;

