# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RollbackRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database_id: str=None, transaction: str=None):
        """RollbackRequest - a model defined in OpenAPI

        :param database_id: The database_id of this RollbackRequest.
        :param transaction: The transaction of this RollbackRequest.
        """
        self.openapi_types = {
            'database_id': str,
            'transaction': str
        }

        self.attribute_map = {
            'database_id': 'databaseId',
            'transaction': 'transaction'
        }

        self._database_id = database_id
        self._transaction = transaction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RollbackRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RollbackRequest of this RollbackRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database_id(self):
        """Gets the database_id of this RollbackRequest.

        The ID of the database against which to make the request. '(default)' is not allowed; please use empty string '' to refer the default database.

        :return: The database_id of this RollbackRequest.
        :rtype: str
        """
        return self._database_id

    @database_id.setter
    def database_id(self, database_id):
        """Sets the database_id of this RollbackRequest.

        The ID of the database against which to make the request. '(default)' is not allowed; please use empty string '' to refer the default database.

        :param database_id: The database_id of this RollbackRequest.
        :type database_id: str
        """

        self._database_id = database_id

    @property
    def transaction(self):
        """Gets the transaction of this RollbackRequest.

        Required. The transaction identifier, returned by a call to Datastore.BeginTransaction.

        :return: The transaction of this RollbackRequest.
        :rtype: str
        """
        return self._transaction

    @transaction.setter
    def transaction(self, transaction):
        """Sets the transaction of this RollbackRequest.

        Required. The transaction identifier, returned by a call to Datastore.BeginTransaction.

        :param transaction: The transaction of this RollbackRequest.
        :type transaction: str
        """

        self._transaction = transaction
