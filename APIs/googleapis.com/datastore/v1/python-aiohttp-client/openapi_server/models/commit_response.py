# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mutation_result import MutationResult
from openapi_server import util


class CommitResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commit_time: str=None, index_updates: int=None, mutation_results: List[MutationResult]=None):
        """CommitResponse - a model defined in OpenAPI

        :param commit_time: The commit_time of this CommitResponse.
        :param index_updates: The index_updates of this CommitResponse.
        :param mutation_results: The mutation_results of this CommitResponse.
        """
        self.openapi_types = {
            'commit_time': str,
            'index_updates': int,
            'mutation_results': List[MutationResult]
        }

        self.attribute_map = {
            'commit_time': 'commitTime',
            'index_updates': 'indexUpdates',
            'mutation_results': 'mutationResults'
        }

        self._commit_time = commit_time
        self._index_updates = index_updates
        self._mutation_results = mutation_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommitResponse of this CommitResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commit_time(self):
        """Gets the commit_time of this CommitResponse.

        The transaction commit timestamp. Not set for non-transactional commits.

        :return: The commit_time of this CommitResponse.
        :rtype: str
        """
        return self._commit_time

    @commit_time.setter
    def commit_time(self, commit_time):
        """Sets the commit_time of this CommitResponse.

        The transaction commit timestamp. Not set for non-transactional commits.

        :param commit_time: The commit_time of this CommitResponse.
        :type commit_time: str
        """

        self._commit_time = commit_time

    @property
    def index_updates(self):
        """Gets the index_updates of this CommitResponse.

        The number of index entries updated during the commit, or zero if none were updated.

        :return: The index_updates of this CommitResponse.
        :rtype: int
        """
        return self._index_updates

    @index_updates.setter
    def index_updates(self, index_updates):
        """Sets the index_updates of this CommitResponse.

        The number of index entries updated during the commit, or zero if none were updated.

        :param index_updates: The index_updates of this CommitResponse.
        :type index_updates: int
        """

        self._index_updates = index_updates

    @property
    def mutation_results(self):
        """Gets the mutation_results of this CommitResponse.

        The result of performing the mutations. The i-th mutation result corresponds to the i-th mutation in the request.

        :return: The mutation_results of this CommitResponse.
        :rtype: List[MutationResult]
        """
        return self._mutation_results

    @mutation_results.setter
    def mutation_results(self, mutation_results):
        """Sets the mutation_results of this CommitResponse.

        The result of performing the mutations. The i-th mutation result corresponds to the i-th mutation in the request.

        :param mutation_results: The mutation_results of this CommitResponse.
        :type mutation_results: List[MutationResult]
        """

        self._mutation_results = mutation_results
