# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key import Key
from openapi_server.models.value import Value
from openapi_server import util


class Entity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: Key=None, properties: Dict[str, Value]=None):
        """Entity - a model defined in OpenAPI

        :param key: The key of this Entity.
        :param properties: The properties of this Entity.
        """
        self.openapi_types = {
            'key': Key,
            'properties': Dict[str, Value]
        }

        self.attribute_map = {
            'key': 'key',
            'properties': 'properties'
        }

        self._key = key
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Entity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Entity of this Entity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this Entity.


        :return: The key of this Entity.
        :rtype: Key
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Entity.


        :param key: The key of this Entity.
        :type key: Key
        """

        self._key = key

    @property
    def properties(self):
        """Gets the properties of this Entity.

        The entity's properties. The map's keys are property names. A property name matching regex `__.*__` is reserved. A reserved property name is forbidden in certain documented contexts. The map keys, represented as UTF-8, must not exceed 1,500 bytes and cannot be empty.

        :return: The properties of this Entity.
        :rtype: Dict[str, Value]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this Entity.

        The entity's properties. The map's keys are property names. A property name matching regex `__.*__` is reserved. A reserved property name is forbidden in certain documented contexts. The map keys, represented as UTF-8, must not exceed 1,500 bytes and cannot be empty.

        :param properties: The properties of this Entity.
        :type properties: Dict[str, Value]
        """

        self._properties = properties
