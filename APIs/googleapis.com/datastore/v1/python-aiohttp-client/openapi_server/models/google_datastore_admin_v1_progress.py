# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleDatastoreAdminV1Progress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, work_completed: str=None, work_estimated: str=None):
        """GoogleDatastoreAdminV1Progress - a model defined in OpenAPI

        :param work_completed: The work_completed of this GoogleDatastoreAdminV1Progress.
        :param work_estimated: The work_estimated of this GoogleDatastoreAdminV1Progress.
        """
        self.openapi_types = {
            'work_completed': str,
            'work_estimated': str
        }

        self.attribute_map = {
            'work_completed': 'workCompleted',
            'work_estimated': 'workEstimated'
        }

        self._work_completed = work_completed
        self._work_estimated = work_estimated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDatastoreAdminV1Progress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDatastoreAdminV1Progress of this GoogleDatastoreAdminV1Progress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def work_completed(self):
        """Gets the work_completed of this GoogleDatastoreAdminV1Progress.

        The amount of work that has been completed. Note that this may be greater than work_estimated.

        :return: The work_completed of this GoogleDatastoreAdminV1Progress.
        :rtype: str
        """
        return self._work_completed

    @work_completed.setter
    def work_completed(self, work_completed):
        """Sets the work_completed of this GoogleDatastoreAdminV1Progress.

        The amount of work that has been completed. Note that this may be greater than work_estimated.

        :param work_completed: The work_completed of this GoogleDatastoreAdminV1Progress.
        :type work_completed: str
        """

        self._work_completed = work_completed

    @property
    def work_estimated(self):
        """Gets the work_estimated of this GoogleDatastoreAdminV1Progress.

        An estimate of how much work needs to be performed. May be zero if the work estimate is unavailable.

        :return: The work_estimated of this GoogleDatastoreAdminV1Progress.
        :rtype: str
        """
        return self._work_estimated

    @work_estimated.setter
    def work_estimated(self, work_estimated):
        """Sets the work_estimated of this GoogleDatastoreAdminV1Progress.

        An estimate of how much work needs to be performed. May be zero if the work estimate is unavailable.

        :param work_estimated: The work_estimated of this GoogleDatastoreAdminV1Progress.
        :type work_estimated: str
        """

        self._work_estimated = work_estimated
