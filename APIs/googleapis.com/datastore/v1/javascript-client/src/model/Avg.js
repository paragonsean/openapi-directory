/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PropertyReference from './PropertyReference';

/**
 * The Avg model module.
 * @module model/Avg
 * @version v1
 */
class Avg {
    /**
     * Constructs a new <code>Avg</code>.
     * Average of the values of the requested property. * Only numeric values will be aggregated. All non-numeric values including &#x60;NULL&#x60; are skipped. * If the aggregated values contain &#x60;NaN&#x60;, returns &#x60;NaN&#x60;. Infinity math follows IEEE-754 standards. * If the aggregated value set is empty, returns &#x60;NULL&#x60;. * Always returns the result as a double.
     * @alias module:model/Avg
     */
    constructor() { 
        
        Avg.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Avg</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Avg} obj Optional instance to populate.
     * @return {module:model/Avg} The populated <code>Avg</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Avg();

            if (data.hasOwnProperty('property')) {
                obj['property'] = PropertyReference.constructFromObject(data['property']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Avg</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Avg</code>.
     */
    static validateJSON(data) {
        // validate the optional field `property`
        if (data['property']) { // data not null
          PropertyReference.validateJSON(data['property']);
        }

        return true;
    }


}



/**
 * @member {module:model/PropertyReference} property
 */
Avg.prototype['property'] = undefined;






export default Avg;

