/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleDatastoreAdminV1CommonMetadata model module.
 * @module model/GoogleDatastoreAdminV1CommonMetadata
 * @version v1
 */
class GoogleDatastoreAdminV1CommonMetadata {
    /**
     * Constructs a new <code>GoogleDatastoreAdminV1CommonMetadata</code>.
     * Metadata common to all Datastore Admin operations.
     * @alias module:model/GoogleDatastoreAdminV1CommonMetadata
     */
    constructor() { 
        
        GoogleDatastoreAdminV1CommonMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleDatastoreAdminV1CommonMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleDatastoreAdminV1CommonMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleDatastoreAdminV1CommonMetadata} The populated <code>GoogleDatastoreAdminV1CommonMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleDatastoreAdminV1CommonMetadata();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('operationType')) {
                obj['operationType'] = ApiClient.convertToType(data['operationType'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleDatastoreAdminV1CommonMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleDatastoreAdminV1CommonMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['operationType'] && !(typeof data['operationType'] === 'string' || data['operationType'] instanceof String)) {
            throw new Error("Expected the field `operationType` to be a primitive type in the JSON string but got " + data['operationType']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * The time the operation ended, either successfully or otherwise.
 * @member {String} endTime
 */
GoogleDatastoreAdminV1CommonMetadata.prototype['endTime'] = undefined;

/**
 * The client-assigned labels which were provided when the operation was created. May also include additional labels.
 * @member {Object.<String, String>} labels
 */
GoogleDatastoreAdminV1CommonMetadata.prototype['labels'] = undefined;

/**
 * The type of the operation. Can be used as a filter in ListOperationsRequest.
 * @member {module:model/GoogleDatastoreAdminV1CommonMetadata.OperationTypeEnum} operationType
 */
GoogleDatastoreAdminV1CommonMetadata.prototype['operationType'] = undefined;

/**
 * The time that work began on the operation.
 * @member {String} startTime
 */
GoogleDatastoreAdminV1CommonMetadata.prototype['startTime'] = undefined;

/**
 * The current state of the Operation.
 * @member {module:model/GoogleDatastoreAdminV1CommonMetadata.StateEnum} state
 */
GoogleDatastoreAdminV1CommonMetadata.prototype['state'] = undefined;





/**
 * Allowed values for the <code>operationType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleDatastoreAdminV1CommonMetadata['OperationTypeEnum'] = {

    /**
     * value: "OPERATION_TYPE_UNSPECIFIED"
     * @const
     */
    "OPERATION_TYPE_UNSPECIFIED": "OPERATION_TYPE_UNSPECIFIED",

    /**
     * value: "EXPORT_ENTITIES"
     * @const
     */
    "EXPORT_ENTITIES": "EXPORT_ENTITIES",

    /**
     * value: "IMPORT_ENTITIES"
     * @const
     */
    "IMPORT_ENTITIES": "IMPORT_ENTITIES",

    /**
     * value: "CREATE_INDEX"
     * @const
     */
    "CREATE_INDEX": "CREATE_INDEX",

    /**
     * value: "DELETE_INDEX"
     * @const
     */
    "DELETE_INDEX": "DELETE_INDEX"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleDatastoreAdminV1CommonMetadata['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "INITIALIZING"
     * @const
     */
    "INITIALIZING": "INITIALIZING",

    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING",

    /**
     * value: "CANCELLING"
     * @const
     */
    "CANCELLING": "CANCELLING",

    /**
     * value: "FINALIZING"
     * @const
     */
    "FINALIZING": "FINALIZING",

    /**
     * value: "SUCCESSFUL"
     * @const
     */
    "SUCCESSFUL": "SUCCESSFUL",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED"
};



export default GoogleDatastoreAdminV1CommonMetadata;

