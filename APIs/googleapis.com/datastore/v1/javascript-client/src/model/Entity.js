/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Key from './Key';
import Value from './Value';

/**
 * The Entity model module.
 * @module model/Entity
 * @version v1
 */
class Entity {
    /**
     * Constructs a new <code>Entity</code>.
     * A Datastore data object. Must not exceed 1 MiB - 4 bytes.
     * @alias module:model/Entity
     */
    constructor() { 
        
        Entity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Entity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Entity} obj Optional instance to populate.
     * @return {module:model/Entity} The populated <code>Entity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Entity();

            if (data.hasOwnProperty('key')) {
                obj['key'] = Key.constructFromObject(data['key']);
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': Value});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Entity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Entity</code>.
     */
    static validateJSON(data) {
        // validate the optional field `key`
        if (data['key']) { // data not null
          Key.validateJSON(data['key']);
        }

        return true;
    }


}



/**
 * @member {module:model/Key} key
 */
Entity.prototype['key'] = undefined;

/**
 * The entity's properties. The map's keys are property names. A property name matching regex `__.*__` is reserved. A reserved property name is forbidden in certain documented contexts. The map keys, represented as UTF-8, must not exceed 1,500 bytes and cannot be empty.
 * @member {Object.<String, module:model/Value>} properties
 */
Entity.prototype['properties'] = undefined;






export default Entity;

