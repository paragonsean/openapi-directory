/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Aggregation from './model/Aggregation';
import AggregationQuery from './model/AggregationQuery';
import AggregationResult from './model/AggregationResult';
import AggregationResultBatch from './model/AggregationResultBatch';
import AllocateIdsRequest from './model/AllocateIdsRequest';
import AllocateIdsResponse from './model/AllocateIdsResponse';
import ArrayValue from './model/ArrayValue';
import Avg from './model/Avg';
import BeginTransactionRequest from './model/BeginTransactionRequest';
import BeginTransactionResponse from './model/BeginTransactionResponse';
import CommitRequest from './model/CommitRequest';
import CommitResponse from './model/CommitResponse';
import CompositeFilter from './model/CompositeFilter';
import Count from './model/Count';
import Entity from './model/Entity';
import EntityResult from './model/EntityResult';
import Filter from './model/Filter';
import GoogleDatastoreAdminV1CommonMetadata from './model/GoogleDatastoreAdminV1CommonMetadata';
import GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata from './model/GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata';
import GoogleDatastoreAdminV1EntityFilter from './model/GoogleDatastoreAdminV1EntityFilter';
import GoogleDatastoreAdminV1ExportEntitiesMetadata from './model/GoogleDatastoreAdminV1ExportEntitiesMetadata';
import GoogleDatastoreAdminV1ExportEntitiesRequest from './model/GoogleDatastoreAdminV1ExportEntitiesRequest';
import GoogleDatastoreAdminV1ExportEntitiesResponse from './model/GoogleDatastoreAdminV1ExportEntitiesResponse';
import GoogleDatastoreAdminV1ImportEntitiesMetadata from './model/GoogleDatastoreAdminV1ImportEntitiesMetadata';
import GoogleDatastoreAdminV1ImportEntitiesRequest from './model/GoogleDatastoreAdminV1ImportEntitiesRequest';
import GoogleDatastoreAdminV1Index from './model/GoogleDatastoreAdminV1Index';
import GoogleDatastoreAdminV1IndexOperationMetadata from './model/GoogleDatastoreAdminV1IndexOperationMetadata';
import GoogleDatastoreAdminV1IndexedProperty from './model/GoogleDatastoreAdminV1IndexedProperty';
import GoogleDatastoreAdminV1ListIndexesResponse from './model/GoogleDatastoreAdminV1ListIndexesResponse';
import GoogleDatastoreAdminV1MigrationProgressEvent from './model/GoogleDatastoreAdminV1MigrationProgressEvent';
import GoogleDatastoreAdminV1MigrationStateEvent from './model/GoogleDatastoreAdminV1MigrationStateEvent';
import GoogleDatastoreAdminV1PrepareStepDetails from './model/GoogleDatastoreAdminV1PrepareStepDetails';
import GoogleDatastoreAdminV1Progress from './model/GoogleDatastoreAdminV1Progress';
import GoogleDatastoreAdminV1RedirectWritesStepDetails from './model/GoogleDatastoreAdminV1RedirectWritesStepDetails';
import GoogleDatastoreAdminV1beta1CommonMetadata from './model/GoogleDatastoreAdminV1beta1CommonMetadata';
import GoogleDatastoreAdminV1beta1EntityFilter from './model/GoogleDatastoreAdminV1beta1EntityFilter';
import GoogleDatastoreAdminV1beta1ExportEntitiesMetadata from './model/GoogleDatastoreAdminV1beta1ExportEntitiesMetadata';
import GoogleDatastoreAdminV1beta1ExportEntitiesResponse from './model/GoogleDatastoreAdminV1beta1ExportEntitiesResponse';
import GoogleDatastoreAdminV1beta1ImportEntitiesMetadata from './model/GoogleDatastoreAdminV1beta1ImportEntitiesMetadata';
import GoogleDatastoreAdminV1beta1Progress from './model/GoogleDatastoreAdminV1beta1Progress';
import GoogleLongrunningListOperationsResponse from './model/GoogleLongrunningListOperationsResponse';
import GoogleLongrunningOperation from './model/GoogleLongrunningOperation';
import GqlQuery from './model/GqlQuery';
import GqlQueryParameter from './model/GqlQueryParameter';
import Key from './model/Key';
import KindExpression from './model/KindExpression';
import LatLng from './model/LatLng';
import LookupRequest from './model/LookupRequest';
import LookupResponse from './model/LookupResponse';
import Mutation from './model/Mutation';
import MutationResult from './model/MutationResult';
import PartitionId from './model/PartitionId';
import PathElement from './model/PathElement';
import Projection from './model/Projection';
import PropertyFilter from './model/PropertyFilter';
import PropertyOrder from './model/PropertyOrder';
import PropertyReference from './model/PropertyReference';
import Query from './model/Query';
import QueryResultBatch from './model/QueryResultBatch';
import ReadOnly from './model/ReadOnly';
import ReadOptions from './model/ReadOptions';
import ReadWrite from './model/ReadWrite';
import ReserveIdsRequest from './model/ReserveIdsRequest';
import RollbackRequest from './model/RollbackRequest';
import RunAggregationQueryRequest from './model/RunAggregationQueryRequest';
import RunAggregationQueryResponse from './model/RunAggregationQueryResponse';
import RunQueryRequest from './model/RunQueryRequest';
import RunQueryResponse from './model/RunQueryResponse';
import Status from './model/Status';
import Sum from './model/Sum';
import TransactionOptions from './model/TransactionOptions';
import Value from './model/Value';
import ProjectsApi from './api/ProjectsApi';


/**
* Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudDatastoreApi = require('index'); // See note below*.
* var xxxSvc = new CloudDatastoreApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudDatastoreApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudDatastoreApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudDatastoreApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Aggregation model constructor.
     * @property {module:model/Aggregation}
     */
    Aggregation,

    /**
     * The AggregationQuery model constructor.
     * @property {module:model/AggregationQuery}
     */
    AggregationQuery,

    /**
     * The AggregationResult model constructor.
     * @property {module:model/AggregationResult}
     */
    AggregationResult,

    /**
     * The AggregationResultBatch model constructor.
     * @property {module:model/AggregationResultBatch}
     */
    AggregationResultBatch,

    /**
     * The AllocateIdsRequest model constructor.
     * @property {module:model/AllocateIdsRequest}
     */
    AllocateIdsRequest,

    /**
     * The AllocateIdsResponse model constructor.
     * @property {module:model/AllocateIdsResponse}
     */
    AllocateIdsResponse,

    /**
     * The ArrayValue model constructor.
     * @property {module:model/ArrayValue}
     */
    ArrayValue,

    /**
     * The Avg model constructor.
     * @property {module:model/Avg}
     */
    Avg,

    /**
     * The BeginTransactionRequest model constructor.
     * @property {module:model/BeginTransactionRequest}
     */
    BeginTransactionRequest,

    /**
     * The BeginTransactionResponse model constructor.
     * @property {module:model/BeginTransactionResponse}
     */
    BeginTransactionResponse,

    /**
     * The CommitRequest model constructor.
     * @property {module:model/CommitRequest}
     */
    CommitRequest,

    /**
     * The CommitResponse model constructor.
     * @property {module:model/CommitResponse}
     */
    CommitResponse,

    /**
     * The CompositeFilter model constructor.
     * @property {module:model/CompositeFilter}
     */
    CompositeFilter,

    /**
     * The Count model constructor.
     * @property {module:model/Count}
     */
    Count,

    /**
     * The Entity model constructor.
     * @property {module:model/Entity}
     */
    Entity,

    /**
     * The EntityResult model constructor.
     * @property {module:model/EntityResult}
     */
    EntityResult,

    /**
     * The Filter model constructor.
     * @property {module:model/Filter}
     */
    Filter,

    /**
     * The GoogleDatastoreAdminV1CommonMetadata model constructor.
     * @property {module:model/GoogleDatastoreAdminV1CommonMetadata}
     */
    GoogleDatastoreAdminV1CommonMetadata,

    /**
     * The GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata model constructor.
     * @property {module:model/GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata}
     */
    GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata,

    /**
     * The GoogleDatastoreAdminV1EntityFilter model constructor.
     * @property {module:model/GoogleDatastoreAdminV1EntityFilter}
     */
    GoogleDatastoreAdminV1EntityFilter,

    /**
     * The GoogleDatastoreAdminV1ExportEntitiesMetadata model constructor.
     * @property {module:model/GoogleDatastoreAdminV1ExportEntitiesMetadata}
     */
    GoogleDatastoreAdminV1ExportEntitiesMetadata,

    /**
     * The GoogleDatastoreAdminV1ExportEntitiesRequest model constructor.
     * @property {module:model/GoogleDatastoreAdminV1ExportEntitiesRequest}
     */
    GoogleDatastoreAdminV1ExportEntitiesRequest,

    /**
     * The GoogleDatastoreAdminV1ExportEntitiesResponse model constructor.
     * @property {module:model/GoogleDatastoreAdminV1ExportEntitiesResponse}
     */
    GoogleDatastoreAdminV1ExportEntitiesResponse,

    /**
     * The GoogleDatastoreAdminV1ImportEntitiesMetadata model constructor.
     * @property {module:model/GoogleDatastoreAdminV1ImportEntitiesMetadata}
     */
    GoogleDatastoreAdminV1ImportEntitiesMetadata,

    /**
     * The GoogleDatastoreAdminV1ImportEntitiesRequest model constructor.
     * @property {module:model/GoogleDatastoreAdminV1ImportEntitiesRequest}
     */
    GoogleDatastoreAdminV1ImportEntitiesRequest,

    /**
     * The GoogleDatastoreAdminV1Index model constructor.
     * @property {module:model/GoogleDatastoreAdminV1Index}
     */
    GoogleDatastoreAdminV1Index,

    /**
     * The GoogleDatastoreAdminV1IndexOperationMetadata model constructor.
     * @property {module:model/GoogleDatastoreAdminV1IndexOperationMetadata}
     */
    GoogleDatastoreAdminV1IndexOperationMetadata,

    /**
     * The GoogleDatastoreAdminV1IndexedProperty model constructor.
     * @property {module:model/GoogleDatastoreAdminV1IndexedProperty}
     */
    GoogleDatastoreAdminV1IndexedProperty,

    /**
     * The GoogleDatastoreAdminV1ListIndexesResponse model constructor.
     * @property {module:model/GoogleDatastoreAdminV1ListIndexesResponse}
     */
    GoogleDatastoreAdminV1ListIndexesResponse,

    /**
     * The GoogleDatastoreAdminV1MigrationProgressEvent model constructor.
     * @property {module:model/GoogleDatastoreAdminV1MigrationProgressEvent}
     */
    GoogleDatastoreAdminV1MigrationProgressEvent,

    /**
     * The GoogleDatastoreAdminV1MigrationStateEvent model constructor.
     * @property {module:model/GoogleDatastoreAdminV1MigrationStateEvent}
     */
    GoogleDatastoreAdminV1MigrationStateEvent,

    /**
     * The GoogleDatastoreAdminV1PrepareStepDetails model constructor.
     * @property {module:model/GoogleDatastoreAdminV1PrepareStepDetails}
     */
    GoogleDatastoreAdminV1PrepareStepDetails,

    /**
     * The GoogleDatastoreAdminV1Progress model constructor.
     * @property {module:model/GoogleDatastoreAdminV1Progress}
     */
    GoogleDatastoreAdminV1Progress,

    /**
     * The GoogleDatastoreAdminV1RedirectWritesStepDetails model constructor.
     * @property {module:model/GoogleDatastoreAdminV1RedirectWritesStepDetails}
     */
    GoogleDatastoreAdminV1RedirectWritesStepDetails,

    /**
     * The GoogleDatastoreAdminV1beta1CommonMetadata model constructor.
     * @property {module:model/GoogleDatastoreAdminV1beta1CommonMetadata}
     */
    GoogleDatastoreAdminV1beta1CommonMetadata,

    /**
     * The GoogleDatastoreAdminV1beta1EntityFilter model constructor.
     * @property {module:model/GoogleDatastoreAdminV1beta1EntityFilter}
     */
    GoogleDatastoreAdminV1beta1EntityFilter,

    /**
     * The GoogleDatastoreAdminV1beta1ExportEntitiesMetadata model constructor.
     * @property {module:model/GoogleDatastoreAdminV1beta1ExportEntitiesMetadata}
     */
    GoogleDatastoreAdminV1beta1ExportEntitiesMetadata,

    /**
     * The GoogleDatastoreAdminV1beta1ExportEntitiesResponse model constructor.
     * @property {module:model/GoogleDatastoreAdminV1beta1ExportEntitiesResponse}
     */
    GoogleDatastoreAdminV1beta1ExportEntitiesResponse,

    /**
     * The GoogleDatastoreAdminV1beta1ImportEntitiesMetadata model constructor.
     * @property {module:model/GoogleDatastoreAdminV1beta1ImportEntitiesMetadata}
     */
    GoogleDatastoreAdminV1beta1ImportEntitiesMetadata,

    /**
     * The GoogleDatastoreAdminV1beta1Progress model constructor.
     * @property {module:model/GoogleDatastoreAdminV1beta1Progress}
     */
    GoogleDatastoreAdminV1beta1Progress,

    /**
     * The GoogleLongrunningListOperationsResponse model constructor.
     * @property {module:model/GoogleLongrunningListOperationsResponse}
     */
    GoogleLongrunningListOperationsResponse,

    /**
     * The GoogleLongrunningOperation model constructor.
     * @property {module:model/GoogleLongrunningOperation}
     */
    GoogleLongrunningOperation,

    /**
     * The GqlQuery model constructor.
     * @property {module:model/GqlQuery}
     */
    GqlQuery,

    /**
     * The GqlQueryParameter model constructor.
     * @property {module:model/GqlQueryParameter}
     */
    GqlQueryParameter,

    /**
     * The Key model constructor.
     * @property {module:model/Key}
     */
    Key,

    /**
     * The KindExpression model constructor.
     * @property {module:model/KindExpression}
     */
    KindExpression,

    /**
     * The LatLng model constructor.
     * @property {module:model/LatLng}
     */
    LatLng,

    /**
     * The LookupRequest model constructor.
     * @property {module:model/LookupRequest}
     */
    LookupRequest,

    /**
     * The LookupResponse model constructor.
     * @property {module:model/LookupResponse}
     */
    LookupResponse,

    /**
     * The Mutation model constructor.
     * @property {module:model/Mutation}
     */
    Mutation,

    /**
     * The MutationResult model constructor.
     * @property {module:model/MutationResult}
     */
    MutationResult,

    /**
     * The PartitionId model constructor.
     * @property {module:model/PartitionId}
     */
    PartitionId,

    /**
     * The PathElement model constructor.
     * @property {module:model/PathElement}
     */
    PathElement,

    /**
     * The Projection model constructor.
     * @property {module:model/Projection}
     */
    Projection,

    /**
     * The PropertyFilter model constructor.
     * @property {module:model/PropertyFilter}
     */
    PropertyFilter,

    /**
     * The PropertyOrder model constructor.
     * @property {module:model/PropertyOrder}
     */
    PropertyOrder,

    /**
     * The PropertyReference model constructor.
     * @property {module:model/PropertyReference}
     */
    PropertyReference,

    /**
     * The Query model constructor.
     * @property {module:model/Query}
     */
    Query,

    /**
     * The QueryResultBatch model constructor.
     * @property {module:model/QueryResultBatch}
     */
    QueryResultBatch,

    /**
     * The ReadOnly model constructor.
     * @property {module:model/ReadOnly}
     */
    ReadOnly,

    /**
     * The ReadOptions model constructor.
     * @property {module:model/ReadOptions}
     */
    ReadOptions,

    /**
     * The ReadWrite model constructor.
     * @property {module:model/ReadWrite}
     */
    ReadWrite,

    /**
     * The ReserveIdsRequest model constructor.
     * @property {module:model/ReserveIdsRequest}
     */
    ReserveIdsRequest,

    /**
     * The RollbackRequest model constructor.
     * @property {module:model/RollbackRequest}
     */
    RollbackRequest,

    /**
     * The RunAggregationQueryRequest model constructor.
     * @property {module:model/RunAggregationQueryRequest}
     */
    RunAggregationQueryRequest,

    /**
     * The RunAggregationQueryResponse model constructor.
     * @property {module:model/RunAggregationQueryResponse}
     */
    RunAggregationQueryResponse,

    /**
     * The RunQueryRequest model constructor.
     * @property {module:model/RunQueryRequest}
     */
    RunQueryRequest,

    /**
     * The RunQueryResponse model constructor.
     * @property {module:model/RunQueryResponse}
     */
    RunQueryResponse,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The Sum model constructor.
     * @property {module:model/Sum}
     */
    Sum,

    /**
     * The TransactionOptions model constructor.
     * @property {module:model/TransactionOptions}
     */
    TransactionOptions,

    /**
     * The Value model constructor.
     * @property {module:model/Value}
     */
    Value,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
