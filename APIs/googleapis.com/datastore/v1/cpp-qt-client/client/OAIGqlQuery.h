/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGqlQuery.h
 *
 * A [GQL query](https://cloud.google.com/datastore/docs/apis/gql/gql_reference).
 */

#ifndef OAIGqlQuery_H
#define OAIGqlQuery_H

#include <QJsonObject>

#include "OAIGqlQueryParameter.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGqlQueryParameter;

class OAIGqlQuery : public OAIObject {
public:
    OAIGqlQuery();
    OAIGqlQuery(QString json);
    ~OAIGqlQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowLiterals() const;
    void setAllowLiterals(const bool &allow_literals);
    bool is_allow_literals_Set() const;
    bool is_allow_literals_Valid() const;

    QMap<QString, OAIGqlQueryParameter> getNamedBindings() const;
    void setNamedBindings(const QMap<QString, OAIGqlQueryParameter> &named_bindings);
    bool is_named_bindings_Set() const;
    bool is_named_bindings_Valid() const;

    QList<OAIGqlQueryParameter> getPositionalBindings() const;
    void setPositionalBindings(const QList<OAIGqlQueryParameter> &positional_bindings);
    bool is_positional_bindings_Set() const;
    bool is_positional_bindings_Valid() const;

    QString getQueryString() const;
    void setQueryString(const QString &query_string);
    bool is_query_string_Set() const;
    bool is_query_string_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_literals;
    bool m_allow_literals_isSet;
    bool m_allow_literals_isValid;

    QMap<QString, OAIGqlQueryParameter> m_named_bindings;
    bool m_named_bindings_isSet;
    bool m_named_bindings_isValid;

    QList<OAIGqlQueryParameter> m_positional_bindings;
    bool m_positional_bindings_isSet;
    bool m_positional_bindings_isValid;

    QString m_query_string;
    bool m_query_string_isSet;
    bool m_query_string_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGqlQuery)

#endif // OAIGqlQuery_H
