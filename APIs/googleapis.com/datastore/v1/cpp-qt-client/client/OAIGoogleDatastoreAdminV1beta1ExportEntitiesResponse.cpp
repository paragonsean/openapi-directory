/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse() {
    this->initializeModel();
}

OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::~OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse() {}

void OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::initializeModel() {

    m_output_url_isSet = false;
    m_output_url_isValid = false;
}

void OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::fromJsonObject(QJsonObject json) {

    m_output_url_isValid = ::OpenAPI::fromJsonValue(m_output_url, json[QString("outputUrl")]);
    m_output_url_isSet = !json[QString("outputUrl")].isNull() && m_output_url_isValid;
}

QString OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_output_url_isSet) {
        obj.insert(QString("outputUrl"), ::OpenAPI::toJsonValue(m_output_url));
    }
    return obj;
}

QString OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::getOutputUrl() const {
    return m_output_url;
}
void OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::setOutputUrl(const QString &output_url) {
    m_output_url = output_url;
    m_output_url_isSet = true;
}

bool OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::is_output_url_Set() const{
    return m_output_url_isSet;
}

bool OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::is_output_url_Valid() const{
    return m_output_url_isValid;
}

bool OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDatastoreAdminV1beta1ExportEntitiesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
