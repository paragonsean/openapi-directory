/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAggregationResult.h
 *
 * The result of a single bucket from a Datastore aggregation query. The keys of &#x60;aggregate_properties&#x60; are the same for all results in an aggregation query, unlike entity queries which can have different fields present for each result.
 */

#ifndef OAIAggregationResult_H
#define OAIAggregationResult_H

#include <QJsonObject>

#include "OAIValue.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIValue;

class OAIAggregationResult : public OAIObject {
public:
    OAIAggregationResult();
    OAIAggregationResult(QString json);
    ~OAIAggregationResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAIValue> getAggregateProperties() const;
    void setAggregateProperties(const QMap<QString, OAIValue> &aggregate_properties);
    bool is_aggregate_properties_Set() const;
    bool is_aggregate_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAIValue> m_aggregate_properties;
    bool m_aggregate_properties_isSet;
    bool m_aggregate_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAggregationResult)

#endif // OAIAggregationResult_H
