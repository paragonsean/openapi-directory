/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntity.h
 *
 * A Datastore data object. Must not exceed 1 MiB - 4 bytes.
 */

#ifndef OAIEntity_H
#define OAIEntity_H

#include <QJsonObject>

#include "OAIKey.h"
#include "OAIValue.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKey;
class OAIValue;

class OAIEntity : public OAIObject {
public:
    OAIEntity();
    OAIEntity(QString json);
    ~OAIEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIKey getKey() const;
    void setKey(const OAIKey &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QMap<QString, OAIValue> getProperties() const;
    void setProperties(const QMap<QString, OAIValue> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIKey m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QMap<QString, OAIValue> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntity)

#endif // OAIEntity_H
