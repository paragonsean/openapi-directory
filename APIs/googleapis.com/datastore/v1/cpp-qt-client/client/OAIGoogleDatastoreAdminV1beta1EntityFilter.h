/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleDatastoreAdminV1beta1EntityFilter.h
 *
 * Identifies a subset of entities in a project. This is specified as combinations of kinds and namespaces (either or both of which may be all, as described in the following examples). Example usage: Entire project: kinds&#x3D;[], namespace_ids&#x3D;[] Kinds Foo and Bar in all namespaces: kinds&#x3D;[&#39;Foo&#39;, &#39;Bar&#39;], namespace_ids&#x3D;[] Kinds Foo and Bar only in the default namespace: kinds&#x3D;[&#39;Foo&#39;, &#39;Bar&#39;], namespace_ids&#x3D;[&#39;&#39;] Kinds Foo and Bar in both the default and Baz namespaces: kinds&#x3D;[&#39;Foo&#39;, &#39;Bar&#39;], namespace_ids&#x3D;[&#39;&#39;, &#39;Baz&#39;] The entire Baz namespace: kinds&#x3D;[], namespace_ids&#x3D;[&#39;Baz&#39;]
 */

#ifndef OAIGoogleDatastoreAdminV1beta1EntityFilter_H
#define OAIGoogleDatastoreAdminV1beta1EntityFilter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleDatastoreAdminV1beta1EntityFilter : public OAIObject {
public:
    OAIGoogleDatastoreAdminV1beta1EntityFilter();
    OAIGoogleDatastoreAdminV1beta1EntityFilter(QString json);
    ~OAIGoogleDatastoreAdminV1beta1EntityFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getKinds() const;
    void setKinds(const QList<QString> &kinds);
    bool is_kinds_Set() const;
    bool is_kinds_Valid() const;

    QList<QString> getNamespaceIds() const;
    void setNamespaceIds(const QList<QString> &namespace_ids);
    bool is_namespace_ids_Set() const;
    bool is_namespace_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_kinds;
    bool m_kinds_isSet;
    bool m_kinds_isValid;

    QList<QString> m_namespace_ids;
    bool m_namespace_ids_isSet;
    bool m_namespace_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleDatastoreAdminV1beta1EntityFilter)

#endif // OAIGoogleDatastoreAdminV1beta1EntityFilter_H
