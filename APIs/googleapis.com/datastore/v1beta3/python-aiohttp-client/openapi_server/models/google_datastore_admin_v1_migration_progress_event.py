# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_datastore_admin_v1_prepare_step_details import GoogleDatastoreAdminV1PrepareStepDetails
from openapi_server.models.google_datastore_admin_v1_redirect_writes_step_details import GoogleDatastoreAdminV1RedirectWritesStepDetails
from openapi_server import util


class GoogleDatastoreAdminV1MigrationProgressEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prepare_step_details: GoogleDatastoreAdminV1PrepareStepDetails=None, redirect_writes_step_details: GoogleDatastoreAdminV1RedirectWritesStepDetails=None, step: str=None):
        """GoogleDatastoreAdminV1MigrationProgressEvent - a model defined in OpenAPI

        :param prepare_step_details: The prepare_step_details of this GoogleDatastoreAdminV1MigrationProgressEvent.
        :param redirect_writes_step_details: The redirect_writes_step_details of this GoogleDatastoreAdminV1MigrationProgressEvent.
        :param step: The step of this GoogleDatastoreAdminV1MigrationProgressEvent.
        """
        self.openapi_types = {
            'prepare_step_details': GoogleDatastoreAdminV1PrepareStepDetails,
            'redirect_writes_step_details': GoogleDatastoreAdminV1RedirectWritesStepDetails,
            'step': str
        }

        self.attribute_map = {
            'prepare_step_details': 'prepareStepDetails',
            'redirect_writes_step_details': 'redirectWritesStepDetails',
            'step': 'step'
        }

        self._prepare_step_details = prepare_step_details
        self._redirect_writes_step_details = redirect_writes_step_details
        self._step = step

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDatastoreAdminV1MigrationProgressEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDatastoreAdminV1MigrationProgressEvent of this GoogleDatastoreAdminV1MigrationProgressEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prepare_step_details(self):
        """Gets the prepare_step_details of this GoogleDatastoreAdminV1MigrationProgressEvent.


        :return: The prepare_step_details of this GoogleDatastoreAdminV1MigrationProgressEvent.
        :rtype: GoogleDatastoreAdminV1PrepareStepDetails
        """
        return self._prepare_step_details

    @prepare_step_details.setter
    def prepare_step_details(self, prepare_step_details):
        """Sets the prepare_step_details of this GoogleDatastoreAdminV1MigrationProgressEvent.


        :param prepare_step_details: The prepare_step_details of this GoogleDatastoreAdminV1MigrationProgressEvent.
        :type prepare_step_details: GoogleDatastoreAdminV1PrepareStepDetails
        """

        self._prepare_step_details = prepare_step_details

    @property
    def redirect_writes_step_details(self):
        """Gets the redirect_writes_step_details of this GoogleDatastoreAdminV1MigrationProgressEvent.


        :return: The redirect_writes_step_details of this GoogleDatastoreAdminV1MigrationProgressEvent.
        :rtype: GoogleDatastoreAdminV1RedirectWritesStepDetails
        """
        return self._redirect_writes_step_details

    @redirect_writes_step_details.setter
    def redirect_writes_step_details(self, redirect_writes_step_details):
        """Sets the redirect_writes_step_details of this GoogleDatastoreAdminV1MigrationProgressEvent.


        :param redirect_writes_step_details: The redirect_writes_step_details of this GoogleDatastoreAdminV1MigrationProgressEvent.
        :type redirect_writes_step_details: GoogleDatastoreAdminV1RedirectWritesStepDetails
        """

        self._redirect_writes_step_details = redirect_writes_step_details

    @property
    def step(self):
        """Gets the step of this GoogleDatastoreAdminV1MigrationProgressEvent.

        The step that is starting. An event with step set to `START` indicates that the migration has been reverted back to the initial pre-migration state.

        :return: The step of this GoogleDatastoreAdminV1MigrationProgressEvent.
        :rtype: str
        """
        return self._step

    @step.setter
    def step(self, step):
        """Sets the step of this GoogleDatastoreAdminV1MigrationProgressEvent.

        The step that is starting. An event with step set to `START` indicates that the migration has been reverted back to the initial pre-migration state.

        :param step: The step of this GoogleDatastoreAdminV1MigrationProgressEvent.
        :type step: str
        """
        allowed_values = ["MIGRATION_STEP_UNSPECIFIED", "PREPARE", "START", "APPLY_WRITES_SYNCHRONOUSLY", "COPY_AND_VERIFY", "REDIRECT_EVENTUALLY_CONSISTENT_READS", "REDIRECT_STRONGLY_CONSISTENT_READS", "REDIRECT_WRITES"]  # noqa: E501
        if step not in allowed_values:
            raise ValueError(
                "Invalid value for `step` ({0}), must be one of {1}"
                .format(step, allowed_values)
            )

        self._step = step
