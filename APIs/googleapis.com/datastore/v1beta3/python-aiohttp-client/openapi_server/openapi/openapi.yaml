openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "Accesses the schemaless NoSQL database to provide fully managed, robust,\
    \ scalable storage for your application. "
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Datastore API
  version: v1beta3
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://datastore.googleapis.com/$discovery/rest?version=v1beta3
    version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: datastore
externalDocs:
  url: https://cloud.google.com/datastore/
servers:
- url: https://datastore.googleapis.com/
tags:
- name: projects
paths:
  /v1beta3/projects/{projectId}:allocateIds:
    post:
      description: "Allocates IDs for the given keys, which is useful for referencing\
        \ an entity before it is inserted."
      operationId: datastore_projects_allocate_ids
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The ID of the project against which to make the request.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllocateIdsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocateIdsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta3/projects/{projectId}:beginTransaction:
    post:
      description: Begins a new transaction.
      operationId: datastore_projects_begin_transaction
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The ID of the project against which to make the request.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginTransactionRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginTransactionResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta3/projects/{projectId}:commit:
    post:
      description: "Commits a transaction, optionally creating, deleting or modifying\
        \ some entities."
      operationId: datastore_projects_commit
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The ID of the project against which to make the request.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta3/projects/{projectId}:lookup:
    post:
      description: Looks up entities by key.
      operationId: datastore_projects_lookup
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The ID of the project against which to make the request.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta3/projects/{projectId}:reserveIds:
    post:
      description: Prevents the supplied keys' IDs from being auto-allocated by Cloud
        Datastore.
      operationId: datastore_projects_reserve_ids
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The ID of the project against which to make the request.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReserveIdsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReserveIdsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta3/projects/{projectId}:rollback:
    post:
      description: Rolls back a transaction.
      operationId: datastore_projects_rollback
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The ID of the project against which to make the request.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollbackResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta3/projects/{projectId}:runAggregationQuery:
    post:
      description: Runs an aggregation query.
      operationId: datastore_projects_run_aggregation_query
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The ID of the project against which to make the request.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunAggregationQueryRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunAggregationQueryResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta3/projects/{projectId}:runQuery:
    post:
      description: Queries for entities.
      operationId: datastore_projects_run_query
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The ID of the project against which to make the request.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunQueryRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunQueryResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/datastore
        Oauth2c:
        - https://www.googleapis.com/auth/datastore
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Aggregation:
      description: Defines an aggregation that produces a single result.
      example:
        avg:
          property:
            name: name
        count:
          upTo: upTo
        alias: alias
        sum:
          property:
            name: name
      properties:
        alias:
          description: "Optional. Optional name of the property to store the result\
            \ of the aggregation. If not provided, Datastore will pick a default name\
            \ following the format `property_`. For example: ``` AGGREGATE COUNT_UP_TO(1)\
            \ AS count_up_to_1, COUNT_UP_TO(2), COUNT_UP_TO(3) AS count_up_to_3, COUNT(*)\
            \ OVER ( ... ); ``` becomes: ``` AGGREGATE COUNT_UP_TO(1) AS count_up_to_1,\
            \ COUNT_UP_TO(2) AS property_1, COUNT_UP_TO(3) AS count_up_to_3, COUNT(*)\
            \ AS property_2 OVER ( ... ); ``` Requires: * Must be unique across all\
            \ aggregation aliases. * Conform to entity property name limitations."
          title: alias
          type: string
        avg:
          $ref: '#/components/schemas/Avg'
        count:
          $ref: '#/components/schemas/Count'
        sum:
          $ref: '#/components/schemas/Sum'
      title: Aggregation
      type: object
    AggregationQuery:
      description: Datastore query for running an aggregation over a Query.
      example:
        nestedQuery:
          filter:
            compositeFilter:
              op: OPERATOR_UNSPECIFIED
              filters:
              - null
              - null
            propertyFilter:
              op: OPERATOR_UNSPECIFIED
              property:
                name: name
              value:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          offset: 6
          kind:
          - name: name
          - name: name
          limit: 0
          endCursor: endCursor
          projection:
          - property:
              name: name
          - property:
              name: name
          startCursor: startCursor
          distinctOn:
          - name: name
          - name: name
          order:
          - property:
              name: name
            direction: DIRECTION_UNSPECIFIED
          - property:
              name: name
            direction: DIRECTION_UNSPECIFIED
        aggregations:
        - avg:
            property:
              name: name
          count:
            upTo: upTo
          alias: alias
          sum:
            property:
              name: name
        - avg:
            property:
              name: name
          count:
            upTo: upTo
          alias: alias
          sum:
            property:
              name: name
      properties:
        aggregations:
          description: "Optional. Series of aggregations to apply over the results\
            \ of the `nested_query`. Requires: * A minimum of one and maximum of five\
            \ aggregations per query."
          items:
            $ref: '#/components/schemas/Aggregation'
          title: aggregations
          type: array
        nestedQuery:
          $ref: '#/components/schemas/Query'
      title: AggregationQuery
      type: object
    AggregationResult:
      description: "The result of a single bucket from a Datastore aggregation query.\
        \ The keys of `aggregate_properties` are the same for all results in an aggregation\
        \ query, unlike entity queries which can have different fields present for\
        \ each result."
      example:
        aggregateProperties:
          key:
            keyValue:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            timestampValue: timestampValue
            geoPointValue:
              latitude: 6.027456183070403
              longitude: 1.4658129805029452
            arrayValue:
              values:
              - null
              - null
            doubleValue: 0.8008281904610115
            nullValue: NULL_VALUE
            stringValue: stringValue
            entityValue: null
            meaning: 5
            booleanValue: true
            integerValue: integerValue
            excludeFromIndexes: true
            blobValue: blobValue
      properties:
        aggregateProperties:
          additionalProperties:
            $ref: '#/components/schemas/Value'
          description: "The result of the aggregation functions, ex: `COUNT(*) AS\
            \ total_entities`. The key is the alias assigned to the aggregation function\
            \ on input and the size of this map equals the number of aggregation functions\
            \ in the query."
          title: aggregateProperties
          type: object
      title: AggregationResult
      type: object
    AggregationResultBatch:
      description: A batch of aggregation results produced by an aggregation query.
      example:
        readTime: readTime
        aggregationResults:
        - aggregateProperties:
            key:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
        - aggregateProperties:
            key:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
        moreResults: MORE_RESULTS_TYPE_UNSPECIFIED
      properties:
        aggregationResults:
          description: The aggregation results for this batch.
          items:
            $ref: '#/components/schemas/AggregationResult'
          title: aggregationResults
          type: array
        moreResults:
          description: "The state of the query after the current batch. Only COUNT(*)\
            \ aggregations are supported in the initial launch. Therefore, expected\
            \ result type is limited to `NO_MORE_RESULTS`."
          enum:
          - MORE_RESULTS_TYPE_UNSPECIFIED
          - NOT_FINISHED
          - MORE_RESULTS_AFTER_LIMIT
          - MORE_RESULTS_AFTER_CURSOR
          - NO_MORE_RESULTS
          title: moreResults
          type: string
        readTime:
          description: "Read timestamp this batch was returned from. In a single transaction,\
            \ subsequent query result batches for the same query can have a greater\
            \ timestamp. Each batch's read timestamp is valid for all preceding batches."
          format: google-datetime
          title: readTime
          type: string
      title: AggregationResultBatch
      type: object
    AllocateIdsRequest:
      description: The request for Datastore.AllocateIds.
      example:
        keys:
        - path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
        - path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
      properties:
        keys:
          description: Required. A list of keys with incomplete key paths for which
            to allocate IDs. No key may be reserved/read-only.
          items:
            $ref: '#/components/schemas/Key'
          title: keys
          type: array
      title: AllocateIdsRequest
      type: object
    AllocateIdsResponse:
      description: The response for Datastore.AllocateIds.
      example:
        keys:
        - path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
        - path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
      properties:
        keys:
          description: "The keys specified in the request (in the same order), each\
            \ with its key path completed with a newly allocated ID."
          items:
            $ref: '#/components/schemas/Key'
          title: keys
          type: array
      title: AllocateIdsResponse
      type: object
    ArrayValue:
      description: An array value.
      example:
        values:
        - null
        - null
      properties:
        values:
          description: Values in the array. The order of values in an array is preserved
            as long as all values have identical settings for 'exclude_from_indexes'.
          items:
            $ref: '#/components/schemas/Value'
          title: values
          type: array
      title: ArrayValue
      type: object
    Avg:
      description: "Average of the values of the requested property. * Only numeric\
        \ values will be aggregated. All non-numeric values including `NULL` are skipped.\
        \ * If the aggregated values contain `NaN`, returns `NaN`. Infinity math follows\
        \ IEEE-754 standards. * If the aggregated value set is empty, returns `NULL`.\
        \ * Always returns the result as a double."
      example:
        property:
          name: name
      properties:
        property:
          $ref: '#/components/schemas/PropertyReference'
      title: Avg
      type: object
    BeginTransactionRequest:
      description: The request for Datastore.BeginTransaction.
      example:
        transactionOptions:
          readWrite:
            previousTransaction: previousTransaction
          readOnly:
            readTime: readTime
      properties:
        transactionOptions:
          $ref: '#/components/schemas/TransactionOptions'
      title: BeginTransactionRequest
      type: object
    BeginTransactionResponse:
      description: The response for Datastore.BeginTransaction.
      example:
        transaction: transaction
      properties:
        transaction:
          description: The transaction identifier (always present).
          format: byte
          title: transaction
          type: string
      title: BeginTransactionResponse
      type: object
    CommitRequest:
      description: The request for Datastore.Commit.
      example:
        mode: MODE_UNSPECIFIED
        mutations:
        - baseVersion: baseVersion
          upsert:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          insert:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          update:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          updateTime: updateTime
          delete:
            path:
            - kind: kind
              name: name
              id: id
            - kind: kind
              name: name
              id: id
            partitionId:
              namespaceId: namespaceId
              projectId: projectId
        - baseVersion: baseVersion
          upsert:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          insert:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          update:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          updateTime: updateTime
          delete:
            path:
            - kind: kind
              name: name
              id: id
            - kind: kind
              name: name
              id: id
            partitionId:
              namespaceId: namespaceId
              projectId: projectId
        transaction: transaction
      properties:
        mode:
          description: The type of commit to perform. Defaults to `TRANSACTIONAL`.
          enum:
          - MODE_UNSPECIFIED
          - TRANSACTIONAL
          - NON_TRANSACTIONAL
          title: mode
          type: string
        mutations:
          description: "The mutations to perform. When mode is `TRANSACTIONAL`, mutations\
            \ affecting a single entity are applied in order. The following sequences\
            \ of mutations affecting a single entity are not permitted in a single\
            \ `Commit` request: - `insert` followed by `insert` - `update` followed\
            \ by `insert` - `upsert` followed by `insert` - `delete` followed by `update`\
            \ When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single\
            \ entity."
          items:
            $ref: '#/components/schemas/Mutation'
          title: mutations
          type: array
        transaction:
          description: The identifier of the transaction associated with the commit.
            A transaction identifier is returned by a call to Datastore.BeginTransaction.
          format: byte
          title: transaction
          type: string
      title: CommitRequest
      type: object
    CommitResponse:
      description: The response for Datastore.Commit.
      example:
        mutationResults:
        - createTime: createTime
          updateTime: updateTime
          version: version
          conflictDetected: true
          key:
            path:
            - kind: kind
              name: name
              id: id
            - kind: kind
              name: name
              id: id
            partitionId:
              namespaceId: namespaceId
              projectId: projectId
        - createTime: createTime
          updateTime: updateTime
          version: version
          conflictDetected: true
          key:
            path:
            - kind: kind
              name: name
              id: id
            - kind: kind
              name: name
              id: id
            partitionId:
              namespaceId: namespaceId
              projectId: projectId
        commitTime: commitTime
        indexUpdates: 0
      properties:
        commitTime:
          description: The transaction commit timestamp. Not set for non-transactional
            commits.
          format: google-datetime
          title: commitTime
          type: string
        indexUpdates:
          description: "The number of index entries updated during the commit, or\
            \ zero if none were updated."
          format: int32
          title: indexUpdates
          type: integer
        mutationResults:
          description: The result of performing the mutations. The i-th mutation result
            corresponds to the i-th mutation in the request.
          items:
            $ref: '#/components/schemas/MutationResult'
          title: mutationResults
          type: array
      title: CommitResponse
      type: object
    CompositeFilter:
      description: A filter that merges multiple other filters using the given operator.
      example:
        op: OPERATOR_UNSPECIFIED
        filters:
        - null
        - null
      properties:
        filters:
          description: "The list of filters to combine. Requires: * At least one filter\
            \ is present."
          items:
            $ref: '#/components/schemas/Filter'
          title: filters
          type: array
        op:
          description: The operator for combining multiple filters.
          enum:
          - OPERATOR_UNSPECIFIED
          - AND
          - OR
          title: op
          type: string
      title: CompositeFilter
      type: object
    Count:
      description: Count of entities that match the query. The `COUNT(*)` aggregation
        function operates on the entire entity so it does not require a field reference.
      example:
        upTo: upTo
      properties:
        upTo:
          description: "Optional. Optional constraint on the maximum number of entities\
            \ to count. This provides a way to set an upper bound on the number of\
            \ entities to scan, limiting latency, and cost. Unspecified is interpreted\
            \ as no bound. If a zero value is provided, a count result of zero should\
            \ always be expected. High-Level Example: ``` AGGREGATE COUNT_UP_TO(1000)\
            \ OVER ( SELECT * FROM k ); ``` Requires: * Must be non-negative when\
            \ present."
          format: int64
          title: upTo
          type: string
      title: Count
      type: object
    Entity:
      description: A Datastore data object. Must not exceed 1 MiB - 4 bytes.
      example:
        key:
          path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
        properties:
          key:
            keyValue:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            timestampValue: timestampValue
            geoPointValue:
              latitude: 6.027456183070403
              longitude: 1.4658129805029452
            arrayValue:
              values:
              - null
              - null
            doubleValue: 0.8008281904610115
            nullValue: NULL_VALUE
            stringValue: stringValue
            entityValue: null
            meaning: 5
            booleanValue: true
            integerValue: integerValue
            excludeFromIndexes: true
            blobValue: blobValue
      properties:
        key:
          $ref: '#/components/schemas/Key'
        properties:
          additionalProperties:
            $ref: '#/components/schemas/Value'
          description: "The entity's properties. The map's keys are property names.\
            \ A property name matching regex `__.*__` is reserved. A reserved property\
            \ name is forbidden in certain documented contexts. The map keys, represented\
            \ as UTF-8, must not exceed 1,500 bytes and cannot be empty."
          title: properties
          type: object
      title: Entity
      type: object
    EntityResult:
      description: The result of fetching an entity from Datastore.
      example:
        cursor: cursor
        createTime: createTime
        updateTime: updateTime
        version: version
        entity:
          key:
            path:
            - kind: kind
              name: name
              id: id
            - kind: kind
              name: name
              id: id
            partitionId:
              namespaceId: namespaceId
              projectId: projectId
          properties:
            key:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
      properties:
        createTime:
          description: "The time at which the entity was created. This field is set\
            \ for `FULL` entity results. If this entity is missing, this field will\
            \ not be set."
          format: google-datetime
          title: createTime
          type: string
        cursor:
          description: A cursor that points to the position after the result entity.
            Set only when the `EntityResult` is part of a `QueryResultBatch` message.
          format: byte
          title: cursor
          type: string
        entity:
          $ref: '#/components/schemas/Entity'
        updateTime:
          description: "The time at which the entity was last changed. This field\
            \ is set for `FULL` entity results. If this entity is missing, this field\
            \ will not be set."
          format: google-datetime
          title: updateTime
          type: string
        version:
          description: "The version of the entity, a strictly positive number that\
            \ monotonically increases with changes to the entity. This field is set\
            \ for `FULL` entity results. For missing entities in `LookupResponse`,\
            \ this is the version of the snapshot that was used to look up the entity,\
            \ and it is always set except for eventually consistent reads."
          format: int64
          title: version
          type: string
      title: EntityResult
      type: object
    Filter:
      description: A holder for any type of filter.
      example:
        compositeFilter:
          op: OPERATOR_UNSPECIFIED
          filters:
          - null
          - null
        propertyFilter:
          op: OPERATOR_UNSPECIFIED
          property:
            name: name
          value:
            keyValue:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            timestampValue: timestampValue
            geoPointValue:
              latitude: 6.027456183070403
              longitude: 1.4658129805029452
            arrayValue:
              values:
              - null
              - null
            doubleValue: 0.8008281904610115
            nullValue: NULL_VALUE
            stringValue: stringValue
            entityValue: null
            meaning: 5
            booleanValue: true
            integerValue: integerValue
            excludeFromIndexes: true
            blobValue: blobValue
      properties:
        compositeFilter:
          $ref: '#/components/schemas/CompositeFilter'
        propertyFilter:
          $ref: '#/components/schemas/PropertyFilter'
      title: Filter
      type: object
    GoogleDatastoreAdminV1CommonMetadata:
      description: Metadata common to all Datastore Admin operations.
      properties:
        endTime:
          description: "The time the operation ended, either successfully or otherwise."
          format: google-datetime
          title: endTime
          type: string
        labels:
          additionalProperties:
            type: string
          description: The client-assigned labels which were provided when the operation
            was created. May also include additional labels.
          title: labels
          type: object
        operationType:
          description: The type of the operation. Can be used as a filter in ListOperationsRequest.
          enum:
          - OPERATION_TYPE_UNSPECIFIED
          - EXPORT_ENTITIES
          - IMPORT_ENTITIES
          - CREATE_INDEX
          - DELETE_INDEX
          title: operationType
          type: string
        startTime:
          description: The time that work began on the operation.
          format: google-datetime
          title: startTime
          type: string
        state:
          description: The current state of the Operation.
          enum:
          - STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
          title: state
          type: string
      title: GoogleDatastoreAdminV1CommonMetadata
      type: object
    GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata:
      description: "Metadata for Datastore to Firestore migration operations. The\
        \ DatastoreFirestoreMigration operation is not started by the end-user via\
        \ an explicit \"creation\" method. This is an intentional deviation from the\
        \ LRO design pattern. This singleton resource can be accessed at: \"projects/{project_id}/operations/datastore-firestore-migration\""
      properties:
        migrationState:
          description: The current state of migration from Cloud Datastore to Cloud
            Firestore in Datastore mode.
          enum:
          - MIGRATION_STATE_UNSPECIFIED
          - RUNNING
          - PAUSED
          - COMPLETE
          type: string
        migrationStep:
          description: The current step of migration from Cloud Datastore to Cloud
            Firestore in Datastore mode.
          enum:
          - MIGRATION_STEP_UNSPECIFIED
          - PREPARE
          - START
          - APPLY_WRITES_SYNCHRONOUSLY
          - COPY_AND_VERIFY
          - REDIRECT_EVENTUALLY_CONSISTENT_READS
          - REDIRECT_STRONGLY_CONSISTENT_READS
          - REDIRECT_WRITES
          type: string
      type: object
    GoogleDatastoreAdminV1EntityFilter:
      description: "Identifies a subset of entities in a project. This is specified\
        \ as combinations of kinds and namespaces (either or both of which may be\
        \ all, as described in the following examples). Example usage: Entire project:\
        \ kinds=[], namespace_ids=[] Kinds Foo and Bar in all namespaces: kinds=['Foo',\
        \ 'Bar'], namespace_ids=[] Kinds Foo and Bar only in the default namespace:\
        \ kinds=['Foo', 'Bar'], namespace_ids=[''] Kinds Foo and Bar in both the default\
        \ and Baz namespaces: kinds=['Foo', 'Bar'], namespace_ids=['', 'Baz'] The\
        \ entire Baz namespace: kinds=[], namespace_ids=['Baz']"
      properties:
        kinds:
          description: "If empty, then this represents all kinds."
          items:
            type: string
          title: kinds
          type: array
        namespaceIds:
          description: "An empty list represents all namespaces. This is the preferred\
            \ usage for projects that don't use namespaces. An empty string element\
            \ represents the default namespace. This should be used if the project\
            \ has data in non-default namespaces, but doesn't want to include them.\
            \ Each namespace in this list must be unique."
          items:
            type: string
          title: namespaceIds
          type: array
      title: GoogleDatastoreAdminV1EntityFilter
      type: object
    GoogleDatastoreAdminV1ExportEntitiesMetadata:
      description: Metadata for ExportEntities operations.
      properties:
        common:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1CommonMetadata'
        entityFilter:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1EntityFilter'
        outputUrlPrefix:
          description: Location for the export metadata and data files. This will
            be the same value as the google.datastore.admin.v1.ExportEntitiesRequest.output_url_prefix
            field. The final output location is provided in google.datastore.admin.v1.ExportEntitiesResponse.output_url.
          type: string
        progressBytes:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1Progress'
        progressEntities:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1Progress'
      type: object
    GoogleDatastoreAdminV1ExportEntitiesResponse:
      description: The response for google.datastore.admin.v1.DatastoreAdmin.ExportEntities.
      properties:
        outputUrl:
          description: Location of the output metadata file. This can be used to begin
            an import into Cloud Datastore (this project or another project). See
            google.datastore.admin.v1.ImportEntitiesRequest.input_url. Only present
            if the operation completed successfully.
          type: string
      type: object
    GoogleDatastoreAdminV1ImportEntitiesMetadata:
      description: Metadata for ImportEntities operations.
      properties:
        common:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1CommonMetadata'
        entityFilter:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1EntityFilter'
        inputUrl:
          description: The location of the import metadata file. This will be the
            same value as the google.datastore.admin.v1.ExportEntitiesResponse.output_url
            field.
          type: string
        progressBytes:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1Progress'
        progressEntities:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1Progress'
      type: object
    GoogleDatastoreAdminV1IndexOperationMetadata:
      description: Metadata for Index operations.
      properties:
        common:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1CommonMetadata'
        indexId:
          description: The index resource ID that this operation is acting on.
          type: string
        progressEntities:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1Progress'
      type: object
    GoogleDatastoreAdminV1MigrationProgressEvent:
      description: "An event signifying the start of a new step in a [migration from\
        \ Cloud Datastore to Cloud Firestore in Datastore mode](https://cloud.google.com/datastore/docs/upgrade-to-firestore)."
      properties:
        prepareStepDetails:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1PrepareStepDetails'
        redirectWritesStepDetails:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1RedirectWritesStepDetails'
        step:
          description: The step that is starting. An event with step set to `START`
            indicates that the migration has been reverted back to the initial pre-migration
            state.
          enum:
          - MIGRATION_STEP_UNSPECIFIED
          - PREPARE
          - START
          - APPLY_WRITES_SYNCHRONOUSLY
          - COPY_AND_VERIFY
          - REDIRECT_EVENTUALLY_CONSISTENT_READS
          - REDIRECT_STRONGLY_CONSISTENT_READS
          - REDIRECT_WRITES
          type: string
      type: object
    GoogleDatastoreAdminV1MigrationStateEvent:
      description: "An event signifying a change in state of a [migration from Cloud\
        \ Datastore to Cloud Firestore in Datastore mode](https://cloud.google.com/datastore/docs/upgrade-to-firestore)."
      properties:
        state:
          description: The new state of the migration.
          enum:
          - MIGRATION_STATE_UNSPECIFIED
          - RUNNING
          - PAUSED
          - COMPLETE
          type: string
      type: object
    GoogleDatastoreAdminV1PrepareStepDetails:
      description: Details for the `PREPARE` step.
      properties:
        concurrencyMode:
          description: The concurrency mode this database will use when it reaches
            the `REDIRECT_WRITES` step.
          enum:
          - CONCURRENCY_MODE_UNSPECIFIED
          - PESSIMISTIC
          - OPTIMISTIC
          - OPTIMISTIC_WITH_ENTITY_GROUPS
          title: concurrencyMode
          type: string
      title: GoogleDatastoreAdminV1PrepareStepDetails
      type: object
    GoogleDatastoreAdminV1Progress:
      description: Measures the progress of a particular metric.
      properties:
        workCompleted:
          description: The amount of work that has been completed. Note that this
            may be greater than work_estimated.
          format: int64
          title: workCompleted
          type: string
        workEstimated:
          description: An estimate of how much work needs to be performed. May be
            zero if the work estimate is unavailable.
          format: int64
          title: workEstimated
          type: string
      title: GoogleDatastoreAdminV1Progress
      type: object
    GoogleDatastoreAdminV1RedirectWritesStepDetails:
      description: Details for the `REDIRECT_WRITES` step.
      properties:
        concurrencyMode:
          description: Ths concurrency mode for this database.
          enum:
          - CONCURRENCY_MODE_UNSPECIFIED
          - PESSIMISTIC
          - OPTIMISTIC
          - OPTIMISTIC_WITH_ENTITY_GROUPS
          title: concurrencyMode
          type: string
      title: GoogleDatastoreAdminV1RedirectWritesStepDetails
      type: object
    GoogleDatastoreAdminV1beta1CommonMetadata:
      description: Metadata common to all Datastore Admin operations.
      properties:
        endTime:
          description: "The time the operation ended, either successfully or otherwise."
          format: google-datetime
          title: endTime
          type: string
        labels:
          additionalProperties:
            type: string
          description: The client-assigned labels which were provided when the operation
            was created. May also include additional labels.
          title: labels
          type: object
        operationType:
          description: The type of the operation. Can be used as a filter in ListOperationsRequest.
          enum:
          - OPERATION_TYPE_UNSPECIFIED
          - EXPORT_ENTITIES
          - IMPORT_ENTITIES
          title: operationType
          type: string
        startTime:
          description: The time that work began on the operation.
          format: google-datetime
          title: startTime
          type: string
        state:
          description: The current state of the Operation.
          enum:
          - STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
          title: state
          type: string
      title: GoogleDatastoreAdminV1beta1CommonMetadata
      type: object
    GoogleDatastoreAdminV1beta1EntityFilter:
      description: "Identifies a subset of entities in a project. This is specified\
        \ as combinations of kinds and namespaces (either or both of which may be\
        \ all, as described in the following examples). Example usage: Entire project:\
        \ kinds=[], namespace_ids=[] Kinds Foo and Bar in all namespaces: kinds=['Foo',\
        \ 'Bar'], namespace_ids=[] Kinds Foo and Bar only in the default namespace:\
        \ kinds=['Foo', 'Bar'], namespace_ids=[''] Kinds Foo and Bar in both the default\
        \ and Baz namespaces: kinds=['Foo', 'Bar'], namespace_ids=['', 'Baz'] The\
        \ entire Baz namespace: kinds=[], namespace_ids=['Baz']"
      properties:
        kinds:
          description: "If empty, then this represents all kinds."
          items:
            type: string
          title: kinds
          type: array
        namespaceIds:
          description: "An empty list represents all namespaces. This is the preferred\
            \ usage for projects that don't use namespaces. An empty string element\
            \ represents the default namespace. This should be used if the project\
            \ has data in non-default namespaces, but doesn't want to include them.\
            \ Each namespace in this list must be unique."
          items:
            type: string
          title: namespaceIds
          type: array
      title: GoogleDatastoreAdminV1beta1EntityFilter
      type: object
    GoogleDatastoreAdminV1beta1ExportEntitiesMetadata:
      description: Metadata for ExportEntities operations.
      properties:
        common:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1CommonMetadata'
        entityFilter:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1EntityFilter'
        outputUrlPrefix:
          description: Location for the export metadata and data files. This will
            be the same value as the google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix
            field. The final output location is provided in google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url.
          type: string
        progressBytes:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1Progress'
        progressEntities:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1Progress'
      type: object
    GoogleDatastoreAdminV1beta1ExportEntitiesResponse:
      description: The response for google.datastore.admin.v1beta1.DatastoreAdmin.ExportEntities.
      properties:
        outputUrl:
          description: Location of the output metadata file. This can be used to begin
            an import into Cloud Datastore (this project or another project). See
            google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url. Only present
            if the operation completed successfully.
          type: string
      type: object
    GoogleDatastoreAdminV1beta1ImportEntitiesMetadata:
      description: Metadata for ImportEntities operations.
      properties:
        common:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1CommonMetadata'
        entityFilter:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1EntityFilter'
        inputUrl:
          description: The location of the import metadata file. This will be the
            same value as the google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url
            field.
          type: string
        progressBytes:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1Progress'
        progressEntities:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1Progress'
      type: object
    GoogleDatastoreAdminV1beta1Progress:
      description: Measures the progress of a particular metric.
      properties:
        workCompleted:
          description: The amount of work that has been completed. Note that this
            may be greater than work_estimated.
          format: int64
          title: workCompleted
          type: string
        workEstimated:
          description: An estimate of how much work needs to be performed. May be
            zero if the work estimate is unavailable.
          format: int64
          title: workEstimated
          type: string
      title: GoogleDatastoreAdminV1beta1Progress
      type: object
    GqlQuery:
      description: "A [GQL query](https://cloud.google.com/datastore/docs/apis/gql/gql_reference)."
      example:
        namedBindings:
          key:
            cursor: cursor
            value:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
        allowLiterals: true
        positionalBindings:
        - cursor: cursor
          value:
            keyValue:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            timestampValue: timestampValue
            geoPointValue:
              latitude: 6.027456183070403
              longitude: 1.4658129805029452
            arrayValue:
              values:
              - null
              - null
            doubleValue: 0.8008281904610115
            nullValue: NULL_VALUE
            stringValue: stringValue
            entityValue: null
            meaning: 5
            booleanValue: true
            integerValue: integerValue
            excludeFromIndexes: true
            blobValue: blobValue
        - cursor: cursor
          value:
            keyValue:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            timestampValue: timestampValue
            geoPointValue:
              latitude: 6.027456183070403
              longitude: 1.4658129805029452
            arrayValue:
              values:
              - null
              - null
            doubleValue: 0.8008281904610115
            nullValue: NULL_VALUE
            stringValue: stringValue
            entityValue: null
            meaning: 5
            booleanValue: true
            integerValue: integerValue
            excludeFromIndexes: true
            blobValue: blobValue
        queryString: queryString
      properties:
        allowLiterals:
          description: "When false, the query string must not contain any literals\
            \ and instead must bind all values. For example, `SELECT * FROM Kind WHERE\
            \ a = 'string literal'` is not allowed, while `SELECT * FROM Kind WHERE\
            \ a = @value` is."
          title: allowLiterals
          type: boolean
        namedBindings:
          additionalProperties:
            $ref: '#/components/schemas/GqlQueryParameter'
          description: "For each non-reserved named binding site in the query string,\
            \ there must be a named parameter with that name, but not necessarily\
            \ the inverse. Key must match regex `A-Za-z_$*`, must not match regex\
            \ `__.*__`, and must not be `\"\"`."
          title: namedBindings
          type: object
        positionalBindings:
          description: "Numbered binding site @1 references the first numbered parameter,\
            \ effectively using 1-based indexing, rather than the usual 0. For each\
            \ binding site numbered i in `query_string`, there must be an i-th numbered\
            \ parameter. The inverse must also be true."
          items:
            $ref: '#/components/schemas/GqlQueryParameter'
          title: positionalBindings
          type: array
        queryString:
          description: "A string of the format described [here](https://cloud.google.com/datastore/docs/apis/gql/gql_reference)."
          title: queryString
          type: string
      title: GqlQuery
      type: object
    GqlQueryParameter:
      description: A binding parameter for a GQL query.
      example:
        cursor: cursor
        value:
          keyValue:
            path:
            - kind: kind
              name: name
              id: id
            - kind: kind
              name: name
              id: id
            partitionId:
              namespaceId: namespaceId
              projectId: projectId
          timestampValue: timestampValue
          geoPointValue:
            latitude: 6.027456183070403
            longitude: 1.4658129805029452
          arrayValue:
            values:
            - null
            - null
          doubleValue: 0.8008281904610115
          nullValue: NULL_VALUE
          stringValue: stringValue
          entityValue: null
          meaning: 5
          booleanValue: true
          integerValue: integerValue
          excludeFromIndexes: true
          blobValue: blobValue
      properties:
        cursor:
          description: A query cursor. Query cursors are returned in query result
            batches.
          format: byte
          title: cursor
          type: string
        value:
          $ref: '#/components/schemas/Value'
      title: GqlQueryParameter
      type: object
    Key:
      description: "A unique identifier for an entity. If a key's partition ID or\
        \ any of its path kinds or names are reserved/read-only, the key is reserved/read-only.\
        \ A reserved/read-only key is forbidden in certain documented contexts."
      example:
        path:
        - kind: kind
          name: name
          id: id
        - kind: kind
          name: name
          id: id
        partitionId:
          namespaceId: namespaceId
          projectId: projectId
      properties:
        partitionId:
          $ref: '#/components/schemas/PartitionId'
        path:
          description: "The entity path. An entity path consists of one or more elements\
            \ composed of a kind and a string or numerical identifier, which identify\
            \ entities. The first element identifies a _root entity_, the second element\
            \ identifies a _child_ of the root entity, the third element identifies\
            \ a child of the second entity, and so forth. The entities identified\
            \ by all prefixes of the path are called the element's _ancestors_. An\
            \ entity path is always fully complete: *all* of the entity's ancestors\
            \ are required to be in the path along with the entity identifier itself.\
            \ The only exception is that in some documented cases, the identifier\
            \ in the last path element (for the entity) itself may be omitted. For\
            \ example, the last path element of the key of `Mutation.insert` may have\
            \ no identifier. A path can never be empty, and a path can have at most\
            \ 100 elements."
          items:
            $ref: '#/components/schemas/PathElement'
          title: path
          type: array
      title: Key
      type: object
    KindExpression:
      description: A representation of a kind.
      example:
        name: name
      properties:
        name:
          description: The name of the kind.
          title: name
          type: string
      title: KindExpression
      type: object
    LatLng:
      description: "An object that represents a latitude/longitude pair. This is expressed\
        \ as a pair of doubles to represent degrees latitude and degrees longitude.\
        \ Unless specified otherwise, this object must conform to the WGS84 standard.\
        \ Values must be within normalized ranges."
      example:
        latitude: 6.027456183070403
        longitude: 1.4658129805029452
      properties:
        latitude:
          description: "The latitude in degrees. It must be in the range [-90.0, +90.0]."
          format: double
          title: latitude
          type: number
        longitude:
          description: "The longitude in degrees. It must be in the range [-180.0,\
            \ +180.0]."
          format: double
          title: longitude
          type: number
      title: LatLng
      type: object
    LookupRequest:
      description: The request for Datastore.Lookup.
      example:
        keys:
        - path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
        - path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
        readOptions:
          readTime: readTime
          readConsistency: READ_CONSISTENCY_UNSPECIFIED
          transaction: transaction
      properties:
        keys:
          description: Required. Keys of entities to look up.
          items:
            $ref: '#/components/schemas/Key'
          title: keys
          type: array
        readOptions:
          $ref: '#/components/schemas/ReadOptions'
      title: LookupRequest
      type: object
    LookupResponse:
      description: The response for Datastore.Lookup.
      example:
        deferred:
        - path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
        - path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
        found:
        - cursor: cursor
          createTime: createTime
          updateTime: updateTime
          version: version
          entity:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
        - cursor: cursor
          createTime: createTime
          updateTime: updateTime
          version: version
          entity:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
        missing:
        - cursor: cursor
          createTime: createTime
          updateTime: updateTime
          version: version
          entity:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
        - cursor: cursor
          createTime: createTime
          updateTime: updateTime
          version: version
          entity:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
        readTime: readTime
      properties:
        deferred:
          description: A list of keys that were not looked up due to resource constraints.
            The order of results in this field is undefined and has no relation to
            the order of the keys in the input.
          items:
            $ref: '#/components/schemas/Key'
          title: deferred
          type: array
        found:
          description: Entities found as `ResultType.FULL` entities. The order of
            results in this field is undefined and has no relation to the order of
            the keys in the input.
          items:
            $ref: '#/components/schemas/EntityResult'
          title: found
          type: array
        missing:
          description: Entities not found as `ResultType.KEY_ONLY` entities. The order
            of results in this field is undefined and has no relation to the order
            of the keys in the input.
          items:
            $ref: '#/components/schemas/EntityResult'
          title: missing
          type: array
        readTime:
          description: The time at which these entities were read or found missing.
          format: google-datetime
          title: readTime
          type: string
      title: LookupResponse
      type: object
    Mutation:
      description: A mutation to apply to an entity.
      example:
        baseVersion: baseVersion
        upsert:
          key:
            path:
            - kind: kind
              name: name
              id: id
            - kind: kind
              name: name
              id: id
            partitionId:
              namespaceId: namespaceId
              projectId: projectId
          properties:
            key:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
        insert:
          key:
            path:
            - kind: kind
              name: name
              id: id
            - kind: kind
              name: name
              id: id
            partitionId:
              namespaceId: namespaceId
              projectId: projectId
          properties:
            key:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
        update:
          key:
            path:
            - kind: kind
              name: name
              id: id
            - kind: kind
              name: name
              id: id
            partitionId:
              namespaceId: namespaceId
              projectId: projectId
          properties:
            key:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
        updateTime: updateTime
        delete:
          path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
      properties:
        baseVersion:
          description: "The version of the entity that this mutation is being applied\
            \ to. If this does not match the current version on the server, the mutation\
            \ conflicts."
          format: int64
          title: baseVersion
          type: string
        delete:
          $ref: '#/components/schemas/Key'
        insert:
          $ref: '#/components/schemas/Entity'
        update:
          $ref: '#/components/schemas/Entity'
        updateTime:
          description: "The update time of the entity that this mutation is being\
            \ applied to. If this does not match the current update time on the server,\
            \ the mutation conflicts."
          format: google-datetime
          title: updateTime
          type: string
        upsert:
          $ref: '#/components/schemas/Entity'
      title: Mutation
      type: object
    MutationResult:
      description: The result of applying a mutation.
      example:
        createTime: createTime
        updateTime: updateTime
        version: version
        conflictDetected: true
        key:
          path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
      properties:
        conflictDetected:
          description: Whether a conflict was detected for this mutation. Always false
            when a conflict detection strategy field is not set in the mutation.
          title: conflictDetected
          type: boolean
        createTime:
          description: The create time of the entity. This field will not be set after
            a 'delete'.
          format: google-datetime
          title: createTime
          type: string
        key:
          $ref: '#/components/schemas/Key'
        updateTime:
          description: "The update time of the entity on the server after processing\
            \ the mutation. If the mutation doesn't change anything on the server,\
            \ then the timestamp will be the update timestamp of the current entity.\
            \ This field will not be set after a 'delete'."
          format: google-datetime
          title: updateTime
          type: string
        version:
          description: "The version of the entity on the server after processing the\
            \ mutation. If the mutation doesn't change anything on the server, then\
            \ the version will be the version of the current entity or, if no entity\
            \ is present, a version that is strictly greater than the version of any\
            \ previous entity and less than the version of any possible future entity."
          format: int64
          title: version
          type: string
      title: MutationResult
      type: object
    PartitionId:
      description: "A partition ID identifies a grouping of entities. The grouping\
        \ is always by project and namespace, however the namespace ID may be empty.\
        \ A partition ID contains several dimensions: project ID and namespace ID.\
        \ Partition dimensions: - May be `\"\"`. - Must be valid UTF-8 bytes. - Must\
        \ have values that match regex `[A-Za-z\\d\\.\\-_]{1,100}` If the value of\
        \ any dimension matches regex `__.*__`, the partition is reserved/read-only.\
        \ A reserved/read-only partition ID is forbidden in certain documented contexts.\
        \ Foreign partition IDs (in which the project ID does not match the context\
        \ project ID ) are discouraged. Reads and writes of foreign partition IDs\
        \ may fail if the project is not in an active state."
      example:
        namespaceId: namespaceId
        projectId: projectId
      properties:
        namespaceId:
          description: "If not empty, the ID of the namespace to which the entities\
            \ belong."
          title: namespaceId
          type: string
        projectId:
          description: The ID of the project to which the entities belong.
          title: projectId
          type: string
      title: PartitionId
      type: object
    PathElement:
      description: "A (kind, ID/name) pair used to construct a key path. If either\
        \ name or ID is set, the element is complete. If neither is set, the element\
        \ is incomplete."
      example:
        kind: kind
        name: name
        id: id
      properties:
        id:
          description: The auto-allocated ID of the entity. Never equal to zero. Values
            less than zero are discouraged and may not be supported in the future.
          format: int64
          title: id
          type: string
        kind:
          description: The kind of the entity. A kind matching regex `__.*__` is reserved/read-only.
            A kind must not contain more than 1500 bytes when UTF-8 encoded. Cannot
            be `""`. Must be valid UTF-8 bytes. Legacy values that are not valid UTF-8
            are encoded as `__bytes__` where `` is the base-64 encoding of the bytes.
          title: kind
          type: string
        name:
          description: The name of the entity. A name matching regex `__.*__` is reserved/read-only.
            A name must not be more than 1500 bytes when UTF-8 encoded. Cannot be
            `""`. Must be valid UTF-8 bytes. Legacy values that are not valid UTF-8
            are encoded as `__bytes__` where `` is the base-64 encoding of the bytes.
          title: name
          type: string
      title: PathElement
      type: object
    Projection:
      description: A representation of a property in a projection.
      example:
        property:
          name: name
      properties:
        property:
          $ref: '#/components/schemas/PropertyReference'
      title: Projection
      type: object
    PropertyFilter:
      description: A filter on a specific property.
      example:
        op: OPERATOR_UNSPECIFIED
        property:
          name: name
        value:
          keyValue:
            path:
            - kind: kind
              name: name
              id: id
            - kind: kind
              name: name
              id: id
            partitionId:
              namespaceId: namespaceId
              projectId: projectId
          timestampValue: timestampValue
          geoPointValue:
            latitude: 6.027456183070403
            longitude: 1.4658129805029452
          arrayValue:
            values:
            - null
            - null
          doubleValue: 0.8008281904610115
          nullValue: NULL_VALUE
          stringValue: stringValue
          entityValue: null
          meaning: 5
          booleanValue: true
          integerValue: integerValue
          excludeFromIndexes: true
          blobValue: blobValue
      properties:
        op:
          description: The operator to filter by.
          enum:
          - OPERATOR_UNSPECIFIED
          - LESS_THAN
          - LESS_THAN_OR_EQUAL
          - GREATER_THAN
          - GREATER_THAN_OR_EQUAL
          - EQUAL
          - IN
          - NOT_EQUAL
          - HAS_ANCESTOR
          - NOT_IN
          title: op
          type: string
        property:
          $ref: '#/components/schemas/PropertyReference'
        value:
          $ref: '#/components/schemas/Value'
      title: PropertyFilter
      type: object
    PropertyOrder:
      description: The desired order for a specific property.
      example:
        property:
          name: name
        direction: DIRECTION_UNSPECIFIED
      properties:
        direction:
          description: The direction to order by. Defaults to `ASCENDING`.
          enum:
          - DIRECTION_UNSPECIFIED
          - ASCENDING
          - DESCENDING
          title: direction
          type: string
        property:
          $ref: '#/components/schemas/PropertyReference'
      title: PropertyOrder
      type: object
    PropertyReference:
      description: A reference to a property relative to the kind expressions.
      example:
        name: name
      properties:
        name:
          description: "A reference to a property. Requires: * MUST be a dot-delimited\
            \ (`.`) string of segments, where each segment conforms to entity property\
            \ name limitations."
          title: name
          type: string
      title: PropertyReference
      type: object
    Query:
      description: A query for entities.
      example:
        filter:
          compositeFilter:
            op: OPERATOR_UNSPECIFIED
            filters:
            - null
            - null
          propertyFilter:
            op: OPERATOR_UNSPECIFIED
            property:
              name: name
            value:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
        offset: 6
        kind:
        - name: name
        - name: name
        limit: 0
        endCursor: endCursor
        projection:
        - property:
            name: name
        - property:
            name: name
        startCursor: startCursor
        distinctOn:
        - name: name
        - name: name
        order:
        - property:
            name: name
          direction: DIRECTION_UNSPECIFIED
        - property:
            name: name
          direction: DIRECTION_UNSPECIFIED
      properties:
        distinctOn:
          description: "The properties to make distinct. The query results will contain\
            \ the first result for each distinct combination of values for the given\
            \ properties (if empty, all results are returned). Requires: * If `order`\
            \ is specified, the set of distinct on properties must appear before the\
            \ non-distinct on properties in `order`."
          items:
            $ref: '#/components/schemas/PropertyReference'
          title: distinctOn
          type: array
        endCursor:
          description: "An ending point for the query results. Query cursors are returned\
            \ in query result batches and [can only be used to limit the same query](https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets)."
          format: byte
          title: endCursor
          type: string
        filter:
          $ref: '#/components/schemas/Filter'
        kind:
          description: "The kinds to query (if empty, returns entities of all kinds).\
            \ Currently at most 1 kind may be specified."
          items:
            $ref: '#/components/schemas/KindExpression'
          title: kind
          type: array
        limit:
          description: The maximum number of results to return. Applies after all
            other constraints. Optional. Unspecified is interpreted as no limit. Must
            be >= 0 if specified.
          format: int32
          title: limit
          type: integer
        offset:
          description: "The number of results to skip. Applies before limit, but after\
            \ all other constraints. Optional. Must be >= 0 if specified."
          format: int32
          title: offset
          type: integer
        order:
          description: "The order to apply to the query results (if empty, order is\
            \ unspecified)."
          items:
            $ref: '#/components/schemas/PropertyOrder'
          title: order
          type: array
        projection:
          description: The projection to return. Defaults to returning all properties.
          items:
            $ref: '#/components/schemas/Projection'
          title: projection
          type: array
        startCursor:
          description: "A starting point for the query results. Query cursors are\
            \ returned in query result batches and [can only be used to continue the\
            \ same query](https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets)."
          format: byte
          title: startCursor
          type: string
      title: Query
      type: object
    QueryResultBatch:
      description: A batch of results produced by a query.
      example:
        entityResults:
        - cursor: cursor
          createTime: createTime
          updateTime: updateTime
          version: version
          entity:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
        - cursor: cursor
          createTime: createTime
          updateTime: updateTime
          version: version
          entity:
            key:
              path:
              - kind: kind
                name: name
                id: id
              - kind: kind
                name: name
                id: id
              partitionId:
                namespaceId: namespaceId
                projectId: projectId
            properties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
        readTime: readTime
        endCursor: endCursor
        skippedCursor: skippedCursor
        snapshotVersion: snapshotVersion
        skippedResults: 0
        moreResults: MORE_RESULTS_TYPE_UNSPECIFIED
        entityResultType: RESULT_TYPE_UNSPECIFIED
      properties:
        endCursor:
          description: A cursor that points to the position after the last result
            in the batch.
          format: byte
          title: endCursor
          type: string
        entityResultType:
          description: The result type for every entity in `entity_results`.
          enum:
          - RESULT_TYPE_UNSPECIFIED
          - FULL
          - PROJECTION
          - KEY_ONLY
          title: entityResultType
          type: string
        entityResults:
          description: The results for this batch.
          items:
            $ref: '#/components/schemas/EntityResult'
          title: entityResults
          type: array
        moreResults:
          description: The state of the query after the current batch.
          enum:
          - MORE_RESULTS_TYPE_UNSPECIFIED
          - NOT_FINISHED
          - MORE_RESULTS_AFTER_LIMIT
          - MORE_RESULTS_AFTER_CURSOR
          - NO_MORE_RESULTS
          title: moreResults
          type: string
        readTime:
          description: "Read timestamp this batch was returned from. This applies\
            \ to the range of results from the query's `start_cursor` (or the beginning\
            \ of the query if no cursor was given) to this batch's `end_cursor` (not\
            \ the query's `end_cursor`). In a single transaction, subsequent query\
            \ result batches for the same query can have a greater timestamp. Each\
            \ batch's read timestamp is valid for all preceding batches. This value\
            \ will not be set for eventually consistent queries in Cloud Datastore."
          format: google-datetime
          title: readTime
          type: string
        skippedCursor:
          description: A cursor that points to the position after the last skipped
            result. Will be set when `skipped_results` != 0.
          format: byte
          title: skippedCursor
          type: string
        skippedResults:
          description: "The number of results skipped, typically because of an offset."
          format: int32
          title: skippedResults
          type: integer
        snapshotVersion:
          description: "The version number of the snapshot this batch was returned\
            \ from. This applies to the range of results from the query's `start_cursor`\
            \ (or the beginning of the query if no cursor was given) to this batch's\
            \ `end_cursor` (not the query's `end_cursor`). In a single transaction,\
            \ subsequent query result batches for the same query can have a greater\
            \ snapshot version number. Each batch's snapshot version is valid for\
            \ all preceding batches. The value will be zero for eventually consistent\
            \ queries."
          format: int64
          title: snapshotVersion
          type: string
      title: QueryResultBatch
      type: object
    ReadOnly:
      description: Options specific to read-only transactions.
      example:
        readTime: readTime
      properties:
        readTime:
          description: "Reads entities at the given time. This must be a microsecond\
            \ precision timestamp within the past one hour, or if Point-in-Time Recovery\
            \ is enabled, can additionally be a whole minute timestamp within the\
            \ past 7 days."
          format: google-datetime
          title: readTime
          type: string
      title: ReadOnly
      type: object
    ReadOptions:
      description: The options shared by read requests.
      example:
        readTime: readTime
        readConsistency: READ_CONSISTENCY_UNSPECIFIED
        transaction: transaction
      properties:
        readConsistency:
          description: The non-transactional read consistency to use.
          enum:
          - READ_CONSISTENCY_UNSPECIFIED
          - STRONG
          - EVENTUAL
          title: readConsistency
          type: string
        readTime:
          description: "Reads entities as they were at the given time. This value\
            \ is only supported for Cloud Firestore in Datastore mode. This must be\
            \ a microsecond precision timestamp within the past one hour, or if Point-in-Time\
            \ Recovery is enabled, can additionally be a whole minute timestamp within\
            \ the past 7 days."
          format: google-datetime
          title: readTime
          type: string
        transaction:
          description: The identifier of the transaction in which to read. A transaction
            identifier is returned by a call to Datastore.BeginTransaction.
          format: byte
          title: transaction
          type: string
      title: ReadOptions
      type: object
    ReadWrite:
      description: Options specific to read / write transactions.
      example:
        previousTransaction: previousTransaction
      properties:
        previousTransaction:
          description: The transaction identifier of the transaction being retried.
          format: byte
          title: previousTransaction
          type: string
      title: ReadWrite
      type: object
    ReserveIdsRequest:
      description: The request for Datastore.ReserveIds.
      example:
        keys:
        - path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
        - path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
        databaseId: databaseId
      properties:
        databaseId:
          description: The ID of the database against which to make the request. '(default)'
            is not allowed; please use empty string '' to refer the default database.
          title: databaseId
          type: string
        keys:
          description: Required. A list of keys with complete key paths whose numeric
            IDs should not be auto-allocated.
          items:
            $ref: '#/components/schemas/Key'
          title: keys
          type: array
      title: ReserveIdsRequest
      type: object
    ReserveIdsResponse:
      description: The response for Datastore.ReserveIds.
      properties: {}
      type: object
    RollbackRequest:
      description: The request for Datastore.Rollback.
      example:
        transaction: transaction
      properties:
        transaction:
          description: "Required. The transaction identifier, returned by a call to\
            \ Datastore.BeginTransaction."
          format: byte
          title: transaction
          type: string
      title: RollbackRequest
      type: object
    RollbackResponse:
      description: The response for Datastore.Rollback. (an empty message).
      properties: {}
      type: object
    RunAggregationQueryRequest:
      description: The request for Datastore.RunAggregationQuery.
      example:
        aggregationQuery:
          nestedQuery:
            filter:
              compositeFilter:
                op: OPERATOR_UNSPECIFIED
                filters:
                - null
                - null
              propertyFilter:
                op: OPERATOR_UNSPECIFIED
                property:
                  name: name
                value:
                  keyValue:
                    path:
                    - kind: kind
                      name: name
                      id: id
                    - kind: kind
                      name: name
                      id: id
                    partitionId:
                      namespaceId: namespaceId
                      projectId: projectId
                  timestampValue: timestampValue
                  geoPointValue:
                    latitude: 6.027456183070403
                    longitude: 1.4658129805029452
                  arrayValue:
                    values:
                    - null
                    - null
                  doubleValue: 0.8008281904610115
                  nullValue: NULL_VALUE
                  stringValue: stringValue
                  entityValue: null
                  meaning: 5
                  booleanValue: true
                  integerValue: integerValue
                  excludeFromIndexes: true
                  blobValue: blobValue
            offset: 6
            kind:
            - name: name
            - name: name
            limit: 0
            endCursor: endCursor
            projection:
            - property:
                name: name
            - property:
                name: name
            startCursor: startCursor
            distinctOn:
            - name: name
            - name: name
            order:
            - property:
                name: name
              direction: DIRECTION_UNSPECIFIED
            - property:
                name: name
              direction: DIRECTION_UNSPECIFIED
          aggregations:
          - avg:
              property:
                name: name
            count:
              upTo: upTo
            alias: alias
            sum:
              property:
                name: name
          - avg:
              property:
                name: name
            count:
              upTo: upTo
            alias: alias
            sum:
              property:
                name: name
        partitionId:
          namespaceId: namespaceId
          projectId: projectId
        gqlQuery:
          namedBindings:
            key:
              cursor: cursor
              value:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          allowLiterals: true
          positionalBindings:
          - cursor: cursor
            value:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
          - cursor: cursor
            value:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
          queryString: queryString
        readOptions:
          readTime: readTime
          readConsistency: READ_CONSISTENCY_UNSPECIFIED
          transaction: transaction
      properties:
        aggregationQuery:
          $ref: '#/components/schemas/AggregationQuery'
        gqlQuery:
          $ref: '#/components/schemas/GqlQuery'
        partitionId:
          $ref: '#/components/schemas/PartitionId'
        readOptions:
          $ref: '#/components/schemas/ReadOptions'
      title: RunAggregationQueryRequest
      type: object
    RunAggregationQueryResponse:
      description: The response for Datastore.RunAggregationQuery.
      example:
        query:
          nestedQuery:
            filter:
              compositeFilter:
                op: OPERATOR_UNSPECIFIED
                filters:
                - null
                - null
              propertyFilter:
                op: OPERATOR_UNSPECIFIED
                property:
                  name: name
                value:
                  keyValue:
                    path:
                    - kind: kind
                      name: name
                      id: id
                    - kind: kind
                      name: name
                      id: id
                    partitionId:
                      namespaceId: namespaceId
                      projectId: projectId
                  timestampValue: timestampValue
                  geoPointValue:
                    latitude: 6.027456183070403
                    longitude: 1.4658129805029452
                  arrayValue:
                    values:
                    - null
                    - null
                  doubleValue: 0.8008281904610115
                  nullValue: NULL_VALUE
                  stringValue: stringValue
                  entityValue: null
                  meaning: 5
                  booleanValue: true
                  integerValue: integerValue
                  excludeFromIndexes: true
                  blobValue: blobValue
            offset: 6
            kind:
            - name: name
            - name: name
            limit: 0
            endCursor: endCursor
            projection:
            - property:
                name: name
            - property:
                name: name
            startCursor: startCursor
            distinctOn:
            - name: name
            - name: name
            order:
            - property:
                name: name
              direction: DIRECTION_UNSPECIFIED
            - property:
                name: name
              direction: DIRECTION_UNSPECIFIED
          aggregations:
          - avg:
              property:
                name: name
            count:
              upTo: upTo
            alias: alias
            sum:
              property:
                name: name
          - avg:
              property:
                name: name
            count:
              upTo: upTo
            alias: alias
            sum:
              property:
                name: name
        batch:
          readTime: readTime
          aggregationResults:
          - aggregateProperties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          - aggregateProperties:
              key:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          moreResults: MORE_RESULTS_TYPE_UNSPECIFIED
      properties:
        batch:
          $ref: '#/components/schemas/AggregationResultBatch'
        query:
          $ref: '#/components/schemas/AggregationQuery'
      title: RunAggregationQueryResponse
      type: object
    RunQueryRequest:
      description: The request for Datastore.RunQuery.
      example:
        partitionId:
          namespaceId: namespaceId
          projectId: projectId
        gqlQuery:
          namedBindings:
            key:
              cursor: cursor
              value:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          allowLiterals: true
          positionalBindings:
          - cursor: cursor
            value:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
          - cursor: cursor
            value:
              keyValue:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              timestampValue: timestampValue
              geoPointValue:
                latitude: 6.027456183070403
                longitude: 1.4658129805029452
              arrayValue:
                values:
                - null
                - null
              doubleValue: 0.8008281904610115
              nullValue: NULL_VALUE
              stringValue: stringValue
              entityValue: null
              meaning: 5
              booleanValue: true
              integerValue: integerValue
              excludeFromIndexes: true
              blobValue: blobValue
          queryString: queryString
        query:
          filter:
            compositeFilter:
              op: OPERATOR_UNSPECIFIED
              filters:
              - null
              - null
            propertyFilter:
              op: OPERATOR_UNSPECIFIED
              property:
                name: name
              value:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          offset: 6
          kind:
          - name: name
          - name: name
          limit: 0
          endCursor: endCursor
          projection:
          - property:
              name: name
          - property:
              name: name
          startCursor: startCursor
          distinctOn:
          - name: name
          - name: name
          order:
          - property:
              name: name
            direction: DIRECTION_UNSPECIFIED
          - property:
              name: name
            direction: DIRECTION_UNSPECIFIED
        readOptions:
          readTime: readTime
          readConsistency: READ_CONSISTENCY_UNSPECIFIED
          transaction: transaction
      properties:
        gqlQuery:
          $ref: '#/components/schemas/GqlQuery'
        partitionId:
          $ref: '#/components/schemas/PartitionId'
        query:
          $ref: '#/components/schemas/Query'
        readOptions:
          $ref: '#/components/schemas/ReadOptions'
      title: RunQueryRequest
      type: object
    RunQueryResponse:
      description: The response for Datastore.RunQuery.
      example:
        query:
          filter:
            compositeFilter:
              op: OPERATOR_UNSPECIFIED
              filters:
              - null
              - null
            propertyFilter:
              op: OPERATOR_UNSPECIFIED
              property:
                name: name
              value:
                keyValue:
                  path:
                  - kind: kind
                    name: name
                    id: id
                  - kind: kind
                    name: name
                    id: id
                  partitionId:
                    namespaceId: namespaceId
                    projectId: projectId
                timestampValue: timestampValue
                geoPointValue:
                  latitude: 6.027456183070403
                  longitude: 1.4658129805029452
                arrayValue:
                  values:
                  - null
                  - null
                doubleValue: 0.8008281904610115
                nullValue: NULL_VALUE
                stringValue: stringValue
                entityValue: null
                meaning: 5
                booleanValue: true
                integerValue: integerValue
                excludeFromIndexes: true
                blobValue: blobValue
          offset: 6
          kind:
          - name: name
          - name: name
          limit: 0
          endCursor: endCursor
          projection:
          - property:
              name: name
          - property:
              name: name
          startCursor: startCursor
          distinctOn:
          - name: name
          - name: name
          order:
          - property:
              name: name
            direction: DIRECTION_UNSPECIFIED
          - property:
              name: name
            direction: DIRECTION_UNSPECIFIED
        batch:
          entityResults:
          - cursor: cursor
            createTime: createTime
            updateTime: updateTime
            version: version
            entity:
              key:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              properties:
                key:
                  keyValue:
                    path:
                    - kind: kind
                      name: name
                      id: id
                    - kind: kind
                      name: name
                      id: id
                    partitionId:
                      namespaceId: namespaceId
                      projectId: projectId
                  timestampValue: timestampValue
                  geoPointValue:
                    latitude: 6.027456183070403
                    longitude: 1.4658129805029452
                  arrayValue:
                    values:
                    - null
                    - null
                  doubleValue: 0.8008281904610115
                  nullValue: NULL_VALUE
                  stringValue: stringValue
                  entityValue: null
                  meaning: 5
                  booleanValue: true
                  integerValue: integerValue
                  excludeFromIndexes: true
                  blobValue: blobValue
          - cursor: cursor
            createTime: createTime
            updateTime: updateTime
            version: version
            entity:
              key:
                path:
                - kind: kind
                  name: name
                  id: id
                - kind: kind
                  name: name
                  id: id
                partitionId:
                  namespaceId: namespaceId
                  projectId: projectId
              properties:
                key:
                  keyValue:
                    path:
                    - kind: kind
                      name: name
                      id: id
                    - kind: kind
                      name: name
                      id: id
                    partitionId:
                      namespaceId: namespaceId
                      projectId: projectId
                  timestampValue: timestampValue
                  geoPointValue:
                    latitude: 6.027456183070403
                    longitude: 1.4658129805029452
                  arrayValue:
                    values:
                    - null
                    - null
                  doubleValue: 0.8008281904610115
                  nullValue: NULL_VALUE
                  stringValue: stringValue
                  entityValue: null
                  meaning: 5
                  booleanValue: true
                  integerValue: integerValue
                  excludeFromIndexes: true
                  blobValue: blobValue
          readTime: readTime
          endCursor: endCursor
          skippedCursor: skippedCursor
          snapshotVersion: snapshotVersion
          skippedResults: 0
          moreResults: MORE_RESULTS_TYPE_UNSPECIFIED
          entityResultType: RESULT_TYPE_UNSPECIFIED
      properties:
        batch:
          $ref: '#/components/schemas/QueryResultBatch'
        query:
          $ref: '#/components/schemas/Query'
      title: RunQueryResponse
      type: object
    Sum:
      description: "Sum of the values of the requested property. * Only numeric values\
        \ will be aggregated. All non-numeric values including `NULL` are skipped.\
        \ * If the aggregated values contain `NaN`, returns `NaN`. Infinity math follows\
        \ IEEE-754 standards. * If the aggregated value set is empty, returns 0. *\
        \ Returns a 64-bit integer if all aggregated numbers are integers and the\
        \ sum result does not overflow. Otherwise, the result is returned as a double.\
        \ Note that even if all the aggregated values are integers, the result is\
        \ returned as a double if it cannot fit within a 64-bit signed integer. When\
        \ this occurs, the returned value will lose precision. * When underflow occurs,\
        \ floating-point aggregation is non-deterministic. This means that running\
        \ the same query repeatedly without any changes to the underlying values could\
        \ produce slightly different results each time. In those cases, values should\
        \ be stored as integers over floating-point numbers."
      example:
        property:
          name: name
      properties:
        property:
          $ref: '#/components/schemas/PropertyReference'
      title: Sum
      type: object
    TransactionOptions:
      description: Options for beginning a new transaction. Transactions can be created
        explicitly with calls to Datastore.BeginTransaction or implicitly by setting
        ReadOptions.new_transaction in read requests.
      example:
        readWrite:
          previousTransaction: previousTransaction
        readOnly:
          readTime: readTime
      properties:
        readOnly:
          $ref: '#/components/schemas/ReadOnly'
        readWrite:
          $ref: '#/components/schemas/ReadWrite'
      title: TransactionOptions
      type: object
    Value:
      description: A message that can hold any of the supported value types and associated
        metadata.
      example:
        keyValue:
          path:
          - kind: kind
            name: name
            id: id
          - kind: kind
            name: name
            id: id
          partitionId:
            namespaceId: namespaceId
            projectId: projectId
        timestampValue: timestampValue
        geoPointValue:
          latitude: 6.027456183070403
          longitude: 1.4658129805029452
        arrayValue:
          values:
          - null
          - null
        doubleValue: 0.8008281904610115
        nullValue: NULL_VALUE
        stringValue: stringValue
        entityValue: null
        meaning: 5
        booleanValue: true
        integerValue: integerValue
        excludeFromIndexes: true
        blobValue: blobValue
      properties:
        arrayValue:
          $ref: '#/components/schemas/ArrayValue'
        blobValue:
          description: "A blob value. May have at most 1,000,000 bytes. When `exclude_from_indexes`\
            \ is false, may have at most 1500 bytes. In JSON requests, must be base64-encoded."
          format: byte
          title: blobValue
          type: string
        booleanValue:
          description: A boolean value.
          title: booleanValue
          type: boolean
        doubleValue:
          description: A double value.
          format: double
          title: doubleValue
          type: number
        entityValue:
          $ref: '#/components/schemas/Entity'
        excludeFromIndexes:
          description: If the value should be excluded from all indexes including
            those defined explicitly.
          title: excludeFromIndexes
          type: boolean
        geoPointValue:
          $ref: '#/components/schemas/LatLng'
        integerValue:
          description: An integer value.
          format: int64
          title: integerValue
          type: string
        keyValue:
          $ref: '#/components/schemas/Key'
        meaning:
          description: The `meaning` field should only be populated for backwards
            compatibility.
          format: int32
          title: meaning
          type: integer
        nullValue:
          description: A null value.
          enum:
          - NULL_VALUE
          title: nullValue
          type: string
        stringValue:
          description: "A UTF-8 encoded string value. When `exclude_from_indexes`\
            \ is false (it is indexed) , may have at most 1500 bytes. Otherwise, may\
            \ be set to at most 1,000,000 bytes."
          title: stringValue
          type: string
        timestampValue:
          description: "A timestamp value. When stored in the Datastore, precise only\
            \ to microseconds; any additional precision is rounded down."
          format: google-datetime
          title: timestampValue
          type: string
      title: Value
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/datastore: View and manage your Google
              Cloud Datastore data
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/datastore: View and manage your Google
              Cloud Datastore data
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
