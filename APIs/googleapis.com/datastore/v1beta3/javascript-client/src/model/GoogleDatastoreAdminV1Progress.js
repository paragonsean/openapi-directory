/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleDatastoreAdminV1Progress model module.
 * @module model/GoogleDatastoreAdminV1Progress
 * @version v1beta3
 */
class GoogleDatastoreAdminV1Progress {
    /**
     * Constructs a new <code>GoogleDatastoreAdminV1Progress</code>.
     * Measures the progress of a particular metric.
     * @alias module:model/GoogleDatastoreAdminV1Progress
     */
    constructor() { 
        
        GoogleDatastoreAdminV1Progress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleDatastoreAdminV1Progress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleDatastoreAdminV1Progress} obj Optional instance to populate.
     * @return {module:model/GoogleDatastoreAdminV1Progress} The populated <code>GoogleDatastoreAdminV1Progress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleDatastoreAdminV1Progress();

            if (data.hasOwnProperty('workCompleted')) {
                obj['workCompleted'] = ApiClient.convertToType(data['workCompleted'], 'String');
            }
            if (data.hasOwnProperty('workEstimated')) {
                obj['workEstimated'] = ApiClient.convertToType(data['workEstimated'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleDatastoreAdminV1Progress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleDatastoreAdminV1Progress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['workCompleted'] && !(typeof data['workCompleted'] === 'string' || data['workCompleted'] instanceof String)) {
            throw new Error("Expected the field `workCompleted` to be a primitive type in the JSON string but got " + data['workCompleted']);
        }
        // ensure the json data is a string
        if (data['workEstimated'] && !(typeof data['workEstimated'] === 'string' || data['workEstimated'] instanceof String)) {
            throw new Error("Expected the field `workEstimated` to be a primitive type in the JSON string but got " + data['workEstimated']);
        }

        return true;
    }


}



/**
 * The amount of work that has been completed. Note that this may be greater than work_estimated.
 * @member {String} workCompleted
 */
GoogleDatastoreAdminV1Progress.prototype['workCompleted'] = undefined;

/**
 * An estimate of how much work needs to be performed. May be zero if the work estimate is unavailable.
 * @member {String} workEstimated
 */
GoogleDatastoreAdminV1Progress.prototype['workEstimated'] = undefined;






export default GoogleDatastoreAdminV1Progress;

