/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPartitionId.h
 *
 * A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID. Partition dimensions: - May be &#x60;\&quot;\&quot;&#x60;. - Must be valid UTF-8 bytes. - Must have values that match regex &#x60;[A-Za-z\\d\\.\\-_]{1,100}&#x60; If the value of any dimension matches regex &#x60;__.*__&#x60;, the partition is reserved/read-only. A reserved/read-only partition ID is forbidden in certain documented contexts. Foreign partition IDs (in which the project ID does not match the context project ID ) are discouraged. Reads and writes of foreign partition IDs may fail if the project is not in an active state.
 */

#ifndef OAIPartitionId_H
#define OAIPartitionId_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPartitionId : public OAIObject {
public:
    OAIPartitionId();
    OAIPartitionId(QString json);
    ~OAIPartitionId() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNamespaceId() const;
    void setNamespaceId(const QString &namespace_id);
    bool is_namespace_id_Set() const;
    bool is_namespace_id_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_namespace_id;
    bool m_namespace_id_isSet;
    bool m_namespace_id_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPartitionId)

#endif // OAIPartitionId_H
