/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilter.h
 *
 * A holder for any type of filter.
 */

#ifndef OAIFilter_H
#define OAIFilter_H

#include <QJsonObject>

#include "OAICompositeFilter.h"
#include "OAIPropertyFilter.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICompositeFilter;
class OAIPropertyFilter;

class OAIFilter : public OAIObject {
public:
    OAIFilter();
    OAIFilter(QString json);
    ~OAIFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICompositeFilter getCompositeFilter() const;
    void setCompositeFilter(const OAICompositeFilter &composite_filter);
    bool is_composite_filter_Set() const;
    bool is_composite_filter_Valid() const;

    OAIPropertyFilter getPropertyFilter() const;
    void setPropertyFilter(const OAIPropertyFilter &property_filter);
    bool is_property_filter_Set() const;
    bool is_property_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICompositeFilter m_composite_filter;
    bool m_composite_filter_isSet;
    bool m_composite_filter_isValid;

    OAIPropertyFilter m_property_filter;
    bool m_property_filter_isSet;
    bool m_property_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilter)

#endif // OAIFilter_H
