/**
 * Cloud Datastore API
 * Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 
 *
 * The version of the OpenAPI document: v1beta3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommitRequest.h
 *
 * The request for Datastore.Commit.
 */

#ifndef OAICommitRequest_H
#define OAICommitRequest_H

#include <QJsonObject>

#include "OAIMutation.h"
#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMutation;

class OAICommitRequest : public OAIObject {
public:
    OAICommitRequest();
    OAICommitRequest(QString json);
    ~OAICommitRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    QList<OAIMutation> getMutations() const;
    void setMutations(const QList<OAIMutation> &mutations);
    bool is_mutations_Set() const;
    bool is_mutations_Valid() const;

    QByteArray getTransaction() const;
    void setTransaction(const QByteArray &transaction);
    bool is_transaction_Set() const;
    bool is_transaction_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    QList<OAIMutation> m_mutations;
    bool m_mutations_isSet;
    bool m_mutations_isValid;

    QByteArray m_transaction;
    bool m_transaction_isSet;
    bool m_transaction_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommitRequest)

#endif // OAICommitRequest_H
