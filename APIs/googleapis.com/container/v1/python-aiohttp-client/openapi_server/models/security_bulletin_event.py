# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SecurityBulletinEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, affected_supported_minors: List[str]=None, brief_description: str=None, bulletin_id: str=None, bulletin_uri: str=None, cve_ids: List[str]=None, manual_steps_required: bool=None, patched_versions: List[str]=None, resource_type_affected: str=None, severity: str=None, suggested_upgrade_target: str=None):
        """SecurityBulletinEvent - a model defined in OpenAPI

        :param affected_supported_minors: The affected_supported_minors of this SecurityBulletinEvent.
        :param brief_description: The brief_description of this SecurityBulletinEvent.
        :param bulletin_id: The bulletin_id of this SecurityBulletinEvent.
        :param bulletin_uri: The bulletin_uri of this SecurityBulletinEvent.
        :param cve_ids: The cve_ids of this SecurityBulletinEvent.
        :param manual_steps_required: The manual_steps_required of this SecurityBulletinEvent.
        :param patched_versions: The patched_versions of this SecurityBulletinEvent.
        :param resource_type_affected: The resource_type_affected of this SecurityBulletinEvent.
        :param severity: The severity of this SecurityBulletinEvent.
        :param suggested_upgrade_target: The suggested_upgrade_target of this SecurityBulletinEvent.
        """
        self.openapi_types = {
            'affected_supported_minors': List[str],
            'brief_description': str,
            'bulletin_id': str,
            'bulletin_uri': str,
            'cve_ids': List[str],
            'manual_steps_required': bool,
            'patched_versions': List[str],
            'resource_type_affected': str,
            'severity': str,
            'suggested_upgrade_target': str
        }

        self.attribute_map = {
            'affected_supported_minors': 'affectedSupportedMinors',
            'brief_description': 'briefDescription',
            'bulletin_id': 'bulletinId',
            'bulletin_uri': 'bulletinUri',
            'cve_ids': 'cveIds',
            'manual_steps_required': 'manualStepsRequired',
            'patched_versions': 'patchedVersions',
            'resource_type_affected': 'resourceTypeAffected',
            'severity': 'severity',
            'suggested_upgrade_target': 'suggestedUpgradeTarget'
        }

        self._affected_supported_minors = affected_supported_minors
        self._brief_description = brief_description
        self._bulletin_id = bulletin_id
        self._bulletin_uri = bulletin_uri
        self._cve_ids = cve_ids
        self._manual_steps_required = manual_steps_required
        self._patched_versions = patched_versions
        self._resource_type_affected = resource_type_affected
        self._severity = severity
        self._suggested_upgrade_target = suggested_upgrade_target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecurityBulletinEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecurityBulletinEvent of this SecurityBulletinEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def affected_supported_minors(self):
        """Gets the affected_supported_minors of this SecurityBulletinEvent.

        The GKE minor versions affected by this vulnerability.

        :return: The affected_supported_minors of this SecurityBulletinEvent.
        :rtype: List[str]
        """
        return self._affected_supported_minors

    @affected_supported_minors.setter
    def affected_supported_minors(self, affected_supported_minors):
        """Sets the affected_supported_minors of this SecurityBulletinEvent.

        The GKE minor versions affected by this vulnerability.

        :param affected_supported_minors: The affected_supported_minors of this SecurityBulletinEvent.
        :type affected_supported_minors: List[str]
        """

        self._affected_supported_minors = affected_supported_minors

    @property
    def brief_description(self):
        """Gets the brief_description of this SecurityBulletinEvent.

        A brief description of the bulletin. See the bulletin pointed to by the bulletin_uri field for an expanded description.

        :return: The brief_description of this SecurityBulletinEvent.
        :rtype: str
        """
        return self._brief_description

    @brief_description.setter
    def brief_description(self, brief_description):
        """Sets the brief_description of this SecurityBulletinEvent.

        A brief description of the bulletin. See the bulletin pointed to by the bulletin_uri field for an expanded description.

        :param brief_description: The brief_description of this SecurityBulletinEvent.
        :type brief_description: str
        """

        self._brief_description = brief_description

    @property
    def bulletin_id(self):
        """Gets the bulletin_id of this SecurityBulletinEvent.

        The ID of the bulletin corresponding to the vulnerability.

        :return: The bulletin_id of this SecurityBulletinEvent.
        :rtype: str
        """
        return self._bulletin_id

    @bulletin_id.setter
    def bulletin_id(self, bulletin_id):
        """Sets the bulletin_id of this SecurityBulletinEvent.

        The ID of the bulletin corresponding to the vulnerability.

        :param bulletin_id: The bulletin_id of this SecurityBulletinEvent.
        :type bulletin_id: str
        """

        self._bulletin_id = bulletin_id

    @property
    def bulletin_uri(self):
        """Gets the bulletin_uri of this SecurityBulletinEvent.

        The URI link to the bulletin on the website for more information.

        :return: The bulletin_uri of this SecurityBulletinEvent.
        :rtype: str
        """
        return self._bulletin_uri

    @bulletin_uri.setter
    def bulletin_uri(self, bulletin_uri):
        """Sets the bulletin_uri of this SecurityBulletinEvent.

        The URI link to the bulletin on the website for more information.

        :param bulletin_uri: The bulletin_uri of this SecurityBulletinEvent.
        :type bulletin_uri: str
        """

        self._bulletin_uri = bulletin_uri

    @property
    def cve_ids(self):
        """Gets the cve_ids of this SecurityBulletinEvent.

        The CVEs associated with this bulletin.

        :return: The cve_ids of this SecurityBulletinEvent.
        :rtype: List[str]
        """
        return self._cve_ids

    @cve_ids.setter
    def cve_ids(self, cve_ids):
        """Sets the cve_ids of this SecurityBulletinEvent.

        The CVEs associated with this bulletin.

        :param cve_ids: The cve_ids of this SecurityBulletinEvent.
        :type cve_ids: List[str]
        """

        self._cve_ids = cve_ids

    @property
    def manual_steps_required(self):
        """Gets the manual_steps_required of this SecurityBulletinEvent.

        If this field is specified, it means there are manual steps that the user must take to make their clusters safe.

        :return: The manual_steps_required of this SecurityBulletinEvent.
        :rtype: bool
        """
        return self._manual_steps_required

    @manual_steps_required.setter
    def manual_steps_required(self, manual_steps_required):
        """Sets the manual_steps_required of this SecurityBulletinEvent.

        If this field is specified, it means there are manual steps that the user must take to make their clusters safe.

        :param manual_steps_required: The manual_steps_required of this SecurityBulletinEvent.
        :type manual_steps_required: bool
        """

        self._manual_steps_required = manual_steps_required

    @property
    def patched_versions(self):
        """Gets the patched_versions of this SecurityBulletinEvent.

        The GKE versions where this vulnerability is patched.

        :return: The patched_versions of this SecurityBulletinEvent.
        :rtype: List[str]
        """
        return self._patched_versions

    @patched_versions.setter
    def patched_versions(self, patched_versions):
        """Sets the patched_versions of this SecurityBulletinEvent.

        The GKE versions where this vulnerability is patched.

        :param patched_versions: The patched_versions of this SecurityBulletinEvent.
        :type patched_versions: List[str]
        """

        self._patched_versions = patched_versions

    @property
    def resource_type_affected(self):
        """Gets the resource_type_affected of this SecurityBulletinEvent.

        The resource type (node/control plane) that has the vulnerability. Multiple notifications (1 notification per resource type) will be sent for a vulnerability that affects > 1 resource type.

        :return: The resource_type_affected of this SecurityBulletinEvent.
        :rtype: str
        """
        return self._resource_type_affected

    @resource_type_affected.setter
    def resource_type_affected(self, resource_type_affected):
        """Sets the resource_type_affected of this SecurityBulletinEvent.

        The resource type (node/control plane) that has the vulnerability. Multiple notifications (1 notification per resource type) will be sent for a vulnerability that affects > 1 resource type.

        :param resource_type_affected: The resource_type_affected of this SecurityBulletinEvent.
        :type resource_type_affected: str
        """

        self._resource_type_affected = resource_type_affected

    @property
    def severity(self):
        """Gets the severity of this SecurityBulletinEvent.

        The severity of this bulletin as it relates to GKE.

        :return: The severity of this SecurityBulletinEvent.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this SecurityBulletinEvent.

        The severity of this bulletin as it relates to GKE.

        :param severity: The severity of this SecurityBulletinEvent.
        :type severity: str
        """

        self._severity = severity

    @property
    def suggested_upgrade_target(self):
        """Gets the suggested_upgrade_target of this SecurityBulletinEvent.

        This represents a version selected from the patched_versions field that the cluster receiving this notification should most likely want to upgrade to based on its current version. Note that if this notification is being received by a given cluster, it means that this version is currently available as an upgrade target in that cluster's location.

        :return: The suggested_upgrade_target of this SecurityBulletinEvent.
        :rtype: str
        """
        return self._suggested_upgrade_target

    @suggested_upgrade_target.setter
    def suggested_upgrade_target(self, suggested_upgrade_target):
        """Sets the suggested_upgrade_target of this SecurityBulletinEvent.

        This represents a version selected from the patched_versions field that the cluster receiving this notification should most likely want to upgrade to based on its current version. Note that if this notification is being received by a given cluster, it means that this version is currently available as an upgrade target in that cluster's location.

        :param suggested_upgrade_target: The suggested_upgrade_target of this SecurityBulletinEvent.
        :type suggested_upgrade_target: str
        """

        self._suggested_upgrade_target = suggested_upgrade_target
