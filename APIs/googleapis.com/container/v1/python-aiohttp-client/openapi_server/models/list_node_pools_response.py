# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.node_pool import NodePool
from openapi_server import util


class ListNodePoolsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_pools: List[NodePool]=None):
        """ListNodePoolsResponse - a model defined in OpenAPI

        :param node_pools: The node_pools of this ListNodePoolsResponse.
        """
        self.openapi_types = {
            'node_pools': List[NodePool]
        }

        self.attribute_map = {
            'node_pools': 'nodePools'
        }

        self._node_pools = node_pools

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListNodePoolsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListNodePoolsResponse of this ListNodePoolsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_pools(self):
        """Gets the node_pools of this ListNodePoolsResponse.

        A list of node pools for a cluster.

        :return: The node_pools of this ListNodePoolsResponse.
        :rtype: List[NodePool]
        """
        return self._node_pools

    @node_pools.setter
    def node_pools(self, node_pools):
        """Sets the node_pools of this ListNodePoolsResponse.

        A list of node pools for a cluster.

        :param node_pools: The node_pools of this ListNodePoolsResponse.
        :type node_pools: List[NodePool]
        """

        self._node_pools = node_pools
