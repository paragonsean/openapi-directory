# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DailyMaintenanceWindow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, start_time: str=None):
        """DailyMaintenanceWindow - a model defined in OpenAPI

        :param duration: The duration of this DailyMaintenanceWindow.
        :param start_time: The start_time of this DailyMaintenanceWindow.
        """
        self.openapi_types = {
            'duration': str,
            'start_time': str
        }

        self.attribute_map = {
            'duration': 'duration',
            'start_time': 'startTime'
        }

        self._duration = duration
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DailyMaintenanceWindow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DailyMaintenanceWindow of this DailyMaintenanceWindow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this DailyMaintenanceWindow.

        [Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario. Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format \"PTnHnMnS\".

        :return: The duration of this DailyMaintenanceWindow.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this DailyMaintenanceWindow.

        [Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario. Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format \"PTnHnMnS\".

        :param duration: The duration of this DailyMaintenanceWindow.
        :type duration: str
        """

        self._duration = duration

    @property
    def start_time(self):
        """Gets the start_time of this DailyMaintenanceWindow.

        Time within the maintenance window to start the maintenance operations. Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format \"HH:MM\", where HH : [00-23] and MM : [00-59] GMT.

        :return: The start_time of this DailyMaintenanceWindow.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this DailyMaintenanceWindow.

        Time within the maintenance window to start the maintenance operations. Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format \"HH:MM\", where HH : [00-23] and MM : [00-59] GMT.

        :param start_time: The start_time of this DailyMaintenanceWindow.
        :type start_time: str
        """

        self._start_time = start_time
