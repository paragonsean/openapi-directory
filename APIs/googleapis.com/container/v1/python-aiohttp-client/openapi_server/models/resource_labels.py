# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceLabels(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, labels: Dict[str, str]=None):
        """ResourceLabels - a model defined in OpenAPI

        :param labels: The labels of this ResourceLabels.
        """
        self.openapi_types = {
            'labels': Dict[str, str]
        }

        self.attribute_map = {
            'labels': 'labels'
        }

        self._labels = labels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceLabels':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceLabels of this ResourceLabels.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def labels(self):
        """Gets the labels of this ResourceLabels.

        Map of node label keys and node label values.

        :return: The labels of this ResourceLabels.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this ResourceLabels.

        Map of node label keys and node label values.

        :param labels: The labels of this ResourceLabels.
        :type labels: Dict[str, str]
        """

        self._labels = labels
