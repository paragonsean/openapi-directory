# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShieldedInstanceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_integrity_monitoring: bool=None, enable_secure_boot: bool=None):
        """ShieldedInstanceConfig - a model defined in OpenAPI

        :param enable_integrity_monitoring: The enable_integrity_monitoring of this ShieldedInstanceConfig.
        :param enable_secure_boot: The enable_secure_boot of this ShieldedInstanceConfig.
        """
        self.openapi_types = {
            'enable_integrity_monitoring': bool,
            'enable_secure_boot': bool
        }

        self.attribute_map = {
            'enable_integrity_monitoring': 'enableIntegrityMonitoring',
            'enable_secure_boot': 'enableSecureBoot'
        }

        self._enable_integrity_monitoring = enable_integrity_monitoring
        self._enable_secure_boot = enable_secure_boot

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShieldedInstanceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShieldedInstanceConfig of this ShieldedInstanceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_integrity_monitoring(self):
        """Gets the enable_integrity_monitoring of this ShieldedInstanceConfig.

        Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.

        :return: The enable_integrity_monitoring of this ShieldedInstanceConfig.
        :rtype: bool
        """
        return self._enable_integrity_monitoring

    @enable_integrity_monitoring.setter
    def enable_integrity_monitoring(self, enable_integrity_monitoring):
        """Sets the enable_integrity_monitoring of this ShieldedInstanceConfig.

        Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.

        :param enable_integrity_monitoring: The enable_integrity_monitoring of this ShieldedInstanceConfig.
        :type enable_integrity_monitoring: bool
        """

        self._enable_integrity_monitoring = enable_integrity_monitoring

    @property
    def enable_secure_boot(self):
        """Gets the enable_secure_boot of this ShieldedInstanceConfig.

        Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.

        :return: The enable_secure_boot of this ShieldedInstanceConfig.
        :rtype: bool
        """
        return self._enable_secure_boot

    @enable_secure_boot.setter
    def enable_secure_boot(self, enable_secure_boot):
        """Sets the enable_secure_boot of this ShieldedInstanceConfig.

        Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.

        :param enable_secure_boot: The enable_secure_boot of this ShieldedInstanceConfig.
        :type enable_secure_boot: bool
        """

        self._enable_secure_boot = enable_secure_boot
