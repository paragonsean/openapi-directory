# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HttpLoadBalancing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disabled: bool=None):
        """HttpLoadBalancing - a model defined in OpenAPI

        :param disabled: The disabled of this HttpLoadBalancing.
        """
        self.openapi_types = {
            'disabled': bool
        }

        self.attribute_map = {
            'disabled': 'disabled'
        }

        self._disabled = disabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpLoadBalancing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpLoadBalancing of this HttpLoadBalancing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disabled(self):
        """Gets the disabled of this HttpLoadBalancing.

        Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.

        :return: The disabled of this HttpLoadBalancing.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this HttpLoadBalancing.

        Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.

        :param disabled: The disabled of this HttpLoadBalancing.
        :type disabled: bool
        """

        self._disabled = disabled
