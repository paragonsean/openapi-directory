# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MeshCertificates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_certificates: bool=None):
        """MeshCertificates - a model defined in OpenAPI

        :param enable_certificates: The enable_certificates of this MeshCertificates.
        """
        self.openapi_types = {
            'enable_certificates': bool
        }

        self.attribute_map = {
            'enable_certificates': 'enableCertificates'
        }

        self._enable_certificates = enable_certificates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MeshCertificates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MeshCertificates of this MeshCertificates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_certificates(self):
        """Gets the enable_certificates of this MeshCertificates.

        enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty).

        :return: The enable_certificates of this MeshCertificates.
        :rtype: bool
        """
        return self._enable_certificates

    @enable_certificates.setter
    def enable_certificates(self, enable_certificates):
        """Sets the enable_certificates of this MeshCertificates.

        enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty).

        :param enable_certificates: The enable_certificates of this MeshCertificates.
        :type enable_certificates: bool
        """

        self._enable_certificates = enable_certificates
