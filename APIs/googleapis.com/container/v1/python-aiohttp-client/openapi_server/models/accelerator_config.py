# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gpu_driver_installation_config import GPUDriverInstallationConfig
from openapi_server.models.gpu_sharing_config import GPUSharingConfig
from openapi_server import util


class AcceleratorConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator_count: str=None, accelerator_type: str=None, gpu_driver_installation_config: GPUDriverInstallationConfig=None, gpu_partition_size: str=None, gpu_sharing_config: GPUSharingConfig=None):
        """AcceleratorConfig - a model defined in OpenAPI

        :param accelerator_count: The accelerator_count of this AcceleratorConfig.
        :param accelerator_type: The accelerator_type of this AcceleratorConfig.
        :param gpu_driver_installation_config: The gpu_driver_installation_config of this AcceleratorConfig.
        :param gpu_partition_size: The gpu_partition_size of this AcceleratorConfig.
        :param gpu_sharing_config: The gpu_sharing_config of this AcceleratorConfig.
        """
        self.openapi_types = {
            'accelerator_count': str,
            'accelerator_type': str,
            'gpu_driver_installation_config': GPUDriverInstallationConfig,
            'gpu_partition_size': str,
            'gpu_sharing_config': GPUSharingConfig
        }

        self.attribute_map = {
            'accelerator_count': 'acceleratorCount',
            'accelerator_type': 'acceleratorType',
            'gpu_driver_installation_config': 'gpuDriverInstallationConfig',
            'gpu_partition_size': 'gpuPartitionSize',
            'gpu_sharing_config': 'gpuSharingConfig'
        }

        self._accelerator_count = accelerator_count
        self._accelerator_type = accelerator_type
        self._gpu_driver_installation_config = gpu_driver_installation_config
        self._gpu_partition_size = gpu_partition_size
        self._gpu_sharing_config = gpu_sharing_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcceleratorConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcceleratorConfig of this AcceleratorConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator_count(self):
        """Gets the accelerator_count of this AcceleratorConfig.

        The number of the accelerator cards exposed to an instance.

        :return: The accelerator_count of this AcceleratorConfig.
        :rtype: str
        """
        return self._accelerator_count

    @accelerator_count.setter
    def accelerator_count(self, accelerator_count):
        """Sets the accelerator_count of this AcceleratorConfig.

        The number of the accelerator cards exposed to an instance.

        :param accelerator_count: The accelerator_count of this AcceleratorConfig.
        :type accelerator_count: str
        """

        self._accelerator_count = accelerator_count

    @property
    def accelerator_type(self):
        """Gets the accelerator_type of this AcceleratorConfig.

        The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)

        :return: The accelerator_type of this AcceleratorConfig.
        :rtype: str
        """
        return self._accelerator_type

    @accelerator_type.setter
    def accelerator_type(self, accelerator_type):
        """Sets the accelerator_type of this AcceleratorConfig.

        The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)

        :param accelerator_type: The accelerator_type of this AcceleratorConfig.
        :type accelerator_type: str
        """

        self._accelerator_type = accelerator_type

    @property
    def gpu_driver_installation_config(self):
        """Gets the gpu_driver_installation_config of this AcceleratorConfig.


        :return: The gpu_driver_installation_config of this AcceleratorConfig.
        :rtype: GPUDriverInstallationConfig
        """
        return self._gpu_driver_installation_config

    @gpu_driver_installation_config.setter
    def gpu_driver_installation_config(self, gpu_driver_installation_config):
        """Sets the gpu_driver_installation_config of this AcceleratorConfig.


        :param gpu_driver_installation_config: The gpu_driver_installation_config of this AcceleratorConfig.
        :type gpu_driver_installation_config: GPUDriverInstallationConfig
        """

        self._gpu_driver_installation_config = gpu_driver_installation_config

    @property
    def gpu_partition_size(self):
        """Gets the gpu_partition_size of this AcceleratorConfig.

        Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).

        :return: The gpu_partition_size of this AcceleratorConfig.
        :rtype: str
        """
        return self._gpu_partition_size

    @gpu_partition_size.setter
    def gpu_partition_size(self, gpu_partition_size):
        """Sets the gpu_partition_size of this AcceleratorConfig.

        Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).

        :param gpu_partition_size: The gpu_partition_size of this AcceleratorConfig.
        :type gpu_partition_size: str
        """

        self._gpu_partition_size = gpu_partition_size

    @property
    def gpu_sharing_config(self):
        """Gets the gpu_sharing_config of this AcceleratorConfig.


        :return: The gpu_sharing_config of this AcceleratorConfig.
        :rtype: GPUSharingConfig
        """
        return self._gpu_sharing_config

    @gpu_sharing_config.setter
    def gpu_sharing_config(self, gpu_sharing_config):
        """Sets the gpu_sharing_config of this AcceleratorConfig.


        :param gpu_sharing_config: The gpu_sharing_config of this AcceleratorConfig.
        :type gpu_sharing_config: GPUSharingConfig
        """

        self._gpu_sharing_config = gpu_sharing_config
