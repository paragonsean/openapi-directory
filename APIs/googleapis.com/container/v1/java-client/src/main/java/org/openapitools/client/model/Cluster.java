/*
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AddonsConfig;
import org.openapitools.client.model.AuthenticatorGroupsConfig;
import org.openapitools.client.model.Autopilot;
import org.openapitools.client.model.BinaryAuthorization;
import org.openapitools.client.model.ClusterAutoscaling;
import org.openapitools.client.model.ConfidentialNodes;
import org.openapitools.client.model.CostManagementConfig;
import org.openapitools.client.model.DatabaseEncryption;
import org.openapitools.client.model.EnterpriseConfig;
import org.openapitools.client.model.Fleet;
import org.openapitools.client.model.IPAllocationPolicy;
import org.openapitools.client.model.IdentityServiceConfig;
import org.openapitools.client.model.K8sBetaAPIConfig;
import org.openapitools.client.model.LegacyAbac;
import org.openapitools.client.model.LoggingConfig;
import org.openapitools.client.model.MaintenancePolicy;
import org.openapitools.client.model.MasterAuth;
import org.openapitools.client.model.MasterAuthorizedNetworksConfig;
import org.openapitools.client.model.MaxPodsConstraint;
import org.openapitools.client.model.MeshCertificates;
import org.openapitools.client.model.MonitoringConfig;
import org.openapitools.client.model.NetworkConfig;
import org.openapitools.client.model.NetworkPolicy;
import org.openapitools.client.model.NodeConfig;
import org.openapitools.client.model.NodePool;
import org.openapitools.client.model.NodePoolAutoConfig;
import org.openapitools.client.model.NodePoolDefaults;
import org.openapitools.client.model.NotificationConfig;
import org.openapitools.client.model.ParentProductConfig;
import org.openapitools.client.model.PrivateClusterConfig;
import org.openapitools.client.model.ReleaseChannel;
import org.openapitools.client.model.ResourceUsageExportConfig;
import org.openapitools.client.model.SecurityPostureConfig;
import org.openapitools.client.model.ShieldedNodes;
import org.openapitools.client.model.StatusCondition;
import org.openapitools.client.model.VerticalPodAutoscaling;
import org.openapitools.client.model.WorkloadIdentityConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A Google Kubernetes Engine cluster.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:25.935819-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Cluster {
  public static final String SERIALIZED_NAME_ADDONS_CONFIG = "addonsConfig";
  @SerializedName(SERIALIZED_NAME_ADDONS_CONFIG)
  private AddonsConfig addonsConfig;

  public static final String SERIALIZED_NAME_AUTHENTICATOR_GROUPS_CONFIG = "authenticatorGroupsConfig";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATOR_GROUPS_CONFIG)
  private AuthenticatorGroupsConfig authenticatorGroupsConfig;

  public static final String SERIALIZED_NAME_AUTOPILOT = "autopilot";
  @SerializedName(SERIALIZED_NAME_AUTOPILOT)
  private Autopilot autopilot;

  public static final String SERIALIZED_NAME_AUTOSCALING = "autoscaling";
  @SerializedName(SERIALIZED_NAME_AUTOSCALING)
  private ClusterAutoscaling autoscaling;

  public static final String SERIALIZED_NAME_BINARY_AUTHORIZATION = "binaryAuthorization";
  @SerializedName(SERIALIZED_NAME_BINARY_AUTHORIZATION)
  private BinaryAuthorization binaryAuthorization;

  public static final String SERIALIZED_NAME_CLUSTER_IPV4_CIDR = "clusterIpv4Cidr";
  @SerializedName(SERIALIZED_NAME_CLUSTER_IPV4_CIDR)
  private String clusterIpv4Cidr;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<StatusCondition> conditions = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONFIDENTIAL_NODES = "confidentialNodes";
  @SerializedName(SERIALIZED_NAME_CONFIDENTIAL_NODES)
  private ConfidentialNodes confidentialNodes;

  public static final String SERIALIZED_NAME_COST_MANAGEMENT_CONFIG = "costManagementConfig";
  @SerializedName(SERIALIZED_NAME_COST_MANAGEMENT_CONFIG)
  private CostManagementConfig costManagementConfig;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_CURRENT_MASTER_VERSION = "currentMasterVersion";
  @SerializedName(SERIALIZED_NAME_CURRENT_MASTER_VERSION)
  private String currentMasterVersion;

  public static final String SERIALIZED_NAME_CURRENT_NODE_COUNT = "currentNodeCount";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CURRENT_NODE_COUNT)
  private Integer currentNodeCount;

  public static final String SERIALIZED_NAME_CURRENT_NODE_VERSION = "currentNodeVersion";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CURRENT_NODE_VERSION)
  private String currentNodeVersion;

  public static final String SERIALIZED_NAME_DATABASE_ENCRYPTION = "databaseEncryption";
  @SerializedName(SERIALIZED_NAME_DATABASE_ENCRYPTION)
  private DatabaseEncryption databaseEncryption;

  public static final String SERIALIZED_NAME_DEFAULT_MAX_PODS_CONSTRAINT = "defaultMaxPodsConstraint";
  @SerializedName(SERIALIZED_NAME_DEFAULT_MAX_PODS_CONSTRAINT)
  private MaxPodsConstraint defaultMaxPodsConstraint;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENABLE_K8S_BETA_APIS = "enableK8sBetaApis";
  @SerializedName(SERIALIZED_NAME_ENABLE_K8S_BETA_APIS)
  private K8sBetaAPIConfig enableK8sBetaApis;

  public static final String SERIALIZED_NAME_ENABLE_KUBERNETES_ALPHA = "enableKubernetesAlpha";
  @SerializedName(SERIALIZED_NAME_ENABLE_KUBERNETES_ALPHA)
  private Boolean enableKubernetesAlpha;

  public static final String SERIALIZED_NAME_ENABLE_TPU = "enableTpu";
  @SerializedName(SERIALIZED_NAME_ENABLE_TPU)
  private Boolean enableTpu;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_ENTERPRISE_CONFIG = "enterpriseConfig";
  @SerializedName(SERIALIZED_NAME_ENTERPRISE_CONFIG)
  private EnterpriseConfig enterpriseConfig;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_EXPIRE_TIME = "expireTime";
  @SerializedName(SERIALIZED_NAME_EXPIRE_TIME)
  private String expireTime;

  public static final String SERIALIZED_NAME_FLEET = "fleet";
  @SerializedName(SERIALIZED_NAME_FLEET)
  private Fleet fleet;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IDENTITY_SERVICE_CONFIG = "identityServiceConfig";
  @SerializedName(SERIALIZED_NAME_IDENTITY_SERVICE_CONFIG)
  private IdentityServiceConfig identityServiceConfig;

  public static final String SERIALIZED_NAME_INITIAL_CLUSTER_VERSION = "initialClusterVersion";
  @SerializedName(SERIALIZED_NAME_INITIAL_CLUSTER_VERSION)
  private String initialClusterVersion;

  public static final String SERIALIZED_NAME_INITIAL_NODE_COUNT = "initialNodeCount";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_INITIAL_NODE_COUNT)
  private Integer initialNodeCount;

  public static final String SERIALIZED_NAME_INSTANCE_GROUP_URLS = "instanceGroupUrls";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_INSTANCE_GROUP_URLS)
  private List<String> instanceGroupUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_IP_ALLOCATION_POLICY = "ipAllocationPolicy";
  @SerializedName(SERIALIZED_NAME_IP_ALLOCATION_POLICY)
  private IPAllocationPolicy ipAllocationPolicy;

  public static final String SERIALIZED_NAME_LABEL_FINGERPRINT = "labelFingerprint";
  @SerializedName(SERIALIZED_NAME_LABEL_FINGERPRINT)
  private String labelFingerprint;

  public static final String SERIALIZED_NAME_LEGACY_ABAC = "legacyAbac";
  @SerializedName(SERIALIZED_NAME_LEGACY_ABAC)
  private LegacyAbac legacyAbac;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_LOCATIONS = "locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private List<String> locations = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOGGING_CONFIG = "loggingConfig";
  @SerializedName(SERIALIZED_NAME_LOGGING_CONFIG)
  private LoggingConfig loggingConfig;

  public static final String SERIALIZED_NAME_LOGGING_SERVICE = "loggingService";
  @SerializedName(SERIALIZED_NAME_LOGGING_SERVICE)
  private String loggingService;

  public static final String SERIALIZED_NAME_MAINTENANCE_POLICY = "maintenancePolicy";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_POLICY)
  private MaintenancePolicy maintenancePolicy;

  public static final String SERIALIZED_NAME_MASTER_AUTH = "masterAuth";
  @SerializedName(SERIALIZED_NAME_MASTER_AUTH)
  private MasterAuth masterAuth;

  public static final String SERIALIZED_NAME_MASTER_AUTHORIZED_NETWORKS_CONFIG = "masterAuthorizedNetworksConfig";
  @SerializedName(SERIALIZED_NAME_MASTER_AUTHORIZED_NETWORKS_CONFIG)
  private MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig;

  public static final String SERIALIZED_NAME_MESH_CERTIFICATES = "meshCertificates";
  @SerializedName(SERIALIZED_NAME_MESH_CERTIFICATES)
  private MeshCertificates meshCertificates;

  public static final String SERIALIZED_NAME_MONITORING_CONFIG = "monitoringConfig";
  @SerializedName(SERIALIZED_NAME_MONITORING_CONFIG)
  private MonitoringConfig monitoringConfig;

  public static final String SERIALIZED_NAME_MONITORING_SERVICE = "monitoringService";
  @SerializedName(SERIALIZED_NAME_MONITORING_SERVICE)
  private String monitoringService;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_NETWORK_CONFIG = "networkConfig";
  @SerializedName(SERIALIZED_NAME_NETWORK_CONFIG)
  private NetworkConfig networkConfig;

  public static final String SERIALIZED_NAME_NETWORK_POLICY = "networkPolicy";
  @SerializedName(SERIALIZED_NAME_NETWORK_POLICY)
  private NetworkPolicy networkPolicy;

  public static final String SERIALIZED_NAME_NODE_CONFIG = "nodeConfig";
  @SerializedName(SERIALIZED_NAME_NODE_CONFIG)
  private NodeConfig nodeConfig;

  public static final String SERIALIZED_NAME_NODE_IPV4_CIDR_SIZE = "nodeIpv4CidrSize";
  @SerializedName(SERIALIZED_NAME_NODE_IPV4_CIDR_SIZE)
  private Integer nodeIpv4CidrSize;

  public static final String SERIALIZED_NAME_NODE_POOL_AUTO_CONFIG = "nodePoolAutoConfig";
  @SerializedName(SERIALIZED_NAME_NODE_POOL_AUTO_CONFIG)
  private NodePoolAutoConfig nodePoolAutoConfig;

  public static final String SERIALIZED_NAME_NODE_POOL_DEFAULTS = "nodePoolDefaults";
  @SerializedName(SERIALIZED_NAME_NODE_POOL_DEFAULTS)
  private NodePoolDefaults nodePoolDefaults;

  public static final String SERIALIZED_NAME_NODE_POOLS = "nodePools";
  @SerializedName(SERIALIZED_NAME_NODE_POOLS)
  private List<NodePool> nodePools = new ArrayList<>();

  public static final String SERIALIZED_NAME_NOTIFICATION_CONFIG = "notificationConfig";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_CONFIG)
  private NotificationConfig notificationConfig;

  public static final String SERIALIZED_NAME_PARENT_PRODUCT_CONFIG = "parentProductConfig";
  @SerializedName(SERIALIZED_NAME_PARENT_PRODUCT_CONFIG)
  private ParentProductConfig parentProductConfig;

  public static final String SERIALIZED_NAME_PRIVATE_CLUSTER_CONFIG = "privateClusterConfig";
  @SerializedName(SERIALIZED_NAME_PRIVATE_CLUSTER_CONFIG)
  private PrivateClusterConfig privateClusterConfig;

  public static final String SERIALIZED_NAME_RELEASE_CHANNEL = "releaseChannel";
  @SerializedName(SERIALIZED_NAME_RELEASE_CHANNEL)
  private ReleaseChannel releaseChannel;

  public static final String SERIALIZED_NAME_RESOURCE_LABELS = "resourceLabels";
  @SerializedName(SERIALIZED_NAME_RESOURCE_LABELS)
  private Map<String, String> resourceLabels = new HashMap<>();

  public static final String SERIALIZED_NAME_RESOURCE_USAGE_EXPORT_CONFIG = "resourceUsageExportConfig";
  @SerializedName(SERIALIZED_NAME_RESOURCE_USAGE_EXPORT_CONFIG)
  private ResourceUsageExportConfig resourceUsageExportConfig;

  public static final String SERIALIZED_NAME_SECURITY_POSTURE_CONFIG = "securityPostureConfig";
  @SerializedName(SERIALIZED_NAME_SECURITY_POSTURE_CONFIG)
  private SecurityPostureConfig securityPostureConfig;

  public static final String SERIALIZED_NAME_SELF_LINK = "selfLink";
  @SerializedName(SERIALIZED_NAME_SELF_LINK)
  private String selfLink;

  public static final String SERIALIZED_NAME_SERVICES_IPV4_CIDR = "servicesIpv4Cidr";
  @SerializedName(SERIALIZED_NAME_SERVICES_IPV4_CIDR)
  private String servicesIpv4Cidr;

  public static final String SERIALIZED_NAME_SHIELDED_NODES = "shieldedNodes";
  @SerializedName(SERIALIZED_NAME_SHIELDED_NODES)
  private ShieldedNodes shieldedNodes;

  /**
   * [Output only] The current status of this cluster.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    STATUS_UNSPECIFIED("STATUS_UNSPECIFIED"),
    
    PROVISIONING("PROVISIONING"),
    
    RUNNING("RUNNING"),
    
    RECONCILING("RECONCILING"),
    
    STOPPING("STOPPING"),
    
    ERROR("ERROR"),
    
    DEGRADED("DEGRADED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_SUBNETWORK = "subnetwork";
  @SerializedName(SERIALIZED_NAME_SUBNETWORK)
  private String subnetwork;

  public static final String SERIALIZED_NAME_TPU_IPV4_CIDR_BLOCK = "tpuIpv4CidrBlock";
  @SerializedName(SERIALIZED_NAME_TPU_IPV4_CIDR_BLOCK)
  private String tpuIpv4CidrBlock;

  public static final String SERIALIZED_NAME_VERTICAL_POD_AUTOSCALING = "verticalPodAutoscaling";
  @SerializedName(SERIALIZED_NAME_VERTICAL_POD_AUTOSCALING)
  private VerticalPodAutoscaling verticalPodAutoscaling;

  public static final String SERIALIZED_NAME_WORKLOAD_IDENTITY_CONFIG = "workloadIdentityConfig";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_IDENTITY_CONFIG)
  private WorkloadIdentityConfig workloadIdentityConfig;

  public static final String SERIALIZED_NAME_ZONE = "zone";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_ZONE)
  private String zone;

  public Cluster() {
  }

  public Cluster(
     String id
  ) {
    this();
    this.id = id;
  }

  public Cluster addonsConfig(AddonsConfig addonsConfig) {
    this.addonsConfig = addonsConfig;
    return this;
  }

  /**
   * Get addonsConfig
   * @return addonsConfig
   */
  @javax.annotation.Nullable
  public AddonsConfig getAddonsConfig() {
    return addonsConfig;
  }

  public void setAddonsConfig(AddonsConfig addonsConfig) {
    this.addonsConfig = addonsConfig;
  }


  public Cluster authenticatorGroupsConfig(AuthenticatorGroupsConfig authenticatorGroupsConfig) {
    this.authenticatorGroupsConfig = authenticatorGroupsConfig;
    return this;
  }

  /**
   * Get authenticatorGroupsConfig
   * @return authenticatorGroupsConfig
   */
  @javax.annotation.Nullable
  public AuthenticatorGroupsConfig getAuthenticatorGroupsConfig() {
    return authenticatorGroupsConfig;
  }

  public void setAuthenticatorGroupsConfig(AuthenticatorGroupsConfig authenticatorGroupsConfig) {
    this.authenticatorGroupsConfig = authenticatorGroupsConfig;
  }


  public Cluster autopilot(Autopilot autopilot) {
    this.autopilot = autopilot;
    return this;
  }

  /**
   * Get autopilot
   * @return autopilot
   */
  @javax.annotation.Nullable
  public Autopilot getAutopilot() {
    return autopilot;
  }

  public void setAutopilot(Autopilot autopilot) {
    this.autopilot = autopilot;
  }


  public Cluster autoscaling(ClusterAutoscaling autoscaling) {
    this.autoscaling = autoscaling;
    return this;
  }

  /**
   * Get autoscaling
   * @return autoscaling
   */
  @javax.annotation.Nullable
  public ClusterAutoscaling getAutoscaling() {
    return autoscaling;
  }

  public void setAutoscaling(ClusterAutoscaling autoscaling) {
    this.autoscaling = autoscaling;
  }


  public Cluster binaryAuthorization(BinaryAuthorization binaryAuthorization) {
    this.binaryAuthorization = binaryAuthorization;
    return this;
  }

  /**
   * Get binaryAuthorization
   * @return binaryAuthorization
   */
  @javax.annotation.Nullable
  public BinaryAuthorization getBinaryAuthorization() {
    return binaryAuthorization;
  }

  public void setBinaryAuthorization(BinaryAuthorization binaryAuthorization) {
    this.binaryAuthorization = binaryAuthorization;
  }


  public Cluster clusterIpv4Cidr(String clusterIpv4Cidr) {
    this.clusterIpv4Cidr = clusterIpv4Cidr;
    return this;
  }

  /**
   * The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. &#x60;10.96.0.0/14&#x60;). Leave blank to have one automatically chosen or specify a &#x60;/14&#x60; block in &#x60;10.0.0.0/8&#x60;.
   * @return clusterIpv4Cidr
   */
  @javax.annotation.Nullable
  public String getClusterIpv4Cidr() {
    return clusterIpv4Cidr;
  }

  public void setClusterIpv4Cidr(String clusterIpv4Cidr) {
    this.clusterIpv4Cidr = clusterIpv4Cidr;
  }


  public Cluster conditions(List<StatusCondition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public Cluster addConditionsItem(StatusCondition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

  /**
   * Which conditions caused the current cluster state.
   * @return conditions
   */
  @javax.annotation.Nullable
  public List<StatusCondition> getConditions() {
    return conditions;
  }

  public void setConditions(List<StatusCondition> conditions) {
    this.conditions = conditions;
  }


  public Cluster confidentialNodes(ConfidentialNodes confidentialNodes) {
    this.confidentialNodes = confidentialNodes;
    return this;
  }

  /**
   * Get confidentialNodes
   * @return confidentialNodes
   */
  @javax.annotation.Nullable
  public ConfidentialNodes getConfidentialNodes() {
    return confidentialNodes;
  }

  public void setConfidentialNodes(ConfidentialNodes confidentialNodes) {
    this.confidentialNodes = confidentialNodes;
  }


  public Cluster costManagementConfig(CostManagementConfig costManagementConfig) {
    this.costManagementConfig = costManagementConfig;
    return this;
  }

  /**
   * Get costManagementConfig
   * @return costManagementConfig
   */
  @javax.annotation.Nullable
  public CostManagementConfig getCostManagementConfig() {
    return costManagementConfig;
  }

  public void setCostManagementConfig(CostManagementConfig costManagementConfig) {
    this.costManagementConfig = costManagementConfig;
  }


  public Cluster createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * [Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public Cluster currentMasterVersion(String currentMasterVersion) {
    this.currentMasterVersion = currentMasterVersion;
    return this;
  }

  /**
   * [Output only] The current software version of the master endpoint.
   * @return currentMasterVersion
   */
  @javax.annotation.Nullable
  public String getCurrentMasterVersion() {
    return currentMasterVersion;
  }

  public void setCurrentMasterVersion(String currentMasterVersion) {
    this.currentMasterVersion = currentMasterVersion;
  }


  @Deprecated
  public Cluster currentNodeCount(Integer currentNodeCount) {
    this.currentNodeCount = currentNodeCount;
    return this;
  }

  /**
   * [Output only] The number of nodes currently in the cluster. Deprecated. Call Kubernetes API directly to retrieve node information.
   * @return currentNodeCount
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Integer getCurrentNodeCount() {
    return currentNodeCount;
  }

  @Deprecated
  public void setCurrentNodeCount(Integer currentNodeCount) {
    this.currentNodeCount = currentNodeCount;
  }


  @Deprecated
  public Cluster currentNodeVersion(String currentNodeVersion) {
    this.currentNodeVersion = currentNodeVersion;
    return this;
  }

  /**
   * [Output only] Deprecated, use [NodePools.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they&#39;re in the process of being upgraded, this reflects the minimum version of all nodes.
   * @return currentNodeVersion
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getCurrentNodeVersion() {
    return currentNodeVersion;
  }

  @Deprecated
  public void setCurrentNodeVersion(String currentNodeVersion) {
    this.currentNodeVersion = currentNodeVersion;
  }


  public Cluster databaseEncryption(DatabaseEncryption databaseEncryption) {
    this.databaseEncryption = databaseEncryption;
    return this;
  }

  /**
   * Get databaseEncryption
   * @return databaseEncryption
   */
  @javax.annotation.Nullable
  public DatabaseEncryption getDatabaseEncryption() {
    return databaseEncryption;
  }

  public void setDatabaseEncryption(DatabaseEncryption databaseEncryption) {
    this.databaseEncryption = databaseEncryption;
  }


  public Cluster defaultMaxPodsConstraint(MaxPodsConstraint defaultMaxPodsConstraint) {
    this.defaultMaxPodsConstraint = defaultMaxPodsConstraint;
    return this;
  }

  /**
   * Get defaultMaxPodsConstraint
   * @return defaultMaxPodsConstraint
   */
  @javax.annotation.Nullable
  public MaxPodsConstraint getDefaultMaxPodsConstraint() {
    return defaultMaxPodsConstraint;
  }

  public void setDefaultMaxPodsConstraint(MaxPodsConstraint defaultMaxPodsConstraint) {
    this.defaultMaxPodsConstraint = defaultMaxPodsConstraint;
  }


  public Cluster description(String description) {
    this.description = description;
    return this;
  }

  /**
   * An optional description of this cluster.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Cluster enableK8sBetaApis(K8sBetaAPIConfig enableK8sBetaApis) {
    this.enableK8sBetaApis = enableK8sBetaApis;
    return this;
  }

  /**
   * Get enableK8sBetaApis
   * @return enableK8sBetaApis
   */
  @javax.annotation.Nullable
  public K8sBetaAPIConfig getEnableK8sBetaApis() {
    return enableK8sBetaApis;
  }

  public void setEnableK8sBetaApis(K8sBetaAPIConfig enableK8sBetaApis) {
    this.enableK8sBetaApis = enableK8sBetaApis;
  }


  public Cluster enableKubernetesAlpha(Boolean enableKubernetesAlpha) {
    this.enableKubernetesAlpha = enableKubernetesAlpha;
    return this;
  }

  /**
   * Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1alpha1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
   * @return enableKubernetesAlpha
   */
  @javax.annotation.Nullable
  public Boolean getEnableKubernetesAlpha() {
    return enableKubernetesAlpha;
  }

  public void setEnableKubernetesAlpha(Boolean enableKubernetesAlpha) {
    this.enableKubernetesAlpha = enableKubernetesAlpha;
  }


  public Cluster enableTpu(Boolean enableTpu) {
    this.enableTpu = enableTpu;
    return this;
  }

  /**
   * Enable the ability to use Cloud TPUs in this cluster.
   * @return enableTpu
   */
  @javax.annotation.Nullable
  public Boolean getEnableTpu() {
    return enableTpu;
  }

  public void setEnableTpu(Boolean enableTpu) {
    this.enableTpu = enableTpu;
  }


  public Cluster endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * [Output only] The IP address of this cluster&#39;s master endpoint. The endpoint can be accessed from the internet at &#x60;https://username:password@endpoint/&#x60;. See the &#x60;masterAuth&#x60; property of this resource for username and password information.
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public Cluster enterpriseConfig(EnterpriseConfig enterpriseConfig) {
    this.enterpriseConfig = enterpriseConfig;
    return this;
  }

  /**
   * Get enterpriseConfig
   * @return enterpriseConfig
   */
  @javax.annotation.Nullable
  public EnterpriseConfig getEnterpriseConfig() {
    return enterpriseConfig;
  }

  public void setEnterpriseConfig(EnterpriseConfig enterpriseConfig) {
    this.enterpriseConfig = enterpriseConfig;
  }


  public Cluster etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * This checksum is computed by the server based on the value of cluster fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public Cluster expireTime(String expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * [Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
   * @return expireTime
   */
  @javax.annotation.Nullable
  public String getExpireTime() {
    return expireTime;
  }

  public void setExpireTime(String expireTime) {
    this.expireTime = expireTime;
  }


  public Cluster fleet(Fleet fleet) {
    this.fleet = fleet;
    return this;
  }

  /**
   * Get fleet
   * @return fleet
   */
  @javax.annotation.Nullable
  public Fleet getFleet() {
    return fleet;
  }

  public void setFleet(Fleet fleet) {
    this.fleet = fleet;
  }


  /**
   * Output only. Unique id for the cluster.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }



  public Cluster identityServiceConfig(IdentityServiceConfig identityServiceConfig) {
    this.identityServiceConfig = identityServiceConfig;
    return this;
  }

  /**
   * Get identityServiceConfig
   * @return identityServiceConfig
   */
  @javax.annotation.Nullable
  public IdentityServiceConfig getIdentityServiceConfig() {
    return identityServiceConfig;
  }

  public void setIdentityServiceConfig(IdentityServiceConfig identityServiceConfig) {
    this.identityServiceConfig = identityServiceConfig;
  }


  public Cluster initialClusterVersion(String initialClusterVersion) {
    this.initialClusterVersion = initialClusterVersion;
    return this;
  }

  /**
   * The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \&quot;latest\&quot;: picks the highest valid Kubernetes version - \&quot;1.X\&quot;: picks the highest valid patch+gke.N patch in the 1.X version - \&quot;1.X.Y\&quot;: picks the highest valid gke.N patch in the 1.X.Y version - \&quot;1.X.Y-gke.N\&quot;: picks an explicit Kubernetes version - \&quot;\&quot;,\&quot;-\&quot;: picks the default Kubernetes version
   * @return initialClusterVersion
   */
  @javax.annotation.Nullable
  public String getInitialClusterVersion() {
    return initialClusterVersion;
  }

  public void setInitialClusterVersion(String initialClusterVersion) {
    this.initialClusterVersion = initialClusterVersion;
  }


  @Deprecated
  public Cluster initialNodeCount(Integer initialNodeCount) {
    this.initialNodeCount = initialNodeCount;
    return this;
  }

  /**
   * The number of nodes to create in this cluster. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a \&quot;node_pool\&quot; object, since this configuration (along with the \&quot;node_config\&quot;) will be used to create a \&quot;NodePool\&quot; object with an auto-generated name. Do not use this and a node_pool at the same time. This field is deprecated, use node_pool.initial_node_count instead.
   * @return initialNodeCount
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Integer getInitialNodeCount() {
    return initialNodeCount;
  }

  @Deprecated
  public void setInitialNodeCount(Integer initialNodeCount) {
    this.initialNodeCount = initialNodeCount;
  }


  @Deprecated
  public Cluster instanceGroupUrls(List<String> instanceGroupUrls) {
    this.instanceGroupUrls = instanceGroupUrls;
    return this;
  }

  public Cluster addInstanceGroupUrlsItem(String instanceGroupUrlsItem) {
    if (this.instanceGroupUrls == null) {
      this.instanceGroupUrls = new ArrayList<>();
    }
    this.instanceGroupUrls.add(instanceGroupUrlsItem);
    return this;
  }

  /**
   * Deprecated. Use node_pools.instance_group_urls.
   * @return instanceGroupUrls
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<String> getInstanceGroupUrls() {
    return instanceGroupUrls;
  }

  @Deprecated
  public void setInstanceGroupUrls(List<String> instanceGroupUrls) {
    this.instanceGroupUrls = instanceGroupUrls;
  }


  public Cluster ipAllocationPolicy(IPAllocationPolicy ipAllocationPolicy) {
    this.ipAllocationPolicy = ipAllocationPolicy;
    return this;
  }

  /**
   * Get ipAllocationPolicy
   * @return ipAllocationPolicy
   */
  @javax.annotation.Nullable
  public IPAllocationPolicy getIpAllocationPolicy() {
    return ipAllocationPolicy;
  }

  public void setIpAllocationPolicy(IPAllocationPolicy ipAllocationPolicy) {
    this.ipAllocationPolicy = ipAllocationPolicy;
  }


  public Cluster labelFingerprint(String labelFingerprint) {
    this.labelFingerprint = labelFingerprint;
    return this;
  }

  /**
   * The fingerprint of the set of labels for this cluster.
   * @return labelFingerprint
   */
  @javax.annotation.Nullable
  public String getLabelFingerprint() {
    return labelFingerprint;
  }

  public void setLabelFingerprint(String labelFingerprint) {
    this.labelFingerprint = labelFingerprint;
  }


  public Cluster legacyAbac(LegacyAbac legacyAbac) {
    this.legacyAbac = legacyAbac;
    return this;
  }

  /**
   * Get legacyAbac
   * @return legacyAbac
   */
  @javax.annotation.Nullable
  public LegacyAbac getLegacyAbac() {
    return legacyAbac;
  }

  public void setLegacyAbac(LegacyAbac legacyAbac) {
    this.legacyAbac = legacyAbac;
  }


  public Cluster location(String location) {
    this.location = location;
    return this;
  }

  /**
   * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public Cluster locations(List<String> locations) {
    this.locations = locations;
    return this;
  }

  public Cluster addLocationsItem(String locationsItem) {
    if (this.locations == null) {
      this.locations = new ArrayList<>();
    }
    this.locations.add(locationsItem);
    return this;
  }

  /**
   * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster&#39;s nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.
   * @return locations
   */
  @javax.annotation.Nullable
  public List<String> getLocations() {
    return locations;
  }

  public void setLocations(List<String> locations) {
    this.locations = locations;
  }


  public Cluster loggingConfig(LoggingConfig loggingConfig) {
    this.loggingConfig = loggingConfig;
    return this;
  }

  /**
   * Get loggingConfig
   * @return loggingConfig
   */
  @javax.annotation.Nullable
  public LoggingConfig getLoggingConfig() {
    return loggingConfig;
  }

  public void setLoggingConfig(LoggingConfig loggingConfig) {
    this.loggingConfig = loggingConfig;
  }


  public Cluster loggingService(String loggingService) {
    this.loggingService = loggingService;
    return this;
  }

  /**
   * The logging service the cluster should use to write logs. Currently available options: * &#x60;logging.googleapis.com/kubernetes&#x60; - The Cloud Logging service with a Kubernetes-native resource model * &#x60;logging.googleapis.com&#x60; - The legacy Cloud Logging service (no longer available as of GKE 1.15). * &#x60;none&#x60; - no logs will be exported from the cluster. If left as an empty string,&#x60;logging.googleapis.com/kubernetes&#x60; will be used for GKE 1.14+ or &#x60;logging.googleapis.com&#x60; for earlier versions.
   * @return loggingService
   */
  @javax.annotation.Nullable
  public String getLoggingService() {
    return loggingService;
  }

  public void setLoggingService(String loggingService) {
    this.loggingService = loggingService;
  }


  public Cluster maintenancePolicy(MaintenancePolicy maintenancePolicy) {
    this.maintenancePolicy = maintenancePolicy;
    return this;
  }

  /**
   * Get maintenancePolicy
   * @return maintenancePolicy
   */
  @javax.annotation.Nullable
  public MaintenancePolicy getMaintenancePolicy() {
    return maintenancePolicy;
  }

  public void setMaintenancePolicy(MaintenancePolicy maintenancePolicy) {
    this.maintenancePolicy = maintenancePolicy;
  }


  public Cluster masterAuth(MasterAuth masterAuth) {
    this.masterAuth = masterAuth;
    return this;
  }

  /**
   * Get masterAuth
   * @return masterAuth
   */
  @javax.annotation.Nullable
  public MasterAuth getMasterAuth() {
    return masterAuth;
  }

  public void setMasterAuth(MasterAuth masterAuth) {
    this.masterAuth = masterAuth;
  }


  public Cluster masterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig) {
    this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
    return this;
  }

  /**
   * Get masterAuthorizedNetworksConfig
   * @return masterAuthorizedNetworksConfig
   */
  @javax.annotation.Nullable
  public MasterAuthorizedNetworksConfig getMasterAuthorizedNetworksConfig() {
    return masterAuthorizedNetworksConfig;
  }

  public void setMasterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig) {
    this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
  }


  public Cluster meshCertificates(MeshCertificates meshCertificates) {
    this.meshCertificates = meshCertificates;
    return this;
  }

  /**
   * Get meshCertificates
   * @return meshCertificates
   */
  @javax.annotation.Nullable
  public MeshCertificates getMeshCertificates() {
    return meshCertificates;
  }

  public void setMeshCertificates(MeshCertificates meshCertificates) {
    this.meshCertificates = meshCertificates;
  }


  public Cluster monitoringConfig(MonitoringConfig monitoringConfig) {
    this.monitoringConfig = monitoringConfig;
    return this;
  }

  /**
   * Get monitoringConfig
   * @return monitoringConfig
   */
  @javax.annotation.Nullable
  public MonitoringConfig getMonitoringConfig() {
    return monitoringConfig;
  }

  public void setMonitoringConfig(MonitoringConfig monitoringConfig) {
    this.monitoringConfig = monitoringConfig;
  }


  public Cluster monitoringService(String monitoringService) {
    this.monitoringService = monitoringService;
    return this;
  }

  /**
   * The monitoring service the cluster should use to write metrics. Currently available options: * \&quot;monitoring.googleapis.com/kubernetes\&quot; - The Cloud Monitoring service with a Kubernetes-native resource model * &#x60;monitoring.googleapis.com&#x60; - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * &#x60;none&#x60; - No metrics will be exported from the cluster. If left as an empty string,&#x60;monitoring.googleapis.com/kubernetes&#x60; will be used for GKE 1.14+ or &#x60;monitoring.googleapis.com&#x60; for earlier versions.
   * @return monitoringService
   */
  @javax.annotation.Nullable
  public String getMonitoringService() {
    return monitoringService;
  }

  public void setMonitoringService(String monitoringService) {
    this.monitoringService = monitoringService;
  }


  public Cluster name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Cluster network(String network) {
    this.network = network;
    return this;
  }

  /**
   * The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the &#x60;default&#x60; network will be used.
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }


  public Cluster networkConfig(NetworkConfig networkConfig) {
    this.networkConfig = networkConfig;
    return this;
  }

  /**
   * Get networkConfig
   * @return networkConfig
   */
  @javax.annotation.Nullable
  public NetworkConfig getNetworkConfig() {
    return networkConfig;
  }

  public void setNetworkConfig(NetworkConfig networkConfig) {
    this.networkConfig = networkConfig;
  }


  public Cluster networkPolicy(NetworkPolicy networkPolicy) {
    this.networkPolicy = networkPolicy;
    return this;
  }

  /**
   * Get networkPolicy
   * @return networkPolicy
   */
  @javax.annotation.Nullable
  public NetworkPolicy getNetworkPolicy() {
    return networkPolicy;
  }

  public void setNetworkPolicy(NetworkPolicy networkPolicy) {
    this.networkPolicy = networkPolicy;
  }


  public Cluster nodeConfig(NodeConfig nodeConfig) {
    this.nodeConfig = nodeConfig;
    return this;
  }

  /**
   * Get nodeConfig
   * @return nodeConfig
   */
  @javax.annotation.Nullable
  public NodeConfig getNodeConfig() {
    return nodeConfig;
  }

  public void setNodeConfig(NodeConfig nodeConfig) {
    this.nodeConfig = nodeConfig;
  }


  public Cluster nodeIpv4CidrSize(Integer nodeIpv4CidrSize) {
    this.nodeIpv4CidrSize = nodeIpv4CidrSize;
    return this;
  }

  /**
   * [Output only] The size of the address space on each node for hosting containers. This is provisioned from within the &#x60;container_ipv4_cidr&#x60; range. This field will only be set when cluster is in route-based network mode.
   * @return nodeIpv4CidrSize
   */
  @javax.annotation.Nullable
  public Integer getNodeIpv4CidrSize() {
    return nodeIpv4CidrSize;
  }

  public void setNodeIpv4CidrSize(Integer nodeIpv4CidrSize) {
    this.nodeIpv4CidrSize = nodeIpv4CidrSize;
  }


  public Cluster nodePoolAutoConfig(NodePoolAutoConfig nodePoolAutoConfig) {
    this.nodePoolAutoConfig = nodePoolAutoConfig;
    return this;
  }

  /**
   * Get nodePoolAutoConfig
   * @return nodePoolAutoConfig
   */
  @javax.annotation.Nullable
  public NodePoolAutoConfig getNodePoolAutoConfig() {
    return nodePoolAutoConfig;
  }

  public void setNodePoolAutoConfig(NodePoolAutoConfig nodePoolAutoConfig) {
    this.nodePoolAutoConfig = nodePoolAutoConfig;
  }


  public Cluster nodePoolDefaults(NodePoolDefaults nodePoolDefaults) {
    this.nodePoolDefaults = nodePoolDefaults;
    return this;
  }

  /**
   * Get nodePoolDefaults
   * @return nodePoolDefaults
   */
  @javax.annotation.Nullable
  public NodePoolDefaults getNodePoolDefaults() {
    return nodePoolDefaults;
  }

  public void setNodePoolDefaults(NodePoolDefaults nodePoolDefaults) {
    this.nodePoolDefaults = nodePoolDefaults;
  }


  public Cluster nodePools(List<NodePool> nodePools) {
    this.nodePools = nodePools;
    return this;
  }

  public Cluster addNodePoolsItem(NodePool nodePoolsItem) {
    if (this.nodePools == null) {
      this.nodePools = new ArrayList<>();
    }
    this.nodePools.add(nodePoolsItem);
    return this;
  }

  /**
   * The node pools associated with this cluster. This field should not be set if \&quot;node_config\&quot; or \&quot;initial_node_count\&quot; are specified.
   * @return nodePools
   */
  @javax.annotation.Nullable
  public List<NodePool> getNodePools() {
    return nodePools;
  }

  public void setNodePools(List<NodePool> nodePools) {
    this.nodePools = nodePools;
  }


  public Cluster notificationConfig(NotificationConfig notificationConfig) {
    this.notificationConfig = notificationConfig;
    return this;
  }

  /**
   * Get notificationConfig
   * @return notificationConfig
   */
  @javax.annotation.Nullable
  public NotificationConfig getNotificationConfig() {
    return notificationConfig;
  }

  public void setNotificationConfig(NotificationConfig notificationConfig) {
    this.notificationConfig = notificationConfig;
  }


  public Cluster parentProductConfig(ParentProductConfig parentProductConfig) {
    this.parentProductConfig = parentProductConfig;
    return this;
  }

  /**
   * Get parentProductConfig
   * @return parentProductConfig
   */
  @javax.annotation.Nullable
  public ParentProductConfig getParentProductConfig() {
    return parentProductConfig;
  }

  public void setParentProductConfig(ParentProductConfig parentProductConfig) {
    this.parentProductConfig = parentProductConfig;
  }


  public Cluster privateClusterConfig(PrivateClusterConfig privateClusterConfig) {
    this.privateClusterConfig = privateClusterConfig;
    return this;
  }

  /**
   * Get privateClusterConfig
   * @return privateClusterConfig
   */
  @javax.annotation.Nullable
  public PrivateClusterConfig getPrivateClusterConfig() {
    return privateClusterConfig;
  }

  public void setPrivateClusterConfig(PrivateClusterConfig privateClusterConfig) {
    this.privateClusterConfig = privateClusterConfig;
  }


  public Cluster releaseChannel(ReleaseChannel releaseChannel) {
    this.releaseChannel = releaseChannel;
    return this;
  }

  /**
   * Get releaseChannel
   * @return releaseChannel
   */
  @javax.annotation.Nullable
  public ReleaseChannel getReleaseChannel() {
    return releaseChannel;
  }

  public void setReleaseChannel(ReleaseChannel releaseChannel) {
    this.releaseChannel = releaseChannel;
  }


  public Cluster resourceLabels(Map<String, String> resourceLabels) {
    this.resourceLabels = resourceLabels;
    return this;
  }

  public Cluster putResourceLabelsItem(String key, String resourceLabelsItem) {
    if (this.resourceLabels == null) {
      this.resourceLabels = new HashMap<>();
    }
    this.resourceLabels.put(key, resourceLabelsItem);
    return this;
  }

  /**
   * The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
   * @return resourceLabels
   */
  @javax.annotation.Nullable
  public Map<String, String> getResourceLabels() {
    return resourceLabels;
  }

  public void setResourceLabels(Map<String, String> resourceLabels) {
    this.resourceLabels = resourceLabels;
  }


  public Cluster resourceUsageExportConfig(ResourceUsageExportConfig resourceUsageExportConfig) {
    this.resourceUsageExportConfig = resourceUsageExportConfig;
    return this;
  }

  /**
   * Get resourceUsageExportConfig
   * @return resourceUsageExportConfig
   */
  @javax.annotation.Nullable
  public ResourceUsageExportConfig getResourceUsageExportConfig() {
    return resourceUsageExportConfig;
  }

  public void setResourceUsageExportConfig(ResourceUsageExportConfig resourceUsageExportConfig) {
    this.resourceUsageExportConfig = resourceUsageExportConfig;
  }


  public Cluster securityPostureConfig(SecurityPostureConfig securityPostureConfig) {
    this.securityPostureConfig = securityPostureConfig;
    return this;
  }

  /**
   * Get securityPostureConfig
   * @return securityPostureConfig
   */
  @javax.annotation.Nullable
  public SecurityPostureConfig getSecurityPostureConfig() {
    return securityPostureConfig;
  }

  public void setSecurityPostureConfig(SecurityPostureConfig securityPostureConfig) {
    this.securityPostureConfig = securityPostureConfig;
  }


  public Cluster selfLink(String selfLink) {
    this.selfLink = selfLink;
    return this;
  }

  /**
   * [Output only] Server-defined URL for the resource.
   * @return selfLink
   */
  @javax.annotation.Nullable
  public String getSelfLink() {
    return selfLink;
  }

  public void setSelfLink(String selfLink) {
    this.selfLink = selfLink;
  }


  public Cluster servicesIpv4Cidr(String servicesIpv4Cidr) {
    this.servicesIpv4Cidr = servicesIpv4Cidr;
    return this;
  }

  /**
   * [Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. &#x60;1.2.3.4/29&#x60;). Service addresses are typically put in the last &#x60;/16&#x60; from the container CIDR.
   * @return servicesIpv4Cidr
   */
  @javax.annotation.Nullable
  public String getServicesIpv4Cidr() {
    return servicesIpv4Cidr;
  }

  public void setServicesIpv4Cidr(String servicesIpv4Cidr) {
    this.servicesIpv4Cidr = servicesIpv4Cidr;
  }


  public Cluster shieldedNodes(ShieldedNodes shieldedNodes) {
    this.shieldedNodes = shieldedNodes;
    return this;
  }

  /**
   * Get shieldedNodes
   * @return shieldedNodes
   */
  @javax.annotation.Nullable
  public ShieldedNodes getShieldedNodes() {
    return shieldedNodes;
  }

  public void setShieldedNodes(ShieldedNodes shieldedNodes) {
    this.shieldedNodes = shieldedNodes;
  }


  public Cluster status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * [Output only] The current status of this cluster.
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Deprecated
  public Cluster statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * [Output only] Deprecated. Use conditions instead. Additional information about the current status of this cluster, if available.
   * @return statusMessage
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  @Deprecated
  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public Cluster subnetwork(String subnetwork) {
    this.subnetwork = subnetwork;
    return this;
  }

  /**
   * The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected.
   * @return subnetwork
   */
  @javax.annotation.Nullable
  public String getSubnetwork() {
    return subnetwork;
  }

  public void setSubnetwork(String subnetwork) {
    this.subnetwork = subnetwork;
  }


  public Cluster tpuIpv4CidrBlock(String tpuIpv4CidrBlock) {
    this.tpuIpv4CidrBlock = tpuIpv4CidrBlock;
    return this;
  }

  /**
   * [Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. &#x60;1.2.3.4/29&#x60;).
   * @return tpuIpv4CidrBlock
   */
  @javax.annotation.Nullable
  public String getTpuIpv4CidrBlock() {
    return tpuIpv4CidrBlock;
  }

  public void setTpuIpv4CidrBlock(String tpuIpv4CidrBlock) {
    this.tpuIpv4CidrBlock = tpuIpv4CidrBlock;
  }


  public Cluster verticalPodAutoscaling(VerticalPodAutoscaling verticalPodAutoscaling) {
    this.verticalPodAutoscaling = verticalPodAutoscaling;
    return this;
  }

  /**
   * Get verticalPodAutoscaling
   * @return verticalPodAutoscaling
   */
  @javax.annotation.Nullable
  public VerticalPodAutoscaling getVerticalPodAutoscaling() {
    return verticalPodAutoscaling;
  }

  public void setVerticalPodAutoscaling(VerticalPodAutoscaling verticalPodAutoscaling) {
    this.verticalPodAutoscaling = verticalPodAutoscaling;
  }


  public Cluster workloadIdentityConfig(WorkloadIdentityConfig workloadIdentityConfig) {
    this.workloadIdentityConfig = workloadIdentityConfig;
    return this;
  }

  /**
   * Get workloadIdentityConfig
   * @return workloadIdentityConfig
   */
  @javax.annotation.Nullable
  public WorkloadIdentityConfig getWorkloadIdentityConfig() {
    return workloadIdentityConfig;
  }

  public void setWorkloadIdentityConfig(WorkloadIdentityConfig workloadIdentityConfig) {
    this.workloadIdentityConfig = workloadIdentityConfig;
  }


  @Deprecated
  public Cluster zone(String zone) {
    this.zone = zone;
    return this;
  }

  /**
   * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field is deprecated, use location instead.
   * @return zone
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getZone() {
    return zone;
  }

  @Deprecated
  public void setZone(String zone) {
    this.zone = zone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cluster cluster = (Cluster) o;
    return Objects.equals(this.addonsConfig, cluster.addonsConfig) &&
        Objects.equals(this.authenticatorGroupsConfig, cluster.authenticatorGroupsConfig) &&
        Objects.equals(this.autopilot, cluster.autopilot) &&
        Objects.equals(this.autoscaling, cluster.autoscaling) &&
        Objects.equals(this.binaryAuthorization, cluster.binaryAuthorization) &&
        Objects.equals(this.clusterIpv4Cidr, cluster.clusterIpv4Cidr) &&
        Objects.equals(this.conditions, cluster.conditions) &&
        Objects.equals(this.confidentialNodes, cluster.confidentialNodes) &&
        Objects.equals(this.costManagementConfig, cluster.costManagementConfig) &&
        Objects.equals(this.createTime, cluster.createTime) &&
        Objects.equals(this.currentMasterVersion, cluster.currentMasterVersion) &&
        Objects.equals(this.currentNodeCount, cluster.currentNodeCount) &&
        Objects.equals(this.currentNodeVersion, cluster.currentNodeVersion) &&
        Objects.equals(this.databaseEncryption, cluster.databaseEncryption) &&
        Objects.equals(this.defaultMaxPodsConstraint, cluster.defaultMaxPodsConstraint) &&
        Objects.equals(this.description, cluster.description) &&
        Objects.equals(this.enableK8sBetaApis, cluster.enableK8sBetaApis) &&
        Objects.equals(this.enableKubernetesAlpha, cluster.enableKubernetesAlpha) &&
        Objects.equals(this.enableTpu, cluster.enableTpu) &&
        Objects.equals(this.endpoint, cluster.endpoint) &&
        Objects.equals(this.enterpriseConfig, cluster.enterpriseConfig) &&
        Objects.equals(this.etag, cluster.etag) &&
        Objects.equals(this.expireTime, cluster.expireTime) &&
        Objects.equals(this.fleet, cluster.fleet) &&
        Objects.equals(this.id, cluster.id) &&
        Objects.equals(this.identityServiceConfig, cluster.identityServiceConfig) &&
        Objects.equals(this.initialClusterVersion, cluster.initialClusterVersion) &&
        Objects.equals(this.initialNodeCount, cluster.initialNodeCount) &&
        Objects.equals(this.instanceGroupUrls, cluster.instanceGroupUrls) &&
        Objects.equals(this.ipAllocationPolicy, cluster.ipAllocationPolicy) &&
        Objects.equals(this.labelFingerprint, cluster.labelFingerprint) &&
        Objects.equals(this.legacyAbac, cluster.legacyAbac) &&
        Objects.equals(this.location, cluster.location) &&
        Objects.equals(this.locations, cluster.locations) &&
        Objects.equals(this.loggingConfig, cluster.loggingConfig) &&
        Objects.equals(this.loggingService, cluster.loggingService) &&
        Objects.equals(this.maintenancePolicy, cluster.maintenancePolicy) &&
        Objects.equals(this.masterAuth, cluster.masterAuth) &&
        Objects.equals(this.masterAuthorizedNetworksConfig, cluster.masterAuthorizedNetworksConfig) &&
        Objects.equals(this.meshCertificates, cluster.meshCertificates) &&
        Objects.equals(this.monitoringConfig, cluster.monitoringConfig) &&
        Objects.equals(this.monitoringService, cluster.monitoringService) &&
        Objects.equals(this.name, cluster.name) &&
        Objects.equals(this.network, cluster.network) &&
        Objects.equals(this.networkConfig, cluster.networkConfig) &&
        Objects.equals(this.networkPolicy, cluster.networkPolicy) &&
        Objects.equals(this.nodeConfig, cluster.nodeConfig) &&
        Objects.equals(this.nodeIpv4CidrSize, cluster.nodeIpv4CidrSize) &&
        Objects.equals(this.nodePoolAutoConfig, cluster.nodePoolAutoConfig) &&
        Objects.equals(this.nodePoolDefaults, cluster.nodePoolDefaults) &&
        Objects.equals(this.nodePools, cluster.nodePools) &&
        Objects.equals(this.notificationConfig, cluster.notificationConfig) &&
        Objects.equals(this.parentProductConfig, cluster.parentProductConfig) &&
        Objects.equals(this.privateClusterConfig, cluster.privateClusterConfig) &&
        Objects.equals(this.releaseChannel, cluster.releaseChannel) &&
        Objects.equals(this.resourceLabels, cluster.resourceLabels) &&
        Objects.equals(this.resourceUsageExportConfig, cluster.resourceUsageExportConfig) &&
        Objects.equals(this.securityPostureConfig, cluster.securityPostureConfig) &&
        Objects.equals(this.selfLink, cluster.selfLink) &&
        Objects.equals(this.servicesIpv4Cidr, cluster.servicesIpv4Cidr) &&
        Objects.equals(this.shieldedNodes, cluster.shieldedNodes) &&
        Objects.equals(this.status, cluster.status) &&
        Objects.equals(this.statusMessage, cluster.statusMessage) &&
        Objects.equals(this.subnetwork, cluster.subnetwork) &&
        Objects.equals(this.tpuIpv4CidrBlock, cluster.tpuIpv4CidrBlock) &&
        Objects.equals(this.verticalPodAutoscaling, cluster.verticalPodAutoscaling) &&
        Objects.equals(this.workloadIdentityConfig, cluster.workloadIdentityConfig) &&
        Objects.equals(this.zone, cluster.zone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addonsConfig, authenticatorGroupsConfig, autopilot, autoscaling, binaryAuthorization, clusterIpv4Cidr, conditions, confidentialNodes, costManagementConfig, createTime, currentMasterVersion, currentNodeCount, currentNodeVersion, databaseEncryption, defaultMaxPodsConstraint, description, enableK8sBetaApis, enableKubernetesAlpha, enableTpu, endpoint, enterpriseConfig, etag, expireTime, fleet, id, identityServiceConfig, initialClusterVersion, initialNodeCount, instanceGroupUrls, ipAllocationPolicy, labelFingerprint, legacyAbac, location, locations, loggingConfig, loggingService, maintenancePolicy, masterAuth, masterAuthorizedNetworksConfig, meshCertificates, monitoringConfig, monitoringService, name, network, networkConfig, networkPolicy, nodeConfig, nodeIpv4CidrSize, nodePoolAutoConfig, nodePoolDefaults, nodePools, notificationConfig, parentProductConfig, privateClusterConfig, releaseChannel, resourceLabels, resourceUsageExportConfig, securityPostureConfig, selfLink, servicesIpv4Cidr, shieldedNodes, status, statusMessage, subnetwork, tpuIpv4CidrBlock, verticalPodAutoscaling, workloadIdentityConfig, zone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Cluster {\n");
    sb.append("    addonsConfig: ").append(toIndentedString(addonsConfig)).append("\n");
    sb.append("    authenticatorGroupsConfig: ").append(toIndentedString(authenticatorGroupsConfig)).append("\n");
    sb.append("    autopilot: ").append(toIndentedString(autopilot)).append("\n");
    sb.append("    autoscaling: ").append(toIndentedString(autoscaling)).append("\n");
    sb.append("    binaryAuthorization: ").append(toIndentedString(binaryAuthorization)).append("\n");
    sb.append("    clusterIpv4Cidr: ").append(toIndentedString(clusterIpv4Cidr)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    confidentialNodes: ").append(toIndentedString(confidentialNodes)).append("\n");
    sb.append("    costManagementConfig: ").append(toIndentedString(costManagementConfig)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    currentMasterVersion: ").append(toIndentedString(currentMasterVersion)).append("\n");
    sb.append("    currentNodeCount: ").append(toIndentedString(currentNodeCount)).append("\n");
    sb.append("    currentNodeVersion: ").append(toIndentedString(currentNodeVersion)).append("\n");
    sb.append("    databaseEncryption: ").append(toIndentedString(databaseEncryption)).append("\n");
    sb.append("    defaultMaxPodsConstraint: ").append(toIndentedString(defaultMaxPodsConstraint)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enableK8sBetaApis: ").append(toIndentedString(enableK8sBetaApis)).append("\n");
    sb.append("    enableKubernetesAlpha: ").append(toIndentedString(enableKubernetesAlpha)).append("\n");
    sb.append("    enableTpu: ").append(toIndentedString(enableTpu)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    enterpriseConfig: ").append(toIndentedString(enterpriseConfig)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    fleet: ").append(toIndentedString(fleet)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identityServiceConfig: ").append(toIndentedString(identityServiceConfig)).append("\n");
    sb.append("    initialClusterVersion: ").append(toIndentedString(initialClusterVersion)).append("\n");
    sb.append("    initialNodeCount: ").append(toIndentedString(initialNodeCount)).append("\n");
    sb.append("    instanceGroupUrls: ").append(toIndentedString(instanceGroupUrls)).append("\n");
    sb.append("    ipAllocationPolicy: ").append(toIndentedString(ipAllocationPolicy)).append("\n");
    sb.append("    labelFingerprint: ").append(toIndentedString(labelFingerprint)).append("\n");
    sb.append("    legacyAbac: ").append(toIndentedString(legacyAbac)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    loggingConfig: ").append(toIndentedString(loggingConfig)).append("\n");
    sb.append("    loggingService: ").append(toIndentedString(loggingService)).append("\n");
    sb.append("    maintenancePolicy: ").append(toIndentedString(maintenancePolicy)).append("\n");
    sb.append("    masterAuth: ").append(toIndentedString(masterAuth)).append("\n");
    sb.append("    masterAuthorizedNetworksConfig: ").append(toIndentedString(masterAuthorizedNetworksConfig)).append("\n");
    sb.append("    meshCertificates: ").append(toIndentedString(meshCertificates)).append("\n");
    sb.append("    monitoringConfig: ").append(toIndentedString(monitoringConfig)).append("\n");
    sb.append("    monitoringService: ").append(toIndentedString(monitoringService)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    networkConfig: ").append(toIndentedString(networkConfig)).append("\n");
    sb.append("    networkPolicy: ").append(toIndentedString(networkPolicy)).append("\n");
    sb.append("    nodeConfig: ").append(toIndentedString(nodeConfig)).append("\n");
    sb.append("    nodeIpv4CidrSize: ").append(toIndentedString(nodeIpv4CidrSize)).append("\n");
    sb.append("    nodePoolAutoConfig: ").append(toIndentedString(nodePoolAutoConfig)).append("\n");
    sb.append("    nodePoolDefaults: ").append(toIndentedString(nodePoolDefaults)).append("\n");
    sb.append("    nodePools: ").append(toIndentedString(nodePools)).append("\n");
    sb.append("    notificationConfig: ").append(toIndentedString(notificationConfig)).append("\n");
    sb.append("    parentProductConfig: ").append(toIndentedString(parentProductConfig)).append("\n");
    sb.append("    privateClusterConfig: ").append(toIndentedString(privateClusterConfig)).append("\n");
    sb.append("    releaseChannel: ").append(toIndentedString(releaseChannel)).append("\n");
    sb.append("    resourceLabels: ").append(toIndentedString(resourceLabels)).append("\n");
    sb.append("    resourceUsageExportConfig: ").append(toIndentedString(resourceUsageExportConfig)).append("\n");
    sb.append("    securityPostureConfig: ").append(toIndentedString(securityPostureConfig)).append("\n");
    sb.append("    selfLink: ").append(toIndentedString(selfLink)).append("\n");
    sb.append("    servicesIpv4Cidr: ").append(toIndentedString(servicesIpv4Cidr)).append("\n");
    sb.append("    shieldedNodes: ").append(toIndentedString(shieldedNodes)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    subnetwork: ").append(toIndentedString(subnetwork)).append("\n");
    sb.append("    tpuIpv4CidrBlock: ").append(toIndentedString(tpuIpv4CidrBlock)).append("\n");
    sb.append("    verticalPodAutoscaling: ").append(toIndentedString(verticalPodAutoscaling)).append("\n");
    sb.append("    workloadIdentityConfig: ").append(toIndentedString(workloadIdentityConfig)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addonsConfig");
    openapiFields.add("authenticatorGroupsConfig");
    openapiFields.add("autopilot");
    openapiFields.add("autoscaling");
    openapiFields.add("binaryAuthorization");
    openapiFields.add("clusterIpv4Cidr");
    openapiFields.add("conditions");
    openapiFields.add("confidentialNodes");
    openapiFields.add("costManagementConfig");
    openapiFields.add("createTime");
    openapiFields.add("currentMasterVersion");
    openapiFields.add("currentNodeCount");
    openapiFields.add("currentNodeVersion");
    openapiFields.add("databaseEncryption");
    openapiFields.add("defaultMaxPodsConstraint");
    openapiFields.add("description");
    openapiFields.add("enableK8sBetaApis");
    openapiFields.add("enableKubernetesAlpha");
    openapiFields.add("enableTpu");
    openapiFields.add("endpoint");
    openapiFields.add("enterpriseConfig");
    openapiFields.add("etag");
    openapiFields.add("expireTime");
    openapiFields.add("fleet");
    openapiFields.add("id");
    openapiFields.add("identityServiceConfig");
    openapiFields.add("initialClusterVersion");
    openapiFields.add("initialNodeCount");
    openapiFields.add("instanceGroupUrls");
    openapiFields.add("ipAllocationPolicy");
    openapiFields.add("labelFingerprint");
    openapiFields.add("legacyAbac");
    openapiFields.add("location");
    openapiFields.add("locations");
    openapiFields.add("loggingConfig");
    openapiFields.add("loggingService");
    openapiFields.add("maintenancePolicy");
    openapiFields.add("masterAuth");
    openapiFields.add("masterAuthorizedNetworksConfig");
    openapiFields.add("meshCertificates");
    openapiFields.add("monitoringConfig");
    openapiFields.add("monitoringService");
    openapiFields.add("name");
    openapiFields.add("network");
    openapiFields.add("networkConfig");
    openapiFields.add("networkPolicy");
    openapiFields.add("nodeConfig");
    openapiFields.add("nodeIpv4CidrSize");
    openapiFields.add("nodePoolAutoConfig");
    openapiFields.add("nodePoolDefaults");
    openapiFields.add("nodePools");
    openapiFields.add("notificationConfig");
    openapiFields.add("parentProductConfig");
    openapiFields.add("privateClusterConfig");
    openapiFields.add("releaseChannel");
    openapiFields.add("resourceLabels");
    openapiFields.add("resourceUsageExportConfig");
    openapiFields.add("securityPostureConfig");
    openapiFields.add("selfLink");
    openapiFields.add("servicesIpv4Cidr");
    openapiFields.add("shieldedNodes");
    openapiFields.add("status");
    openapiFields.add("statusMessage");
    openapiFields.add("subnetwork");
    openapiFields.add("tpuIpv4CidrBlock");
    openapiFields.add("verticalPodAutoscaling");
    openapiFields.add("workloadIdentityConfig");
    openapiFields.add("zone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Cluster
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Cluster.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Cluster is not found in the empty JSON string", Cluster.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Cluster.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Cluster` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `addonsConfig`
      if (jsonObj.get("addonsConfig") != null && !jsonObj.get("addonsConfig").isJsonNull()) {
        AddonsConfig.validateJsonElement(jsonObj.get("addonsConfig"));
      }
      // validate the optional field `authenticatorGroupsConfig`
      if (jsonObj.get("authenticatorGroupsConfig") != null && !jsonObj.get("authenticatorGroupsConfig").isJsonNull()) {
        AuthenticatorGroupsConfig.validateJsonElement(jsonObj.get("authenticatorGroupsConfig"));
      }
      // validate the optional field `autopilot`
      if (jsonObj.get("autopilot") != null && !jsonObj.get("autopilot").isJsonNull()) {
        Autopilot.validateJsonElement(jsonObj.get("autopilot"));
      }
      // validate the optional field `autoscaling`
      if (jsonObj.get("autoscaling") != null && !jsonObj.get("autoscaling").isJsonNull()) {
        ClusterAutoscaling.validateJsonElement(jsonObj.get("autoscaling"));
      }
      // validate the optional field `binaryAuthorization`
      if (jsonObj.get("binaryAuthorization") != null && !jsonObj.get("binaryAuthorization").isJsonNull()) {
        BinaryAuthorization.validateJsonElement(jsonObj.get("binaryAuthorization"));
      }
      if ((jsonObj.get("clusterIpv4Cidr") != null && !jsonObj.get("clusterIpv4Cidr").isJsonNull()) && !jsonObj.get("clusterIpv4Cidr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clusterIpv4Cidr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clusterIpv4Cidr").toString()));
      }
      if (jsonObj.get("conditions") != null && !jsonObj.get("conditions").isJsonNull()) {
        JsonArray jsonArrayconditions = jsonObj.getAsJsonArray("conditions");
        if (jsonArrayconditions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("conditions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `conditions` to be an array in the JSON string but got `%s`", jsonObj.get("conditions").toString()));
          }

          // validate the optional field `conditions` (array)
          for (int i = 0; i < jsonArrayconditions.size(); i++) {
            StatusCondition.validateJsonElement(jsonArrayconditions.get(i));
          };
        }
      }
      // validate the optional field `confidentialNodes`
      if (jsonObj.get("confidentialNodes") != null && !jsonObj.get("confidentialNodes").isJsonNull()) {
        ConfidentialNodes.validateJsonElement(jsonObj.get("confidentialNodes"));
      }
      // validate the optional field `costManagementConfig`
      if (jsonObj.get("costManagementConfig") != null && !jsonObj.get("costManagementConfig").isJsonNull()) {
        CostManagementConfig.validateJsonElement(jsonObj.get("costManagementConfig"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("currentMasterVersion") != null && !jsonObj.get("currentMasterVersion").isJsonNull()) && !jsonObj.get("currentMasterVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentMasterVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentMasterVersion").toString()));
      }
      if ((jsonObj.get("currentNodeVersion") != null && !jsonObj.get("currentNodeVersion").isJsonNull()) && !jsonObj.get("currentNodeVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentNodeVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentNodeVersion").toString()));
      }
      // validate the optional field `databaseEncryption`
      if (jsonObj.get("databaseEncryption") != null && !jsonObj.get("databaseEncryption").isJsonNull()) {
        DatabaseEncryption.validateJsonElement(jsonObj.get("databaseEncryption"));
      }
      // validate the optional field `defaultMaxPodsConstraint`
      if (jsonObj.get("defaultMaxPodsConstraint") != null && !jsonObj.get("defaultMaxPodsConstraint").isJsonNull()) {
        MaxPodsConstraint.validateJsonElement(jsonObj.get("defaultMaxPodsConstraint"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `enableK8sBetaApis`
      if (jsonObj.get("enableK8sBetaApis") != null && !jsonObj.get("enableK8sBetaApis").isJsonNull()) {
        K8sBetaAPIConfig.validateJsonElement(jsonObj.get("enableK8sBetaApis"));
      }
      if ((jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) && !jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
      // validate the optional field `enterpriseConfig`
      if (jsonObj.get("enterpriseConfig") != null && !jsonObj.get("enterpriseConfig").isJsonNull()) {
        EnterpriseConfig.validateJsonElement(jsonObj.get("enterpriseConfig"));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      if ((jsonObj.get("expireTime") != null && !jsonObj.get("expireTime").isJsonNull()) && !jsonObj.get("expireTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expireTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expireTime").toString()));
      }
      // validate the optional field `fleet`
      if (jsonObj.get("fleet") != null && !jsonObj.get("fleet").isJsonNull()) {
        Fleet.validateJsonElement(jsonObj.get("fleet"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `identityServiceConfig`
      if (jsonObj.get("identityServiceConfig") != null && !jsonObj.get("identityServiceConfig").isJsonNull()) {
        IdentityServiceConfig.validateJsonElement(jsonObj.get("identityServiceConfig"));
      }
      if ((jsonObj.get("initialClusterVersion") != null && !jsonObj.get("initialClusterVersion").isJsonNull()) && !jsonObj.get("initialClusterVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `initialClusterVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("initialClusterVersion").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("instanceGroupUrls") != null && !jsonObj.get("instanceGroupUrls").isJsonNull() && !jsonObj.get("instanceGroupUrls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `instanceGroupUrls` to be an array in the JSON string but got `%s`", jsonObj.get("instanceGroupUrls").toString()));
      }
      // validate the optional field `ipAllocationPolicy`
      if (jsonObj.get("ipAllocationPolicy") != null && !jsonObj.get("ipAllocationPolicy").isJsonNull()) {
        IPAllocationPolicy.validateJsonElement(jsonObj.get("ipAllocationPolicy"));
      }
      if ((jsonObj.get("labelFingerprint") != null && !jsonObj.get("labelFingerprint").isJsonNull()) && !jsonObj.get("labelFingerprint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `labelFingerprint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("labelFingerprint").toString()));
      }
      // validate the optional field `legacyAbac`
      if (jsonObj.get("legacyAbac") != null && !jsonObj.get("legacyAbac").isJsonNull()) {
        LegacyAbac.validateJsonElement(jsonObj.get("legacyAbac"));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("locations") != null && !jsonObj.get("locations").isJsonNull() && !jsonObj.get("locations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `locations` to be an array in the JSON string but got `%s`", jsonObj.get("locations").toString()));
      }
      // validate the optional field `loggingConfig`
      if (jsonObj.get("loggingConfig") != null && !jsonObj.get("loggingConfig").isJsonNull()) {
        LoggingConfig.validateJsonElement(jsonObj.get("loggingConfig"));
      }
      if ((jsonObj.get("loggingService") != null && !jsonObj.get("loggingService").isJsonNull()) && !jsonObj.get("loggingService").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loggingService` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loggingService").toString()));
      }
      // validate the optional field `maintenancePolicy`
      if (jsonObj.get("maintenancePolicy") != null && !jsonObj.get("maintenancePolicy").isJsonNull()) {
        MaintenancePolicy.validateJsonElement(jsonObj.get("maintenancePolicy"));
      }
      // validate the optional field `masterAuth`
      if (jsonObj.get("masterAuth") != null && !jsonObj.get("masterAuth").isJsonNull()) {
        MasterAuth.validateJsonElement(jsonObj.get("masterAuth"));
      }
      // validate the optional field `masterAuthorizedNetworksConfig`
      if (jsonObj.get("masterAuthorizedNetworksConfig") != null && !jsonObj.get("masterAuthorizedNetworksConfig").isJsonNull()) {
        MasterAuthorizedNetworksConfig.validateJsonElement(jsonObj.get("masterAuthorizedNetworksConfig"));
      }
      // validate the optional field `meshCertificates`
      if (jsonObj.get("meshCertificates") != null && !jsonObj.get("meshCertificates").isJsonNull()) {
        MeshCertificates.validateJsonElement(jsonObj.get("meshCertificates"));
      }
      // validate the optional field `monitoringConfig`
      if (jsonObj.get("monitoringConfig") != null && !jsonObj.get("monitoringConfig").isJsonNull()) {
        MonitoringConfig.validateJsonElement(jsonObj.get("monitoringConfig"));
      }
      if ((jsonObj.get("monitoringService") != null && !jsonObj.get("monitoringService").isJsonNull()) && !jsonObj.get("monitoringService").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `monitoringService` to be a primitive type in the JSON string but got `%s`", jsonObj.get("monitoringService").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
      // validate the optional field `networkConfig`
      if (jsonObj.get("networkConfig") != null && !jsonObj.get("networkConfig").isJsonNull()) {
        NetworkConfig.validateJsonElement(jsonObj.get("networkConfig"));
      }
      // validate the optional field `networkPolicy`
      if (jsonObj.get("networkPolicy") != null && !jsonObj.get("networkPolicy").isJsonNull()) {
        NetworkPolicy.validateJsonElement(jsonObj.get("networkPolicy"));
      }
      // validate the optional field `nodeConfig`
      if (jsonObj.get("nodeConfig") != null && !jsonObj.get("nodeConfig").isJsonNull()) {
        NodeConfig.validateJsonElement(jsonObj.get("nodeConfig"));
      }
      // validate the optional field `nodePoolAutoConfig`
      if (jsonObj.get("nodePoolAutoConfig") != null && !jsonObj.get("nodePoolAutoConfig").isJsonNull()) {
        NodePoolAutoConfig.validateJsonElement(jsonObj.get("nodePoolAutoConfig"));
      }
      // validate the optional field `nodePoolDefaults`
      if (jsonObj.get("nodePoolDefaults") != null && !jsonObj.get("nodePoolDefaults").isJsonNull()) {
        NodePoolDefaults.validateJsonElement(jsonObj.get("nodePoolDefaults"));
      }
      if (jsonObj.get("nodePools") != null && !jsonObj.get("nodePools").isJsonNull()) {
        JsonArray jsonArraynodePools = jsonObj.getAsJsonArray("nodePools");
        if (jsonArraynodePools != null) {
          // ensure the json data is an array
          if (!jsonObj.get("nodePools").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `nodePools` to be an array in the JSON string but got `%s`", jsonObj.get("nodePools").toString()));
          }

          // validate the optional field `nodePools` (array)
          for (int i = 0; i < jsonArraynodePools.size(); i++) {
            NodePool.validateJsonElement(jsonArraynodePools.get(i));
          };
        }
      }
      // validate the optional field `notificationConfig`
      if (jsonObj.get("notificationConfig") != null && !jsonObj.get("notificationConfig").isJsonNull()) {
        NotificationConfig.validateJsonElement(jsonObj.get("notificationConfig"));
      }
      // validate the optional field `parentProductConfig`
      if (jsonObj.get("parentProductConfig") != null && !jsonObj.get("parentProductConfig").isJsonNull()) {
        ParentProductConfig.validateJsonElement(jsonObj.get("parentProductConfig"));
      }
      // validate the optional field `privateClusterConfig`
      if (jsonObj.get("privateClusterConfig") != null && !jsonObj.get("privateClusterConfig").isJsonNull()) {
        PrivateClusterConfig.validateJsonElement(jsonObj.get("privateClusterConfig"));
      }
      // validate the optional field `releaseChannel`
      if (jsonObj.get("releaseChannel") != null && !jsonObj.get("releaseChannel").isJsonNull()) {
        ReleaseChannel.validateJsonElement(jsonObj.get("releaseChannel"));
      }
      // validate the optional field `resourceUsageExportConfig`
      if (jsonObj.get("resourceUsageExportConfig") != null && !jsonObj.get("resourceUsageExportConfig").isJsonNull()) {
        ResourceUsageExportConfig.validateJsonElement(jsonObj.get("resourceUsageExportConfig"));
      }
      // validate the optional field `securityPostureConfig`
      if (jsonObj.get("securityPostureConfig") != null && !jsonObj.get("securityPostureConfig").isJsonNull()) {
        SecurityPostureConfig.validateJsonElement(jsonObj.get("securityPostureConfig"));
      }
      if ((jsonObj.get("selfLink") != null && !jsonObj.get("selfLink").isJsonNull()) && !jsonObj.get("selfLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `selfLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("selfLink").toString()));
      }
      if ((jsonObj.get("servicesIpv4Cidr") != null && !jsonObj.get("servicesIpv4Cidr").isJsonNull()) && !jsonObj.get("servicesIpv4Cidr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `servicesIpv4Cidr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("servicesIpv4Cidr").toString()));
      }
      // validate the optional field `shieldedNodes`
      if (jsonObj.get("shieldedNodes") != null && !jsonObj.get("shieldedNodes").isJsonNull()) {
        ShieldedNodes.validateJsonElement(jsonObj.get("shieldedNodes"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("statusMessage") != null && !jsonObj.get("statusMessage").isJsonNull()) && !jsonObj.get("statusMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusMessage").toString()));
      }
      if ((jsonObj.get("subnetwork") != null && !jsonObj.get("subnetwork").isJsonNull()) && !jsonObj.get("subnetwork").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subnetwork` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subnetwork").toString()));
      }
      if ((jsonObj.get("tpuIpv4CidrBlock") != null && !jsonObj.get("tpuIpv4CidrBlock").isJsonNull()) && !jsonObj.get("tpuIpv4CidrBlock").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tpuIpv4CidrBlock` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tpuIpv4CidrBlock").toString()));
      }
      // validate the optional field `verticalPodAutoscaling`
      if (jsonObj.get("verticalPodAutoscaling") != null && !jsonObj.get("verticalPodAutoscaling").isJsonNull()) {
        VerticalPodAutoscaling.validateJsonElement(jsonObj.get("verticalPodAutoscaling"));
      }
      // validate the optional field `workloadIdentityConfig`
      if (jsonObj.get("workloadIdentityConfig") != null && !jsonObj.get("workloadIdentityConfig").isJsonNull()) {
        WorkloadIdentityConfig.validateJsonElement(jsonObj.get("workloadIdentityConfig"));
      }
      if ((jsonObj.get("zone") != null && !jsonObj.get("zone").isJsonNull()) && !jsonObj.get("zone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Cluster.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Cluster' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Cluster> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Cluster.class));

       return (TypeAdapter<T>) new TypeAdapter<Cluster>() {
           @Override
           public void write(JsonWriter out, Cluster value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Cluster read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Cluster given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Cluster
   * @throws IOException if the JSON string is invalid with respect to Cluster
   */
  public static Cluster fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Cluster.class);
  }

  /**
   * Convert an instance of Cluster to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

