/*
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConfidentialNodes;
import org.openapitools.client.model.FastSocket;
import org.openapitools.client.model.GcfsConfig;
import org.openapitools.client.model.LinuxNodeConfig;
import org.openapitools.client.model.NetworkTags;
import org.openapitools.client.model.NodeKubeletConfig;
import org.openapitools.client.model.NodeLabels;
import org.openapitools.client.model.NodeNetworkConfig;
import org.openapitools.client.model.NodePoolLoggingConfig;
import org.openapitools.client.model.NodeTaints;
import org.openapitools.client.model.QueuedProvisioning;
import org.openapitools.client.model.ResourceLabels;
import org.openapitools.client.model.ResourceManagerTags;
import org.openapitools.client.model.UpgradeSettings;
import org.openapitools.client.model.VirtualNIC;
import org.openapitools.client.model.WindowsNodeConfig;
import org.openapitools.client.model.WorkloadMetadataConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateNodePoolRequest
 */
public class UpdateNodePoolRequestTest {
    private final UpdateNodePoolRequest model = new UpdateNodePoolRequest();

    /**
     * Model tests for UpdateNodePoolRequest
     */
    @Test
    public void testUpdateNodePoolRequest() {
        // TODO: test UpdateNodePoolRequest
    }

    /**
     * Test the property 'clusterId'
     */
    @Test
    public void clusterIdTest() {
        // TODO: test clusterId
    }

    /**
     * Test the property 'confidentialNodes'
     */
    @Test
    public void confidentialNodesTest() {
        // TODO: test confidentialNodes
    }

    /**
     * Test the property 'diskSizeGb'
     */
    @Test
    public void diskSizeGbTest() {
        // TODO: test diskSizeGb
    }

    /**
     * Test the property 'diskType'
     */
    @Test
    public void diskTypeTest() {
        // TODO: test diskType
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'fastSocket'
     */
    @Test
    public void fastSocketTest() {
        // TODO: test fastSocket
    }

    /**
     * Test the property 'gcfsConfig'
     */
    @Test
    public void gcfsConfigTest() {
        // TODO: test gcfsConfig
    }

    /**
     * Test the property 'gvnic'
     */
    @Test
    public void gvnicTest() {
        // TODO: test gvnic
    }

    /**
     * Test the property 'imageType'
     */
    @Test
    public void imageTypeTest() {
        // TODO: test imageType
    }

    /**
     * Test the property 'kubeletConfig'
     */
    @Test
    public void kubeletConfigTest() {
        // TODO: test kubeletConfig
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'linuxNodeConfig'
     */
    @Test
    public void linuxNodeConfigTest() {
        // TODO: test linuxNodeConfig
    }

    /**
     * Test the property 'locations'
     */
    @Test
    public void locationsTest() {
        // TODO: test locations
    }

    /**
     * Test the property 'loggingConfig'
     */
    @Test
    public void loggingConfigTest() {
        // TODO: test loggingConfig
    }

    /**
     * Test the property 'machineType'
     */
    @Test
    public void machineTypeTest() {
        // TODO: test machineType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nodeNetworkConfig'
     */
    @Test
    public void nodeNetworkConfigTest() {
        // TODO: test nodeNetworkConfig
    }

    /**
     * Test the property 'nodePoolId'
     */
    @Test
    public void nodePoolIdTest() {
        // TODO: test nodePoolId
    }

    /**
     * Test the property 'nodeVersion'
     */
    @Test
    public void nodeVersionTest() {
        // TODO: test nodeVersion
    }

    /**
     * Test the property 'projectId'
     */
    @Test
    public void projectIdTest() {
        // TODO: test projectId
    }

    /**
     * Test the property 'queuedProvisioning'
     */
    @Test
    public void queuedProvisioningTest() {
        // TODO: test queuedProvisioning
    }

    /**
     * Test the property 'resourceLabels'
     */
    @Test
    public void resourceLabelsTest() {
        // TODO: test resourceLabels
    }

    /**
     * Test the property 'resourceManagerTags'
     */
    @Test
    public void resourceManagerTagsTest() {
        // TODO: test resourceManagerTags
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'taints'
     */
    @Test
    public void taintsTest() {
        // TODO: test taints
    }

    /**
     * Test the property 'upgradeSettings'
     */
    @Test
    public void upgradeSettingsTest() {
        // TODO: test upgradeSettings
    }

    /**
     * Test the property 'windowsNodeConfig'
     */
    @Test
    public void windowsNodeConfigTest() {
        // TODO: test windowsNodeConfig
    }

    /**
     * Test the property 'workloadMetadataConfig'
     */
    @Test
    public void workloadMetadataConfigTest() {
        // TODO: test workloadMetadataConfig
    }

    /**
     * Test the property 'zone'
     */
    @Test
    public void zoneTest() {
        // TODO: test zone
    }

}
