/*
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BestEffortProvisioning;
import org.openapitools.client.model.MaxPodsConstraint;
import org.openapitools.client.model.NodeConfig;
import org.openapitools.client.model.NodeManagement;
import org.openapitools.client.model.NodeNetworkConfig;
import org.openapitools.client.model.NodePoolAutoscaling;
import org.openapitools.client.model.PlacementPolicy;
import org.openapitools.client.model.QueuedProvisioning;
import org.openapitools.client.model.StatusCondition;
import org.openapitools.client.model.UpdateInfo;
import org.openapitools.client.model.UpgradeSettings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NodePool
 */
public class NodePoolTest {
    private final NodePool model = new NodePool();

    /**
     * Model tests for NodePool
     */
    @Test
    public void testNodePool() {
        // TODO: test NodePool
    }

    /**
     * Test the property 'autoscaling'
     */
    @Test
    public void autoscalingTest() {
        // TODO: test autoscaling
    }

    /**
     * Test the property 'bestEffortProvisioning'
     */
    @Test
    public void bestEffortProvisioningTest() {
        // TODO: test bestEffortProvisioning
    }

    /**
     * Test the property 'conditions'
     */
    @Test
    public void conditionsTest() {
        // TODO: test conditions
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'initialNodeCount'
     */
    @Test
    public void initialNodeCountTest() {
        // TODO: test initialNodeCount
    }

    /**
     * Test the property 'instanceGroupUrls'
     */
    @Test
    public void instanceGroupUrlsTest() {
        // TODO: test instanceGroupUrls
    }

    /**
     * Test the property 'locations'
     */
    @Test
    public void locationsTest() {
        // TODO: test locations
    }

    /**
     * Test the property 'management'
     */
    @Test
    public void managementTest() {
        // TODO: test management
    }

    /**
     * Test the property 'maxPodsConstraint'
     */
    @Test
    public void maxPodsConstraintTest() {
        // TODO: test maxPodsConstraint
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'networkConfig'
     */
    @Test
    public void networkConfigTest() {
        // TODO: test networkConfig
    }

    /**
     * Test the property 'placementPolicy'
     */
    @Test
    public void placementPolicyTest() {
        // TODO: test placementPolicy
    }

    /**
     * Test the property 'podIpv4CidrSize'
     */
    @Test
    public void podIpv4CidrSizeTest() {
        // TODO: test podIpv4CidrSize
    }

    /**
     * Test the property 'queuedProvisioning'
     */
    @Test
    public void queuedProvisioningTest() {
        // TODO: test queuedProvisioning
    }

    /**
     * Test the property 'selfLink'
     */
    @Test
    public void selfLinkTest() {
        // TODO: test selfLink
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'updateInfo'
     */
    @Test
    public void updateInfoTest() {
        // TODO: test updateInfo
    }

    /**
     * Test the property 'upgradeSettings'
     */
    @Test
    public void upgradeSettingsTest() {
        // TODO: test upgradeSettings
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
