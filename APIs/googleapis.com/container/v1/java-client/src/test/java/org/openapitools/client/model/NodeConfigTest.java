/*
 * Kubernetes Engine API
 * Builds and manages container-based applications, powered by the open source Kubernetes technology.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AcceleratorConfig;
import org.openapitools.client.model.AdvancedMachineFeatures;
import org.openapitools.client.model.ConfidentialNodes;
import org.openapitools.client.model.EphemeralStorageLocalSsdConfig;
import org.openapitools.client.model.FastSocket;
import org.openapitools.client.model.GcfsConfig;
import org.openapitools.client.model.LinuxNodeConfig;
import org.openapitools.client.model.LocalNvmeSsdBlockConfig;
import org.openapitools.client.model.NodeKubeletConfig;
import org.openapitools.client.model.NodePoolLoggingConfig;
import org.openapitools.client.model.NodeTaint;
import org.openapitools.client.model.ReservationAffinity;
import org.openapitools.client.model.ResourceManagerTags;
import org.openapitools.client.model.SandboxConfig;
import org.openapitools.client.model.SecondaryBootDisk;
import org.openapitools.client.model.ShieldedInstanceConfig;
import org.openapitools.client.model.SoleTenantConfig;
import org.openapitools.client.model.VirtualNIC;
import org.openapitools.client.model.WindowsNodeConfig;
import org.openapitools.client.model.WorkloadMetadataConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NodeConfig
 */
public class NodeConfigTest {
    private final NodeConfig model = new NodeConfig();

    /**
     * Model tests for NodeConfig
     */
    @Test
    public void testNodeConfig() {
        // TODO: test NodeConfig
    }

    /**
     * Test the property 'accelerators'
     */
    @Test
    public void acceleratorsTest() {
        // TODO: test accelerators
    }

    /**
     * Test the property 'advancedMachineFeatures'
     */
    @Test
    public void advancedMachineFeaturesTest() {
        // TODO: test advancedMachineFeatures
    }

    /**
     * Test the property 'bootDiskKmsKey'
     */
    @Test
    public void bootDiskKmsKeyTest() {
        // TODO: test bootDiskKmsKey
    }

    /**
     * Test the property 'confidentialNodes'
     */
    @Test
    public void confidentialNodesTest() {
        // TODO: test confidentialNodes
    }

    /**
     * Test the property 'diskSizeGb'
     */
    @Test
    public void diskSizeGbTest() {
        // TODO: test diskSizeGb
    }

    /**
     * Test the property 'diskType'
     */
    @Test
    public void diskTypeTest() {
        // TODO: test diskType
    }

    /**
     * Test the property 'enableConfidentialStorage'
     */
    @Test
    public void enableConfidentialStorageTest() {
        // TODO: test enableConfidentialStorage
    }

    /**
     * Test the property 'ephemeralStorageLocalSsdConfig'
     */
    @Test
    public void ephemeralStorageLocalSsdConfigTest() {
        // TODO: test ephemeralStorageLocalSsdConfig
    }

    /**
     * Test the property 'fastSocket'
     */
    @Test
    public void fastSocketTest() {
        // TODO: test fastSocket
    }

    /**
     * Test the property 'gcfsConfig'
     */
    @Test
    public void gcfsConfigTest() {
        // TODO: test gcfsConfig
    }

    /**
     * Test the property 'gvnic'
     */
    @Test
    public void gvnicTest() {
        // TODO: test gvnic
    }

    /**
     * Test the property 'imageType'
     */
    @Test
    public void imageTypeTest() {
        // TODO: test imageType
    }

    /**
     * Test the property 'kubeletConfig'
     */
    @Test
    public void kubeletConfigTest() {
        // TODO: test kubeletConfig
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'linuxNodeConfig'
     */
    @Test
    public void linuxNodeConfigTest() {
        // TODO: test linuxNodeConfig
    }

    /**
     * Test the property 'localNvmeSsdBlockConfig'
     */
    @Test
    public void localNvmeSsdBlockConfigTest() {
        // TODO: test localNvmeSsdBlockConfig
    }

    /**
     * Test the property 'localSsdCount'
     */
    @Test
    public void localSsdCountTest() {
        // TODO: test localSsdCount
    }

    /**
     * Test the property 'loggingConfig'
     */
    @Test
    public void loggingConfigTest() {
        // TODO: test loggingConfig
    }

    /**
     * Test the property 'machineType'
     */
    @Test
    public void machineTypeTest() {
        // TODO: test machineType
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'minCpuPlatform'
     */
    @Test
    public void minCpuPlatformTest() {
        // TODO: test minCpuPlatform
    }

    /**
     * Test the property 'nodeGroup'
     */
    @Test
    public void nodeGroupTest() {
        // TODO: test nodeGroup
    }

    /**
     * Test the property 'oauthScopes'
     */
    @Test
    public void oauthScopesTest() {
        // TODO: test oauthScopes
    }

    /**
     * Test the property 'preemptible'
     */
    @Test
    public void preemptibleTest() {
        // TODO: test preemptible
    }

    /**
     * Test the property 'reservationAffinity'
     */
    @Test
    public void reservationAffinityTest() {
        // TODO: test reservationAffinity
    }

    /**
     * Test the property 'resourceLabels'
     */
    @Test
    public void resourceLabelsTest() {
        // TODO: test resourceLabels
    }

    /**
     * Test the property 'resourceManagerTags'
     */
    @Test
    public void resourceManagerTagsTest() {
        // TODO: test resourceManagerTags
    }

    /**
     * Test the property 'sandboxConfig'
     */
    @Test
    public void sandboxConfigTest() {
        // TODO: test sandboxConfig
    }

    /**
     * Test the property 'secondaryBootDisks'
     */
    @Test
    public void secondaryBootDisksTest() {
        // TODO: test secondaryBootDisks
    }

    /**
     * Test the property 'serviceAccount'
     */
    @Test
    public void serviceAccountTest() {
        // TODO: test serviceAccount
    }

    /**
     * Test the property 'shieldedInstanceConfig'
     */
    @Test
    public void shieldedInstanceConfigTest() {
        // TODO: test shieldedInstanceConfig
    }

    /**
     * Test the property 'soleTenantConfig'
     */
    @Test
    public void soleTenantConfigTest() {
        // TODO: test soleTenantConfig
    }

    /**
     * Test the property 'spot'
     */
    @Test
    public void spotTest() {
        // TODO: test spot
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'taints'
     */
    @Test
    public void taintsTest() {
        // TODO: test taints
    }

    /**
     * Test the property 'windowsNodeConfig'
     */
    @Test
    public void windowsNodeConfigTest() {
        // TODO: test windowsNodeConfig
    }

    /**
     * Test the property 'workloadMetadataConfig'
     */
    @Test
    public void workloadMetadataConfigTest() {
        // TODO: test workloadMetadataConfig
    }

}
